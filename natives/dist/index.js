import { Vector3, Entity, Ped } from '@risinglife/redm-shared';
/**
 * Hash: 0x8CBE916CFC64AD5C | ApiSet: undefined
 */
export function areLoadCoverAnimsLoaded(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return AreLoadCoverAnimsLoaded(_ped);
}
/**
 * Hash: 0x975BD6351648935F | ApiSet: undefined
 */
export function addScriptedCoverPoint() {
    return AddScriptedCoverPoint();
}
/**
 * Hash: 0xC276FE69DDA22BAD | ApiSet: undefined
 */
export function doesCoverPointExist(handle) {
    return DoesCoverPointExist(handle);
}
/**
 * ```
 * 1 = In cover while crouched
 * 2 = In cover while standing
 * 3 = Not in cover
 * ```
 * Hash: 0x5F5B1B7E8E8F94C6 | ApiSet: undefined
 */
export function getCoverPointStateFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCoverPointStateFromPed(_ped);
}
/**
 * Hash: 0x3C7A9C2C953128FE | ApiSet: undefined
 */
export function _0x3C7A9C2C953128FE(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3C7A9C2C953128FE', _ped);
}
/**
 * ```
 * weaponHash can also be -1
 * ```
 * Hash: 0x140B3CB1D424A945 | ApiSet: undefined
 */
export function _0x140B3CB1D424A945(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    Citizen.invokeNative('0x140B3CB1D424A945', _ped, weaponHash);
}
/**
 * ```
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 * ```
 * Hash: 0x64340DC208D671D5 | ApiSet: undefined
 */
export function _0x64340DC208D671D5(coverLayer) {
    Citizen.invokeNative('0x64340DC208D671D5', coverLayer);
}
/**
 * Hash: 0x53E4D0C079CA6855 | ApiSet: undefined
 */
export function _0x53E4D0C079CA6855(handle) {
    return Citizen.invokeNative('0x53E4D0C079CA6855', handle);
}
/**
 * ```
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 * ```
 * Hash: 0x7A1FDCF35EAA140F | ApiSet: undefined
 */
export function _0x7A1FDCF35EAA140F(coverLayer) {
    Citizen.invokeNative('0x7A1FDCF35EAA140F', coverLayer);
}
/**
 * ```
 * args: f_0 = Volume Handle, f_2 = integer (-1, 32 used in R* Scripts)
 * ```
 * Hash: 0x733077295AB51304 | ApiSet: undefined
 */
export function _0x733077295AB51304() {
    return Citizen.invokeNative('0x733077295AB51304');
}
/**
 * Hash: 0xEBA51A294C73292E | ApiSet: undefined
 */
export function _0xEBA51A294C73292E() {
    return Citizen.invokeNative('0xEBA51A294C73292E');
}
/**
 * Hash: 0x957D7E750216D74B | ApiSet: undefined
 */
export function _0x957D7E750216D74B(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x957D7E750216D74B', _ped);
}
/**
 * ```
 * Stops running cover anims and releases them
 * _STOP_RENDERING_* - _STOP_SCRIPTED*
 * ```
 * Hash: 0x1A7A802B2301EDC0 | ApiSet: undefined
 */
export function stopRunningCoverAnims(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopRunningCoverAnims(_ped);
}
/**
 * ```
 * Makes ped flinch (if in cover) like they have been shot at
 * ```
 * Hash: 0x2A31D13C5F021D0D | ApiSet: undefined
 */
export function requestFlinchCoverAnim(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestFlinchCoverAnim(_ped);
}
/**
 * Hash: 0x4972A022AE6DAFA1 | ApiSet: undefined
 */
export function taskEnterCover(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskEnterCover(_ped);
}
/**
 * Hash: 0x89783FDDF079C88D | ApiSet: undefined
 */
export function taskAiSeekCoverToCoverPoint() {
    return TaskAiSeekCoverToCoverPoint();
}
/**
 * Hash: 0x2BC4A6D92D140112 | ApiSet: undefined
 */
export function taskExitCover(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskExitCover(_ped);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0xFFEC4B0A1A3ED515 | ApiSet: undefined
 */
export function getPedInTransportSeat(transportEntity, seatIndex) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return GetPedInTransportSeat(_transportEntity, seatIndex);
}
/**
 * ```
 * See _SET_TRANSPORT_USAGE_FLAGS
 * ```
 * Hash: 0xE195C5A82156321D | ApiSet: undefined
 */
export function getTransportUsageFlags(transportEntity) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return GetTransportUsageFlags(_transportEntity);
}
/**
 * ```
 * flagId: see SET_TRANSPORT_CONFIG_FLAG
 * ```
 * Hash: 0xF382C92CCC1CCDBC | ApiSet: undefined
 */
export function getTransportConfigFlag(transportEntity, flagId, p2) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return GetTransportConfigFlag(_transportEntity, flagId, p2);
}
/**
 * Hash: 0x619E63980BFC0096 | ApiSet: undefined
 */
export function isPedEnteringTransport(ped, transportEntity, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return IsPedEnteringTransport(_ped, _transportEntity, p2);
}
/**
 * Hash: 0x660639BC60157048 | ApiSet: undefined
 */
export function isPedExitingTransport(ped, transportEntity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return IsPedExitingTransport(_ped, _transportEntity);
}
/**
 * Hash: 0xDC44F405A6B98D03 | ApiSet: undefined
 */
export function isPedOnTransportSeat(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedOnTransportSeat(_ped, p1);
}
/**
 * ```
 * Checks if ped is placed on target transportEntity
 * ```
 * Hash: 0x159EF5B6EDCE00E8 | ApiSet: undefined
 */
export function isPedOnTransportEntity(ped, transportEntity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return IsPedOnTransportEntity(_ped, _transportEntity);
}
/**
 * Hash: 0x2E2E06023D07631E | ApiSet: undefined
 */
export function isTransportSeatOccupied(transportEntity, seatIndex) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return IsTransportSeatOccupied(_transportEntity, seatIndex);
}
/**
 * ```
 * Called together with IS_VEHICLE_SEAT_FREE
 * ```
 * Hash: 0x43FF27FC1829C202 | ApiSet: undefined
 */
export function isTransportSeatFree(transportEntity, seatIndex) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    return IsTransportSeatFree(_transportEntity, seatIndex);
}
/**
 * Hash: 0x4B6C9A43F7D9109B | ApiSet: undefined
 */
export function _0x4B6C9A43F7D9109B(p0, p1) {
    Citizen.invokeNative('0x4B6C9A43F7D9109B', p0, p1);
}
/**
 * ```
 * _SET_TRANSPORT_*
 * ```
 * Hash: 0x4248AB2EEB3C75AD | ApiSet: undefined
 */
export function _0x4248AB2EEB3C75AD(transportEntity, ped, p2) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x4248AB2EEB3C75AD', _transportEntity, _ped, p2);
}
/**
 * ```
 * _SET_TRANSPORT_*
 * ```
 * Hash: 0x8C8371EDFAF014A0 | ApiSet: undefined
 */
export function _0x8C8371EDFAF014A0(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8C8371EDFAF014A0', _ped, p1);
}
/**
 * ```
 * _CLEAR_A*
 * ```
 * Hash: 0x5639FBEA922788DA | ApiSet: undefined
 */
export function _0x5639FBEA922788DA(transportEntity) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    Citizen.invokeNative('0x5639FBEA922788DA', _transportEntity);
}
/**
 * Hash: 0x67F7CEAC2391E114 | ApiSet: undefined
 */
export function setAiCanUseTransport(transportEntity, state) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetAiCanUseTransport(_transportEntity, state);
}
/**
 * ```
 * _SET_TRANSPORT_*
 * ```
 * Hash: 0xF8C20282B237E3F7 | ApiSet: undefined
 */
export function _0xF8C20282B237E3F7(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF8C20282B237E3F7', _ped);
}
/**
 * Hash: 0x8886D83A430537FD | ApiSet: undefined
 */
export function setPedOffTransportSeat(ped, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedOffTransportSeat(_ped, flags);
}
/**
 * ```
 * seat: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0xE588B5A8A005CB5E | ApiSet: undefined
 */
export function setPedOnTransportSeat(ped, transportEntity, seat, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetPedOnTransportSeat(_ped, _transportEntity, seat, flags);
}
/**
 * Hash: 0xB7079F4C72896756 | ApiSet: undefined
 */
export function setPedUseTransportSeatPreference(ped, transportEntity, preferenceSlot, p3, seatIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetPedUseTransportSeatPreference(_ped, _transportEntity, preferenceSlot, p3, seatIndex);
}
/**
 * Hash: 0xDD0660C997DE94FD | ApiSet: undefined
 */
export function setTransportAccessibleSeatFlags(transportEntity, flags) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetTransportAccessibleSeatFlags(_transportEntity, flags);
}
/**
 * ```
 * flagId:
 * enum eTransportConfigFlags
 * {
 * TCF_NotConsideredForEntryByLocalPlayer,
 * TCF_0xB78D6624,
 * TCF_0xA9700425,
 * TCF_0x8D7E4641,
 * TCF_0xF24BAA1F,
 * TCF_0x63B77935,
 * TCF_NotConsideredForEntryByAllPlayers,
 * TCF_0xD17A2AFD,
 * TCF_0xD4E4FDD5,
 * TCF_0x8227C929,
 * TCF_0x812C1070,
 * TCF_0x0E1AB26F,
 * TCF_0xBF4EC863,
 * TCF_0x75660C36,
 * TCF_0xA2539E20,
 * TCF_0x9162C633,
 * TCF_DisableHonorModifiers,
 * TCF_0xF9E71CB6,
 * TCF_0x933ECD3F,
 * TCF_0x18513A34
 * };
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
 * ```
 * Hash: 0xBA8818212633500A | ApiSet: undefined
 */
export function setTransportConfigFlag(transportEntity, flagId, value) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetTransportConfigFlag(_transportEntity, flagId, value);
}
/**
 * Hash: 0x13F138225C202F66 | ApiSet: undefined
 */
export function setTransportPrioritySeat(transportEntity, seatIndex) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetTransportPrioritySeat(_transportEntity, seatIndex);
}
/**
 * Hash: 0xAEE3ADD08829CB6F | ApiSet: undefined
 */
export function taskEnterTransport() {
    return TaskEnterTransport();
}
/**
 * ```
 * enum eTransportUsageFlags
 * {
 * TUF_INVALID = 0,
 * TUF_ALLOW_DRIVER_ME = (1 << 0),
 * TUF_ALLOW_DRIVER_GANG = (1 << 1),
 * TUF_ALLOW_DRIVER_CREW = (1 << 2),
 * TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
 * TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
 * TUF_ALLOW_PASSENGER_ME = (1 << 5),
 * TUF_ALLOW_PASSENGER_GANG = (1 << 6),
 * TUF_ALLOW_PASSENGER_CREW = (1 << 7),
 * TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
 * TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
 * TUF_ALLOW_ACCESS_AI = (1 << 10)
 * };
 * ```
 * Hash: 0xE2487779957FE897 | ApiSet: undefined
 */
export function setTransportUsageFlags(transportEntity, flags) {
    const _transportEntity = transportEntity instanceof Entity ? transportEntity.handle() : transportEntity;
    SetTransportUsageFlags(_transportEntity, flags);
}
/**
 * Hash: 0xC273A5B8488F7838 | ApiSet: undefined
 */
export function taskExitTransport() {
    return TaskExitTransport();
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x75415EE0CB583760 | ApiSet: undefined
 */
export function addAttributePoints(ped, attributeIndex, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddAttributePoints(_ped, attributeIndex, p2);
}
/**
 * ```
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 * Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
 * ```
 * Hash: 0x4AF5A4C7B9157D14 | ApiSet: undefined
 */
export function enableAttributeCoreOverpower(ped, coreIndex, value, makeSound) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EnableAttributeCoreOverpower(_ped, coreIndex, value, makeSound);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0xF8DAC3D85636C241 | ApiSet: undefined
 */
export function disableAttributeOverpower(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DisableAttributeOverpower(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0xF6A7C08DF2E28B28 | ApiSet: undefined
 */
export function enableAttributeOverpower(ped, attributeIndex, value, makeSound) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EnableAttributeOverpower(_ped, attributeIndex, value, makeSound);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x147149F2E909323C | ApiSet: undefined
 */
export function getAttributeBaseRank(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeBaseRank(_ped, attributeIndex);
}
/**
 * Hash: 0xB429F58803D285B1 | ApiSet: undefined
 */
export function getAttributeCoreOverpowerSecondsLeft(ped, coreIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeCoreOverpowerSecondsLeft(_ped, coreIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x0EFA71F4B4330E04 | ApiSet: undefined
 */
export function getAttributeBonusRank(ped, coreIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeBonusRank(_ped, coreIndex);
}
/**
 * Hash: 0x4C9F782180712742 | ApiSet: undefined
 */
export function getAttributeOverpowerSecondsLeft(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeOverpowerSecondsLeft(_ped, attributeIndex);
}
/**
 * ```
 * Gets the ped's core value on a scale of 0 to 100.
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 * ```
 * Hash: 0x36731AC041289BB1 | ApiSet: undefined
 */
export function getAttributeCoreValue(ped, coreIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeCoreValue(_ped, coreIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0xA4C8E23E29040DE0 | ApiSet: undefined
 */
export function getAttributeRank(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributeRank(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x219DA04BAA9CB065 | ApiSet: undefined
 */
export function getAttributePoints(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAttributePoints(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x94A7F191DB49A44D | ApiSet: undefined
 */
export function getDefaultAttributePointsNeededForRank(modelHash, attributeIndex, rank) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetDefaultAttributePointsNeededForRank(modelHash, attributeIndex, rank);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x958DD43D41F89A47 | ApiSet: undefined
 */
export function getDefaultAttributeRank(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetDefaultAttributeRank(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x7C059C55AD940CB4 | ApiSet: undefined
 */
export function getDefaultMaxAttributeRank(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetDefaultMaxAttributeRank(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x223BF310F854871C | ApiSet: undefined
 */
export function getMaxAttributePoints(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMaxAttributePoints(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x704674A0535A471D | ApiSet: undefined
 */
export function getMaxAttributeRank(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMaxAttributeRank(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex:
 * enum ePedAttribute
 * {
 * PA_HEALTH,
 * PA_STAMINA,
 * PA_SPECIALABILITY,
 * PA_COURAGE,
 * PA_AGILITY,
 * PA_SPEED,
 * PA_ACCELERATION,
 * PA_BONDING,
 * SA_HUNGER,
 * SA_FATIGUED,
 * SA_INEBRIATED,
 * SA_POISONED,
 * SA_BODYHEAT,
 * SA_BODYWEIGHT,
 * SA_OVERFED,
 * SA_SICKNESS,
 * SA_DIRTINESS,
 * SA_DIRTINESSHAT,
 * MTR_STRENGTH,
 * MTR_GRIT,
 * MTR_INSTINCT,
 * PA_UNRULINESS,
 * SA_DIRTINESSSKIN
 * };
 * ```
 * Hash: 0x5DA12E025D47D4E5 | ApiSet: undefined
 */
export function setAttributeBaseRank(ped, attributeIndex, newValue) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAttributeBaseRank(_ped, attributeIndex, newValue);
}
/**
 * Hash: 0x200373A8DF081F22 | ApiSet: undefined
 */
export function isAttributeCoreOverpowered(ped, coreIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAttributeCoreOverpowered(_ped, coreIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x103C2F885ABEB00B | ApiSet: undefined
 */
export function isAttributeOverpowered(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAttributeOverpowered(_ped, attributeIndex);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x920F9488BD115EFB | ApiSet: undefined
 */
export function setAttributeBonusRank(ped, attributeIndex, newValue) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAttributeBonusRank(_ped, attributeIndex, newValue);
}
/**
 * ```
 * coreIndex:
 * enum eAttributeCore
 * {
 * ATTRIBUTE_CORE_HEALTH,
 * ATTRIBUTE_CORE_STAMINA,
 * ATTRIBUTE_CORE_DEADEYE
 * };
 * ```
 * Hash: 0xC6258F41D86676E0 | ApiSet: undefined
 */
export function setAttributeCoreValue(ped, coreIndex, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAttributeCoreValue(_ped, coreIndex, value);
}
/**
 * ```
 * Displays status effects on core icons (includes warnings).
 * enum eUiRpgStatusEffect
 * {
 * STATUS_NONE,
 * STATUS_COLD,
 * STATUS_HOT,
 * STATUS_OVERFED,
 * STATUS_DIRTY,
 * STATUS_SNAKE_VENOM,
 * STATUS_ARROW_WOUNDED,
 * STATUS_ARROW_DRAINED,
 * STATUS_ARROW_DISORIENTED,
 * STATUS_ARROW_TRACKED,
 * STATUS_ARROW_CONFUSION,
 * STATUS_UNDERWEIGHT,
 * STATUS_OVERWEIGHT,
 * STATUS_SICK_1,
 * STATUS_SICK_2,
 * STATUS_PREDATOR_INVULNERABLE
 * };
 * ```
 * Hash: 0xA4D3A1C008F250DF | ApiSet: undefined
 */
export function setStatusEffectCoreIcon(statusEffectType) {
    SetStatusEffectCoreIcon(statusEffectType);
}
/**
 * ```
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 * ```
 * Hash: 0x09A59688C26D88DF | ApiSet: undefined
 */
export function setAttributePoints(ped, attributeIndex, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAttributePoints(_ped, attributeIndex, p2);
}
/**
 * ```
 * Params: p1 is related to satchel_category
 * ```
 * Hash: 0x7E2C766ADB2C5F1A | ApiSet: undefined
 */
export function startItemPreview(p0, p1) {
    StartItemPreview(p0, p1);
}
/**
 * ```
 * Starts core periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 * ```
 * Hash: 0xFB6E111908502871 | ApiSet: undefined
 */
export function setStatusEffectPeriodicIcon(statusEffectType) {
    SetStatusEffectPeriodicIcon(statusEffectType);
}
/**
 * Hash: 0xD962F8579D702DB5 | ApiSet: undefined
 */
export function stopItemPreview() {
    StopItemPreview();
}
/**
 * ```
 * Stops periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 * ```
 * Hash: 0x3FC4C027FD0936F4 | ApiSet: undefined
 */
export function stopStatusEffectPeriodicIcon(statusEffectType) {
    StopStatusEffectPeriodicIcon(statusEffectType);
}
/**
 * Hash: 0x153973AB99FE8980 | ApiSet: undefined
 */
export function addEntityToAudioMixGroup(entity, groupName, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AddEntityToAudioMixGroup(_entity, groupName, p2);
}
/**
 * Hash: 0x845FFC3A4FEEFA3E | ApiSet: undefined
 */
export function audioIsMusicPlaying() {
    return AudioIsMusicPlaying();
}
/**
 * Hash: 0x95D9F4BC443956E7 | ApiSet: undefined
 */
export function addPedToConversation(convoRoot, ped, characterName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddPedToConversation(convoRoot, _ped, characterName);
}
/**
 * Hash: 0x374F0E716BFCDE82 | ApiSet: undefined
 */
export function audioTriggerExplosion(name, position) {
    AudioTriggerExplosion(name, position.x, position.y, position.z);
}
/**
 * Hash: 0x6378A235374B852F | ApiSet: undefined
 */
export function blockSpeechContext(context, block) {
    BlockSpeechContext(context, block);
}
/**
 * Hash: 0x120C48C614909FA4 | ApiSet: undefined
 */
export function clearAmbientZoneListState(ambientZone, p1) {
    ClearAmbientZoneListState(ambientZone, p1);
}
/**
 * Hash: 0x5B17A90291133DA5 | ApiSet: undefined
 */
export function cancelMusicEvent(eventName) {
    return CancelMusicEvent(eventName);
}
/**
 * Hash: 0x33D51F801CB16E4F | ApiSet: undefined
 */
export function clearConversationHistory() {
    ClearConversationHistory();
}
/**
 * Hash: 0x218DD44AAAC964FF | ApiSet: undefined
 */
export function clearAmbientZoneState(zoneName, p1) {
    ClearAmbientZoneState(zoneName, p1);
}
/**
 * Hash: 0xEF51242E35242B47 | ApiSet: undefined
 */
export function clearConversationHistoryForScriptedConversation(convoRoot) {
    ClearConversationHistoryForScriptedConversation(convoRoot);
}
/**
 * Hash: 0xD2C91A0B572AAE56 | ApiSet: undefined
 */
export function createNewScriptedConversation(convoRoot) {
    return CreateNewScriptedConversation(convoRoot);
}
/**
 * Hash: 0xA9A41C1E940FB0E8 | ApiSet: undefined
 */
export function disablePedPainAudio(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DisablePedPainAudio(_ped, toggle);
}
/**
 * ```
 * Checks if the ped can play the speech or has the speech file, last parameter is usually false.
 * ```
 * Hash: 0x49B99BF3FDA89A7A | ApiSet: undefined
 */
export function doesContextExistForThisPed(ped, speechName, unk) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return DoesContextExistForThisPed(_ped, speechName, unk);
}
/**
 * Hash: 0x4F0C413926060B38 | ApiSet: undefined
 */
export function forceUseAudioGameObject(vehicle, audioName) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ForceUseAudioGameObject(_vehicle, audioName);
}
/**
 * Hash: 0x062D5EAD4DA2FA6A | ApiSet: undefined
 */
export function forcePedPanicWalla() {
    ForcePedPanicWalla();
}
/**
 * Hash: 0x8B25A18E390F75BF | ApiSet: undefined
 */
export function getEntityAudioMixGroup(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityAudioMixGroup(_entity);
}
/**
 * Hash: 0xE7A0D23DC414507B | ApiSet: undefined
 */
export function getMusicPlaytime() {
    return GetMusicPlaytime();
}
/**
 * Hash: 0x480357EE890C295A | ApiSet: undefined
 */
export function getCurrentScriptedConversationLine(p0) {
    return GetCurrentScriptedConversationLine(p0);
}
/**
 * ```
 * Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
 * ```
 * Hash: 0x0556C784FA056628 | ApiSet: undefined
 */
export function getLoadedStreamIdFromCreation(streamName, soundSet) {
    return GetLoadedStreamIdFromCreation(streamName, soundSet);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x2DBBF0C5E19383EE | ApiSet: undefined
 */
export function getPedSongIndexHost(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedSongIndexHost(_ped);
}
/**
 * Hash: 0x430386FE9BF80B45 | ApiSet: undefined
 */
export function getSoundId() {
    return GetSoundId();
}
/**
 * Hash: 0x714A0EA7DE1167BE | ApiSet: undefined
 */
export function hasSoundAudioNameFinished(audioName, soundsetName) {
    return HasSoundAudioNameFinished(audioName, soundsetName);
}
/**
 * Hash: 0x84848E1C0FC67DBB | ApiSet: undefined
 */
export function hasSoundIdFinished(soundId) {
    return HasSoundIdFinished(soundId);
}
/**
 * Hash: 0x9072C8B49907BFAD | ApiSet: undefined
 */
export function isAmbientSpeechPlaying(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAmbientSpeechPlaying(_ped);
}
/**
 * Hash: 0x932C2D096A2C3FFF | ApiSet: undefined
 */
export function isAmbientSpeechDisabled(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAmbientSpeechDisabled(_ped);
}
/**
 * Hash: 0xC265DF9FB44A9FBD | ApiSet: undefined
 */
export function isAnimalVocalizationPlaying(pedHandle) {
    const _pedHandle = pedHandle instanceof Ped ? pedHandle.handle() : pedHandle;
    return IsAnimalVocalizationPlaying(_pedHandle);
}
/**
 * Hash: 0x729072355FA39EC9 | ApiSet: undefined
 */
export function isAnySpeechPlaying(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAnySpeechPlaying(_ped);
}
/**
 * Hash: 0xA2CAC9DEF0195E6F | ApiSet: undefined
 */
export function isAnyConversationPlaying(p0) {
    return IsAnyConversationPlaying(p0);
}
/**
 * Hash: 0xB65B60556E2A9225 | ApiSet: undefined
 */
export function isAudioSceneActive(scene) {
    return IsAudioSceneActive(scene);
}
/**
 * ```
 * Checks whether the horn of a vehicle is currently played.
 * ```
 * Hash: 0x9D6BFC12B05C6121 | ApiSet: undefined
 */
export function isHornActive(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsHornActive(_vehicle);
}
/**
 * Hash: 0x54B187F111D9C6F8 | ApiSet: undefined
 */
export function isPedInAnyConversation(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyConversation(_ped, p1);
}
/**
 * Hash: 0x049E937F18F4020C | ApiSet: undefined
 */
export function isPedInCurrentConversation(p0, ped, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInCurrentConversation(p0, _ped, p2);
}
/**
 * ```
 * item: FUSE, value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 * ```
 * Hash: 0x6DF942C4179BE5AB | ApiSet: undefined
 */
export function isScriptedAudioCustom(item, soundSet) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof soundSet === 'string')
        soundSet = this.getHashKey(soundSet);
    return IsScriptedAudioCustom(item, soundSet);
}
/**
 * Hash: 0xD89504D9D7D5057D | ApiSet: undefined
 */
export function isScriptedConversationCreated(convoRoot) {
    return IsScriptedConversationCreated(convoRoot);
}
/**
 * Hash: 0xDF0D54BE7A776737 | ApiSet: undefined
 */
export function isScriptedConversationLoaded(convoRoot) {
    return IsScriptedConversationLoaded(convoRoot);
}
/**
 * Hash: 0x1ECC76792F661CF5 | ApiSet: undefined
 */
export function isScriptedConversationPlaying(p0) {
    return IsScriptedConversationPlaying(p0);
}
/**
 * Hash: 0xCC9AA18DCC7084F4 | ApiSet: undefined
 */
export function isScriptedSpeechPlaying(p0) {
    return IsScriptedSpeechPlaying(p0);
}
/**
 * Hash: 0xF01C570E0A0A1E67 | ApiSet: undefined
 */
export function isScriptedConversionOngoing(p0) {
    return IsScriptedConversionOngoing(p0);
}
/**
 * Hash: 0xD11FA52EB849D978 | ApiSet: undefined
 */
export function isStreamPlaying(streamId) {
    return IsStreamPlaying(streamId);
}
/**
 * Hash: 0x1F1F957154EC51DF | ApiSet: undefined
 */
export function loadStream(streamName, soundSet) {
    return LoadStream(streamName, soundSet);
}
/**
 * Hash: 0x017492B2201E3428 | ApiSet: undefined
 */
export function _0x017492B2201E3428(p0, p1, p2, p3) {
    Citizen.invokeNative('0x017492B2201E3428', p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x018ABE833CA64D2A | ApiSet: undefined
 */
export function _0x018ABE833CA64D2A(p0, p1) {
    Citizen.invokeNative('0x018ABE833CA64D2A', p0, p1);
}
/**
 * Hash: 0x06C5DF5EE444BC6B | ApiSet: undefined
 */
export function _0x06C5DF5EE444BC6B(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x06C5DF5EE444BC6B', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x078F77FD1A43EAB3 | ApiSet: undefined
 */
export function _0x078F77FD1A43EAB3(p0, p1) {
    Citizen.invokeNative('0x078F77FD1A43EAB3', p0, p1);
}
/**
 * Hash: 0x0CB3D1919E8D7CBA | ApiSet: undefined
 */
export function _0x0CB3D1919E8D7CBA(convoRoot) {
    return Citizen.invokeNative('0x0CB3D1919E8D7CBA', convoRoot);
}
/**
 * Hash: 0x131EC9247E7A2903 | ApiSet: undefined
 */
export function _0x131EC9247E7A2903(p0) {
    return Citizen.invokeNative('0x131EC9247E7A2903', p0);
}
/**
 * ```
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
 * p1 is possibly naSpeechAudibility, naSpeechType, or naSpeechEventTypeRequestPriority
 * SKIP_* - START_*
 * ```
 * Hash: 0x0D7FD6A55FD63AEF | ApiSet: undefined
 */
export function _0x0D7FD6A55FD63AEF(speechEventType, p1, p2) {
    Citizen.invokeNative('0x0D7FD6A55FD63AEF', speechEventType, p1, p2);
}
/**
 * Hash: 0x0FAF7171BF613B80 | ApiSet: undefined
 */
export function _0x0FAF7171BF613B80(p0) {
    Citizen.invokeNative('0x0FAF7171BF613B80', p0);
}
/**
 * Hash: 0x138ADB94F8B90616 | ApiSet: undefined
 */
export function _0x138ADB94F8B90616() {
    Citizen.invokeNative('0x138ADB94F8B90616');
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x139A4B9DF2D26CBF | ApiSet: undefined
 */
export function _0x139A4B9DF2D26CBF(p0, p1) {
    Citizen.invokeNative('0x139A4B9DF2D26CBF', p0, p1);
}
/**
 * Hash: 0x152ED1B56E8F1F50 | ApiSet: undefined
 */
export function _0x152ED1B56E8F1F50(p0, currentScriptedConvoLine) {
    return Citizen.invokeNative('0x152ED1B56E8F1F50', p0, currentScriptedConvoLine);
}
/**
 * Hash: 0x1E6F9A9FE1A99F36 | ApiSet: undefined
 */
export function _0x1E6F9A9FE1A99F36(audSpeechEvent) {
    Citizen.invokeNative('0x1E6F9A9FE1A99F36', audSpeechEvent);
}
/**
 * Hash: 0x254B0241E964B450 | ApiSet: undefined
 */
export function _0x254B0241E964B450(p0, currentScriptedConvoLine) {
    return Citizen.invokeNative('0x254B0241E964B450', p0, currentScriptedConvoLine);
}
/**
 * Hash: 0x259ACC5B52A2B2D9 | ApiSet: undefined
 */
export function _0x259ACC5B52A2B2D9(p0, p1) {
    Citizen.invokeNative('0x259ACC5B52A2B2D9', p0, p1);
}
/**
 * Hash: 0x295859EB18F48D82 | ApiSet: undefined
 */
export function _0x295859EB18F48D82(p0) {
    return Citizen.invokeNative('0x295859EB18F48D82', p0);
}
/**
 * Hash: 0x2651DDC0EA269073 | ApiSet: undefined
 */
export function _0x2651DDC0EA269073(ropeId, p1) {
    Citizen.invokeNative('0x2651DDC0EA269073', ropeId, p1);
}
/**
 * Hash: 0x2B9C37C01BF25EDB | ApiSet: undefined
 */
export function _0x2B9C37C01BF25EDB(p0) {
    return Citizen.invokeNative('0x2B9C37C01BF25EDB', p0);
}
/**
 * Hash: 0x2B101AD9F651243A | ApiSet: undefined
 */
export function _0x2B101AD9F651243A() {
    return Citizen.invokeNative('0x2B101AD9F651243A');
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x2FFF4A78384AFFDF | ApiSet: undefined
 */
export function _0x2FFF4A78384AFFDF(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x2FFF4A78384AFFDF', _entity);
}
/**
 * Hash: 0x341CDD17EFC2472E | ApiSet: undefined
 */
export function _0x341CDD17EFC2472E(p0, p1) {
    Citizen.invokeNative('0x341CDD17EFC2472E', p0, p1);
}
/**
 * Hash: 0x35B8C070E0C16E2F | ApiSet: undefined
 */
export function _0x35B8C070E0C16E2F(p0, p1) {
    Citizen.invokeNative('0x35B8C070E0C16E2F', p0, p1);
}
/**
 * Hash: 0x380A2E353AD30917 | ApiSet: undefined
 */
export function _0x380A2E353AD30917(p0, p1, p2) {
    Citizen.invokeNative('0x380A2E353AD30917', p0, p1, p2);
}
/**
 * Hash: 0x3A00D87B20A2A5E4 | ApiSet: undefined
 */
export function _0x3A00D87B20A2A5E4(p0, p1) {
    Citizen.invokeNative('0x3A00D87B20A2A5E4', p0, p1);
}
/**
 * Hash: 0x3D0BBCCF401B5FDB | ApiSet: undefined
 */
export function _0x3D0BBCCF401B5FDB() {
    Citizen.invokeNative('0x3D0BBCCF401B5FDB');
}
/**
 * Hash: 0x3A3BE6B920525237 | ApiSet: undefined
 */
export function _0x3A3BE6B920525237(p0, p1) {
    Citizen.invokeNative('0x3A3BE6B920525237', p0, p1);
}
/**
 * Hash: 0x3E98AC9D8C56C62C | ApiSet: undefined
 */
export function _0x3E98AC9D8C56C62C(p0) {
    Citizen.invokeNative('0x3E98AC9D8C56C62C', p0);
}
/**
 * Hash: 0x3E93DDDCBB6111E4 | ApiSet: undefined
 */
export function _0x3E93DDDCBB6111E4(p0, p1) {
    Citizen.invokeNative('0x3E93DDDCBB6111E4', p0, p1);
}
/**
 * Hash: 0x40CA665AB9D8D505 | ApiSet: undefined
 */
export function _0x40CA665AB9D8D505(convoRoot, singleLineIndex) {
    Citizen.invokeNative('0x40CA665AB9D8D505', convoRoot, singleLineIndex);
}
/**
 * Hash: 0x43037ABFE214A851 | ApiSet: undefined
 */
export function _0x43037ABFE214A851() {
    Citizen.invokeNative('0x43037ABFE214A851');
}
/**
 * Hash: 0x44A5EEF54F62E823 | ApiSet: undefined
 */
export function _0x44A5EEF54F62E823(p0) {
    return Citizen.invokeNative('0x44A5EEF54F62E823', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x448F2647DD6F2E27 | ApiSet: undefined
 */
export function _0x448F2647DD6F2E27(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x448F2647DD6F2E27', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x4A98E228A936DBCC | ApiSet: undefined
 */
export function _0x4A98E228A936DBCC(p0) {
    return Citizen.invokeNative('0x4A98E228A936DBCC', p0);
}
/**
 * Hash: 0x4BE3EC91C01F0FE8 | ApiSet: undefined
 */
export function _0x4BE3EC91C01F0FE8() {
    Citizen.invokeNative('0x4BE3EC91C01F0FE8');
}
/**
 * Hash: 0x5A13586A9447931F | ApiSet: undefined
 */
export function _0x5A13586A9447931F(p0) {
    return Citizen.invokeNative('0x5A13586A9447931F', p0);
}
/**
 * Hash: 0x569ABC36E28DDEAA | ApiSet: undefined
 */
export function _0x569ABC36E28DDEAA() {
    Citizen.invokeNative('0x569ABC36E28DDEAA');
}
/**
 * Hash: 0x5BC885EBD75FAA7D | ApiSet: undefined
 */
export function _0x5BC885EBD75FAA7D(p0, p1) {
    Citizen.invokeNative('0x5BC885EBD75FAA7D', p0, p1);
}
/**
 * ```
 * _IS_SOUND_RUNNING(?)
 * ```
 * Hash: 0x580D71DFE0088E34 | ApiSet: undefined
 */
export function _0x580D71DFE0088E34(audioName, audioRef) {
    return Citizen.invokeNative('0x580D71DFE0088E34', audioName, audioRef);
}
/**
 * Hash: 0x5E3CCF03995388B5 | ApiSet: undefined
 */
export function _0x5E3CCF03995388B5(p0, p1, p2, p3) {
    Citizen.invokeNative('0x5E3CCF03995388B5', p0, p1, p2, p3);
}
/**
 * Hash: 0x5AE0CB5F35F034FD | ApiSet: undefined
 */
export function _0x5AE0CB5F35F034FD(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0x5AE0CB5F35F034FD', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x62377977E4F08668 | ApiSet: undefined
 */
export function _0x62377977E4F08668(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x62377977E4F08668', _entity);
}
/**
 * Hash: 0x64B956F4E761DF5C | ApiSet: undefined
 */
export function _0x64B956F4E761DF5C(p0) {
    Citizen.invokeNative('0x64B956F4E761DF5C', p0);
}
/**
 * Hash: 0x6652B0C8F3D414D0 | ApiSet: undefined
 */
export function _0x6652B0C8F3D414D0(p0) {
    Citizen.invokeNative('0x6652B0C8F3D414D0', p0);
}
/**
 * ```
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
 * SKIP_* - START_*
 * ```
 * Hash: 0x660A8F876DF1D4F8 | ApiSet: undefined
 */
export function _0x660A8F876DF1D4F8(speechEventType) {
    Citizen.invokeNative('0x660A8F876DF1D4F8', speechEventType);
}
/**
 * ```
 * _STOP_AUDIO_*
 * ```
 * Hash: 0x6AB944DF68B512D3 | ApiSet: undefined
 */
export function _0x6AB944DF68B512D3(p0) {
    Citizen.invokeNative('0x6AB944DF68B512D3', p0);
}
/**
 * Hash: 0x6B7A88A61B41E589 | ApiSet: undefined
 */
export function _0x6B7A88A61B41E589(p0) {
    Citizen.invokeNative('0x6B7A88A61B41E589', p0);
}
/**
 * Hash: 0x6DA15746D5CC1A92 | ApiSet: undefined
 */
export function _0x6DA15746D5CC1A92(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0x6DA15746D5CC1A92', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x6BFFB7C276866996 | ApiSet: undefined
 */
export function _0x6BFFB7C276866996(p0) {
    return Citizen.invokeNative('0x6BFFB7C276866996', p0);
}
/**
 * Hash: 0x72E4D1C4639BC465 | ApiSet: undefined
 */
export function _0x72E4D1C4639BC465(p0, p1) {
    const _p0 = p0 instanceof Entity ? p0.handle() : p0;
    return Citizen.invokeNative('0x72E4D1C4639BC465', _p0, p1);
}
/**
 * ```
 * _AUDIO_IS_* - _AUDIO_TRIGGER*
 * ```
 * Hash: 0x7455CD705F7E933E | ApiSet: undefined
 */
export function _0x7455CD705F7E933E() {
    Citizen.invokeNative('0x7455CD705F7E933E');
}
/**
 * Hash: 0x7678FE0455ED1145 | ApiSet: undefined
 */
export function _0x7678FE0455ED1145(p0, p1, p2) {
    return Citizen.invokeNative('0x7678FE0455ED1145', p0, p1, p2);
}
/**
 * ```
 * Only used in R* SP Script cv_mus_shared
 * ```
 * Hash: 0x79F9C57B8D0DFE90 | ApiSet: undefined
 */
export function _0x79F9C57B8D0DFE90(convoRoot, animScene) {
    return Citizen.invokeNative('0x79F9C57B8D0DFE90', convoRoot, animScene);
}
/**
 * Hash: 0x7E176C676F8652A9 | ApiSet: undefined
 */
export function _0x7E176C676F8652A9(p0) {
    Citizen.invokeNative('0x7E176C676F8652A9', p0);
}
/**
 * Hash: 0x821C32C728B24477 | ApiSet: undefined
 */
export function _0x821C32C728B24477(p0, p1, p2) {
    Citizen.invokeNative('0x821C32C728B24477', p0, p1, p2);
}
/**
 * Hash: 0x839C9F124BE74D94 | ApiSet: undefined
 */
export function _0x839C9F124BE74D94(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x839C9F124BE74D94', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x847748AE5D7B1071 | ApiSet: undefined
 */
export function _0x847748AE5D7B1071(p0) {
    return Citizen.invokeNative('0x847748AE5D7B1071', p0);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0x864A842B86993851 | ApiSet: undefined
 */
export function _0x864A842B86993851(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x864A842B86993851', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x886657C5B3D8EDE3 | ApiSet: undefined
 */
export function _0x886657C5B3D8EDE3(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x886657C5B3D8EDE3', _entity);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x8D29FDF565DED9AE | ApiSet: undefined
 */
export function _0x8D29FDF565DED9AE(p0, p1, p2) {
    Citizen.invokeNative('0x8D29FDF565DED9AE', p0, p1, p2);
}
/**
 * Hash: 0x8E901B65206C2D3E | ApiSet: undefined
 */
export function _0x8E901B65206C2D3E(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8E901B65206C2D3E', _ped);
}
/**
 * Hash: 0x935DBD96D4A3DA1F | ApiSet: undefined
 */
export function _0x935DBD96D4A3DA1F(p0, currentScriptedConvoLine) {
    return Citizen.invokeNative('0x935DBD96D4A3DA1F', p0, currentScriptedConvoLine);
}
/**
 * Hash: 0x9D6DEC9791A4E501 | ApiSet: undefined
 */
export function _0x9D6DEC9791A4E501(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x9D6DEC9791A4E501', p0, p1, p2, p3);
}
/**
 * Hash: 0x9EB779765E68C52E | ApiSet: undefined
 */
export function _0x9EB779765E68C52E(p0, p1) {
    Citizen.invokeNative('0x9EB779765E68C52E', p0, p1);
}
/**
 * Hash: 0xA2323A2EAE32A290 | ApiSet: undefined
 */
export function _0xA2323A2EAE32A290(listeningToPed, ped, listenerName) {
    const _listeningToPed = listeningToPed instanceof Ped ? listeningToPed.handle() : listeningToPed;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA2323A2EAE32A290', _listeningToPed, _ped, listenerName);
}
/**
 * Hash: 0xA2B851605748AD0E | ApiSet: undefined
 */
export function _0xA2B851605748AD0E() {
    Citizen.invokeNative('0xA2B851605748AD0E');
}
/**
 * Hash: 0xA6A3A3F96B8B030E | ApiSet: undefined
 */
export function _0xA6A3A3F96B8B030E() {
    return Citizen.invokeNative('0xA6A3A3F96B8B030E');
}
/**
 * Hash: 0xA6847BBA4FCDD13F | ApiSet: undefined
 */
export function _0xA6847BBA4FCDD13F(p0, p1) {
    Citizen.invokeNative('0xA6847BBA4FCDD13F', p0, p1);
}
/**
 * ```
 * Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
 * ```
 * Hash: 0xB93A769B8B726950 | ApiSet: undefined
 */
export function _0xB93A769B8B726950(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xB93A769B8B726950', _ped, p1);
}
/**
 * Hash: 0xABDB4863D3D72021 | ApiSet: undefined
 */
export function _0xABDB4863D3D72021(entity, p1, p2, p3, p4) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xABDB4863D3D72021', _entity, p1, p2, p3, p4);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xBC07CA8FD710E7FD | ApiSet: undefined
 */
export function _0xBC07CA8FD710E7FD(p0, p1) {
    Citizen.invokeNative('0xBC07CA8FD710E7FD', p0, p1);
}
/**
 * Hash: 0xB18FEC133C7C6C69 | ApiSet: undefined
 */
export function _0xB18FEC133C7C6C69(p0) {
    return Citizen.invokeNative('0xB18FEC133C7C6C69', p0);
}
/**
 * ```
 * Checks for MOONSHINE_BAND
 * ```
 * Hash: 0xBE28DB99556FF8D9 | ApiSet: undefined
 */
export function _0xBE28DB99556FF8D9(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0xBE28DB99556FF8D9', _entity);
}
/**
 * Hash: 0xC369E2234E34A0CA | ApiSet: undefined
 */
export function _0xC369E2234E34A0CA(p0, p1) {
    return Citizen.invokeNative('0xC369E2234E34A0CA', p0, p1);
}
/**
 * Hash: 0xC4CFCE4C656EF480 | ApiSet: undefined
 */
export function _0xC4CFCE4C656EF480(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC4CFCE4C656EF480', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC68C02DE259C927C | ApiSet: undefined
 */
export function _0xC68C02DE259C927C(p0) {
    return Citizen.invokeNative('0xC68C02DE259C927C', p0);
}
/**
 * Hash: 0xCBF2BEBB468A34F3 | ApiSet: undefined
 */
export function _0xCBF2BEBB468A34F3(p0) {
    Citizen.invokeNative('0xCBF2BEBB468A34F3', p0);
}
/**
 * Hash: 0xC886CD666ADD42E1 | ApiSet: undefined
 */
export function _0xC886CD666ADD42E1(p0, p1) {
    Citizen.invokeNative('0xC886CD666ADD42E1', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD05A460328560477 | ApiSet: undefined
 */
export function _0xD05A460328560477(p0) {
    return Citizen.invokeNative('0xD05A460328560477', p0);
}
/**
 * Hash: 0xCFAD2C8CD1054523 | ApiSet: undefined
 */
export function _0xCFAD2C8CD1054523(p0, p1, p2, p3) {
    Citizen.invokeNative('0xCFAD2C8CD1054523', p0, p1, p2, p3);
}
/**
 * Hash: 0xD47D47EFBF103FB8 | ApiSet: undefined
 */
export function _0xD47D47EFBF103FB8(p0, p1) {
    Citizen.invokeNative('0xD47D47EFBF103FB8', p0, p1);
}
/**
 * ```
 * _IS_SCRIPTED_CONVERSATION_*
 * ```
 * Hash: 0xD0730C1FA40348D9 | ApiSet: undefined
 */
export function _0xD0730C1FA40348D9(convoRoot) {
    return Citizen.invokeNative('0xD0730C1FA40348D9', convoRoot);
}
/**
 * Hash: 0xDAD6CD07CAA4F382 | ApiSet: undefined
 */
export function _0xDAD6CD07CAA4F382() {
    Citizen.invokeNative('0xDAD6CD07CAA4F382');
}
/**
 * Hash: 0xD733528B6C35647A | ApiSet: undefined
 */
export function _0xD733528B6C35647A(p0, p1) {
    Citizen.invokeNative('0xD733528B6C35647A', p0, p1);
}
/**
 * Hash: 0xDC93F0948F2C28F4 | ApiSet: undefined
 */
export function _0xDC93F0948F2C28F4(p0) {
    Citizen.invokeNative('0xDC93F0948F2C28F4', p0);
}
/**
 * Hash: 0xDC2F83A0612CA34D | ApiSet: undefined
 */
export function _0xDC2F83A0612CA34D(p0) {
    return Citizen.invokeNative('0xDC2F83A0612CA34D', p0);
}
/**
 * Hash: 0xDF947FE0D551684E | ApiSet: undefined
 */
export function _0xDF947FE0D551684E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xDF947FE0D551684E', _ped, p1);
}
/**
 * Hash: 0xE600F61F54A444A6 | ApiSet: undefined
 */
export function _0xE600F61F54A444A6() {
    return Citizen.invokeNative('0xE600F61F54A444A6');
}
/**
 * Hash: 0xE7E6CB8B713ED190 | ApiSet: undefined
 */
export function _0xE7E6CB8B713ED190() {
    Citizen.invokeNative('0xE7E6CB8B713ED190');
}
/**
 * Hash: 0xE891504B2F0E2DBA | ApiSet: undefined
 */
export function _0xE891504B2F0E2DBA(p0, p1) {
    Citizen.invokeNative('0xE891504B2F0E2DBA', p0, p1);
}
/**
 * Hash: 0xEA546C31FD45F8CD | ApiSet: undefined
 */
export function _0xEA546C31FD45F8CD(p0) {
    Citizen.invokeNative('0xEA546C31FD45F8CD', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE9694B2D6CB87B06 | ApiSet: undefined
 */
export function _0xE9694B2D6CB87B06(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xE9694B2D6CB87B06', _entity, p1);
}
/**
 * Hash: 0xEB4D592620B8C209 | ApiSet: undefined
 */
export function _0xEB4D592620B8C209(p0) {
    Citizen.invokeNative('0xEB4D592620B8C209', p0);
}
/**
 * ```
 * Name: ROPE_SETTINGS_DEFAULT
 * ```
 * Hash: 0xF092B6030D6FD49C | ApiSet: undefined
 */
export function _0xF092B6030D6FD49C(ropeId, name) {
    Citizen.invokeNative('0xF092B6030D6FD49C', ropeId, name);
}
/**
 * Hash: 0xF0EE69F500952FA5 | ApiSet: undefined
 */
export function _0xF0EE69F500952FA5(p0) {
    return Citizen.invokeNative('0xF0EE69F500952FA5', p0);
}
/**
 * Hash: 0xF232C2C546AC16D0 | ApiSet: undefined
 */
export function _0xF232C2C546AC16D0(p0) {
    Citizen.invokeNative('0xF232C2C546AC16D0', p0);
}
/**
 * Hash: 0xF64034D533CE8AAC | ApiSet: undefined
 */
export function _0xF64034D533CE8AAC(p0, p1, p2) {
    Citizen.invokeNative('0xF64034D533CE8AAC', p0, p1, p2);
}
/**
 * Hash: 0xF336E9F989B3518F | ApiSet: undefined
 */
export function _0xF336E9F989B3518F(p0) {
    return Citizen.invokeNative('0xF336E9F989B3518F', p0);
}
/**
 * Hash: 0xFD461D0ABA5559B1 | ApiSet: undefined
 */
export function _0xFD461D0ABA5559B1(p0, p1) {
    Citizen.invokeNative('0xFD461D0ABA5559B1', p0, p1);
}
/**
 * Hash: 0xFCDEC42B1C78B7F8 | ApiSet: undefined
 */
export function _0xFCDEC42B1C78B7F8(p0, p1) {
    Citizen.invokeNative('0xFCDEC42B1C78B7F8', p0, p1);
}
/**
 * Hash: 0xFE5C6177064BD390 | ApiSet: undefined
 */
export function _0xFE5C6177064BD390(p0) {
    return Citizen.invokeNative('0xFE5C6177064BD390', p0);
}
/**
 * Hash: 0xFFE9C53DEEA3DB0B | ApiSet: undefined
 */
export function _0xFFE9C53DEEA3DB0B(p0, p1, position, isSrlLoaded, p6) {
    return Citizen.invokeNative('0xFFE9C53DEEA3DB0B', p0, p1, position.x, position.y, position.z, isSrlLoaded, p6);
}
/**
 * Hash: 0x8530AD776CD72B12 | ApiSet: undefined
 */
export function pauseScriptedConversation(p0, p1, p2, p3, p4) {
    PauseScriptedConversation(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xED640017ED337E45 | ApiSet: undefined
 */
export function playAmbientSpeechFromPositionNative(position) {
    return PlayAmbientSpeechFromPositionNative(position.x, position.y, position.z);
}
/**
 * Hash: 0xEE066C7006C49C0A | ApiSet: undefined
 */
export function playAnimalVocalization(ped, vocalizationName, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PlayAnimalVocalization(_ped, vocalizationName, p2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0E53530D9B2DB01D | ApiSet: undefined
 */
export function playAnimalVocalizationPheromoneVialResponse(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    PlayAnimalVocalizationPheromoneVialResponse(_ped, p1, p2);
}
/**
 * Hash: 0xCD536C4D33DCC900 | ApiSet: undefined
 */
export function playEndCreditsMusic(play) {
    PlayEndCreditsMusic(play);
}
/**
 * ```
 * Valid pain IDs: 0..12
 * ```
 * Hash: 0xBC9AE166038A5CEC | ApiSet: undefined
 */
export function playPain(ped, painId, p2, p3, isNetwork) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PlayPain(_ped, painId, p2, p3, isNetwork);
}
/**
 * Hash: 0x7FF4944CC209192D | ApiSet: undefined
 */
export function playSound(audioName, audioRef, p2, p3, p4, p5) {
    PlaySound(audioName, audioRef, p2, p3, p4, p5);
}
/**
 * ```
 * struct ScriptedSpeechParams
 * {
 * const char* speechName;
 * const char* voiceName;
 * alignas(8) int variation;
 * alignas(8) Hash speechParamHash;
 * alignas(8) Ped listenerPed;
 * alignas(8) BOOL syncOverNetwork;
 * alignas(8) int v7;
 * alignas(8) int v8;
 * };
 * static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
 * Example:
 * ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, joaat("SPEECH_PARAMS_BEAT_SHOUTED_CLEAR"), 0, true, 1, 1};
 * PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
 * ```
 * Hash: 0x8E04FEDD28D42462 | ApiSet: undefined
 */
export function playPedAmbientSpeechNative(speaker) {
    const _speaker = speaker instanceof Ped ? speaker.handle() : speaker;
    return PlayPedAmbientSpeechNative(_speaker);
}
/**
 * Hash: 0x6FB1DA3CA9DA7D90 | ApiSet: undefined
 */
export function playSoundFromEntity(audioName, entity, audioRef, isNetwork, p4, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    PlaySoundFromEntity(audioName, _entity, audioRef, isNetwork, p4, p5);
}
/**
 * ```
 * item: value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 * ```
 * Hash: 0xE8EAFF7B41EDD291 | ApiSet: undefined
 */
export function playSoundFromItem(item, soundSet, p2) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof soundSet === 'string')
        soundSet = this.getHashKey(soundSet);
    PlaySoundFromItem(item, soundSet, p2);
}
/**
 * ```
 * Params: p5 seems to be always 0
 * ```
 * Hash: 0xF1C5310FEAA36B48 | ApiSet: undefined
 */
export function playSoundFromEntityWithSet(soundId, soundName, entity, soundsetName, p4, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    PlaySoundFromEntityWithSet(soundId, soundName, _entity, soundsetName, p4, p5);
}
/**
 * Hash: 0xCCE219C922737BFA | ApiSet: undefined
 */
export function playSoundFromPosition(audioName, position, audioRef, isNetwork, p6, p7, p8) {
    PlaySoundFromPosition(audioName, position.x, position.y, position.z, audioRef, isNetwork, p6, p7, p8);
}
/**
 * ```
 * Starts Audio Loop
 * _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
 * ```
 * Hash: 0xDCF5BA95BBF0FABA | ApiSet: undefined
 */
export function playSoundFromPositionWithId(soundId, soundName, position, soundsetName, p6, p7, p8) {
    PlaySoundFromPositionWithId(soundId, soundName, position.x, position.y, position.z, soundsetName, p6, p7, p8);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
 * ```
 * Hash: 0x67C540AA08E4A6F5 | ApiSet: undefined
 */
export function playSoundFrontend(audioName, audioRef, p2, p3) {
    PlaySoundFrontend(audioName, audioRef, p2, p3);
}
/**
 * Hash: 0xCE5D0FFE83939AF1 | ApiSet: undefined
 */
export function playSoundFrontendWithSoundId(soundId, name, soundSet, p3) {
    PlaySoundFrontendWithSoundId(soundId, name, soundSet, p3);
}
/**
 * Hash: 0x21442F412E8DE56B | ApiSet: undefined
 */
export function playStreamFromPosition(position, streamId) {
    PlayStreamFromPosition(position.x, position.y, position.z, streamId);
}
/**
 * Hash: 0x89049DD63C08B5D1 | ApiSet: undefined
 */
export function playStreamFromPed(ped, streamId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PlayStreamFromPed(_ped, streamId);
}
/**
 * Hash: 0x58FCE43488F9F5F4 | ApiSet: undefined
 */
export function playStreamFrontend(streamId) {
    PlayStreamFrontend(streamId);
}
/**
 * Hash: 0x1E5185B72EF5158A | ApiSet: undefined
 */
export function prepareMusicEvent(eventName) {
    return PrepareMusicEvent(eventName);
}
/**
 * Hash: 0x4AD019591E94C064 | ApiSet: undefined
 */
export function prepareSoundWithEntity(soundName, entity, soundsetName, soundId) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return PrepareSoundWithEntity(soundName, _entity, soundsetName, soundId);
}
/**
 * Hash: 0x3B3CAD6166916D87 | ApiSet: undefined
 */
export function preloadScriptConversation(convoRoot, p1, p2, clone) {
    PreloadScriptConversation(convoRoot, p1, p2, clone);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xC6ED9D5092438D91 | ApiSet: undefined
 */
export function registerScriptWithAudio(p0) {
    RegisterScriptWithAudio(p0);
}
/**
 * Hash: 0xE368E8422C860BA7 | ApiSet: undefined
 */
export function prepareSound(soundName, soundsetName, soundId) {
    return PrepareSound(soundName, soundsetName, soundId);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
 * ```
 * Hash: 0xD9130842D7226045 | ApiSet: undefined
 */
export function prepareSoundset(soundsetName, p1) {
    return PrepareSoundset(soundsetName, p1);
}
/**
 * Hash: 0x7A2D8AD0A9EB9C3F | ApiSet: undefined
 */
export function releaseScriptAudioBank() {
    ReleaseScriptAudioBank();
}
/**
 * Hash: 0x77ED170667F50170 | ApiSet: undefined
 */
export function releaseNamedScriptAudioBank(audioBank) {
    ReleaseNamedScriptAudioBank(audioBank);
}
/**
 * Hash: 0x9D746964E0CF2C5F | ApiSet: undefined
 */
export function releaseShardSounds(soundName, soundsetName) {
    ReleaseShardSounds(soundName, soundsetName);
}
/**
 * Hash: 0x353FC880830B88FA | ApiSet: undefined
 */
export function releaseSoundId(soundId) {
    ReleaseSoundId(soundId);
}
/**
 * Hash: 0xB4BBFD9CD8B3922B | ApiSet: undefined
 */
export function removePortalSettingsOverride(p0) {
    RemovePortalSettingsOverride(p0);
}
/**
 * Hash: 0x531A78D6BF27014B | ApiSet: undefined
 */
export function releaseSoundset(soundsetName) {
    ReleaseSoundset(soundsetName);
}
/**
 * Hash: 0x18EB48CFC41F2EA0 | ApiSet: undefined
 */
export function removeEntityFromAudioMixGroup(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveEntityFromAudioMixGroup(_entity, p1);
}
/**
 * Hash: 0x2F844A8B08D76685 | ApiSet: undefined
 */
export function requestScriptAudioBank(audioBank) {
    return RequestScriptAudioBank(audioBank);
}
/**
 * Hash: 0x9AEB285D1818C9AC | ApiSet: undefined
 */
export function restartScriptedConversation(p0) {
    RestartScriptedConversation(p0);
}
/**
 * Hash: 0x6C8065A3B780185B | ApiSet: undefined
 */
export function setAmbientVoiceName(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAmbientVoiceName(_ped, name);
}
/**
 * Hash: 0x9748FA4DE50CCE3E | ApiSet: undefined
 */
export function setAmbientZoneListState(ambientZone, p1, p2) {
    SetAmbientZoneListState(ambientZone, p1, p2);
}
/**
 * Hash: 0x3743CE6948194349 | ApiSet: undefined
 */
export function setAmbientZonePosition(ambientZone, position, heading) {
    SetAmbientZonePosition(ambientZone, position.x, position.y, position.z, heading);
}
/**
 * Hash: 0xF3638DAE8C4045E1 | ApiSet: undefined
 */
export function setAmbientZoneListStatePersistent(ambientZone, p1, p2) {
    SetAmbientZoneListStatePersistent(ambientZone, p1, p2);
}
/**
 * Hash: 0xBDA07E5950085E46 | ApiSet: undefined
 */
export function setAmbientZoneState(zoneName, isEnabled, p2) {
    SetAmbientZoneState(zoneName, isEnabled, p2);
}
/**
 * Hash: 0x1D6650420CEC9D3B | ApiSet: undefined
 */
export function setAmbientZoneStatePersistent(ambientZone, p1, p2) {
    SetAmbientZoneStatePersistent(ambientZone, p1, p2);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
 * ```
 * Hash: 0xB9EFD5C25018725A | ApiSet: undefined
 */
export function setAudioFlag(flagName, toggle) {
    SetAudioFlag(flagName, toggle);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0xCC97B29285B1DC3B | ApiSet: undefined
 */
export function setAnimalMood(animal, mood) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    SetAnimalMood(_animal, mood);
}
/**
 * Hash: 0xEF21A9EF089A2668 | ApiSet: undefined
 */
export function setAudioSceneVariable(scene, variable, value) {
    SetAudioSceneVariable(scene, variable, value);
}
/**
 * Hash: 0x9B1FC259187C97C0 | ApiSet: undefined
 */
export function setAudioOnlineTransitionStage(p0) {
    SetAudioOnlineTransitionStage(p0);
}
/**
 * Hash: 0xAC84686C06184B0D | ApiSet: undefined
 */
export function setAudioSceneset(audioName, sceneset) {
    return SetAudioSceneset(audioName, sceneset);
}
/**
 * Hash: 0xE5564483E407F914 | ApiSet: undefined
 */
export function setAudioVehiclePriority(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetAudioVehiclePriority(_vehicle, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x3BD3F52BA9B1E4E8 | ApiSet: undefined
 */
export function setGpsActive(active) {
    SetGpsActive(active);
}
/**
 * Hash: 0x76D683C108594D0E | ApiSet: undefined
 */
export function setHornEnabled(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetHornEnabled(_vehicle, toggle);
}
/**
 * Hash: 0xB2DE3AEBE31150E2 | ApiSet: undefined
 */
export function setIsScriptedSpeechDisabled(ped, disabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetIsScriptedSpeechDisabled(_ped, disabled);
}
/**
 * Hash: 0x95D2D383D5396B8A | ApiSet: undefined
 */
export function setPedIsDrunk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIsDrunk(_ped, toggle);
}
/**
 * Hash: 0x8BF907833BE275DE | ApiSet: undefined
 */
export function setPedInteriorWallaDensity(p0, p1) {
    SetPedInteriorWallaDensity(p0, p1);
}
/**
 * ```
 * https://en.m.wikipedia.org/wiki/Walla
 * ```
 * Hash: 0x149AEE66F0CB3A99 | ApiSet: undefined
 */
export function setPedWallaDensity(p0, p1) {
    SetPedWallaDensity(p0, p1);
}
/**
 * Hash: 0x044DBAD7A7FA2BE5 | ApiSet: undefined
 */
export function setPortalSettingsOverride(p0, p1) {
    SetPortalSettingsOverride(p0, p1);
}
/**
 * ```
 * p1: Entity.Relationship
 * p2: Player, Enemy, Teammate, Neutral
 * ```
 * Hash: 0x2E31ACA7477CF00F | ApiSet: undefined
 */
export function setSoundRelationshipOnPed(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetSoundRelationshipOnPed(_ped, p1, p2);
}
/**
 * Hash: 0x399D2D3B33F1B8EB | ApiSet: undefined
 */
export function setStaticEmitterEnabled(emitterName, toggle) {
    SetStaticEmitterEnabled(emitterName, toggle);
}
/**
 * Hash: 0x503703EC1781B7D6 | ApiSet: undefined
 */
export function setVariableOnSoundWithId(soundId, variableName, variableValue) {
    SetVariableOnSoundWithId(soundId, variableName, variableValue);
}
/**
 * Hash: 0x9821B68CD3E05F2B | ApiSet: undefined
 */
export function setVariableOnSoundWithName(variableName, variableValue, audioName, audioRef) {
    SetVariableOnSoundWithName(variableName, variableValue, audioName, audioRef);
}
/**
 * ```
 * Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
 * ```
 * Hash: 0x2703EFB583F0949A | ApiSet: undefined
 */
export function setVofxPedVoice(ped, voice) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof voice === 'string')
        voice = this.getHashKey(voice);
    SetVofxPedVoice(_ped, voice);
}
/**
 * ```
 * whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
 * ```
 * Hash: 0x9963681A8BC69BF3 | ApiSet: undefined
 */
export function setWhistleConfigForPed(ped, whistleConfig, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetWhistleConfigForPed(_ped, whistleConfig, value);
}
/**
 * Hash: 0x9663FE6B7A61EB00 | ApiSet: undefined
 */
export function skipToNextScriptedConversationLine(p0) {
    SkipToNextScriptedConversationLine(p0);
}
/**
 * Hash: 0x013A80FC08F6E4F2 | ApiSet: undefined
 */
export function startAudioScene(scene) {
    return StartAudioScene(scene);
}
/**
 * Hash: 0x6339C1EA3979B5F7 | ApiSet: undefined
 */
export function startAudioSceneset(audioName, sceneset) {
    return StartAudioSceneset(audioName, sceneset);
}
/**
 * Hash: 0x23641AFE870AF385 | ApiSet: undefined
 */
export function startPreloadedConversation(convoRoot) {
    StartPreloadedConversation(convoRoot);
}
/**
 * Hash: 0x2E399EAFBEEA74D5 | ApiSet: undefined
 */
export function stopAllScriptedAudioSounds() {
    StopAllScriptedAudioSounds();
}
/**
 * Hash: 0x6B17C62C9635D2DC | ApiSet: undefined
 */
export function startScriptConversation(convoRoot, p1, p2, clone) {
    StartScriptConversation(convoRoot, p1, p2, clone);
}
/**
 * Hash: 0xDFE8422B3B94E688 | ApiSet: undefined
 */
export function stopAudioScene(scene) {
    StopAudioScene(scene);
}
/**
 * Hash: 0x36559148B78853B3 | ApiSet: undefined
 */
export function stopAllScriptedConversions(p0, p1, p2) {
    StopAllScriptedConversions(p0, p1, p2);
}
/**
 * Hash: 0x9428447DED71FC7E | ApiSet: undefined
 */
export function stopAudioSceneset(sceneset) {
    StopAudioSceneset(sceneset);
}
/**
 * Hash: 0xBAC7FC81A75EC1A1 | ApiSet: undefined
 */
export function stopAudioScenes() {
    StopAudioScenes();
}
/**
 * Hash: 0x79D2F0E66F81D90D | ApiSet: undefined
 */
export function stopCurrentPlayingSpeech(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopCurrentPlayingSpeech(_ped, p1);
}
/**
 * Hash: 0xB8BEC0CA6F0EDB0F | ApiSet: undefined
 */
export function stopCurrentPlayingAmbientSpeech(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopCurrentPlayingAmbientSpeech(_ped, p1);
}
/**
 * Hash: 0x9D64D7405520E3D3 | ApiSet: undefined
 */
export function stopPedSpeaking(ped, shaking) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopPedSpeaking(_ped, shaking);
}
/**
 * Hash: 0xD79DEEFB53455EBA | ApiSet: undefined
 */
export function stopScriptedConversation(p0, p1, p2) {
    return StopScriptedConversation(p0, p1, p2);
}
/**
 * Hash: 0x3210BCB36AF7621B | ApiSet: undefined
 */
export function stopSoundWithId(soundId) {
    StopSoundWithId(soundId);
}
/**
 * Hash: 0x0F2A2175734926D8 | ApiSet: undefined
 */
export function stopSoundWithName(audioName, audioRef) {
    StopSoundWithName(audioName, audioRef);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
 * ```
 * Hash: 0x706D57B0F50DA710 | ApiSet: undefined
 */
export function triggerMusicEvent(eventName) {
    return TriggerMusicEvent(eventName);
}
/**
 * Hash: 0xA4718A1419D18151 | ApiSet: undefined
 */
export function stopStream(streamId) {
    StopStream(streamId);
}
/**
 * ```
 * _UNLOAD_[A-C]* - USE_*
 * ```
 * Hash: 0x87E6302FC61208CC | ApiSet: undefined
 */
export function unloadSpeechContext(speechContext) {
    UnloadSpeechContext(speechContext);
}
/**
 * Hash: 0x05D6195FB4D428F4 | ApiSet: undefined
 */
export function triggerMusicEventWithHash(eventName) {
    if (typeof eventName === 'string')
        eventName = this.getHashKey(eventName);
    return TriggerMusicEventWithHash(eventName);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA8638BE228D4751A | ApiSet: undefined
 */
export function unregisterScriptWithAudio() {
    UnregisterScriptWithAudio();
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x0286617C8FC50A53 | ApiSet: undefined
 */
export function updateSoundPosition(soundId, position) {
    UpdateSoundPosition(soundId, position.x, position.y, position.z);
}
/**
 * Hash: 0xBF4DC1784BE94DFA | ApiSet: undefined
 */
export function useFootstepScriptSweeteners(ped, p1, hash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    UseFootstepScriptSweeteners(_ped, p1, hash);
}
/**
 * ```
 * nullsub, doesn't do anything
 * however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
 * badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
 * ```
 * Hash: 0xC31C44C43B48FDE3 | ApiSet: undefined
 */
export function reportPlayerBadSportBehavior(badSportBehaviorType) {
    return ReportPlayerBadSportBehavior(badSportBehaviorType);
}
/**
 * Hash: 0x6A9DF0FCD0C87FF9 | ApiSet: undefined
 */
export function bountyCancelWantedPoster() {
    BountyCancelWantedPoster();
}
/**
 * Hash: 0x2BA1BCC99826CDA2 | ApiSet: undefined
 */
export function bountyCancelLegendaryMission() {
    BountyCancelLegendaryMission();
}
/**
 * Hash: 0x932DB3C05A7465D1 | ApiSet: undefined
 */
export function bountyClearBeingTarget() {
    BountyClearBeingTarget();
}
/**
 * Hash: 0xA59D1997ECD99F0A | ApiSet: undefined
 */
export function bountyClearBeingBountyHunter() {
    BountyClearBeingBountyHunter();
}
/**
 * Hash: 0x8FAF4D262FABA99C | ApiSet: undefined
 */
export function bountyGetCooldownCollection() {
    return BountyGetCooldownCollection();
}
/**
 * Hash: 0x4EF23E04A0C8FF51 | ApiSet: undefined
 */
export function bountyGetBountyOnPlayer() {
    return BountyGetBountyOnPlayer();
}
/**
 * Hash: 0xB395A44A0C7CA615 | ApiSet: undefined
 */
export function bountyGetWantedPosterSlot(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return BountyGetWantedPosterSlot(p0, p1);
}
/**
 * Hash: 0x85E4D7B225A30ED1 | ApiSet: undefined
 */
export function bountyGetLegendaryTarget(p0) {
    return BountyGetLegendaryTarget(p0);
}
/**
 * Hash: 0x03B61CD51097DE60 | ApiSet: undefined
 */
export function bountyIsRequestPending() {
    return BountyIsRequestPending();
}
/**
 * Hash: 0xB096547D61868254 | ApiSet: undefined
 */
export function bountyRequestBecomeTargetOfCharacterBountyHunt() {
    return BountyRequestBecomeTargetOfCharacterBountyHunt();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x48E4E23F1739E197 | ApiSet: undefined
 */
export function bountyRequestBeginLegendaryMissionForPosse(p1, p2) {
    return BountyRequestBeginLegendaryMissionForPosse(p1, p2);
}
/**
 * Hash: 0xFFA13742E43507E3 | ApiSet: undefined
 */
export function bountyRequestBeginWantedPoster(p1) {
    return BountyRequestBeginWantedPoster(p1);
}
/**
 * Hash: 0xFC81D7C7A151CFAA | ApiSet: undefined
 */
export function bountyRequestBeginLegendaryMission(p1, p2) {
    return BountyRequestBeginLegendaryMission(p1, p2);
}
/**
 * Hash: 0xA9C3B0F746375162 | ApiSet: undefined
 */
export function bountyRequestClaimCharacterBounty(p1) {
    return BountyRequestClaimCharacterBounty(p1);
}
/**
 * Hash: 0x727AB6F008BB9F29 | ApiSet: undefined
 */
export function bountyRequestCompleteWantedPoster() {
    return BountyRequestCompleteWantedPoster();
}
/**
 * Hash: 0x28717806D3BDD0D0 | ApiSet: undefined
 */
export function bountyRequestBribeJailGuard(p1) {
    return BountyRequestBribeJailGuard(p1);
}
/**
 * Hash: 0x537CE992BD2D7BCB | ApiSet: undefined
 */
export function bountyRequestPayOffBounty() {
    return BountyRequestPayOffBounty();
}
/**
 * Hash: 0xA7309AC0DCF6D950 | ApiSet: undefined
 */
export function bountyRequestCompleteLegendaryMission() {
    return BountyRequestCompleteLegendaryMission();
}
/**
 * Hash: 0x5B53CA0E2AC3FF45 | ApiSet: undefined
 */
export function bountyRequestPosseLeaderClaimCharacterBounty(p1) {
    return BountyRequestPosseLeaderClaimCharacterBounty(p1);
}
/**
 * Hash: 0xFBD137BF0EC50FC9 | ApiSet: undefined
 */
export function bountyRequestCompleteSplitWantedPoster() {
    return BountyRequestCompleteSplitWantedPoster();
}
/**
 * Hash: 0x22D3A61CE053270C | ApiSet: undefined
 */
export function bountyRequestPosseMemberClaimCharacterBountyShare() {
    return BountyRequestPosseMemberClaimCharacterBountyShare();
}
/**
 * Hash: 0x12E981D53B07BF48 | ApiSet: undefined
 */
export function bountyRequestEscapedCharacterBountyHunt() {
    return BountyRequestEscapedCharacterBountyHunt();
}
/**
 * ```
 * crimeType: see _REPORT_CRIME
 * ```
 * Hash: 0x188B748861B5BA17 | ApiSet: undefined
 */
export function bountyRequestSelfReportCrime(crimeType, p2) {
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return BountyRequestSelfReportCrime(crimeType, p2);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x587BCEC31D64F382 | ApiSet: undefined
 */
export function bountyRequestPayOffBountyEx(p1, costType) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof costType === 'string')
        costType = this.getHashKey(costType);
    return BountyRequestPayOffBountyEx(p1, costType);
}
/**
 * Hash: 0x3F73AED12A5EF0FF | ApiSet: undefined
 */
export function bountyRequestServedFullJailSentence() {
    return BountyRequestServedFullJailSentence();
}
/**
 * Hash: 0x2D874BA20E8E1F20 | ApiSet: undefined
 */
export function bountyRequestPosseLeaderEscapedCharacterBountyHunt() {
    return BountyRequestPosseLeaderEscapedCharacterBountyHunt();
}
/**
 * Hash: 0x81847C2134039BDC | ApiSet: undefined
 */
export function _0x81847C2134039BDC() {
    return Citizen.invokeNative('0x81847C2134039BDC');
}
/**
 * Hash: 0x8521C2E235558278 | ApiSet: undefined
 */
export function bountyRequestPosseMemberEscapedCharacterBountyHunt() {
    return BountyRequestPosseMemberEscapedCharacterBountyHunt();
}
/**
 * Hash: 0xB462D69D406A2602 | ApiSet: undefined
 */
export function bountyRequestSelfReportKilledByBountyHunter() {
    return BountyRequestSelfReportKilledByBountyHunter();
}
/**
 * ```
 * _BOUNTY_IS_* or _BOUNTY_REQUEST_*
 * ```
 * Hash: 0x27D3A0E1FE090A43 | ApiSet: undefined
 */
export function _0x27D3A0E1FE090A43() {
    return Citizen.invokeNative('0x27D3A0E1FE090A43');
}
/**
 * ```
 * _BOUNTY_C* or _BOUNTY_GET_*
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x86EC5F83867C4B70 | ApiSet: undefined
 */
export function _0x86EC5F83867C4B70() {
    return Citizen.invokeNative('0x86EC5F83867C4B70');
}
/**
 * Hash: 0xC1F04FB37E3F0E57 | ApiSet: undefined
 */
export function _0xC1F04FB37E3F0E57(p0, p1) {
    return Citizen.invokeNative('0xC1F04FB37E3F0E57', p0, p1);
}
/**
 * ```
 * _BOUNTY_GET_*
 * ```
 * Hash: 0xF8BCC5ECA33AC9C1 | ApiSet: undefined
 */
export function _0xF8BCC5ECA33AC9C1() {
    return Citizen.invokeNative('0xF8BCC5ECA33AC9C1');
}
/**
 * ```
 * _BOUNTY_GET_*
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xD6A67E2FF373D0E3 | ApiSet: undefined
 */
export function _0xD6A67E2FF373D0E3(p0) {
    return Citizen.invokeNative('0xD6A67E2FF373D0E3', p0);
}
/**
 * Hash: 0x3F44EA613A5B2676 | ApiSet: undefined
 */
export function disableScriptBrainSet(brainSet) {
    DisableScriptBrainSet(brainSet);
}
/**
 * Hash: 0x1CF6E5C6750EADBD | ApiSet: undefined
 */
export function enableScriptBrainSet(brainSet) {
    EnableScriptBrainSet(brainSet);
}
/**
 * ```
 * Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
 * _SET_SCRIPT_BRAIN*
 * ```
 * Hash: 0x4AA5EA1EDFB25786 | ApiSet: undefined
 */
export function _0x4AA5EA1EDFB25786(flag) {
    Citizen.invokeNative('0x4AA5EA1EDFB25786', flag);
}
/**
 * ```
 * Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
 * Alternative name _REGISTER_SCRIPT_BRAIN
 * ```
 * Hash: 0xA32B0B05EFF75730 | ApiSet: undefined
 */
export function reactivateAllObjectBrainsThatAreWaitingTillOutOfRange() {
    ReactivateAllObjectBrainsThatAreWaitingTillOutOfRange();
}
/**
 * Hash: 0x6818D1A194E29983 | ApiSet: undefined
 */
export function getScriptBrainEntity() {
    return GetScriptBrainEntity();
}
/**
 * ```
 * Common flags: 250, 99999
 * _SET_SCRIPT_BRAIN*
 * ```
 * Hash: 0xA6AC35DB4A7957A8 | ApiSet: undefined
 */
export function _0xA6AC35DB4A7957A8(flag) {
    Citizen.invokeNative('0xA6AC35DB4A7957A8', flag);
}
/**
 * ```
 * Registers a script for any object with a specific model hash.
 * ```
 * Hash: 0x16AF9B4EEAC3B305 | ApiSet: undefined
 */
export function registerObjectScriptBrain(scriptName, modelHash, p2, activationRange, p4, p5) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    RegisterObjectScriptBrain(scriptName, modelHash, p2, activationRange, p4, p5);
}
/**
 * Hash: 0x74C333E34DF74E8A | ApiSet: undefined
 */
export function reactivateNamedObjectBrainsWaitingTillOutOfRange(scriptName) {
    ReactivateNamedObjectBrainsWaitingTillOutOfRange(scriptName);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x38F1E09224EECA09 | ApiSet: undefined
 */
export function removeScriptBrainEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveScriptBrainEntity(_entity);
}
/**
 * ```
 * Returns threadId
 * ```
 * Hash: 0x4E4507CC5E4DB869 | ApiSet: undefined
 */
export function startPreloadedScriptBrain(entity, scriptName, scriptStackSize, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartPreloadedScriptBrain(_entity, scriptName, scriptStackSize, p3);
}
/**
 * ```
 * Returns threadId
 * ```
 * Hash: 0x6F62FAE266DCFC81 | ApiSet: undefined
 */
export function startScriptBrain(entity, scriptName, p2, p4, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartScriptBrain(_entity, scriptName, p2, p4, p5);
}
/**
 * ```
 * Rounds a float value up to the next whole number
 * ```
 * Hash: 0x11E019C8F43ACC8A | ApiSet: undefined
 */
export function ceil(value) {
    return Ceil(value);
}
/**
 * ```
 * Rounds a float value down to the next whole number
 * ```
 * Hash: 0xF34EE736CF047844 | ApiSet: undefined
 */
export function floor(value) {
    return Floor(value);
}
/**
 * Hash: 0xD0FFB162F40A139C | ApiSet: undefined
 */
export function cos(value) {
    return Cos(value);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE816E655DE37FE20 | ApiSet: undefined
 */
export function log10(value) {
    return Log10(value);
}
/**
 * Hash: 0xE3621CC40F31FE2E | ApiSet: undefined
 */
export function pow(base, exponent) {
    return Pow(base, exponent);
}
/**
 * Hash: 0xF2DB717A73826179 | ApiSet: undefined
 */
export function round(value) {
    return Round(value);
}
/**
 * ```
 * THREAD_PRIO_HIGHEST = 0
 * THREAD_PRIO_NORMAL = 1
 * THREAD_PRIO_LOWEST = 2
 * THREAD_PRIO_MANUAL_UPDATE = 100
 * ```
 * Hash: 0x42B65DEEF2EDF2A1 | ApiSet: undefined
 */
export function setThisThreadPriority(priority) {
    SetThisThreadPriority(priority);
}
/**
 * Hash: 0xEDD95A39E5544DE8 | ApiSet: undefined
 */
export function shiftLeft(value, bitShift) {
    return ShiftLeft(value, bitShift);
}
/**
 * Hash: 0xC1B1E9A034A63A62 | ApiSet: undefined
 */
export function settimera(value) {
    Settimera(value);
}
/**
 * Hash: 0x5AE11BC36633DE4E | ApiSet: undefined
 */
export function settimerb(value) {
    Settimerb(value);
}
/**
 * Hash: 0x97EF1E5BCE9DC075 | ApiSet: undefined
 */
export function shiftRight(value, bitShift) {
    return ShiftRight(value, bitShift);
}
/**
 * ```
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 * ```
 * Hash: 0x83666F9FB8FEBD4B | ApiSet: undefined
 */
export function timera() {
    return Timera();
}
/**
 * Hash: 0x0BADBFA3B172435F | ApiSet: undefined
 */
export function sin(value) {
    return Sin(value);
}
/**
 * Hash: 0x71D93B57D07F9804 | ApiSet: undefined
 */
export function sqrt(value) {
    return Sqrt(value);
}
/**
 * Hash: 0xC9D9444186B5A374 | ApiSet: undefined
 */
export function timerb() {
    return Timerb();
}
/**
 * Hash: 0xBBDA792448DB5A89 | ApiSet: undefined
 */
export function toFloat(value) {
    return ToFloat(value);
}
/**
 * ```
 * Gets the current frame time.
 * ```
 * Hash: 0x0000000050597EE2 | ApiSet: undefined
 */
export function timestep() {
    return Timestep();
}
/**
 * ```
 * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
 * The value returned will be in RAGE units.
 * ```
 * Hash: 0xB7A628320EFF8E47 | ApiSet: undefined
 */
export function vdist2(x1, y1, z1, x2, y2, z2) {
    return Vdist2(x1, y1, z1, x2, y2, z2);
}
/**
 * ```
 * Calculates distance between vectors.
 * The value returned will be in meters.
 * ```
 * Hash: 0x2A488C176D52CCA5 | ApiSet: undefined
 */
export function vdist(x1, y1, z1, x2, y2, z2) {
    return Vdist(x1, y1, z1, x2, y2, z2);
}
/**
 * ```
 * Calculates the magnitude of a vector.
 * ```
 * Hash: 0x652D2EEEF1D3E62C | ApiSet: undefined
 */
export function vmag(position) {
    return Vmag(position.x, position.y, position.z);
}
/**
 * ```
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 * ```
 * Hash: 0xA8CEACB4F35AE058 | ApiSet: undefined
 */
export function vmag2(position) {
    return Vmag2(position.x, position.y, position.z);
}
/**
 * Hash: 0x4EDE34FBADD967A6 | ApiSet: undefined
 */
export function wait(ms) {
    Wait(ms);
}
/**
 * Hash: 0x718CF1328D20C2B3 | ApiSet: undefined
 */
export function abortAnimScene(animScene, p1) {
    AbortAnimScene(animScene, p1);
}
/**
 * Hash: 0xDC418495DBA327A1 | ApiSet: undefined
 */
export function attachAnimSceneToEntity(animScene, entity, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AttachAnimSceneToEntity(animScene, _entity, p2);
}
/**
 * Hash: 0x1C0B105C3F30B88D | ApiSet: undefined
 */
export function attachAnimSceneToEntityPreservingLocation(animScene, entity, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AttachAnimSceneToEntityPreservingLocation(animScene, _entity, p2);
}
/**
 * Hash: 0x1B70811D3BF75DB9 | ApiSet: undefined
 */
export function blockAnimSceneFadingNextFrame(p0, p1) {
    BlockAnimSceneFadingNextFrame(p0, p1);
}
/**
 * Hash: 0x661B8683611B9B97 | ApiSet: undefined
 */
export function checkOwnershipOfAnimScene(animScene) {
    return CheckOwnershipOfAnimScene(animScene);
}
/**
 * Hash: 0x8A8208AE92BF87A5 | ApiSet: undefined
 */
export function clearAnimSceneWasSkipped(animScene) {
    ClearAnimSceneWasSkipped(animScene);
}
/**
 * Hash: 0xBC781D24AA11F179 | ApiSet: undefined
 */
export function clearBreakoutArchetype(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearBreakoutArchetype(_ped);
}
/**
 * Hash: 0x73616E64696C616E | ApiSet: undefined
 */
export function couldAnimSceneEntityReachExitNextFrame(animScene, entityName, p2, p3) {
    return CouldAnimSceneEntityReachExitNextFrame(animScene, entityName, p2, p3);
}
/**
 * ```
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
 * ```
 * Hash: 0x1FCA98E33C1437B3 | ApiSet: undefined
 */
export function createAnimScene(animDict, flags, playbackListName, p3, p4) {
    return CreateAnimScene(animDict, flags, playbackListName, p3, p4);
}
/**
 * Hash: 0x84EEDB2C6E650000 | ApiSet: undefined
 */
export function deleteAnimScene(animScene) {
    DeleteAnimScene(animScene);
}
/**
 * ```
 * Returns mgmHandle
 * ```
 * Hash: 0xA1300DE03E5D1973 | ApiSet: undefined
 */
export function createMgmSystem(mgmFilename) {
    return CreateMgmSystem(mgmFilename);
}
/**
 * Hash: 0x53CB3970BA02E3CC | ApiSet: undefined
 */
export function deleteMgmSystem(mgmHandle) {
    DeleteMgmSystem(mgmHandle);
}
/**
 * Hash: 0x6843A1AA3A336DFF | ApiSet: undefined
 */
export function detachAnimScene(animScene) {
    DetachAnimScene(animScene);
}
/**
 * Hash: 0xA2507C4948C83D2E | ApiSet: undefined
 */
export function detachAnimScenePreservingLocation(animScene) {
    DetachAnimScenePreservingLocation(animScene);
}
/**
 * Hash: 0x25557E324489393C | ApiSet: undefined
 */
export function doesAnimSceneExist(animScene) {
    return DoesAnimSceneExist(animScene);
}
/**
 * Hash: 0xA9016536015DE29D | ApiSet: undefined
 */
export function doesAnimScenePlayListExist(animScene, playbackListName) {
    return DoesAnimScenePlayListExist(animScene, playbackListName);
}
/**
 * Hash: 0x9D1ECA9337BE9FC3 | ApiSet: undefined
 */
export function doesAnimSceneOwnershipOfEntityExist(animScene, entityName) {
    return DoesAnimSceneOwnershipOfEntityExist(animScene, entityName);
}
/**
 * Hash: 0x6F1F0B17109309DA | ApiSet: undefined
 */
export function doesEntityWithIdExistInAnimScene(animScene, entityId) {
    return DoesEntityWithIdExistInAnimScene(animScene, entityId);
}
/**
 * Hash: 0xA41351EA2A18A0AD | ApiSet: undefined
 */
export function fadeAnimSceneAudioIn(animScene, p1) {
    FadeAnimSceneAudioIn(animScene, p1);
}
/**
 * Hash: 0x323E3AD772BA5D57 | ApiSet: undefined
 */
export function fadeAnimSceneAudioOut(animScene, p1) {
    FadeAnimSceneAudioOut(animScene, p1);
}
/**
 * Hash: 0x07A6F6447ECA9B64 | ApiSet: undefined
 */
export function getAnimSceneBool(animScene, name) {
    return GetAnimSceneBool(animScene, name);
}
/**
 * Hash: 0x4822A65D5AF64E69 | ApiSet: undefined
 */
export function getAnimSceneCurrentActiveCameraCount(animScene) {
    return GetAnimSceneCurrentActiveCameraCount(animScene);
}
/**
 * Hash: 0x49F1D143ADE32656 | ApiSet: undefined
 */
export function getAnimSceneDuration(animScene) {
    return GetAnimSceneDuration(animScene);
}
/**
 * Hash: 0xAE5ADA4FE3E21ADC | ApiSet: undefined
 */
export function getAnimSceneDict(animScene) {
    return GetAnimSceneDict(animScene);
}
/**
 * Hash: 0x8398438D8F14F56D | ApiSet: undefined
 */
export function getAnimSceneEntityLocationData(animScene, entityName, p3, playbackListName, p5) {
    const result = GetAnimSceneEntityLocationData(animScene, entityName, p3, playbackListName, p5);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0x2B7277484CC095FD | ApiSet: undefined
 */
export function getAnimSceneInt(animScene, name) {
    return GetAnimSceneInt(animScene, name);
}
/**
 * Hash: 0xCC24CB07F60B496E | ApiSet: undefined
 */
export function getAnimSceneFloat(animScene, name) {
    return GetAnimSceneFloat(animScene, name);
}
/**
 * Hash: 0xFB5674687A1B2814 | ApiSet: undefined
 */
export function getAnimSceneObject(animScene, name, isNetwork) {
    return GetAnimSceneObject(animScene, name, isNetwork);
}
/**
 * Hash: 0xADF1D53F3B1FE0A7 | ApiSet: undefined
 */
export function getAnimSceneOrigin(animScene, order) {
    const result = GetAnimSceneOrigin(animScene, order);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4])];
}
/**
 * Hash: 0x3FBC3F51BF12DFBF | ApiSet: undefined
 */
export function getAnimScenePhase(animScene) {
    return GetAnimScenePhase(animScene);
}
/**
 * Hash: 0xE5822422197BBBA3 | ApiSet: undefined
 */
export function getAnimScenePed(animScene, name, isNetwork) {
    return GetAnimScenePed(animScene, name, isNetwork);
}
/**
 * Hash: 0x43C21623E42B821B | ApiSet: undefined
 */
export function getAnimSceneRate(animScene) {
    return GetAnimSceneRate(animScene);
}
/**
 * Hash: 0x9E036D5204FFBBC8 | ApiSet: undefined
 */
export function getAnimScenePlaybackListPhaseAudioLoadStress(animScene, phaseName) {
    return GetAnimScenePlaybackListPhaseAudioLoadStress(animScene, phaseName);
}
/**
 * Hash: 0x61BE7D6186260002 | ApiSet: undefined
 */
export function getAnimSceneTime(animScene) {
    return GetAnimSceneTime(animScene);
}
/**
 * Hash: 0x430EE0A19BC5A287 | ApiSet: undefined
 */
export function getAnimSceneVehicle(animScene, name, isNetwork) {
    return GetAnimSceneVehicle(animScene, name, isNetwork);
}
/**
 * Hash: 0xF94692EB9DC15D74 | ApiSet: undefined
 */
export function hasAnimSceneExited(animScene, p1) {
    return HasAnimSceneExited(animScene, p1);
}
/**
 * ```
 * _HAS_L* (?)
 * ```
 * Hash: 0x337F1CC8EE895601 | ApiSet: undefined
 */
export function hasEntityEnteredAnimScene(animScene, entityName) {
    return HasEntityEnteredAnimScene(animScene, entityName);
}
/**
 * Hash: 0xB89FCFF19DAFFF28 | ApiSet: undefined
 */
export function hasEntityExitedAnimScene(animScene, entityName) {
    return HasEntityExitedAnimScene(animScene, entityName);
}
/**
 * Hash: 0x34A0671BE613D3D0 | ApiSet: undefined
 */
export function isAnimSceneAborted(animScene) {
    return IsAnimSceneAborted(animScene);
}
/**
 * Hash: 0xD8254CB2C586412B | ApiSet: undefined
 */
export function isAnimSceneFinished(animScene, p1) {
    return IsAnimSceneFinished(animScene, p1);
}
/**
 * Hash: 0xCDC5512A407CF08D | ApiSet: undefined
 */
export function isAnimSceneExitingThisFrame(animScene) {
    return IsAnimSceneExitingThisFrame(animScene);
}
/**
 * Hash: 0x8D81E7824B7753F7 | ApiSet: undefined
 */
export function isAnimSceneInSection(animScene, sectionName, p2) {
    return IsAnimSceneInSection(animScene, sectionName, p2);
}
/**
 * Hash: 0x59606519FF9D3EC2 | ApiSet: undefined
 */
export function isAnimSceneLoading(animScene, p1) {
    return IsAnimSceneLoading(animScene, p1);
}
/**
 * Hash: 0x477122B8D05E7968 | ApiSet: undefined
 */
export function isAnimSceneLoaded(animScene, p1, p2) {
    return IsAnimSceneLoaded(animScene, p1, p2);
}
/**
 * Hash: 0xF8D1D2DAB6007EEF | ApiSet: undefined
 */
export function isAnimSceneMetadataAssetInRangeLoading(animScene, p1) {
    return IsAnimSceneMetadataAssetInRangeLoading(animScene, p1);
}
/**
 * Hash: 0x95531A4A20CCE7BC | ApiSet: undefined
 */
export function isAnimSceneMetadataLoaded(animScene, p1) {
    return IsAnimSceneMetadataLoaded(animScene, p1);
}
/**
 * Hash: 0x4B4038796F0D6566 | ApiSet: undefined
 */
export function isAnimScenePaused(animScene) {
    return IsAnimScenePaused(animScene);
}
/**
 * Hash: 0x23E33CB9F4A3F547 | ApiSet: undefined
 */
export function isAnimScenePlaybackListPhaseLoaded(animScene, phaseName) {
    return IsAnimScenePlaybackListPhaseLoaded(animScene, phaseName);
}
/**
 * Hash: 0xCBFC7725DE6CE2E0 | ApiSet: undefined
 */
export function isAnimSceneRunning(animScene, p1) {
    return IsAnimSceneRunning(animScene, p1);
}
/**
 * Hash: 0x1F0E401031E20146 | ApiSet: undefined
 */
export function isAnimScenePlaybackListPhaseActive(animScene, phaseName) {
    return IsAnimScenePlaybackListPhaseActive(animScene, phaseName);
}
/**
 * Hash: 0x005E6F28DD7ED58D | ApiSet: undefined
 */
export function isEntityExitingAnimSceneThisFrame(animScene, entityName) {
    return IsEntityExitingAnimSceneThisFrame(animScene, entityName);
}
/**
 * Hash: 0x0DF57F86FE71DBE5 | ApiSet: undefined
 */
export function isAnimScenePlaybackListPhaseLoading(animScene, phaseName) {
    return IsAnimScenePlaybackListPhaseLoading(animScene, phaseName);
}
/**
 * Hash: 0x4CDFFE3189EBDBD0 | ApiSet: undefined
 */
export function isAnimSceneSkippable(animScene) {
    return IsAnimSceneSkippable(animScene);
}
/**
 * ```
 * MGM stands for MiniGameMoments.
 * ```
 * Hash: 0xFDFC14799373283F | ApiSet: undefined
 */
export function isMgmSystemLoaded(mgmFilename) {
    return IsMgmSystemLoaded(mgmFilename);
}
/**
 * Hash: 0x3AB6C7B0BB0DF4B1 | ApiSet: undefined
 */
export function isEntityPlayingAnimScene(entity, animScene) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityPlayingAnimScene(_entity, animScene);
}
/**
 * Hash: 0xAF068580194D9DC7 | ApiSet: undefined
 */
export function loadAnimScene(animScene) {
    LoadAnimScene(animScene);
}
/**
 * ```
 * Used to request MiniGameMoments Assets.
 * mgmFilename's:
 * Poker
 * PokerArthur
 * PokerArthurCamp
 * PokerJohn
 * PokerJohnCamp
 * ```
 * Hash: 0xB727A847862CB00A | ApiSet: undefined
 */
export function loadMgmAssets(mgmFilename) {
    return LoadMgmAssets(mgmFilename);
}
/**
 * ```
 * Used in SP R* Scripts only
 * Params: p1 = 2B-LowHonor, 2A-HighHonor
 * ```
 * Hash: 0x1407F5115FB9583E | ApiSet: undefined
 */
export function _0x1407F5115FB9583E(animScene, p1) {
    return Citizen.invokeNative('0x1407F5115FB9583E', animScene, p1);
}
/**
 * ```
 * Used in braithwaites2 SP R* Scripts only
 * _A*
 * ```
 * Hash: 0x1AD896BF43619551 | ApiSet: undefined
 */
export function _0x1AD896BF43619551() {
    Citizen.invokeNative('0x1AD896BF43619551');
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_PED_* - _IS_SC*
 * ```
 * Hash: 0x2DB524750DC41ED4 | ApiSet: undefined
 */
export function _0x2DB524750DC41ED4() {
    return Citizen.invokeNative('0x2DB524750DC41ED4');
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_P*
 * ```
 * Hash: 0x1C5D33A4293E6DDE | ApiSet: undefined
 */
export function _0x1C5D33A4293E6DDE(animScene, phaseName) {
    return Citizen.invokeNative('0x1C5D33A4293E6DDE', animScene, phaseName);
}
/**
 * ```
 * p2: MINIGAME_GET_SECONDARY_VOICE_STRING
 * _SET_*
 * ```
 * Hash: 0x3641FCD53E59B335 | ApiSet: undefined
 */
export function _0x3641FCD53E59B335(mgmHandle, ped, secondaryVoiceString) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3641FCD53E59B335', mgmHandle, _ped, secondaryVoiceString);
}
/**
 * ```
 * Used in Script Function CUTSCENE_MANAGE_SKIP
 * _CHECK_* (?)
 * ```
 * Hash: 0x4B85B3CF91972222 | ApiSet: undefined
 */
export function _0x4B85B3CF91972222(animScene) {
    return Citizen.invokeNative('0x4B85B3CF91972222', animScene);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_*
 * ```
 * Hash: 0x3B393716C3FD8237 | ApiSet: undefined
 */
export function _0x3B393716C3FD8237(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x3B393716C3FD8237', _ped);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
 * ```
 * Hash: 0x5D7BFDA2290B4E39 | ApiSet: undefined
 */
export function _0x5D7BFDA2290B4E39(p0) {
    return Citizen.invokeNative('0x5D7BFDA2290B4E39', p0);
}
/**
 * ```
 * Only used in tg_p R* Script
 * Returns true when mgm event success
 * _PREPARE_* - _REGISTER_*
 * ```
 * Hash: 0x61B2AAEF645DDAF0 | ApiSet: undefined
 */
export function _0x61B2AAEF645DDAF0(mgmEventHandle, p1, seatId, p3, p4) {
    return Citizen.invokeNative('0x61B2AAEF645DDAF0', mgmEventHandle, p1, seatId, p3, p4);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _CO* - _CR*
 * ```
 * Hash: 0x73616E64696C132E | ApiSet: undefined
 */
export function _0x73616E64696C132E(animScene, p1) {
    return Citizen.invokeNative('0x73616E64696C132E', animScene, p1);
}
/**
 * ```
 * _UNLOAD_* - _WAS_ANIM_SCENE_*
 * ```
 * Hash: 0xAE6DE22DE0ED4554 | ApiSet: undefined
 */
export function _0xAE6DE22DE0ED4554(mgmHandle, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xAE6DE22DE0ED4554', mgmHandle, _ped);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 * ```
 * Hash: 0x9AAE3C1148A09BCA | ApiSet: undefined
 */
export function _0x9AAE3C1148A09BCA(animScene) {
    return Citizen.invokeNative('0x9AAE3C1148A09BCA', animScene);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _RESUME_* - _SET_A*
 * ```
 * Hash: 0xC1193521E3B9FADD | ApiSet: undefined
 */
export function _0xC1193521E3B9FADD(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xC1193521E3B9FADD', _entity, p1);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _WAS_ANIM_SCENE_*
 * ```
 * Hash: 0xA96619FE85159ED2 | ApiSet: undefined
 */
export function _0xA96619FE85159ED2(animScene) {
    return Citizen.invokeNative('0xA96619FE85159ED2', animScene);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _SET_P*
 * ```
 * Hash: 0xCDCD7B2D49AEE73A | ApiSet: undefined
 */
export function _0xCDCD7B2D49AEE73A(p0) {
    Citizen.invokeNative('0xCDCD7B2D49AEE73A', p0);
}
/**
 * ```
 * _PREPARE_* - _REGISTER_*
 * ```
 * Hash: 0xB1A196BAFE650402 | ApiSet: undefined
 */
export function _0xB1A196BAFE650402(mgmHandle, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xB1A196BAFE650402', mgmHandle, _ped);
}
/**
 * ```
 * Used in SP R* Scripts only
 * _SET_B* - _SET_C*
 * ```
 * Hash: 0xE12D7B4B959644CD | ApiSet: undefined
 */
export function _0xE12D7B4B959644CD() {
    Citizen.invokeNative('0xE12D7B4B959644CD');
}
/**
 * ```
 * Used in SP R* Scripts only
 * _PAUSE_* - _PLAY_*
 * ```
 * Hash: 0xEA41D44A8D42057B | ApiSet: undefined
 */
export function _0xEA41D44A8D42057B() {
    return Citizen.invokeNative('0xEA41D44A8D42057B');
}
/**
 * ```
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 * ```
 * Hash: 0xD70C7A30412F8FA0 | ApiSet: undefined
 */
export function _0xD70C7A30412F8FA0(animScene) {
    return Citizen.invokeNative('0xD70C7A30412F8FA0', animScene);
}
/**
 * Hash: 0xAE6ADA8FE7E84ACC | ApiSet: undefined
 */
export function releaseAnimScenePlayList(animScene, playlistName) {
    return ReleaseAnimScenePlayList(animScene, playlistName);
}
/**
 * ```
 * Pauses all script threads except the one that called it.
 * ```
 * Hash: 0x37C1257849DEF24A | ApiSet: undefined
 */
export function pauseScriptThreads(toggle) {
    PauseScriptThreads(toggle);
}
/**
 * Hash: 0xDF7B5144E25CD3FE | ApiSet: undefined
 */
export function requestAnimScenePlayList(animScene, playlistName) {
    return RequestAnimScenePlayList(animScene, playlistName);
}
/**
 * Hash: 0x2BF96692C67F3E53 | ApiSet: undefined
 */
export function removeAnimSceneEntity(animScene, entityName, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveAnimSceneEntity(animScene, entityName, _entity);
}
/**
 * Hash: 0x41AFA5F228B0B6B0 | ApiSet: undefined
 */
export function requestPhotoModeDefreeze() {
    RequestPhotoModeDefreeze();
}
/**
 * Hash: 0x7C709C01D43D94CD | ApiSet: undefined
 */
export function requestPhotoModeFreeze() {
    RequestPhotoModeFreeze();
}
/**
 * Hash: 0x8E1BA705F63C1925 | ApiSet: undefined
 */
export function resumeAnimSceneFromLastCheckpoint(animScene) {
    ResumeAnimSceneFromLastCheckpoint(animScene);
}
/**
 * Hash: 0x8FDF221F13537936 | ApiSet: undefined
 */
export function resetAnimScene(animScene, playbackListName) {
    ResetAnimScene(animScene, playbackListName);
}
/**
 * Hash: 0x519E96C2C68B404B | ApiSet: undefined
 */
export function setAnimSceneBool(animScene, name, value, p3) {
    SetAnimSceneBool(animScene, name, value, p3);
}
/**
 * Hash: 0x8B720AD451CA2AB3 | ApiSet: undefined
 */
export function setAnimSceneEntity(animScene, entityName, entity, flags) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetAnimSceneEntity(animScene, entityName, _entity, flags);
}
/**
 * Hash: 0x6BC5104E68CBEFE8 | ApiSet: undefined
 */
export function setAnimSceneFloat(animScene, name, value, p3, p4) {
    SetAnimSceneFloat(animScene, name, value, p3, p4);
}
/**
 * Hash: 0x020894BF17A02EF2 | ApiSet: undefined
 */
export function setAnimSceneOrigin(animScene, posX, posY, posZ, rotX, rotY, rotZ, order) {
    SetAnimSceneOrigin(animScene, posX, posY, posZ, rotX, rotY, rotZ, order);
}
/**
 * Hash: 0x15598CFB25F3DC7E | ApiSet: undefined
 */
export function setAnimScenePlayList(animScene, playlistName, p2) {
    SetAnimScenePlayList(animScene, playlistName, p2);
}
/**
 * Hash: 0x3A379D2166CF5B92 | ApiSet: undefined
 */
export function setAnimSceneInt(animScene, name, value, p3) {
    SetAnimSceneInt(animScene, name, value, p3);
}
/**
 * Hash: 0xD6824B7D24DC0CE0 | ApiSet: undefined
 */
export function setAnimScenePaused(animScene, toggle) {
    SetAnimScenePaused(animScene, toggle);
}
/**
 * Hash: 0xAB5E7CAB074D6B84 | ApiSet: undefined
 */
export function setAnimScenePlaybackList(animScene, playbackListName) {
    SetAnimScenePlaybackList(animScene, playbackListName);
}
/**
 * Hash: 0x75820B801CFF262A | ApiSet: undefined
 */
export function setAnimSceneRate(animScene, rate) {
    SetAnimSceneRate(animScene, rate);
}
/**
 * Hash: 0xF4D94AF761768700 | ApiSet: undefined
 */
export function startAnimScene(animScene) {
    StartAnimScene(animScene);
}
/**
 * Hash: 0x99B2A2E3655DEAF1 | ApiSet: undefined
 */
export function setBreakoutArchetype(ped, archetype) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetBreakoutArchetype(_ped, archetype);
}
/**
 * Hash: 0x07706C4CC9C6CC9E | ApiSet: undefined
 */
export function setMgmEvent(mgmEventHandle, p1, seatId, p3, p4) {
    SetMgmEvent(mgmEventHandle, p1, seatId, p3, p4);
}
/**
 * Hash: 0x4B85B3CF9197AEDF | ApiSet: undefined
 */
export function triggerAnimSceneSkip(animScene) {
    TriggerAnimSceneSkip(animScene);
}
/**
 * Hash: 0xF7A4C571E572D237 | ApiSet: undefined
 */
export function takeOwnershipOfAnimScene(animScene) {
    TakeOwnershipOfAnimScene(animScene);
}
/**
 * Hash: 0xEF324E9550A394D5 | ApiSet: undefined
 */
export function wasAnimSceneSkipped(animScene) {
    return WasAnimSceneSkipped(animScene);
}
/**
 * ```
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 * p8 big values ~100 will slow down the camera movement before reaching this node
 * p9 != 0 seems to override the rotation/pitch (bool?)
 * ```
 * Hash: 0xF1F57F9D230F9CD1 | ApiSet: undefined
 */
export function addCamSplineNode(camera, position, xRot, yRot, zRot, length, p8, p9) {
    AddCamSplineNode(camera, position.x, position.y, position.z, xRot, yRot, zRot, length, p8, p9);
}
/**
 * Hash: 0x42ED56B02E05D109 | ApiSet: undefined
 */
export function allowMotionBlurDecay(cam, p1) {
    AllowMotionBlurDecay(cam, p1);
}
/**
 * Hash: 0xB8B207C34285E978 | ApiSet: undefined
 */
export function camCreate(cameraDictionary) {
    CamCreate(cameraDictionary);
}
/**
 * ```
 * Last param determines if its relative to the Entity
 * ```
 * Hash: 0xFDC0DF7F6FB0A592 | ApiSet: undefined
 */
export function attachCamToEntity(cam, entity, xOffset, yOffset, zOffset, isRelative) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AttachCamToEntity(cam, _entity, xOffset, yOffset, zOffset, isRelative);
}
/**
 * ```
 * boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 * ```
 * Hash: 0xDFC1E4A44C0324CA | ApiSet: undefined
 */
export function attachCamToPedBone(cam, ped, boneIndex, position, heading) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AttachCamToPedBone(cam, _ped, boneIndex, position.x, position.y, position.z, heading);
}
/**
 * Hash: 0x7B0279170961A73F | ApiSet: undefined
 */
export function camCreate2(cameraDictionary) {
    CamCreate2(cameraDictionary);
}
/**
 * Hash: 0x0A5A4F1979ABB40E | ApiSet: undefined
 */
export function camDestroy(cameraDictionary) {
    CamDestroy(cameraDictionary);
}
/**
 * Hash: 0x02389579A53C3276 | ApiSet: undefined
 */
export function cinematicLocationTriggerScriptedShotEvent(dictionary, shotName, cameraName, p3) {
    CinematicLocationTriggerScriptedShotEvent(dictionary, shotName, cameraName, p3);
}
/**
 * ```
 * Only used in R* Script fm_mission_controller
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0B0F914459731F60 | ApiSet: undefined
 */
export function cinematicLocationOverrideTargetEntityThisUpdate(name, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    CinematicLocationOverrideTargetEntityThisUpdate(name, _entity);
}
/**
 * Hash: 0xBC016635D6A73B31 | ApiSet: undefined
 */
export function cinematicLocationTriggerScriptedShotEvent2(dictionary, shotName, duration) {
    CinematicLocationTriggerScriptedShotEvent2(dictionary, shotName, duration);
}
/**
 * Hash: 0xE72CDBA7F0A02DD6 | ApiSet: undefined
 */
export function createCam(camName, p1) {
    return CreateCam(camName, p1);
}
/**
 * Hash: 0x0E94C95EC3185FA9 | ApiSet: undefined
 */
export function cinematicLocationSetLocationAndRotation(name, position, rotX, rotY, rotZ) {
    CinematicLocationSetLocationAndRotation(name, position.x, position.y, position.z, rotX, rotY, rotZ);
}
/**
 * Hash: 0x6D4D25C2137FF511 | ApiSet: undefined
 */
export function cinematicLocationStopScriptedShotEvent(p0, p1, p2) {
    CinematicLocationStopScriptedShotEvent(p0, p1, p2);
}
/**
 * Hash: 0x98B99B9F27E2D60B | ApiSet: undefined
 */
export function createCameraWithParams(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9) {
    if (typeof camHash === 'string')
        camHash = this.getHashKey(camHash);
    return CreateCameraWithParams(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9);
}
/**
 * ```
 * Creates Kill Cam for specified Ped Handle
 * ```
 * Hash: 0x2F994CC29CAA9D22 | ApiSet: undefined
 */
export function createKillCam(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    CreateKillCam(_ped);
}
/**
 * Hash: 0x40C23491CE83708E | ApiSet: undefined
 */
export function createCamWithParams(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9) {
    return CreateCamWithParams(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, p8, p9);
}
/**
 * Hash: 0x57CDF879EA466C46 | ApiSet: undefined
 */
export function createCamera(camHash, p1) {
    if (typeof camHash === 'string')
        camHash = this.getHashKey(camHash);
    return CreateCamera(camHash, p1);
}
/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 * ```
 * Hash: 0x4E67E0B6D7FD5145 | ApiSet: undefined
 */
export function destroyCam(cam, p1) {
    DestroyCam(cam, p1);
}
/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 * ```
 * Hash: 0x163600D6E136C9F8 | ApiSet: undefined
 */
export function destroyAllCams(p0) {
    DestroyAllCams(p0);
}
/**
 * Hash: 0x05B41DDBEB559556 | ApiSet: undefined
 */
export function detachCam(cam) {
    DetachCam(cam);
}
/**
 * Hash: 0x7E3F546ACFE6C8D9 | ApiSet: undefined
 */
export function disableCamCollisionForObject(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DisableCamCollisionForObject(_entity);
}
/**
 * Hash: 0x8910C24B7E0046EC | ApiSet: undefined
 */
export function disableCinematicModeThisFrame() {
    DisableCinematicModeThisFrame();
}
/**
 * ```
 * Does the same as 0x9C473089A934C930 (DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE)
 * ```
 * Hash: 0x05AB44D906738426 | ApiSet: undefined
 */
export function disableOnFootFirstPersonViewThisUpdate2() {
    DisableOnFootFirstPersonViewThisUpdate2();
}
/**
 * Hash: 0xA5929C2E57AC90D1 | ApiSet: undefined
 */
export function disableCinematicBonnetCameraThisUpdate() {
    DisableCinematicBonnetCameraThisUpdate();
}
/**
 * ```
 * Fades the screen in.
 * duration: The time the fade should take, in milliseconds.
 * ```
 * Hash: 0x6A053CF596F67DF7 | ApiSet: undefined
 */
export function doScreenFadeIn(duration) {
    DoScreenFadeIn(duration);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x77D65669A05D1A1A | ApiSet: undefined
 */
export function disableFirstPersonFlashEffectThisUpdate() {
    DisableFirstPersonFlashEffectThisUpdate();
}
/**
 * ```
 * Fades the screen out.
 * duration: The time the fade should take, in milliseconds.
 * ```
 * Hash: 0x40C719A5E410B9E4 | ApiSet: undefined
 */
export function doScreenFadeOut(duration) {
    DoScreenFadeOut(duration);
}
/**
 * Hash: 0x9C473089A934C930 | ApiSet: undefined
 */
export function disableOnFootFirstPersonViewThisUpdate() {
    DisableOnFootFirstPersonViewThisUpdate();
}
/**
 * ```
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * Params: targetPed = death cam focuses on it
 * ```
 * Hash: 0xE3639DB78B3B5400 | ApiSet: undefined
 */
export function forceCinematicDeathCamOnPed(targetPed) {
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    ForceCinematicDeathCamOnPed(_targetPed);
}
/**
 * ```
 * Returns whether or not the passed camera handle exists.
 * ```
 * Hash: 0x153AD457764FD704 | ApiSet: undefined
 */
export function doesCamExist(cam) {
    return DoesCamExist(cam);
}
/**
 * ```
 * Returns true if first person camera is active in saloon1.ysc
 * ```
 * Hash: 0x90DA5BA5C2635416 | ApiSet: undefined
 */
export function forceFirstPersonCamThisFrame() {
    return ForceFirstPersonCamThisFrame();
}
/**
 * Hash: 0x702B75DC9D3EDE56 | ApiSet: undefined
 */
export function forceCinematicRenderingThisUpdate(p0) {
    ForceCinematicRenderingThisUpdate(p0);
}
/**
 * Hash: 0xC64ABC0676AF262B | ApiSet: undefined
 */
export function forceLetterBoxThisUpdate() {
    ForceLetterBoxThisUpdate();
}
/**
 * ```
 * Forces camera position to furthest 3rd person
 * ```
 * Hash: 0x1CFB749AD4317BDE | ApiSet: undefined
 */
export function forceThirdPersonCamFarThisFrame() {
    ForceThirdPersonCamFarThisFrame();
}
/**
 * Hash: 0x027CAB2C3AF27010 | ApiSet: undefined
 */
export function freezeGameplayCamThisFrame() {
    FreezeGameplayCamThisFrame();
}
/**
 * ```
 * Forces camera position to second furthest 3rd person
 * ```
 * Hash: 0x8370D34BD2E60B73 | ApiSet: undefined
 */
export function forceThirdPersonCamThisFrame() {
    ForceThirdPersonCamThisFrame();
}
/**
 * Hash: 0x8101D32A0A6B0F60 | ApiSet: undefined
 */
export function getCamFov(cam) {
    return GetCamFov(cam);
}
/**
 * ```
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 * ```
 * Hash: 0x095EDCD24D90033A | ApiSet: undefined
 */
export function getCamSplinePhase(cam) {
    return GetCamSplinePhase(cam);
}
/**
 * Hash: 0x6B12F11C2A9F0344 | ApiSet: undefined
 */
export function getCamCoord(cam) {
    return new Vector3(GetCamCoord(cam));
}
/**
 * ```
 * rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
 * ```
 * Hash: 0x9BF96B57254E7889 | ApiSet: undefined
 */
export function getCamRot(cam, rotationOrder) {
    return new Vector3(GetCamRot(cam, rotationOrder));
}
/**
 * Hash: 0x5352E025EC2B416F | ApiSet: undefined
 */
export function getFinalRenderedCamCoord() {
    return new Vector3(GetFinalRenderedCamCoord());
}
/**
 * Hash: 0x04AF77971E508F6A | ApiSet: undefined
 */
export function getFinalRenderedCamFov() {
    return GetFinalRenderedCamFov();
}
/**
 * Hash: 0xB4132CA1B0EE1365 | ApiSet: undefined
 */
export function getFirstPersonAimCamZoomFactor() {
    return GetFirstPersonAimCamZoomFactor();
}
/**
 * Hash: 0x602685BD85DD26CA | ApiSet: undefined
 */
export function getFinalRenderedCamRot(rotationOrder) {
    return new Vector3(GetFinalRenderedCamRot(rotationOrder));
}
/**
 * Hash: 0xF6A96E5ACEEC6E50 | ApiSet: undefined
 */
export function getGameplayCamFov() {
    return GetGameplayCamFov();
}
/**
 * Hash: 0x595320200B98596E | ApiSet: undefined
 */
export function getGameplayCamCoord() {
    return new Vector3(GetGameplayCamCoord());
}
/**
 * Hash: 0xC4ABF536048998AA | ApiSet: undefined
 */
export function getGameplayCamRelativeHeading() {
    return GetGameplayCamRelativeHeading();
}
/**
 * Hash: 0x99AADEBBA803F827 | ApiSet: undefined
 */
export function getGameplayCamRelativePitch() {
    return GetGameplayCamRelativePitch();
}
/**
 * Hash: 0x0252D2B5582957A6 | ApiSet: undefined
 */
export function getGameplayCamRot(rotationOrder) {
    return new Vector3(GetGameplayCamRot(rotationOrder));
}
/**
 * ```
 * More info: see HAS_LETTER_BOX
 * ```
 * Hash: 0xA2B1C7EF759A63CE | ApiSet: undefined
 */
export function getLetterBoxRatio() {
    return GetLetterBoxRatio();
}
/**
 * Hash: 0x2533BAFFBE737E54 | ApiSet: undefined
 */
export function getPhotoModeFocalLength() {
    return GetPhotoModeFocalLength();
}
/**
 * Hash: 0x4653A741D17F2CD0 | ApiSet: undefined
 */
export function getPhotoModeDof() {
    return GetPhotoModeDof();
}
/**
 * Hash: 0x03A8931ECC8015D6 | ApiSet: undefined
 */
export function getRenderingCam() {
    return GetRenderingCam();
}
/**
 * Hash: 0x18FC740FFDCD7454 | ApiSet: undefined
 */
export function getPhotoModeFocusDistance() {
    return GetPhotoModeFocusDistance();
}
/**
 * Hash: 0x634F4A0562CF19B8 | ApiSet: undefined
 */
export function invalidateCinematicVehicleIdleMode() {
    InvalidateCinematicVehicleIdleMode();
}
/**
 * ```
 * More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
 * ```
 * Hash: 0x81DCFD13CF39920E | ApiSet: undefined
 */
export function hasLetterBox() {
    return HasLetterBox();
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x698F456FB909E077 | ApiSet: undefined
 */
export function isAimCamActive() {
    return IsAimCamActive();
}
/**
 * ```
 * Returns whether or not the passed camera handle is active.
 * ```
 * Hash: 0x63EFCC7E1810B8E6 | ApiSet: undefined
 */
export function isCamActive(cam) {
    return IsCamActive(cam);
}
/**
 * ```
 * Only used in R* Script camera_photomode
 * ```
 * Hash: 0x20389408F0E93B9A | ApiSet: undefined
 */
export function isAnimSceneCamActive() {
    return IsAnimSceneCamActive();
}
/**
 * Hash: 0xDD0B7C5AE58F721D | ApiSet: undefined
 */
export function isCamDataDictLoaded(cameraDictionary) {
    return IsCamDataDictLoaded(cameraDictionary);
}
/**
 * Hash: 0x578F8F1CAA17BD2B | ApiSet: undefined
 */
export function isCamInterpolating(cam) {
    return IsCamInterpolating(cam);
}
/**
 * Hash: 0x4415F8A6C536D39F | ApiSet: undefined
 */
export function isCamRendering(cam) {
    return IsCamRendering(cam);
}
/**
 * Hash: 0xA14D5FE82BCB1D9E | ApiSet: undefined
 */
export function isCamPhotofxRunning() {
    return IsCamPhotofxRunning();
}
/**
 * Hash: 0x927B810E43E99932 | ApiSet: undefined
 */
export function isCameraAvailable(cameraDictionary) {
    return IsCameraAvailable(cameraDictionary);
}
/**
 * Hash: 0x2EEB402BD7320159 | ApiSet: undefined
 */
export function isCamShaking(cam) {
    return IsCamShaking(cam);
}
/**
 * Hash: 0xAA235E2F2C09E952 | ApiSet: undefined
 */
export function isCinematicCamLocationLoaded(sLocationDictName) {
    return IsCinematicCamLocationLoaded(sLocationDictName);
}
/**
 * Hash: 0xBF7C780731AADBF8 | ApiSet: undefined
 */
export function isCinematicCamRendering() {
    return IsCinematicCamRendering();
}
/**
 * ```
 * Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
 * ```
 * Hash: 0x595550376B7EA230 | ApiSet: undefined
 */
export function isCinematicCamLocationLoaded2(locationDictName) {
    return IsCinematicCamLocationLoaded2(locationDictName);
}
/**
 * Hash: 0xF63134C54B6EC212 | ApiSet: undefined
 */
export function isFirstPersonAimCamActive() {
    return IsFirstPersonAimCamActive();
}
/**
 * Hash: 0x139EFB0A71DD9011 | ApiSet: undefined
 */
export function isDeathFailCameraRunning() {
    return IsDeathFailCameraRunning();
}
/**
 * Hash: 0xA40C2F51FB589E9A | ApiSet: undefined
 */
export function isFollowVehicleCamActive() {
    return IsFollowVehicleCamActive();
}
/**
 * Hash: 0xA24C1D341C6E0D53 | ApiSet: undefined
 */
export function isFirstPersonCameraActive(p0, p1, p2) {
    return IsFirstPersonCameraActive(p0, p1, p2);
}
/**
 * Hash: 0x8660EA714834E412 | ApiSet: undefined
 */
export function isGameplayCamRendering() {
    return IsGameplayCamRendering();
}
/**
 * Hash: 0x2E04AB5FEE042D4A | ApiSet: undefined
 */
export function isGameplayHintActive() {
    return IsGameplayHintActive();
}
/**
 * Hash: 0x8FE0D24FFD04D5A2 | ApiSet: undefined
 */
export function isGameplayCamLookingBehind() {
    return IsGameplayCamLookingBehind();
}
/**
 * Hash: 0xEA4C5F4AA0A4DBEF | ApiSet: undefined
 */
export function isGameplayCamShaking() {
    return IsGameplayCamShaking();
}
/**
 * Hash: 0x74F1D22EFA71FAB8 | ApiSet: undefined
 */
export function isInCinematicMode() {
    return IsInCinematicMode();
}
/**
 * ```
 * Returns true if player is in first person
 * ```
 * Hash: 0xD1BA66940E94C547 | ApiSet: undefined
 */
export function isInFullFirstPersonMode() {
    return IsInFullFirstPersonMode();
}
/**
 * Hash: 0x43AB9D5A7D415478 | ApiSet: undefined
 */
export function isInterpolatingToScriptCams() {
    return IsInterpolatingToScriptCams();
}
/**
 * Hash: 0x251241CAEC707106 | ApiSet: undefined
 */
export function isInterpolatingFromScriptCams() {
    return IsInterpolatingFromScriptCams();
}
/**
 * Hash: 0x37F9A426FBCF4AF2 | ApiSet: undefined
 */
export function isScreenFadedIn() {
    return IsScreenFadedIn();
}
/**
 * Hash: 0xF5472C80DF2FF847 | ApiSet: undefined
 */
export function isScreenFadedOut() {
    return IsScreenFadedOut();
}
/**
 * Hash: 0x0CECCC63FFA2EF24 | ApiSet: undefined
 */
export function isScreenFadingIn() {
    return IsScreenFadingIn();
}
/**
 * Hash: 0x02F39BEFE7B88D00 | ApiSet: undefined
 */
export function isScreenFadingOut() {
    return IsScreenFadingOut();
}
/**
 * Hash: 0x1B3C2D961F5FC0E1 | ApiSet: undefined
 */
export function loadCinematicCamLocation(locationDictName) {
    LoadCinematicCamLocation(locationDictName);
}
/**
 * Hash: 0x2E941B5FFA2989C6 | ApiSet: undefined
 */
export function isSphereVisible(position, radius) {
    return IsSphereVisible(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x6A4D224FC7643941 | ApiSet: undefined
 */
export function loadCameraDataDict(cameraDictionary) {
    LoadCameraDataDict(cameraDictionary);
}
/**
 * ```
 * shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
 * _IS_GAMEPLAY_*
 * ```
 * Hash: 0x0060B31968E60E41 | ApiSet: undefined
 */
export function _0x0060B31968E60E41(shakeName) {
    return Citizen.invokeNative('0x0060B31968E60E41', shakeName);
}
/**
 * Hash: 0x04084490CC302CFB | ApiSet: undefined
 */
export function _0x04084490CC302CFB() {
    Citizen.invokeNative('0x04084490CC302CFB');
}
/**
 * Hash: 0x06557F6D96C86881 | ApiSet: undefined
 */
export function _0x06557F6D96C86881() {
    Citizen.invokeNative('0x06557F6D96C86881');
}
/**
 * Hash: 0x066167C63111D8CF | ApiSet: undefined
 */
export function _0x066167C63111D8CF(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x066167C63111D8CF', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x0961B089947BA6D0 | ApiSet: undefined
 */
export function _0x0961B089947BA6D0(p0) {
    Citizen.invokeNative('0x0961B089947BA6D0', p0);
}
/**
 * ```
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 * ```
 * Hash: 0x0F1FFEF5D54AE832 | ApiSet: undefined
 */
export function _0x0F1FFEF5D54AE832() {
    Citizen.invokeNative('0x0F1FFEF5D54AE832');
}
/**
 * ```
 * Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
 * _IS_SC(REEN_)* (?)
 * ```
 * Hash: 0x1204EB53A5FBC63D | ApiSet: undefined
 */
export function _0x1204EB53A5FBC63D() {
    return Citizen.invokeNative('0x1204EB53A5FBC63D');
}
/**
 * Hash: 0x0FF7125F07DEB84F | ApiSet: undefined
 */
export function _0x0FF7125F07DEB84F(p0, p1) {
    Citizen.invokeNative('0x0FF7125F07DEB84F', p0, p1);
}
/**
 * Hash: 0x14C4A49E36C29E49 | ApiSet: undefined
 */
export function _0x14C4A49E36C29E49() {
    return Citizen.invokeNative('0x14C4A49E36C29E49');
}
/**
 * Hash: 0x1811A02277A9E49D | ApiSet: undefined
 */
export function _0x1811A02277A9E49D() {
    return Citizen.invokeNative('0x1811A02277A9E49D');
}
/**
 * Hash: 0x16E9ABDD34DDD931 | ApiSet: undefined
 */
export function _0x16E9ABDD34DDD931() {
    Citizen.invokeNative('0x16E9ABDD34DDD931');
}
/**
 * Hash: 0x18C3DFAC458783BB | ApiSet: undefined
 */
export function _0x18C3DFAC458783BB() {
    Citizen.invokeNative('0x18C3DFAC458783BB');
}
/**
 * Hash: 0x190F7DA1AC09A8EF | ApiSet: undefined
 */
export function _0x190F7DA1AC09A8EF() {
    return Citizen.invokeNative('0x190F7DA1AC09A8EF');
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x1D931B7CC0EE3956 | ApiSet: undefined
 */
export function _0x1D931B7CC0EE3956(dictionary, shotName, cameraName) {
    return Citizen.invokeNative('0x1D931B7CC0EE3956', dictionary, shotName, cameraName);
}
/**
 * Hash: 0x1D9F72DD4FD9A9D7 | ApiSet: undefined
 */
export function _0x1D9F72DD4FD9A9D7(p0) {
    Citizen.invokeNative('0x1D9F72DD4FD9A9D7', p0);
}
/**
 * Hash: 0x1F6EBD94680252CE | ApiSet: undefined
 */
export function _0x1F6EBD94680252CE(p0, p1) {
    Citizen.invokeNative('0x1F6EBD94680252CE', p0, p1);
}
/**
 * Hash: 0x1FC6C727D30FFDDE | ApiSet: undefined
 */
export function _0x1FC6C727D30FFDDE(p0) {
    Citizen.invokeNative('0x1FC6C727D30FFDDE', p0);
}
/**
 * Hash: 0x2AB7C81B3F70570C | ApiSet: undefined
 */
export function _0x2AB7C81B3F70570C() {
    return Citizen.invokeNative('0x2AB7C81B3F70570C');
}
/**
 * Hash: 0x29E6655DF3590B0D | ApiSet: undefined
 */
export function _0x29E6655DF3590B0D(p0) {
    Citizen.invokeNative('0x29E6655DF3590B0D', p0);
}
/**
 * Hash: 0x2DD3149DC34A3F4C | ApiSet: undefined
 */
export function _0x2DD3149DC34A3F4C(p0) {
    Citizen.invokeNative('0x2DD3149DC34A3F4C', p0);
}
/**
 * Hash: 0x39073DA4EDDBC91D | ApiSet: undefined
 */
export function _0x39073DA4EDDBC91D(p0) {
    Citizen.invokeNative('0x39073DA4EDDBC91D', p0);
}
/**
 * Hash: 0x3B8E3AD9677CE12B | ApiSet: undefined
 */
export function _0x3B8E3AD9677CE12B(p0, p1, p2) {
    Citizen.invokeNative('0x3B8E3AD9677CE12B', p0, p1, p2);
}
/**
 * Hash: 0x3C486E334520579D | ApiSet: undefined
 */
export function _0x3C486E334520579D() {
    Citizen.invokeNative('0x3C486E334520579D');
}
/**
 * Hash: 0x3C8F74E8FE751614 | ApiSet: undefined
 */
export function _0x3C8F74E8FE751614() {
    Citizen.invokeNative('0x3C8F74E8FE751614');
}
/**
 * Hash: 0x41E452A3C580D1A7 | ApiSet: undefined
 */
export function _0x41E452A3C580D1A7() {
    Citizen.invokeNative('0x41E452A3C580D1A7');
}
/**
 * Hash: 0x4138EE36BC3DC0A7 | ApiSet: undefined
 */
export function _0x4138EE36BC3DC0A7(p0, p1) {
    return Citizen.invokeNative('0x4138EE36BC3DC0A7', p0, p1);
}
/**
 * Hash: 0x465F04F68AD38197 | ApiSet: undefined
 */
export function _0x465F04F68AD38197(dictionary, shotName, duration) {
    return Citizen.invokeNative('0x465F04F68AD38197', dictionary, shotName, duration);
}
/**
 * Hash: 0x450769C833D58844 | ApiSet: undefined
 */
export function _0x450769C833D58844() {
    return Citizen.invokeNative('0x450769C833D58844');
}
/**
 * Hash: 0x4D2F46D1B28D90FB | ApiSet: undefined
 */
export function _0x4D2F46D1B28D90FB(p0, p1) {
    Citizen.invokeNative('0x4D2F46D1B28D90FB', p0, p1);
}
/**
 * Hash: 0x5060FA977CEA4455 | ApiSet: undefined
 */
export function _0x5060FA977CEA4455() {
    return Citizen.invokeNative('0x5060FA977CEA4455');
}
/**
 * Hash: 0x5B637D6F3B67716A | ApiSet: undefined
 */
export function _0x5B637D6F3B67716A(p0) {
    Citizen.invokeNative('0x5B637D6F3B67716A', p0);
}
/**
 * Hash: 0x6072B7420A83A03F | ApiSet: undefined
 */
export function _0x6072B7420A83A03F() {
    return Citizen.invokeNative('0x6072B7420A83A03F');
}
/**
 * ```
 * Zooms in the gameplay camera to the next zoom level?
 * USE_* - WAS_*
 * ```
 * Hash: 0x632BE8D84846FA56 | ApiSet: undefined
 */
export function _0x632BE8D84846FA56() {
    Citizen.invokeNative('0x632BE8D84846FA56');
}
/**
 * ```
 * Maintains the death camera after respawn
 * ```
 * Hash: 0x63E5841A9264D016 | ApiSet: undefined
 */
export function _0x63E5841A9264D016(toggle) {
    Citizen.invokeNative('0x63E5841A9264D016', toggle);
}
/**
 * Hash: 0x641092322A8852AB | ApiSet: undefined
 */
export function _0x641092322A8852AB() {
    Citizen.invokeNative('0x641092322A8852AB');
}
/**
 * Hash: 0x6519238858AF5479 | ApiSet: undefined
 */
export function _0x6519238858AF5479(p0) {
    Citizen.invokeNative('0x6519238858AF5479', p0);
}
/**
 * Hash: 0x6CAB0BA160B168D2 | ApiSet: undefined
 */
export function _0x6CAB0BA160B168D2() {
    Citizen.invokeNative('0x6CAB0BA160B168D2');
}
/**
 * Hash: 0x6DFD37E586D4F44F | ApiSet: undefined
 */
export function _0x6DFD37E586D4F44F() {
    return Citizen.invokeNative('0x6DFD37E586D4F44F');
}
/**
 * Hash: 0x70A6658D476C6187 | ApiSet: undefined
 */
export function _0x70A6658D476C6187() {
    Citizen.invokeNative('0x70A6658D476C6187');
}
/**
 * Hash: 0x718C6ECF5E8CBDD4 | ApiSet: undefined
 */
export function _0x718C6ECF5E8CBDD4() {
    Citizen.invokeNative('0x718C6ECF5E8CBDD4');
}
/**
 * Hash: 0x71D71E08A7ED5BD7 | ApiSet: undefined
 */
export function _0x71D71E08A7ED5BD7(p0) {
    Citizen.invokeNative('0x71D71E08A7ED5BD7', p0);
}
/**
 * Hash: 0x728491FB3DFFEF99 | ApiSet: undefined
 */
export function _0x728491FB3DFFEF99(p0) {
    Citizen.invokeNative('0x728491FB3DFFEF99', p0);
}
/**
 * Hash: 0x73FF6BE63DC18819 | ApiSet: undefined
 */
export function _0x73FF6BE63DC18819() {
    return Citizen.invokeNative('0x73FF6BE63DC18819');
}
/**
 * Hash: 0x7E40A01B11398FCB | ApiSet: undefined
 */
export function _0x7E40A01B11398FCB() {
    Citizen.invokeNative('0x7E40A01B11398FCB');
}
/**
 * Hash: 0x796085220ADCC847 | ApiSet: undefined
 */
export function _0x796085220ADCC847() {
    return Citizen.invokeNative('0x796085220ADCC847');
}
/**
 * Hash: 0x8505E05FC8822843 | ApiSet: undefined
 */
export function _0x8505E05FC8822843(p0) {
    Citizen.invokeNative('0x8505E05FC8822843', p0);
}
/**
 * Hash: 0x7CE9DC58E3E4755F | ApiSet: undefined
 */
export function _0x7CE9DC58E3E4755F() {
    return Citizen.invokeNative('0x7CE9DC58E3E4755F');
}
/**
 * Hash: 0x80D7A3E39B120BC4 | ApiSet: undefined
 */
export function _0x80D7A3E39B120BC4() {
    return Citizen.invokeNative('0x80D7A3E39B120BC4');
}
/**
 * ```
 * UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
 * Return type char in ida
 * _SET_GAMEPLAY_HINT_*
 * ```
 * Hash: 0x88544C0E3291DCAE | ApiSet: undefined
 */
export function _0x88544C0E3291DCAE(p0) {
    Citizen.invokeNative('0x88544C0E3291DCAE', p0);
}
/**
 * Hash: 0x8E036B41C37D0E5F | ApiSet: undefined
 */
export function _0x8E036B41C37D0E5F(p0) {
    Citizen.invokeNative('0x8E036B41C37D0E5F', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x8B1A5FE7E41E52B2 | ApiSet: undefined
 */
export function _0x8B1A5FE7E41E52B2() {
    return Citizen.invokeNative('0x8B1A5FE7E41E52B2');
}
/**
 * Hash: 0x9AC65A36D3C0C189 | ApiSet: undefined
 */
export function _0x9AC65A36D3C0C189(p0) {
    Citizen.invokeNative('0x9AC65A36D3C0C189', p0);
}
/**
 * ```
 * _IS_SCRIPTED_S*
 * ```
 * Hash: 0x975F6EBB62632FE3 | ApiSet: undefined
 */
export function _0x975F6EBB62632FE3() {
    return Citizen.invokeNative('0x975F6EBB62632FE3');
}
/**
 * Hash: 0xA54D643D0773EB65 | ApiSet: undefined
 */
export function _0xA54D643D0773EB65(dictionary, shotName, duration) {
    Citizen.invokeNative('0xA54D643D0773EB65', dictionary, shotName, duration);
}
/**
 * ```
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xA8BA2E0204D8486F | ApiSet: undefined
 */
export function _0xA8BA2E0204D8486F() {
    Citizen.invokeNative('0xA8BA2E0204D8486F');
}
/**
 * Hash: 0xAC77757C05DE9E5A | ApiSet: undefined
 */
export function _0xAC77757C05DE9E5A(cameraDictionary) {
    Citizen.invokeNative('0xAC77757C05DE9E5A', cameraDictionary);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xB6A80E1E3A5444F1 | ApiSet: undefined
 */
export function _0xB6A80E1E3A5444F1() {
    return Citizen.invokeNative('0xB6A80E1E3A5444F1');
}
/**
 * Hash: 0xB85C13E0BF1F2A1C | ApiSet: undefined
 */
export function _0xB85C13E0BF1F2A1C(p0) {
    Citizen.invokeNative('0xB85C13E0BF1F2A1C', p0);
}
/**
 * Hash: 0xC205B3C54C6A4E37 | ApiSet: undefined
 */
export function _0xC205B3C54C6A4E37(p0) {
    Citizen.invokeNative('0xC205B3C54C6A4E37', p0);
}
/**
 * Hash: 0xC252C0CC969AF79A | ApiSet: undefined
 */
export function _0xC252C0CC969AF79A(p0) {
    Citizen.invokeNative('0xC252C0CC969AF79A', p0);
}
/**
 * Hash: 0xC285FD21294A1C49 | ApiSet: undefined
 */
export function _0xC285FD21294A1C49(cameraDictionary) {
    return Citizen.invokeNative('0xC285FD21294A1C49', cameraDictionary);
}
/**
 * ```
 * Camera will be or is running
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xC3742F1FDF0A6824 | ApiSet: undefined
 */
export function _0xC3742F1FDF0A6824() {
    Citizen.invokeNative('0xC3742F1FDF0A6824');
}
/**
 * Hash: 0xCF69EA05CD9C33C9 | ApiSet: undefined
 */
export function _0xCF69EA05CD9C33C9() {
    Citizen.invokeNative('0xCF69EA05CD9C33C9');
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xC3AEBB276825A359 | ApiSet: undefined
 */
export function _0xC3AEBB276825A359(dictionary, shotName, duration) {
    return Citizen.invokeNative('0xC3AEBB276825A359', dictionary, shotName, duration);
}
/**
 * Hash: 0xDC62CD70658E7A02 | ApiSet: undefined
 */
export function _0xDC62CD70658E7A02() {
    return Citizen.invokeNative('0xDC62CD70658E7A02');
}
/**
 * ```
 * shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
 * _RES*
 * ```
 * Hash: 0xC3E9E5D4F413B773 | ApiSet: undefined
 */
export function _0xC3E9E5D4F413B773(shakeName, intensity) {
    Citizen.invokeNative('0xC3E9E5D4F413B773', shakeName, intensity);
}
/**
 * Hash: 0xDF7F5BE9150E47E4 | ApiSet: undefined
 */
export function _0xDF7F5BE9150E47E4(p0) {
    Citizen.invokeNative('0xDF7F5BE9150E47E4', p0);
}
/**
 * Hash: 0xDB382FE20C2DA222 | ApiSet: undefined
 */
export function _0xDB382FE20C2DA222(p0) {
    Citizen.invokeNative('0xDB382FE20C2DA222', p0);
}
/**
 * Hash: 0xE28F73212A813E82 | ApiSet: undefined
 */
export function _0xE28F73212A813E82(p0, p1, p2, p3) {
    Citizen.invokeNative('0xE28F73212A813E82', p0, p1, p2, p3);
}
/**
 * Hash: 0xE2BB2D6A9FE2ECDE | ApiSet: undefined
 */
export function _0xE2BB2D6A9FE2ECDE(p0) {
    Citizen.invokeNative('0xE2BB2D6A9FE2ECDE', p0);
}
/**
 * Hash: 0xE4B7945EF4F1BFB2 | ApiSet: undefined
 */
export function _0xE4B7945EF4F1BFB2(cam) {
    return Citizen.invokeNative('0xE4B7945EF4F1BFB2', cam);
}
/**
 * Hash: 0xEA113BF9B0C0C5D7 | ApiSet: undefined
 */
export function _0xEA113BF9B0C0C5D7(dictionary, shotName, duration) {
    return Citizen.invokeNative('0xEA113BF9B0C0C5D7', dictionary, shotName, duration);
}
/**
 * Hash: 0xE6F364DE6C2FDEFE | ApiSet: undefined
 */
export function _0xE6F364DE6C2FDEFE() {
    Citizen.invokeNative('0xE6F364DE6C2FDEFE');
}
/**
 * Hash: 0xEF9A3132A0AA6B19 | ApiSet: undefined
 */
export function _0xEF9A3132A0AA6B19() {
    return Citizen.invokeNative('0xEF9A3132A0AA6B19');
}
/**
 * Hash: 0xF1A6FEEDF3776EF9 | ApiSet: undefined
 */
export function _0xF1A6FEEDF3776EF9() {
    Citizen.invokeNative('0xF1A6FEEDF3776EF9');
}
/**
 * Hash: 0xF824530B612FE0CE | ApiSet: undefined
 */
export function _0xF824530B612FE0CE() {
    return Citizen.invokeNative('0xF824530B612FE0CE');
}
/**
 * Hash: 0xF48664E9C83825E3 | ApiSet: undefined
 */
export function _0xF48664E9C83825E3(p0, p1) {
    Citizen.invokeNative('0xF48664E9C83825E3', p0, p1);
}
/**
 * Hash: 0xFEB8646818294C75 | ApiSet: undefined
 */
export function _0xFEB8646818294C75(p0, p1) {
    Citizen.invokeNative('0xFEB8646818294C75', p0, p1);
}
/**
 * Hash: 0xFC3F638BE2B6BB02 | ApiSet: undefined
 */
export function _0xFC3F638BE2B6BB02() {
    Citizen.invokeNative('0xFC3F638BE2B6BB02');
}
/**
 * ```
 * _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
 * ```
 * Hash: 0xFEFDDC6E8FDF8A75 | ApiSet: undefined
 */
export function _0xFEFDDC6E8FDF8A75(shakeName, intensity) {
    Citizen.invokeNative('0xFEFDDC6E8FDF8A75', shakeName, intensity);
}
/**
 * Hash: 0x9F97E85EC142255E | ApiSet: undefined
 */
export function pauseCameraFocus(cam, pause) {
    PauseCameraFocus(cam, pause);
}
/**
 * Hash: 0xA263DDF694D563F6 | ApiSet: undefined
 */
export function playCamAnim(cam, animName, animDictionary, position, xRot, yRot, zRot, animFlags, rotOrder) {
    return PlayCamAnim(cam, animName, animDictionary, position.x, position.y, position.z, xRot, yRot, zRot, animFlags, rotOrder);
}
/**
 * Hash: 0xFC2867E6074D3A61 | ApiSet: undefined
 */
export function pointCamAtEntity(cam, entity, p2, p3, p4, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    PointCamAtEntity(cam, _entity, p2, p3, p4, p5);
}
/**
 * ```
 * ease - smooth transition between the camera's positions
 * easeTime - Time in milliseconds for the transition to happen
 * If you have created a script (rendering) camera, and want to go back to the
 * character (gameplay) camera, call this native with render set to FALSE.
 * Setting ease to TRUE will smooth the transition.
 * ```
 * Hash: 0x33281167E4942E4F | ApiSet: undefined
 */
export function renderScriptCams(render, ease, easeTime, p3, p4, p5) {
    RenderScriptCams(render, ease, easeTime, p3, p4, p5);
}
/**
 * Hash: 0x948B39341C3A40C2 | ApiSet: undefined
 */
export function pointCamAtCoord(cam, position) {
    PointCamAtCoord(cam, position.x, position.y, position.z);
}
/**
 * ```
 * Used to enable headshot kill replay when you headshot set ped.
 * Params: p1 seems to be 0 or 1 in R* Scripts
 * ```
 * Hash: 0x986F7A51EE3E1F92 | ApiSet: undefined
 */
export function reactivatePedHeadshotExecuteSlowcam(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ReactivatePedHeadshotExecuteSlowcam(_ped, p1);
}
/**
 * Hash: 0xE296208C273BD7F0 | ApiSet: undefined
 */
export function requestLetterBoxOvertime(p0, p1, p2, p3, p4, p5) {
    RequestLetterBoxOvertime(p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * Creates Cinematic Black Bars (at top and bottom)
 * Disable instantly: false/false, Enable instantly: true/true
 * ```
 * Hash: 0x69D65E89FFD72313 | ApiSet: undefined
 */
export function requestLetterBoxNow(p0, p1) {
    RequestLetterBoxNow(p0, p1);
}
/**
 * ```
 * Set camera as active/inactive.
 * ```
 * Hash: 0x87295BCA613800C8 | ApiSet: undefined
 */
export function setCamActive(cam, active) {
    SetCamActive(cam, active);
}
/**
 * Hash: 0x8B15AE2987C1AC8F | ApiSet: undefined
 */
export function setCamActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation) {
    SetCamActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation);
}
/**
 * ```
 * Allows you to aim and shoot at the direction the camera is facing.
 * ```
 * Hash: 0x3CB9E8BDE5E76F33 | ApiSet: undefined
 */
export function setCamAffectsAiming(cam, toggle) {
    SetCamAffectsAiming(cam, toggle);
}
/**
 * Hash: 0x1B8F3CE5A6001298 | ApiSet: undefined
 */
export function setCamControlsMiniMapHeading(cam, p1) {
    SetCamControlsMiniMapHeading(cam, p1);
}
/**
 * ```
 * Sets the position of the cam.
 * ```
 * Hash: 0xF9EE7D419EE49DE6 | ApiSet: undefined
 */
export function setCamCoord(cam, posX, posY, posZ) {
    SetCamCoord(cam, posX, posY, posZ);
}
/**
 * Hash: 0x5E32817BF6302111 | ApiSet: undefined
 */
export function setCamFarClip(cam, farClip) {
    SetCamFarClip(cam, farClip);
}
/**
 * Hash: 0x11F32BB61B756732 | ApiSet: undefined
 */
export function setCamFocusDistance(cam, distance) {
    SetCamFocusDistance(cam, distance);
}
/**
 * ```
 * Sets the field of view of the cam.
 * Min: 1.0f
 * Max: 130.0f
 * ```
 * Hash: 0x27666E5988D9D429 | ApiSet: undefined
 */
export function setCamFov(cam, fieldOfView) {
    SetCamFov(cam, fieldOfView);
}
/**
 * Hash: 0x45FD891364181F9E | ApiSet: undefined
 */
export function setCamMotionBlurStrength(cam, strength) {
    SetCamMotionBlurStrength(cam, strength);
}
/**
 * Hash: 0xA924028272A61364 | ApiSet: undefined
 */
export function setCamNearClip(cam, nearClip) {
    SetCamNearClip(cam, nearClip);
}
/**
 * Hash: 0xA47BBFFFB83D4D0A | ApiSet: undefined
 */
export function setCamParams(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11, p12, p13) {
    SetCamParams(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, p8, p9, p10, p11, p12, p13);
}
/**
 * ```
 * Sets the rotation of the cam.
 * ```
 * Hash: 0x63DFA6810AD78719 | ApiSet: undefined
 */
export function setCamRot(cam, rotX, rotY, rotZ, rotationOrder) {
    SetCamRot(cam, rotX, rotY, rotZ, rotationOrder);
}
/**
 * Hash: 0xF1898A68E7C15636 | ApiSet: undefined
 */
export function setCamSplinePhase(cam, p1) {
    SetCamSplinePhase(cam, p1);
}
/**
 * Hash: 0xFF6311652CA91015 | ApiSet: undefined
 */
export function setCamSplineDuration(cam, timeDuration) {
    SetCamSplineDuration(cam, timeDuration);
}
/**
 * Hash: 0xCE7A90B160F75046 | ApiSet: undefined
 */
export function setCinematicModeActive(p0) {
    SetCinematicModeActive(p0);
}
/**
 * Hash: 0x84B3645618E726B0 | ApiSet: undefined
 */
export function setCamSplineSmoothingStyle(cam, smoothingStyle) {
    SetCamSplineSmoothingStyle(cam, smoothingStyle);
}
/**
 * Hash: 0x05BD5E4088B30A66 | ApiSet: undefined
 */
export function setFirstPersonAimCamRelativeHeadingLimitsThisUpdate(p0, p1) {
    SetFirstPersonAimCamRelativeHeadingLimitsThisUpdate(p0, p1);
}
/**
 * ```
 * Forces gameplay cam to specified ped as if you were the ped or spectating it
 * ```
 * Hash: 0x82E41D6ADE924FCA | ApiSet: undefined
 */
export function setGameplayCamFollowPedThisUpdate(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetGameplayCamFollowPedThisUpdate(_ped);
}
/**
 * Hash: 0xB90411F480457A6C | ApiSet: undefined
 */
export function setCinematicButtonActive(p0) {
    SetCinematicButtonActive(p0);
}
/**
 * Hash: 0x715B7F5E8BED32A2 | ApiSet: undefined
 */
export function setFirstPersonAimCamRelativePitchLimitsThisUpdate(p0, p1) {
    SetFirstPersonAimCamRelativePitchLimitsThisUpdate(p0, p1);
}
/**
 * Hash: 0xD904F75DBD7AB865 | ApiSet: undefined
 */
export function setGameplayCamIgnoreEntityCollisionThisUpdate(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetGameplayCamIgnoreEntityCollisionThisUpdate(_entity);
}
/**
 * Hash: 0x449995EA846D3FC2 | ApiSet: undefined
 */
export function setGameplayCamInitialPitch(camInitialPitch) {
    SetGameplayCamInitialPitch(camInitialPitch);
}
/**
 * Hash: 0x6C1053C433A573CF | ApiSet: undefined
 */
export function setGameplayCamInitialHeading(camInitialHeading) {
    SetGameplayCamInitialHeading(camInitialHeading);
}
/**
 * ```
 * Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
 * ```
 * Hash: 0xBCDA0BA8762FACB9 | ApiSet: undefined
 */
export function setGameplayCamInitialZoom(camInitialZoom) {
    SetGameplayCamInitialZoom(camInitialZoom);
}
/**
 * Hash: 0x8459B3E64257B21D | ApiSet: undefined
 */
export function setGameplayCamMaxMotionBlurStrengthThisUpdate(p0) {
    SetGameplayCamMaxMotionBlurStrengthThisUpdate(p0);
}
/**
 * ```
 * Sets the camera position relative to heading in float from -360 to +360.
 * Heading is always 0 in aiming camera.
 * ```
 * Hash: 0x5D1EB123EAC5D071 | ApiSet: undefined
 */
export function setGameplayCamRelativeHeading(heading, p1) {
    SetGameplayCamRelativeHeading(heading, p1);
}
/**
 * ```
 * Sets the camera pitch.
 * Parameters:
 * x = pitches the camera on the x axis.
 * Value2 = always seems to be hex 0x3F800000 (1.000000 float).
 * ```
 * Hash: 0xFB760AF4F537B8BF | ApiSet: undefined
 */
export function setGameplayCamRelativePitch(x, Value2) {
    SetGameplayCamRelativePitch(x, Value2);
}
/**
 * ```
 * Hash used in finale1.ysc: 1726668277
 * ```
 * Hash: 0xFA33B8C69A4A6A0F | ApiSet: undefined
 */
export function setGameplayCoordHint(position, duration, blendOutDuration, blendInDuration, p6) {
    if (typeof p6 === 'string')
        p6 = this.getHashKey(p6);
    SetGameplayCoordHint(position.x, position.y, position.z, duration, blendOutDuration, blendInDuration, p6);
}
/**
 * ```
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
 * ```
 * Hash: 0x570E35F5C4A44838 | ApiSet: undefined
 */
export function setGameplayCamShakeAmplitude(amplitude) {
    SetGameplayCamShakeAmplitude(amplitude);
}
/**
 * Hash: 0x421192A2DA48FD01 | ApiSet: undefined
 */
export function setGameplayHintBaseOrbitPitchOffset(p0) {
    SetGameplayHintBaseOrbitPitchOffset(p0);
}
/**
 * Hash: 0xF86B6F93727C59C9 | ApiSet: undefined
 */
export function setGameplayHintCameraRelativeSideOffset(p0) {
    SetGameplayHintCameraRelativeSideOffset(p0);
}
/**
 * ```
 * p6 & p7 - possibly length or time
 * ```
 * Hash: 0xD1F7F32640ADFD12 | ApiSet: undefined
 */
export function setGameplayEntityHint(entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetGameplayEntityHint(_entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0xDDDC54181868F81F | ApiSet: undefined
 */
export function setGameplayHintFollowDistanceScalar(p0) {
    SetGameplayHintFollowDistanceScalar(p0);
}
/**
 * Hash: 0xC40551D65F2BF297 | ApiSet: undefined
 */
export function setGameplayObjectHint(p0, p1, p2, p3, p4, p5, p6, p7) {
    SetGameplayObjectHint(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x29E74F819150CC32 | ApiSet: undefined
 */
export function setGameplayHintCameraRelativeVerticalOffset(p0) {
    SetGameplayHintCameraRelativeVerticalOffset(p0);
}
/**
 * ```
 * Forces gameplay cam to specified vehicle as if you were in it
 * ```
 * Hash: 0xFA1D5E8D1C3CCD67 | ApiSet: undefined
 */
export function setInVehicleCamStateThisUpdate(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetInVehicleCamStateThisUpdate(_vehicle, p1);
}
/**
 * Hash: 0x661E58BC6F00A49A | ApiSet: undefined
 */
export function setGameplayHintFov(FOV) {
    SetGameplayHintFov(FOV);
}
/**
 * Hash: 0x90FB951648851733 | ApiSet: undefined
 */
export function setGameplayPedHint(p0, x1, y1, z1, p4, p5, p6, p7) {
    const _p0 = p0 instanceof Ped ? p0.handle() : p0;
    SetGameplayPedHint(_p0, x1, y1, z1, p4, p5, p6, p7);
}
/**
 * Hash: 0x1DD95A8D6B24A0C9 | ApiSet: undefined
 */
export function setScriptedCameraIsFirstPersonThisFrame(p0) {
    SetScriptedCameraIsFirstPersonThisFrame(p0);
}
/**
 * ```
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * _SET_P* - _SET_S*
 * ```
 * Hash: 0x6E969927CF632608 | ApiSet: undefined
 */
export function setStartCinematicDeathCam(p0) {
    SetStartCinematicDeathCam(p0);
}
/**
 * Hash: 0xE2B2BB7DAC280515 | ApiSet: undefined
 */
export function setGameplayVehicleHint(p0, p1, p2, p3, p4, p5, p6, p7) {
    SetGameplayVehicleHint(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 * Clamps the gameplay camera's current yaw.
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 * ```
 * Hash: 0x14F3947318CA8AD2 | ApiSet: undefined
 */
export function setThirdPersonCamRelativeHeadingLimitsThisUpdate(minimum, maximum) {
    SetThirdPersonCamRelativeHeadingLimitsThisUpdate(minimum, maximum);
}
/**
 * Hash: 0x2126C740A4AC370B | ApiSet: undefined
 */
export function setThirdPersonCamOrbitDistanceLimitsThisUpdate(p0, distance) {
    SetThirdPersonCamOrbitDistanceLimitsThisUpdate(p0, distance);
}
/**
 * ```
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 * Clamps the gameplay camera's current pitch.
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 * ```
 * Hash: 0x326C7AA308F3DF6A | ApiSet: undefined
 */
export function setThirdPersonCamRelativePitchLimitsThisUpdate(minimum, maximum) {
    SetThirdPersonCamRelativePitchLimitsThisUpdate(minimum, maximum);
}
/**
 * Hash: 0xD7F4D54CF80AFA34 | ApiSet: undefined
 */
export function setWidescreenBorders(p0, p1) {
    SetWidescreenBorders(p0, p1);
}
/**
 * Hash: 0xF9A7BCF5D050D4E7 | ApiSet: undefined
 */
export function shakeCam(cam, type, amplitude) {
    ShakeCam(cam, type, amplitude);
}
/**
 * Hash: 0xD9B31B4650520529 | ApiSet: undefined
 */
export function shakeGameplayCam(shakeName, intensity) {
    ShakeGameplayCam(shakeName, intensity);
}
/**
 * Hash: 0xCA1B30A3357C71F1 | ApiSet: undefined
 */
export function stopCamPointing(cam) {
    StopCamPointing(cam);
}
/**
 * ```
 * [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
 * p0: struct<32> \/\*256\*\/
 * ```
 * Hash: 0x65B205BF30C13DDB | ApiSet: undefined
 */
export function startCameraOrbit() {
    return StartCameraOrbit();
}
/**
 * Hash: 0xB78CC4B4706614B0 | ApiSet: undefined
 */
export function stopCamShaking(cam, p1) {
    StopCamShaking(cam, p1);
}
/**
 * Hash: 0xE0DE43D290FB65F9 | ApiSet: undefined
 */
export function stopGameplayCamShaking(p0) {
    StopGameplayCamShaking(p0);
}
/**
 * Hash: 0x93759A83D0D844E7 | ApiSet: undefined
 */
export function stopCodeGameplayHint(p0) {
    StopCodeGameplayHint(p0);
}
/**
 * ```
 * script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
 * script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
 * _STOP_GAMEPLAY_CAM* - _STOP_I*
 * ```
 * Hash: 0x4285804FD65D8066 | ApiSet: undefined
 */
export function stopGameplayCamShakingWithName(shakeName, p1) {
    StopGameplayCamShakingWithName(shakeName, p1);
}
/**
 * ```
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
 * ```
 * Hash: 0x8C7C7FF7CF0E5153 | ApiSet: undefined
 */
export function stopRenderingScriptCamsUsingCatchUp(render, distance, blendBackSmoothingType, p3, p4, p5) {
    StopRenderingScriptCamsUsingCatchUp(render, distance, blendBackSmoothingType, p3, p4, p5);
}
/**
 * Hash: 0x1BCEC33D54CFCA8A | ApiSet: undefined
 */
export function stopGameplayHint(p0) {
    StopGameplayHint(p0);
}
/**
 * Hash: 0x798BE43C9393632B | ApiSet: undefined
 */
export function unloadCameraDataDict(cameraDictionary) {
    UnloadCameraDataDict(cameraDictionary);
}
/**
 * Hash: 0x9A92C06ACBAF9731 | ApiSet: undefined
 */
export function triggerMissionFailedCam() {
    TriggerMissionFailedCam();
}
/**
 * Hash: 0x2412216FCC7B4E3E | ApiSet: undefined
 */
export function unloadCinematicCameraLocation(dictionaryName) {
    UnloadCinematicCameraLocation(dictionaryName);
}
/**
 * Hash: 0x28EEACE9B43D9597 | ApiSet: undefined
 */
export function addTimeToDateTime() {
    return AddTimeToDateTime();
}
/**
 * Hash: 0xAB7C251C7701D336 | ApiSet: undefined
 */
export function addToClockTime(hours, minutes, seconds) {
    AddToClockTime(hours, minutes, seconds);
}
/**
 * Hash: 0x0184750AE88D0B1D | ApiSet: undefined
 */
export function advanceClockTimeTo(hour, minute, second) {
    AdvanceClockTimeTo(hour, minute, second);
}
/**
 * Hash: 0xDF2FD796C54480A5 | ApiSet: undefined
 */
export function getClockDayOfMonth() {
    return GetClockDayOfMonth();
}
/**
 * ```
 * Gets the current day of the week.
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 * ```
 * Hash: 0x4DD02D4C7FB30076 | ApiSet: undefined
 */
export function getClockDayOfWeek() {
    return GetClockDayOfWeek();
}
/**
 * ```
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 * ```
 * Hash: 0xC82CF208C2B19199 | ApiSet: undefined
 */
export function getClockHours() {
    return GetClockHours();
}
/**
 * ```
 * Gets the current ingame clock minute.
 * ```
 * Hash: 0x4E162231B823DBBF | ApiSet: undefined
 */
export function getClockMinutes() {
    return GetClockMinutes();
}
/**
 * Hash: 0x2D44E8FC79EAB1AC | ApiSet: undefined
 */
export function getClockMonth() {
    return GetClockMonth();
}
/**
 * ```
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
 * ```
 * Hash: 0xB6101ABE62B5F080 | ApiSet: undefined
 */
export function getClockSeconds() {
    return GetClockSeconds();
}
/**
 * Hash: 0xE4CB8D126501EC52 | ApiSet: undefined
 */
export function getMillisecondsPerGameMinute() {
    return GetMillisecondsPerGameMinute();
}
/**
 * Hash: 0xE136DCA28C4A48BA | ApiSet: undefined
 */
export function getClockYear() {
    return GetClockYear();
}
/**
 * Hash: 0x90338AD4A784E455 | ApiSet: undefined
 */
export function getPosixTime() {
    return GetPosixTime();
}
/**
 * ```
 * Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
 * ```
 * Hash: 0x86A68E84E5884951 | ApiSet: undefined
 */
export function getPosixTimeStruct() {
    return GetPosixTimeStruct();
}
/**
 * ```
 * Base year is 1898.
 * ```
 * Hash: 0x78FD8BE812E436B2 | ApiSet: undefined
 */
export function getSecondsSinceBaseYear() {
    return GetSecondsSinceBaseYear();
}
/**
 * Hash: 0x4D1A590C92BF377E | ApiSet: undefined
 */
export function pauseClock(toggle, unused) {
    PauseClock(toggle, unused);
}
/**
 * Hash: 0x568D998A9FF96774 | ApiSet: undefined
 */
export function pauseClockThisFrame(toggle) {
    PauseClockThisFrame(toggle);
}
/**
 * Hash: 0x02AD3092562941E2 | ApiSet: undefined
 */
export function setClockDate(day, month, year) {
    SetClockDate(day, month, year);
}
/**
 * Hash: 0x04EEDB3848DACF68 | ApiSet: undefined
 */
export function setMillisecondsPerGameMinute(ms) {
    SetMillisecondsPerGameMinute(ms);
}
/**
 * ```
 * SET_CLOCK_TIME(12, 34, 56);
 * ```
 * Hash: 0x3A52C59FFB2DEED8 | ApiSet: undefined
 */
export function setClockTime(hour, minute, second) {
    SetClockTime(hour, minute, second);
}
/**
 * Hash: 0x5461C821D00FE15A | ApiSet: undefined
 */
export function collectableCategoryGetNumFound(collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableCategoryGetNumFound(collectableCategory, collectableSubcategory);
}
/**
 * Hash: 0x62CAB7DB62EAD434 | ApiSet: undefined
 */
export function collectableCategoryGetNumCollectables(collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableCategoryGetNumCollectables(collectableCategory, collectableSubcategory);
}
/**
 * Hash: 0x3A65F4844913A047 | ApiSet: undefined
 */
export function collectableCategoryGetNumTurnedIn(collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableCategoryGetNumTurnedIn(collectableCategory, collectableSubcategory);
}
/**
 * Hash: 0xD52D20B0C76BB26D | ApiSet: undefined
 */
export function collectableCategoryGetToastTextureName(collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableCategoryGetToastTextureName(collectableCategory, collectableSubcategory);
}
/**
 * Hash: 0x13AAECDA43318BFE | ApiSet: undefined
 */
export function collectableCategoryGetToastTextureDictionary(collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableCategoryGetToastTextureDictionary(collectableCategory, collectableSubcategory);
}
/**
 * ```
 * collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
 * ```
 * Hash: 0xCC644BC1DD655269 | ApiSet: undefined
 */
export function collectableGetCategoryItemSetBuyAward(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return CollectableGetCategoryItemSetBuyAward(collectableCategory, p1);
}
/**
 * Hash: 0x0B6D275D2F242E17 | ApiSet: undefined
 */
export function collectableCategorySetHasReceivedList(p0, p1, p2) {
    CollectableCategorySetHasReceivedList(p0, p1, p2);
}
/**
 * ```
 * Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
 * Returns collectableCategory Hash
 * ```
 * Hash: 0x725D52F21A5E9EF6 | ApiSet: undefined
 */
export function collectableGetCategory(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return CollectableGetCategory(collectableItem);
}
/**
 * Hash: 0x126CBEBBA46693CF | ApiSet: undefined
 */
export function collectableGetCollectableItemHash(index, collectableCategory, collectableSubcategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    if (typeof collectableSubcategory === 'string')
        collectableSubcategory = this.getHashKey(collectableSubcategory);
    return CollectableGetCollectableItemHash(index, collectableCategory, collectableSubcategory);
}
/**
 * Hash: 0xF83D3DDA4D3C8169 | ApiSet: undefined
 */
export function collectableGetNumFound(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return CollectableGetNumFound(collectableItem);
}
/**
 * Hash: 0x922A79CD4A033B8B | ApiSet: undefined
 */
export function collectableGetIpl(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return CollectableGetIpl(collectableItem);
}
/**
 * Hash: 0x1F1DD794908C2BFA | ApiSet: undefined
 */
export function collectableGetPlacementLocation(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return new Vector3(CollectableGetPlacementLocation(collectableItem));
}
/**
 * Hash: 0x9A03F22AD446EEAC | ApiSet: undefined
 */
export function collectableGetNumTurnedIn(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return CollectableGetNumTurnedIn(collectableItem);
}
/**
 * Hash: 0x3EA62E56F386C997 | ApiSet: undefined
 */
export function collectableIncrementNumFound(collectableItem, amount) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    CollectableIncrementNumFound(collectableItem, amount);
}
/**
 * Hash: 0x398FAB9C96A81924 | ApiSet: undefined
 */
export function collectableIncrementNumTurnedIn(collectableItem, amount) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    CollectableIncrementNumTurnedIn(collectableItem, amount);
}
/**
 * Hash: 0x6052B4DE6657684F | ApiSet: undefined
 */
export function collectableGetSubcategory(collectableItem) {
    if (typeof collectableItem === 'string')
        collectableItem = this.getHashKey(collectableItem);
    return CollectableGetSubcategory(collectableItem);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x3FD91F1A148A0468 | ApiSet: undefined
 */
export function _0x3FD91F1A148A0468(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x3FD91F1A148A0468', collectableCategory, p1);
}
/**
 * Hash: 0x33825A7388A6B9F6 | ApiSet: undefined
 */
export function _0x33825A7388A6B9F6(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x33825A7388A6B9F6', collectableCategory, p1);
}
/**
 * ```
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x61BEFBA3CE7A3BC8 | ApiSet: undefined
 */
export function _0x61BEFBA3CE7A3BC8(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x61BEFBA3CE7A3BC8', collectableCategory, p1);
}
/**
 * ```
 * Returns p2 (index?) for 0xB9020EC89C07DF04
 * ```
 * Hash: 0x755901C7598B97BC | ApiSet: undefined
 */
export function _0x755901C7598B97BC(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x755901C7598B97BC', collectableCategory, p1);
}
/**
 * ```
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 * ```
 * Hash: 0x6BAB7ACED1017204 | ApiSet: undefined
 */
export function _0x6BAB7ACED1017204(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x6BAB7ACED1017204', collectableCategory, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x775FA1FC87666847 | ApiSet: undefined
 */
export function _0x775FA1FC87666847(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x775FA1FC87666847', collectableCategory, p1);
}
/**
 * ```
 * Accepts more hashes than 0xCC644BC1DD655269
 * Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
 * ```
 * Hash: 0xB9020EC89C07DF04 | ApiSet: undefined
 */
export function _0xB9020EC89C07DF04(collectableCategory, p1, index) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xB9020EC89C07DF04', collectableCategory, p1, index);
}
/**
 * Hash: 0x93F2E7B5DB85657B | ApiSet: undefined
 */
export function _0x93F2E7B5DB85657B(p0, p1) {
    return Citizen.invokeNative('0x93F2E7B5DB85657B', p0, p1);
}
/**
 * ```
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 * ```
 * Hash: 0x9ADEE485726025D4 | ApiSet: undefined
 */
export function _0x9ADEE485726025D4(collectableCategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0x9ADEE485726025D4', collectableCategory);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC4AC39719C1BB559 | ApiSet: undefined
 */
export function _0xC4AC39719C1BB559(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xC4AC39719C1BB559', collectableCategory, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC3CA424E1F12ED0C | ApiSet: undefined
 */
export function _0xC3CA424E1F12ED0C(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xC3CA424E1F12ED0C', collectableCategory, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD1806FB3EDED6D11 | ApiSet: undefined
 */
export function _0xD1806FB3EDED6D11(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xD1806FB3EDED6D11', collectableCategory, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD297F68928A58130 | ApiSet: undefined
 */
export function _0xD297F68928A58130(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xD297F68928A58130', collectableCategory, p1);
}
/**
 * Hash: 0xEC3959E9950BF56B | ApiSet: undefined
 */
export function _0xEC3959E9950BF56B(p0) {
    return Citizen.invokeNative('0xEC3959E9950BF56B', p0);
}
/**
 * Hash: 0xFC832B06127D8E99 | ApiSet: undefined
 */
export function _0xFC832B06127D8E99(collectableCategory, p1) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xFC832B06127D8E99', collectableCategory, p1);
}
/**
 * Hash: 0xCBD9EC60495C728C | ApiSet: undefined
 */
export function activateCompanionAnalysis(groupId) {
    ActivateCompanionAnalysis(groupId);
}
/**
 * Hash: 0x72B7F65F11FC8896 | ApiSet: undefined
 */
export function deactivateCompanionAnalysis(groupId) {
    DeactivateCompanionAnalysis(groupId);
}
/**
 * ```
 * Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
 * ```
 * Hash: 0xDEB369F6AD168C58 | ApiSet: undefined
 */
export function addCompanionFlag(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddCompanionFlag(_ped, p1);
}
/**
 * ```
 * enum _0x18F77396
 * ```
 * Hash: 0xB7E0590C86E1711F | ApiSet: undefined
 */
export function getCompanionActivity(groupId) {
    return GetCompanionActivity(groupId);
}
/**
 * Hash: 0x0A8FD91EDE7B328A | ApiSet: undefined
 */
export function _0x0A8FD91EDE7B328A(p0, p1) {
    Citizen.invokeNative('0x0A8FD91EDE7B328A', p0, p1);
}
/**
 * Hash: 0x0C6A00DAE896614C | ApiSet: undefined
 */
export function _0x0C6A00DAE896614C(p0, p1) {
    Citizen.invokeNative('0x0C6A00DAE896614C', p0, p1);
}
/**
 * Hash: 0x2917E634206B9E17 | ApiSet: undefined
 */
export function _0x2917E634206B9E17(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x2917E634206B9E17', _ped, p1);
}
/**
 * Hash: 0x0DE02DA3C0F66955 | ApiSet: undefined
 */
export function _0x0DE02DA3C0F66955(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x0DE02DA3C0F66955', _ped, p1);
}
/**
 * Hash: 0x61BDA07407754A5C | ApiSet: undefined
 */
export function _0x61BDA07407754A5C(p0, p1, p2, p3) {
    Citizen.invokeNative('0x61BDA07407754A5C', p0, p1, p2, p3);
}
/**
 * Hash: 0x8FB98B719AA0075A | ApiSet: undefined
 */
export function _0x8FB98B719AA0075A(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x8FB98B719AA0075A', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x3CAAD93FA5B9579A | ApiSet: undefined
 */
export function _0x3CAAD93FA5B9579A(volume, p1, p2) {
    Citizen.invokeNative('0x3CAAD93FA5B9579A', volume, p1, p2);
}
/**
 * Hash: 0x991E3346D788F20F | ApiSet: undefined
 */
export function _0x991E3346D788F20F(p0, p1) {
    Citizen.invokeNative('0x991E3346D788F20F', p0, p1);
}
/**
 * Hash: 0x722FBE08EF5B87BD | ApiSet: undefined
 */
export function _0x722FBE08EF5B87BD(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0x722FBE08EF5B87BD', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x7274F84B1501B523 | ApiSet: undefined
 */
export function _0x7274F84B1501B523(p0) {
    Citizen.invokeNative('0x7274F84B1501B523', p0);
}
/**
 * Hash: 0xA079FF7CFB9AC8BD | ApiSet: undefined
 */
export function _0xA079FF7CFB9AC8BD(p0, p1) {
    Citizen.invokeNative('0xA079FF7CFB9AC8BD', p0, p1);
}
/**
 * Hash: 0x9C902084F48D2E6C | ApiSet: undefined
 */
export function _0x9C902084F48D2E6C(p0) {
    Citizen.invokeNative('0x9C902084F48D2E6C', p0);
}
/**
 * Hash: 0xBF6583E926D13890 | ApiSet: undefined
 */
export function _0xBF6583E926D13890(p0, p1) {
    Citizen.invokeNative('0xBF6583E926D13890', p0, p1);
}
/**
 * Hash: 0xCE27824B5968B79A | ApiSet: undefined
 */
export function _0xCE27824B5968B79A(p0, p1) {
    Citizen.invokeNative('0xCE27824B5968B79A', p0, p1);
}
/**
 * Hash: 0xD428C3F92FC3F6F8 | ApiSet: undefined
 */
export function _0xD428C3F92FC3F6F8(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xD428C3F92FC3F6F8', _ped, p1);
}
/**
 * Hash: 0xD55A871E1CE3481B | ApiSet: undefined
 */
export function _0xD55A871E1CE3481B(p0, p1, p2, p3) {
    Citizen.invokeNative('0xD55A871E1CE3481B', p0, p1, p2, p3);
}
/**
 * Hash: 0xD730281E496621FB | ApiSet: undefined
 */
export function _0xD730281E496621FB(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xD730281E496621FB', _ped, p1);
}
/**
 * Hash: 0xF06CBB8CCCA823C0 | ApiSet: undefined
 */
export function _0xF06CBB8CCCA823C0(p0, p1) {
    Citizen.invokeNative('0xF06CBB8CCCA823C0', p0, p1);
}
/**
 * Hash: 0xD747979C053EFA7A | ApiSet: undefined
 */
export function _0xD747979C053EFA7A(p0) {
    Citizen.invokeNative('0xD747979C053EFA7A', p0);
}
/**
 * ```
 * enum _0x18F77396
 * ```
 * Hash: 0x0F1CD8CA9E65D5F6 | ApiSet: undefined
 */
export function setCompanionActivity(groupId, activity) {
    if (typeof activity === 'string')
        activity = this.getHashKey(activity);
    SetCompanionActivity(groupId, activity);
}
/**
 * Hash: 0x1740E3DEE0AE4D27 | ApiSet: undefined
 */
export function removeCompanionFlag(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemoveCompanionFlag(_ped, p1);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x7AF1BB4504EA5ED9 | ApiSet: undefined
 */
export function _0x7AF1BB4504EA5ED9() {
    return Citizen.invokeNative('0x7AF1BB4504EA5ED9');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x29C733459A9011EB | ApiSet: undefined
 */
export function _0x29C733459A9011EB(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    Citizen.invokeNative('0x29C733459A9011EB', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x74BCCEB233AD95B2 | ApiSet: undefined
 */
export function _0x74BCCEB233AD95B2(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x74BCCEB233AD95B2', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xB6FD96420C0126A1 | ApiSet: undefined
 */
export function _0xB6FD96420C0126A1(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    Citizen.invokeNative('0xB6FD96420C0126A1', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xCCB4635A071FB62D | ApiSet: undefined
 */
export function _0xCCB4635A071FB62D() {
    Citizen.invokeNative('0xCCB4635A071FB62D');
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4E4ACAE1C671A9DA | ApiSet: undefined
 */
export function compendiumAnimalGetSampleInventoryItem(compendiumEntry) {
    return CompendiumAnimalGetSampleInventoryItem(compendiumEntry);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xBCF569FC32FFF456 | ApiSet: undefined
 */
export function compendiumAnimalHasStamp(compendiumEntry) {
    return CompendiumAnimalHasStamp(compendiumEntry);
}
/**
 * Hash: 0x725D52F26A5E9E10 | ApiSet: undefined
 */
export function compendiumAnimalObservedByStatName(animalType, disableCompendiumToast) {
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    CompendiumAnimalObservedByStatName(animalType, disableCompendiumToast);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x6FC24625E4FCAC27 | ApiSet: undefined
 */
export function compendiumAnimalHasSample(compendiumEntry) {
    return CompendiumAnimalHasSample(compendiumEntry);
}
/**
 * Hash: 0x725D52F21A5E9E00 | ApiSet: undefined
 */
export function compendiumFishCaught(ped, category) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof category === 'string')
        category = this.getHashKey(category);
    CompendiumFishCaught(_ped, category);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x67F35C7C9F2BDCFE | ApiSet: undefined
 */
export function compendiumAnimalSetDiscovered(compendiumEntry) {
    CompendiumAnimalSetDiscovered(compendiumEntry);
}
/**
 * Hash: 0x725D52F21A5E9E81 | ApiSet: undefined
 */
export function compendiumFishGetLureSuitabilityByStatItem(animalType, baitType) {
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    if (typeof baitType === 'string')
        baitType = this.getHashKey(baitType);
    return CompendiumFishGetLureSuitabilityByStatItem(animalType, baitType);
}
/**
 * Hash: 0x725D52F21A5E9E04 | ApiSet: undefined
 */
export function compendiumGangAmbushSurvived(p0) {
    CompendiumGangAmbushSurvived(p0);
}
/**
 * Hash: 0x725D52F21A5E9E06 | ApiSet: undefined
 */
export function compendiumGangBountyCaptured(p0) {
    CompendiumGangBountyCaptured(p0);
}
/**
 * Hash: 0x725D52F21A5E9E03 | ApiSet: undefined
 */
export function compendiumGangCampFound(p0, p1) {
    CompendiumGangCampFound(p0, p1);
}
/**
 * Hash: 0x725D52F21A5E9E08 | ApiSet: undefined
 */
export function compendiumGangHideoutFound(p0, p1) {
    CompendiumGangHideoutFound(p0, p1);
}
/**
 * Hash: 0x725D52F21A5E9E05 | ApiSet: undefined
 */
export function compendiumGangEncountered(p0) {
    CompendiumGangEncountered(p0);
}
/**
 * Hash: 0x725D52F21A5E9E07 | ApiSet: undefined
 */
export function compendiumGangMemberKilled(p0) {
    CompendiumGangMemberKilled(p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x5CEB63B2E3D9895F | ApiSet: undefined
 */
export function compendiumGetEntryByIndexInSubcategory(category, subcategory, count) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetEntryByIndexInSubcategory(category, subcategory, count);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x1CFA0219D8E1CF25 | ApiSet: undefined
 */
export function compendiumGetEntryByPedIndex(category, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return CompendiumGetEntryByPedIndex(category, _ped);
}
/**
 * Hash: 0x729D54121A5E9E20 | ApiSet: undefined
 */
export function compendiumGetMapDiscoverableFromStatItem(animalStatItem, position) {
    if (typeof animalStatItem === 'string')
        animalStatItem = this.getHashKey(animalStatItem);
    return CompendiumGetMapDiscoverableFromStatItem(animalStatItem, position.x, position.y, position.z);
}
/**
 * Hash: 0x729D52F61A5A9E22 | ApiSet: undefined
 */
export function compendiumGetNumOfEntriesInCategory(category) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return CompendiumGetNumOfEntriesInCategory(category);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x66EC938394D76C85 | ApiSet: undefined
 */
export function compendiumGetEntryByStatItem(category, animalType) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    return CompendiumGetEntryByStatItem(category, animalType);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xCD278B6BFBDBDC22 | ApiSet: undefined
 */
export function compendiumGetSubcategoryHashFromAnimalType(category, animalType) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    return CompendiumGetSubcategoryHashFromAnimalType(category, animalType);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9B657550DF55EC96 | ApiSet: undefined
 */
export function compendiumGetSubcategoryPedIsIn(category, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return CompendiumGetSubcategoryPedIsIn(category, _ped);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xF58A0C0E086E8E36 | ApiSet: undefined
 */
export function compendiumGetNumEntriesInSubcategory(category, subcategory) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetNumEntriesInSubcategory(category, subcategory);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x59D4D68CDB82427C | ApiSet: undefined
 */
export function compendiumGetSubcategorySampleToastDescComplete(category, subcategory) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetSubcategorySampleToastDescComplete(category, subcategory);
}
/**
 * Hash: 0x6C5E5D48E48B4C65 | ApiSet: undefined
 */
export function compendiumGetShortDescriptionFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CompendiumGetShortDescriptionFromPed(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9F678782720349E4 | ApiSet: undefined
 */
export function compendiumGetStudyAwardId(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CompendiumGetStudyAwardId(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x5E50C67EB60951E6 | ApiSet: undefined
 */
export function compendiumGetSubcategorySampleToastTitle(category, subcategory) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetSubcategorySampleToastTitle(category, subcategory);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x82BFB5B367957699 | ApiSet: undefined
 */
export function compendiumGetSubcategorySampleToastDescProgress(category, subcategory) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetSubcategorySampleToastDescProgress(category, subcategory);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x2BF30D9D4D680112 | ApiSet: undefined
 */
export function compendiumGetSubcategoryToastAppId(category, subcategory) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    return CompendiumGetSubcategoryToastAppId(category, subcategory);
}
/**
 * Hash: 0x725D52F21A5E9E50 | ApiSet: undefined
 */
export function compendiumHorseBonding(ped, bondingLevel) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    CompendiumHorseBonding(_ped, bondingLevel);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x23B5E9C5160BC04F | ApiSet: undefined
 */
export function compendiumWasAnimalObserved(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CompendiumWasAnimalObserved(_ped);
}
/**
 * ```
 * herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
 * Vector3: Player Location
 * ```
 * Hash: 0x725D52F21A5E9E09 | ApiSet: undefined
 */
export function compendiumHerbPicked(herbType, position) {
    if (typeof herbType === 'string')
        herbType = this.getHashKey(herbType);
    CompendiumHerbPicked(herbType, position.x, position.y, position.z);
}
/**
 * ```
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_*
 * ```
 * Hash: 0x725D52F21A5E9E22 | ApiSet: undefined
 */
export function _0x725D52F21A5E9E22(category) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return Citizen.invokeNative('0x725D52F21A5E9E22', category);
}
/**
 * ```
 * Only gets called if bSetObserved is true and animalType is matching
 * ```
 * Hash: 0x725D58F2125E5E50 | ApiSet: undefined
 */
export function compendiumHorseObserved(ped, disableCompendiumToast) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    CompendiumHorseObserved(_ped, disableCompendiumToast);
}
/**
 * ```
 * NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
 * ```
 * Hash: 0x725852D21A2E9E50 | ApiSet: undefined
 */
export function compendiumHorseWildBroken(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    CompendiumHorseWildBroken(_ped);
}
/**
 * ```
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_*
 * ```
 * Hash: 0x729D52461AEA9E22 | ApiSet: undefined
 */
export function _0x729D52461AEA9E22(category) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return Citizen.invokeNative('0x729D52461AEA9E22', category);
}
/**
 * Hash: 0x0FD3ECF9D0C8655F | ApiSet: undefined
 */
export function _0x0FD3ECF9D0C8655F(p0) {
    Citizen.invokeNative('0x0FD3ECF9D0C8655F', p0);
}
/**
 * Hash: 0x23CCAB8F40B9CBEE | ApiSet: undefined
 */
export function _0x23CCAB8F40B9CBEE(position) {
    return Citizen.invokeNative('0x23CCAB8F40B9CBEE', position.x, position.y, position.z);
}
/**
 * Hash: 0x33C1D63E55FA4284 | ApiSet: undefined
 */
export function _0x33C1D63E55FA4284(p0) {
    return Citizen.invokeNative('0x33C1D63E55FA4284', p0);
}
/**
 * Hash: 0x3A66F1963B223F61 | ApiSet: undefined
 */
export function _0x3A66F1963B223F61(p0) {
    return Citizen.invokeNative('0x3A66F1963B223F61', p0);
}
/**
 * Hash: 0x4E42CA5BCD45444A | ApiSet: undefined
 */
export function _0x4E42CA5BCD45444A() {
    Citizen.invokeNative('0x4E42CA5BCD45444A');
}
/**
 * Hash: 0x87F005C969EF1563 | ApiSet: undefined
 */
export function _0x87F005C969EF1563(p0) {
    return Citizen.invokeNative('0x87F005C969EF1563', p0);
}
/**
 * Hash: 0x7C680FF55617F82F | ApiSet: undefined
 */
export function _0x7C680FF55617F82F() {
    return Citizen.invokeNative('0x7C680FF55617F82F');
}
/**
 * Hash: 0xCA0BAC376C541978 | ApiSet: undefined
 */
export function _0xCA0BAC376C541978(p0) {
    Citizen.invokeNative('0xCA0BAC376C541978', p0);
}
/**
 * Hash: 0xA67F0B039D9CD513 | ApiSet: undefined
 */
export function _0xA67F0B039D9CD513(p0) {
    return Citizen.invokeNative('0xA67F0B039D9CD513', p0);
}
/**
 * Hash: 0xD8E3D22AA4F0E0A5 | ApiSet: undefined
 */
export function _0xD8E3D22AA4F0E0A5(p0) {
    return Citizen.invokeNative('0xD8E3D22AA4F0E0A5', p0);
}
/**
 * ```
 * unused = true
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xDA05310EA94DC8C6 | ApiSet: undefined
 */
export function _0xDA05310EA94DC8C6(p0, p1) {
    Citizen.invokeNative('0xDA05310EA94DC8C6', p0, p1);
}
/**
 * Hash: 0xE72E234B30DA7B7A | ApiSet: undefined
 */
export function _0xE72E234B30DA7B7A(p0) {
    return Citizen.invokeNative('0xE72E234B30DA7B7A', p0);
}
/**
 * Hash: 0xF0D545C1EEAD614A | ApiSet: undefined
 */
export function _0xF0D545C1EEAD614A() {
    return Citizen.invokeNative('0xF0D545C1EEAD614A');
}
/**
 * Hash: 0x58D378AF2C8765B7 | ApiSet: undefined
 */
export function _0x58D378AF2C8765B7(p0) {
    return Citizen.invokeNative('0x58D378AF2C8765B7', p0);
}
/**
 * Hash: 0x1F471B79ACC90BEF | ApiSet: undefined
 */
export function networkClanGetLocalMembershipsCount() {
    return NetworkClanGetLocalMembershipsCount();
}
/**
 * Hash: 0xC685B014CE3D988B | ApiSet: undefined
 */
export function networkClanInvitePlayer(p0) {
    return NetworkClanInvitePlayer(p0);
}
/**
 * Hash: 0xEEE6EACBE8874FBA | ApiSet: undefined
 */
export function networkClanPlayerGetDesc(bufferSize) {
    return NetworkClanPlayerGetDesc(bufferSize);
}
/**
 * Hash: 0x8E2143144B8E188D | ApiSet: undefined
 */
export function networkAcceptClanInvite(crewInviteIndex) {
    return NetworkAcceptClanInvite(crewInviteIndex);
}
/**
 * Hash: 0x48DE78AF2C8885B8 | ApiSet: undefined
 */
export function networkClanGetMembershipDesc(p1) {
    return NetworkClanGetMembershipDesc(p1);
}
/**
 * Hash: 0xB124B57F571D8F18 | ApiSet: undefined
 */
export function networkClanPlayerIsActive() {
    return NetworkClanPlayerIsActive();
}
/**
 * Hash: 0xA134777FF7F33331 | ApiSet: undefined
 */
export function networkClanIsEmblemReady(p0) {
    return NetworkClanIsEmblemReady(p0);
}
/**
 * Hash: 0x113E6E3E50E286B0 | ApiSet: undefined
 */
export function networkClanReleaseEmblem(p0) {
    NetworkClanReleaseEmblem(p0);
}
/**
 * Hash: 0x579CCED0265D4896 | ApiSet: undefined
 */
export function networkClanServiceIsValid() {
    return NetworkClanServiceIsValid();
}
/**
 * Hash: 0x13518FF1C6B28938 | ApiSet: undefined
 */
export function networkClanRequestEmblem(p0) {
    return NetworkClanRequestEmblem(p0);
}
/**
 * Hash: 0xC080FF658B2E51DA | ApiSet: undefined
 */
export function networkClanSetActive(p0) {
    return NetworkClanSetActive(p0);
}
/**
 * Hash: 0xE532D6811B3A4D2A | ApiSet: undefined
 */
export function networkFindGamersInCrew(crewId) {
    return NetworkFindGamersInCrew(crewId);
}
/**
 * Hash: 0x9AA46BADAD0E27ED | ApiSet: undefined
 */
export function networkGetPrimaryClanDataClear() {
    return NetworkGetPrimaryClanDataClear();
}
/**
 * Hash: 0xC080FF658B2E41DA | ApiSet: undefined
 */
export function networkGetPrimaryClanDataNew() {
    return NetworkGetPrimaryClanDataNew();
}
/**
 * Hash: 0xB5074DB804E28CE7 | ApiSet: undefined
 */
export function networkGetPrimaryClanDataPending() {
    return NetworkGetPrimaryClanDataPending();
}
/**
 * Hash: 0xCE86D8191B762107 | ApiSet: undefined
 */
export function networkGetPrimaryClanDataStart(p1) {
    return NetworkGetPrimaryClanDataStart(p1);
}
/**
 * Hash: 0x5B4F04F19376A0BA | ApiSet: undefined
 */
export function networkGetPrimaryClanDataSuccess() {
    return NetworkGetPrimaryClanDataSuccess();
}
/**
 * Hash: 0x58BAA5F635DA2FF4 | ApiSet: undefined
 */
export function databindingAddDataBool(p0, p1, p2) {
    return DatabindingAddDataBool(p0, p1, p2);
}
/**
 * Hash: 0xBC95D3AE2ECA70D6 | ApiSet: undefined
 */
export function databindingAddDataBoolByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingAddDataBoolByHash(p0, p1, p2);
}
/**
 * Hash: 0x37BB86A751148A6A | ApiSet: undefined
 */
export function databindingAddDataBoolFromPath(p0, p1, p2) {
    return DatabindingAddDataBoolFromPath(p0, p1, p2);
}
/**
 * ```
 * Returns entryId Hash
 * ```
 * Hash: 0xEB4F9A3537EEABCD | ApiSet: undefined
 */
export function databindingAddDataContainer(entryId, p1) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingAddDataContainer(entryId, p1);
}
/**
 * Hash: 0x5154228273ADB9A6 | ApiSet: undefined
 */
export function databindingAddDataFloat(p0, p1, p2) {
    return DatabindingAddDataFloat(p0, p1, p2);
}
/**
 * Hash: 0x98BB14345BB68257 | ApiSet: undefined
 */
export function databindingAddDataContainerByHash(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingAddDataContainerByHash(p0, p1);
}
/**
 * Hash: 0x7D0F2014DB28DD00 | ApiSet: undefined
 */
export function databindingAddDataGangId(p0, p1, gangId) {
    return DatabindingAddDataGangId(p0, p1, gangId);
}
/**
 * Hash: 0x0C827D175F1292F4 | ApiSet: undefined
 */
export function databindingAddDataContainerFromPath(p0, p1) {
    return DatabindingAddDataContainerFromPath(p0, p1);
}
/**
 * Hash: 0x8E173DFB041993C6 | ApiSet: undefined
 */
export function databindingAddDataHashByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return DatabindingAddDataHashByHash(p0, p1, p2);
}
/**
 * Hash: 0x8538F1205D60ECA6 | ApiSet: undefined
 */
export function databindingAddDataHash(p0, p1, p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return DatabindingAddDataHash(p0, p1, p2);
}
/**
 * Hash: 0x307A3247C5457BDE | ApiSet: undefined
 */
export function databindingAddDataInt(p0, p1, p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return DatabindingAddDataInt(p0, p1, p2);
}
/**
 * Hash: 0x7D0F2014DB28DD01 | ApiSet: undefined
 */
export function databindingAddDataPosseId(p0, p1, posseId) {
    return DatabindingAddDataPosseId(p0, p1, posseId);
}
/**
 * Hash: 0x267F9527F4350ADE | ApiSet: undefined
 */
export function databindingAddDataIntByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingAddDataIntByHash(p0, p1, p2);
}
/**
 * Hash: 0x617FCA1C5652BBAD | ApiSet: undefined
 */
export function databindingAddDataString(p0, p1, p2) {
    return DatabindingAddDataString(p0, p1, p2);
}
/**
 * Hash: 0xEAD09E76E22630C3 | ApiSet: undefined
 */
export function databindingAddDataStringByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingAddDataStringByHash(p0, p1, p2);
}
/**
 * Hash: 0xA381DE86EE170C4A | ApiSet: undefined
 */
export function databindingAddDataStringFromPath(p0, p1, p2) {
    return DatabindingAddDataStringFromPath(p0, p1, p2);
}
/**
 * Hash: 0x52F5F08278EA5D75 | ApiSet: undefined
 */
export function databindingAddHashArray(p0, p1) {
    return DatabindingAddHashArray(p0, p1);
}
/**
 * Hash: 0xFE74FA57E0CE6824 | ApiSet: undefined
 */
export function databindingAddUiItemList(p0, p1) {
    return DatabindingAddUiItemList(p0, p1);
}
/**
 * Hash: 0x1B23E0627BDBFE85 | ApiSet: undefined
 */
export function databindingAddStringArray(p0, p1) {
    return DatabindingAddStringArray(p0, p1);
}
/**
 * Hash: 0x3C7799283325181B | ApiSet: undefined
 */
export function databindingAddUiItemListByHash(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingAddUiItemListByHash(p0, p1);
}
/**
 * Hash: 0xDB5B9A474148F699 | ApiSet: undefined
 */
export function databindingAddUiItemListFromPath(p0, p1) {
    return DatabindingAddUiItemListFromPath(p0, p1);
}
/**
 * Hash: 0xD23F5DE04FE717E2 | ApiSet: undefined
 */
export function databindingGetArrayCount(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingGetArrayCount(entryId);
}
/**
 * Hash: 0xA1F15C1D03DF802D | ApiSet: undefined
 */
export function databindingClearBindingArray(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    DatabindingClearBindingArray(entryId);
}
/**
 * Hash: 0x0C827D175F1292F3 | ApiSet: undefined
 */
export function databindingGetDataContainerFromChildIndex(entryId, p1) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingGetDataContainerFromChildIndex(entryId, p1);
}
/**
 * Hash: 0x0C827D175F1292F2 | ApiSet: undefined
 */
export function databindingGetDataContainerFromPath(p0) {
    return DatabindingGetDataContainerFromPath(p0);
}
/**
 * Hash: 0xE96D7F9FEFCC105F | ApiSet: undefined
 */
export function databindingGetItemContextByIndex(p0, index) {
    return DatabindingGetItemContextByIndex(p0, index);
}
/**
 * Hash: 0xEE97A05C05F16E41 | ApiSet: undefined
 */
export function databindingInsertUiItemToListFromContextHashAlias(p0, index, p2, p3) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    DatabindingInsertUiItemToListFromContextHashAlias(p0, index, p2, p3);
}
/**
 * Hash: 0x5859E970794D92F3 | ApiSet: undefined
 */
export function databindingInsertUiItemToListFromContextStringAlias(p0, index, p2, p3) {
    DatabindingInsertUiItemToListFromContextStringAlias(p0, index, p2, p3);
}
/**
 * Hash: 0x5740774F608E4FC8 | ApiSet: undefined
 */
export function databindingInsertUiItemToListFromPathStringAlias(p0, p1, p2, p3) {
    DatabindingInsertUiItemToListFromPathStringAlias(p0, p1, p2, p3);
}
/**
 * Hash: 0x1E7130793AAAAB8D | ApiSet: undefined
 */
export function databindingIsEntryValid(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingIsEntryValid(entryId);
}
/**
 * Hash: 0x5EEFBD4B6D7CD6EB | ApiSet: undefined
 */
export function databindingReadDataBool(p0) {
    return DatabindingReadDataBool(p0);
}
/**
 * Hash: 0xA8EDE09FE07BD77F | ApiSet: undefined
 */
export function databindingReadDataBoolFromParent(p0, p1) {
    return DatabindingReadDataBoolFromParent(p0, p1);
}
/**
 * Hash: 0x4CDC3FDDFAE07EB3 | ApiSet: undefined
 */
export function databindingReadDataBoolFromParentByHash(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingReadDataBoolFromParentByHash(p0, p1);
}
/**
 * Hash: 0x9B535990B01B62DE | ApiSet: undefined
 */
export function databindingReadDataHashStringFromParent(p0, p1) {
    return DatabindingReadDataHashStringFromParent(p0, p1);
}
/**
 * Hash: 0x1F43BC25A119B252 | ApiSet: undefined
 */
export function databindingReadDataHashStringFromParentByHash(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingReadDataHashStringFromParentByHash(p0, p1);
}
/**
 * Hash: 0xFFC566A4801F6B40 | ApiSet: undefined
 */
export function databindingReadDataIntFromParent(p0, p1) {
    return DatabindingReadDataIntFromParent(p0, p1);
}
/**
 * Hash: 0xB5F668B648EC0970 | ApiSet: undefined
 */
export function databindingReadDataIntFromParentByHash(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return DatabindingReadDataIntFromParentByHash(p0, p1);
}
/**
 * Hash: 0x6323AD277C4A2AFB | ApiSet: undefined
 */
export function databindingReadDataStringFromParent(p0, p1) {
    return DatabindingReadDataStringFromParent(p0, p1);
}
/**
 * Hash: 0x3D290B5FFA7C5151 | ApiSet: undefined
 */
export function databindingReadDataString(p0) {
    return DatabindingReadDataString(p0);
}
/**
 * Hash: 0x5FE444EB67C70AD4 | ApiSet: undefined
 */
export function databindingReadFloat(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingReadFloat(entryId);
}
/**
 * Hash: 0x81D7183E7A8ECA72 | ApiSet: undefined
 */
export function databindingReadHash(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return DatabindingReadHash(entryId);
}
/**
 * Hash: 0xF68B1726EAF7B285 | ApiSet: undefined
 */
export function databindingRemoveBindingArrayItemByDataContextId(p0, entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    DatabindingRemoveBindingArrayItemByDataContextId(p0, entryId);
}
/**
 * Hash: 0x0AE9938D0541F2DA | ApiSet: undefined
 */
export function databindingRemoveDataEntry(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    DatabindingRemoveDataEntry(entryId);
}
/**
 * Hash: 0xFE74FA57E0CE6825 | ApiSet: undefined
 */
export function databindingSetTemplatedUiItemListSize(p0, p1) {
    DatabindingSetTemplatedUiItemListSize(p0, p1);
}
/**
 * Hash: 0x570784D782597512 | ApiSet: undefined
 */
export function databindingReadInt(p0) {
    return DatabindingReadInt(p0);
}
/**
 * Hash: 0xBDFE546E4C2D0E21 | ApiSet: undefined
 */
export function databindingWriteDataBoolFromParent(p0, p1, p2) {
    DatabindingWriteDataBoolFromParent(p0, p1, p2);
}
/**
 * Hash: 0x0AE7138D0541F2DE | ApiSet: undefined
 */
export function databindingSetTemplatedUiItemHashAlias(p0, p1, p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    DatabindingSetTemplatedUiItemHashAlias(p0, p1, p2);
}
/**
 * Hash: 0xAB888B4B91046770 | ApiSet: undefined
 */
export function databindingWriteDataBool(p0, p1) {
    DatabindingWriteDataBool(p0, p1);
}
/**
 * Hash: 0xC70041408E16BE2D | ApiSet: undefined
 */
export function databindingWriteDataGangId(p0, p1, gangId) {
    DatabindingWriteDataGangId(p0, p1, gangId);
}
/**
 * Hash: 0xDF504BECEB15DA93 | ApiSet: undefined
 */
export function databindingWriteDataFloat(p0, p1) {
    DatabindingWriteDataFloat(p0, p1);
}
/**
 * Hash: 0x20209529689E0953 | ApiSet: undefined
 */
export function databindingWriteDataHashStringFromParentByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    DatabindingWriteDataHashStringFromParentByHash(p0, p1, p2);
}
/**
 * Hash: 0xACDEF586BD71B1FD | ApiSet: undefined
 */
export function databindingWriteDataHashString(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    DatabindingWriteDataHashString(p0, p1);
}
/**
 * Hash: 0x0971F04E1EAA7AE8 | ApiSet: undefined
 */
export function databindingWriteDataHashStringFromParent(p0, p1, p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    DatabindingWriteDataHashStringFromParent(p0, p1, p2);
}
/**
 * Hash: 0x9EFA98238BA08FC4 | ApiSet: undefined
 */
export function databindingWriteDataIntFromParent(p0, p1, p2) {
    DatabindingWriteDataIntFromParent(p0, p1, p2);
}
/**
 * Hash: 0xC70041408E16BE2E | ApiSet: undefined
 */
export function databindingWriteDataPosseId(p0, p1, posseId) {
    DatabindingWriteDataPosseId(p0, p1, posseId);
}
/**
 * Hash: 0x335C3F6B3766B8D9 | ApiSet: undefined
 */
export function databindingWriteDataInt(p0, p1) {
    DatabindingWriteDataInt(p0, p1);
}
/**
 * Hash: 0x9D6E10A41D6ED6EC | ApiSet: undefined
 */
export function databindingWriteDataIntFromParentByHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    DatabindingWriteDataIntFromParentByHash(p0, p1, p2);
}
/**
 * Hash: 0xAB888B4B91046771 | ApiSet: undefined
 */
export function databindingWriteDataScriptVariables(p0, p1) {
    DatabindingWriteDataScriptVariables(p0, p1);
}
/**
 * Hash: 0xE1BD342F2872AEE9 | ApiSet: undefined
 */
export function databindingWriteDataString(p0, p1) {
    DatabindingWriteDataString(p0, p1);
}
/**
 * Hash: 0x4FF713B2F17A391E | ApiSet: undefined
 */
export function databindingWriteStringFromParent(p0, p1, p2) {
    DatabindingWriteStringFromParent(p0, p1, p2);
}
/**
 * Hash: 0xA3BD6FF95E713EE5 | ApiSet: undefined
 */
export function databindingWriteStringFromHash(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    DatabindingWriteStringFromHash(p0, p1, p2);
}
/**
 * Hash: 0x02B21B6BEEDD83CC | ApiSet: undefined
 */
export function _0x02B21B6BEEDD83CC(entryId, p1) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    return Citizen.invokeNative('0x02B21B6BEEDD83CC', entryId, p1);
}
/**
 * ```
 * _DATABINDING_WRITE_DATA_*
 * ```
 * Hash: 0x05AC9E1E02975AFB | ApiSet: undefined
 */
export function _0x05AC9E1E02975AFB(p0, p1, p2) {
    Citizen.invokeNative('0x05AC9E1E02975AFB', p0, p1, p2);
}
/**
 * Hash: 0x294AF5323F44B053 | ApiSet: undefined
 */
export function _0x294AF5323F44B053(p0, p1, p2) {
    return Citizen.invokeNative('0x294AF5323F44B053', p0, p1, p2);
}
/**
 * Hash: 0x1919D59E60FD516E | ApiSet: undefined
 */
export function _0x1919D59E60FD516E(p0, p1, p2) {
    Citizen.invokeNative('0x1919D59E60FD516E', p0, p1, p2);
}
/**
 * Hash: 0x422179C7F6AD9304 | ApiSet: undefined
 */
export function _0x422179C7F6AD9304(p0) {
    return Citizen.invokeNative('0x422179C7F6AD9304', p0);
}
/**
 * Hash: 0x3BF0767CF33FCC88 | ApiSet: undefined
 */
export function _0x3BF0767CF33FCC88(entryId) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    Citizen.invokeNative('0x3BF0767CF33FCC88', entryId);
}
/**
 * Hash: 0x6318FB3BE37E11B3 | ApiSet: undefined
 */
export function _0x6318FB3BE37E11B3(entryId, index) {
    if (typeof entryId === 'string')
        entryId = this.getHashKey(entryId);
    Citizen.invokeNative('0x6318FB3BE37E11B3', entryId, index);
}
/**
 * Hash: 0x6329C34BEE5BFF4B | ApiSet: undefined
 */
export function _0x6329C34BEE5BFF4B(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0x6329C34BEE5BFF4B', p0, p1);
}
/**
 * Hash: 0x7FC60C94C83C5CD7 | ApiSet: undefined
 */
export function _0x7FC60C94C83C5CD7(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x7FC60C94C83C5CD7', p0, p1, p2);
}
/**
 * ```
 * _DATABINDING_WRITE_DATA_*
 * ```
 * Hash: 0xBFC83DA249BEFCC9 | ApiSet: undefined
 */
export function _0xBFC83DA249BEFCC9(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xBFC83DA249BEFCC9', p0, p1, p2);
}
/**
 * Hash: 0xB138CA787F3DD858 | ApiSet: undefined
 */
export function _0xB138CA787F3DD858(p0, p1, p2) {
    Citizen.invokeNative('0xB138CA787F3DD858', p0, p1, p2);
}
/**
 * Hash: 0xC900CEC8A172375B | ApiSet: undefined
 */
export function _0xC900CEC8A172375B(p0, p1, p2) {
    Citizen.invokeNative('0xC900CEC8A172375B', p0, p1, p2);
}
/**
 * Hash: 0xD48993A61938C64D | ApiSet: undefined
 */
export function _0xD48993A61938C64D(p0, p1) {
    return Citizen.invokeNative('0xD48993A61938C64D', p0, p1);
}
/**
 * Hash: 0xE6AAB897120492D6 | ApiSet: undefined
 */
export function _0xE6AAB897120492D6(p0, p1) {
    return Citizen.invokeNative('0xE6AAB897120492D6', p0, p1);
}
/**
 * Hash: 0xD7DB94AB78E8EBE4 | ApiSet: undefined
 */
export function _0xD7DB94AB78E8EBE4(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0xD7DB94AB78E8EBE4', p0, p1);
}
/**
 * Hash: 0xE6AAB897120492D7 | ApiSet: undefined
 */
export function _0xE6AAB897120492D7(p0, p1, p2) {
    Citizen.invokeNative('0xE6AAB897120492D7', p0, p1, p2);
}
/**
 * Hash: 0x37963B56755BFB35 | ApiSet: undefined
 */
export function virtualCollectionExists(p0) {
    return VirtualCollectionExists(p0);
}
/**
 * Hash: 0xF47E33F8D2523825 | ApiSet: undefined
 */
export function _0xF47E33F8D2523825(p0, p1) {
    return Citizen.invokeNative('0xF47E33F8D2523825', p0, p1);
}
/**
 * Hash: 0x6DCBF187221CF73D | ApiSet: undefined
 */
export function virtualCollectionItemAdd(p0, index, p2, p3) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    VirtualCollectionItemAdd(p0, index, p2, p3);
}
/**
 * Hash: 0x09D95666ED2B5F60 | ApiSet: undefined
 */
export function virtualCollectionReset(p0) {
    VirtualCollectionReset(p0);
}
/**
 * Hash: 0x49A8447533308BCF | ApiSet: undefined
 */
export function virtualCollectionSetInterestIndex(p0, interestIndex) {
    VirtualCollectionSetInterestIndex(p0, interestIndex);
}
/**
 * Hash: 0x9DCE9B01A93B58BC | ApiSet: undefined
 */
export function virtualCollectionSetSize(p0, size) {
    VirtualCollectionSetSize(p0, size);
}
/**
 * Hash: 0x6A885BF69239E539 | ApiSet: undefined
 */
export function dataarrayGetCount() {
    return DataarrayGetCount();
}
/**
 * Hash: 0xA9D003CF419CB81E | ApiSet: undefined
 */
export function dataarrayGetFloat(arrayIndex) {
    return DataarrayGetFloat(arrayIndex);
}
/**
 * Hash: 0xAB1231D2DE52F2D3 | ApiSet: undefined
 */
export function dataarrayGetBool(arrayIndex) {
    return DataarrayGetBool(arrayIndex);
}
/**
 * Hash: 0xA010655985853485 | ApiSet: undefined
 */
export function dataarrayGetDict(arrayIndex) {
    return DataarrayGetDict(arrayIndex);
}
/**
 * Hash: 0xB6790A8FF80F889F | ApiSet: undefined
 */
export function dataarrayGetString(arrayIndex) {
    return DataarrayGetString(arrayIndex);
}
/**
 * Hash: 0x96DEA500B6EBBE53 | ApiSet: undefined
 */
export function dataarrayGetInt(arrayIndex) {
    return DataarrayGetInt(arrayIndex);
}
/**
 * ```
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 * ```
 * Hash: 0x151DAFE6B3B9888F | ApiSet: undefined
 */
export function dataarrayGetType(arrayIndex) {
    return DataarrayGetType(arrayIndex);
}
/**
 * Hash: 0x1B5447CF18544B18 | ApiSet: undefined
 */
export function datadictGetArray(key) {
    return DatadictGetArray(key);
}
/**
 * Hash: 0x850DA2750DA14E9A | ApiSet: undefined
 */
export function dataarrayGetVector(arrayIndex) {
    return new Vector3(DataarrayGetVector(arrayIndex));
}
/**
 * Hash: 0x4D7A30130F46AC9C | ApiSet: undefined
 */
export function datadictGetDict(key) {
    return DatadictGetDict(key);
}
/**
 * Hash: 0x175E915A486EE548 | ApiSet: undefined
 */
export function datadictGetBool(key) {
    return DatadictGetBool(key);
}
/**
 * Hash: 0x9D896A3B87D96E2B | ApiSet: undefined
 */
export function datadictGetInt(key) {
    return DatadictGetInt(key);
}
/**
 * ```
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 * ```
 * Hash: 0x92E11E3CA4C7CDF0 | ApiSet: undefined
 */
export function datadictGetType(key) {
    return DatadictGetType(key);
}
/**
 * Hash: 0x814643ECA258ADF5 | ApiSet: undefined
 */
export function datadictGetFloat(key) {
    return DatadictGetFloat(key);
}
/**
 * Hash: 0xE37B38C0B4E95DFA | ApiSet: undefined
 */
export function datadictGetString(key) {
    return DatadictGetString(key);
}
/**
 * Hash: 0xE459C941431E0FFA | ApiSet: undefined
 */
export function datadictGetVector(key) {
    return new Vector3(DatadictGetVector(key));
}
/**
 * Hash: 0xB04B69CF277D15C0 | ApiSet: undefined
 */
export function datadictIsArrayValid(p0) {
    return DatadictIsArrayValid(p0);
}
/**
 * Hash: 0x26FDF5E99AA2F3E9 | ApiSet: undefined
 */
export function datadictSetInt(key, value) {
    return DatadictSetInt(key, value);
}
/**
 * Hash: 0x4607D57C5F7D332A | ApiSet: undefined
 */
export function datadictIsDictValid(p0) {
    return DatadictIsDictValid(p0);
}
/**
 * Hash: 0x56B7291FB953DD51 | ApiSet: undefined
 */
export function datafileCreate(index) {
    DatafileCreate(index);
}
/**
 * Hash: 0x9FB90EEDEA9F2D5C | ApiSet: undefined
 */
export function datafileDelete(index) {
    DatafileDelete(index);
}
/**
 * Hash: 0x604B8ED1A482F9DF | ApiSet: undefined
 */
export function datafileDeleteRequestedFile(p0) {
    return DatafileDeleteRequestedFile(p0);
}
/**
 * Hash: 0xBBD8CF823CAE557C | ApiSet: undefined
 */
export function datafileGetFileDict(index) {
    return DatafileGetFileDict(index);
}
/**
 * Hash: 0x17279C820464CEE0 | ApiSet: undefined
 */
export function datafileHasLoadedFileData(p0) {
    return DatafileHasLoadedFileData(p0);
}
/**
 * Hash: 0xE60100389E50EADE | ApiSet: undefined
 */
export function datafileHasValidFileData(p0) {
    return DatafileHasValidFileData(p0);
}
/**
 * Hash: 0x46102A0989AD80B5 | ApiSet: undefined
 */
export function datafileSelectActiveFile(p0, p1) {
    return DatafileSelectActiveFile(p0, p1);
}
/**
 * ```
 * Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
 * ```
 * Hash: 0x790EC421078F5C4E | ApiSet: undefined
 */
export function datafileUgcSelectData(ugcRequestId, index, p2) {
    return DatafileUgcSelectData(ugcRequestId, index, p2);
}
/**
 * ```
 * Adds the given request ID to the watch list.
 * ```
 * Hash: 0xA5834834CA8FD7FC | ApiSet: undefined
 */
export function datafileWatchRequestId(id) {
    DatafileWatchRequestId(id);
}
/**
 * Hash: 0x1C65CC931C0F946F | ApiSet: undefined
 */
export function _0x1C65CC931C0F946F(p0, p1, p2) {
    Citizen.invokeNative('0x1C65CC931C0F946F', p0, p1, p2);
}
/**
 * Hash: 0x277251C161B4C3F4 | ApiSet: undefined
 */
export function _0x277251C161B4C3F4(p0, p1, p2) {
    Citizen.invokeNative('0x277251C161B4C3F4', p0, p1, p2);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x3168BA5D6DECE323 | ApiSet: undefined
 */
export function _0x3168BA5D6DECE323() {
    Citizen.invokeNative('0x3168BA5D6DECE323');
}
/**
 * Hash: 0x4F9E3ED7617123AC | ApiSet: undefined
 */
export function _0x4F9E3ED7617123AC(p0) {
    return Citizen.invokeNative('0x4F9E3ED7617123AC', p0);
}
/**
 * Hash: 0x9F130129EBC31B34 | ApiSet: undefined
 */
export function _0x9F130129EBC31B34(p0, p1, p2) {
    Citizen.invokeNative('0x9F130129EBC31B34', p0, p1, p2);
}
/**
 * Hash: 0x7681B677400C7071 | ApiSet: undefined
 */
export function _0x7681B677400C7071(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x7681B677400C7071', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xBC0DF006A4952C68 | ApiSet: undefined
 */
export function _0xBC0DF006A4952C68(p0, p1, p2) {
    Citizen.invokeNative('0xBC0DF006A4952C68', p0, p1, p2);
}
/**
 * Hash: 0xCA56DD6AB7A39F64 | ApiSet: undefined
 */
export function _0xCA56DD6AB7A39F64(p0) {
    return Citizen.invokeNative('0xCA56DD6AB7A39F64', p0);
}
/**
 * Hash: 0xE13634BB6BAF0734 | ApiSet: undefined
 */
export function _0xE13634BB6BAF0734(p0, p1) {
    return Citizen.invokeNative('0xE13634BB6BAF0734', p0, p1);
}
/**
 * Hash: 0xA63CD20F19B961AB | ApiSet: undefined
 */
export function parseddataGetBool(p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return ParseddataGetBool(p2);
}
/**
 * ```
 * Returns false when there are no entries.
 * ```
 * Hash: 0xED4413CEE1BF142C | ApiSet: undefined
 */
export function parseddataGetEntries() {
    return ParseddataGetEntries();
}
/**
 * ```
 * Opens file.
 * ```
 * Hash: 0x91DED5DD64BB2691 | ApiSet: undefined
 */
export function parseddataGetFile() {
    return ParseddataGetFile();
}
/**
 * Hash: 0xB2B42607F7867576 | ApiSet: undefined
 */
export function parseddataGetFloat(p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return ParseddataGetFloat(p2);
}
/**
 * Hash: 0x6BEB168D5195E7AB | ApiSet: undefined
 */
export function parseddataGetNumChildren(p0, p1) {
    return ParseddataGetNumChildren(p0, p1);
}
/**
 * Hash: 0x52FC26D2D2FC2987 | ApiSet: undefined
 */
export function parseddataGetInt(p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return ParseddataGetInt(p2);
}
/**
 * Hash: 0x44B3A36933AC009C | ApiSet: undefined
 */
export function parseddataGetSection(section) {
    if (typeof section === 'string')
        section = this.getHashKey(section);
    return ParseddataGetSection(section);
}
/**
 * Hash: 0x7907969497EA92F5 | ApiSet: undefined
 */
export function parseddataIsFileValid(fileHandle) {
    return ParseddataIsFileValid(fileHandle);
}
/**
 * Hash: 0x603AC35FD4602C76 | ApiSet: undefined
 */
export function parseddataIsFileLoaded(fileHandle) {
    return ParseddataIsFileLoaded(fileHandle);
}
/**
 * ```
 * LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
 * Returns parseddata script fileHandle
 * ```
 * Hash: 0xD97D8D905F1562F2 | ApiSet: undefined
 */
export function parseddataLoadFileHash(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return ParseddataLoadFileHash(p0);
}
/**
 * Hash: 0x0D9138F3F8261DF7 | ApiSet: undefined
 */
export function parseddataRqFilloutBool() {
    return ParseddataRqFilloutBool();
}
/**
 * Hash: 0xAE156A747C39A741 | ApiSet: undefined
 */
export function parseddataRegisterQuery(p0, p1, p2) {
    return ParseddataRegisterQuery(p0, p1, p2);
}
/**
 * Hash: 0x7F034FC3E891B57A | ApiSet: undefined
 */
export function parseddataRqFilloutFloat() {
    return ParseddataRqFilloutFloat();
}
/**
 * Hash: 0xFBFF3FF2F5E80C0B | ApiSet: undefined
 */
export function parseddataRqFilloutHash() {
    return ParseddataRqFilloutHash();
}
/**
 * Hash: 0xEF44ACC657352A35 | ApiSet: undefined
 */
export function parseddataRqFilloutInt() {
    return ParseddataRqFilloutInt();
}
/**
 * Hash: 0x83C3ED532B6E5D07 | ApiSet: undefined
 */
export function parseddataRqFilloutNode() {
    return ParseddataRqFilloutNode();
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x951327435DC5164B | ApiSet: undefined
 */
export function parseddataRqFilloutString127(p0) {
    return ParseddataRqFilloutString127(p0);
}
/**
 * Hash: 0x08EAF8E9F2EB7B2E | ApiSet: undefined
 */
export function parseddataRqFilloutString63(p0) {
    return ParseddataRqFilloutString63(p0);
}
/**
 * Hash: 0x06FBF89B12DA279C | ApiSet: undefined
 */
export function parseddataRqFilloutVector() {
    const result = ParseddataRqFilloutVector();
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0xDF01B1F7A886B42D | ApiSet: undefined
 */
export function parseddataRqGetNumNodes(p0) {
    return ParseddataRqGetNumNodes(p0);
}
/**
 * Hash: 0xE79C70E77E0973C7 | ApiSet: undefined
 */
export function ugc2SetPlayerData(p0, p1, p2, p3) {
    return Ugc2SetPlayerData(p0, p1, p2, p3);
}
/**
 * Hash: 0x129567F0C05F81B9 | ApiSet: undefined
 */
export function parseddataUnloadFile(fileHandle) {
    ParseddataUnloadFile(fileHandle);
}
/**
 * ```
 * Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
 * ```
 * Hash: 0x05A5F662AD35C573 | ApiSet: undefined
 */
export function getGameVersionName() {
    return GetGameVersionName();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xACF9CB705BEFA8CB | ApiSet: undefined
 */
export function _0xACF9CB705BEFA8CB() {
    return Citizen.invokeNative('0xACF9CB705BEFA8CB');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA8D970D8A72640A6 | ApiSet: undefined
 */
export function _0xA8D970D8A72640A6() {
    return Citizen.invokeNative('0xA8D970D8A72640A6');
}
/**
 * ```
 * Returns whether or not the specified property is set for the entity.
 * ```
 * Hash: 0xD9D1CDBF3464DCDF | ApiSet: undefined
 */
export function decorExistOn(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorExistOn(_entity, propertyName);
}
/**
 * Hash: 0xDEF3F1B071ABB197 | ApiSet: undefined
 */
export function decorGetBool(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorGetBool(_entity, propertyName);
}
/**
 * Hash: 0x44DB62727762FD9B | ApiSet: undefined
 */
export function decorGetInt(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorGetInt(_entity, propertyName);
}
/**
 * Hash: 0xE5FF70CD842CA9D4 | ApiSet: undefined
 */
export function decorGetFloat(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorGetFloat(_entity, propertyName);
}
/**
 * Hash: 0xB1682B2443F0540B | ApiSet: undefined
 */
export function decorGetUint8(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorGetUint8(_entity, propertyName);
}
/**
 * Hash: 0x0B253D644E3C36B3 | ApiSet: undefined
 */
export function decorRegister(propertyName, type) {
    DecorRegister(propertyName, type);
}
/**
 * ```
 * type: see DECOR_REGISTER
 * ```
 * Hash: 0x72355278C069F272 | ApiSet: undefined
 */
export function decorIsRegisteredAsType(propertyName, type) {
    return DecorIsRegisteredAsType(propertyName, type);
}
/**
 * Hash: 0x2BA7F5877A088A1D | ApiSet: undefined
 */
export function decorRemove(entity, propertyName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorRemove(_entity, propertyName);
}
/**
 * Hash: 0x4587374F88B7F6C2 | ApiSet: undefined
 */
export function decorRegister2(propertyName, type, p2) {
    DecorRegister2(propertyName, type, p2);
}
/**
 * Hash: 0x88942780E0ADEA42 | ApiSet: undefined
 */
export function decorRemoveAll(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorRemoveAll(_entity);
}
/**
 * ```
 * This function sets metadata of type bool to specified entity.
 * ```
 * Hash: 0xFE26E4609B1C3772 | ApiSet: undefined
 */
export function decorSetBool(entity, propertyName, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorSetBool(_entity, propertyName, value);
}
/**
 * Hash: 0x238F8B0C1C7FE834 | ApiSet: undefined
 */
export function decorSetFloat(entity, propertyName, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorSetFloat(_entity, propertyName, value);
}
/**
 * ```
 * Sets property to int.
 * ```
 * Hash: 0xE88F4D7F52A6090F | ApiSet: undefined
 */
export function decorSetInt(entity, propertyName, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorSetInt(_entity, propertyName, value);
}
/**
 * Hash: 0x0671C1A3FF7AFDFC | ApiSet: undefined
 */
export function decorSetString(entity, propertyName, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorSetString(_entity, propertyName, value);
}
/**
 * Hash: 0x4BDC83150D43772D | ApiSet: undefined
 */
export function decorSetUint8(entity, propertyName, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DecorSetUint8(_entity, propertyName, value);
}
/**
 * Hash: 0x1DB9D61E505AE3FC | ApiSet: undefined
 */
export function getSpecialEditionCashCampBonusEnabled() {
    return GetSpecialEditionCashCampBonusEnabled();
}
/**
 * Hash: 0x71D4BF5890659B0C | ApiSet: undefined
 */
export function getIsLoadingScreenActive() {
    return GetIsLoadingScreenActive();
}
/**
 * Hash: 0xA16B4FBA7887D7BA | ApiSet: undefined
 */
export function getSpecialEditionCoreStatsBonusEnabled() {
    return GetSpecialEditionCoreStatsBonusEnabled();
}
/**
 * Hash: 0x2763DC12BBE2BB6F | ApiSet: undefined
 */
export function isDlcPresent(dlcHash) {
    if (typeof dlcHash === 'string')
        dlcHash = this.getHashKey(dlcHash);
    return IsDlcPresent(dlcHash);
}
/**
 * Hash: 0x1AD922AB5038DEF3 | ApiSet: undefined
 */
export function addEntityTrackingTrails(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AddEntityTrackingTrails(_entity);
}
/**
 * Hash: 0xF15E8F5D333F09C4 | ApiSet: undefined
 */
export function applyForceToEntity(entity, forceFlags, position, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ApplyForceToEntity(_entity, forceFlags, position.x, position.y, position.z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13);
}
/**
 * ```
 * p6/relative - makes the xyz force not relative to world coords, but to something else
 * p7/highForce - setting false will make the force really low
 * ```
 * Hash: 0x31DA7CEC5334DB37 | ApiSet: undefined
 */
export function applyForceToEntityCenterOfMass(entity, forceType, position, component, isDirectionRel, isForceRel, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ApplyForceToEntityCenterOfMass(_entity, forceType, position.x, position.y, position.z, component, isDirectionRel, isForceRel, p8);
}
/**
 * ```
 * Attaches entity1 to bone (boneIndex) of entity2.
 * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 * useSoftPinning - if set to false attached entity will not detach when fixed
 * collision - controls collision between the two entities (FALSE disables collision).
 * isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
 * vertexIndex - position of vertex
 * fixedRot - if false it ignores entity vector
 * ```
 * Hash: 0x6B9BBD38AB0796DF | ApiSet: undefined
 */
export function attachEntityToEntity(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15, p16) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    AttachEntityToEntity(_entity1, _entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, vertexIndex, fixedRot, p15, p16);
}
/**
 * Hash: 0xB629A43CA1643481 | ApiSet: undefined
 */
export function attachEntityToEntityPhysically(entity1, entity2, p2, boneIndex, offsetX, offsetY, offsetZ, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    AttachEntityToEntityPhysically(_entity1, _entity2, p2, boneIndex, offsetX, offsetY, offsetZ, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21);
}
/**
 * Hash: 0xBB19AC7D4DCEFD0F | ApiSet: undefined
 */
export function clearEntityLastDamageEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ClearEntityLastDamageEntity(_entity);
}
/**
 * ```
 * Alters entity's health by 'amount'. Can be negative (to drain health).
 * In the scripts entity2 and weaponHash are unused (zero).
 * ```
 * Hash: 0x835F131E7DC8F97A | ApiSet: undefined
 */
export function changeEntityHealth(entity, amount, entity2, weaponHash) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return ChangeEntityHealth(_entity, amount, _entity2, weaponHash);
}
/**
 * Hash: 0x069848B3FB3C4426 | ApiSet: undefined
 */
export function createModelHide(position, radius, model, p5) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    CreateModelHide(position.x, position.y, position.z, radius, model, p5);
}
/**
 * Hash: 0x29BA9F78321E5A6C | ApiSet: undefined
 */
export function createFootpathTrail(p0, waypointRecord, bUseSnowOffset, p3, p4, p5, p6, p7, p8, p9, p10, bInit) {
    return CreateFootpathTrail(p0, waypointRecord, bUseSnowOffset, p3, p4, p5, p6, p7, p8, p9, p10, bInit);
}
/**
 * Hash: 0xD136090A9AAAB17D | ApiSet: undefined
 */
export function createModelHideExcludingScriptObjects(position, radius, model, p5) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    CreateModelHideExcludingScriptObjects(position.x, position.y, position.z, radius, model, p5);
}
/**
 * Hash: 0x0961A905AFBC34C7 | ApiSet: undefined
 */
export function createForcedObject(position, p3, modelHash, p5) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    CreateForcedObject(position.x, position.y, position.z, p3, modelHash, p5);
}
/**
 * ```
 * Only works with objects!
 * ```
 * Hash: 0x10B2218320B6F5AC | ApiSet: undefined
 */
export function createModelSwap(position, radius, originalModel, newModel, p6) {
    if (typeof originalModel === 'string')
        originalModel = this.getHashKey(originalModel);
    if (typeof newModel === 'string')
        newModel = this.getHashKey(newModel);
    CreateModelSwap(position.x, position.y, position.z, radius, originalModel, newModel, p6);
}
/**
 * Hash: 0x0D0DB2B6AF19A987 | ApiSet: undefined
 */
export function deleteCarriable(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DeleteCarriable(_entity);
}
/**
 * ```
 * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0x4CD38C78BD19A497 | ApiSet: undefined
 */
export function deleteEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DeleteEntity(_entity);
}
/**
 * Hash: 0x64CDE9D6BF8ECAD3 | ApiSet: undefined
 */
export function detachEntity(entity, p1, collision) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DetachEntity(_entity, p1, collision);
}
/**
 * ```
 * Must be called from a background script, otherwise it will do nothing.
 * ```
 * Hash: 0x5E94EA09E7207C16 | ApiSet: undefined
 */
export function deleteEntity2(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DeleteEntity2(_entity);
}
/**
 * ```
 * Checks if the Entity exists
 * ```
 * Hash: 0xD42BD6EB2E0F1677 | ApiSet: undefined
 */
export function doesEntityExist(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesEntityExist(_entity);
}
/**
 * Hash: 0x622B1980CBE13332 | ApiSet: undefined
 */
export function doesEntityBelongToThisScript(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesEntityBelongToThisScript(_entity, p1);
}
/**
 * Hash: 0x20487F0DA9AF164A | ApiSet: undefined
 */
export function doesEntityHaveDrawable(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesEntityHaveDrawable(_entity);
}
/**
 * Hash: 0xA512B3F1B2A0B51C | ApiSet: undefined
 */
export function doesEntityHavePhysics(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesEntityHavePhysics(_entity);
}
/**
 * ```
 * Returns true if calling script owns specified entity
 * ```
 * Hash: 0x88AD6CC10D8D35B2 | ApiSet: undefined
 */
export function doesThreadOwnThisEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesThreadOwnThisEntity(_entity);
}
/**
 * Hash: 0x42718CC559BD7776 | ApiSet: undefined
 */
export function findAnimEventPhase(animDictionary, animName, p2) {
    return FindAnimEventPhase(animDictionary, animName, p2);
}
/**
 * Hash: 0x7D9EFB7AD6B19754 | ApiSet: undefined
 */
export function freezeEntityPosition(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    FreezeEntityPosition(_entity, toggle);
}
/**
 * Hash: 0x4C9E96473D4F1A88 | ApiSet: undefined
 */
export function forceEntityAiAndAnimationUpdate(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ForceEntityAiAndAnimationUpdate(_entity, p1);
}
/**
 * Hash: 0x9FFAF4940A54CC09 | ApiSet: undefined
 */
export function getAnimDuration(animDict, animName) {
    return GetAnimDuration(animDict, animName);
}
/**
 * ```
 * Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
 * ```
 * Hash: 0x31FEF6A20F00B963 | ApiSet: undefined
 */
export function getCarriableFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetCarriableFromEntity(_entity);
}
/**
 * ```
 * enum eCarriableState
 * {
 * CARRIABLE_STATE_NONE,
 * CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
 * CARRIABLE_STATE_CARRIABLE_INTRO,
 * CARRIABLE_STATE_CARRIABLE,
 * CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
 * CARRIABLE_STATE_CARRIED_BY_HUMAN,
 * CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
 * CARRIABLE_STATE_CARRIED_BY_MOUNT,
 * CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
 * CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
 * CARRIABLE_STATE_BEING_CUT_FREE,
 * CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
 * CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
 * };
 * ```
 * Hash: 0x61914209C36EFDDB | ApiSet: undefined
 */
export function getCarriableEntityState(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetCarriableEntityState(_entity);
}
/**
 * Hash: 0x59B57C4B06531E1E | ApiSet: undefined
 */
export function getEntitiesNearPoint(position, radius, itemSet, p5) {
    return GetEntitiesNearPoint(position.x, position.y, position.z, radius, itemSet, p5);
}
/**
 * Hash: 0x627520389E288A73 | ApiSet: undefined
 */
export function getEntityAnimCurrentTime(entity, animDict, animName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityAnimCurrentTime(_entity, animDict, animName);
}
/**
 * Hash: 0x886171A12F400B89 | ApiSet: undefined
 */
export function getEntitiesInVolume(volume, itemSet, entityType) {
    return GetEntitiesInVolume(volume, itemSet, entityType);
}
/**
 * Hash: 0x56D713888A566481 | ApiSet: undefined
 */
export function getEntityAttachedTo(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityAttachedTo(_entity);
}
/**
 * Hash: 0x1BB501624FAF2BEA | ApiSet: undefined
 */
export function getEntityAlpha(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityAlpha(_entity);
}
/**
 * ```
 * Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
 * https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
 * ```
 * Hash: 0xF7424890E4A094C0 | ApiSet: undefined
 */
export function getEntityByDoorhash(doorHash, p1) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return GetEntityByDoorhash(doorHash, p1);
}
/**
 * Hash: 0xBACA8FE9C76C124E | ApiSet: undefined
 */
export function getEntityBoneIndexByName(entity, boneName) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityBoneIndexByName(_entity, boneName);
}
/**
 * ```
 * Returns zero if the entity is not a carriable
 * ```
 * Hash: 0x0FD25587BB306C86 | ApiSet: undefined
 */
export function getEntityCarryConfig(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityCarryConfig(_entity);
}
/**
 * Hash: 0x75DF9E73F2F005FD | ApiSet: undefined
 */
export function getEntityCanBeDamaged(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityCanBeDamaged(_entity);
}
/**
 * Hash: 0xAA2FADD30F45A9DA | ApiSet: undefined
 */
export function getEntityCollisionDisabled(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityCollisionDisabled(_entity);
}
/**
 * ```
 * flagId: see _SET_ENTITY_CARRYING_FLAG
 * ```
 * Hash: 0x808077647856DE62 | ApiSet: undefined
 */
export function getEntityCarryingFlag(entity, flagId) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityCarryingFlag(_entity, flagId);
}
/**
 * Gets the current coordinates for a specified entity.
 * Hash: 0xA86D5F069399F44D | ApiSet: undefined
 */
export function getEntityCoords(entity, alive, realCoords) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntityCoords(_entity, alive, realCoords));
}
/**
 * ```
 * Gets the entity's forward vector in XY(Z) eulers.
 * ```
 * Hash: 0x2412D9C05BB09B97 | ApiSet: undefined
 */
export function getEntityForwardVector(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntityForwardVector(_entity));
}
/**
 * ```
 * Gets the entity's forward vector in YX(Z) eulers. Similar to GET_ENTITY_FORWARD_VECTOR
 * ```
 * Hash: 0x935A30AA88FB1014 | ApiSet: undefined
 */
export function getEntityForwardVectorYx(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntityForwardVectorYx(_entity));
}
/**
 * ```
 * Gets the X-component of the entity's forward vector.
 * ```
 * Hash: 0xDB0954E9960F6457 | ApiSet: undefined
 */
export function getEntityForwardX(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityForwardX(_entity);
}
/**
 * ```
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 * ```
 * Hash: 0xC230DD956E2F5507 | ApiSet: undefined
 */
export function getEntityHeading(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityHeading(_entity);
}
/**
 * ```
 * Gets the Y-component of the entity's forward vector.
 * ```
 * Hash: 0x9A5C073ECBDA7EE7 | ApiSet: undefined
 */
export function getEntityForwardY(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityForwardY(_entity);
}
/**
 * Hash: 0x82368787EA73C0F7 | ApiSet: undefined
 */
export function getEntityHealth(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityHealth(_entity);
}
/**
 * ```
 * Returns (CUR_HEALTH / MAX_HEALTH)
 * ```
 * Hash: 0x96C638784DB4C815 | ApiSet: undefined
 */
export function getEntityHealthFloat(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityHealthFloat(_entity);
}
/**
 * Hash: 0x296DEBC84474B375 | ApiSet: undefined
 */
export function getEntityHeight(entity, position, atTop, inWorldCoords) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityHeight(_entity, position.x, position.y, position.z, atTop, inWorldCoords);
}
/**
 * Hash: 0x0D3B5BAEA08F63E9 | ApiSet: undefined
 */
export function getEntityHeightAboveGround(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityHeightAboveGround(_entity);
}
/**
 * Hash: 0x3A9B1120AF13FBF2 | ApiSet: undefined
 */
export function getEntityMatrix(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const result = GetEntityMatrix(_entity);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4]), new Vector3(result[3], result[4], result[5]), new Vector3(result[4], result[5], result[6])];
}
/**
 * ```
 * Returns the LOD distance of an entity.
 * ```
 * Hash: 0xDF240D0C2A948683 | ApiSet: undefined
 */
export function getEntityLodDist(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityLodDist(_entity);
}
/**
 * ```
 * Returns the model hash from the entity
 * ```
 * Hash: 0xDA76A9F39210D365 | ApiSet: undefined
 */
export function getEntityModel(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityModel(_entity);
}
/**
 * Hash: 0x15D757606D170C3C | ApiSet: undefined
 */
export function getEntityMaxHealth(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityMaxHealth(_entity, p1);
}
/**
 * Hash: 0xEF355ABEFF7F5005 | ApiSet: undefined
 */
export function getEntityPitch(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityPitch(_entity);
}
/**
 * ```
 * Note: this native was removed in 1232 but added back in 1311
 * ```
 * Hash: 0x6CF0DAD7FA1088EA | ApiSet: undefined
 */
export function getEntityProofs(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityProofs(_entity);
}
/**
 * Hash: 0xADE28862B6D7B85B | ApiSet: undefined
 */
export function getEntityPopulationType(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityPopulationType(_entity);
}
/**
 * Hash: 0x2A08A32B6D49906F | ApiSet: undefined
 */
export function getEntityScript(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityScript(_entity);
}
/**
 * ```
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 * ```
 * Hash: 0xBF966536FA8B6879 | ApiSet: undefined
 */
export function getEntityRoll(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityRoll(_entity);
}
/**
 * Hash: 0xE09CAF86C32CB48F | ApiSet: undefined
 */
export function getEntityRotation(entity, rotationOrder) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntityRotation(_entity, rotationOrder));
}
/**
 * ```
 * Result is in meters per second (m/s)
 * ```
 * Hash: 0xFB6BA510A533DF81 | ApiSet: undefined
 */
export function getEntitySpeed(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntitySpeed(_entity);
}
/**
 * Hash: 0xE12F56CB25D9CE23 | ApiSet: undefined
 */
export function getEntityThreatTier(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityThreatTier(_entity);
}
/**
 * Hash: 0xF2DB09816A419DC5 | ApiSet: undefined
 */
export function getEntitySpeedVector(entity, relative) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntitySpeedVector(_entity, relative));
}
/**
 * ```
 * Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
 * ```
 * Hash: 0x97F696ACA466B4E0 | ApiSet: undefined
 */
export function getEntityType(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityType(_entity);
}
/**
 * ```
 * Get how much of the entity is submerged.  1.0f is whole entity.
 * ```
 * Hash: 0x4A77C3F73FD9E831 | ApiSet: undefined
 */
export function getEntitySubmergedLevel(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntitySubmergedLevel(_entity);
}
/**
 * Hash: 0x4805D2B1D8CF94A9 | ApiSet: undefined
 */
export function getEntityVelocity(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetEntityVelocity(_entity, p1));
}
/**
 * Hash: 0x56398BE65160C3BE | ApiSet: undefined
 */
export function getEntityUprightValue(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityUprightValue(_entity);
}
/**
 * Hash: 0xF3FDA9A617A15145 | ApiSet: undefined
 */
export function getEntityWorldPositionOfDimensions(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const result = GetEntityWorldPositionOfDimensions(_entity);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4])];
}
/**
 * Hash: 0xC346A546612C49A9 | ApiSet: undefined
 */
export function getIsBird(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetIsBird(_entity);
}
/**
 * Hash: 0x5594AFE9DE0C01B7 | ApiSet: undefined
 */
export function getIsPredator(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetIsPredator(_entity);
}
/**
 * Hash: 0x9A100F1CF4546629 | ApiSet: undefined
 */
export function getIsAnimal(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetIsAnimal(_entity);
}
/**
 * Hash: 0x6888A43C35A5F630 | ApiSet: undefined
 */
export function getNearestParticipantToEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetNearestParticipantToEntity(_entity);
}
/**
 * Hash: 0x255B6DB4E3AD3C3E | ApiSet: undefined
 */
export function getIsCarriablePelt(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetIsCarriablePelt(_entity);
}
/**
 * Hash: 0x990E294FC387FB88 | ApiSet: undefined
 */
export function getNearestPlayerToEntity(entity, playerPedToIgnore, flags) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _playerPedToIgnore = playerPedToIgnore instanceof Ped ? playerPedToIgnore.handle() : playerPedToIgnore;
    return GetNearestPlayerToEntity(_entity, _playerPedToIgnore, flags);
}
/**
 * Hash: 0xB2C30C3B4AFF718C | ApiSet: undefined
 */
export function getNearestPlayerToEntityOnTeam(entity, team, playerPedToIgnore, flags) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _playerPedToIgnore = playerPedToIgnore instanceof Ped ? playerPedToIgnore.handle() : playerPedToIgnore;
    return GetNearestPlayerToEntityOnTeam(_entity, team, _playerPedToIgnore, flags);
}
/**
 * Hash: 0x84CCF9A12942C83D | ApiSet: undefined
 */
export function getMatchingEntities(volume, itemSet, entityType, p3, p4, p5) {
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    return GetMatchingEntities(volume, itemSet, entityType, p3, p4, p5);
}
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x280BBE5601EAA983 | ApiSet: undefined
 */
export function getObjectIndexFromEntityIndex(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetObjectIndexFromEntityIndex(_entity);
}
/**
 * Hash: 0x497C6B1A2C9AE69C | ApiSet: undefined
 */
export function getOffsetFromEntityGivenWorldCoords(entity, posX, posY, posZ) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetOffsetFromEntityGivenWorldCoords(_entity, posX, posY, posZ));
}
/**
 * ```
 * Offset values are relative to the entity.
 * x = left/right
 * y = forward/backward
 * z = up/down
 * ```
 * Hash: 0x1899F328B0E12848 | ApiSet: undefined
 */
export function getOffsetFromEntityInWorldCoords(entity, offsetX, offsetY, offsetZ) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetOffsetFromEntityInWorldCoords(_entity, offsetX, offsetY, offsetZ));
}
/**
 * ```
 * Valid indices: 0 - 3
 * Index 1 always returns a `hogtied` config, doesn't matter the entity.
 * It's for humans only and the ped must be resurrected first if it's dead.
 * ```
 * Hash: 0x34F008A7E48C496B | ApiSet: undefined
 */
export function getOptimalCarryConfig(entity, index) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetOptimalCarryConfig(_entity, index);
}
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x0F16D042BD640EA3 | ApiSet: undefined
 */
export function getPedIndexFromEntityIndex(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetPedIndexFromEntityIndex(_entity);
}
/**
 * ```
 * Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
 * Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
 * ```
 * Hash: 0x964000D355219FC0 | ApiSet: undefined
 */
export function getPedAnimalType(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedAnimalType(_ped);
}
/**
 * ```
 * Returns false if entity is not a ped or object.
 * ```
 * Hash: 0x1E804EA9B12030A4 | ApiSet: undefined
 */
export function getScriptOverrideEntityLootTablePermanent(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetScriptOverrideEntityLootTablePermanent(_entity);
}
/**
 * Hash: 0x4735E2A4BB83D9DA | ApiSet: undefined
 */
export function getPinnedMapEntity(p0) {
    return GetPinnedMapEntity(p0);
}
/**
 * ```
 * Returns the coordinates of an entity-bone.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 * ```
 * Hash: 0x82CFA50E34681CA5 | ApiSet: undefined
 */
export function getWorldPositionOfEntityBone(entity, boneIndex) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(GetWorldPositionOfEntityBone(_entity, boneIndex));
}
/**
 * Hash: 0xBEB1600952B9CF5C | ApiSet: undefined
 */
export function hasCollisionLoadedAroundEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasCollisionLoadedAroundEntity(_entity);
}
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0xDF1E5AAC561AFC59 | ApiSet: undefined
 */
export function getVehicleIndexFromEntityIndex(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetVehicleIndexFromEntityIndex(_entity);
}
/**
 * Hash: 0x5851CC48405F4A07 | ApiSet: undefined
 */
export function hasAnimEventFired(entity, actionHash) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof actionHash === 'string')
        actionHash = this.getHashKey(actionHash);
    return HasAnimEventFired(_entity, actionHash);
}
/**
 * Hash: 0x6BFBDC46139C45AB | ApiSet: undefined
 */
export function hasCollisionLoadedAroundPosition(xPos, yPos, zPos) {
    return HasCollisionLoadedAroundPosition(xPos, yPos, zPos);
}
/**
 * Hash: 0xAEB40615337EF1E3 | ApiSet: undefined
 */
export function hasEntityAnimFinished(entity, animDict, animName, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityAnimFinished(_entity, animDict, animName, p3);
}
/**
 * Hash: 0x9934E9C42D52D87E | ApiSet: undefined
 */
export function hasEntityBeenDamagedByAnyPed(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityBeenDamagedByAnyPed(_entity);
}
/**
 * Hash: 0x73BB763880CD23A6 | ApiSet: undefined
 */
export function hasEntityBeenDamagedByAnyObject(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityBeenDamagedByAnyObject(_entity);
}
/**
 * Hash: 0x695D7C26DE65C423 | ApiSet: undefined
 */
export function hasEntityBeenDamagedByAnyVehicle(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityBeenDamagedByAnyVehicle(_entity);
}
/**
 * Hash: 0x7B6E7BEC1143AC86 | ApiSet: undefined
 */
export function hasEntityBeenDamagedByEntity(entity1, entity2, p2, p3) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    return HasEntityBeenDamagedByEntity(_entity1, _entity2, p2, p3);
}
/**
 * Hash: 0xFCDFF7B72D23A1AC | ApiSet: undefined
 */
export function hasEntityClearLosToEntity(entity1, entity2, traceType) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    return HasEntityClearLosToEntity(_entity1, _entity2, traceType);
}
/**
 * Hash: 0x0C9DBF48C6BA6E4C | ApiSet: undefined
 */
export function hasEntityClearLosToCoord(entity, position, flags) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityClearLosToCoord(_entity, position.x, position.y, position.z, flags);
}
/**
 * ```
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 * ```
 * Hash: 0xE88F19660651D566 | ApiSet: undefined
 */
export function hasEntityClearLosToEntityInFront(entity1, entity2, traceType) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    return HasEntityClearLosToEntityInFront(_entity1, _entity2, traceType);
}
/**
 * Hash: 0xDF18751EC74F90FF | ApiSet: undefined
 */
export function hasEntityCollidedWithAnything(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return HasEntityCollidedWithAnything(_entity);
}
/**
 * Hash: 0x27CFF3E5A286D3DF | ApiSet: undefined
 */
export function isAnEntity(handle) {
    return IsAnEntity(handle);
}
/**
 * Hash: 0x138190F64DB4BBD1 | ApiSet: undefined
 */
export function isEntityAMissionEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAMissionEntity(_entity);
}
/**
 * Hash: 0x5AFFA9DDC87846F8 | ApiSet: undefined
 */
export function isCarriableModel(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsCarriableModel(model);
}
/**
 * Hash: 0xC3D96AF45FCCEC4C | ApiSet: undefined
 */
export function isEntityAVehicle(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAVehicle(_entity);
}
/**
 * Hash: 0xCF8176912DDA4EA5 | ApiSet: undefined
 */
export function isEntityAPed(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAPed(_entity);
}
/**
 * ```
 * Checks if entity is within x/y/zSize distance of x/y/z.
 * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
 * ```
 * Hash: 0x5E58342602E94718 | ApiSet: undefined
 */
export function isEntityAtCoord(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAtCoord(_entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9);
}
/**
 * Hash: 0x0A27A546A375FDEF | ApiSet: undefined
 */
export function isEntityAnObject(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAnObject(_entity);
}
/**
 * Hash: 0xEE6AD63ABF59C0B7 | ApiSet: undefined
 */
export function isEntityAttached(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAttached(_entity);
}
/**
 * ```
 * Checks if entity1 is within the box defined by x/y/zSize of entity2.
 * Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
 * ```
 * Hash: 0xC057F02B837A27F6 | ApiSet: undefined
 */
export function isEntityAtEntity(entity1, entity2, xSize, ySize, zSize, p5, p6, p7) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    return IsEntityAtEntity(_entity1, _entity2, xSize, ySize, zSize, p5, p6, p7);
}
/**
 * Hash: 0x306C1F6178F01AB3 | ApiSet: undefined
 */
export function isEntityAttachedToAnyObject(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAttachedToAnyObject(_entity);
}
/**
 * Hash: 0xC841153DED2CA89A | ApiSet: undefined
 */
export function isEntityAttachedToAnyPed(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAttachedToAnyPed(_entity);
}
/**
 * Hash: 0x12DF6E0D2E736749 | ApiSet: undefined
 */
export function isEntityAttachedToAnyVehicle(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAttachedToAnyVehicle(_entity);
}
/**
 * Hash: 0x154A3C529497053E | ApiSet: undefined
 */
export function isEntityAttachedToEntity(from, to) {
    const _from = from instanceof Entity ? from.handle() : from;
    const _to = to instanceof Entity ? to.handle() : to;
    return IsEntityAttachedToEntity(_from, _to);
}
/**
 * Hash: 0x7D5B1F88E7504BBA | ApiSet: undefined
 */
export function isEntityDead(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityDead(_entity);
}
/**
 * Hash: 0x8DE41E9902E85756 | ApiSet: undefined
 */
export function isEntityFullyLooted(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityFullyLooted(_entity);
}
/**
 * ```
 * Getter for FREEZE_ENTITY_POSITION
 * ```
 * Hash: 0x083D497D57B7400F | ApiSet: undefined
 */
export function isEntityFrozen(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityFrozen(_entity);
}
/**
 * Hash: 0x886E37EC497200B6 | ApiSet: undefined
 */
export function isEntityInAir(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityInAir(_entity, p1);
}
/**
 * ```
 * Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
 * Angle is measured in degrees.
 * ```
 * Hash: 0xD3151E53134595E5 | ApiSet: undefined
 */
export function isEntityInAngledArea(entity, originX, originY, originZ, edgeX, edgeY, edgeZ, angle, p8, p9, p10) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityInAngledArea(_entity, originX, originY, originZ, edgeX, edgeY, edgeZ, angle, p8, p9, p10);
}
/**
 * Hash: 0x0C2634C40A16193E | ApiSet: undefined
 */
export function isEntityInArea(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityInArea(_entity, x1, y1, z1, x2, y2, z2, p7, p8, p9);
}
/**
 * Hash: 0x5A5526BC09C06623 | ApiSet: undefined
 */
export function isEntityInVolume(entity, volume, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityInVolume(_entity, volume, p2, p3);
}
/**
 * Hash: 0xDDE5C125AC446723 | ApiSet: undefined
 */
export function isEntityInWater(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityInWater(_entity);
}
/**
 * Hash: 0x613C15D5D8DB781F | ApiSet: undefined
 */
export function isEntityOnScreen(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityOnScreen(_entity);
}
/**
 * Hash: 0xA7E51B53309EAC97 | ApiSet: undefined
 */
export function isEntityOwnedByPersistenceSystem(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityOwnedByPersistenceSystem(_entity);
}
/**
 * Hash: 0x140188E884645624 | ApiSet: undefined
 */
export function isEntityOccluded(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityOccluded(_entity);
}
/**
 * Hash: 0x857ACB0AB4BD0D55 | ApiSet: undefined
 */
export function isEntityOnTrainTrack(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityOnTrainTrack(_entity);
}
/**
 * ```
 * Params: p1 (probably animType) = 1, 0
 * ```
 * Hash: 0x0B7CB1300CBFE19C | ApiSet: undefined
 */
export function isEntityPlayingAnyAnim(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityPlayingAnyAnim(_entity, p1);
}
/**
 * Hash: 0xDEE49D5CA6C49148 | ApiSet: undefined
 */
export function isEntityPlayingAnim(entity, animDict, animName, animType) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityPlayingAnim(_entity, animDict, animName, animType);
}
/**
 * Hash: 0x86468ADFA0F6B861 | ApiSet: undefined
 */
export function isEntityStatic(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityStatic(_entity);
}
/**
 * Hash: 0x9A2304A64C3C8423 | ApiSet: undefined
 */
export function isEntityTouchingEntity(entity, targetEntity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    return IsEntityTouchingEntity(_entity, _targetEntity);
}
/**
 * Hash: 0x2AE3EBC8DEB9768B | ApiSet: undefined
 */
export function isEntityTouchingModel(entity, modelHash) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return IsEntityTouchingModel(_entity, modelHash);
}
/**
 * Hash: 0xD4E5C1E93C466127 | ApiSet: undefined
 */
export function isEntityUnderwater(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityUnderwater(_entity, p1);
}
/**
 * Hash: 0xFFC96ECB7FA404CA | ApiSet: undefined
 */
export function isEntityVisible(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityVisible(_entity);
}
/**
 * Hash: 0xF6F6AFD8D4FB2658 | ApiSet: undefined
 */
export function isEntityUpright(entity, angle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityUpright(_entity, angle);
}
/**
 * Hash: 0x5E1CC2E8DC3111DD | ApiSet: undefined
 */
export function isEntityWaitingForWorldCollision(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityWaitingForWorldCollision(_entity);
}
/**
 * Hash: 0x109DE3DA41AAD94A | ApiSet: undefined
 */
export function isEntityUpsidedown(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityUpsidedown(_entity);
}
/**
 * Hash: 0x1FF441D7954F8709 | ApiSet: undefined
 */
export function isMapEntityPinned(p0) {
    return IsMapEntityPinned(p0);
}
/**
 * Hash: 0xF213C724E77F321A | ApiSet: undefined
 */
export function isEntityVisibleToScript(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityVisibleToScript(_entity);
}
/**
 * Hash: 0x002AAC783ED323ED | ApiSet: undefined
 */
export function _0x002AAC783ED323ED(p0, p1) {
    Citizen.invokeNative('0x002AAC783ED323ED', p0, p1);
}
/**
 * Hash: 0xC8CCDB712FBCBA92 | ApiSet: undefined
 */
export function isTrackedEntityVisible(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsTrackedEntityVisible(_entity);
}
/**
 * Hash: 0x007AAC783ED323ED | ApiSet: undefined
 */
export function _0x007AAC783ED323ED(p0, p1, p2) {
    Citizen.invokeNative('0x007AAC783ED323ED', p0, p1, p2);
}
/**
 * Hash: 0x0939E773925C4719 | ApiSet: undefined
 */
export function _0x0939E773925C4719() {
    Citizen.invokeNative('0x0939E773925C4719');
}
/**
 * Hash: 0x0CCEFC6C2C95DA2A | ApiSet: undefined
 */
export function _0x0CCEFC6C2C95DA2A(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x0CCEFC6C2C95DA2A', p0, p1, p2, p3);
}
/**
 * Hash: 0x0FD7D7C232876E72 | ApiSet: undefined
 */
export function _0x0FD7D7C232876E72(p0) {
    Citizen.invokeNative('0x0FD7D7C232876E72', p0);
}
/**
 * Hash: 0x0DB41D59E0F1502B | ApiSet: undefined
 */
export function _0x0DB41D59E0F1502B(p0) {
    Citizen.invokeNative('0x0DB41D59E0F1502B', p0);
}
/**
 * Hash: 0x119A5714578F4E05 | ApiSet: undefined
 */
export function _0x119A5714578F4E05(p0, p1) {
    Citizen.invokeNative('0x119A5714578F4E05', p0, p1);
}
/**
 * Hash: 0x120376C23F019C6C | ApiSet: undefined
 */
export function _0x120376C23F019C6C(p0, p1) {
    return Citizen.invokeNative('0x120376C23F019C6C', p0, p1);
}
/**
 * Hash: 0x188736456D1DEDE6 | ApiSet: undefined
 */
export function _0x188736456D1DEDE6(p0, p1) {
    return Citizen.invokeNative('0x188736456D1DEDE6', p0, p1);
}
/**
 * Hash: 0x16908E859C3AB698 | ApiSet: undefined
 */
export function _0x16908E859C3AB698(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x16908E859C3AB698', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x20FAEE47427A4497 | ApiSet: undefined
 */
export function _0x20FAEE47427A4497() {
    Citizen.invokeNative('0x20FAEE47427A4497');
}
/**
 * Hash: 0x2A77EF9BEC8518F4 | ApiSet: undefined
 */
export function _0x2A77EF9BEC8518F4(p0) {
    return Citizen.invokeNative('0x2A77EF9BEC8518F4', p0);
}
/**
 * Hash: 0x2D40BCBFE9305DEA | ApiSet: undefined
 */
export function _0x2D40BCBFE9305DEA(p0, p1) {
    Citizen.invokeNative('0x2D40BCBFE9305DEA', p0, p1);
}
/**
 * ```
 * Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x371D179701D9C082 | ApiSet: undefined
 */
export function _0x371D179701D9C082(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x371D179701D9C082', _entity);
}
/**
 * Hash: 0x37CEB637BA3B1A47 | ApiSet: undefined
 */
export function _0x37CEB637BA3B1A47(p0) {
    Citizen.invokeNative('0x37CEB637BA3B1A47', p0);
}
/**
 * Hash: 0x350E9211074955AF | ApiSet: undefined
 */
export function _0x350E9211074955AF(p0, p1) {
    return Citizen.invokeNative('0x350E9211074955AF', p0, p1);
}
/**
 * Hash: 0x3AB3A77672F6473F | ApiSet: undefined
 */
export function _0x3AB3A77672F6473F(p0, p1, p2, p3) {
    return new Vector3(Citizen.invokeNative('0x3AB3A77672F6473F', p0, p1, p2, p3));
}
/**
 * ```
 * Seems to return true if entity is burned / scorched
 * _GET_ENTITY_*
 * ```
 * Hash: 0x37B01666BAE8F7EF | ApiSet: undefined
 */
export function _0x37B01666BAE8F7EF(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x37B01666BAE8F7EF', _entity);
}
/**
 * Hash: 0x3F08C6163A4AB1D6 | ApiSet: undefined
 */
export function _0x3F08C6163A4AB1D6(p0) {
    Citizen.invokeNative('0x3F08C6163A4AB1D6', p0);
}
/**
 * ```
 * Used when checking if ped is in water
 * ```
 * Hash: 0x383F64263F946E45 | ApiSet: undefined
 */
export function _0x383F64263F946E45(entity, p2, ped, p4, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x383F64263F946E45', _entity, p2, _ped, p4, p5);
}
/**
 * Hash: 0x445D7D8EA66E373E | ApiSet: undefined
 */
export function _0x445D7D8EA66E373E(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
    Citizen.invokeNative('0x445D7D8EA66E373E', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
}
/**
 * ```
 * Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
 * ```
 * Hash: 0x3EC28DA1FFAC9DDD | ApiSet: undefined
 */
export function _0x3EC28DA1FFAC9DDD(entity1, entity2, p2, p3) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    return Citizen.invokeNative('0x3EC28DA1FFAC9DDD', _entity1, _entity2, p2, p3);
}
/**
 * Hash: 0x56E0735D6273B227 | ApiSet: undefined
 */
export function _0x56E0735D6273B227(p0, p1) {
    Citizen.invokeNative('0x56E0735D6273B227', p0, p1);
}
/**
 * ```
 * _REMOVE_DECALS_* - _REMOVE_FORCED*
 * ```
 * Hash: 0x5826EFD6D73C4DE5 | ApiSet: undefined
 */
export function _0x5826EFD6D73C4DE5(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x5826EFD6D73C4DE5', _entity);
}
/**
 * Hash: 0x5744562E973E33CD | ApiSet: undefined
 */
export function _0x5744562E973E33CD(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0x5744562E973E33CD', p0, p1, p2, p3, p4);
}
/**
 * ```
 * Attaches scenario to bone with an offset
 * _GET_I* - _GET_M*
 * ```
 * Hash: 0x5E214112806591EA | ApiSet: undefined
 */
export function _0x5E214112806591EA(entity, boneIndex) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return new Vector3(Citizen.invokeNative('0x5E214112806591EA', _entity, boneIndex));
}
/**
 * Hash: 0x6D58167F62238284 | ApiSet: undefined
 */
export function _0x6D58167F62238284(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return Citizen.invokeNative('0x6D58167F62238284', _vehicle);
}
/**
 * Hash: 0x7A49D40DE437BC8D | ApiSet: undefined
 */
export function _0x7A49D40DE437BC8D(p0, p1) {
    Citizen.invokeNative('0x7A49D40DE437BC8D', p0, p1);
}
/**
 * Hash: 0x582F73ACFE969571 | ApiSet: undefined
 */
export function _0x582F73ACFE969571(p0, p1, p2) {
    return Citizen.invokeNative('0x582F73ACFE969571', p0, p1, p2);
}
/**
 * Hash: 0x669655FFB29EF1A9 | ApiSet: undefined
 */
export function _0x669655FFB29EF1A9(p0, p1, p2, p3) {
    Citizen.invokeNative('0x669655FFB29EF1A9', p0, p1, p2, p3);
}
/**
 * Hash: 0x6C31B06E91518269 | ApiSet: undefined
 */
export function _0x6C31B06E91518269(p0, p1) {
    Citizen.invokeNative('0x6C31B06E91518269', p0, p1);
}
/**
 * Hash: 0x80FDEB3A9E9AA578 | ApiSet: undefined
 */
export function _0x80FDEB3A9E9AA578(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x80FDEB3A9E9AA578', _entity, p1);
}
/**
 * Hash: 0x7F20092547B4DDEA | ApiSet: undefined
 */
export function _0x7F20092547B4DDEA(p0) {
    Citizen.invokeNative('0x7F20092547B4DDEA', p0);
}
/**
 * Hash: 0x898586729DB5221D | ApiSet: undefined
 */
export function _0x898586729DB5221D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x898586729DB5221D', _ped);
}
/**
 * Hash: 0x8E10DF0FFA63FB65 | ApiSet: undefined
 */
export function _0x8E10DF0FFA63FB65(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0x8E10DF0FFA63FB65', p0, p1, p2, p3, p4);
}
/**
 * ```
 * Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
 * _GET_ENTITY_*
 * ```
 * Hash: 0x8E46E18AA828334F | ApiSet: undefined
 */
export function _0x8E46E18AA828334F(entity, animDict, animClip) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x8E46E18AA828334F', _entity, animDict, animClip);
}
/**
 * Hash: 0x978AA2323ED32209 | ApiSet: undefined
 */
export function _0x978AA2323ED32209(p0, p1) {
    Citizen.invokeNative('0x978AA2323ED32209', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x9C6906EF8CB20C5F | ApiSet: undefined
 */
export function _0x9C6906EF8CB20C5F(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x9C6906EF8CB20C5F', _entity);
}
/**
 * Hash: 0xA48E4801DEBDF7E4 | ApiSet: undefined
 */
export function _0xA48E4801DEBDF7E4(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xA48E4801DEBDF7E4', _entity, p1);
}
/**
 * Hash: 0xA9E6D8F2DDFC4DB9 | ApiSet: undefined
 */
export function _0xA9E6D8F2DDFC4DB9(p0, p1) {
    Citizen.invokeNative('0xA9E6D8F2DDFC4DB9', p0, p1);
}
/**
 * Hash: 0xAAACB74442C1BED3 | ApiSet: undefined
 */
export function _0xAAACB74442C1BED3(p0) {
    return Citizen.invokeNative('0xAAACB74442C1BED3', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xAF72EC7E1B54539B | ApiSet: undefined
 */
export function _0xAF72EC7E1B54539B(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0xAF72EC7E1B54539B', _entity);
}
/**
 * ```
 * SET_ENTITY_LO*
 * ```
 * Hash: 0xAF7F3099B9FEB535 | ApiSet: undefined
 */
export function _0xAF7F3099B9FEB535(entity, p1, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xAF7F3099B9FEB535', _entity, p1, p2, p3);
}
/**
 * Hash: 0xB16C780C51E51E2B | ApiSet: undefined
 */
export function _0xB16C780C51E51E2B(p0) {
    return Citizen.invokeNative('0xB16C780C51E51E2B', p0);
}
/**
 * Hash: 0xB38A29CCD5447783 | ApiSet: undefined
 */
export function _0xB38A29CCD5447783(p0, p1, p2) {
    Citizen.invokeNative('0xB38A29CCD5447783', p0, p1, p2);
}
/**
 * Hash: 0xBA2A089E60ED1163 | ApiSet: undefined
 */
export function _0xBA2A089E60ED1163(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0xBA2A089E60ED1163', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xC2E71D7E0A7B4C89 | ApiSet: undefined
 */
export function _0xC2E71D7E0A7B4C89(p0) {
    return Citizen.invokeNative('0xC2E71D7E0A7B4C89', p0);
}
/**
 * Hash: 0xBD94CECFB2D65119 | ApiSet: undefined
 */
export function _0xBD94CECFB2D65119(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xBD94CECFB2D65119', p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * SET_ENTITY_A*
 * ```
 * Hash: 0xC0EDEF16D90661EE | ApiSet: undefined
 */
export function _0xC0EDEF16D90661EE(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xC0EDEF16D90661EE', _entity, p1);
}
/**
 * ```
 * Returns BOOL in ida
 * ```
 * Hash: 0xC3ABCFBC7D74AFA5 | ApiSet: undefined
 */
export function _0xC3ABCFBC7D74AFA5(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC3ABCFBC7D74AFA5', _ped, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xC6A1A3D63F122DE7 | ApiSet: undefined
 */
export function _0xC6A1A3D63F122DE7(p0, p1) {
    Citizen.invokeNative('0xC6A1A3D63F122DE7', p0, p1);
}
/**
 * Hash: 0xC76E94A78127412B | ApiSet: undefined
 */
export function _0xC76E94A78127412B(p0, p1, p2) {
    Citizen.invokeNative('0xC76E94A78127412B', p0, p1, p2);
}
/**
 * Hash: 0xCDB682BB47C02F0A | ApiSet: undefined
 */
export function _0xCDB682BB47C02F0A(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xCDB682BB47C02F0A', _entity, p1);
}
/**
 * Hash: 0xD21C7418C590BB40 | ApiSet: undefined
 */
export function _0xD21C7418C590BB40(p0) {
    return Citizen.invokeNative('0xD21C7418C590BB40', p0);
}
/**
 * Hash: 0xD45BB89B53FC0CFD | ApiSet: undefined
 */
export function _0xD45BB89B53FC0CFD(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0xD45BB89B53FC0CFD', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xD46BF94C4C66FAB0 | ApiSet: undefined
 */
export function _0xD46BF94C4C66FAB0(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xD46BF94C4C66FAB0', p0, p1, p2, p3);
}
/**
 * Hash: 0xD4636C2EDB0DEA8A | ApiSet: undefined
 */
export function _0xD4636C2EDB0DEA8A(p0) {
    return Citizen.invokeNative('0xD4636C2EDB0DEA8A', p0);
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * Hash: 0xDF8E49EA89A01DB1 | ApiSet: undefined
 */
export function _0xDF8E49EA89A01DB1(p0, p1, p2) {
    return Citizen.invokeNative('0xDF8E49EA89A01DB1', p0, p1, p2);
}
/**
 * Hash: 0xDD03FC2089AD093C | ApiSet: undefined
 */
export function _0xDD03FC2089AD093C(p0, p1, p2, p3) {
    Citizen.invokeNative('0xDD03FC2089AD093C', p0, p1, p2, p3);
}
/**
 * Hash: 0xE19035EB65AB2932 | ApiSet: undefined
 */
export function _0xE19035EB65AB2932(p0, p1) {
    Citizen.invokeNative('0xE19035EB65AB2932', p0, p1);
}
/**
 * Hash: 0xDFC2B226D56D85F6 | ApiSet: undefined
 */
export function _0xDFC2B226D56D85F6(p0, p1) {
    return Citizen.invokeNative('0xDFC2B226D56D85F6', p0, p1);
}
/**
 * Hash: 0xE31FC20319874CB3 | ApiSet: undefined
 */
export function _0xE31FC20319874CB3(p0, p1, p2) {
    return Citizen.invokeNative('0xE31FC20319874CB3', p0, p1, p2);
}
/**
 * Hash: 0xE9E7A0BAC7F57746 | ApiSet: undefined
 */
export function _0xE9E7A0BAC7F57746(p0, p1) {
    Citizen.invokeNative('0xE9E7A0BAC7F57746', p0, p1);
}
/**
 * Hash: 0xE75EEA8DB59A9F39 | ApiSet: undefined
 */
export function _0xE75EEA8DB59A9F39(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xE75EEA8DB59A9F39', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xEAB3D91D30A344F1 | ApiSet: undefined
 */
export function _0xEAB3D91D30A344F1(p0) {
    Citizen.invokeNative('0xEAB3D91D30A344F1', p0);
}
/**
 * Hash: 0xEF259AA1E097E0AD | ApiSet: undefined
 */
export function _0xEF259AA1E097E0AD(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xEF259AA1E097E0AD', _entity, p1);
}
/**
 * Hash: 0xF41E2979D5BC5370 | ApiSet: undefined
 */
export function _0xF41E2979D5BC5370(p0) {
    Citizen.invokeNative('0xF41E2979D5BC5370', p0);
}
/**
 * Hash: 0xEF2D9ED7CE684F08 | ApiSet: undefined
 */
export function _0xEF2D9ED7CE684F08(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xEF2D9ED7CE684F08', _ped);
}
/**
 * Hash: 0xF59FDE7B4D31A630 | ApiSet: undefined
 */
export function _0xF59FDE7B4D31A630(p0) {
    return Citizen.invokeNative('0xF59FDE7B4D31A630', p0);
}
/**
 * Hash: 0xFF83AF534156B399 | ApiSet: undefined
 */
export function _0xFF83AF534156B399(p0, p1) {
    Citizen.invokeNative('0xFF83AF534156B399', p0, p1);
}
/**
 * ```
 * SET_ENTITY_LO*
 * ```
 * Hash: 0xFF9965C47FA404DA | ApiSet: undefined
 */
export function _0xFF9965C47FA404DA(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xFF9965C47FA404DA', _entity, toggle);
}
/**
 * Hash: 0x36EB4D34D4A092C5 | ApiSet: undefined
 */
export function pauseEntityTracking(entity, pause) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    PauseEntityTracking(_entity, pause);
}
/**
 * Hash: 0x6F3068258A499E52 | ApiSet: undefined
 */
export function pinClosestMapEntity(modelHash, position, flags) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return PinClosestMapEntity(modelHash, position.x, position.y, position.z, flags);
}
/**
 * Hash: 0x9587913B9E772D29 | ApiSet: undefined
 */
export function placeEntityOnGroundProperly(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return PlaceEntityOnGroundProperly(_entity, p1);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 * ```
 * Hash: 0xDC6D22FAB76D4874 | ApiSet: undefined
 */
export function playEntityAnim(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return PlayEntityAnim(_entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset);
}
/**
 * Hash: 0x553FA683F2BCD814 | ApiSet: undefined
 */
export function removeForcedObject(p0, p1, p2, p3, p4) {
    RemoveForcedObject(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x3F38A98576F6213A | ApiSet: undefined
 */
export function removeModelHide(p0, p1, p2, p3, p4, p5) {
    RemoveModelHide(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xA88E215CEB0435C0 | ApiSet: undefined
 */
export function requestEntityLootList(mount, visiblelootslotrequestType, flag, p4, p5) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    if (typeof visiblelootslotrequestType === 'string')
        visiblelootslotrequestType = this.getHashKey(visiblelootslotrequestType);
    return RequestEntityLootList(_mount, visiblelootslotrequestType, flag, p4, p5);
}
/**
 * Hash: 0x824E1C26A14CB817 | ApiSet: undefined
 */
export function removeModelSwap(position, radius, originalModel, newModel, p6) {
    if (typeof originalModel === 'string')
        originalModel = this.getHashKey(originalModel);
    if (typeof newModel === 'string')
        newModel = this.getHashKey(newModel);
    RemoveModelSwap(position.x, position.y, position.z, radius, originalModel, newModel, p6);
}
/**
 * ```
 * Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
 * ```
 * Hash: 0x8C03CD6B5E0E85E8 | ApiSet: undefined
 */
export function scriptOverrideEntityLootTablePermanent(entity, lootTable) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof lootTable === 'string')
        lootTable = this.getHashKey(lootTable);
    return ScriptOverrideEntityLootTablePermanent(_entity, lootTable);
}
/**
 * Hash: 0x744B9EF44779D9AB | ApiSet: undefined
 */
export function resetEntityAlpha(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ResetEntityAlpha(_entity);
}
/**
 * ```
 * Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
 * ```
 * Hash: 0x66B2B83B94B22458 | ApiSet: undefined
 */
export function searchBuildingPoolForEntityWithThisModel(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return SearchBuildingPoolForEntityWithThisModel(modelHash);
}
/**
 * Hash: 0x80646744FA88F9D7 | ApiSet: undefined
 */
export function setCanAutoVaultOnEntity(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetCanAutoVaultOnEntity(_entity, toggle);
}
/**
 * Hash: 0x24AED2A608F93C4C | ApiSet: undefined
 */
export function setCanClimbOnEntity(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetCanClimbOnEntity(_entity, toggle);
}
/**
 * Hash: 0xACAD101E1FB66689 | ApiSet: undefined
 */
export function setEntityAlwaysPrerender(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAlwaysPrerender(_entity, toggle);
}
/**
 * ```
 * skin - everything alpha except skin
 * Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
 * ```
 * Hash: 0x0DF7692B1D9E7BA7 | ApiSet: undefined
 */
export function setEntityAlpha(entity, alphaLevel, skin) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAlpha(_entity, alphaLevel, skin);
}
/**
 * ```
 * https://gfycat.com/amazingmiserlyamericanquarterhorse
 * ```
 * Hash: 0x11CDABDC7783B2BC | ApiSet: undefined
 */
export function setEntityAnimCurrentTime(entity, animDict, animName, time) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAnimCurrentTime(_entity, animDict, animName, time);
}
/**
 * Hash: 0xEAA885BA3CEA4E4A | ApiSet: undefined
 */
export function setEntityAnimSpeed(entity, animDict, animName, speedMultiplier) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAnimSpeed(_entity, animDict, animName, speedMultiplier);
}
/**
 * ```
 * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
 * ```
 * Hash: 0xDC19C288082E586E | ApiSet: undefined
 */
export function setEntityAsMissionEntity(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAsMissionEntity(_entity, p1, p2);
}
/**
 * ```
 * Marks the specified entity (ped, vehicle or object) as no longer needed.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 * ```
 * Hash: 0x4971D2F8162B9674 | ApiSet: undefined
 */
export function setEntityAsNoLongerNeeded(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityAsNoLongerNeeded(_entity);
}
/**
 * Hash: 0x0EF1AFB18649E015 | ApiSet: undefined
 */
export function setEntityCanBeDamagedByRelationshipGroup(entity, bCanBeDamaged, relGroup) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof relGroup === 'string')
        relGroup = this.getHashKey(relGroup);
    SetEntityCanBeDamagedByRelationshipGroup(_entity, bCanBeDamaged, relGroup);
}
/**
 * ```
 * Changes type and quality of skins
 * type hashes: https://pastebin.com/C1WvQjCy
 * ```
 * Hash: 0x399657ED871B3A6C | ApiSet: undefined
 */
export function setEntityCarcassType(entity, type) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof type === 'string')
        type = this.getHashKey(type);
    SetEntityCarcassType(_entity, type);
}
/**
 * Hash: 0x0D06D522B90E861F | ApiSet: undefined
 */
export function setEntityCanBeDamaged(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCanBeDamaged(_entity, toggle);
}
/**
 * ```
 * Sets whether the entity can be targeted without being in line-of-sight.
 * ```
 * Hash: 0x6D09F32E284D0FB7 | ApiSet: undefined
 */
export function setEntityCanBeTargetedWithoutLos(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCanBeTargetedWithoutLos(_entity, toggle);
}
/**
 * ```
 * flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
 * enum eCarryingFlag
 * {
 * CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
 * CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
 * CARRYING_FLAG_CAN_BE_DROPPED = 4,
 * CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
 * CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
 * CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
 * CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
 * CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
 * CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
 * CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
 * CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
 * CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
 * CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
 * };
 * ```
 * Hash: 0x18FF3110CF47115D | ApiSet: undefined
 */
export function setEntityCarryingFlag(entity, flagId, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCarryingFlag(_entity, flagId, value);
}
/**
 * Hash: 0xF66F820909453B8C | ApiSet: undefined
 */
export function setEntityCollision(entity, toggle, keepPhysics) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCollision(_entity, toggle, keepPhysics);
}
/**
 * Hash: 0x203BEFFDBE12E96A | ApiSet: undefined
 */
export function setEntityCoordsAndHeading(entity, xPos, yPos, zPos, heading, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCoordsAndHeading(_entity, xPos, yPos, zPos, heading, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0xE0580EC84813875A | ApiSet: undefined
 */
export function setEntityCompletelyDisableCollision(entity, toggle, keepPhysics) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCompletelyDisableCollision(_entity, toggle, keepPhysics);
}
/**
 * ```
 * Axis - Invert Axis Flags
 * ```
 * Hash: 0x239A3351AC1DA385 | ApiSet: undefined
 */
export function setEntityCoordsNoOffset(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCoordsNoOffset(_entity, xPos, yPos, zPos, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0x06843DA7060A026B | ApiSet: undefined
 */
export function setEntityCoords(entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCoords(_entity, xPos, yPos, zPos, xAxis, yAxis, zAxis, clearArea);
}
/**
 * Hash: 0x0918E3565C20F03C | ApiSet: undefined
 */
export function setEntityCoordsAndHeadingNoOffset(entity, xPos, yPos, zPos, heading, p5, p6) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCoordsAndHeadingNoOffset(_entity, xPos, yPos, zPos, heading, p5, p6);
}
/**
 * Hash: 0xFBFC4473F66CE344 | ApiSet: undefined
 */
export function setEntityDynamic(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityDynamic(_entity, toggle);
}
/**
 * Hash: 0x482D17E45665DA44 | ApiSet: undefined
 */
export function setEntityCustomPickupRadius(entity, radius) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityCustomPickupRadius(_entity, radius);
}
/**
 * Hash: 0x6BCF5F3D8FFE988D | ApiSet: undefined
 */
export function setEntityFullyLooted(entity, looted) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityFullyLooted(_entity, looted);
}
/**
 * Hash: 0xA91E6CF94404E8C9 | ApiSet: undefined
 */
export function setEntityFadeIn(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityFadeIn(_entity);
}
/**
 * Hash: 0xCF2B9C0645C4651B | ApiSet: undefined
 */
export function setEntityHeading(entity, heading) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityHeading(_entity, heading);
}
/**
 * Hash: 0x0CEDB728A1083FA7 | ApiSet: undefined
 */
export function setEntityHasGravity(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityHasGravity(_entity, toggle);
}
/**
 * ```
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
 * ```
 * Hash: 0xA5C38736C426FCB8 | ApiSet: undefined
 */
export function setEntityInvincible(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityInvincible(_entity, toggle);
}
/**
 * ```
 * Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
 * ```
 * Hash: 0xAC2767ED8BDFAB15 | ApiSet: undefined
 */
export function setEntityHealth(entity, healthAmount, entityKilledBy) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _entityKilledBy = entityKilledBy instanceof Entity ? entityKilledBy.handle() : entityKilledBy;
    SetEntityHealth(_entity, healthAmount, _entityKilledBy);
}
/**
 * Hash: 0x0A5D170C44CB2189 | ApiSet: undefined
 */
export function setEntityIsTargetPriority(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityIsTargetPriority(_entity, p1, p2);
}
/**
 * Hash: 0xEBDC12861D079ABA | ApiSet: undefined
 */
export function setEntityLightsEnabled(entity, enabled) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityLightsEnabled(_entity, enabled);
}
/**
 * ```
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 * ```
 * Hash: 0x5FB407F0A7C877BF | ApiSet: undefined
 */
export function setEntityLodDist(entity, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityLodDist(_entity, value);
}
/**
 * Hash: 0x9B9EE31AED48072E | ApiSet: undefined
 */
export function setEntityLoadCollisionFlag(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityLoadCollisionFlag(_entity, toggle);
}
/**
 * Hash: 0x166E7CF68597D8B5 | ApiSet: undefined
 */
export function setEntityMaxHealth(entity, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityMaxHealth(_entity, value);
}
/**
 * Hash: 0x516C6ABD18322B63 | ApiSet: undefined
 */
export function setEntityMotionBlur(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityMotionBlur(_entity, toggle);
}
/**
 * Hash: 0xE037BF068223C38D | ApiSet: undefined
 */
export function setEntityNoCollisionEntity(entity1, entity2, thisFrameOnly) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    SetEntityNoCollisionEntity(_entity1, _entity2, thisFrameOnly);
}
/**
 * Hash: 0xC64E597783BE9A1D | ApiSet: undefined
 */
export function setEntityNoweapondecals(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityNoweapondecals(_entity, toggle);
}
/**
 * Hash: 0x473598683095D430 | ApiSet: undefined
 */
export function setEntityOnlyDamagedByPlayer(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityOnlyDamagedByPlayer(_entity, toggle);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
 * BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
 * ```
 * Hash: 0xFAEE099C6F890BB8 | ApiSet: undefined
 */
export function setEntityProofs(entity, proofsBitset, specialFlag) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityProofs(_entity, proofsBitset, specialFlag);
}
/**
 * Hash: 0x6C1F6AA2F0ADD104 | ApiSet: undefined
 */
export function setEntityOnlyDamagedByRelationshipGroup(entity, p1, relationshipGroup) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof relationshipGroup === 'string')
        relationshipGroup = this.getHashKey(relationshipGroup);
    SetEntityOnlyDamagedByRelationshipGroup(_entity, p1, relationshipGroup);
}
/**
 * Hash: 0x100E7007D13E3687 | ApiSet: undefined
 */
export function setEntityQuaternion(entity, position, w) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityQuaternion(_entity, position.x, position.y, position.z, w);
}
/**
 * Hash: 0x85B8A7534E44BC23 | ApiSet: undefined
 */
export function setEntityRenderScorched(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityRenderScorched(_entity, toggle);
}
/**
 * Hash: 0x850C940EE3E7B8B5 | ApiSet: undefined
 */
export function setEntityRequiresMoreExpensiveRiverCheck(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityRequiresMoreExpensiveRiverCheck(_entity, toggle);
}
/**
 * Hash: 0x9CC8314DFEDE441E | ApiSet: undefined
 */
export function setEntityRotation(entity, pitch, roll, yaw, rotationOrder, p5) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityRotation(_entity, pitch, roll, yaw, rotationOrder, p5);
}
/**
 * Hash: 0x740CB4F3F602C9F4 | ApiSet: undefined
 */
export function setEntityShouldFreezeWaitingOnCollision(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityShouldFreezeWaitingOnCollision(_entity, toggle);
}
/**
 * ```
 * tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
 * ```
 * Hash: 0x4B436BAC8CBE9B07 | ApiSet: undefined
 */
export function setEntityThreatTier(entity, tier, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityThreatTier(_entity, tier, p2);
}
/**
 * ```
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 * ```
 * Hash: 0x1C99BB7B6E96D16F | ApiSet: undefined
 */
export function setEntityVelocity(entity, position) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityVelocity(_entity, position.x, position.y, position.z);
}
/**
 * Hash: 0x1794B4FCC84D812F | ApiSet: undefined
 */
export function setEntityVisible(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityVisible(_entity, toggle);
}
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x3AE22DEB5BA5A3E6 | ApiSet: undefined
 */
export function setObjectAsNoLongerNeeded() {
    return SetObjectAsNoLongerNeeded();
}
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x2595DD4236549CE3 | ApiSet: undefined
 */
export function setPedAsNoLongerNeeded() {
    return SetPedAsNoLongerNeeded();
}
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x629BFA74418D6239 | ApiSet: undefined
 */
export function setVehicleAsNoLongerNeeded() {
    return SetVehicleAsNoLongerNeeded();
}
/**
 * Hash: 0xD2B9C78537ED5759 | ApiSet: undefined
 */
export function unpinMapEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    UnpinMapEntity(_entity);
}
/**
 * Hash: 0x786591D986DE9159 | ApiSet: undefined
 */
export function stopEntityAnim(entity, animation, animGroup, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StopEntityAnim(_entity, animation, animGroup, p3);
}
/**
 * Hash: 0x3546FAB293FF2981 | ApiSet: undefined
 */
export function wouldEntityBeOccluded(entityModelHash, position, p4) {
    if (typeof entityModelHash === 'string')
        entityModelHash = this.getHashKey(entityModelHash);
    return WouldEntityBeOccluded(entityModelHash, position.x, position.y, position.z, p4);
}
/**
 * ```
 * Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
 * ```
 * Hash: 0x608AD36A644A97FE | ApiSet: undefined
 */
export function addModelToEventMonitor(model, p1, p2) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    AddModelToEventMonitor(model, p1, p2);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
 * ```
 * Hash: 0xD9F8455409B525E9 | ApiSet: undefined
 */
export function addShockingEventAtPosition(eventType, position, p4, p5, p6, p7, p8, p9, p10) {
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return AddShockingEventAtPosition(eventType, position.x, position.y, position.z, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0x7FD8F3BE76F89422 | ApiSet: undefined
 */
export function addShockingEventForEntity(eventType, entity, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return AddShockingEventForEntity(eventType, _entity, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
}
/**
 * Hash: 0xCA1315C33B9A2847 | ApiSet: undefined
 */
export function createShockingEvent() {
    return CreateShockingEvent();
}
/**
 * ```
 * Returns eventType
 * ```
 * Hash: 0x796EECFF0C6D39BE | ApiSet: undefined
 */
export function eventGetRecentEvent(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return EventGetRecentEvent(_entity, p1, p2);
}
/**
 * Hash: 0xAD8F2424C6E1E3A8 | ApiSet: undefined
 */
export function eventFlushAllEventTrackers(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EventFlushAllEventTrackers(_ped);
}
/**
 * Hash: 0x822A001BCEA5BD81 | ApiSet: undefined
 */
export function eventGetSourceEntityFromEvent(entity, eventType, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return EventGetSourceEntityFromEvent(_entity, eventType, p2, p3);
}
/**
 * Hash: 0x38497F139981C5C9 | ApiSet: undefined
 */
export function eventGetTargetEntityFromEvent(entity, eventType, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return EventGetTargetEntityFromEvent(_entity, eventType, p2, p3);
}
/**
 * Hash: 0x797B3D4D92E56094 | ApiSet: undefined
 */
export function isEventTrackerActive(eventName, shockingEvent) {
    if (typeof shockingEvent === 'string')
        shockingEvent = this.getHashKey(shockingEvent);
    return IsEventTrackerActive(eventName, shockingEvent);
}
/**
 * ```
 * Only used in R* SP Script beat_rat_infestation and homeinvasion
 * ```
 * Hash: 0x18E93EBFC1FCFA48 | ApiSet: undefined
 */
export function _0x18E93EBFC1FCFA48(volume, p1, p2) {
    return Citizen.invokeNative('0x18E93EBFC1FCFA48', volume, p1, p2);
}
/**
 * Hash: 0xC6A7DC546E94FED5 | ApiSet: undefined
 */
export function eventGetTimeSinceEvent(entity, eventType, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return EventGetTimeSinceEvent(_entity, eventType, p2, p3);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0x9DB47E16060D6354 | ApiSet: undefined
 */
export function isShockingEventInSphere(eventType, position, radius) {
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return IsShockingEventInSphere(eventType, position.x, position.y, position.z, radius);
}
/**
 * ```
 * AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
 * ```
 * Hash: 0x1A5C5D350068A673 | ApiSet: undefined
 */
export function _0x1A5C5D350068A673(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x1A5C5D350068A673', _ped, p1);
}
/**
 * ```
 * _GET*
 * ```
 * Hash: 0x1D1B448D719415AB | ApiSet: undefined
 */
export function _0x1D1B448D719415AB(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x1D1B448D719415AB', _ped);
}
/**
 * Hash: 0x26054EB81AC0893B | ApiSet: undefined
 */
export function _0x26054EB81AC0893B(object) {
    return Citizen.invokeNative('0x26054EB81AC0893B', object);
}
/**
 * ```
 * _ADD* (_ADD_SHOCKING_EVENT_* ?)
 * ```
 * Hash: 0x36D0F2BA2C0D9BDE | ApiSet: undefined
 */
export function _0x36D0F2BA2C0D9BDE(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x36D0F2BA2C0D9BDE', _entity, p1);
}
/**
 * Hash: 0x2DD42FAD06E6F19E | ApiSet: undefined
 */
export function _0x2DD42FAD06E6F19E(object, p1, p2) {
    return Citizen.invokeNative('0x2DD42FAD06E6F19E', object, p1, p2);
}
/**
 * ```
 * Only used in R* SP Script coachrobberies
 * _SET_S*
 * ```
 * Hash: 0x4B2B1A891D437CA7 | ApiSet: undefined
 */
export function _0x4B2B1A891D437CA7(p0) {
    Citizen.invokeNative('0x4B2B1A891D437CA7', p0);
}
/**
 * Hash: 0x4465C3D1475BD3FD | ApiSet: undefined
 */
export function _0x4465C3D1475BD3FD(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    Citizen.invokeNative('0x4465C3D1475BD3FD', model);
}
/**
 * ```
 * Only used in R* SP Script beat_rat_infestation
 * Params: p0 = value returned by 0x18E93EBFC1FCFA48
 * ```
 * Hash: 0x56B3410626A473E7 | ApiSet: undefined
 */
export function _0x56B3410626A473E7(p0) {
    Citizen.invokeNative('0x56B3410626A473E7', p0);
}
/**
 * ```
 * Only used in R* SP Scripts
 * Hash only used in R* Script mob3.ysc: ROBBERY
 * _ADD_PED*
 * ```
 * Hash: 0x7C511E91738A0828 | ApiSet: undefined
 */
export function _0x7C511E91738A0828(ped1, ped2, p2, p3) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    if (typeof p3 === 'string')
        p3 = this.getHashKey(p3);
    Citizen.invokeNative('0x7C511E91738A0828', _ped1, _ped2, p2, p3);
}
/**
 * ```
 * _GET*
 * ```
 * Hash: 0x83D43F0FD5276E4D | ApiSet: undefined
 */
export function _0x83D43F0FD5276E4D(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x83D43F0FD5276E4D', _entity, p1);
}
/**
 * ```
 * _SET_P*
 * ```
 * Hash: 0x9520175B35E2268D | ApiSet: undefined
 */
export function _0x9520175B35E2268D(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9520175B35E2268D', _ped, p1);
}
/**
 * ```
 * Might return time since some (?) event.
 * ```
 * Hash: 0xAD17A18215DD23D6 | ApiSet: undefined
 */
export function _0xAD17A18215DD23D6(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0xAD17A18215DD23D6', _entity, p1, p2);
}
/**
 * Hash: 0xA86B0EE9B39D15D6 | ApiSet: undefined
 */
export function _0xA86B0EE9B39D15D6(object) {
    Citizen.invokeNative('0xA86B0EE9B39D15D6', object);
}
/**
 * ```
 * _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
 * ```
 * Hash: 0xB6F4825153920582 | ApiSet: undefined
 */
export function _0xB6F4825153920582() {
    Citizen.invokeNative('0xB6F4825153920582');
}
/**
 * ```
 * HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE28D7FC9FD32ABEB | ApiSet: undefined
 */
export function _0xE28D7FC9FD32ABEB(entity, eventType, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    Citizen.invokeNative('0xE28D7FC9FD32ABEB', _entity, eventType, p2);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0x118873DD538490B4 | ApiSet: undefined
 */
export function removeAllShockingEventsOfType(eventType, p1) {
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    RemoveAllShockingEventsOfType(eventType, p1);
}
/**
 * Hash: 0xE2C2FBB7825FFC66 | ApiSet: undefined
 */
export function _0xE2C2FBB7825FFC66() {
    Citizen.invokeNative('0xE2C2FBB7825FFC66');
}
/**
 * Hash: 0xD47A168C2AB90DC4 | ApiSet: undefined
 */
export function removeAllShockingEvents(p0) {
    RemoveAllShockingEvents(p0);
}
/**
 * Hash: 0xB4C71BA9CAB097BD | ApiSet: undefined
 */
export function removeAllShockingEventsInArea(position, radius, p4) {
    RemoveAllShockingEventsInArea(position.x, position.y, position.z, radius, p4);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0x6A648D42BF271DC7 | ApiSet: undefined
 */
export function removeAllShockingEventsOfTypeInArea(eventType, position, radius, p5) {
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    RemoveAllShockingEventsOfTypeInArea(eventType, position.x, position.y, position.z, radius, p5);
}
/**
 * Hash: 0xDB249021652420C5 | ApiSet: undefined
 */
export function removeShockingEventSpawnBlockingAreas() {
    RemoveShockingEventSpawnBlockingAreas();
}
/**
 * Hash: 0xE8BB3CC253A34559 | ApiSet: undefined
 */
export function removeShockingEvent(event) {
    return RemoveShockingEvent(event);
}
/**
 * Hash: 0x6B9C5C38838FB6E6 | ApiSet: undefined
 */
export function setDecisionMakerToDefault(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetDecisionMakerToDefault(_ped);
}
/**
 * Hash: 0x8AE2F981CDDB8FA4 | ApiSet: undefined
 */
export function setDecisionMaker(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof name === 'string')
        name = this.getHashKey(name);
    SetDecisionMaker(_ped, name);
}
/**
 * Hash: 0xBB1E41DD3D3C6250 | ApiSet: undefined
 */
export function setEventTrackerForPed(ped, eventName, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetEventTrackerForPed(_ped, eventName, p2);
}
/**
 * Hash: 0x84994FAD4E4E4E69 | ApiSet: undefined
 */
export function suppressShockingEventsNextFrame() {
    SuppressShockingEventsNextFrame();
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
 * explosionType:
 * enum eExplosionTag
 * {
 * EXP_TAG_DONTCARE = -1,
 * EXP_TAG_GRENADE,
 * EXP_TAG_STICKYBOMB,
 * EXP_TAG_MOLOTOV,
 * EXP_TAG_MOLOTOV_VOLATILE,
 * EXP_TAG_HI_OCTANE,
 * EXP_TAG_CAR,
 * EXP_TAG_PLANE,
 * EXP_TAG_PETROL_PUMP,
 * EXP_TAG_DIR_STEAM,
 * EXP_TAG_DIR_FLAME,
 * EXP_TAG_DIR_WATER_HYDRANT,
 * EXP_TAG_BOAT,
 * EXP_TAG_BULLET,
 * EXP_TAG_SMOKEGRENADE,
 * EXP_TAG_BZGAS,
 * EXP_TAG_GAS_CANISTER,
 * EXP_TAG_EXTINGUISHER,
 * EXP_TAG_TRAIN,
 * EXP_TAG_DIR_FLAME_EXPLODE,
 * EXP_TAG_VEHICLE_BULLET,
 * EXP_TAG_BIRD_CRAP,
 * EXP_TAG_FIREWORK,
 * EXP_TAG_TORPEDO,
 * EXP_TAG_TORPEDO_UNDERWATER,
 * EXP_TAG_LANTERN,
 * EXP_TAG_DYNAMITE,
 * EXP_TAG_DYNAMITESTACK,
 * EXP_TAG_DYNAMITE_VOLATILE,
 * EXP_TAG_RIVER_BLAST,
 * EXP_TAG_PLACED_DYNAMITE,
 * EXP_TAG_FIRE_ARROW,
 * EXP_TAG_DYNAMITE_ARROW,
 * EXP_TAG_PHOSPHOROUS_BULLET,
 * EXP_TAG_LIGHTNING_STRIKE,
 * EXP_TAG_TRACKING_ARROW,
 * EXP_TAG_POISON_BOTTLE
 * };
 * ```
 * Hash: 0x7D6F58F69DA92530 | ApiSet: undefined
 */
export function addExplosion(position, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
    AddExplosion(position.x, position.y, position.z, explosionType, damageScale, isAudible, isInvisible, cameraShake);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * Change explosionFx (Visual Effect) for specified explosionType
 * ```
 * Hash: 0x53BA259F3A67A99E | ApiSet: undefined
 */
export function addExplosionWithUserVfx(position, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake) {
    if (typeof explosionFx === 'string')
        explosionFx = this.getHashKey(explosionFx);
    AddExplosionWithUserVfx(position.x, position.y, position.z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake);
}
/**
 * Hash: 0xB646FB657F448261 | ApiSet: undefined
 */
export function getClosestFirePos(position) {
    const result = GetClosestFirePos(position.x, position.y, position.z);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0xF9617BC6FAE61E08 | ApiSet: undefined
 */
export function getNumberOfFiresInRange(position, radius) {
    return GetNumberOfFiresInRange(position.x, position.y, position.z, radius);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0xD84A917A64D4D016 | ApiSet: undefined
 */
export function addOwnedExplosion(ped, position, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddOwnedExplosion(_ped, position.x, position.y, position.z, explosionType, damageScale, isAudible, isInvisible, cameraShake);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0x8002DDAB58594D78 | ApiSet: undefined
 */
export function getOwnerOfExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, radius) {
    return GetOwnerOfExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, radius);
}
/**
 * Hash: 0xCDC25355C0D65963 | ApiSet: undefined
 */
export function isEntityConsumedByFire(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityConsumedByFire(_entity);
}
/**
 * Hash: 0x1BD7C371CE257C3E | ApiSet: undefined
 */
export function isEntityOnFire(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityOnFire(_entity);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0x8391BA4313A25AD3 | ApiSet: undefined
 */
export function isExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2) {
    return IsExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0xD96E82AEBFFAAFF0 | ApiSet: undefined
 */
export function isExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2) {
    return IsExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0xD62DD846D82CBB90 | ApiSet: undefined
 */
export function isExplosionInSphere(explosionType, position, radius) {
    return IsExplosionInSphere(explosionType, position.x, position.y, position.z, radius);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0xE24822A4CFC9107A | ApiSet: undefined
 */
export function isExplosionInVolume(explosionType, volume) {
    return IsExplosionInVolume(explosionType, volume);
}
/**
 * ```
 * explosionType: see ADD_EXPLOSION
 * ```
 * Hash: 0x5AE661ECD18524C9 | ApiSet: undefined
 */
export function isExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, angle) {
    return IsExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, angle);
}
/**
 * ```
 * Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xAB7993BA61A4674F | ApiSet: undefined
 */
export function isPedShockingEventActive(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedShockingEventActive(_ped, p1);
}
/**
 * Hash: 0x34AE85C7CA4857AA | ApiSet: undefined
 */
export function _0x34AE85C7CA4857AA(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    Citizen.invokeNative('0x34AE85C7CA4857AA', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * Only used in R* SP Related Camp Scripts
 * ```
 * Hash: 0x24DB6B9F2B719043 | ApiSet: undefined
 */
export function _0x24DB6B9F2B719043(p0) {
    Citizen.invokeNative('0x24DB6B9F2B719043', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x559FC1D310813031 | ApiSet: undefined
 */
export function _0x559FC1D310813031(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    return Citizen.invokeNative('0x559FC1D310813031', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x41B87A6495EE13DD | ApiSet: undefined
 */
export function _0x41B87A6495EE13DD(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    return Citizen.invokeNative('0x41B87A6495EE13DD', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x754937C28271BC65 | ApiSet: undefined
 */
export function _0x754937C28271BC65(p0) {
    Citizen.invokeNative('0x754937C28271BC65', p0);
}
/**
 * Hash: 0x68F6A75FDF5A70D6 | ApiSet: undefined
 */
export function _0x68F6A75FDF5A70D6(position, p3) {
    Citizen.invokeNative('0x68F6A75FDF5A70D6', position.x, position.y, position.z, p3);
}
/**
 * Hash: 0x790125C36E194069 | ApiSet: undefined
 */
export function removeScriptFire(fireHandle) {
    RemoveScriptFire(fireHandle);
}
/**
 * Hash: 0xA4454592DCF7C992 | ApiSet: undefined
 */
export function _0xA4454592DCF7C992(p0) {
    return Citizen.invokeNative('0xA4454592DCF7C992', p0);
}
/**
 * ```
 * Starts a fire:
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 * ```
 * Hash: 0x6B83617E04503888 | ApiSet: undefined
 */
export function startScriptFire(position, p3, p4, p5, soundsetName, p7, p8) {
    return StartScriptFire(position.x, position.y, position.z, p3, p4, p5, soundsetName, p7, p8);
}
/**
 * ```
 * _ADD_EXPLOSION_*(ON ENTITY?)
 * ```
 * Hash: 0xB7DF150605EEDC9B | ApiSet: undefined
 */
export function _0xB7DF150605EEDC9B(entity, p1, position, explosionType, damageScale, isAudible, isInvisible, cameraShake) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xB7DF150605EEDC9B', _entity, p1, position.x, position.y, position.z, explosionType, damageScale, isAudible, isInvisible, cameraShake);
}
/**
 * Hash: 0xC4DC7418A44D6822 | ApiSet: undefined
 */
export function startEntityFire(p0, p1, p2, p3) {
    StartEntityFire(p0, p1, p2, p3);
}
/**
 * Hash: 0x8390751DC40C1E98 | ApiSet: undefined
 */
export function stopEntityFire(p0, p1) {
    StopEntityFire(p0, p1);
}
/**
 * Hash: 0xB7C7BDC375AEA9A4 | ApiSet: undefined
 */
export function stopFireInBox(posX, posY, posZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    StopFireInBox(posX, posY, posZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * Hash: 0xDB38F247BD421708 | ApiSet: undefined
 */
export function stopFireInRange(position, radius) {
    StopFireInRange(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0xCB4EF7EDAE2E16F1 | ApiSet: undefined
 */
export function createHerd() {
    return CreateHerd();
}
/**
 * Hash: 0x933E5D31A7D13069 | ApiSet: undefined
 */
export function addPedToFlock(p0, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddPedToFlock(p0, _ped);
}
/**
 * ```
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
 * ```
 * Hash: 0x1C1993824A396603 | ApiSet: undefined
 */
export function getAnimalTuningBoolParam(animal, index) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    return GetAnimalTuningBoolParam(_animal, index);
}
/**
 * ```
 * Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
 * Used for: REL_DOMESTICATED_ANIMAL
 * ```
 * Hash: 0x3B005FF0538ED2A9 | ApiSet: undefined
 */
export function getAnimalIsWild(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAnimalIsWild(_ped);
}
/**
 * ```
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
 * ```
 * Hash: 0x4BC3ECFDA0297E27 | ApiSet: undefined
 */
export function getAnimalTuningFloatParam(animal, index) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    return GetAnimalTuningFloatParam(_animal, index);
}
/**
 * ```
 * enum eAnimalRarityLevel
 * {
 * ARL_COMMON,
 * ARL_RARE,
 * ARL_LEGENDARY,
 * ARL_NUMRARITYLEVELS
 * };
 * ```
 * Hash: 0xF8B48A361DC388AE | ApiSet: undefined
 */
export function getAnimalRarity(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAnimalRarity(_ped);
}
/**
 * Hash: 0xE108489621422F91 | ApiSet: undefined
 */
export function getSpeciesTuningFloatParam(p0, p1, p2) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return GetSpeciesTuningFloatParam(p0, p1, p2);
}
/**
 * Hash: 0x8D913E493BAFE0A3 | ApiSet: undefined
 */
export function isHerdValid(herdHandle) {
    return IsHerdValid(herdHandle);
}
/**
 * Hash: 0x0816C31480764AB0 | ApiSet: undefined
 */
export function _0x0816C31480764AB0(p0, p1, p2, p3) {
    Citizen.invokeNative('0x0816C31480764AB0', p0, p1, p2, p3);
}
/**
 * Hash: 0x09EE00B8F858E0BE | ApiSet: undefined
 */
export function _0x09EE00B8F858E0BE(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0x09EE00B8F858E0BE', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x17E3E5C46ECCD308 | ApiSet: undefined
 */
export function _0x17E3E5C46ECCD308(p0, p1, p2) {
    Citizen.invokeNative('0x17E3E5C46ECCD308', p0, p1, p2);
}
/**
 * Hash: 0x1520626FFAFFFA8F | ApiSet: undefined
 */
export function _0x1520626FFAFFFA8F(p0, p1) {
    Citizen.invokeNative('0x1520626FFAFFFA8F', p0, p1);
}
/**
 * Hash: 0x1DA6CB02071055D5 | ApiSet: undefined
 */
export function _0x1DA6CB02071055D5(p0) {
    return new Vector3(Citizen.invokeNative('0x1DA6CB02071055D5', p0));
}
/**
 * Hash: 0x19870C40C7EE15BE | ApiSet: undefined
 */
export function _0x19870C40C7EE15BE(p0, p1) {
    return Citizen.invokeNative('0x19870C40C7EE15BE', p0, p1);
}
/**
 * Hash: 0x34B9C4D86DF2C2F3 | ApiSet: undefined
 */
export function _0x34B9C4D86DF2C2F3(p0) {
    return Citizen.invokeNative('0x34B9C4D86DF2C2F3', p0);
}
/**
 * Hash: 0x2DF3D457D86F8E57 | ApiSet: undefined
 */
export function _0x2DF3D457D86F8E57(p0, p1) {
    Citizen.invokeNative('0x2DF3D457D86F8E57', p0, p1);
}
/**
 * Hash: 0x36486AF7DA93A464 | ApiSet: undefined
 */
export function _0x36486AF7DA93A464(p0) {
    return Citizen.invokeNative('0x36486AF7DA93A464', p0);
}
/**
 * Hash: 0x408D1149C5E39C1E | ApiSet: undefined
 */
export function _0x408D1149C5E39C1E(p0, p1) {
    Citizen.invokeNative('0x408D1149C5E39C1E', p0, p1);
}
/**
 * Hash: 0x53187E563F938E76 | ApiSet: undefined
 */
export function _0x53187E563F938E76(p0) {
    return Citizen.invokeNative('0x53187E563F938E76', p0);
}
/**
 * Hash: 0x706B434FEFAD6A24 | ApiSet: undefined
 */
export function _0x706B434FEFAD6A24(p0) {
    Citizen.invokeNative('0x706B434FEFAD6A24', p0);
}
/**
 * Hash: 0x67A43EA3F6FE0076 | ApiSet: undefined
 */
export function _0x67A43EA3F6FE0076(p0) {
    Citizen.invokeNative('0x67A43EA3F6FE0076', p0);
}
/**
 * Hash: 0x9E13ACC38BA8F9C3 | ApiSet: undefined
 */
export function _0x9E13ACC38BA8F9C3(p0, p1) {
    return Citizen.invokeNative('0x9E13ACC38BA8F9C3', p0, p1);
}
/**
 * Hash: 0x6C57BEA886A20C6B | ApiSet: undefined
 */
export function _0x6C57BEA886A20C6B(p0, p1) {
    Citizen.invokeNative('0x6C57BEA886A20C6B', p0, p1);
}
/**
 * Hash: 0xC3D581A34BC0A1F0 | ApiSet: undefined
 */
export function _0xC3D581A34BC0A1F0(p0, p1) {
    Citizen.invokeNative('0xC3D581A34BC0A1F0', p0, p1);
}
/**
 * Hash: 0x8049B17BEC937662 | ApiSet: undefined
 */
export function _0x8049B17BEC937662(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0x8049B17BEC937662', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xC95611869E14F8AF | ApiSet: undefined
 */
export function _0xC95611869E14F8AF(p0, p1, p2, p3) {
    Citizen.invokeNative('0xC95611869E14F8AF', p0, p1, p2, p3);
}
/**
 * Hash: 0xA881F5C77A560906 | ApiSet: undefined
 */
export function _0xA881F5C77A560906(p0) {
    Citizen.invokeNative('0xA881F5C77A560906', p0);
}
/**
 * Hash: 0xC72CE37081DAE625 | ApiSet: undefined
 */
export function _0xC72CE37081DAE625(p0, p1, p2, p3) {
    Citizen.invokeNative('0xC72CE37081DAE625', p0, p1, p2, p3);
}
/**
 * Hash: 0xD95F04A4E73BE85E | ApiSet: undefined
 */
export function _0xD95F04A4E73BE85E(p0, p1) {
    return Citizen.invokeNative('0xD95F04A4E73BE85E', p0, p1);
}
/**
 * Hash: 0xCC6B5AAFC87BFC7B | ApiSet: undefined
 */
export function _0xCC6B5AAFC87BFC7B(p0, p1, p2) {
    Citizen.invokeNative('0xCC6B5AAFC87BFC7B', p0, p1, p2);
}
/**
 * Hash: 0xE36D2CB540597EF7 | ApiSet: undefined
 */
export function _0xE36D2CB540597EF7(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0xE36D2CB540597EF7', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xE0961AED72642B80 | ApiSet: undefined
 */
export function _0xE0961AED72642B80(p0) {
    Citizen.invokeNative('0xE0961AED72642B80', p0);
}
/**
 * Hash: 0xE93415B3307208E5 | ApiSet: undefined
 */
export function _0xE93415B3307208E5(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    return Citizen.invokeNative('0xE93415B3307208E5', p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * ```
 * species: SPECIES_BIRD_CROW
 * ```
 * Hash: 0xF2CCA7B68CFAB2B9 | ApiSet: undefined
 */
export function _0xF2CCA7B68CFAB2B9(species, x1, y1, z1, x2, y2, z2, x3, y3, z3, p10, p11, p12, p13) {
    if (typeof species === 'string')
        species = this.getHashKey(species);
    Citizen.invokeNative('0xF2CCA7B68CFAB2B9', species, x1, y1, z1, x2, y2, z2, x3, y3, z3, p10, p11, p12, p13);
}
/**
 * Hash: 0xFA821997794F48E7 | ApiSet: undefined
 */
export function _0xFA821997794F48E7(p0, p1, p2) {
    Citizen.invokeNative('0xFA821997794F48E7', p0, p1, p2);
}
/**
 * Hash: 0xFB16F08F47B83B4C | ApiSet: undefined
 */
export function _0xFB16F08F47B83B4C(p0) {
    Citizen.invokeNative('0xFB16F08F47B83B4C', p0);
}
/**
 * Hash: 0xFDB008B3BCF5992F | ApiSet: undefined
 */
export function _0xFDB008B3BCF5992F(p0, p1, p2) {
    Citizen.invokeNative('0xFDB008B3BCF5992F', p0, p1, p2);
}
/**
 * Hash: 0xFF1E339CE40EAAAF | ApiSet: undefined
 */
export function _0xFF1E339CE40EAAAF(p0, p1) {
    Citizen.invokeNative('0xFF1E339CE40EAAAF', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x96AA1304D30E6BC3 | ApiSet: undefined
 */
export function resetAnimalTuningBoolParam(animal, index) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    ResetAnimalTuningBoolParam(_animal, index);
}
/**
 * Hash: 0xAEB97D84CDF3C00B | ApiSet: undefined
 */
export function setAnimalIsWild(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAnimalIsWild(_ped, toggle);
}
/**
 * Hash: 0x9FF1E042FA597187 | ApiSet: undefined
 */
export function setAnimalTuningBoolParam(animal, index, value) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    SetAnimalTuningBoolParam(_animal, index, value);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xE776A195488FC520 | ApiSet: undefined
 */
export function resetAnimalTuningFloatParam(animal, index) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    ResetAnimalTuningFloatParam(_animal, index);
}
/**
 * ```
 * rarityLevel: see _GET_ANIMAL_RARITY
 * ```
 * Hash: 0x8B6F0F59B1B99801 | ApiSet: undefined
 */
export function setAnimalRarity(ped, rarityLevel) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAnimalRarity(_ped, rarityLevel);
}
/**
 * Hash: 0xCBDA22C87977244F | ApiSet: undefined
 */
export function setAnimalTuningFloatParam(animal, index, value) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    SetAnimalTuningFloatParam(_animal, index, value);
}
/**
 * Hash: 0x6D1D94C2459B42EE | ApiSet: undefined
 */
export function setSpeciesTuningBoolParam(p0, p1, p2, p3) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    SetSpeciesTuningBoolParam(p0, p1, p2, p3);
}
/**
 * Hash: 0x963240B6C252BA49 | ApiSet: undefined
 */
export function setSpeciesTuningFloatParam(p0, p1, p2, p3) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    SetSpeciesTuningFloatParam(p0, p1, p2, p3);
}
/**
 * Hash: 0x0E5C9FB9ED5DFF1C | ApiSet: undefined
 */
export function _0x0E5C9FB9ED5DFF1C(p0) {
    return Citizen.invokeNative('0x0E5C9FB9ED5DFF1C', p0);
}
/**
 * Hash: 0x2F7EB8B6F6AFE79C | ApiSet: undefined
 */
export function _0x2F7EB8B6F6AFE79C(p0) {
    return Citizen.invokeNative('0x2F7EB8B6F6AFE79C', p0);
}
/**
 * Hash: 0x1F11702DDBD915C6 | ApiSet: undefined
 */
export function _0x1F11702DDBD915C6(p0, p1) {
    return Citizen.invokeNative('0x1F11702DDBD915C6', p0, p1);
}
/**
 * Hash: 0x51C5EF47086AA0D7 | ApiSet: undefined
 */
export function _0x51C5EF47086AA0D7() {
    return Citizen.invokeNative('0x51C5EF47086AA0D7');
}
/**
 * Hash: 0x3ADC71A66356D706 | ApiSet: undefined
 */
export function _0x3ADC71A66356D706() {
    return Citizen.invokeNative('0x3ADC71A66356D706');
}
/**
 * Hash: 0x48D82C83987E18E4 | ApiSet: undefined
 */
export function _0x48D82C83987E18E4(p0) {
    return Citizen.invokeNative('0x48D82C83987E18E4', p0);
}
/**
 * Hash: 0x53A94294FDDCF98C | ApiSet: undefined
 */
export function _0x53A94294FDDCF98C(p0, p1) {
    return Citizen.invokeNative('0x53A94294FDDCF98C', p0, p1);
}
/**
 * Hash: 0x6102830F764B3DE1 | ApiSet: undefined
 */
export function _0x6102830F764B3DE1(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x6102830F764B3DE1', _player);
}
/**
 * Hash: 0x644E02F24F9D4E98 | ApiSet: undefined
 */
export function _0x644E02F24F9D4E98(p0, p1) {
    return Citizen.invokeNative('0x644E02F24F9D4E98', p0, p1);
}
/**
 * Hash: 0x7BAA30C9BBE8AEE7 | ApiSet: undefined
 */
export function _0x7BAA30C9BBE8AEE7(p0, p1) {
    return Citizen.invokeNative('0x7BAA30C9BBE8AEE7', p0, p1);
}
/**
 * Hash: 0x7933754F260B428A | ApiSet: undefined
 */
export function _0x7933754F260B428A(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x7933754F260B428A', _player);
}
/**
 * Hash: 0xA9CEAE8D6637FBAD | ApiSet: undefined
 */
export function _0xA9CEAE8D6637FBAD(p0) {
    Citizen.invokeNative('0xA9CEAE8D6637FBAD', p0);
}
/**
 * Hash: 0xAD22AB64FA428DF3 | ApiSet: undefined
 */
export function _0xAD22AB64FA428DF3(p0) {
    Citizen.invokeNative('0xAD22AB64FA428DF3', p0);
}
/**
 * Hash: 0xB38C256498748413 | ApiSet: undefined
 */
export function _0xB38C256498748413() {
    Citizen.invokeNative('0xB38C256498748413');
}
/**
 * Hash: 0xAFD3599A3CC5637D | ApiSet: undefined
 */
export function _0xAFD3599A3CC5637D() {
    return Citizen.invokeNative('0xAFD3599A3CC5637D');
}
/**
 * Hash: 0xC81A9E2C8EFD28D5 | ApiSet: undefined
 */
export function _0xC81A9E2C8EFD28D5(p0) {
    Citizen.invokeNative('0xC81A9E2C8EFD28D5', p0);
}
/**
 * Hash: 0xB22B1D9F74095382 | ApiSet: undefined
 */
export function _0xB22B1D9F74095382(p0) {
    Citizen.invokeNative('0xB22B1D9F74095382', p0);
}
/**
 * ```
 * _NETWORK_GET_* or _NETWORK_IS_*
 * ```
 * Hash: 0xDA801F7F6A5278D3 | ApiSet: undefined
 */
export function _0xDA801F7F6A5278D3(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xDA801F7F6A5278D3', _player);
}
/**
 * Hash: 0xEE4F20004D0288B7 | ApiSet: undefined
 */
export function _0xEE4F20004D0288B7() {
    Citizen.invokeNative('0xEE4F20004D0288B7');
}
/**
 * Hash: 0xE4C64CD37CB176AA | ApiSet: undefined
 */
export function _0xE4C64CD37CB176AA(p0) {
    return Citizen.invokeNative('0xE4C64CD37CB176AA', p0);
}
/**
 * Hash: 0xFA7C5B7E087A4CEB | ApiSet: undefined
 */
export function _0xFA7C5B7E087A4CEB() {
    return Citizen.invokeNative('0xFA7C5B7E087A4CEB');
}
/**
 * Hash: 0x4BE6C13A45CCA8EC | ApiSet: undefined
 */
export function networkGetGangLeader(gangId) {
    return NetworkGetGangLeader(gangId);
}
/**
 * Hash: 0x901E0DC25080C8B9 | ApiSet: undefined
 */
export function networkGetGangId(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetGangId(_player);
}
/**
 * Hash: 0xCE88A261DCBBA0D9 | ApiSet: undefined
 */
export function networkGetGangLeaderHandle(gangId) {
    return NetworkGetGangLeaderHandle(gangId);
}
/**
 * Hash: 0xD1BF325C8252A982 | ApiSet: undefined
 */
export function networkGetGangMembers(gangId) {
    return NetworkGetGangMembers(gangId);
}
/**
 * Hash: 0x853B0FA4D8732C57 | ApiSet: undefined
 */
export function networkGetGangSize(gangId) {
    return NetworkGetGangSize(gangId);
}
/**
 * Hash: 0x9970AE8C3D706139 | ApiSet: undefined
 */
export function networkGetGangPrivacy() {
    return NetworkGetGangPrivacy();
}
/**
 * Hash: 0x0F99F6436528A089 | ApiSet: undefined
 */
export function networkIsGangActive(gangId) {
    return NetworkIsGangActive(gangId);
}
/**
 * Hash: 0x149A2751AB66AC02 | ApiSet: undefined
 */
export function networkGetNumGangMembers(gangId) {
    return NetworkGetNumGangMembers(gangId);
}
/**
 * Hash: 0xD6F6ACF4392187FB | ApiSet: undefined
 */
export function networkIsGangIdValid(gangId) {
    return NetworkIsGangIdValid(gangId);
}
/**
 * Hash: 0x93A91A351A07360E | ApiSet: undefined
 */
export function networkIsGangInSession(gangId) {
    return NetworkIsGangInSession(gangId);
}
/**
 * Hash: 0x424B17A7DC5C90BC | ApiSet: undefined
 */
export function networkIsGangLeader(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsGangLeader(_player);
}
/**
 * Hash: 0xFCF96CCBD81B24C8 | ApiSet: undefined
 */
export function networkIsGangOpen(gangId) {
    return NetworkIsGangOpen(gangId);
}
/**
 * Hash: 0x9BE7DCB22D32CCBE | ApiSet: undefined
 */
export function networkIsGangMember(gangId, player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsGangMember(gangId, _player);
}
/**
 * Hash: 0x81FB74C83C2ED69F | ApiSet: undefined
 */
export function networkIsInMyGang(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsInMyGang(_player);
}
/**
 * Hash: 0x3F59FE6F37869576 | ApiSet: undefined
 */
export function networkIsInSameGang(player1, player2) {
    const _player1 = player1 instanceof Entity ? player1.remoteId() : player1;
    const _player2 = player2 instanceof Entity ? player2.remoteId() : player2;
    return NetworkIsInSameGang(_player1, _player2);
}
/**
 * ```
 * banTimeSeconds is 120 in R* Scripts
 * ```
 * Hash: 0xCD9E2D9BC52FD80F | ApiSet: undefined
 */
export function networkKickGangMember(player, banTimeSeconds) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    NetworkKickGangMember(_player, banTimeSeconds);
}
/**
 * Hash: 0x0A04A07BC3074EDB | ApiSet: undefined
 */
export function networkLeaveGang(disband) {
    NetworkLeaveGang(disband);
}
/**
 * ```
 * Returns true if join succeeded, false if failed.
 * ```
 * Hash: 0xC0474C8BCF6787AD | ApiSet: undefined
 */
export function networkRequestGangJoin(gangId) {
    return NetworkRequestGangJoin(gangId);
}
/**
 * Hash: 0xC5BF29F4035277C2 | ApiSet: undefined
 */
export function networkSetGangPrivacy(privacyType) {
    return NetworkSetGangPrivacy(privacyType);
}
/**
 * Hash: 0x833D8268D51B4522 | ApiSet: undefined
 */
export function networkSetGangSize(size) {
    return NetworkSetGangSize(size);
}
/**
 * ```
 * openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
 * openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
 * campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
 * ```
 * Hash: 0xD1A226F2E05E58FC | ApiSet: undefined
 */
export function networkStartGang(openStatus, campSize) {
    NetworkStartGang(openStatus, campSize);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x87BBCC4360A9BDE3 | ApiSet: undefined
 */
export function googleAnalyticsEndEvent() {
    return GoogleAnalyticsEndEvent();
}
/**
 * Hash: 0xC6DE040378364798 | ApiSet: undefined
 */
export function googleAnalyticsPopPage(pageName) {
    GoogleAnalyticsPopPage(pageName);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x1C54F031D7C0F7AC | ApiSet: undefined
 */
export function googleAnalyticsStartEvent(eventCategory, eventAction, eventLabel, eventValue) {
    return GoogleAnalyticsStartEvent(eventCategory, eventAction, eventLabel, eventValue);
}
/**
 * Hash: 0xD43A616AE3AC4EF6 | ApiSet: undefined
 */
export function googleAnalyticsPushPage(pageName) {
    GoogleAnalyticsPushPage(pageName);
}
/**
 * ```
 * https://i.imgur.com/rPITUCV.jpg
 * More customizable and more like quadrants
 * ```
 * Hash: 0xF708298675ABDC6A | ApiSet: undefined
 */
export function addBloodPool2(position, p3, size, p5, permanent, p7, p8) {
    AddBloodPool2(position.x, position.y, position.z, p3, size, p5, permanent, p7, p8);
}
/**
 * Hash: 0xC349EE1E6EFA494B | ApiSet: undefined
 */
export function addBloodPoolsForPedWithParams(ped, p1, size, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddBloodPoolsForPedWithParams(_ped, p1, size, p3);
}
/**
 * Hash: 0xF5E45CB1CF965D2D | ApiSet: undefined
 */
export function addBloodTrailSplat(position) {
    AddBloodTrailSplat(position.x, position.y, position.z);
}
/**
 * ```
 * https://i.imgur.com/ULQU9US.jpg
 * More rounded and small puddle
 * ```
 * Hash: 0xFA2ECC78A6014D4F | ApiSet: undefined
 */
export function addBloodPool(position, unused) {
    AddBloodPool(position.x, position.y, position.z, unused);
}
/**
 * ```
 * Creates blood pools for the given ped in some interval for a few seconds.
 * ```
 * Hash: 0xDFCE8CE9F3EBE93F | ApiSet: undefined
 */
export function addBloodPoolsForPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddBloodPoolsForPed(_ped);
}
/**
 * Hash: 0xDD9DC1AB63D513CE | ApiSet: undefined
 */
export function addBloodTrailPoint(position) {
    AddBloodTrailPoint(position.x, position.y, position.z);
}
/**
 * Hash: 0x57CB267624EF85C0 | ApiSet: undefined
 */
export function addDecal(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21) {
    return AddDecal(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21);
}
/**
 * Hash: 0x73354FB6D03D2E8A | ApiSet: undefined
 */
export function addPetrolTrailDecalInfo(position, p3) {
    AddPetrolTrailDecalInfo(position.x, position.y, position.z, p3);
}
/**
 * Hash: 0xC6F81FCD15350323 | ApiSet: undefined
 */
export function addEntityToEntityMask(entity, mask) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AddEntityToEntityMask(_entity, mask);
}
/**
 * ```
 * Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
 * Returns veg modifier handle
 * ```
 * Hash: 0xBD3324281E8B9933 | ApiSet: undefined
 */
export function addVegModifierZone(volume, p1, flags, p3) {
    return AddVegModifierZone(volume, p1, flags, p3);
}
/**
 * Hash: 0x958DEBD9353C0935 | ApiSet: undefined
 */
export function addEntityToEntityMaskWithIntensity(entity, mask, intensity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AddEntityToEntityMaskWithIntensity(_entity, mask, intensity);
}
/**
 * Hash: 0x7C348310A6E2FB91 | ApiSet: undefined
 */
export function allowPickupLightSync(pickupObject, allow) {
    AllowPickupLightSync(pickupObject, allow);
}
/**
 * ```
 * Returns veg modifier handle
 * ```
 * Hash: 0xFA50F79257745E74 | ApiSet: undefined
 */
export function addVegModifierSphere(position, radius, modType, flags, p6) {
    return AddVegModifierSphere(position.x, position.y, position.z, radius, modType, flags, p6);
}
/**
 * ```
 * Known effects: MP_Trans_SceneToPhoto
 * MP_Trans_WinLose
 * SpectateFilter
 * MP_CharacterCreatorPhoto
 * MP_Trans_PhotoToScene
 * InterrogationHit
 * ```
 * Hash: 0x842CCC9491FFCD9B | ApiSet: undefined
 */
export function animpostfxGetStackhash(effectName) {
    return AnimpostfxGetStackhash(effectName);
}
/**
 * Hash: 0xC5CB91D65852ED7E | ApiSet: undefined
 */
export function animpostfxClearEffect(effectName) {
    AnimpostfxClearEffect(effectName);
}
/**
 * Hash: 0x9AB192A9EF980EED | ApiSet: undefined
 */
export function animpostfxHasEventTriggeredByStackhash(effectNameHash, p1, p2) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    return AnimpostfxHasEventTriggeredByStackhash(effectNameHash, p1, p2);
}
/**
 * Hash: 0x59EA80079B86D8C7 | ApiSet: undefined
 */
export function animpostfxIsPreloadingByStackhash(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    return AnimpostfxIsPreloadingByStackhash(effectNameHash);
}
/**
 * Hash: 0xBF2DD155B2ADCD0A | ApiSet: undefined
 */
export function animpostfxHasLoaded(effectName) {
    return AnimpostfxHasLoaded(effectName);
}
/**
 * Hash: 0x4A123E85D7C4CA0B | ApiSet: undefined
 */
export function animpostfxIsRunning(effectName) {
    return AnimpostfxIsRunning(effectName);
}
/**
 * Hash: 0xEEF83A759AE06A27 | ApiSet: undefined
 */
export function animpostfxIsStackhashPlaying(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    return AnimpostfxIsStackhashPlaying(effectNameHash);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
 * ```
 * Hash: 0x4102732DF6B4005F | ApiSet: undefined
 */
export function animpostfxPlay(effectName) {
    AnimpostfxPlay(effectName);
}
/**
 * Hash: 0x2D4F9C852CE8A253 | ApiSet: undefined
 */
export function animpostfxIsTagPlaying(effectName) {
    return AnimpostfxIsTagPlaying(effectName);
}
/**
 * Hash: 0x3A9A281FF71249E9 | ApiSet: undefined
 */
export function animpostfxPlayTimed(effectName, duration) {
    AnimpostfxPlayTimed(effectName, duration);
}
/**
 * Hash: 0x9B8D5D4CB8AF58B3 | ApiSet: undefined
 */
export function animpostfxPlayTag(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    AnimpostfxPlayTag(effectNameHash);
}
/**
 * Hash: 0x5199405EABFBD7F0 | ApiSet: undefined
 */
export function animpostfxPreloadPostfx(effectName) {
    AnimpostfxPreloadPostfx(effectName);
}
/**
 * Hash: 0xF3E039322BFBD4D8 | ApiSet: undefined
 */
export function animpostfxPreloadPostfxByStackhash(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    AnimpostfxPreloadPostfxByStackhash(effectNameHash);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x63011D0C7C6519E0 | ApiSet: undefined
 */
export function animpostfxSetPostfxColor(effectName, p1, red, green, blue, alpha) {
    AnimpostfxSetPostfxColor(effectName, p1, red, green, blue, alpha);
}
/**
 * ```
 * Health Core Effect Filter Potency: p1 = 1
 * Stamina Core Effect Filter Potency: p1 = 2
 * Multiple Core Effect Filter Potency: p1 = 3
 * ```
 * Hash: 0xF972F0AB16DC5260 | ApiSet: undefined
 */
export function animpostfxSetPotency(effectName, p1, potency) {
    AnimpostfxSetPotency(effectName, p1, potency);
}
/**
 * Hash: 0x37D7BDBA89F13959 | ApiSet: undefined
 */
export function animpostfxSetToUnload(effectName) {
    AnimpostfxSetToUnload(effectName);
}
/**
 * ```
 * must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
 * ```
 * Hash: 0xCAB4DD2D5B2B7246 | ApiSet: undefined
 */
export function animpostfxSetStrength(effectName, strength) {
    AnimpostfxSetStrength(effectName, strength);
}
/**
 * Hash: 0xB4FD7446BAB2F394 | ApiSet: undefined
 */
export function animpostfxStop(effectName) {
    AnimpostfxStop(effectName);
}
/**
 * Hash: 0x66560A0D4C64FD21 | ApiSet: undefined
 */
export function animpostfxStopAll() {
    AnimpostfxStopAll();
}
/**
 * Hash: 0xEDA5CBECF56E1386 | ApiSet: undefined
 */
export function animpostfxStopStackhashPostfx(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    AnimpostfxStopStackhashPostfx(effectNameHash);
}
/**
 * Hash: 0xAD74C22A541AB987 | ApiSet: undefined
 */
export function animpostfxStopTag(effectName) {
    AnimpostfxStopTag(effectName);
}
/**
 * Hash: 0x40866A418EB8EFDE | ApiSet: undefined
 */
export function attachTvAudioToEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AttachTvAudioToEntity(_entity);
}
/**
 * ```
 * Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
 * ```
 * Hash: 0x494A9874F17A7D50 | ApiSet: undefined
 */
export function beginCreateLowQualityCopyOfPhoto(p0) {
    return BeginCreateLowQualityCopyOfPhoto(p0);
}
/**
 * Hash: 0x50C14328119E1DD1 | ApiSet: undefined
 */
export function blockPickupObjectLight(pickupObject, toggle) {
    BlockPickupObjectLight(pickupObject, toggle);
}
/**
 * Hash: 0xA15BFFC0A01B34E1 | ApiSet: undefined
 */
export function beginTakeHighQualityPhoto() {
    return BeginTakeHighQualityPhoto();
}
/**
 * ```
 * p1: 0.3f in R* Scripts
 * ```
 * Hash: 0xB9C92616929CC25D | ApiSet: undefined
 */
export function bloodTrailForWaypoint(waypointRecording, p1) {
    BloodTrailForWaypoint(waypointRecording, p1);
}
/**
 * Hash: 0x0552AA3FFC5B87AA | ApiSet: undefined
 */
export function blockPickupPlacementLight(pickup, toggle) {
    BlockPickupPlacementLight(pickup, toggle);
}
/**
 * ```
 * When this is set to ON, shadows only draw as you get nearer.
 * When OFF, they draw from a further distance.
 * ```
 * Hash: 0x8FBFD2AEB196B369 | ApiSet: undefined
 */
export function cascadeShadowsEnableEntityTracker(toggle) {
    CascadeShadowsEnableEntityTracker(toggle);
}
/**
 * Hash: 0xF7C29D7C12C36F03 | ApiSet: undefined
 */
export function cascadeShadowsClearShadowSampleType() {
    CascadeShadowsClearShadowSampleType();
}
/**
 * ```
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_POISSON16"
 * "CSM_ST_SOFT8"
 * "CSM_ST_SOFT16"
 * "CSM_ST_SOFT32"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_ESM"
 * ```
 * Hash: 0xCE4774E0F9AD48D1 | ApiSet: undefined
 */
export function cascadeShadowsSetShadowSampleType(type) {
    CascadeShadowsSetShadowSampleType(type);
}
/**
 * Hash: 0xD9EDB2E4512D563E | ApiSet: undefined
 */
export function cascadeShadowsSetCascadeBounds(p0, p1, p2, p3, p4, p5, p6, p7) {
    CascadeShadowsSetCascadeBounds(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x0E3F4AF2D63491FB | ApiSet: undefined
 */
export function clearTimecycleModifier() {
    ClearTimecycleModifier();
}
/**
 * Hash: 0x3D084D5568FB4028 | ApiSet: undefined
 */
export function createSwatchTextureDict(slots) {
    return CreateSwatchTextureDict(slots);
}
/**
 * ```
 * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
 * ```
 * Hash: 0xFB405CB357C69CB9 | ApiSet: undefined
 */
export function createTrackedPoint() {
    return CreateTrackedPoint();
}
/**
 * Hash: 0x175668836B44CBB0 | ApiSet: undefined
 */
export function createCheckpointWithNamehash(typeHash, posX1, posY1, posZ1, posX2, posY2, posZ2, radius, red, green, blue, alpha, reserved) {
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    return CreateCheckpointWithNamehash(typeHash, posX1, posY1, posZ1, posX2, posY2, posZ2, radius, red, green, blue, alpha, reserved);
}
/**
 * Hash: 0x0DED5B0C8EBAAE12 | ApiSet: undefined
 */
export function deleteCheckpoint(checkpoint) {
    DeleteCheckpoint(checkpoint);
}
/**
 * Hash: 0x5C9978A2A3DC3D0D | ApiSet: undefined
 */
export function disableEntitymask() {
    DisableEntitymask();
}
/**
 * Hash: 0xDAD7FB8402651654 | ApiSet: undefined
 */
export function destroySwatchTextureDict() {
    DestroySwatchTextureDict();
}
/**
 * Hash: 0x37A59922109F8F1C | ApiSet: undefined
 */
export function destroyTrackedPoint(point) {
    DestroyTrackedPoint(point);
}
/**
 * Hash: 0x98A7CD5EA379A854 | ApiSet: undefined
 */
export function disableHdtexThisFrame() {
    DisableHdtexThisFrame();
}
/**
 * ```
 * Only used in guama1 R* Script
 * Disables lod/distant lights when BOOL is set to true
 * ```
 * Hash: 0xCD284E2F6AC27EE9 | ApiSet: undefined
 */
export function disableFarArtificialLights(disable) {
    DisableFarArtificialLights(disable);
}
/**
 * Hash: 0x4C11CCACB7C02B6E | ApiSet: undefined
 */
export function doesCheckpointHaveFx(checkpoint) {
    return DoesCheckpointHaveFx(checkpoint);
}
/**
 * Hash: 0xDD0BC0EDCB2162F6 | ApiSet: undefined
 */
export function disableStaticVegModifier(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    DisableStaticVegModifier(p0);
}
/**
 * Hash: 0x9DD5AFF561E88F2A | ApiSet: undefined
 */
export function doesParticleFxLoopedExist(ptfxHandle) {
    return DoesParticleFxLoopedExist(ptfxHandle);
}
/**
 * ```
 * nullsub, doesn't do anything (GTA5 leftover, there is no phone in RDR3)
 * ```
 * Hash: 0xF1142E5D64B47802 | ApiSet: undefined
 */
export function drawLowQualityPhotoToPhone(p0, photoRotation) {
    DrawLowQualityPhotoToPhone(p0, photoRotation);
}
/**
 * Hash: 0xD2D9E04C0DF927F4 | ApiSet: undefined
 */
export function drawLightWithRange(posX, posY, posZ, colorR, colorG, colorB, range, intensity) {
    DrawLightWithRange(posX, posY, posZ, colorR, colorG, colorB, range, intensity);
}
/**
 * ```
 * Draws a rectangle on the screen.
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 * -R: Red part of the color. (0-255)
 * -G: Green part of the color. (0-255)
 * -B: Blue part of the color. (0-255)
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 * ```
 * Hash: 0x405224591DF02025 | ApiSet: undefined
 */
export function drawRect(x, y, width, height, red, green, blue, alpha, p8, p9) {
    DrawRect(x, y, width, height, red, green, blue, alpha, p8, p9);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
 * ```
 * Hash: 0x2A32FAA57B937173 | ApiSet: undefined
 */
export function drawMarker(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts) {
    if (typeof type === 'string')
        type = this.getHashKey(type);
    DrawMarker(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts);
}
/**
 * Hash: 0xC0A145540254A840 | ApiSet: undefined
 */
export function drawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha) {
    DrawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha);
}
/**
 * ```
 * Draws a 2D sprite on the screen.
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from
 * textureName - Name of texture to load from texture dictionary
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * red,green,blue - Sprite color (default = 255/255/255)
 * alpha - opacity level
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
 * ```
 * Hash: 0xC9884ECADE94CB34 | ApiSet: undefined
 */
export function drawSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11) {
    DrawSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha, p11);
}
/**
 * Hash: 0xFAAD23DE7A54FC14 | ApiSet: undefined
 */
export function enableEntitymask() {
    EnableEntitymask();
}
/**
 * Hash: 0x6FE93BCC7BF12B63 | ApiSet: undefined
 */
export function enableMoonCycleOverride(strength) {
    EnableMoonCycleOverride(strength);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x6FC9B065229C0787 | ApiSet: undefined
 */
export function enableMovieSubtitles(toggle) {
    EnableMovieSubtitles(toggle);
}
/**
 * Hash: 0x0E126AAE933F3B56 | ApiSet: undefined
 */
export function endPetrolTrailDecals() {
    EndPetrolTrailDecals();
}
/**
 * Hash: 0xDFEA23EC90113657 | ApiSet: undefined
 */
export function enableStaticVegModifier(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    EnableStaticVegModifier(p0);
}
/**
 * Hash: 0xD45547D8396F002A | ApiSet: undefined
 */
export function freeMemoryForHighQualityPhoto() {
    FreeMemoryForHighQualityPhoto();
}
/**
 * Hash: 0x614682E715ADBAAC | ApiSet: undefined
 */
export function freeMemoryForLowQualityPhoto() {
    FreeMemoryForLowQualityPhoto();
}
/**
 * Hash: 0x7DFF8F94937D2659 | ApiSet: undefined
 */
export function freeMemoryForMissionCreatorPhoto() {
    FreeMemoryForMissionCreatorPhoto();
}
/**
 * ```
 * Example: https://pastebin.com/tTgpER9A
 * ```
 * Hash: 0x646ED1A1D28487DF | ApiSet: undefined
 */
export function generateSwatchTextureDirectly(slot, p1) {
    GenerateSwatchTextureDirectly(slot, p1);
}
/**
 * ```
 * Example:
 * local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
 * _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
 * metapedType: see 0xEC9A1261BF0CE510
 * ```
 * Hash: 0x160921255327C591 | ApiSet: undefined
 */
export function generateSwatchTexture(slotId, componentHash, metapedType, p3) {
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    GenerateSwatchTexture(slotId, componentHash, metapedType, p3);
}
/**
 * Hash: 0xE8A8378BF651079C | ApiSet: undefined
 */
export function getEntityMaskLayers(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetEntityMaskLayers(_entity);
}
/**
 * Hash: 0x78C56B8A7B1D000C | ApiSet: undefined
 */
export function getCurrentNumberOfLocalPhotos() {
    return GetCurrentNumberOfLocalPhotos();
}
/**
 * ```
 * Always returns 200.
 * ```
 * Hash: 0x8E587FCD30E05592 | ApiSet: undefined
 */
export function getMaxNumberOfLocalPhotos() {
    return GetMaxNumberOfLocalPhotos();
}
/**
 * ```
 * _GET_C* - _GET_E*
 * ```
 * Hash: 0x25CA89B2A39DCC69 | ApiSet: undefined
 */
export function getModifiedVisibilityDistance() {
    return GetModifiedVisibilityDistance();
}
/**
 * Hash: 0x98F4154989B81EC6 | ApiSet: undefined
 */
export function getPhotoModeContrast() {
    return GetPhotoModeContrast();
}
/**
 * ```
 * Returns proxyInteriorIndex
 * ```
 * Hash: 0x5D1C5D8E62E8EE1C | ApiSet: undefined
 */
export function getProxyInteriorIndex(interiorId) {
    return GetProxyInteriorIndex(interiorId);
}
/**
 * Hash: 0x06C0D8BB6B04A709 | ApiSet: undefined
 */
export function getPhotoModeExposure() {
    return GetPhotoModeExposure();
}
/**
 * ```
 * Hardcoded to always set x to 1280 and y to 720.
 * ```
 * Hash: 0x66773C92835D0909 | ApiSet: undefined
 */
export function getScreenResolution() {
    return GetScreenResolution();
}
/**
 * Hash: 0xCB50D7AFCC8B0EC6 | ApiSet: undefined
 */
export function getScreenCoordFromWorldCoord(worldX, worldY, worldZ) {
    return GetScreenCoordFromWorldCoord(worldX, worldY, worldZ);
}
/**
 * Hash: 0x13430D3D5A45F14B | ApiSet: undefined
 */
export function getStatusOfCreateLowQualityCopyOfPhoto(p0) {
    return GetStatusOfCreateLowQualityCopyOfPhoto(p0);
}
/**
 * ```
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 * ```
 * Hash: 0xB28894CD7408BD0C | ApiSet: undefined
 */
export function getStatusOfSortedListOperation() {
    return GetStatusOfSortedListOperation();
}
/**
 * ```
 * `contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)`
 * ```
 * Hash: 0xC71B50AE58D07369 | ApiSet: undefined
 */
export function getStatusOfLoadMissionCreatorPhoto(contentId) {
    return GetStatusOfLoadMissionCreatorPhoto(contentId);
}
/**
 * Hash: 0xA705394293E2B3D3 | ApiSet: undefined
 */
export function getTimecycleModifierIndex() {
    return GetTimecycleModifierIndex();
}
/**
 * Hash: 0x2DA67BA3C8A6755D | ApiSet: undefined
 */
export function getTimecycleTransitionModifierIndex() {
    return GetTimecycleTransitionModifierIndex();
}
/**
 * ```
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 * ```
 * Hash: 0xD6663EC374092383 | ApiSet: undefined
 */
export function getStatusOfSaveHighQualityPhoto() {
    return GetStatusOfSaveHighQualityPhoto();
}
/**
 * Hash: 0x86ED21BDB2791CE8 | ApiSet: undefined
 */
export function getTogglePausedRenderphasesStatus() {
    return GetTogglePausedRenderphasesStatus();
}
/**
 * Hash: 0x4A3DA74C3CCB1725 | ApiSet: undefined
 */
export function getStatusOfTakeHighQualityPhoto() {
    return GetStatusOfTakeHighQualityPhoto();
}
/**
 * Hash: 0x3E4B4E5CF5D3EEB5 | ApiSet: undefined
 */
export function isDecalAlive(decal) {
    return IsDecalAlive(decal);
}
/**
 * Hash: 0x113857D66A9CABE6 | ApiSet: undefined
 */
export function isProxyInteriorIndexArtificialLightsEnabled(proxyInteriorIndex) {
    return IsProxyInteriorIndexArtificialLightsEnabled(proxyInteriorIndex);
}
/**
 * Hash: 0xF90FBFD68F3C59AE | ApiSet: undefined
 */
export function getTvChannel() {
    return GetTvChannel();
}
/**
 * Hash: 0xF2FDDCC8C6BAE1B3 | ApiSet: undefined
 */
export function isTrackedPointValid(point) {
    return IsTrackedPointValid(point);
}
/**
 * Hash: 0xCBB056BA159FB48D | ApiSet: undefined
 */
export function isTrackedPointVisible(point) {
    return IsTrackedPointVisible(point);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x86076AE35CBBE55F | ApiSet: undefined
 */
export function isPhotoFrame() {
    return IsPhotoFrame();
}
/**
 * Hash: 0x4D562223E0EB65F3 | ApiSet: undefined
 */
export function isTvshowCurrentlyPlaying(videoCliphash) {
    if (typeof videoCliphash === 'string')
        videoCliphash = this.getHashKey(videoCliphash);
    return IsTvshowCurrentlyPlaying(videoCliphash);
}
/**
 * Hash: 0xDE9BAD3292AA6D5E | ApiSet: undefined
 */
export function isStaticVegModifierEnabled(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return IsStaticVegModifierEnabled(p0);
}
/**
 * Hash: 0xA2A51869BDED733B | ApiSet: undefined
 */
export function isTextureInDict(txdHash, dict) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    if (typeof dict === 'string')
        dict = this.getHashKey(dict);
    return IsTextureInDict(txdHash, dict);
}
/**
 * Hash: 0x085C5B61A0114F32 | ApiSet: undefined
 */
export function _0x085C5B61A0114F32(p0, p1) {
    Citizen.invokeNative('0x085C5B61A0114F32', p0, p1);
}
/**
 * Hash: 0x84F0BA7462FF8D58 | ApiSet: undefined
 */
export function loadMissionCreatorPhoto(p1, p2, p3) {
    return LoadMissionCreatorPhoto(p1, p2, p3);
}
/**
 * ```
 * Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0D5B19C34068FEE7 | ApiSet: undefined
 */
export function _0x0D5B19C34068FEE7(p0) {
    Citizen.invokeNative('0x0D5B19C34068FEE7', p0);
}
/**
 * Hash: 0x171C18E994C1A395 | ApiSet: undefined
 */
export function _0x171C18E994C1A395(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x171C18E994C1A395', p0, p1, p2, p3, p4);
}
/**
 * ```
 * _RESET_*
 * ```
 * Hash: 0x1460B644397453EB | ApiSet: undefined
 */
export function _0x1460B644397453EB() {
    Citizen.invokeNative('0x1460B644397453EB');
}
/**
 * Hash: 0x1C6306E5BC25C29C | ApiSet: undefined
 */
export function _0x1C6306E5BC25C29C() {
    Citizen.invokeNative('0x1C6306E5BC25C29C');
}
/**
 * ```
 * Used in shop scripts for CATALOG_BOOK
 * false = Normal -> [CATALOG_BOOK_SHUTDOWN]
 * true = Trees flickering? -> [CATALOG_BOOK_OPEN]
 * ```
 * Hash: 0x1A9F09AB458D49C6 | ApiSet: undefined
 */
export function _0x1A9F09AB458D49C6(p0) {
    Citizen.invokeNative('0x1A9F09AB458D49C6', p0);
}
/**
 * Hash: 0x1FF8731BE1DFC0C0 | ApiSet: undefined
 */
export function _0x1FF8731BE1DFC0C0(p0, p1) {
    Citizen.invokeNative('0x1FF8731BE1DFC0C0', p0, p1);
}
/**
 * ```
 * Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
 * Triggers the binocular scaleform
 * ```
 * Hash: 0x21F00E08CBB5F37B | ApiSet: undefined
 */
export function _0x21F00E08CBB5F37B(component) {
    Citizen.invokeNative('0x21F00E08CBB5F37B', component);
}
/**
 * ```
 * effectName2, p2 and p3 are unused
 * ANIMPOSTFX_*
 * ```
 * Hash: 0x26DD2FB0A88CC412 | ApiSet: undefined
 */
export function _0x26DD2FB0A88CC412(effectName, effectName2, p2, p3) {
    Citizen.invokeNative('0x26DD2FB0A88CC412', effectName, effectName2, p2, p3);
}
/**
 * Hash: 0x285438C26C732F9D | ApiSet: undefined
 */
export function _0x285438C26C732F9D() {
    return Citizen.invokeNative('0x285438C26C732F9D');
}
/**
 * Hash: 0x32DE2BFFDA43E62A | ApiSet: undefined
 */
export function _0x32DE2BFFDA43E62A() {
    Citizen.invokeNative('0x32DE2BFFDA43E62A');
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0x38D9D50F2085E9B3 | ApiSet: undefined
 */
export function _0x38D9D50F2085E9B3(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    Citizen.invokeNative('0x38D9D50F2085E9B3', effectNameHash);
}
/**
 * ```
 * Only used in R* SP Script spd_agnesdown1
 * ```
 * Hash: 0x402E1A61D2587FCD | ApiSet: undefined
 */
export function _0x402E1A61D2587FCD(p0, position, p4, p5, heading) {
    return Citizen.invokeNative('0x402E1A61D2587FCD', p0, position.x, position.y, position.z, p4, p5, heading);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0x3DA7A10583A4BEC0 | ApiSet: undefined
 */
export function _0x3DA7A10583A4BEC0() {
    return Citizen.invokeNative('0x3DA7A10583A4BEC0');
}
/**
 * ```
 * _DISABLE_*
 * ```
 * Hash: 0x4046493D2EEACA0E | ApiSet: undefined
 */
export function _0x4046493D2EEACA0E() {
    Citizen.invokeNative('0x4046493D2EEACA0E');
}
/**
 * Hash: 0x453D16D41FC51D3E | ApiSet: undefined
 */
export function _0x453D16D41FC51D3E(p0) {
    Citizen.invokeNative('0x453D16D41FC51D3E', p0);
}
/**
 * ```
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 * ```
 * Hash: 0x41F88A85A579A61D | ApiSet: undefined
 */
export function _0x41F88A85A579A61D(p0) {
    Citizen.invokeNative('0x41F88A85A579A61D', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x48FE0DB54045B975 | ApiSet: undefined
 */
export function _0x48FE0DB54045B975(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0x48FE0DB54045B975', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x4D14AF567FC02885 | ApiSet: undefined
 */
export function _0x4D14AF567FC02885(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    Citizen.invokeNative('0x4D14AF567FC02885', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 * ```
 * Hash: 0x4BD66B4E3427689B | ApiSet: undefined
 */
export function _0x4BD66B4E3427689B(p0) {
    Citizen.invokeNative('0x4BD66B4E3427689B', p0);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x519928DF02EB5101 | ApiSet: undefined
 */
export function _0x519928DF02EB5101(p0) {
    Citizen.invokeNative('0x519928DF02EB5101', p0);
}
/**
 * ```
 * p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
 * p2: EMIT
 * p3: either 0.0f or 1.0f
 * ```
 * Hash: 0x4FB67D172C4476F3 | ApiSet: undefined
 */
export function _0x4FB67D172C4476F3(entity, p1, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x4FB67D172C4476F3', _entity, p1, p2, p3);
}
/**
 * Hash: 0x5C674EB487891F6B | ApiSet: undefined
 */
export function _0x5C674EB487891F6B() {
    return Citizen.invokeNative('0x5C674EB487891F6B');
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x5CD6A2CCE5087161 | ApiSet: undefined
 */
export function _0x5CD6A2CCE5087161(p0) {
    Citizen.invokeNative('0x5CD6A2CCE5087161', p0);
}
/**
 * Hash: 0x503941F65DBA24EC | ApiSet: undefined
 */
export function _0x503941F65DBA24EC(p0) {
    Citizen.invokeNative('0x503941F65DBA24EC', p0);
}
/**
 * Hash: 0x67B0778C62E74423 | ApiSet: undefined
 */
export function _0x67B0778C62E74423(p0) {
    Citizen.invokeNative('0x67B0778C62E74423', p0);
}
/**
 * ```
 * Closes the the binocular scaleform
 * ```
 * Hash: 0x5AC6E0FA028369DE | ApiSet: undefined
 */
export function _0x5AC6E0FA028369DE() {
    Citizen.invokeNative('0x5AC6E0FA028369DE');
}
/**
 * ```
 * Only used in R* SP Script spd_agnesdown1
 * ```
 * Hash: 0x5C9C3A466B3296A8 | ApiSet: undefined
 */
export function _0x5C9C3A466B3296A8(p0) {
    return Citizen.invokeNative('0x5C9C3A466B3296A8', p0);
}
/**
 * Hash: 0x62B9F9A1272AED80 | ApiSet: undefined
 */
export function _0x62B9F9A1272AED80(p0) {
    Citizen.invokeNative('0x62B9F9A1272AED80', p0);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0x71845905BCCDE781 | ApiSet: undefined
 */
export function _0x71845905BCCDE781(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    Citizen.invokeNative('0x71845905BCCDE781', effectNameHash);
}
/**
 * Hash: 0x735762E8D7573E42 | ApiSet: undefined
 */
export function _0x735762E8D7573E42(p0, p1, p2) {
    Citizen.invokeNative('0x735762E8D7573E42', p0, p1, p2);
}
/**
 * Hash: 0x6C03118E9E5C1A14 | ApiSet: undefined
 */
export function _0x6C03118E9E5C1A14(p0) {
    Citizen.invokeNative('0x6C03118E9E5C1A14', p0);
}
/**
 * ```
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 * _ENABLE_*
 * ```
 * Hash: 0x812C1563185C6FB2 | ApiSet: undefined
 */
export function _0x812C1563185C6FB2() {
    Citizen.invokeNative('0x812C1563185C6FB2');
}
/**
 * Hash: 0x8996FA6AD9FE4E90 | ApiSet: undefined
 */
export function _0x8996FA6AD9FE4E90(p0) {
    Citizen.invokeNative('0x8996FA6AD9FE4E90', p0);
}
/**
 * Hash: 0x815653A42C5ABE76 | ApiSet: undefined
 */
export function _0x815653A42C5ABE76() {
    Citizen.invokeNative('0x815653A42C5ABE76');
}
/**
 * Hash: 0x910E260AEAD855DE | ApiSet: undefined
 */
export function _0x910E260AEAD855DE() {
    Citizen.invokeNative('0x910E260AEAD855DE');
}
/**
 * Hash: 0x981C7D863980FA51 | ApiSet: undefined
 */
export function _0x981C7D863980FA51() {
    Citizen.invokeNative('0x981C7D863980FA51');
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9229ED770975BD9E | ApiSet: undefined
 */
export function _0x9229ED770975BD9E() {
    Citizen.invokeNative('0x9229ED770975BD9E');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x94B261F1F35293E1 | ApiSet: undefined
 */
export function _0x94B261F1F35293E1(p0) {
    Citizen.invokeNative('0x94B261F1F35293E1', p0);
}
/**
 * Hash: 0x9D1B0B5066205692 | ApiSet: undefined
 */
export function _0x9D1B0B5066205692() {
    Citizen.invokeNative('0x9D1B0B5066205692');
}
/**
 * Hash: 0x9F158A49B0D84C3C | ApiSet: undefined
 */
export function _0x9F158A49B0D84C3C(p0) {
    Citizen.invokeNative('0x9F158A49B0D84C3C', p0);
}
/**
 * Hash: 0xA04EF43030593ABC | ApiSet: undefined
 */
export function _0xA04EF43030593ABC(p0, p1) {
    Citizen.invokeNative('0xA04EF43030593ABC', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9F6D859C80708B26 | ApiSet: undefined
 */
export function _0x9F6D859C80708B26(p0, p1) {
    Citizen.invokeNative('0x9F6D859C80708B26', p0, p1);
}
/**
 * Hash: 0xA0F4D12D6042F6D5 | ApiSet: undefined
 */
export function _0xA0F4D12D6042F6D5(p0, p1) {
    Citizen.invokeNative('0xA0F4D12D6042F6D5', p0, p1);
}
/**
 * Hash: 0xA15CCAB8AD038291 | ApiSet: undefined
 */
export function _0xA15CCAB8AD038291(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xA15CCAB8AD038291', p0, p1, p2, p3);
}
/**
 * Hash: 0xA1A86055792FB249 | ApiSet: undefined
 */
export function _0xA1A86055792FB249(personaPhotoLocalCacheType) {
    Citizen.invokeNative('0xA1A86055792FB249', personaPhotoLocalCacheType);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xA201A3D0AC087C37 | ApiSet: undefined
 */
export function _0xA201A3D0AC087C37(effectName) {
    Citizen.invokeNative('0xA201A3D0AC087C37', effectName);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xB958D97A0DFAA0C2 | ApiSet: undefined
 */
export function _0xB958D97A0DFAA0C2(effectName) {
    return Citizen.invokeNative('0xB958D97A0DFAA0C2', effectName);
}
/**
 * ```
 * Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xC06F2F45A73EABCD | ApiSet: undefined
 */
export function _0xC06F2F45A73EABCD(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xC06F2F45A73EABCD', _entity);
}
/**
 * Hash: 0xA21AF60C9F99CCC5 | ApiSet: undefined
 */
export function _0xA21AF60C9F99CCC5() {
    Citizen.invokeNative('0xA21AF60C9F99CCC5');
}
/**
 * ```
 * _SET_D* or _SET_E*
 * ```
 * Hash: 0xB032C085D9A03907 | ApiSet: undefined
 */
export function _0xB032C085D9A03907() {
    Citizen.invokeNative('0xB032C085D9A03907');
}
/**
 * ```
 * Doesn't actually return anything.
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xC37792A3F9C90771 | ApiSet: undefined
 */
export function _0xC37792A3F9C90771() {
    return Citizen.invokeNative('0xC37792A3F9C90771');
}
/**
 * Hash: 0xC28F62AC9774FC1B | ApiSet: undefined
 */
export function _0xC28F62AC9774FC1B() {
    return Citizen.invokeNative('0xC28F62AC9774FC1B');
}
/**
 * Hash: 0xC489FE31AC726512 | ApiSet: undefined
 */
export function _0xC489FE31AC726512(p0, p1) {
    Citizen.invokeNative('0xC489FE31AC726512', p0, p1);
}
/**
 * Hash: 0xC8D0611D9A0CF5D3 | ApiSet: undefined
 */
export function _0xC8D0611D9A0CF5D3(p0) {
    Citizen.invokeNative('0xC8D0611D9A0CF5D3', p0);
}
/**
 * Hash: 0xCC3B787E73E64160 | ApiSet: undefined
 */
export function _0xCC3B787E73E64160(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xCC3B787E73E64160', p0, p1, p2, p3, p4);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xC76FC4C2FC5F4405 | ApiSet: undefined
 */
export function _0xC76FC4C2FC5F4405(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    Citizen.invokeNative('0xC76FC4C2FC5F4405', effectNameHash);
}
/**
 * ```
 * Only used in R* Script nb_stalking_hunter
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD1472AFF30C103D6 | ApiSet: undefined
 */
export function _0xD1472AFF30C103D6(p0) {
    Citizen.invokeNative('0xD1472AFF30C103D6', p0);
}
/**
 * Hash: 0xD543487A1F12828F | ApiSet: undefined
 */
export function _0xD543487A1F12828F(p0, p1, p2, p3) {
    Citizen.invokeNative('0xD543487A1F12828F', p0, p1, p2, p3);
}
/**
 * ```
 * Returns iNumPixels, iPixelsVisible
 * ```
 * Hash: 0xDFE332A5DA6FE7C9 | ApiSet: undefined
 */
export function _0xDFE332A5DA6FE7C9(iTrackedPoint) {
    return Citizen.invokeNative('0xDFE332A5DA6FE7C9', iTrackedPoint);
}
/**
 * Hash: 0xD9BC98B55BCFAA9B | ApiSet: undefined
 */
export function _0xD9BC98B55BCFAA9B(p0) {
    Citizen.invokeNative('0xD9BC98B55BCFAA9B', p0);
}
/**
 * Hash: 0xE63D68F455CA0B47 | ApiSet: undefined
 */
export function _0xE63D68F455CA0B47(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0xE63D68F455CA0B47', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xEB48CE48EEC41FD4 | ApiSet: undefined
 */
export function _0xEB48CE48EEC41FD4(p0) {
    Citizen.invokeNative('0xEB48CE48EEC41FD4', p0);
}
/**
 * Hash: 0xEC3F7F24EEEB3BA3 | ApiSet: undefined
 */
export function _0xEC3F7F24EEEB3BA3() {
    Citizen.invokeNative('0xEC3F7F24EEEB3BA3');
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xE75CDDEBF618C8FF | ApiSet: undefined
 */
export function _0xE75CDDEBF618C8FF(effectNameHash) {
    if (typeof effectNameHash === 'string')
        effectNameHash = this.getHashKey(effectNameHash);
    return Citizen.invokeNative('0xE75CDDEBF618C8FF', effectNameHash);
}
/**
 * Hash: 0xEC3D8C228FE553D7 | ApiSet: undefined
 */
export function _0xEC3D8C228FE553D7(p0) {
    return Citizen.invokeNative('0xEC3D8C228FE553D7', p0);
}
/**
 * Hash: 0xF5793BB386E1FF9C | ApiSet: undefined
 */
export function _0xF5793BB386E1FF9C(p0) {
    Citizen.invokeNative('0xF5793BB386E1FF9C', p0);
}
/**
 * Hash: 0xF2F543D48F319A3A | ApiSet: undefined
 */
export function _0xF2F543D48F319A3A() {
    Citizen.invokeNative('0xF2F543D48F319A3A');
}
/**
 * ```
 * _DISABLE_*
 * ```
 * Hash: 0xFB680A9B33D0EDBE | ApiSet: undefined
 */
export function _0xFB680A9B33D0EDBE(p0) {
    Citizen.invokeNative('0xFB680A9B33D0EDBE', p0);
}
/**
 * ```
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xFBF161FCFEC8589E | ApiSet: undefined
 */
export function _0xFBF161FCFEC8589E(effectName, p1, p2) {
    return Citizen.invokeNative('0xFBF161FCFEC8589E', effectName, p1, p2);
}
/**
 * Hash: 0xFC9B53C072F418E0 | ApiSet: undefined
 */
export function _0xFC9B53C072F418E0() {
    return Citizen.invokeNative('0xFC9B53C072F418E0');
}
/**
 * ```
 * R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
 * ```
 * Hash: 0xFD05B1DDE83749FA | ApiSet: undefined
 */
export function _0xFD05B1DDE83749FA(p0) {
    return Citizen.invokeNative('0xFD05B1DDE83749FA', p0);
}
/**
 * Hash: 0xFF8018C778349234 | ApiSet: undefined
 */
export function _0xFF8018C778349234(p0) {
    Citizen.invokeNative('0xFF8018C778349234', p0);
}
/**
 * Hash: 0xC2B8164C3BE871A4 | ApiSet: undefined
 */
export function pedshotFinishCleanupData() {
    PedshotFinishCleanupData();
}
/**
 * ```
 * Returns whether the 'killFX' setting is enabled.
 * ANIMPOSTFX_*
 * ```
 * Hash: 0xFF584F097C17FA8F | ApiSet: undefined
 */
export function _0xFF584F097C17FA8F() {
    return Citizen.invokeNative('0xFF584F097C17FA8F');
}
/**
 * Hash: 0xD9C24F53631F2372 | ApiSet: undefined
 */
export function pedshotGeneratePersonaPhoto(texture, ped, playerSlot) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedshotGeneratePersonaPhoto(texture, _ped, playerSlot);
}
/**
 * Hash: 0x55285F885F662169 | ApiSet: undefined
 */
export function pedshotInitCleanupData() {
    PedshotInitCleanupData();
}
/**
 * Hash: 0x196D3ACBEBA4A44B | ApiSet: undefined
 */
export function pedshotSetPersonaPhotoType(personaPhotoLocalCacheType) {
    PedshotSetPersonaPhotoType(personaPhotoLocalCacheType);
}
/**
 * Hash: 0xAF6E67D073D2DCE2 | ApiSet: undefined
 */
export function pedshotIsAvailable() {
    return PedshotIsAvailable();
}
/**
 * Hash: 0x49A720552EB0BB88 | ApiSet: undefined
 */
export function removeDecal(decal) {
    RemoveDecal(decal);
}
/**
 * Hash: 0x3E2FDDBE435A8787 | ApiSet: undefined
 */
export function pedshotPreviousPersonaPhotoDataCleanup() {
    PedshotPreviousPersonaPhotoDataCleanup();
}
/**
 * Hash: 0xFB8972BAE0013140 | ApiSet: undefined
 */
export function removeDecalsFromObject(obj) {
    RemoveDecalsFromObject(obj);
}
/**
 * Hash: 0xA42EDF1E88734A7E | ApiSet: undefined
 */
export function queueOperationToCreateSortedListOfPhotos() {
    return QueueOperationToCreateSortedListOfPhotos();
}
/**
 * ```
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 * ```
 * Hash: 0x86DE59FA02902B40 | ApiSet: undefined
 */
export function removeDecalsInRange(position, range) {
    RemoveDecalsInRange(position.x, position.y, position.z, range);
}
/**
 * Hash: 0x459598F579C98929 | ApiSet: undefined
 */
export function removeParticleFx(ptfxHandle, p1) {
    RemoveParticleFx(ptfxHandle, p1);
}
/**
 * Hash: 0x56A786E87FF53478 | ApiSet: undefined
 */
export function removeEntityFromEntityMask(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveEntityFromEntityMask(_entity);
}
/**
 * Hash: 0x87B5905ECA623B68 | ApiSet: undefined
 */
export function removeParticleFxInRange(position, radius) {
    RemoveParticleFxInRange(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0xAE7BF7CA9E4BA48D | ApiSet: undefined
 */
export function removeGrassCullSphere(handle) {
    RemoveGrassCullSphere(handle);
}
/**
 * ```
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
 * ```
 * Hash: 0xAF4D239B8903FCBE | ApiSet: undefined
 */
export function resetEntityAura() {
    ResetEntityAura();
}
/**
 * Hash: 0x92884B4A49D81325 | ApiSet: undefined
 */
export function removeParticleFxFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveParticleFxFromEntity(_entity);
}
/**
 * ```
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 * ```
 * Hash: 0x274B3DABF7E72DEF | ApiSet: undefined
 */
export function resetParticleFxOverride(name) {
    ResetParticleFxOverride(name);
}
/**
 * Hash: 0x9CF1836C03FB67A2 | ApiSet: undefined
 */
export function removeVegModifierSphere(vegModifierHandle, p1) {
    RemoveVegModifierSphere(vegModifierHandle, p1);
}
/**
 * Hash: 0xCCD9AAD85E1B559E | ApiSet: undefined
 */
export function resetPausedRenderphases() {
    ResetPausedRenderphases();
}
/**
 * ```
 * Sets an unknown value related to timecycles.
 * ```
 * Hash: 0x297B72E2AF094742 | ApiSet: undefined
 */
export function resetAdaptation(unk) {
    ResetAdaptation(unk);
}
/**
 * Hash: 0x57639FD876B68A91 | ApiSet: undefined
 */
export function saveHighQualityPhoto(unused) {
    return SaveHighQualityPhoto(unused);
}
/**
 * ```
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 * ```
 * Hash: 0xB2797619A7C7747B | ApiSet: undefined
 */
export function setArtificialLightsState(state) {
    SetArtificialLightsState(state);
}
/**
 * ```
 * Sets the checkpoint icon color.
 * ```
 * Hash: 0x99AFF17222D4DEB4 | ApiSet: undefined
 */
export function setCheckpointRgba2(checkpoint, red, green, blue, alpha) {
    SetCheckpointRgba2(checkpoint, red, green, blue, alpha);
}
/**
 * ```
 * Sets the checkpoint color.
 * ```
 * Hash: 0xCAAFC225E33B1D15 | ApiSet: undefined
 */
export function setCheckpointRgba(checkpoint, red, green, blue, alpha) {
    SetCheckpointRgba(checkpoint, red, green, blue, alpha);
}
/**
 * Hash: 0xB8C984C0D47F4F07 | ApiSet: undefined
 */
export function setCloudLayer(x, y, p2) {
    SetCloudLayer(x, y, p2);
}
/**
 * Hash: 0xC332C91388F5580B | ApiSet: undefined
 */
export function setCloudHeight(height) {
    SetCloudHeight(height);
}
/**
 * ```
 * Only used in finale2, smuggler2, winter4
 * _SET_CLOUD_A* - _SET_CLOUD_H*
 * ```
 * Hash: 0x10C1767B93257480 | ApiSet: undefined
 */
export function setCloudPosition(position) {
    SetCloudPosition(position.x, position.y, position.z);
}
/**
 * Hash: 0xFE7966DF01452F32 | ApiSet: undefined
 */
export function setCloudNoise(position) {
    SetCloudNoise(position.x, position.y, position.z);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x53ED07BF368EDA59 | ApiSet: undefined
 */
export function setDisablePetrolDecalsIgnitingThisFrame() {
    SetDisablePetrolDecalsIgnitingThisFrame();
}
/**
 * Hash: 0x9937FACBBF267244 | ApiSet: undefined
 */
export function setDistrictPhotoTakenStat(p0) {
    SetDistrictPhotoTakenStat(p0);
}
/**
 * ```
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__ACTIVATE_STAT_FLAG - Quite and Inspiration Aura equip
 * Params: 0f, 2f, 2f
 * ```
 * Hash: 0x249CD6B7285536F2 | ApiSet: undefined
 */
export function setEntityAura(p0, p1, p2) {
    SetEntityAura(p0, p1, p2);
}
/**
 * Hash: 0xE92012611461A42A | ApiSet: undefined
 */
export function setEntityMaskLayers(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return SetEntityMaskLayers(_entity);
}
/**
 * ```
 * Only used in guama1 R* SP Script while spawning the ship
 * _SET_ENTITY_QUATERNION_* - SET_ENTITY_RENDER_*
 * ```
 * Hash: 0xC38B4952B728397A | ApiSet: undefined
 */
export function setEntityRenderGuarmaShip(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetEntityRenderGuarmaShip(_vehicle, toggle);
}
/**
 * ```
 * Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
 * ```
 * Hash: 0x27219300C36A8D40 | ApiSet: undefined
 */
export function setGrassCullSphere(position, p3, p4) {
    return SetGrassCullSphere(position.x, position.y, position.z, p3, p4);
}
/**
 * Hash: 0xCC23AA1A7CBFE840 | ApiSet: undefined
 */
export function setHidofOverride(p0, p1, p2, p3, p4, p5) {
    SetHidofOverride(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x07C0F87AAC57F2E4 | ApiSet: undefined
 */
export function setLightsIntensityForEntity(entity, intensity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetLightsIntensityForEntity(_entity, intensity);
}
/**
 * ```
 * https://gfycat.com/meagerfaireyra
 * ```
 * Hash: 0x6EC2A67962296F49 | ApiSet: undefined
 */
export function setLightsColorForEntity(entity, red, green, blue) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetLightsColorForEntity(_entity, red, green, blue);
}
/**
 * ```
 * type must be less than or equal to 20
 * ```
 * Hash: 0xAB72C67163DC4DB4 | ApiSet: undefined
 */
export function setLightsTypeForEntity(entity, type) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetLightsTypeForEntity(_entity, type);
}
/**
 * ```
 * Related to Campfires.
 * p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
 * ```
 * Hash: 0x3C61B52B00848C26 | ApiSet: undefined
 */
export function setParticleFxAmbientColour(entity, p1, r, g, b) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetParticleFxAmbientColour(_entity, p1, r, g, b);
}
/**
 * Hash: 0x2A1625858887D4E6 | ApiSet: undefined
 */
export function setParticleFxFootLodrangeScale(p0) {
    SetParticleFxFootLodrangeScale(p0);
}
/**
 * Hash: 0x8DCCC98DC0DBF9E4 | ApiSet: undefined
 */
export function setParticleFxBulletImpactLodrangeScale(p0) {
    SetParticleFxBulletImpactLodrangeScale(p0);
}
/**
 * Hash: 0xA53C8D7D0F8C74D0 | ApiSet: undefined
 */
export function setParticleFxBulletImpactScale(scale) {
    SetParticleFxBulletImpactScale(scale);
}
/**
 * Hash: 0x88786E76234F7054 | ApiSet: undefined
 */
export function setParticleFxLoopedAlpha(ptfxHandle, alpha) {
    SetParticleFxLoopedAlpha(ptfxHandle, alpha);
}
/**
 * Hash: 0x3674F389B0FACD80 | ApiSet: undefined
 */
export function setParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork) {
    SetParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork);
}
/**
 * Hash: 0x239879FC61C610CC | ApiSet: undefined
 */
export function setParticleFxLoopedColour(ptfxHandle, r, g, b, p4) {
    SetParticleFxLoopedColour(ptfxHandle, r, g, b, p4);
}
/**
 * Hash: 0xD3A4A95FC94FE83B | ApiSet: undefined
 */
export function setParticleFxLoopedOffsets(ptfxHandle, position, rotX, rotY, rotZ) {
    SetParticleFxLoopedOffsets(ptfxHandle, position.x, position.y, position.z, rotX, rotY, rotZ);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE8A35938A7026CEA | ApiSet: undefined
 */
export function setParticleFxNonLoopedAlpha(alpha) {
    SetParticleFxNonLoopedAlpha(alpha);
}
/**
 * Hash: 0x9B04D471DA0AD7AA | ApiSet: undefined
 */
export function setParticleFxLoopedFarClipDist(ptfxHandle, range) {
    SetParticleFxLoopedFarClipDist(ptfxHandle, range);
}
/**
 * Hash: 0x60B85BED6577A35B | ApiSet: undefined
 */
export function setParticleFxNonLoopedColour(r, g, b) {
    SetParticleFxNonLoopedColour(r, g, b);
}
/**
 * Hash: 0x1A9E1C0D98D093B7 | ApiSet: undefined
 */
export function setParticleFxLoopedScale(ptfxHandle, scale) {
    SetParticleFxLoopedScale(ptfxHandle, scale);
}
/**
 * Hash: 0xBE711A169E9C7E95 | ApiSet: undefined
 */
export function setParticleFxOverride(oldAsset, newAsset) {
    SetParticleFxOverride(oldAsset, newAsset);
}
/**
 * ```
 * _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
 * ```
 * Hash: 0x9DDC222D85D5AF2A | ApiSet: undefined
 */
export function setParticleFxLoopedUpdateDistantSmoke(ptfxHandle, scalar) {
    SetParticleFxLoopedUpdateDistantSmoke(ptfxHandle, scalar);
}
/**
 * Hash: 0xFA91736933AB3D93 | ApiSet: undefined
 */
export function setPhotoInPhotomodeStat(p0) {
    SetPhotoInPhotomodeStat(p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x56C392C2BD78B024 | ApiSet: undefined
 */
export function setParticleFxNonLoopedEmitterScale(p0, p1, p2) {
    SetParticleFxNonLoopedEmitterScale(p0, p1, p2);
}
/**
 * Hash: 0x8B3296278328B5EB | ApiSet: undefined
 */
export function setPhotoOverlayEffectStat(p0) {
    SetPhotoOverlayEffectStat(p0);
}
/**
 * ```
 * Enables/disables a kind of 'shiny' effect on metals.
 * ```
 * Hash: 0x72E30372E7CC4415 | ApiSet: undefined
 */
export function setPearlescentFxEnabled(object, toggle) {
    SetPearlescentFxEnabled(object, toggle);
}
/**
 * ```
 * https://imgur.com/a/I2swSDJ
 * ```
 * Hash: 0x7DFB49BCDB73089A | ApiSet: undefined
 */
export function setPickupLight(object, toggle) {
    SetPickupLight(object, toggle);
}
/**
 * Hash: 0x2705D18C11B61046 | ApiSet: undefined
 */
export function setPhotoSelfStat(p0) {
    SetPhotoSelfStat(p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x75D568607909333E | ApiSet: undefined
 */
export function setPlayerAppearInPhoto(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerAppearInPhoto(_player);
}
/**
 * Hash: 0x8E6AFF353C09652E | ApiSet: undefined
 */
export function setPhotoStudioStat(p0) {
    SetPhotoStudioStat(p0);
}
/**
 * Hash: 0x564837D4A9EDE296 | ApiSet: undefined
 */
export function setPosseIdForPhoto(posseId) {
    SetPosseIdForPhoto(posseId);
}
/**
 * Hash: 0xD1031B83AC093BC7 | ApiSet: undefined
 */
export function setRegionPhotoTakenStat(p0) {
    SetRegionPhotoTakenStat(p0);
}
/**
 * ```
 * state: false disables artificial interior light sources for specific proxyInteriorIndex
 * ```
 * Hash: 0xBFCB17895BB99E4E | ApiSet: undefined
 */
export function setProxyInteriorIndexArtificialLightsState(proxyInteriorIndex, state) {
    SetProxyInteriorIndexArtificialLightsState(proxyInteriorIndex, state);
}
/**
 * ```
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
 * ```
 * Hash: 0x906B86E6D7896B9E | ApiSet: undefined
 */
export function setScriptGfxDrawBehindPausemenu(toggle) {
    SetScriptGfxDrawBehindPausemenu(toggle);
}
/**
 * Hash: 0x6E8EB45A4F4460EB | ApiSet: undefined
 */
export function setSniperGlintsEnabled(enabled) {
    SetSniperGlintsEnabled(enabled);
}
/**
 * ```
 * enum class eSnowCoverageType
 * {
 * Primary,
 * Secondary,
 * Xmas,
 * XmasSecondary // since b1232
 * };
 * ```
 * Hash: 0xF02A9C330BBFC5C7 | ApiSet: undefined
 */
export function setSnowCoverageType(type) {
    SetSnowCoverageType(type);
}
/**
 * ```
 * Sets the draw order for script draw commands.
 * ```
 * Hash: 0xCFCC78391C8B3814 | ApiSet: undefined
 */
export function setScriptGfxDrawOrder(drawOrder) {
    SetScriptGfxDrawOrder(drawOrder);
}
/**
 * Hash: 0x8952E857696B8A79 | ApiSet: undefined
 */
export function setStatePhotoTakenStat(p0) {
    SetStatePhotoTakenStat(p0);
}
/**
 * Hash: 0xFDB74C9CC54C3F37 | ApiSet: undefined
 */
export function setTimecycleModifierStrength(strength) {
    SetTimecycleModifierStrength(strength);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
 * ```
 * Hash: 0xFA08722A5EA82DA7 | ApiSet: undefined
 */
export function setTimecycleModifier(modifierName) {
    SetTimecycleModifier(modifierName);
}
/**
 * Hash: 0xF6FDA3D4404D4F2C | ApiSet: undefined
 */
export function setTrackedPointInfo(point, position, radius) {
    SetTrackedPointInfo(point, position.x, position.y, position.z, radius);
}
/**
 * Hash: 0xBB6C707F20D955D4 | ApiSet: undefined
 */
export function setTransitionOutOfTimecycleModifier(strength) {
    SetTransitionOutOfTimecycleModifier(strength);
}
/**
 * Hash: 0xFF927A09F481D80C | ApiSet: undefined
 */
export function setTransitionTimecycleModifier(modifierName, transitionBlend) {
    SetTransitionTimecycleModifier(modifierName, transitionBlend);
}
/**
 * Hash: 0x593FAF7FC9401A56 | ApiSet: undefined
 */
export function setTvChannel(channel) {
    SetTvChannel(channel);
}
/**
 * ```
 * Probably changes tvs from being a 3d audio to being "global" audio
 * ```
 * Hash: 0x64437C98FCC5F291 | ApiSet: undefined
 */
export function setTvAudioFrontend(toggle) {
    SetTvAudioFrontend(toggle);
}
/**
 * Hash: 0x73A97068787D7231 | ApiSet: undefined
 */
export function setTvVolume(volume) {
    SetTvVolume(volume);
}
/**
 * Hash: 0xDEC6B25F5DC8925B | ApiSet: undefined
 */
export function setTvChannelPlaylist(tvChannel, playlistName, restart) {
    SetTvChannelPlaylist(tvChannel, playlistName, restart);
}
/**
 * Hash: 0x9C56621462FFE7A6 | ApiSet: undefined
 */
export function startNetworkedParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartNetworkedParticleFxLoopedOnEntityBone(effectName, _entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0x8F90AB32E1944BDE | ApiSet: undefined
 */
export function startNetworkedParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartNetworkedParticleFxLoopedOnEntity(effectName, _entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
 * ```
 * Hash: 0xBA32867E86125D3A | ApiSet: undefined
 */
export function startParticleFxLoopedAtCoord(effectName, position, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11) {
    return StartParticleFxLoopedAtCoord(effectName, position.x, position.y, position.z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11);
}
/**
 * Hash: 0xFB97618457994A62 | ApiSet: undefined
 */
export function startNetworkedParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
    return StartNetworkedParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0xE6CFE43937061143 | ApiSet: undefined
 */
export function startNetworkedParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartNetworkedParticleFxNonLoopedOnEntity(effectName, _entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ);
}
/**
 * Hash: 0xD3BA6EC7F2FBD5E9 | ApiSet: undefined
 */
export function startParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartParticleFxLoopedOnEntityBone(effectName, _entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0xBD41E1440CE39800 | ApiSet: undefined
 */
export function startParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartParticleFxLoopedOnEntity(effectName, _entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0xE689C1B1432BB8AF | ApiSet: undefined
 */
export function startParticleFxLoopedOnPedBone(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return StartParticleFxLoopedOnPedBone(effectName, _ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
 * ```
 * Hash: 0x2E80BF72EF7C87AC | ApiSet: undefined
 */
export function startParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis) {
    return StartParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis);
}
/**
 * Hash: 0x46F246D6504F0031 | ApiSet: undefined
 */
export function startPetrolTrailDecals(p0, p1) {
    StartPetrolTrailDecals(p0, p1);
}
/**
 * Hash: 0xFF4C64C513388C12 | ApiSet: undefined
 */
export function startParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartParticleFxNonLoopedOnEntity(effectName, _entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ);
}
/**
 * Hash: 0x22970F3A088B133B | ApiSet: undefined
 */
export function stopParticleFxLooped(ptfxHandle, p1) {
    StopParticleFxLooped(ptfxHandle, p1);
}
/**
 * Hash: 0xBDBACB52A03CC760 | ApiSet: undefined
 */
export function updateLightsOnEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    UpdateLightsOnEntity(_entity);
}
/**
 * Hash: 0x3FAA72BD940C3AC0 | ApiSet: undefined
 */
export function startParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return StartParticleFxNonLoopedOnPedBone(effectName, _ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ);
}
/**
 * ```
 * fxName: see data_0/data/effects/ptfx/fxlists/
 * ```
 * Hash: 0xA10DB07FC234DD12 | ApiSet: undefined
 */
export function useParticleFxAsset(fxName) {
    UseParticleFxAsset(fxName);
}
/**
 * Hash: 0xC695870B8A149B96 | ApiSet: undefined
 */
export function startParticleFxNonLoopedOnPedBone2(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return StartParticleFxNonLoopedOnPedBone2(effectName, _ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ);
}
/**
 * Hash: 0xEF9E1C45732F55FA | ApiSet: undefined
 */
export function togglePausedRenderphases(toggle) {
    TogglePausedRenderphases(toggle);
}
/**
 * Hash: 0x823BF7B1DF613A21 | ApiSet: undefined
 */
export function busyspinnerIsOn() {
    return BusyspinnerIsOn();
}
/**
 * Hash: 0x7F78CD75CC4539E4 | ApiSet: undefined
 */
export function busyspinnerSetText(text) {
    BusyspinnerSetText(text);
}
/**
 * Hash: 0x30996422DF1EE561 | ApiSet: undefined
 */
export function allowPauseWhenNotInStateOfPlayThisFrame() {
    AllowPauseWhenNotInStateOfPlayThisFrame();
}
/**
 * ```
 * Removes the loading prompt at the bottom right of the screen.
 * ```
 * Hash: 0x58F441B90EA84D06 | ApiSet: undefined
 */
export function busyspinnerOff() {
    BusyspinnerOff();
}
/**
 * Hash: 0x916ED8321F087059 | ApiSet: undefined
 */
export function clearAllHelpMessages() {
    ClearAllHelpMessages();
}
/**
 * Hash: 0x53CB4B502E1C57EA | ApiSet: undefined
 */
export function createFakeMpGamerTag(ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CreateFakeMpGamerTag(_ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag);
}
/**
 * Hash: 0xD877AF112AD2B41B | ApiSet: undefined
 */
export function createMpGamerTag(player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return CreateMpGamerTag(_player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag);
}
/**
 * Hash: 0x56CE42A528156A67 | ApiSet: undefined
 */
export function disableFrontendThisFrame() {
    DisableFrontendThisFrame();
}
/**
 * Hash: 0xE961BF23EAB76B12 | ApiSet: undefined
 */
export function createMpGamerTagOnEntity(entity, text) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return CreateMpGamerTagOnEntity(_entity, text);
}
/**
 * ```
 * Disables reduced time scale while menus such as weapon wheel and satchel are open.
 * ```
 * Hash: 0xC5C7A2F6567FCCBC | ApiSet: undefined
 */
export function disableReducedMenuTimeScale() {
    DisableReducedMenuTimeScale();
}
/**
 * Hash: 0x8BC7C1F929D07BF3 | ApiSet: undefined
 */
export function disableHudContext(component) {
    if (typeof component === 'string')
        component = this.getHashKey(component);
    DisableHudContext(component);
}
/**
 * ```
 * If Hud should be displayed
 * ```
 * Hash: 0xD63FE3AF9FB3D53F | ApiSet: undefined
 */
export function displayHud(toggle) {
    DisplayHud(toggle);
}
/**
 * ```
 * nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
 * ```
 * Hash: 0xD79334A4BB99BAD1 | ApiSet: undefined
 */
export function displayText(text, xPos, yPos) {
    DisplayText(text, xPos, yPos);
}
/**
 * Hash: 0x2C729F2B94CEA911 | ApiSet: undefined
 */
export function doesTextBlockExist(textDatabase) {
    return DoesTextBlockExist(textDatabase);
}
/**
 * ```
 * Checks if the passed gxt name exists in the game files.
 * ```
 * Hash: 0x73C258C68D6F55B6 | ApiSet: undefined
 */
export function doesTextLabelExist(label) {
    return DoesTextLabelExist(label);
}
/**
 * Hash: 0xC9CAEAEEC1256E54 | ApiSet: undefined
 */
export function enableHudContextThisFrame(component) {
    if (typeof component === 'string')
        component = this.getHashKey(component);
    EnableHudContextThisFrame(component);
}
/**
 * ```
 * Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
 * ```
 * Hash: 0x9D7E12EC6A1EE4E5 | ApiSet: undefined
 */
export function getCharacterFromAudioConversationFilename(text, position, length) {
    return GetCharacterFromAudioConversationFilename(text, position, length);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
 * ```
 * Hash: 0x4CC5F2FC1332577F | ApiSet: undefined
 */
export function enableHudContext(component) {
    if (typeof component === 'string')
        component = this.getHashKey(component);
    EnableHudContext(component);
}
/**
 * ```
 * Gets a string literal from a label name.
 * ```
 * Hash: 0xCFEDCCAD3C5BA90D | ApiSet: undefined
 */
export function getFilenameForAudioConversation(labelName) {
    return GetFilenameForAudioConversation(labelName);
}
/**
 * ```
 * Enables reduced time scale while menus such as weapon wheel and satchel are open.
 * ```
 * Hash: 0x26F6BBEA2CE3E3DC | ApiSet: undefined
 */
export function enableReducedMenuTimeScale() {
    EnableReducedMenuTimeScale();
}
/**
 * Hash: 0xFBBF5943E4C2C992 | ApiSet: undefined
 */
export function forceCloseTextInputBox() {
    ForceCloseTextInputBox();
}
/**
 * ```
 * colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
 * ```
 * Hash: 0xB981DD2DFAF9B1C9 | ApiSet: undefined
 */
export function getColorFromName(colorNameHash) {
    if (typeof colorNameHash === 'string')
        colorNameHash = this.getHashKey(colorNameHash);
    return GetColorFromName(colorNameHash);
}
/**
 * Hash: 0xB39C81628EF10B42 | ApiSet: undefined
 */
export function getHudScreenPositionFromWorldPosition(worldX, worldY, worldZ) {
    return GetHudScreenPositionFromWorldPosition(worldX, worldY, worldZ);
}
/**
 * Hash: 0x3429670F9B9EF2D3 | ApiSet: undefined
 */
export function getLabelText2(label) {
    return GetLabelText2(label);
}
/**
 * ```
 * Returns the length of the string passed (much like strlen).
 * ```
 * Hash: 0x481FBF588B0B76DB | ApiSet: undefined
 */
export function getLengthOfLiteralString(string) {
    return GetLengthOfLiteralString(string);
}
/**
 * Hash: 0xDC5AD6B7AB8184F5 | ApiSet: undefined
 */
export function getLengthOfLiteralStringInBytes(string) {
    return GetLengthOfLiteralStringInBytes(string);
}
/**
 * Hash: 0xB6762A85EE29AA60 | ApiSet: undefined
 */
export function getNamedRendertargetRenderId(name) {
    return GetNamedRendertargetRenderId(name);
}
/**
 * ```
 * Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
 * ```
 * Hash: 0xD8402B858F4DDD88 | ApiSet: undefined
 */
export function getTextSubstring2(text, length) {
    return GetTextSubstring2(text, length);
}
/**
 * ```
 * Returns the label text given the hash.
 * ```
 * Hash: 0xBD5DD5EAE2B6CE14 | ApiSet: undefined
 */
export function getStringFromHashKey(labelHash) {
    if (typeof labelHash === 'string')
        labelHash = this.getHashKey(labelHash);
    return GetStringFromHashKey(labelHash);
}
/**
 * Hash: 0x36CDD81627A6FCD2 | ApiSet: undefined
 */
export function hideHudAndRadarThisFrame() {
    HideHudAndRadarThisFrame();
}
/**
 * Hash: 0xBF4F34A85CA2970D | ApiSet: undefined
 */
export function hideHudThisFrame() {
    HideHudThisFrame();
}
/**
 * Hash: 0xEA600AABAF4B9084 | ApiSet: undefined
 */
export function hideLoadingOnFadeThisFrame() {
    HideLoadingOnFadeThisFrame();
}
/**
 * Hash: 0x71B72B478F8189DC | ApiSet: undefined
 */
export function isHudHidden() {
    return IsHudHidden();
}
/**
 * Hash: 0x502E1591A504F843 | ApiSet: undefined
 */
export function isMpGamerTagActiveOnEntity(gamerTagId, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsMpGamerTagActiveOnEntity(gamerTagId, _entity);
}
/**
 * Hash: 0x6E1C31E14C7A5F97 | ApiSet: undefined
 */
export function isMpGamerTagActive(gamerTagId) {
    return IsMpGamerTagActive(gamerTagId);
}
/**
 * Hash: 0x3EE32F7964C40FE6 | ApiSet: undefined
 */
export function isNamedRendertargetRegistered(name) {
    return IsNamedRendertargetRegistered(name);
}
/**
 * Hash: 0xBC19069D5FBB5C46 | ApiSet: undefined
 */
export function isMultiplayerChatActive() {
    return IsMultiplayerChatActive();
}
/**
 * Hash: 0x707032835FF09AE7 | ApiSet: undefined
 */
export function isNamedRendertargetLinked(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return IsNamedRendertargetLinked(modelHash);
}
/**
 * Hash: 0x1B82FD5FFA4D666E | ApiSet: undefined
 */
export function isRadarHidden() {
    return IsRadarHidden();
}
/**
 * ```
 * Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
 * ```
 * Hash: 0x535384D6067BA42E | ApiSet: undefined
 */
export function isPauseMenuActive() {
    return IsPauseMenuActive();
}
/**
 * Hash: 0x66F35DD9D2B58579 | ApiSet: undefined
 */
export function isRadarHiddenByScript() {
    return IsRadarHiddenByScript();
}
/**
 * Hash: 0x81E47F0EE1F2B21E | ApiSet: undefined
 */
export function isRadarPreferenceSwitchedOn() {
    return IsRadarPreferenceSwitchedOn();
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x7C4AC9573587F2DF | ApiSet: undefined
 */
export function isSubtitlePreferenceSwitchedOn() {
    return IsSubtitlePreferenceSwitchedOn();
}
/**
 * Hash: 0xCF782691D91F270E | ApiSet: undefined
 */
export function journalCanWriteEntry(p0) {
    return JournalCanWriteEntry(p0);
}
/**
 * Hash: 0xF402978DE6F88D6E | ApiSet: undefined
 */
export function journalClearAllProgress() {
    JournalClearAllProgress();
}
/**
 * Hash: 0xE65B5DE53351BE22 | ApiSet: undefined
 */
export function journalGetEntryCount() {
    return JournalGetEntryCount();
}
/**
 * Hash: 0x3D16ABD7A1FD8C96 | ApiSet: undefined
 */
export function journalGetEntryAtIndex(p0) {
    return JournalGetEntryAtIndex(p0);
}
/**
 * Hash: 0x5514C3E60673530F | ApiSet: undefined
 */
export function journalGetEntryInfo(p0, p1) {
    return JournalGetEntryInfo(p0, p1);
}
/**
 * Hash: 0xCB5945E1B855852F | ApiSet: undefined
 */
export function journalGetGrimeAtIndex(p0) {
    return JournalGetGrimeAtIndex(p0);
}
/**
 * Hash: 0xE4509BABE59BD24E | ApiSet: undefined
 */
export function journalMarkRead(p0) {
    JournalMarkRead(p0);
}
/**
 * Hash: 0x62CC549B3B8EA2AA | ApiSet: undefined
 */
export function journalGetTextureWithLayout(p0, p1, p2) {
    return JournalGetTextureWithLayout(p0, p1, p2);
}
/**
 * Hash: 0x6DFDD665E416B093 | ApiSet: undefined
 */
export function journalWriteEntry(p0) {
    JournalWriteEntry(p0);
}
/**
 * Hash: 0x2F506B8556242DDB | ApiSet: undefined
 */
export function linkNamedRendertarget(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    LinkNamedRendertarget(modelHash);
}
/**
 * Hash: 0xFFF6579CF0139FCE | ApiSet: undefined
 */
export function mpGamerTagEnableReviveTopIcon(gamerTagId) {
    MpGamerTagEnableReviveTopIcon(gamerTagId);
}
/**
 * Hash: 0x1F9A64C2804B3471 | ApiSet: undefined
 */
export function mpGamerTagDisableReviveTopIcon(gamerTagId) {
    MpGamerTagDisableReviveTopIcon(gamerTagId);
}
/**
 * Hash: 0x052D4AC0922AF91A | ApiSet: undefined
 */
export function _0x052D4AC0922AF91A(p0, p1) {
    Citizen.invokeNative('0x052D4AC0922AF91A', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x066725A9D52B3641 | ApiSet: undefined
 */
export function _0x066725A9D52B3641() {
    return Citizen.invokeNative('0x066725A9D52B3641');
}
/**
 * Hash: 0x160825DADF1B04B3 | ApiSet: undefined
 */
export function _0x160825DADF1B04B3() {
    Citizen.invokeNative('0x160825DADF1B04B3');
}
/**
 * Hash: 0x0501D52D24EA8934 | ApiSet: undefined
 */
export function _0x0501D52D24EA8934(p0) {
    return Citizen.invokeNative('0x0501D52D24EA8934', p0);
}
/**
 * Hash: 0x100157D6D7FE32CA | ApiSet: undefined
 */
export function _0x100157D6D7FE32CA(p0, p1) {
    return Citizen.invokeNative('0x100157D6D7FE32CA', p0, p1);
}
/**
 * Hash: 0x28AE29D909C8FDCE | ApiSet: undefined
 */
export function _0x28AE29D909C8FDCE(p0) {
    return Citizen.invokeNative('0x28AE29D909C8FDCE', p0);
}
/**
 * Hash: 0x3FE4FB41EF7D2196 | ApiSet: undefined
 */
export function _0x3FE4FB41EF7D2196(p0) {
    Citizen.invokeNative('0x3FE4FB41EF7D2196', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x2F7BB105144ACF30 | ApiSet: undefined
 */
export function _0x2F7BB105144ACF30() {
    Citizen.invokeNative('0x2F7BB105144ACF30');
}
/**
 * Hash: 0x53CE46C01A089DA1 | ApiSet: undefined
 */
export function _0x53CE46C01A089DA1(prompt, p1) {
    Citizen.invokeNative('0x53CE46C01A089DA1', prompt, p1);
}
/**
 * Hash: 0x5651516D947ABC53 | ApiSet: undefined
 */
export function _0x5651516D947ABC53() {
    Citizen.invokeNative('0x5651516D947ABC53');
}
/**
 * Hash: 0x806862E5D266CF38 | ApiSet: undefined
 */
export function _0x806862E5D266CF38(p0, p1, p2) {
    return Citizen.invokeNative('0x806862E5D266CF38', p0, p1, p2);
}
/**
 * Hash: 0x7EC0D68233E391AC | ApiSet: undefined
 */
export function _0x7EC0D68233E391AC(p0) {
    return Citizen.invokeNative('0x7EC0D68233E391AC', p0);
}
/**
 * Hash: 0x8A59D44189AF2BC5 | ApiSet: undefined
 */
export function _0x8A59D44189AF2BC5(p0, p1) {
    Citizen.invokeNative('0x8A59D44189AF2BC5', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x8B55B324A9123F6B | ApiSet: undefined
 */
export function _0x8B55B324A9123F6B(groupId, volume, p2, p3, p4, p5) {
    return Citizen.invokeNative('0x8B55B324A9123F6B', groupId, volume, p2, p3, p4, p5);
}
/**
 * Hash: 0x9C409BBC492CB5B1 | ApiSet: undefined
 */
export function _0x9C409BBC492CB5B1() {
    return Citizen.invokeNative('0x9C409BBC492CB5B1');
}
/**
 * Hash: 0x9D37EB5003E0F2CF | ApiSet: undefined
 */
export function _0x9D37EB5003E0F2CF(p0, p1) {
    Citizen.invokeNative('0x9D37EB5003E0F2CF', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x958278B97C4AFFD8 | ApiSet: undefined
 */
export function _0x958278B97C4AFFD8(p0, p1) {
    Citizen.invokeNative('0x958278B97C4AFFD8', p0, p1);
}
/**
 * Hash: 0xB0E8599243B3F568 | ApiSet: undefined
 */
export function _0xB0E8599243B3F568(p0) {
    return Citizen.invokeNative('0xB0E8599243B3F568', p0);
}
/**
 * Hash: 0xCE0D2F5586627CCE | ApiSet: undefined
 */
export function _0xCE0D2F5586627CCE(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xCE0D2F5586627CCE', p0, p1, p2, p3, p4);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xBFFF81E12A745A5F | ApiSet: undefined
 */
export function _0xBFFF81E12A745A5F() {
    Citizen.invokeNative('0xBFFF81E12A745A5F');
}
/**
 * Hash: 0x98AF2BB6F62BD588 | ApiSet: undefined
 */
export function registerNamedRendertarget(name, p1) {
    return RegisterNamedRendertarget(name, p1);
}
/**
 * Hash: 0xD6BD313CFA41E57A | ApiSet: undefined
 */
export function _0xD6BD313CFA41E57A(p0) {
    return Citizen.invokeNative('0xD6BD313CFA41E57A', p0);
}
/**
 * Hash: 0x0E692EE61761361F | ApiSet: undefined
 */
export function releaseNamedRendertarget(name) {
    return ReleaseNamedRendertarget(name);
}
/**
 * Hash: 0xF1AD3DD218E6558A | ApiSet: undefined
 */
export function _0xF1AD3DD218E6558A(p0, p1) {
    return Citizen.invokeNative('0xF1AD3DD218E6558A', p0, p1);
}
/**
 * Hash: 0x839BFD7D7E49FE09 | ApiSet: undefined
 */
export function removeMpGamerTag(gamerTagId) {
    RemoveMpGamerTag(gamerTagId);
}
/**
 * Hash: 0xF1E6979C0B779985 | ApiSet: undefined
 */
export function _0xF1E6979C0B779985(uiscene) {
    Citizen.invokeNative('0xF1E6979C0B779985', uiscene);
}
/**
 * Hash: 0x402669A4BDAA72DA | ApiSet: undefined
 */
export function setMissionName(p0, name) {
    SetMissionName(p0, name);
}
/**
 * Hash: 0xCE47C21C0687EBC2 | ApiSet: undefined
 */
export function setFrontendActive(active) {
    SetFrontendActive(active);
}
/**
 * Hash: 0xD98630CE73C61E98 | ApiSet: undefined
 */
export function setMissionNameForUgcMission(p0, name) {
    SetMissionNameForUgcMission(p0, name);
}
/**
 * Hash: 0xA0D7CE5F83259663 | ApiSet: undefined
 */
export function setMpGamerTagBigText(gamerTagId, string) {
    SetMpGamerTagBigText(gamerTagId, string);
}
/**
 * Hash: 0x84BD27DDF9575816 | ApiSet: undefined
 */
export function setMpGamerTagColour(gamerTagId, colour) {
    if (typeof colour === 'string')
        colour = this.getHashKey(colour);
    SetMpGamerTagColour(gamerTagId, colour);
}
/**
 * ```
 * Found icons: SPEAKER, THROPY
 * ```
 * Hash: 0x95384C6CE1526EFF | ApiSet: undefined
 */
export function setMpGamerTagSecondaryIcon(gamerTagId, icon) {
    if (typeof icon === 'string')
        icon = this.getHashKey(icon);
    SetMpGamerTagSecondaryIcon(gamerTagId, icon);
}
/**
 * Hash: 0xEA6F4B8D4B4B5B3E | ApiSet: undefined
 */
export function setMpGamerTagName(gamerTagId, string) {
    SetMpGamerTagName(gamerTagId, string);
}
/**
 * ```
 * Found icons: https://pastebin.com/xx6rEgiG
 * ```
 * Hash: 0x5F57522BC1EB9D9D | ApiSet: undefined
 */
export function setMpGamerTagTopIcon(gamerTagId, icon) {
    if (typeof icon === 'string')
        icon = this.getHashKey(icon);
    SetMpGamerTagTopIcon(gamerTagId, icon);
}
/**
 * Hash: 0x1EA716E0628A6F44 | ApiSet: undefined
 */
export function setMpGamerTagNamePosse(gamerTagId, text) {
    SetMpGamerTagNamePosse(gamerTagId, text);
}
/**
 * ```
 * Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
 * ```
 * Hash: 0x25B9C78A25105C35 | ApiSet: undefined
 */
export function setMpGamerTagType(gamerTagId, type) {
    if (typeof type === 'string')
        type = this.getHashKey(type);
    SetMpGamerTagType(gamerTagId, type);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xEF7AB1A0E8C86170 | ApiSet: undefined
 */
export function setMpGamerTagUnkAllowLocalized(gamerTagId, allow) {
    SetMpGamerTagUnkAllowLocalized(gamerTagId, allow);
}
/**
 * ```
 * visibility:
 * enum eUIGamertagVisibility
 * {
 * UIGAMERTAGVISIBILITY_NONE,
 * UIGAMERTAGVISIBILITY_ICON,
 * UIGAMERTAGVISIBILITY_SIMPLE,
 * UIGAMERTAGVISIBILITY_COMPLEX
 * };
 * ```
 * Hash: 0x93171DDDAB274EB8 | ApiSet: undefined
 */
export function setMpGamerTagVisibility(gamerTagId, visibility) {
    SetMpGamerTagVisibility(gamerTagId, visibility);
}
/**
 * Hash: 0xBE5261939FBECB8C | ApiSet: undefined
 */
export function setTextCentre(align) {
    SetTextCentre(align);
}
/**
 * ```
 * This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
 * ```
 * Hash: 0x50A41AD966910F03 | ApiSet: undefined
 */
export function setTextColor(r, g, b, a) {
    SetTextColor(r, g, b, a);
}
/**
 * Hash: 0xE550CDE128D56757 | ApiSet: undefined
 */
export function setTextRenderId(renderId) {
    SetTextRenderId(renderId);
}
/**
 * Hash: 0x1BE39DBAA7263CA5 | ApiSet: undefined
 */
export function setTextDropshadow(distance, r, g, b, a) {
    SetTextDropshadow(distance, r, g, b, a);
}
/**
 * Hash: 0x4170B650590B3B00 | ApiSet: undefined
 */
export function setTextScale(scale, size) {
    SetTextScale(scale, size);
}
/**
 * Hash: 0xD4EE21B7CC7FD350 | ApiSet: undefined
 */
export function showHorseCores(state) {
    ShowHorseCores(state);
}
/**
 * Hash: 0xAA03F130A637D923 | ApiSet: undefined
 */
export function textBlockDelete(textBlock) {
    TextBlockDelete(textBlock);
}
/**
 * Hash: 0x50C803A4CD5932C5 | ApiSet: undefined
 */
export function showPlayerCores(state) {
    ShowPlayerCores(state);
}
/**
 * Hash: 0xD0976CC34002DB57 | ApiSet: undefined
 */
export function textBlockIsLoaded(textBlock) {
    return TextBlockIsLoaded(textBlock);
}
/**
 * Hash: 0x3CF96E16265B7DC8 | ApiSet: undefined
 */
export function textBlockIsStreamed(textBlock) {
    return TextBlockIsStreamed(textBlock);
}
/**
 * Hash: 0xF66090013DE648D5 | ApiSet: undefined
 */
export function textBlockRequest(textBlock) {
    TextBlockRequest(textBlock);
}
/**
 * Hash: 0x51DE09A2196BD951 | ApiSet: undefined
 */
export function uiMovieviewSetRenderTarget(p0, p1) {
    UiMovieviewSetRenderTarget(p0, p1);
}
/**
 * Hash: 0xBE1067CD1C9570F6 | ApiSet: undefined
 */
export function uiGetSceneUiobject(p0) {
    return UiGetSceneUiobject(p0);
}
/**
 * Hash: 0x837972ED28159536 | ApiSet: undefined
 */
export function uiPromptAddGroupReturnLink(p0, prompt) {
    UiPromptAddGroupReturnLink(p0, prompt);
}
/**
 * Hash: 0x684C96CC7C66E8EF | ApiSet: undefined
 */
export function uiPromptAddGroupLink(p0, prompt, p2) {
    UiPromptAddGroupLink(p0, prompt, p2);
}
/**
 * Hash: 0x51259AE5C72D4A1B | ApiSet: undefined
 */
export function uiPromptClearPromptPriorityPreference() {
    UiPromptClearPromptPriorityPreference();
}
/**
 * ```
 * id is the return value from 0xD9459157EB22C895.
 * ```
 * Hash: 0x6095358C4142932A | ApiSet: undefined
 */
export function uiPromptClearHorizontalOrientation(id) {
    UiPromptClearHorizontalOrientation(id);
}
/**
 * Hash: 0xAE84C5EE2C384FB3 | ApiSet: undefined
 */
export function uiPromptContextSetPoint(prompt, position) {
    UiPromptContextSetPoint(prompt, position.x, position.y, position.z);
}
/**
 * Hash: 0x0C718001B77CA468 | ApiSet: undefined
 */
export function uiPromptContextSetRadius(prompt, radius) {
    UiPromptContextSetRadius(prompt, radius);
}
/**
 * ```
 * Attaches a Volume
 * ```
 * Hash: 0x4D107406667423BE | ApiSet: undefined
 */
export function uiPromptContextSetVolume(prompt, volume) {
    UiPromptContextSetVolume(prompt, volume);
}
/**
 * Hash: 0x29FA7910726C3889 | ApiSet: undefined
 */
export function uiPromptCreate(inputHash, labelName, p2, p3, p4, p5) {
    if (typeof inputHash === 'string')
        inputHash = this.getHashKey(inputHash);
    return UiPromptCreate(inputHash, labelName, p2, p3, p4, p5);
}
/**
 * Hash: 0x00EDE88D4D13CF59 | ApiSet: undefined
 */
export function uiPromptDelete(prompt) {
    UiPromptDelete(prompt);
}
/**
 * Hash: 0xF1622CE88A1946FB | ApiSet: undefined
 */
export function uiPromptDisablePromptsThisFrame() {
    UiPromptDisablePromptsThisFrame();
}
/**
 * Hash: 0xEB550B927B34A1BB | ApiSet: undefined
 */
export function uiPromptDoesAmbientGroupExist(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return UiPromptDoesAmbientGroupExist(hash);
}
/**
 * Hash: 0xFC094EF26DD153FA | ApiSet: undefined
 */
export function uiPromptDisablePromptTypeThisFrame(p0) {
    UiPromptDisablePromptTypeThisFrame(p0);
}
/**
 * Hash: 0xC1FCC36C3F7286C8 | ApiSet: undefined
 */
export function uiPromptGetGroupActivePage(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return UiPromptGetGroupActivePage(hash);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
 * ```
 * Hash: 0x06565032897BA861 | ApiSet: undefined
 */
export function uiPromptEnablePromptTypeThisFrame(p0) {
    UiPromptEnablePromptTypeThisFrame(p0);
}
/**
 * Hash: 0x6A2F820452017EA2 | ApiSet: undefined
 */
export function uiPromptFilterClear() {
    UiPromptFilterClear();
}
/**
 * Hash: 0xCB73D7521E7103F0 | ApiSet: undefined
 */
export function uiPromptGetGroupIdForScenarioPoint(p0, p1) {
    return UiPromptGetGroupIdForScenarioPoint(p0, p1);
}
/**
 * Hash: 0xB796970BD125FCE8 | ApiSet: undefined
 */
export function uiPromptGetGroupIdForTargetEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return UiPromptGetGroupIdForTargetEntity(_entity);
}
/**
 * Hash: 0x8A9585293863B8A5 | ApiSet: undefined
 */
export function uiPromptGetMashModeProgress(prompt) {
    return UiPromptGetMashModeProgress(prompt);
}
/**
 * Hash: 0x1FBA0DABECDDB52B | ApiSet: undefined
 */
export function uiPromptGetUrgentPulsingEnabled(prompt) {
    return UiPromptGetUrgentPulsingEnabled(prompt);
}
/**
 * Hash: 0x81801291806DBC50 | ApiSet: undefined
 */
export function uiPromptGetProgress(prompt) {
    return UiPromptGetProgress(prompt);
}
/**
 * Hash: 0xB60C9F9ED47ABB76 | ApiSet: undefined
 */
export function uiPromptHasHoldMode(prompt) {
    return UiPromptHasHoldMode(prompt);
}
/**
 * Hash: 0x8010BEBD0D5ED5BC | ApiSet: undefined
 */
export function uiPromptHasHoldAutoFillMode(prompt) {
    return UiPromptHasHoldAutoFillMode(prompt);
}
/**
 * Hash: 0xA6C6A4ADB3BAC409 | ApiSet: undefined
 */
export function uiPromptHasManualMashMode(prompt) {
    return UiPromptHasManualMashMode(prompt);
}
/**
 * Hash: 0xE0F65F0640EF0617 | ApiSet: undefined
 */
export function uiPromptHasHoldModeCompleted(prompt) {
    return UiPromptHasHoldModeCompleted(prompt);
}
/**
 * Hash: 0xCD072523791DDC1B | ApiSet: undefined
 */
export function uiPromptHasMashMode(prompt) {
    return UiPromptHasMashMode(prompt);
}
/**
 * Hash: 0x845CE958416DC473 | ApiSet: undefined
 */
export function uiPromptHasMashModeCompleted(prompt) {
    return UiPromptHasMashModeCompleted(prompt);
}
/**
 * Hash: 0x25B18E530CF39D6F | ApiSet: undefined
 */
export function uiPromptHasMashModeFailed(prompt) {
    return UiPromptHasMashModeFailed(prompt);
}
/**
 * Hash: 0x1A17B9ECFF617562 | ApiSet: undefined
 */
export function uiPromptHasPressedTimedModeFailed(prompt) {
    return UiPromptHasPressedTimedModeFailed(prompt);
}
/**
 * Hash: 0x3CE854D250A88DAF | ApiSet: undefined
 */
export function uiPromptHasPressedTimedModeCompleted(prompt) {
    return UiPromptHasPressedTimedModeCompleted(prompt);
}
/**
 * Hash: 0x1BE19185B8AFE299 | ApiSet: undefined
 */
export function uiPromptIsControlActionActive(controlAction) {
    if (typeof controlAction === 'string')
        controlAction = this.getHashKey(controlAction);
    return UiPromptIsControlActionActive(controlAction);
}
/**
 * ```
 * Params: p1 is 0
 * ```
 * Hash: 0xC92AC953F0A982AE | ApiSet: undefined
 */
export function uiPromptHasStandardModeCompleted(prompt, p1) {
    return UiPromptHasStandardModeCompleted(prompt, p1);
}
/**
 * Hash: 0xC7D70EAEF92EFF48 | ApiSet: undefined
 */
export function uiPromptIsHoldModeRunning(prompt) {
    return UiPromptIsHoldModeRunning(prompt);
}
/**
 * Hash: 0x546E342E01DE71CF | ApiSet: undefined
 */
export function uiPromptIsActive(prompt) {
    return UiPromptIsActive(prompt);
}
/**
 * Hash: 0x2787CC611D3FACC5 | ApiSet: undefined
 */
export function uiPromptIsJustPressed(prompt) {
    return UiPromptIsJustPressed(prompt);
}
/**
 * Hash: 0x0D00EDDFB58B7F28 | ApiSet: undefined
 */
export function uiPromptIsEnabled(prompt) {
    return UiPromptIsEnabled(prompt);
}
/**
 * Hash: 0x635CC82FA297A827 | ApiSet: undefined
 */
export function uiPromptIsJustReleased(prompt) {
    return UiPromptIsJustReleased(prompt);
}
/**
 * Hash: 0x21E60E230086697F | ApiSet: undefined
 */
export function uiPromptIsPressed(prompt) {
    return UiPromptIsPressed(prompt);
}
/**
 * Hash: 0xAFC887BA7A7756D6 | ApiSet: undefined
 */
export function uiPromptIsReleased(prompt) {
    return UiPromptIsReleased(prompt);
}
/**
 * Hash: 0x347469FBDD1589A9 | ApiSet: undefined
 */
export function uiPromptIsValid(prompt) {
    return UiPromptIsValid(prompt);
}
/**
 * Hash: 0x04F97DE45A519419 | ApiSet: undefined
 */
export function uiPromptRegisterBegin() {
    return UiPromptRegisterBegin();
}
/**
 * Hash: 0x4E52C800A28F7BE8 | ApiSet: undefined
 */
export function uiPromptRemoveGroup(prompt, p1) {
    UiPromptRemoveGroup(prompt, p1);
}
/**
 * Hash: 0xF7AA2696A22AD8B9 | ApiSet: undefined
 */
export function uiPromptRegisterEnd(prompt) {
    UiPromptRegisterEnd(prompt);
}
/**
 * ```
 * Note: you must use VAR_STRING for p1 if string is not part of text database
 * tabAmount: specifies number of tabs in prompt group
 * tabDefaultIndex: specifies starting index
 * p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
 * ```
 * Hash: 0xC65A45D4453C2627 | ApiSet: undefined
 */
export function uiPromptSetActiveGroupThisFrame(hash, name, tabAmount, tabDefaultIndex, p4, prompt) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return UiPromptSetActiveGroupThisFrame(hash, name, tabAmount, tabDefaultIndex, p4, prompt);
}
/**
 * Hash: 0xDC6C55DFA2C24EE5 | ApiSet: undefined
 */
export function uiPromptRestartModes(prompt) {
    UiPromptRestartModes(prompt);
}
/**
 * Hash: 0x315C81D760609108 | ApiSet: undefined
 */
export function uiPromptSetAmbientGroupThisFrame(entity, p1, p2, p3, p4, name, p6) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    return UiPromptSetAmbientGroupThisFrame(_entity, p1, p2, p3, p4, name, p6);
}
/**
 * Hash: 0x565C1CE183CB0EAF | ApiSet: undefined
 */
export function uiPromptSetAllowedAction(prompt, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    UiPromptSetAllowedAction(prompt, action);
}
/**
 * ```
 * attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
 * ```
 * Hash: 0x560E76D5E2E1803F | ApiSet: undefined
 */
export function uiPromptSetAttribute(prompt, attribute, enabled) {
    UiPromptSetAttribute(prompt, attribute, enabled);
}
/**
 * Hash: 0xF957A1654C6322FE | ApiSet: undefined
 */
export function uiPromptSetBeatMode(prompt, toggle) {
    UiPromptSetBeatMode(prompt, toggle);
}
/**
 * Hash: 0xB487A4936FBF40AC | ApiSet: undefined
 */
export function uiPromptSetBeatModeGrayedOut(prompt, p1) {
    UiPromptSetBeatModeGrayedOut(prompt, p1);
}
/**
 * Hash: 0x8A0FB4D03A630D21 | ApiSet: undefined
 */
export function uiPromptSetEnabled(prompt, toggle) {
    UiPromptSetEnabled(prompt, toggle);
}
/**
 * Hash: 0xB5352B7494A08258 | ApiSet: undefined
 */
export function uiPromptSetControlAction(prompt, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return UiPromptSetControlAction(prompt, action);
}
/**
 * ```
 * tabIndex: specifies tab of prompt
 * ```
 * Hash: 0x2F11D3A254169EA4 | ApiSet: undefined
 */
export function uiPromptSetGroup(prompt, groupId, tabIndex) {
    UiPromptSetGroup(prompt, groupId, tabIndex);
}
/**
 * Hash: 0x3CE932E737C145D6 | ApiSet: undefined
 */
export function uiPromptSetHoldAutoFillMode(prompt, autoFillTimeMs, holdTimeMs) {
    UiPromptSetHoldAutoFillMode(prompt, autoFillTimeMs, holdTimeMs);
}
/**
 * Hash: 0xEA5CCF4EEB2F82D1 | ApiSet: undefined
 */
export function uiPromptSetHoldIndefinitelyMode(prompt) {
    UiPromptSetHoldIndefinitelyMode(prompt);
}
/**
 * Hash: 0xA3F2149AA24F3D8E | ApiSet: undefined
 */
export function uiPromptSetHoldAutoFillWithDecayMode(prompt, autoFillTimeMs, holdTimeMs) {
    UiPromptSetHoldAutoFillWithDecayMode(prompt, autoFillTimeMs, holdTimeMs);
}
/**
 * ```
 * Params: p2 is 304000 in R* SP Script coachrobberies
 * ```
 * Hash: 0x94073D5CA3F16B7B | ApiSet: undefined
 */
export function uiPromptSetHoldMode(prompt, holdTimeMs) {
    UiPromptSetHoldMode(prompt, holdTimeMs);
}
/**
 * Hash: 0xA520C7B05FA4EB2A | ApiSet: undefined
 */
export function uiPromptSetManualResolved(prompt, p1) {
    UiPromptSetManualResolved(prompt, p1);
}
/**
 * Hash: 0x6C39587D7CC66801 | ApiSet: undefined
 */
export function uiPromptSetMashAutoFillMode(prompt, autoFillTimeMs, mashes) {
    UiPromptSetMashAutoFillMode(prompt, autoFillTimeMs, mashes);
}
/**
 * Hash: 0x7B66E89312727274 | ApiSet: undefined
 */
export function uiPromptSetMashIndefinitelyMode(prompt) {
    UiPromptSetMashIndefinitelyMode(prompt);
}
/**
 * Hash: 0x32DF729D8BD3C1C6 | ApiSet: undefined
 */
export function uiPromptSetMashManualMode(prompt, p1, p2, p3, p4) {
    UiPromptSetMashManualMode(prompt, p1, p2, p3, p4);
}
/**
 * Hash: 0x179DCF71F705DA20 | ApiSet: undefined
 */
export function uiPromptSetMashManualCanFailMode(prompt, p1, p2, p3, p4) {
    UiPromptSetMashManualCanFailMode(prompt, p1, p2, p3, p4);
}
/**
 * ```
 * standard (prompt not held) rate: 0.035f
 * fast (prompt held) rate: 0.015f
 * punitive (been hit) rate: 0.14f
 * ```
 * Hash: 0x7D393C247FB9B431 | ApiSet: undefined
 */
export function uiPromptSetMashManualModeDecaySpeed(prompt, speed) {
    UiPromptSetMashManualModeDecaySpeed(prompt, speed);
}
/**
 * ```
 * standard (prompt not held) rate: (1f / 128f)
 * fast (prompt held) rate: (1f / 64f)
 * punitive (been hit) rate: (1f / 128f)
 * ```
 * Hash: 0xA0D1D79C6036A855 | ApiSet: undefined
 */
export function uiPromptSetMashManualModeIncreasePerPress(prompt, rate) {
    UiPromptSetMashManualModeIncreasePerPress(prompt, rate);
}
/**
 * Hash: 0x56DBB26F98582C29 | ApiSet: undefined
 */
export function uiPromptSetMashManualModePressedGrowthSpeed(prompt, speed) {
    UiPromptSetMashManualModePressedGrowthSpeed(prompt, speed);
}
/**
 * Hash: 0xDF6423BF071C7F71 | ApiSet: undefined
 */
export function uiPromptSetMashMode(prompt, mashes) {
    UiPromptSetMashMode(prompt, mashes);
}
/**
 * Hash: 0xDC0CB602DEADBA53 | ApiSet: undefined
 */
export function uiPromptSetMashWithResistanceCanFailMode(prompt, mashes, p2, p3) {
    UiPromptSetMashWithResistanceCanFailMode(prompt, mashes, p2, p3);
}
/**
 * Hash: 0xCD1BDFF15EFA79F5 | ApiSet: undefined
 */
export function uiPromptSetMashWithResistanceMode(prompt, mashes, p2, p3) {
    UiPromptSetMashWithResistanceMode(prompt, mashes, p2, p3);
}
/**
 * Hash: 0x2F385ECC5200938D | ApiSet: undefined
 */
export function uiPromptSetOrderingAsInputType(prompt, p1) {
    UiPromptSetOrderingAsInputType(prompt, p1);
}
/**
 * Hash: 0x530A428705BE5DEF | ApiSet: undefined
 */
export function uiPromptSetPromptPriorityPreference(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    UiPromptSetPromptPriorityPreference(_ped);
}
/**
 * ```
 * This returns an id that can be used with 0x6095358C4142932A.
 * ```
 * Hash: 0xD9459157EB22C895 | ApiSet: undefined
 */
export function uiPromptSetRegisterHorizontalOrientation() {
    return UiPromptSetRegisterHorizontalOrientation();
}
/**
 * Hash: 0x1473D3AF51D54276 | ApiSet: undefined
 */
export function uiPromptSetPressedTimedMode(prompt, depletionTimeMs) {
    UiPromptSetPressedTimedMode(prompt, depletionTimeMs);
}
/**
 * Hash: 0xAC6586A7FDCD4B68 | ApiSet: undefined
 */
export function uiPromptSetSpinnerSpeed(prompt, p1) {
    UiPromptSetSpinnerSpeed(prompt, p1);
}
/**
 * ```
 * priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
 * ```
 * Hash: 0xCA24F528D0D16289 | ApiSet: undefined
 */
export function uiPromptSetPriority(prompt, priority) {
    UiPromptSetPriority(prompt, priority);
}
/**
 * ```
 * Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
 * ```
 * Hash: 0x74C7D7B72ED0D3CF | ApiSet: undefined
 */
export function uiPromptSetStandardizedHoldMode(prompt, timedEventHash) {
    if (typeof timedEventHash === 'string')
        timedEventHash = this.getHashKey(timedEventHash);
    UiPromptSetStandardizedHoldMode(prompt, timedEventHash);
}
/**
 * ```
 * Used for controllers
 * ```
 * Hash: 0x7ABE7095FB3D2581 | ApiSet: undefined
 */
export function uiPromptSetRotateMode(prompt, p1, counterclockwise) {
    UiPromptSetRotateMode(prompt, p1, counterclockwise);
}
/**
 * Hash: 0xDEC85C174751292B | ApiSet: undefined
 */
export function uiPromptSetTag(prompt, p1) {
    UiPromptSetTag(prompt, p1);
}
/**
 * Hash: 0x5F6503D9CD2754EB | ApiSet: undefined
 */
export function uiPromptSetTargetMode(prompt, p1, p2, p3) {
    UiPromptSetTargetMode(prompt, p1, p2, p3);
}
/**
 * Hash: 0x832CB510DE546282 | ApiSet: undefined
 */
export function uiPromptSetSpinnerPosition(prompt, p1) {
    UiPromptSetSpinnerPosition(prompt, p1);
}
/**
 * Hash: 0x00123054BEC8A30F | ApiSet: undefined
 */
export function uiPromptSetTargetModeProgress(prompt, progress) {
    UiPromptSetTargetModeProgress(prompt, progress);
}
/**
 * Hash: 0xCC6656799977741B | ApiSet: undefined
 */
export function uiPromptSetStandardMode(prompt, releaseMode) {
    UiPromptSetStandardMode(prompt, releaseMode);
}
/**
 * ```
 * TM_ANY = 0,
 * TM_ON_FOOT,
 * TM_IN_VEHICLE
 * ```
 * Hash: 0x876E4A35C73A6655 | ApiSet: undefined
 */
export function uiPromptSetTransportMode(prompt, mode) {
    UiPromptSetTransportMode(prompt, mode);
}
/**
 * Hash: 0xC5F428EE08FA7F2C | ApiSet: undefined
 */
export function uiPromptSetUrgentPulsingEnabled(prompt, toggle) {
    UiPromptSetUrgentPulsingEnabled(prompt, toggle);
}
/**
 * Hash: 0xB6857100F8FD433C | ApiSet: undefined
 */
export function uiRequestScene(p0, p1) {
    return UiRequestScene(p0, p1);
}
/**
 * Hash: 0x5E019C45DD3B6A14 | ApiSet: undefined
 */
export function uiPromptSetTargetModeTarget(prompt, p1, p2) {
    UiPromptSetTargetModeTarget(prompt, p1, p2);
}
/**
 * Hash: 0x5DD02A8318420DD7 | ApiSet: undefined
 */
export function uiPromptSetText(prompt, text) {
    UiPromptSetText(prompt, text);
}
/**
 * ```
 * Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
 * ```
 * Hash: 0xF4A5C4509BF923B1 | ApiSet: undefined
 */
export function uiPromptSetType(prompt, type) {
    UiPromptSetType(prompt, type);
}
/**
 * Hash: 0x71215ACCFDE075EE | ApiSet: undefined
 */
export function uiPromptSetVisible(prompt, toggle) {
    UiPromptSetVisible(prompt, toggle);
}
/**
 * Hash: 0x1FE4788AB1430C55 | ApiSet: undefined
 */
export function uiPromptWasBeatModePressedInTimeWindow(prompt) {
    return UiPromptWasBeatModePressedInTimeWindow(prompt);
}
/**
 * Hash: 0x66F9EB44342BB4C5 | ApiSet: undefined
 */
export function inverseKinematicsRequestLookAt(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return InverseKinematicsRequestLookAt(_ped);
}
/**
 * ```
 * Seems to disable IK on ped
 * ```
 * Hash: 0x0EABF182FBB63D72 | ApiSet: undefined
 */
export function inverseKinematicsSetDisabledForPed(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    InverseKinematicsSetDisabledForPed(_ped, p1, p2);
}
/**
 * Hash: 0x6098139150DCC745 | ApiSet: undefined
 */
export function _0x6098139150DCC745(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x6098139150DCC745', _ped, p1);
}
/**
 * Hash: 0x0B9F7A01EC50448D | ApiSet: undefined
 */
export function _0x0B9F7A01EC50448D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x0B9F7A01EC50448D', _ped);
}
/**
 * Hash: 0x873C792E07A32C8B | ApiSet: undefined
 */
export function _0x873C792E07A32C8B(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    Citizen.invokeNative('0x873C792E07A32C8B', _ped1, _ped2);
}
/**
 * ```
 * Returns true if player is moving mouse while cursor is active
 * _PI* - _PO*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x2B8B605F2A9E64BF | ApiSet: undefined
 */
export function pointerIsBeingMoved() {
    return PointerIsBeingMoved();
}
/**
 * ```
 * Returns true if player releases LMB if cursor is active
 * _PI* - _PO*
 * ```
 * Hash: 0xF7F51A57349739F2 | ApiSet: undefined
 */
export function pointerIsLeftButtonJustReleased() {
    return PointerIsLeftButtonJustReleased();
}
/**
 * ```
 * Allows camera to be moved if middle mouse button is held while in first person
 * Must be called every frame
 * _SET*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x0546B117BB17548B | ApiSet: undefined
 */
export function setAllowFirstPersonMouseCameraMovement() {
    SetAllowFirstPersonMouseCameraMovement();
}
/**
 * ```
 * Shows the cursor on screen for one frame.
 * ```
 * Hash: 0xF12E4CCAF249DC10 | ApiSet: undefined
 */
export function setMouseCursorThisFrame() {
    SetMouseCursorThisFrame();
}
/**
 * ```
 * Returns true if player is holding LMB while cursor is active
 * _PI* - _PO*
 * ```
 * Hash: 0x61CAE9D1FD055E44 | ApiSet: undefined
 */
export function pointerIsLeftButtonHeld() {
    return PointerIsLeftButtonHeld();
}
/**
 * ```
 * Changes the mouse cursor's sprite.
 * spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
 * ```
 * Hash: 0x7F5858AAB5A58CCE | ApiSet: undefined
 */
export function setMouseCursorStyle(spriteId) {
    SetMouseCursorStyle(spriteId);
}
/**
 * Hash: 0xA1762D5BBFCA13A8 | ApiSet: undefined
 */
export function clearRoomForEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ClearRoomForEntity(_entity);
}
/**
 * Hash: 0x951A049765E0D450 | ApiSet: undefined
 */
export function clearRoomForGameViewport() {
    ClearRoomForGameViewport();
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
 * ```
 * Hash: 0x174D0AAB11CED739 | ApiSet: undefined
 */
export function activateInteriorEntitySet(interior, entitySetName, p2) {
    ActivateInteriorEntitySet(interior, entitySetName, p2);
}
/**
 * Hash: 0x3C2B92A1A07D4FCE | ApiSet: undefined
 */
export function disableInterior(interior, toggle) {
    DisableInterior(interior, toggle);
}
/**
 * Hash: 0x33B81A2C07A51FFF | ApiSet: undefined
 */
export function deactivateInteriorEntitySet(interior, entitySetName, p2) {
    DeactivateInteriorEntitySet(interior, entitySetName, p2);
}
/**
 * Hash: 0x115B4AA8FB28AB43 | ApiSet: undefined
 */
export function forceRoomForGameViewport(interiorID, roomHashKey) {
    if (typeof roomHashKey === 'string')
        roomHashKey = this.getHashKey(roomHashKey);
    ForceRoomForGameViewport(interiorID, roomHashKey);
}
/**
 * Hash: 0xBC29A9894C976945 | ApiSet: undefined
 */
export function forceRoomForEntity(entity, interior, roomHashKey) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof roomHashKey === 'string')
        roomHashKey = this.getHashKey(roomHashKey);
    ForceRoomForEntity(_entity, interior, roomHashKey);
}
/**
 * Hash: 0xAAD6170AA33B13C0 | ApiSet: undefined
 */
export function getInteriorAtCoordsWithType(position, interiorType) {
    return GetInteriorAtCoordsWithType(position.x, position.y, position.z, interiorType);
}
/**
 * Hash: 0xCDD36C9E5C469070 | ApiSet: undefined
 */
export function getInteriorAtCoords(position) {
    return GetInteriorAtCoords(position.x, position.y, position.z);
}
/**
 * Hash: 0x5054D1A5218FA696 | ApiSet: undefined
 */
export function getInteriorFromCollision(position) {
    return GetInteriorFromCollision(position.x, position.y, position.z);
}
/**
 * ```
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 * ```
 * Hash: 0x3543AEA1816D1D2B | ApiSet: undefined
 */
export function getInteriorAtCoordsWithTypehash(position, typeHash) {
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    return GetInteriorAtCoordsWithTypehash(position.x, position.y, position.z, typeHash);
}
/**
 * ```
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 * ```
 * Hash: 0xB417689857646F61 | ApiSet: undefined
 */
export function getInteriorFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetInteriorFromEntity(_entity);
}
/**
 * Hash: 0x8451E87D3C2B0286 | ApiSet: undefined
 */
export function getInteriorLocationAndNamehash(interior) {
    const result = GetInteriorLocationAndNamehash(interior);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0xBC8A281FF125C655 | ApiSet: undefined
 */
export function getInteriorFromPrimaryView() {
    return GetInteriorFromPrimaryView();
}
/**
 * Hash: 0x3039BE60B3749716 | ApiSet: undefined
 */
export function getInteriorMinimapHash(interior) {
    return GetInteriorMinimapHash(interior);
}
/**
 * Hash: 0x2C9746D0CA15BE1C | ApiSet: undefined
 */
export function getInteriorPosition(interior) {
    return new Vector3(GetInteriorPosition(interior));
}
/**
 * ```
 * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
 * ```
 * Hash: 0x27D7B6F79E1F4603 | ApiSet: undefined
 */
export function getKeyForEntityInRoom(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetKeyForEntityInRoom(_entity);
}
/**
 * ```
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 * ```
 * Hash: 0xF291396B517E25B2 | ApiSet: undefined
 */
export function isCollisionMarkedOutside(position) {
    return IsCollisionMarkedOutside(position.x, position.y, position.z);
}
/**
 * ```
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 * ```
 * Hash: 0x076E46E0EB52AFC6 | ApiSet: undefined
 */
export function getRoomKeyFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetRoomKeyFromEntity(_entity);
}
/**
 * Hash: 0x32810CA2125F5842 | ApiSet: undefined
 */
export function isInteriorEntitySetActive(interior, entitySetName) {
    return IsInteriorEntitySetActive(interior, entitySetName);
}
/**
 * Hash: 0x941560D2D45DBFC8 | ApiSet: undefined
 */
export function isInteriorReady(interior) {
    return IsInteriorReady(interior);
}
/**
 * Hash: 0xD56FF170710FC826 | ApiSet: undefined
 */
export function isInteriorEntitySetValid(interior, entitySetName) {
    return IsInteriorEntitySetValid(interior, entitySetName);
}
/**
 * Hash: 0x4200F14D6F840A9A | ApiSet: undefined
 */
export function isInteriorScene() {
    return IsInteriorScene();
}
/**
 * Hash: 0x2533F2AB0EB9C6F9 | ApiSet: undefined
 */
export function _0x2533F2AB0EB9C6F9(p0, p1) {
    Citizen.invokeNative('0x2533F2AB0EB9C6F9', p0, p1);
}
/**
 * Hash: 0xBD3D33EABF680168 | ApiSet: undefined
 */
export function pinInteriorInMemory(interior) {
    PinInteriorInMemory(interior);
}
/**
 * Hash: 0x017C1B3159F79F6C | ApiSet: undefined
 */
export function isValidInterior(interior) {
    return IsValidInterior(interior);
}
/**
 * Hash: 0x5BD616735F16BF5C | ApiSet: undefined
 */
export function retainEntityInInterior(entity, interior) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RetainEntityInInterior(_entity, interior);
}
/**
 * Hash: 0xFE2B3D5500B1B2E4 | ApiSet: undefined
 */
export function _0xFE2B3D5500B1B2E4(p0, p1) {
    Citizen.invokeNative('0xFE2B3D5500B1B2E4', p0, p1);
}
/**
 * ```
 * Actually returns void in IDA but the script header defines a BOOL return type
 * ```
 * Hash: 0xB5EF6FEF2DC9EBED | ApiSet: undefined
 */
export function setInteriorInUse(interior) {
    return SetInteriorInUse(interior);
}
/**
 * ```
 * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
 * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
 * ```
 * Hash: 0x07FD1A0B814F6055 | ApiSet: undefined
 */
export function unpinInterior(interior) {
    UnpinInterior(interior);
}
/**
 * ```
 * p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
 * Returns slot hash
 * ```
 * Hash: 0x6452B1D357D81742 | ApiSet: undefined
 */
export function getDefaultItemSlotInfo(item, p1) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return GetDefaultItemSlotInfo(item, p1);
}
/**
 * Hash: 0xADDD1E7C0ECF7D95 | ApiSet: undefined
 */
export function getItemRoleMaxLevelCount(inventoryId, eRoleMaxLevel) {
    if (typeof eRoleMaxLevel === 'string')
        eRoleMaxLevel = this.getHashKey(eRoleMaxLevel);
    return GetItemRoleMaxLevelCount(inventoryId, eRoleMaxLevel);
}
/**
 * ```
 * inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
 * ```
 * Hash: 0xCB5D11F9508A928D | ApiSet: undefined
 */
export function inventoryAddItemWithGuid(inventoryId, item, inventoryItemSlot, p5, addReason) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof inventoryItemSlot === 'string')
        inventoryItemSlot = this.getHashKey(inventoryItemSlot);
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    return InventoryAddItemWithGuid(inventoryId, item, inventoryItemSlot, p5, addReason);
}
/**
 * Hash: 0xE80E50BEE276A54A | ApiSet: undefined
 */
export function getItemSlotMaxCount(provision, slotId) {
    if (typeof provision === 'string')
        provision = this.getHashKey(provision);
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return GetItemSlotMaxCount(provision, slotId);
}
/**
 * Hash: 0x4C543D5DFCD2DAFD | ApiSet: undefined
 */
export function inventoryCompareGuids() {
    return InventoryCompareGuids();
}
/**
 * ```
 * inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
 * ```
 * Hash: 0x0FBBFFC891A97C81 | ApiSet: undefined
 */
export function inventoryAreLocalChangesAllowed(inventoryId) {
    return InventoryAreLocalChangesAllowed(inventoryId);
}
/**
 * Hash: 0xC04F47D488EF9EBA | ApiSet: undefined
 */
export function inventoryCopyItemToInventory(inventoryId, inventoryIdCloned, p3) {
    return InventoryCopyItemToInventory(inventoryId, inventoryIdCloned, p3);
}
/**
 * Hash: 0x3112ADB9D5F3426B | ApiSet: undefined
 */
export function inventoryCopyItemToMissionInventory(p1) {
    return InventoryCopyItemToMissionInventory(p1);
}
/**
 * Hash: 0x644CCB76A76CFBD6 | ApiSet: undefined
 */
export function inventoryCopyMpInventoryToMissionInventory(p0, p1, bCopySatchelItems, bCopyEmotes, bCopyHorse, p5) {
    InventoryCopyMpInventoryToMissionInventory(p0, p1, bCopySatchelItems, bCopyEmotes, bCopyHorse, p5);
}
/**
 * ```
 * filterName (collections): "ALL", "ALL SATCHEL", "ALL HORSES", "ALL COACHES", "ALL MOUNTS", "ALL CLOTHING", "ALL WEAPONS", "ALL SATCHEL EXCLUDING CLOTHING", "ALL EXCLUDING CLOTHING"
 * slotId: -1591664384
 * p3: outCollectionSize (?)
 * Returns collectionId
 * ```
 * Hash: 0x80D78BDC9D88EF07 | ApiSet: undefined
 */
export function inventoryCreateItemCollection(inventoryId, filterName, slotId) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryCreateItemCollection(inventoryId, filterName, slotId);
}
/**
 * ```
 * Returns collectionId
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x97A3646645727F42 | ApiSet: undefined
 */
export function inventoryCreateItemCollection2() {
    return InventoryCreateItemCollection2();
}
/**
 * Hash: 0x640F890C3E5A3FFD | ApiSet: undefined
 */
export function inventoryCreateItemCollectionWithFilter(inventoryId) {
    return InventoryCreateItemCollectionWithFilter(inventoryId);
}
/**
 * ```
 * p1: 32
 * Returns collectionId
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xBB7F968675B34B0C | ApiSet: undefined
 */
export function inventoryCreateSortedCollection(inventoryId, p1) {
    return InventoryCreateSortedCollection(inventoryId, p1);
}
/**
 * ```
 * Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
 * ```
 * Hash: 0x766315A564594401 | ApiSet: undefined
 */
export function inventoryDisableItem(inventoryId, item, gtxReason) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof gtxReason === 'string')
        gtxReason = this.getHashKey(gtxReason);
    InventoryDisableItem(inventoryId, item, gtxReason);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE1F389F03DC83673 | ApiSet: undefined
 */
export function inventoryDisableMissionInventoryPickups() {
    InventoryDisableMissionInventoryPickups();
}
/**
 * ```
 * Params: p1 = 0
 * ```
 * Hash: 0xE3A46370F70F3607 | ApiSet: undefined
 */
export function inventoryDisableWeapons(inventoryId, p1) {
    InventoryDisableWeapons(inventoryId, p1);
}
/**
 * Hash: 0x88B58B83A43A8CAB | ApiSet: undefined
 */
export function inventoryDoesItemOwnEquipment(inventoryId, item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryDoesItemOwnEquipment(inventoryId, item);
}
/**
 * Hash: 0xD5D72F1624F3BA7C | ApiSet: undefined
 */
export function inventoryEnableWeapons(inventoryId) {
    InventoryEnableWeapons(inventoryId);
}
/**
 * Hash: 0x6A564540FAC12211 | ApiSet: undefined
 */
export function inventoryEnableItem(inventoryId, item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    InventoryEnableItem(inventoryId, item);
}
/**
 * Hash: 0x734311E2852760D0 | ApiSet: undefined
 */
export function inventoryEquipItemWithGuid(inventoryId, bEquipped) {
    return InventoryEquipItemWithGuid(inventoryId, bEquipped);
}
/**
 * Hash: 0xE843D21A8E2498AA | ApiSet: undefined
 */
export function inventoryGetChildrenCount(inventoryId) {
    return InventoryGetChildrenCount(inventoryId);
}
/**
 * Hash: 0x780C5B9AE2819807 | ApiSet: undefined
 */
export function inventoryFitsSlotId(item, slotId) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryFitsSlotId(item, slotId);
}
/**
 * Hash: 0x033EE4B89F3AC545 | ApiSet: undefined
 */
export function inventoryGetChildrenInSlotCount(inventoryId, slotId) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryGetChildrenInSlotCount(inventoryId, slotId);
}
/**
 * Hash: 0x025A1B1FB03FBF61 | ApiSet: undefined
 */
export function inventoryGetFullInventoryItemData(inventoryId, p3, p4) {
    return InventoryGetFullInventoryItemData(inventoryId, p3, p4);
}
/**
 * ```
 * Returns a unique inventory ID for this ped.
 * For the local player ped, it is an eInventories value.
 * For other peds, it is the inventory address casted to unsigned int.
 * enum eInventories
 * {
 * INVENTORY_INVALID,
 * INVENTORY_SP_PLAYER,
 * INVENTORY_MP_PLAYER,
 * INVENTORY_MP_MISSION,
 * INVENTORY_SECOND_SCREEN,
 * INVENTORY_SP_BACKUP,
 * INVENTORY_SP_SNAPSHOT,
 * INVENTORY_0xDE2AE452,
 * INVENTORY_0x399D9B3A,
 * INVENTORY_0x4BD43FA7,
 * INVENTORY_0x9529D251,
 * INVENTORY_0xA75776AC,
 * INVENTORY_MAX_ID = 11,
 * INVENTORY_IDS_COUNT
 * };
 * ```
 * Hash: 0x13D234A2A3F66E63 | ApiSet: undefined
 */
export function inventoryGetInventoryIdFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return InventoryGetInventoryIdFromPed(_ped);
}
/**
 * Hash: 0x9700E8EFC4AB9089 | ApiSet: undefined
 */
export function inventoryGetInventoryItem(inventoryId, p3) {
    return InventoryGetInventoryItem(inventoryId, p3);
}
/**
 * Hash: 0x886DFD3E185C8A89 | ApiSet: undefined
 */
export function inventoryGetGuidFromItemid(inventoryId, p2, slotId) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryGetGuidFromItemid(inventoryId, p2, slotId);
}
/**
 * Hash: 0xCD9A485F2B383B44 | ApiSet: undefined
 */
export function inventoryGetInventoryItemChild(inventoryId, childIndex) {
    return InventoryGetInventoryItemChild(inventoryId, childIndex);
}
/**
 * Hash: 0xC97E0D2302382211 | ApiSet: undefined
 */
export function inventoryGetInventoryItemCountWithGuid(inventoryId, p2) {
    return InventoryGetInventoryItemCountWithGuid(inventoryId, p2);
}
/**
 * Hash: 0xE787F05DFC977BDE | ApiSet: undefined
 */
export function inventoryGetInventoryItemCountWithItemid(inventoryId, eInventoryItem, p2) {
    if (typeof eInventoryItem === 'string')
        eInventoryItem = this.getHashKey(eInventoryItem);
    return InventoryGetInventoryItemCountWithItemid(inventoryId, eInventoryItem, p2);
}
/**
 * Hash: 0xBE012571B25F5ACA | ApiSet: undefined
 */
export function inventoryGetInventoryItemEquippedInSlot(inventoryId, slotId, p3) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryGetInventoryItemEquippedInSlot(inventoryId, slotId, p3);
}
/**
 * Hash: 0xA4550FE9C512E3DD | ApiSet: undefined
 */
export function inventoryGetInventoryItemDescriptionHash(item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryGetInventoryItemDescriptionHash(item);
}
/**
 * Hash: 0x22E590F108289A9D | ApiSet: undefined
 */
export function inventoryGetInventoryItemEquippedInSlotByRef(inventoryId, slotId) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryGetInventoryItemEquippedInSlotByRef(inventoryId, slotId);
}
/**
 * Hash: 0xB991FE166FAF84FD | ApiSet: undefined
 */
export function inventoryGetInventoryItemFitSlot(p0, p2) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return InventoryGetInventoryItemFitSlot(p0, p2);
}
/**
 * Hash: 0xF9933164965533B7 | ApiSet: undefined
 */
export function inventoryGetInventoryItemHidden(inventoryId) {
    return InventoryGetInventoryItemHidden(inventoryId);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x70E3A884ED000A01 | ApiSet: undefined
 */
export function inventoryGetInventoryItemInUse(inventoryId) {
    return InventoryGetInventoryItemInUse(inventoryId);
}
/**
 * Hash: 0x0C093C1787F18519 | ApiSet: undefined
 */
export function inventoryGetInventoryItemInspectionInfo(item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryGetInventoryItemInspectionInfo(item);
}
/**
 * ```
 * soundType: see 0x2BAE4880DCDD560B
 * Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
 * ```
 * Hash: 0x2E1CDC1FF3B8473E | ApiSet: undefined
 */
export function inventoryGetInventoryItemSound(item, soundType) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryGetInventoryItemSound(item, soundType);
}
/**
 * Hash: 0x4AEF1FB5B9011D75 | ApiSet: undefined
 */
export function inventoryGetInventoryItemIsAnimalPelt(item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryGetInventoryItemIsAnimalPelt(item);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x4A606C17276E1BCC | ApiSet: undefined
 */
export function inventoryGetItemExpiryTime() {
    return InventoryGetItemExpiryTime();
}
/**
 * ```
 * Returns CopyID
 * ```
 * Hash: 0xAB5F12746A099A0E | ApiSet: undefined
 */
export function inventoryGetInventoryItemWeaponCopyId(inventoryId) {
    return InventoryGetInventoryItemWeaponCopyId(inventoryId);
}
/**
 * ```
 * collectionId is < outCollectionSize
 * ```
 * Hash: 0x82FA24C3D3FCD9B7 | ApiSet: undefined
 */
export function inventoryGetItemFromCollectionIndex(collectionId, itemIndex) {
    return InventoryGetItemFromCollectionIndex(collectionId, itemIndex);
}
/**
 * ```
 * soundType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CItemInfoSoundsInterface__sSoundsInfo__eSoundType
 * ```
 * Hash: 0x2BAE4880DCDD560B | ApiSet: undefined
 */
export function inventoryGetIsInventoryItemSoundValid(item, soundType) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryGetIsInventoryItemSoundValid(item, soundType);
}
/**
 * ```
 * Alternative Name: _INVENTORY_IS_ITEM_DISABLED
 * ```
 * Hash: 0x3D10D7179D7034AF | ApiSet: undefined
 */
export function inventoryIsInventoryItemEquipped(inventoryId, item, p2) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryIsInventoryItemEquipped(inventoryId, item, p2);
}
/**
 * Hash: 0xB881CA836CC4B6D4 | ApiSet: undefined
 */
export function inventoryIsGuidValid() {
    return InventoryIsGuidValid();
}
/**
 * ```
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
 * 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
 * ```
 * Hash: 0x245D07651B1D183B | ApiSet: undefined
 */
export function inventoryIsInventoryItemFlagEnabled(item, flag) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return InventoryIsInventoryItemFlagEnabled(item, flag);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x0137C77A2EC64536 | ApiSet: undefined
 */
export function inventoryIsItemExpired() {
    return InventoryIsItemExpired();
}
/**
 * ```
 * guid1: old parent GUID
 * guid2: new parent GUID
 * guid3: new item GUID (out param)
 * ```
 * Hash: 0xDCCAA7C3BFD88862 | ApiSet: undefined
 */
export function inventoryMoveInventoryItem(inventoryId, slotId, quantity) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return InventoryMoveInventoryItem(inventoryId, slotId, quantity);
}
/**
 * Hash: 0xFC7563F482781A3D | ApiSet: undefined
 */
export function inventoryIsPlayerInventoryMirroringTransactions() {
    return InventoryIsPlayerInventoryMirroringTransactions();
}
/**
 * Hash: 0x3E4E811480B3AE79 | ApiSet: undefined
 */
export function inventoryRemoveInventoryItemWithGuid(inventoryId, quantity, removeReason) {
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    return InventoryRemoveInventoryItemWithGuid(inventoryId, quantity, removeReason);
}
/**
 * ```
 * Max num of collections is 5, so release your unused ones.
 * ```
 * Hash: 0x42A2F33A1942E865 | ApiSet: undefined
 */
export function inventoryReleaseItemCollection(collectionId) {
    return InventoryReleaseItemCollection(collectionId);
}
/**
 * Hash: 0xB4158C8C9A3B5DCE | ApiSet: undefined
 */
export function inventoryRemoveInventoryItemWithItemid(inventoryId, item, quantity, removeReason) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    return InventoryRemoveInventoryItemWithItemid(inventoryId, item, quantity, removeReason);
}
/**
 * ```
 * Used with CClothingItem
 * ```
 * Hash: 0x9A113C660AEA3832 | ApiSet: undefined
 */
export function inventorySetInventoryItemHidden(inventoryId, hidden) {
    return InventorySetInventoryItemHidden(inventoryId, hidden);
}
/**
 * ```
 * Used with CSatchelItem, R* Script usage: fisihing_core
 * ```
 * Hash: 0xD740F11FBC8AEF43 | ApiSet: undefined
 */
export function inventorySetInventoryItemHidden2(inventoryId, hidden) {
    return InventorySetInventoryItemHidden2(inventoryId, hidden);
}
/**
 * ```
 * Only works on CClothingItem
 * ```
 * Hash: 0x65A5F70F4A292EBE | ApiSet: undefined
 */
export function inventorySetInventoryItemInUse(inventoryId, inUse) {
    return InventorySetInventoryItemInUse(inventoryId, inUse);
}
/**
 * ```
 * OWE_INVALID = -1,
 * OWE_GOOD_IN_HOT
 * OWE_GOOD_IN_NONE
 * OWE_GOOD_IN_COLD
 * OWE_GOOD_IN_ALL
 * ```
 * Hash: 0x6D2F987736A42D4C | ApiSet: undefined
 */
export function inventorySetInventoryItemWeatherEffectiveness(inventoryId, weatherEffectiveness) {
    return InventorySetInventoryItemWeatherEffectiveness(inventoryId, weatherEffectiveness);
}
/**
 * Hash: 0x227522FD59DDB7E8 | ApiSet: undefined
 */
export function inventorySetInventoryItemInspectionEnabled(inventoryId, enabled) {
    return InventorySetInventoryItemInspectionEnabled(inventoryId, enabled);
}
/**
 * ```
 * Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
 * ```
 * Hash: 0xD80A8854DB5CFBA5 | ApiSet: undefined
 */
export function inventoryUpdateInventoryItem(inventoryId, p3) {
    return InventoryUpdateInventoryItem(inventoryId, p3);
}
/**
 * Hash: 0xF2753D691BCDA314 | ApiSet: undefined
 */
export function inventorySwapInventoryItem(inventoryId) {
    return InventorySwapInventoryItem(inventoryId);
}
/**
 * Hash: 0x7C7E4AB748EA3B07 | ApiSet: undefined
 */
export function inventoryUseSpBackup() {
    return InventoryUseSpBackup();
}
/**
 * Hash: 0xA6AA9F56BC6CFF58 | ApiSet: undefined
 */
export function inventoryUseMissionInventory(enable, mirrorTransactions) {
    InventoryUseMissionInventory(enable, mirrorTransactions);
}
/**
 * ```
 * Params: p0 is only 0 or 1
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x0349404A22736740 | ApiSet: undefined
 */
export function _0x0349404A22736740(p0, inventoryId) {
    return Citizen.invokeNative('0x0349404A22736740', p0, inventoryId);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x112BCA290D2EB53C | ApiSet: undefined
 */
export function _0x112BCA290D2EB53C(inventoryId, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0x112BCA290D2EB53C', inventoryId, p1);
}
/**
 * ```
 * eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x46743BBFEDBC859E | ApiSet: undefined
 */
export function _0x46743BBFEDBC859E(inventoryId, eInventoryItem, p2) {
    if (typeof eInventoryItem === 'string')
        eInventoryItem = this.getHashKey(eInventoryItem);
    Citizen.invokeNative('0x46743BBFEDBC859E', inventoryId, eInventoryItem, p2);
}
/**
 * ```
 * Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
 * ```
 * Hash: 0x46DB71883EE9D5AF | ApiSet: undefined
 */
export function _0x46DB71883EE9D5AF(data, stats, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x46DB71883EE9D5AF', data, stats, _ped);
}
/**
 * ```
 * removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
 * `Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel`
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x5D6182F3BCE1333B | ApiSet: undefined
 */
export function _0x5D6182F3BCE1333B(inventoryId, removeReason) {
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    return Citizen.invokeNative('0x5D6182F3BCE1333B', inventoryId, removeReason);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x6862E4D93F64CF01 | ApiSet: undefined
 */
export function _0x6862E4D93F64CF01(inventoryId, p2) {
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return Citizen.invokeNative('0x6862E4D93F64CF01', inventoryId, p2);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x6968CE7AC32F6788 | ApiSet: undefined
 */
export function _0x6968CE7AC32F6788(inventoryId) {
    Citizen.invokeNative('0x6968CE7AC32F6788', inventoryId);
}
/**
 * ```
 * p0: value returned by 0x9D21B185ABC2DBC5
 * ```
 * Hash: 0x75CFAC49301E134E | ApiSet: undefined
 */
export function _0x75CFAC49301E134E(data, p1, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x75CFAC49301E134E', data, p1, _ped);
}
/**
 * Hash: 0x751A7E0EAEDAD0D3 | ApiSet: undefined
 */
export function _0x751A7E0EAEDAD0D3(p0, p1, p2) {
    return Citizen.invokeNative('0x751A7E0EAEDAD0D3', p0, p1, p2);
}
/**
 * ```
 * p1, p2: 0
 * ```
 * Hash: 0x75CFAC49301E134F | ApiSet: undefined
 */
export function _0x75CFAC49301E134F(databindingEntryId, p1, p2) {
    if (typeof databindingEntryId === 'string')
        databindingEntryId = this.getHashKey(databindingEntryId);
    Citizen.invokeNative('0x75CFAC49301E134F', databindingEntryId, p1, p2);
}
/**
 * ```
 * Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
 * INVENTORY_A*
 * ```
 * Hash: 0x9B4E793B1CB6550A | ApiSet: undefined
 */
export function _0x9B4E793B1CB6550A() {
    Citizen.invokeNative('0x9B4E793B1CB6550A');
}
/**
 * ```
 * p0: value returned by 0x46DB71883EE9D5AF
 * ```
 * Hash: 0x951847CEF3D829FF | ApiSet: undefined
 */
export function _0x951847CEF3D829FF(p0, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x951847CEF3D829FF', p0, _ped);
}
/**
 * ```
 * `p0 is the return value of DATABINDING::_DATABINDING_ADD_DATA_CONTAINER_FROM_PATH`
 * p2, p3: 0
 * Returns databindingEntryId
 * ```
 * Hash: 0x9D21B185ABC2DBC4 | ApiSet: undefined
 */
export function _0x9D21B185ABC2DBC4(data, effects, p2, p3) {
    return Citizen.invokeNative('0x9D21B185ABC2DBC4', data, effects, p2, p3);
}
/**
 * ```
 * p1 (out) and p2 (in) are both script arrays?
 * item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
 * ```
 * Hash: 0x9AC53CB6907B4428 | ApiSet: undefined
 */
export function _0x9AC53CB6907B4428(item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return Citizen.invokeNative('0x9AC53CB6907B4428', item);
}
/**
 * ```
 * p2: 0
 * p3: -1
 * Returns databindingEntryId to be used with 0x75CFAC49301E134E (p0)
 * ```
 * Hash: 0x9D21B185ABC2DBC5 | ApiSet: undefined
 */
export function _0x9D21B185ABC2DBC5(data, stats, p2, p3) {
    return Citizen.invokeNative('0x9D21B185ABC2DBC5', data, stats, p2, p3);
}
/**
 * ```
 * Params: p3 returns an int between 0 and 20 (?)
 * Only used in R* SP Scripts
 * ```
 * Hash: 0xD08685BA892DBFAB | ApiSet: undefined
 */
export function _0xD08685BA892DBFAB(inventoryId) {
    return Citizen.invokeNative('0xD08685BA892DBFAB', inventoryId);
}
/**
 * Hash: 0x9E58207B194488AC | ApiSet: undefined
 */
export function _0x9E58207B194488AC(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9E58207B194488AC', _ped, p1);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0xE36D4A38D28D9CFB | ApiSet: undefined
 */
export function _0xE36D4A38D28D9CFB(p0) {
    Citizen.invokeNative('0xE36D4A38D28D9CFB', p0);
}
/**
 * Hash: 0xF666EF30F4F0AC4E | ApiSet: undefined
 */
export function setCarriableCarryActionPromptOverride() {
    return SetCarriableCarryActionPromptOverride();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xB1DD74A1F5536622 | ApiSet: undefined
 */
export function _0xB1DD74A1F5536622(inventoryId) {
    return Citizen.invokeNative('0xB1DD74A1F5536622', inventoryId);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0xE1F45A67A9F0DCBC | ApiSet: undefined
 */
export function _0xE1F45A67A9F0DCBC(inventoryId) {
    Citizen.invokeNative('0xE1F45A67A9F0DCBC', inventoryId);
}
/**
 * ```
 * This native has no functionality.
 * ```
 * Hash: 0x597F571DDEE3FFAC | ApiSet: undefined
 */
export function setUseMissionInventory(toggle) {
    SetUseMissionInventory(toggle);
}
/**
 * Hash: 0xFD41D1D4350F6413 | ApiSet: undefined
 */
export function setItemPromptInfoRequest() {
    return SetItemPromptInfoRequest();
}
/**
 * ```
 * Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
 * ```
 * Hash: 0x71EFA7999AE79408 | ApiSet: undefined
 */
export function itemdatabaseCreateItemCollection(comparisonType) {
    return ItemdatabaseCreateItemCollection(comparisonType);
}
/**
 * Hash: 0x856FF92C57742AE5 | ApiSet: undefined
 */
export function itemdatabaseCanEquipItemOnCategory(p0, p1, slotId) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    return ItemdatabaseCanEquipItemOnCategory(p0, p1, slotId);
}
/**
 * Hash: 0x74F7928816E4E181 | ApiSet: undefined
 */
export function itemdatabaseFilloutAcquireCost(p0, p1, p2) {
    return ItemdatabaseFilloutAcquireCost(p0, p1, p2);
}
/**
 * Hash: 0xFF5FB5605AD56856 | ApiSet: undefined
 */
export function itemdatabaseDoesItemHaveTag(item, tag, tagType) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof tag === 'string')
        tag = this.getHashKey(tag);
    if (typeof tagType === 'string')
        tagType = this.getHashKey(tagType);
    return ItemdatabaseDoesItemHaveTag(item, tag, tagType);
}
/**
 * Hash: 0xB52E20F6767A09A2 | ApiSet: undefined
 */
export function itemdatabaseFilloutBuyAwardAcquireCosts(p0, p1, p2, p3) {
    return ItemdatabaseFilloutBuyAwardAcquireCosts(p0, p1, p2, p3);
}
/**
 * ```
 * p0 can be a weapon hash, component item
 * p1 is a struct containing WEAPON_MOD and WEAPON_DECORATION
 * ```
 * Hash: 0xFE90ABBCBFDC13B2 | ApiSet: undefined
 */
export function itemdatabaseFilloutItemInfo(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return ItemdatabaseFilloutItemInfo(p0);
}
/**
 * Hash: 0x60614A0AB580A2B5 | ApiSet: undefined
 */
export function itemdatabaseFilloutModifier(p0, p1, p2) {
    return ItemdatabaseFilloutModifier(p0, p1, p2);
}
/**
 * Hash: 0x4776EFD78F75C23F | ApiSet: undefined
 */
export function itemdatabaseFilloutSatchelData(p0, p1) {
    return ItemdatabaseFilloutSatchelData(p0, p1);
}
/**
 * Hash: 0x40C5D95818823C94 | ApiSet: undefined
 */
export function itemdatabaseFilloutPriceModifierByKey(p0, p1) {
    return ItemdatabaseFilloutPriceModifierByKey(p0, p1);
}
/**
 * Hash: 0x7A62A2EEDE1C3766 | ApiSet: undefined
 */
export function itemdatabaseFilloutSellPrice(p0, p1, p2) {
    return ItemdatabaseFilloutSellPrice(p0, p1, p2);
}
/**
 * Hash: 0x5A11D6EEA17165B0 | ApiSet: undefined
 */
export function itemdatabaseFilloutTagData(p0, p1, p2, p3) {
    return ItemdatabaseFilloutTagData(p0, p1, p2, p3);
}
/**
 * Hash: 0xB86F7CC2DC67AC60 | ApiSet: undefined
 */
export function itemdatabaseFilloutUiData(p0, p1) {
    return ItemdatabaseFilloutUiData(p0, p1);
}
/**
 * Hash: 0x01FDDAD392D04144 | ApiSet: undefined
 */
export function itemdatabaseGetAcquireCostsCount(p0) {
    return ItemdatabaseGetAcquireCostsCount(p0);
}
/**
 * Hash: 0x6772A83C67A25775 | ApiSet: undefined
 */
export function itemdatabaseGetAcquireCost(p0, p1, p2) {
    return ItemdatabaseGetAcquireCost(p0, p1, p2);
}
/**
 * Hash: 0x5D48A77E4B668B57 | ApiSet: undefined
 */
export function itemdatabaseGetBundleItemInfo(p0, p1, p2, p3) {
    return ItemdatabaseGetBundleItemInfo(p0, p1, p2, p3);
}
/**
 * Hash: 0x891A45960B6B768A | ApiSet: undefined
 */
export function itemdatabaseGetBundleId(p0) {
    return ItemdatabaseGetBundleId(p0);
}
/**
 * Hash: 0x2970D1D6BFCF9B46 | ApiSet: undefined
 */
export function itemdatabaseGetFitsSlotCount(p0) {
    return ItemdatabaseGetFitsSlotCount(p0);
}
/**
 * Hash: 0x3332695B01015DF9 | ApiSet: undefined
 */
export function itemdatabaseGetBundleItemCount(p0, p1) {
    return ItemdatabaseGetBundleItemCount(p0, p1);
}
/**
 * Hash: 0x44915068579D7710 | ApiSet: undefined
 */
export function itemdatabaseGetHasSlotCount(p0) {
    return ItemdatabaseGetHasSlotCount(p0);
}
/**
 * Hash: 0x77210C146CED5261 | ApiSet: undefined
 */
export function itemdatabaseGetFitsSlotInfo(p0, p1, p2) {
    return ItemdatabaseGetFitsSlotInfo(p0, p1, p2);
}
/**
 * Hash: 0x8A9BD0DB7E8376CF | ApiSet: undefined
 */
export function itemdatabaseGetHasSlotInfo(p0, p1, p2) {
    return ItemdatabaseGetHasSlotInfo(p0, p1, p2);
}
/**
 * Hash: 0x4EB37AAB79AB0C48 | ApiSet: undefined
 */
export function itemdatabaseGetItemPriceModifiers(p0, p1) {
    return ItemdatabaseGetItemPriceModifiers(p0, p1);
}
/**
 * Hash: 0x6111B8F9413F413A | ApiSet: undefined
 */
export function itemdatabaseGetItemTagType(item, tag) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    if (typeof tag === 'string')
        tag = this.getHashKey(tag);
    return ItemdatabaseGetItemTagType(item, tag);
}
/**
 * Hash: 0x5AAAF40E9B224F5E | ApiSet: undefined
 */
export function itemdatabaseGetNumberOfModifiedPrices(p0) {
    return ItemdatabaseGetNumberOfModifiedPrices(p0);
}
/**
 * ```
 * Returns an alternative cost hash to COST_SHOP_DEFAULT
 * ```
 * Hash: 0xCB92EC9C004732B4 | ApiSet: undefined
 */
export function itemdatabaseGetModifiedPrice(p0, p1) {
    return ItemdatabaseGetModifiedPrice(p0, p1);
}
/**
 * Hash: 0x1289D8315235856D | ApiSet: undefined
 */
export function itemdatabaseGetNumberOfModifiers(p0) {
    return ItemdatabaseGetNumberOfModifiers(p0);
}
/**
 * Hash: 0xC568B1A0F17C7025 | ApiSet: undefined
 */
export function itemdatabaseGetShopInventoriesItemsCount(p0) {
    return ItemdatabaseGetShopInventoriesItemsCount(p0);
}
/**
 * Hash: 0x4A79B41B4EB91F4E | ApiSet: undefined
 */
export function itemdatabaseGetShopInventoriesItemInfo(p0, p1, p2) {
    return ItemdatabaseGetShopInventoriesItemInfo(p0, p1, p2);
}
/**
 * Hash: 0x76C752D788A76813 | ApiSet: undefined
 */
export function itemdatabaseGetShopInventoriesRequirementGroupInfo(p0, p1, p2, p3) {
    return ItemdatabaseGetShopInventoriesRequirementGroupInfo(p0, p1, p2, p3);
}
/**
 * ```
 * Same Native Function as 0x17721003A66C72BF
 * ```
 * Hash: 0xCFB06801F5099B25 | ApiSet: undefined
 */
export function itemdatabaseGetShopInventoriesItemInfoByKey(p0, p1, p2) {
    return ItemdatabaseGetShopInventoriesItemInfoByKey(p0, p1, p2);
}
/**
 * Hash: 0x66A6D76B6BB999B4 | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutInfo(p0, p1) {
    return ItemdatabaseGetShopLayoutInfo(p0, p1);
}
/**
 * Hash: 0xE0EA5C031AE5539F | ApiSet: undefined
 */
export function itemdatabaseGetShopInventoriesRequirementInfo(p0, p1, p2, p3, p4) {
    return ItemdatabaseGetShopInventoriesRequirementInfo(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xF04247092F193B75 | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutMenuInfoByIndex(p0, p1, p2, p3) {
    return ItemdatabaseGetShopLayoutMenuInfoByIndex(p0, p1, p2, p3);
}
/**
 * Hash: 0xB347C100DF0C9B7F | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutPageInfoByKey(p0, p1, p2) {
    return ItemdatabaseGetShopLayoutPageInfoByKey(p0, p1, p2);
}
/**
 * Hash: 0x86FCB565CCA0CFA7 | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutRootMenuInfo(p0, p1, p2) {
    return ItemdatabaseGetShopLayoutRootMenuInfo(p0, p1, p2);
}
/**
 * Hash: 0xD66114469978B55B | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutMenuInfoById(p0, p1, p2) {
    return ItemdatabaseGetShopLayoutMenuInfoById(p0, p1, p2);
}
/**
 * Hash: 0x9A60570657A7B635 | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutMenuPageKey(p0, p1, p2, p3) {
    return ItemdatabaseGetShopLayoutMenuPageKey(p0, p1, p2, p3);
}
/**
 * Hash: 0x6D5D51B188333FD1 | ApiSet: undefined
 */
export function itemdatabaseIsKeyValid(p0, p1) {
    return ItemdatabaseIsKeyValid(p0, p1);
}
/**
 * Hash: 0x337F88E3A063995F | ApiSet: undefined
 */
export function itemdatabaseIsOverpoweredItem(p0) {
    return ItemdatabaseIsOverpoweredItem(p0);
}
/**
 * Hash: 0xF32BEF578B3DBAE8 | ApiSet: undefined
 */
export function itemdatabaseGetShopLayoutPageItemKey(p0, p1, p2, p3, p4, p5) {
    return ItemdatabaseGetShopLayoutPageItemKey(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x3AFE5182C45A84F6 | ApiSet: undefined
 */
export function itemdatabaseIsShopLayoutKeyValid(p0) {
    return ItemdatabaseIsShopLayoutKeyValid(p0);
}
/**
 * ```
 * Returns docData.iNumTotalLabelTypes
 * ```
 * Hash: 0xCEC6A41E8910486A | ApiSet: undefined
 */
export function itemdatabaseLocalizationGetNumLabelTypes(p0) {
    return ItemdatabaseLocalizationGetNumLabelTypes(p0);
}
/**
 * Hash: 0x337F88E3A063995E | ApiSet: undefined
 */
export function itemdatabaseIsIntrinsicItem(p0) {
    return ItemdatabaseIsIntrinsicItem(p0);
}
/**
 * Hash: 0x00B9507D8E1D8716 | ApiSet: undefined
 */
export function itemdatabaseIsShopKeyValid(p0) {
    return ItemdatabaseIsShopKeyValid(p0);
}
/**
 * ```
 * Returns iNumValuesForType
 * ```
 * Hash: 0x49885D82A13EEAEA | ApiSet: undefined
 */
export function itemdatabaseLocalizationGetNumValues(p0, p1) {
    return ItemdatabaseLocalizationGetNumValues(p0, p1);
}
/**
 * Hash: 0x9AE5610FDCED6EA7 | ApiSet: undefined
 */
export function itemdatabaseLocalizationGetValue(p0, label, p2) {
    if (typeof label === 'string')
        label = this.getHashKey(label);
    return ItemdatabaseLocalizationGetValue(p0, label, p2);
}
/**
 * ```
 * Returns LabelType
 * ```
 * Hash: 0xCABF5D41D0073D4A | ApiSet: undefined
 */
export function itemdatabaseLocalizationGetType(p0, p1) {
    return ItemdatabaseLocalizationGetType(p0, p1);
}
/**
 * Hash: 0x121D2005DD64496B | ApiSet: undefined
 */
export function itemdatabaseFilloutAwardItemInfo(award, index) {
    if (typeof award === 'string')
        award = this.getHashKey(award);
    return ItemdatabaseFilloutAwardItemInfo(award, index);
}
/**
 * ```
 * Params: tag = TAG_ITEM_PROPERTY (tagType(?))
 * ```
 * Hash: 0x99C6EA66DFE73757 | ApiSet: undefined
 */
export function itemdatabaseDoesBundleHaveTag(bundle, tag, tagType) {
    if (typeof bundle === 'string')
        bundle = this.getHashKey(bundle);
    if (typeof tag === 'string')
        tag = this.getHashKey(tag);
    if (typeof tagType === 'string')
        tagType = this.getHashKey(tagType);
    return ItemdatabaseDoesBundleHaveTag(bundle, tag, tagType);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xB542632693D53408 | ApiSet: undefined
 */
export function itemdatabaseFilloutBundle(p0, p1, p2, p3) {
    return ItemdatabaseFilloutBundle(p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xAD73B614DF26CF8A | ApiSet: undefined
 */
export function itemdatabaseFilloutItem(p0, costShop, fillOutIndex, p3) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof costShop === 'string')
        costShop = this.getHashKey(costShop);
    return ItemdatabaseFilloutItem(p0, costShop, fillOutIndex, p3);
}
/**
 * Hash: 0x2A610BEE7D341CC4 | ApiSet: undefined
 */
export function itemdatabaseFilloutItemByName(p0, p1) {
    return ItemdatabaseFilloutItemByName(p0, p1);
}
/**
 * Hash: 0xCF2D360D27FD1ABF | ApiSet: undefined
 */
export function itemdatabaseFilloutItemEffectIdInfo(p0, p1) {
    return ItemdatabaseFilloutItemEffectIdInfo(p0, p1);
}
/**
 * Hash: 0x9379BE60DC55BBE6 | ApiSet: undefined
 */
export function itemdatabaseFilloutItemEffectIds(p0, p1) {
    return ItemdatabaseFilloutItemEffectIds(p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE81D0378A384E755 | ApiSet: undefined
 */
export function itemdatabaseGetAwardCostModifiers(p0, p1) {
    return ItemdatabaseGetAwardCostModifiers(p0, p1);
}
/**
 * ```
 * Returns iAwardItemCount
 * ```
 * Hash: 0x3FAA928A79591761 | ApiSet: undefined
 */
export function itemdatabaseGetAwardItemCount(award) {
    if (typeof award === 'string')
        award = this.getHashKey(award);
    return ItemdatabaseGetAwardItemCount(award);
}
/**
 * ```
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x12DF9C58201DD19A | ApiSet: undefined
 */
export function itemdatabaseGetAwardAcquireCostType(p0) {
    return ItemdatabaseGetAwardAcquireCostType(p0);
}
/**
 * Hash: 0xF4452CE83118C738 | ApiSet: undefined
 */
export function itemdatabaseGetItemPathset(item, p1) {
    return ItemdatabaseGetItemPathset(item, p1);
}
/**
 * Hash: 0x4CE753203FA42214 | ApiSet: undefined
 */
export function itemdatabaseIsBuyableAwardValid(p0) {
    return ItemdatabaseIsBuyableAwardValid(p0);
}
/**
 * ```
 * Returns (collection?) size/index (?)
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * Hash: 0xD389A2549C4EFB30 | ApiSet: undefined
 */
export function itemdatabaseGetCollectionSize(collectionId) {
    return ItemdatabaseGetCollectionSize(collectionId);
}
/**
 * ```
 * Params: p2 can be a component item hash
 * ```
 * Hash: 0x8750F69A720C2E41 | ApiSet: undefined
 */
export function itemdatabaseGetComponentItem(collectionId, index) {
    return ItemdatabaseGetComponentItem(collectionId, index);
}
/**
 * ```
 * _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
 * ```
 * Hash: 0xEF254F1A4C08B7E6 | ApiSet: undefined
 */
export function itemdatabaseGetPriorityAccessAward(award) {
    if (typeof award === 'string')
        award = this.getHashKey(award);
    return ItemdatabaseGetPriorityAccessAward(award);
}
/**
 * Hash: 0xCBB7B6EDFA933ADE | ApiSet: undefined
 */
export function itemdatabaseReleaseItemCollection(collectionId) {
    return ItemdatabaseReleaseItemCollection(collectionId);
}
/**
 * Hash: 0x4308812A6E9CA62E | ApiSet: undefined
 */
export function itemdatabaseIsBundleValid(p0, p1) {
    return ItemdatabaseIsBundleValid(p0, p1);
}
/**
 * Hash: 0x17721003A66C72BF | ApiSet: undefined
 */
export function _0x17721003A66C72BF(p0, p1, p2) {
    return Citizen.invokeNative('0x17721003A66C72BF', p0, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x388088BFF3681189 | ApiSet: undefined
 */
export function _0x388088BFF3681189(p0, p1) {
    return Citizen.invokeNative('0x388088BFF3681189', p0, p1);
}
/**
 * ```
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * Hash: 0x48229CE0C7938237 | ApiSet: undefined
 */
export function _0x48229CE0C7938237(award) {
    if (typeof award === 'string')
        award = this.getHashKey(award);
    return Citizen.invokeNative('0x48229CE0C7938237', award);
}
/**
 * ```
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x1FC25AEB5F76B38D | ApiSet: undefined
 */
export function _0x1FC25AEB5F76B38D(p0, index) {
    return Citizen.invokeNative('0x1FC25AEB5F76B38D', p0, index);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x537A0555F62CA01A | ApiSet: undefined
 */
export function _0x537A0555F62CA01A(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0x537A0555F62CA01A', p0, p1);
}
/**
 * Hash: 0x3A0B667ABFF87F6E | ApiSet: undefined
 */
export function _0x3A0B667ABFF87F6E(p0, p1, p2) {
    return Citizen.invokeNative('0x3A0B667ABFF87F6E', p0, p1, p2);
}
/**
 * ```
 * Returns Item Count
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x799FCD53358ED5FA | ApiSet: undefined
 */
export function _0x799FCD53358ED5FA(bundle, p1) {
    return Citizen.invokeNative('0x799FCD53358ED5FA', bundle, p1);
}
/**
 * ```
 * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
 * ```
 * Hash: 0x74C3B1093728D263 | ApiSet: undefined
 */
export function _0x74C3B1093728D263(p0, p1) {
    return Citizen.invokeNative('0x74C3B1093728D263', p0, p1);
}
/**
 * Hash: 0x7A35A72A692BE9DB | ApiSet: undefined
 */
export function _0x7A35A72A692BE9DB(p0) {
    return Citizen.invokeNative('0x7A35A72A692BE9DB', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x8870895BA5ED9385 | ApiSet: undefined
 */
export function _0x8870895BA5ED9385(p0, tagType, p2) {
    if (typeof tagType === 'string')
        tagType = this.getHashKey(tagType);
    return Citizen.invokeNative('0x8870895BA5ED9385', p0, tagType, p2);
}
/**
 * ```
 * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
 * ```
 * Hash: 0x8D029948CA29409B | ApiSet: undefined
 */
export function _0x8D029948CA29409B(award, p1, p2) {
    if (typeof award === 'string')
        award = this.getHashKey(award);
    return Citizen.invokeNative('0x8D029948CA29409B', award, p1, p2);
}
/**
 * ```
 * Returns Pathset Hash
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xAA29A5F13B2C20B2 | ApiSet: undefined
 */
export function _0xAA29A5F13B2C20B2(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0xAA29A5F13B2C20B2', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xDBEADA0DF5F9AB9F | ApiSet: undefined
 */
export function _0xDBEADA0DF5F9AB9F(p0, index, menuKey) {
    return Citizen.invokeNative('0xDBEADA0DF5F9AB9F', p0, index, menuKey);
}
/**
 * Hash: 0xA97EE5E4589FCF5A | ApiSet: undefined
 */
export function _0xA97EE5E4589FCF5A(p0, p1) {
    return Citizen.invokeNative('0xA97EE5E4589FCF5A', p0, p1);
}
/**
 * ```
 * Returns fillOutIndex (?)
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xDEE7B3C76ED664BE | ApiSet: undefined
 */
export function _0xDEE7B3C76ED664BE(p0, costShop) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof costShop === 'string')
        costShop = this.getHashKey(costShop);
    return Citizen.invokeNative('0xDEE7B3C76ED664BE', p0, costShop);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xC4146375D8A0B374 | ApiSet: undefined
 */
export function _0xC4146375D8A0B374(bundle, p1, index, p3) {
    return Citizen.invokeNative('0xC4146375D8A0B374', bundle, p1, index, p3);
}
/**
 * ```
 * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xF27F01BBF5ACD3F3 | ApiSet: undefined
 */
export function _0xF27F01BBF5ACD3F3(award, cost, index, p3) {
    if (typeof cost === 'string')
        cost = this.getHashKey(cost);
    return Citizen.invokeNative('0xF27F01BBF5ACD3F3', award, cost, index, p3);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD076DB9B96FAADF1 | ApiSet: undefined
 */
export function _0xD076DB9B96FAADF1(p0, p1) {
    return Citizen.invokeNative('0xD076DB9B96FAADF1', p0, p1);
}
/**
 * ```
 * _ITEMDATABASE_FILLOUT_(B)* - ITEMDATABASE_FILLOUT_ITEM*
 * ```
 * Hash: 0xF8D09EF8CE61D7BF | ApiSet: undefined
 */
export function _0xF8D09EF8CE61D7BF(p0, p1) {
    return Citizen.invokeNative('0xF8D09EF8CE61D7BF', p0, p1);
}
/**
 * ```
 * Returns itemCount (?)
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xF540239F9937033B | ApiSet: undefined
 */
export function _0xF540239F9937033B(award, cost) {
    if (typeof cost === 'string')
        cost = this.getHashKey(cost);
    return Citizen.invokeNative('0xF540239F9937033B', award, cost);
}
/**
 * Hash: 0xABE74510883C7950 | ApiSet: undefined
 */
export function addToItemset(entity, itemset) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return AddToItemset(_entity, itemset);
}
/**
 * Hash: 0x85F3A86CA9021FB0 | ApiSet: undefined
 */
export function cleanItemset(itemset) {
    CleanItemset(itemset);
}
/**
 * Hash: 0x20A4BF0E09BEE146 | ApiSet: undefined
 */
export function clearItemset(itemset) {
    ClearItemset(itemset);
}
/**
 * Hash: 0xA1AF16083320065A | ApiSet: undefined
 */
export function createItemset(p0) {
    return CreateItemset(p0);
}
/**
 * Hash: 0x712BC69F10549B92 | ApiSet: undefined
 */
export function destroyItemset(itemset) {
    DestroyItemset(itemset);
}
/**
 * Hash: 0x275A2E2C0FAB7612 | ApiSet: undefined
 */
export function getIndexedItemInItemset(index, itemset) {
    return GetIndexedItemInItemset(index, itemset);
}
/**
 * Hash: 0x9FC3CDB5CE815901 | ApiSet: undefined
 */
export function getIndexedScenarioPointIndexInItemset(index, itemset) {
    return GetIndexedScenarioPointIndexInItemset(index, itemset);
}
/**
 * Hash: 0x55F2E375AC6018A9 | ApiSet: undefined
 */
export function getItemsetSize(itemset) {
    return GetItemsetSize(itemset);
}
/**
 * Hash: 0xD1503C2EE2FE688C | ApiSet: undefined
 */
export function isInItemset(entity, itemset) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsInItemset(_entity, itemset);
}
/**
 * Hash: 0xC5BAA432B429DC24 | ApiSet: undefined
 */
export function removeFromItemset(entity, itemset) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RemoveFromItemset(_entity, itemset);
}
/**
 * Hash: 0xD30765D153EF5C76 | ApiSet: undefined
 */
export function isItemsetValid(itemset) {
    return IsItemsetValid(itemset);
}
/**
 * ```
 * Only used in rcm_homerob00 R* Script
 * ```
 * Hash: 0xECE3C34B270428D5 | ApiSet: undefined
 */
export function areAnyLawPedsInvestigating() {
    return AreAnyLawPedsInvestigating();
}
/**
 * Hash: 0x0E3BDEED21BEB945 | ApiSet: undefined
 */
export function addBounty(player, itemValueAmount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    AddBounty(_player, itemValueAmount);
}
/**
 * ```
 * Only used in trainrobbery_ambient R* Script
 * ```
 * Hash: 0xA22C46F16359471C | ApiSet: undefined
 */
export function areLawPedsEnabledForTrain() {
    return AreLawPedsEnabledForTrain();
}
/**
 * Hash: 0x0BB6DE7D23C60626 | ApiSet: undefined
 */
export function areWitnessesPending(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return AreWitnessesPending(_player);
}
/**
 * Hash: 0x10827B5A0AAC56A7 | ApiSet: undefined
 */
export function addWitnessResponse(player, crimeType, pedGroup) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _pedGroup = pedGroup instanceof Ped ? pedGroup.handle() : pedGroup;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    AddWitnessResponse(_player, crimeType, _pedGroup);
}
/**
 * Hash: 0xF0FBFB9AB15F7734 | ApiSet: undefined
 */
export function areInvestigatorsActive(player, areInvestigatorsActive, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return AreInvestigatorsActive(_player, areInvestigatorsActive, p2);
}
/**
 * Hash: 0x69E181772886F48B | ApiSet: undefined
 */
export function areWitnessesActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return AreWitnessesActive(_player);
}
/**
 * Hash: 0xBCC6DC59E32A2BDC | ApiSet: undefined
 */
export function clearPlayerPastCrimes(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearPlayerPastCrimes(_player);
}
/**
 * Hash: 0x062B4A4A3396351D | ApiSet: undefined
 */
export function clearWantedScore(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearWantedScore(_player);
}
/**
 * Hash: 0xC76F252371150D9A | ApiSet: undefined
 */
export function clearBounty(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearBounty(_player);
}
/**
 * Hash: 0x8F9DE75680275C9F | ApiSet: undefined
 */
export function createGuardZone(name) {
    CreateGuardZone(name);
}
/**
 * ```
 * Returns true when investigation creation was successful
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0D4B77E862475ED3 | ApiSet: undefined
 */
export function createGuardZoneForEntity(guardZoneName, entity, position) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return CreateGuardZoneForEntity(guardZoneName, _entity, position.x, position.y, position.z);
}
/**
 * ```
 * dispatchResponseHash: see common/data/dispatchresponses/..
 * ```
 * Hash: 0x75CBF20BA47E4F89 | ApiSet: undefined
 */
export function createLawDispatchResponseForCoords(position, dispatchResponseHash) {
    if (typeof dispatchResponseHash === 'string')
        dispatchResponseHash = this.getHashKey(dispatchResponseHash);
    return CreateLawDispatchResponseForCoords(position.x, position.y, position.z, dispatchResponseHash);
}
/**
 * Hash: 0x26D558692B25DD95 | ApiSet: undefined
 */
export function disableGuardZone(name) {
    DisableGuardZone(name);
}
/**
 * Hash: 0xC805EB785824F712 | ApiSet: undefined
 */
export function enableDispatchLaw(toggle) {
    EnableDispatchLaw(toggle);
}
/**
 * Hash: 0x710448D44A64C213 | ApiSet: undefined
 */
export function enableDispatchLaw2(toggle) {
    EnableDispatchLaw2(toggle);
}
/**
 * Hash: 0x956510F8C36B5C64 | ApiSet: undefined
 */
export function forceLawOnLocalPlayerImmediately() {
    ForceLawOnLocalPlayerImmediately();
}
/**
 * Hash: 0x54310AAB97B92816 | ApiSet: undefined
 */
export function getBounty(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetBounty(_player);
}
/**
 * ```
 * Returns bounty (increment) value
 * ```
 * Hash: 0x35E5E21F9159849C | ApiSet: undefined
 */
export function getCrimeBountyAmountByType(crimeType) {
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return GetCrimeBountyAmountByType(crimeType);
}
/**
 * ```
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 * ```
 * Hash: 0x76CF93D4B416B288 | ApiSet: undefined
 */
export function getBountyHunterGlobalCooldown(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return GetBountyHunterGlobalCooldown(p0);
}
/**
 * Hash: 0x532C5FDDB986EE5C | ApiSet: undefined
 */
export function getPlayerRegisteredCrime(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerRegisteredCrime(_player, p1);
}
/**
 * ```
 * See _REPORT_CRIME
 * ```
 * Hash: 0x259CE340A8738814 | ApiSet: undefined
 */
export function getHudPlayerCrimeType(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetHudPlayerCrimeType(_player);
}
/**
 * Hash: 0xD743C4293F47AFAD | ApiSet: undefined
 */
export function isGuardPedInvestigating(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsGuardPedInvestigating(_ped);
}
/**
 * ```
 * Returns the amount of time (probably in game minutes) since last seen by the law / left the wanted radius
 * ```
 * Hash: 0x717DA2281DF90855 | ApiSet: undefined
 */
export function getTimeSinceLastSeenByLaw(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetTimeSinceLastSeenByLaw(_player);
}
/**
 * Hash: 0xAD401C63158ACBAA | ApiSet: undefined
 */
export function isLawIncidentActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsLawIncidentActive(_player);
}
/**
 * Hash: 0xDD5FD601481F648B | ApiSet: undefined
 */
export function getWantedScore(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetWantedScore(_player);
}
/**
 * Hash: 0xF0B67BAD53C35BD9 | ApiSet: undefined
 */
export function lawWitnessResponseTask(pedGroup1, ped, pedGroup2, position, crimeType) {
    const _pedGroup1 = pedGroup1 instanceof Ped ? pedGroup1.handle() : pedGroup1;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _pedGroup2 = pedGroup2 instanceof Ped ? pedGroup2.handle() : pedGroup2;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return LawWitnessResponseTask(_pedGroup1, _ped, _pedGroup2, position.x, position.y, position.z, crimeType);
}
/**
 * Hash: 0x00DB0BC05E3FAA4E | ApiSet: undefined
 */
export function _0x00DB0BC05E3FAA4E(ped, bitset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x00DB0BC05E3FAA4E', _ped, bitset);
}
/**
 * ```
 * Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
 * _REPORT_*
 * ```
 * Hash: 0x07E8B8B20570271C | ApiSet: undefined
 */
export function _0x07E8B8B20570271C(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x07E8B8B20570271C', _player);
}
/**
 * Hash: 0x018F30D762E62DF8 | ApiSet: undefined
 */
export function _0x018F30D762E62DF8(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x018F30D762E62DF8', _ped);
}
/**
 * ```
 * Only used in net_fetch R* Script
 * ```
 * Hash: 0x0BDFEBCF40A5F7E3 | ApiSet: undefined
 */
export function _0x0BDFEBCF40A5F7E3(crimeType) {
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return Citizen.invokeNative('0x0BDFEBCF40A5F7E3', crimeType);
}
/**
 * Hash: 0x0C392DB374655176 | ApiSet: undefined
 */
export function _0x0C392DB374655176(position, p3, itemSet) {
    Citizen.invokeNative('0x0C392DB374655176', position.x, position.y, position.z, p3, itemSet);
}
/**
 * Hash: 0x0EAF918F751F27BA | ApiSet: undefined
 */
export function _0x0EAF918F751F27BA(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x0EAF918F751F27BA', _ped);
}
/**
 * ```
 * Only used in sisikapenitentiary R* Script: name = SISIKA
 * _IS_G* or _IS_H*
 * ```
 * Hash: 0x0DBACA9C38C9A686 | ApiSet: undefined
 */
export function _0x0DBACA9C38C9A686(name) {
    return Citizen.invokeNative('0x0DBACA9C38C9A686', name);
}
/**
 * Hash: 0x148E7AC8141C9E64 | ApiSet: undefined
 */
export function _0x148E7AC8141C9E64(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x148E7AC8141C9E64', _player);
}
/**
 * Hash: 0x0F230DE0DDBE3649 | ApiSet: undefined
 */
export function _0x0F230DE0DDBE3649(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x0F230DE0DDBE3649', _player);
}
/**
 * ```
 * Params: p0 either 0, 1 or -1 in R* Scripts
 * Set to 0 called together with _SUPPRESS_CRIME
 * ```
 * Hash: 0x15ABD5004CAD2D99 | ApiSet: undefined
 */
export function _0x15ABD5004CAD2D99(p0) {
    Citizen.invokeNative('0x15ABD5004CAD2D99', p0);
}
/**
 * ```
 * Only used in resapwn_dump_body R* Script
 * ```
 * Hash: 0x2001687F9562FD9D | ApiSet: undefined
 */
export function _0x2001687F9562FD9D(p0) {
    Citizen.invokeNative('0x2001687F9562FD9D', p0);
}
/**
 * ```
 * Used in SP only
 * _REPORT_*
 * ```
 * Hash: 0x22741652985C84D0 | ApiSet: undefined
 */
export function _0x22741652985C84D0(player, lawRegionHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof lawRegionHash === 'string')
        lawRegionHash = this.getHashKey(lawRegionHash);
    Citizen.invokeNative('0x22741652985C84D0', _player, lawRegionHash);
}
/**
 * ```
 * Only used in R* Script fm_mission_controller
 * _CLEAR_WANTED_*
 * ```
 * Hash: 0x292AD61A33A7A485 | ApiSet: undefined
 */
export function _0x292AD61A33A7A485() {
    Citizen.invokeNative('0x292AD61A33A7A485');
}
/**
 * Hash: 0x21213B833EF4DAE7 | ApiSet: undefined
 */
export function _0x21213B833EF4DAE7(player, ped) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const result = Citizen.invokeNative('0x21213B833EF4DAE7', _player, _ped);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Only used in R* SP Script av_amb_camp_robbery
 * ```
 * Hash: 0x318F0F9A4426CFA2 | ApiSet: undefined
 */
export function _0x318F0F9A4426CFA2(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x318F0F9A4426CFA2', _ped);
}
/**
 * Hash: 0x26934083D3F2579C | ApiSet: undefined
 */
export function _0x26934083D3F2579C(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x26934083D3F2579C', _player);
}
/**
 * Hash: 0x3738B784DDD35CC6 | ApiSet: undefined
 */
export function _0x3738B784DDD35CC6(player, p1, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x3738B784DDD35CC6', _player, p1, p2);
}
/**
 * Hash: 0x29CD4896ECB66C12 | ApiSet: undefined
 */
export function _0x29CD4896ECB66C12() {
    Citizen.invokeNative('0x29CD4896ECB66C12');
}
/**
 * Hash: 0x331D349E0380B097 | ApiSet: undefined
 */
export function _0x331D349E0380B097(p0) {
    Citizen.invokeNative('0x331D349E0380B097', p0);
}
/**
 * Hash: 0x3852237A3D9DF145 | ApiSet: undefined
 */
export function _0x3852237A3D9DF145(p0) {
    Citizen.invokeNative('0x3852237A3D9DF145', p0);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0x390710D2DAFA6BFF | ApiSet: undefined
 */
export function _0x390710D2DAFA6BFF(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x390710D2DAFA6BFF', _player, p1);
}
/**
 * Hash: 0x3D2674828A4E6B3C | ApiSet: undefined
 */
export function _0x3D2674828A4E6B3C() {
    return Citizen.invokeNative('0x3D2674828A4E6B3C');
}
/**
 * Hash: 0x40851BCC33ACD9AB | ApiSet: undefined
 */
export function _0x40851BCC33ACD9AB(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x40851BCC33ACD9AB', _ped);
}
/**
 * Hash: 0x522F74636DF10201 | ApiSet: undefined
 */
export function _0x522F74636DF10201(player, itemSet) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x522F74636DF10201', _player, itemSet);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x5E6F375CA101C108 | ApiSet: undefined
 */
export function _0x5E6F375CA101C108(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x5E6F375CA101C108', _player, p1);
}
/**
 * Hash: 0x6ABC50979655BEE7 | ApiSet: undefined
 */
export function _0x6ABC50979655BEE7(player, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x6ABC50979655BEE7', _player, p2);
}
/**
 * Hash: 0x61B98367D93F012F | ApiSet: undefined
 */
export function _0x61B98367D93F012F(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x61B98367D93F012F', _player);
}
/**
 * Hash: 0x7803436E68C32B26 | ApiSet: undefined
 */
export function _0x7803436E68C32B26() {
    Citizen.invokeNative('0x7803436E68C32B26');
}
/**
 * ```
 * _SET_DISPATCH_*
 * ```
 * Hash: 0x7EF2A2FE38D74456 | ApiSet: undefined
 */
export function _0x7EF2A2FE38D74456(flag, p1) {
    Citizen.invokeNative('0x7EF2A2FE38D74456', flag, p1);
}
/**
 * ```
 * Only used in shoprobberies
 * ```
 * Hash: 0x7351DA734F989F4E | ApiSet: undefined
 */
export function _0x7351DA734F989F4E(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x7351DA734F989F4E', _entity);
}
/**
 * ```
 * Only used in R* Script long_update
 * Returns a value thats being subtracted from GET_GAME_TIMER
 * ```
 * Hash: 0x7FC667F6DDFBCDCC | ApiSet: undefined
 */
export function _0x7FC667F6DDFBCDCC(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x7FC667F6DDFBCDCC', _player);
}
/**
 * Hash: 0x89E005B1662F6E48 | ApiSet: undefined
 */
export function _0x89E005B1662F6E48(player, p1, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x89E005B1662F6E48', _player, p1, p2);
}
/**
 * ```
 * Only used in rcm_gunslinger1_1 R* Script: p0 = 0
 * ```
 * Hash: 0x82F11E1296996574 | ApiSet: undefined
 */
export function _0x82F11E1296996574(p0) {
    Citizen.invokeNative('0x82F11E1296996574', p0);
}
/**
 * ```
 * Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
 * ```
 * Hash: 0x9772395CC73E8D1F | ApiSet: undefined
 */
export function _0x9772395CC73E8D1F(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9772395CC73E8D1F', _ped, name);
}
/**
 * Hash: 0x9945A3E2528A02E8 | ApiSet: undefined
 */
export function _0x9945A3E2528A02E8(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x9945A3E2528A02E8', _player);
}
/**
 * Hash: 0x856CE8FDE2416602 | ApiSet: undefined
 */
export function _0x856CE8FDE2416602(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x856CE8FDE2416602', _ped);
}
/**
 * Hash: 0x95878B13E272EF1F | ApiSet: undefined
 */
export function _0x95878B13E272EF1F(entity, ped, p2, position, crimeType) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return Citizen.invokeNative('0x95878B13E272EF1F', _entity, _ped, p2, position.x, position.y, position.z, crimeType);
}
/**
 * Hash: 0x9B4C564BFA7CFF37 | ApiSet: undefined
 */
export function _0x9B4C564BFA7CFF37(p0) {
    Citizen.invokeNative('0x9B4C564BFA7CFF37', p0);
}
/**
 * Hash: 0x987BE590FB9D41E5 | ApiSet: undefined
 */
export function _0x987BE590FB9D41E5(p0) {
    Citizen.invokeNative('0x987BE590FB9D41E5', p0);
}
/**
 * Hash: 0x9C5BD8C562565CE6 | ApiSet: undefined
 */
export function _0x9C5BD8C562565CE6() {
    return Citizen.invokeNative('0x9C5BD8C562565CE6');
}
/**
 * Hash: 0x9D5C9A5A3321B128 | ApiSet: undefined
 */
export function _0x9D5C9A5A3321B128(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x9D5C9A5A3321B128', _player);
}
/**
 * ```
 * Only used in act_bankrobbery01 R* Script
 * ```
 * Hash: 0x9C8A2BF37E966464 | ApiSet: undefined
 */
export function _0x9C8A2BF37E966464(player, itemSet) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x9C8A2BF37E966464', _player, itemSet);
}
/**
 * ```
 * Only used in shoprobberies R* Scripts
 * ```
 * Hash: 0x9EF07CFBB19A9733 | ApiSet: undefined
 */
export function _0x9EF07CFBB19A9733() {
    return Citizen.invokeNative('0x9EF07CFBB19A9733');
}
/**
 * ```
 * Only used in rcm_serial_killer1 R* Script
 * ```
 * Hash: 0xC0DF161950FB101E | ApiSet: undefined
 */
export function _0xC0DF161950FB101E(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xC0DF161950FB101E', _ped);
}
/**
 * Hash: 0xB527099D1E1EED49 | ApiSet: undefined
 */
export function _0xB527099D1E1EED49(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xB527099D1E1EED49', _player, p1);
}
/**
 * Hash: 0xC5EB2755FA25F1E9 | ApiSet: undefined
 */
export function _0xC5EB2755FA25F1E9(p0) {
    Citizen.invokeNative('0xC5EB2755FA25F1E9', p0);
}
/**
 * ```
 * Called together with REPORT_POLICE_SPOTTED_PLAYER
 * ```
 * Hash: 0xBD944A3D36E992DE | ApiSet: undefined
 */
export function _0xBD944A3D36E992DE() {
    Citizen.invokeNative('0xBD944A3D36E992DE');
}
/**
 * Hash: 0xC687A23E166DCF68 | ApiSet: undefined
 */
export function _0xC687A23E166DCF68() {
    return Citizen.invokeNative('0xC687A23E166DCF68');
}
/**
 * Hash: 0xC310239ACCCF5579 | ApiSet: undefined
 */
export function _0xC310239ACCCF5579() {
    Citizen.invokeNative('0xC310239ACCCF5579');
}
/**
 * Hash: 0xCBFB4951F2E3934C | ApiSet: undefined
 */
export function _0xCBFB4951F2E3934C(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xCBFB4951F2E3934C', _player);
}
/**
 * ```
 * _GET_DISPATCH_*
 * ```
 * Hash: 0xC7DC5A0A7DF608CB | ApiSet: undefined
 */
export function _0xC7DC5A0A7DF608CB(flag) {
    return Citizen.invokeNative('0xC7DC5A0A7DF608CB', flag);
}
/**
 * Hash: 0xD6C0A8C7C0B2F82C | ApiSet: undefined
 */
export function _0xD6C0A8C7C0B2F82C(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xD6C0A8C7C0B2F82C', _player, p1);
}
/**
 * ```
 * Only used in R* SP Scripts
 * Params: p1 = true, p2 = false
 * ```
 * Hash: 0xDA1A9ADC4E3D4B16 | ApiSet: undefined
 */
export function _0xDA1A9ADC4E3D4B16(itemSet, p1, p2) {
    Citizen.invokeNative('0xDA1A9ADC4E3D4B16', itemSet, p1, p2);
}
/**
 * ```
 * Only used in R* SP Scripts
 * Params: p2 either 1 or 2
 * ```
 * Hash: 0xD7494DED50C6EF52 | ApiSet: undefined
 */
export function _0xD7494DED50C6EF52(player, crimeType, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    Citizen.invokeNative('0xD7494DED50C6EF52', _player, crimeType, p2);
}
/**
 * Hash: 0xDCF12B89624AAC96 | ApiSet: undefined
 */
export function _0xDCF12B89624AAC96(p0) {
    Citizen.invokeNative('0xDCF12B89624AAC96', p0);
}
/**
 * ```
 * crimeType: see _REPORT_CRIME
 * ```
 * Hash: 0xDAEFDFDB2AEECE37 | ApiSet: undefined
 */
export function _0xDAEFDFDB2AEECE37(crimeType, p1) {
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return Citizen.invokeNative('0xDAEFDFDB2AEECE37', crimeType, p1);
}
/**
 * Hash: 0xDDCE8E960D1DE240 | ApiSet: undefined
 */
export function _0xDDCE8E960D1DE240(p0) {
    Citizen.invokeNative('0xDDCE8E960D1DE240', p0);
}
/**
 * Hash: 0xDEA083C16BB91345 | ApiSet: undefined
 */
export function _0xDEA083C16BB91345() {
    Citizen.invokeNative('0xDEA083C16BB91345');
}
/**
 * Hash: 0xE083BEDA81709891 | ApiSet: undefined
 */
export function _0xE083BEDA81709891(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xE083BEDA81709891', _player);
}
/**
 * Hash: 0xE4D6E45F491A66CB | ApiSet: undefined
 */
export function _0xE4D6E45F491A66CB(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xE4D6E45F491A66CB', _player, p1);
}
/**
 * ```
 * Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
 * Only used in R* SP Scripts, mostly used in train_fast_travel_core
 * ```
 * Hash: 0xE94B5E938619712E | ApiSet: undefined
 */
export function _0xE94B5E938619712E() {
    Citizen.invokeNative('0xE94B5E938619712E');
}
/**
 * ```
 * Only used in R* SP Scripts
 * Params: p1 = 0
 * ```
 * Hash: 0xE9AC8466ABE484BB | ApiSet: undefined
 */
export function _0xE9AC8466ABE484BB(p0, p1) {
    Citizen.invokeNative('0xE9AC8466ABE484BB', p0, p1);
}
/**
 * ```
 * Returns p1 value for 0xE4D6E45F491A66CB
 * ```
 * Hash: 0xE9EB79CBF9C0F58A | ApiSet: undefined
 */
export function _0xE9EB79CBF9C0F58A(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xE9EB79CBF9C0F58A', _player);
}
/**
 * ```
 * _SET_C* - _SET_D*
 * ```
 * Hash: 0xEDFC6C1FD1C964F5 | ApiSet: undefined
 */
export function _0xEDFC6C1FD1C964F5(player, crimeType, bounty, p3, p4, p5, p6, p7, p8) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    Citizen.invokeNative('0xEDFC6C1FD1C964F5', _player, crimeType, bounty, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0xF46108C50A22B029 | ApiSet: undefined
 */
export function _0xF46108C50A22B029() {
    return Citizen.invokeNative('0xF46108C50A22B029');
}
/**
 * Hash: 0xF611DE44AEB36A1D | ApiSet: undefined
 */
export function _0xF611DE44AEB36A1D(crimeType, p1) {
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    Citizen.invokeNative('0xF611DE44AEB36A1D', crimeType, p1);
}
/**
 * Hash: 0xFFEBE5AA96BC2E4E | ApiSet: undefined
 */
export function _0xFFEBE5AA96BC2E4E(ped, crimeType, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return Citizen.invokeNative('0xFFEBE5AA96BC2E4E', _ped, crimeType, p2);
}
/**
 * ```
 * Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
 * ```
 * Hash: 0xC08E804C91F47C80 | ApiSet: undefined
 */
export function numCrimesSuppressed(player, crimeType) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    return NumCrimesSuppressed(_player, crimeType);
}
/**
 * ```
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 * ```
 * Hash: 0xC61EDEBF16CD9668 | ApiSet: undefined
 */
export function pauseBountyHunterCooldown(p0, p1, p2) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    PauseBountyHunterCooldown(p0, p1, p2);
}
/**
 * Hash: 0x67EBDD958835956C | ApiSet: undefined
 */
export function removeGuardZone(name) {
    RemoveGuardZone(name);
}
/**
 * ```
 * crimeType:
 * enum eCrimeType : Hash
 * {
 * CRIME_ACCOMPLICE = 0xAF074F6D,
 * CRIME_ARSON = 0x68134DC7,
 * CRIME_ASSAULT = 0x0BADC882,
 * CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
 * CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
 * CRIME_ASSAULT_HORSE = 0xC4736181,
 * CRIME_ASSAULT_LAW = 0xD7466D7C,
 * CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
 * CRIME_BANK_ROBBERY = 0x6A1ADE3D,
 * CRIME_BURGLARY = 0xA54C77E0,
 * CRIME_CHEATING = 0xA2FF1145,
 * CRIME_DISTURBANCE = 0x5011F613,
 * CRIME_EXPLOSION = 0x3EBA7A37,
 * CRIME_EXPLOSION_POISON = 0x91D0A0E1,
 * CRIME_GRAVE_ROBBERY = 0x971EA5AF,
 * CRIME_HASSLE = 0x58488776,
 * CRIME_HIT_AND_RUN = 0xFF0A3CC4,
 * CRIME_HIT_AND_RUN_LAW = 0x064814AF,
 * CRIME_INTIMIDATION = 0x8319FBAB,
 * CRIME_JACK_HORSE = 0x82F7E4A2,
 * CRIME_JACK_VEHICLE = 0x6B981F4C,
 * CRIME_JAIL_BREAK = 0x12C1D589,
 * CRIME_KIDNAPPING = 0x98F908DB,
 * CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
 * CRIME_LASSO_ASSAULT = 0x56EE5D5A,
 * CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
 * CRIME_LOITERING = 0x6629D2F4,
 * CRIME_LOOTING = 0x55AD2BEB,
 * CRIME_MURDER = 0xE28ECE7E,
 * CRIME_MURDER_ANIMAL = 0x48F59A66,
 * CRIME_MURDER_HORSE = 0xC7261D79,
 * CRIME_MURDER_LAW = 0x7797FCE7,
 * CRIME_MURDER_LIVESTOCK = 0x9569C546,
 * CRIME_MURDER_PLAYER = 0xF5ABD6C9,
 * CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
 * CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
 * CRIME_RESIST_ARREST = 0xDF577BA5,
 * CRIME_ROBBERY = 0xA3BEDE4C,
 * CRIME_SELF_DEFENCE = 0xBD6A0AA3,
 * CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
 * CRIME_STOLEN_GOODS = 0x9A949C79,
 * CRIME_THEFT = 0x72ADE410,
 * CRIME_THEFT_HORSE = 0xBE3A5838,
 * CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
 * CRIME_THEFT_VEHICLE = 0x43A9ECA1,
 * CRIME_THREATEN = 0x941C985A,
 * CRIME_THREATEN_LAW = 0x7F908566,
 * CRIME_TRAIN_ROBBERY = 0x647D2A5A,
 * CRIME_TRAMPLE = 0x45DB39D8,
 * CRIME_TRAMPLE_LAW = 0xF00F266B,
 * CRIME_TRAMPLE_PLAYER = 0x75970C15,
 * CRIME_TRESPASSING = 0xAEDE8E35,
 * CRIME_UNARMED_ASSAULT = 0x5098CC5A,
 * CRIME_VANDALISM = 0x80FDC759,
 * CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
 * CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
 * CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
 * CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
 * };
 * ```
 * Hash: 0xF60386770878A98F | ApiSet: undefined
 */
export function reportCrime(player, crimeType, bounty, entity, isKnownSuspect) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    ReportCrime(_player, crimeType, bounty, _entity, isKnownSuspect);
}
/**
 * Hash: 0x9C4352134B2835FB | ApiSet: undefined
 */
export function reportPlayerLawDispatchResponseOverride(player, dispatchResponseHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof dispatchResponseHash === 'string')
        dispatchResponseHash = this.getHashKey(dispatchResponseHash);
    ReportPlayerLawDispatchResponseOverride(_player, dispatchResponseHash);
}
/**
 * Hash: 0x2728C77FBC4B9796 | ApiSet: undefined
 */
export function resetWantedForNewIncident(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ResetWantedForNewIncident(_player);
}
/**
 * Hash: 0x4B52BF96E225D230 | ApiSet: undefined
 */
export function setAllowDisabledLawResponses(toggle) {
    SetAllowDisabledLawResponses(toggle);
}
/**
 * ```
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 * ```
 * Hash: 0xF19706B1F8FFA88F | ApiSet: undefined
 */
export function setBountyHunterGlobalCooldown(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    SetBountyHunterGlobalCooldown(p0, p1);
}
/**
 * Hash: 0x093A9D1F72DF0D19 | ApiSet: undefined
 */
export function setBounty(player, amount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetBounty(_player, amount);
}
/**
 * ```
 * Note: This native is only used in multiplayer scripts
 * dispatchResponseHash: see update1/common/data/dispatchresponses/..
 * ```
 * Hash: 0x009CF9A29972C298 | ApiSet: undefined
 */
export function setCustomLawDispatchResponse(dispatchResponseHash) {
    if (typeof dispatchResponseHash === 'string')
        dispatchResponseHash = this.getHashKey(dispatchResponseHash);
    SetCustomLawDispatchResponse(dispatchResponseHash);
}
/**
 * Hash: 0x002BABE0B7D53136 | ApiSet: undefined
 */
export function setDispatchMultiplierOverride(multiplier) {
    SetDispatchMultiplierOverride(multiplier);
}
/**
 * ```
 * Force clears local player's wanted level
 * ```
 * Hash: 0x55F37F5F3F2475E1 | ApiSet: undefined
 */
export function setBountyHunterPursuitCleared() {
    SetBountyHunterPursuitCleared();
}
/**
 * Hash: 0xDE5FAA741A781F73 | ApiSet: undefined
 */
export function setDisableDisturbanceCrimes(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDisableDisturbanceCrimes(_player, p1);
}
/**
 * Hash: 0x7E7BF59F89FC6C6D | ApiSet: undefined
 */
export function setGuardZonePosition(name, position) {
    SetGuardZonePosition(name, position.x, position.y, position.z);
}
/**
 * Hash: 0x2F9005E2EA4E5EE4 | ApiSet: undefined
 */
export function setGuardZonePosition2(name, position) {
    SetGuardZonePosition2(name, position.x, position.y, position.z);
}
/**
 * Hash: 0xA8A74AA79FB67159 | ApiSet: undefined
 */
export function setGuardZoneVolumeRegistrationEnd(name, volume) {
    SetGuardZoneVolumeRegistrationEnd(name, volume);
}
/**
 * Hash: 0x35815F372D43E1E5 | ApiSet: undefined
 */
export function setGuardZoneVolumeRestricted(name, volume) {
    SetGuardZoneVolumeRestricted(name, volume);
}
/**
 * Hash: 0xAD3E07C37A7C1ADC | ApiSet: undefined
 */
export function setGuardZoneVolumeWarning(name, volume) {
    SetGuardZoneVolumeWarning(name, volume);
}
/**
 * Hash: 0x8C598A930F471938 | ApiSet: undefined
 */
export function setGuardZoneVolumeRegistrationStart(name, volume) {
    SetGuardZoneVolumeRegistrationStart(name, volume);
}
/**
 * Hash: 0x9BBDCB8DF789EBC1 | ApiSet: undefined
 */
export function setLawRbsVolume(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetLawRbsVolume(_player, p1);
}
/**
 * Hash: 0xA1B0E6301E2E02A6 | ApiSet: undefined
 */
export function setGuardZoneVolumeThreat(name, volume) {
    SetGuardZoneVolumeThreat(name, volume);
}
/**
 * Hash: 0x8DE82BC774F3B862 | ApiSet: undefined
 */
export function setLawDisabled(toggle) {
    SetLawDisabled(toggle);
}
/**
 * ```
 * Default range is 1.0f
 * ```
 * Hash: 0xFEC85339AACA2A35 | ApiSet: undefined
 */
export function setLawSenseRangeModifier(player, range) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetLawSenseRangeModifier(_player, range);
}
/**
 * ```
 * enum eLawRegion : Hash
 * {
 * LAW_DISPATCH_REGION_NONE = 0,
 * LAW_REGION_AGUASDULCES = 0x2F573EBE,
 * LAW_REGION_ANNESBURG = 0x68CAFD50,
 * LAW_REGION_ARMADILLO = 0xF0B90756,
 * LAW_REGION_BAYOU_NWA = 0x80966B1C,
 * LAW_REGION_BEECHERS_HOPE = 0xE2544977,
 * LAW_REGION_BIG_VALLEY = 0x3DF1559A,
 * LAW_REGION_BLACKWATER = 0x60D4886D,
 * LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
 * LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
 * LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
 * LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
 * LAW_REGION_CALIGA_HALL = 0xF3FE5080,
 * LAW_REGION_CORNWALL = 0xCC4672FA,
 * LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
 * LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
 * LAW_REGION_FORT_WALLACE = 0x0AF25192,
 * LAW_REGION_GREAT_PLAINS = 0xB20573FA,
 * LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
 * LAW_REGION_GRIZZLIES = 0xBB936031,
 * LAW_REGION_GUAMA = 0x200DFF42,
 * LAW_REGION_HEARTLANDS = 0xAD14DA65,
 * LAW_REGION_LAGRAS = 0xC64808D3,
 * LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
 * LAW_REGION_MANICATO = 0x039DB6BF,
 * LAW_REGION_MANZANITA_POST = 0x895E580E,
 * LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
 * LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
 * LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
 * LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
 * LAW_REGION_OUTLAW3 = 0x97A02FC1,
 * LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
 * LAW_REGION_RHODES = 0x89222928,
 * LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
 * LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
 * LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
 * LAW_REGION_SAINT_DENIS = 0x5CF7C268,
 * LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
 * LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
 * LAW_REGION_SISIKA = 0x2B6BBA52,
 * LAW_REGION_STRAWBERRY = 0xDD932620,
 * LAW_REGION_TALL_TREES = 0xD939B758,
 * LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
 * LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
 * LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
 * LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
 * LAW_REGION_VALENTINE = 0xA7A3F0C3,
 * LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
 * LAW_REGION_VAN_HORN = 0x619B528E,
 * LAW_REGION_WAPITI = 0x7A976E02
 * };
 * ```
 * Hash: 0x4752F68EB7F2D280 | ApiSet: undefined
 */
export function setLawRegion(player, lawRegionHash, stateHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof lawRegionHash === 'string')
        lawRegionHash = this.getHashKey(lawRegionHash);
    if (typeof stateHash === 'string')
        stateHash = this.getHashKey(stateHash);
    SetLawRegion(_player, lawRegionHash, stateHash);
}
/**
 * ```
 * behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
 * ```
 * Hash: 0x819ADD5EF1742F47 | ApiSet: undefined
 */
export function setPedLawBehaviour(ped, behaviour) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLawBehaviour(_ped, behaviour);
}
/**
 * Hash: 0x73BAD7B2F2DB50DE | ApiSet: undefined
 */
export function setPlayerTurnedInBountyInRegion(player, lawRegionHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof lawRegionHash === 'string')
        lawRegionHash = this.getHashKey(lawRegionHash);
    SetPlayerTurnedInBountyInRegion(_player, lawRegionHash);
}
/**
 * Hash: 0xA80FF73F772ACF6A | ApiSet: undefined
 */
export function setWantedScore(player, intensity) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetWantedScore(_player, intensity);
}
/**
 * Hash: 0xE0FA74AA3CCE650B | ApiSet: undefined
 */
export function setPlayerArrestedInRegion(player, lawRegionHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof lawRegionHash === 'string')
        lawRegionHash = this.getHashKey(lawRegionHash);
    SetPlayerArrestedInRegion(_player, lawRegionHash);
}
/**
 * Hash: 0x362086B911657B1A | ApiSet: undefined
 */
export function setPostponeDisturbanceCrimesDuringCombat(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPostponeDisturbanceCrimesDuringCombat(_player, p1);
}
/**
 * ```
 * crimeType: see _REPORT_CRIME
 * ```
 * Hash: 0x785177E4D57D7389 | ApiSet: undefined
 */
export function suppressCrimeThisFrame(player, crimeType, p2, p3, p4) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof crimeType === 'string')
        crimeType = this.getHashKey(crimeType);
    SuppressCrimeThisFrame(_player, crimeType, p2, p3, p4);
}
/**
 * ```
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 * ```
 * Hash: 0xDB917DA5C6835FCC | ApiSet: undefined
 */
export function getCurrentLanguage() {
    return GetCurrentLanguage();
}
/**
 * ```
 * 0 = DATE_FORMAT_DMY
 * 1 = DATE_FORMAT_MDY
 * 2 = DATE_FORMAT_YMD
 * ```
 * Hash: 0x76E30B799EBEEA0F | ApiSet: undefined
 */
export function localizationGetSystemDateType() {
    return LocalizationGetSystemDateType();
}
/**
 * ```
 * Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
 * _DOES_*
 * ```
 * Hash: 0x45D50415E4D885FF | ApiSet: undefined
 */
export function doesCurrentLanguageSupportCondensedStyle() {
    return DoesCurrentLanguageSupportCondensedStyle();
}
/**
 * ```
 * Same return values as GET_CURRENT_LANGUAGE
 * ```
 * Hash: 0x3C1A05F86AE6ACB5 | ApiSet: undefined
 */
export function localizationGetSystemLanguage() {
    return LocalizationGetSystemLanguage();
}
/**
 * ```
 * It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
 * ```
 * Hash: 0xDEEDE7C41742E011 | ApiSet: undefined
 */
export function abandonBlip(blip) {
    AbandonBlip(blip);
}
/**
 * Hash: 0x64C59DD6834FA942 | ApiSet: undefined
 */
export function addPointToGpsMultiRoute(position, p3) {
    AddPointToGpsMultiRoute(position.x, position.y, position.z, p3);
}
/**
 * ```
 * list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
 * ```
 * Hash: 0x1392105DA88BBFFB | ApiSet: undefined
 */
export function addPropToMinimap(minimapProp, x, y, rotation, p4) {
    if (typeof minimapProp === 'string')
        minimapProp = this.getHashKey(minimapProp);
    AddPropToMinimap(minimapProp, x, y, rotation, p4);
}
/**
 * Hash: 0x6E6E64788C07D2E0 | ApiSet: undefined
 */
export function allowSonarBlips(toggle) {
    AllowSonarBlips(toggle);
}
/**
 * Hash: 0xEC174ADBCB611ECC | ApiSet: undefined
 */
export function blipAddForArea(blipHash, position, scaleX, scaleY, scaleZ, p7) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForArea(blipHash, position.x, position.y, position.z, scaleX, scaleY, scaleZ, p7);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
 * ```
 * Hash: 0x554D9D53F696D002 | ApiSet: undefined
 */
export function blipAddForCoords(blipHash, position) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForCoords(blipHash, position.x, position.y, position.z);
}
/**
 * Hash: 0x23F74C2FDA6E7C61 | ApiSet: undefined
 */
export function blipAddForEntity(blipHash, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForEntity(blipHash, _entity);
}
/**
 * Hash: 0xA486008892065FB9 | ApiSet: undefined
 */
export function blipAddForPickupPlacement(blipHash, pickup) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForPickupPlacement(blipHash, pickup);
}
/**
 * Hash: 0x45F13B7E0A15C880 | ApiSet: undefined
 */
export function blipAddForRadius(blipHash, position, radius) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForRadius(blipHash, position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x3E593DF9C2962EC6 | ApiSet: undefined
 */
export function blipAddForStyle(styleHash) {
    if (typeof styleHash === 'string')
        styleHash = this.getHashKey(styleHash);
    return BlipAddForStyle(styleHash);
}
/**
 * Hash: 0xA6EF0C54A3443E70 | ApiSet: undefined
 */
export function blipAddForVolume(blipHash, volume) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    return BlipAddForVolume(blipHash, volume);
}
/**
 * ```
 * https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
 * ```
 * Hash: 0x662D364ABF16DE2F | ApiSet: undefined
 */
export function blipAddModifier(blip, modifierHash) {
    if (typeof modifierHash === 'string')
        modifierHash = this.getHashKey(modifierHash);
    return BlipAddModifier(blip, modifierHash);
}
/**
 * ```
 * If modifierHash is 0, ALL modifiers will be removed.
 * ```
 * Hash: 0xB059D7BD3D78C16F | ApiSet: undefined
 */
export function blipRemoveModifier(blip, modifierHash) {
    if (typeof modifierHash === 'string')
        modifierHash = this.getHashKey(modifierHash);
    return BlipRemoveModifier(blip, modifierHash);
}
/**
 * Hash: 0xBD62D98799A3DAF0 | ApiSet: undefined
 */
export function blipAddStyle(blip, styleHash) {
    if (typeof styleHash === 'string')
        styleHash = this.getHashKey(styleHash);
    return BlipAddStyle(blip, styleHash);
}
/**
 * Hash: 0x1EAA5674B4D181C5 | ApiSet: undefined
 */
export function clearGpsCustomRoute() {
    ClearGpsCustomRoute();
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
 * Removes any existing modifiers and sets the style.
 * ```
 * Hash: 0xEDD964B7984AC291 | ApiSet: undefined
 */
export function blipSetStyle(blip, styleHash) {
    if (typeof styleHash === 'string')
        styleHash = this.getHashKey(styleHash);
    return BlipSetStyle(blip, styleHash);
}
/**
 * ```
 * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
 * ```
 * Hash: 0x9E0AB9AAEE87CE28 | ApiSet: undefined
 */
export function clearGpsMultiRoute() {
    ClearGpsMultiRoute();
}
/**
 * ```
 * Clears the GPS flags.
 * ```
 * Hash: 0x4D3771237C79FF41 | ApiSet: undefined
 */
export function clearGpsFlags() {
    ClearGpsFlags();
}
/**
 * Hash: 0x08FDC6F796E350D1 | ApiSet: undefined
 */
export function clearGpsPlayerWaypoint() {
    ClearGpsPlayerWaypoint();
}
/**
 * ```
 * If Minimap / Radar should be displayed.
 * ```
 * Hash: 0x1B3DA717B9AFF828 | ApiSet: undefined
 */
export function displayRadar(toggle) {
    DisplayRadar(toggle);
}
/**
 * Hash: 0x9FA00E2FC134A9D0 | ApiSet: undefined
 */
export function doesEntityHaveBlip(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return DoesEntityHaveBlip(_entity);
}
/**
 * Hash: 0xCD82FA174080B3B1 | ApiSet: undefined
 */
export function doesBlipExist(blip) {
    return DoesBlipExist(blip);
}
/**
 * Hash: 0x3FDA2B79AEEE351C | ApiSet: undefined
 */
export function findClosestGpsPosition(position) {
    const result = FindClosestGpsPosition(position.x, position.y, position.z);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Doesn't actually return anything.
 * ```
 * Hash: 0xEE1C7BA69BB74B08 | ApiSet: undefined
 */
export function forceSonarBlipsThisFrame() {
    return ForceSonarBlipsThisFrame();
}
/**
 * Hash: 0x201C319797BDA603 | ApiSet: undefined
 */
export function getBlipCoords(blip) {
    return new Vector3(GetBlipCoords(blip));
}
/**
 * ```
 * Returns the Blip handle of given Entity.
 * ```
 * Hash: 0x6D2C41A8BD6D6FD0 | ApiSet: undefined
 */
export function getBlipFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetBlipFromEntity(_entity);
}
/**
 * Hash: 0x5CD2889B2B381D45 | ApiSet: undefined
 */
export function getMainPlayerBlipId() {
    return GetMainPlayerBlipId();
}
/**
 * Hash: 0x29B30D07C3F7873B | ApiSet: undefined
 */
export function getWaypointCoords() {
    return new Vector3(GetWaypointCoords());
}
/**
 * Hash: 0xE9F676788F8D5E1E | ApiSet: undefined
 */
export function isBlipAttachedToAnyEntity(blip) {
    return IsBlipAttachedToAnyEntity(blip);
}
/**
 * Hash: 0xA1B4052C2A3DCC1E | ApiSet: undefined
 */
export function hideActivePointsOfInterest() {
    HideActivePointsOfInterest();
}
/**
 * Hash: 0x46534526B9CD2D17 | ApiSet: undefined
 */
export function isBlipOnMinimap(blip) {
    return IsBlipOnMinimap(blip);
}
/**
 * Hash: 0x202B1BBFC6AB5EE4 | ApiSet: undefined
 */
export function isWaypointActive() {
    return IsWaypointActive();
}
/**
 * ```
 * Locks the minimap to the specified angle in integer degrees.
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 * ```
 * Hash: 0x0BFD145EF819FB3A | ApiSet: undefined
 */
export function lockMinimapAngle(angle) {
    LockMinimapAngle(angle);
}
/**
 * Hash: 0x6786D7AFAC3162B3 | ApiSet: undefined
 */
export function mapDisableRegionBlip(regionHash) {
    if (typeof regionHash === 'string')
        regionHash = this.getHashKey(regionHash);
    MapDisableRegionBlip(regionHash);
}
/**
 * Hash: 0xD8C7162AB2E2AF45 | ApiSet: undefined
 */
export function mapDiscoverRegion(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    MapDiscoverRegion(discoveryHash);
}
/**
 * Hash: 0xDA98246C7A3C2189 | ApiSet: undefined
 */
export function mapDiscoverySetEnabled(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    MapDiscoverySetEnabled(discoveryHash);
}
/**
 * ```
 * regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
 * ```
 * Hash: 0x563FCB6620523917 | ApiSet: undefined
 */
export function mapEnableRegionBlip(regionHash, styleHash) {
    if (typeof regionHash === 'string')
        regionHash = this.getHashKey(regionHash);
    if (typeof styleHash === 'string')
        styleHash = this.getHashKey(styleHash);
    MapEnableRegionBlip(regionHash, styleHash);
}
/**
 * Hash: 0x3F81EA4275D39D6F | ApiSet: undefined
 */
export function mapIsDiscoveryActive(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    return MapIsDiscoveryActive(discoveryHash);
}
/**
 * Hash: 0xE38450DBCBC70E3D | ApiSet: undefined
 */
export function mapIsRegionHighlightedWithStyle(regionHash, styleHash) {
    if (typeof regionHash === 'string')
        regionHash = this.getHashKey(regionHash);
    if (typeof styleHash === 'string')
        styleHash = this.getHashKey(styleHash);
    return MapIsRegionHighlightedWithStyle(regionHash, styleHash);
}
/**
 * Hash: 0x1726963E6049DB53 | ApiSet: undefined
 */
export function _0x1726963E6049DB53(p0) {
    Citizen.invokeNative('0x1726963E6049DB53', p0);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0x01B928CA2E198B01 | ApiSet: undefined
 */
export function _0x01B928CA2E198B01(p0) {
    return Citizen.invokeNative('0x01B928CA2E198B01', p0);
}
/**
 * Hash: 0x250C75EB1728CC0D | ApiSet: undefined
 */
export function _0x250C75EB1728CC0D(blip) {
    Citizen.invokeNative('0x250C75EB1728CC0D', blip);
}
/**
 * ```
 * FM_CLIENT_SETUP_EAGLE_EYE - setting up eagle eye for entity
 * ```
 * Hash: 0x7563CBCA99253D1A | ApiSet: undefined
 */
export function _0x7563CBCA99253D1A(entity, blip) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof blip === 'string')
        blip = this.getHashKey(blip);
    Citizen.invokeNative('0x7563CBCA99253D1A', _entity, blip);
}
/**
 * Hash: 0x3CB8859F04763C78 | ApiSet: undefined
 */
export function _0x3CB8859F04763C78(p0, p1) {
    return Citizen.invokeNative('0x3CB8859F04763C78', p0, p1);
}
/**
 * Hash: 0x97F6F158CC5B5CA2 | ApiSet: undefined
 */
export function _0x97F6F158CC5B5CA2(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x97F6F158CC5B5CA2', _entity, p1);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0x44813684F72B563C | ApiSet: undefined
 */
export function _0x44813684F72B563C(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x44813684F72B563C', _entity, p1);
}
/**
 * Hash: 0xBB68D4D3CA3DE402 | ApiSet: undefined
 */
export function _0xBB68D4D3CA3DE402(p0, p1) {
    Citizen.invokeNative('0xBB68D4D3CA3DE402', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x7C9F4CDF402CA82A | ApiSet: undefined
 */
export function _0x7C9F4CDF402CA82A() {
    Citizen.invokeNative('0x7C9F4CDF402CA82A');
}
/**
 * Hash: 0xD3F58E9316B7FC2A | ApiSet: undefined
 */
export function _0xD3F58E9316B7FC2A(p0) {
    Citizen.invokeNative('0xD3F58E9316B7FC2A', p0);
}
/**
 * Hash: 0xF08E42BFA46BDFF8 | ApiSet: undefined
 */
export function _0xF08E42BFA46BDFF8(p0, p1) {
    return Citizen.invokeNative('0xF08E42BFA46BDFF8', p0, p1);
}
/**
 * Hash: 0xF47A1EB2A538A3A3 | ApiSet: undefined
 */
export function _0xF47A1EB2A538A3A3() {
    return Citizen.invokeNative('0xF47A1EB2A538A3A3');
}
/**
 * Hash: 0xE057FEA9A22EB3EE | ApiSet: undefined
 */
export function removePropFromMinimap(minimapProp) {
    if (typeof minimapProp === 'string')
        minimapProp = this.getHashKey(minimapProp);
    RemovePropFromMinimap(minimapProp);
}
/**
 * Hash: 0xF2C3C9DA47AAA54A | ApiSet: undefined
 */
export function removeBlip(blip) {
    const _blip = blip instanceof Entity ? blip.handle() : blip;
    RemoveBlip(_blip);
}
/**
 * Hash: 0xF8096DF9B87246E3 | ApiSet: undefined
 */
export function revealMinimapFow(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    RevealMinimapFow(hash);
}
/**
 * Hash: 0xEB3CB3386C775D72 | ApiSet: undefined
 */
export function resetMinimapFow(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    ResetMinimapFow(hash);
}
/**
 * Hash: 0x02FF4CF43B7209D1 | ApiSet: undefined
 */
export function setBlipFlashTimer(blip, blipType, blipHash) {
    if (typeof blipHash === 'string')
        blipHash = this.getHashKey(blipHash);
    SetBlipFlashTimer(blip, blipType, blipHash);
}
/**
 * Hash: 0x4FF674F5E23D49CE | ApiSet: undefined
 */
export function setBlipCoords(blip, posX, posY, posZ) {
    SetBlipCoords(blip, posX, posY, posZ);
}
/**
 * Hash: 0x9CB1A1623062F402 | ApiSet: undefined
 */
export function setBlipName(blip, name) {
    SetBlipName(blip, name);
}
/**
 * Hash: 0x0DF2B55F717DDB10 | ApiSet: undefined
 */
export function setBlipFlashes(blip) {
    return SetBlipFlashes(blip);
}
/**
 * Hash: 0x0A062D6D7C0B2C2C | ApiSet: undefined
 */
export function setBlipNameFromTextFile(blip, textLabel) {
    SetBlipNameFromTextFile(blip, textLabel);
}
/**
 * Hash: 0x093DD5A31BC2B459 | ApiSet: undefined
 */
export function setBlipNameToPlayerName(blip, player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetBlipNameToPlayerName(blip, _player);
}
/**
 * Hash: 0x6049966A94FBE706 | ApiSet: undefined
 */
export function setBlipRotation(blip, rotation) {
    SetBlipRotation(blip, rotation);
}
/**
 * Hash: 0x74F74D3207ED525C | ApiSet: undefined
 */
export function setBlipSprite(blip, hash, p2) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    SetBlipSprite(blip, hash, p2);
}
/**
 * Hash: 0xD38744167B2FA257 | ApiSet: undefined
 */
export function setBlipScale(blip, scale) {
    SetBlipScale(blip, scale);
}
/**
 * Hash: 0xF6CEF599FC470B33 | ApiSet: undefined
 */
export function setGpsCustomRouteRender(p0, p1, p2) {
    SetGpsCustomRouteRender(p0, p1, p2);
}
/**
 * ```
 * Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
 * Hash p1 seems to be unused, always 0
 * ```
 * Hash: 0x63E7279D04160477 | ApiSet: undefined
 */
export function setFowUpdatePlayerOverride(toggle, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetFowUpdatePlayerOverride(toggle, p1);
}
/**
 * Hash: 0x4426D65E029A4DC0 | ApiSet: undefined
 */
export function setGpsMultiRouteRender(toggle) {
    SetGpsMultiRouteRender(toggle);
}
/**
 * ```
 * https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
 * ```
 * Hash: 0x5DE61C90DDECFA2D | ApiSet: undefined
 */
export function setGpsFlags(p0, p1) {
    SetGpsFlags(p0, p1);
}
/**
 * Hash: 0xE5A7F70B7C0F3271 | ApiSet: undefined
 */
export function setMinimapFowOverrideRevealScale(scale, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetMinimapFowOverrideRevealScale(scale, p1);
}
/**
 * ```
 * Up to eight coordinates may be revealed per frame
 * ```
 * Hash: 0x73348402566ECB6E | ApiSet: undefined
 */
export function setMinimapFowRevealCoordinate(position, p3) {
    if (typeof p3 === 'string')
        p3 = this.getHashKey(p3);
    SetMinimapFowRevealCoordinate(position.x, position.y, position.z, p3);
}
/**
 * Hash: 0x63CBBD6CA6F321F9 | ApiSet: undefined
 */
export function setMinimapFowRevealVolume(volume, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetMinimapFowRevealVolume(volume, p1);
}
/**
 * ```
 * Reveals the entire minimap (FOW = Fog of War)
 * ```
 * Hash: 0x4B8F743A4A6D2FF8 | ApiSet: undefined
 */
export function setMinimapHideFow(toggle) {
    SetMinimapHideFow(toggle);
}
/**
 * Hash: 0x632AA10BF7EA53D3 | ApiSet: undefined
 */
export function setMinimapFowShouldUpdate(toggle, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetMinimapFowShouldUpdate(toggle, p1);
}
/**
 * Hash: 0xE0884C184728C75B | ApiSet: undefined
 */
export function setPausemapCoordsWithRadius(position, radius) {
    SetPausemapCoordsWithRadius(position.x, position.y, position.z, radius);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
 * configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
 * p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
 * ```
 * Hash: 0x9C113883487FD53C | ApiSet: undefined
 */
export function setRadarConfigType(configHash, p1) {
    if (typeof configHash === 'string')
        configHash = this.getHashKey(configHash);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetRadarConfigType(configHash, p1);
}
/**
 * Hash: 0xFA8C41E8020D3439 | ApiSet: undefined
 */
export function setWaypointOff() {
    SetWaypointOff();
}
/**
 * ```
 * hash can be the hash of "guarma" or "world".
 * ```
 * Hash: 0xA657EC9DBC6CC900 | ApiSet: undefined
 */
export function setMinimapZone(zone) {
    if (typeof zone === 'string')
        zone = this.getHashKey(zone);
    SetMinimapZone(zone);
}
/**
 * Hash: 0xA8EBBAE986FB5457 | ApiSet: undefined
 */
export function setRadarAsExteriorThisFrame() {
    SetRadarAsExteriorThisFrame();
}
/**
 * Hash: 0xCAF6489DA2C8DD9E | ApiSet: undefined
 */
export function setRadarZoom(zoomLevel) {
    SetRadarZoom(zoomLevel);
}
/**
 * Hash: 0x6B44F13D888F770D | ApiSet: undefined
 */
export function startGpsCustomRouteFromWaypointRecordingRoute(waypointRecording, point, numPoints, colorNameHash, p4, p5) {
    if (typeof colorNameHash === 'string')
        colorNameHash = this.getHashKey(colorNameHash);
    StartGpsCustomRouteFromWaypointRecordingRoute(waypointRecording, point, numPoints, colorNameHash, p4, p5);
}
/**
 * Hash: 0x3FBB838AEA30C1D8 | ApiSet: undefined
 */
export function showActivePointsOfInterest() {
    ShowActivePointsOfInterest();
}
/**
 * Hash: 0x3D3D15AF7BCAAF83 | ApiSet: undefined
 */
export function startGpsMultiRoute(colorNameHash, onFoot, inVehicle) {
    if (typeof colorNameHash === 'string')
        colorNameHash = this.getHashKey(colorNameHash);
    StartGpsMultiRoute(colorNameHash, onFoot, inVehicle);
}
/**
 * Hash: 0x72DD432F3CDFC0EE | ApiSet: undefined
 */
export function triggerSonarBlip(typeHash, position) {
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    TriggerSonarBlip(typeHash, position.x, position.y, position.z);
}
/**
 * Hash: 0x5373DE8E179BC2A0 | ApiSet: undefined
 */
export function unlockMinimapAngle() {
    UnlockMinimapAngle();
}
/**
 * Hash: 0x0C7A2289A5C4D7C9 | ApiSet: undefined
 */
export function triggerSonarBlipOnEntity(typeHash, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    TriggerSonarBlipOnEntity(typeHash, _entity);
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * Hash: 0xB79A29B33BF29BA5 | ApiSet: undefined
 */
export function dominoesPlaceDomino(p0, p1) {
    return DominoesPlaceDomino(p0, p1);
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * Hash: 0x399E6CD12FC8CA89 | ApiSet: undefined
 */
export function dominoesBuyIn(p0) {
    return DominoesBuyIn(p0);
}
/**
 * Hash: 0x578907F59BA01B6C | ApiSet: undefined
 */
export function minigameGetNextEventType() {
    return MinigameGetNextEventType();
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * Hash: 0xE26AEE7E67D9E21D | ApiSet: undefined
 */
export function dominoesRequestValidPlacements(p0) {
    return DominoesRequestValidPlacements(p0);
}
/**
 * Hash: 0xDF728C5AE137FC13 | ApiSet: undefined
 */
export function minigameGetNextEvent(p0, p1) {
    return MinigameGetNextEvent(p0, p1);
}
/**
 * Hash: 0x2A0C4736AC5AF0CE | ApiSet: undefined
 */
export function minigameIsConnectedToServer(p0) {
    return MinigameIsConnectedToServer(p0);
}
/**
 * Hash: 0x9105A4A2556FA937 | ApiSet: undefined
 */
export function minigameIsRequestPending(p0) {
    return MinigameIsRequestPending(p0);
}
/**
 * Hash: 0x8593A8CB0ED2C3B4 | ApiSet: undefined
 */
export function minigameIsSeatOccupied(p0) {
    return MinigameIsSeatOccupied(p0);
}
/**
 * Hash: 0x012027C28F421F46 | ApiSet: undefined
 */
export function _0x012027C28F421F46(p0, p1) {
    return Citizen.invokeNative('0x012027C28F421F46', p0, p1);
}
/**
 * Hash: 0xF5446E47941E654C | ApiSet: undefined
 */
export function minigameLeaveTable(p0) {
    return MinigameLeaveTable(p0);
}
/**
 * Hash: 0x833E03BAEBADC4B0 | ApiSet: undefined
 */
export function minigamePopNextEvent() {
    MinigamePopNextEvent();
}
/**
 * Hash: 0x0876326238914A3F | ApiSet: undefined
 */
export function _0x0876326238914A3F() {
    Citizen.invokeNative('0x0876326238914A3F');
}
/**
 * Hash: 0xF6AC6085D8D6C004 | ApiSet: undefined
 */
export function minigameRequestSeatAtTable() {
    return MinigameRequestSeatAtTable();
}
/**
 * Hash: 0x10342CC82E8356E9 | ApiSet: undefined
 */
export function _0x10342CC82E8356E9(p0, p1) {
    return Citizen.invokeNative('0x10342CC82E8356E9', p0, p1);
}
/**
 * Hash: 0x15E90B6A993017AA | ApiSet: undefined
 */
export function _0x15E90B6A993017AA() {
    return Citizen.invokeNative('0x15E90B6A993017AA');
}
/**
 * Hash: 0x18A0D48DF9211C07 | ApiSet: undefined
 */
export function _0x18A0D48DF9211C07() {
    Citizen.invokeNative('0x18A0D48DF9211C07');
}
/**
 * Hash: 0x32A7C216344D623B | ApiSet: undefined
 */
export function _0x32A7C216344D623B(p0, p1, p2) {
    return Citizen.invokeNative('0x32A7C216344D623B', p0, p1, p2);
}
/**
 * Hash: 0x39654E1F68B78287 | ApiSet: undefined
 */
export function _0x39654E1F68B78287() {
    return Citizen.invokeNative('0x39654E1F68B78287');
}
/**
 * Hash: 0x3AE451860F03CA8A | ApiSet: undefined
 */
export function _0x3AE451860F03CA8A(p0, p1) {
    return Citizen.invokeNative('0x3AE451860F03CA8A', p0, p1);
}
/**
 * Hash: 0x398066F893149856 | ApiSet: undefined
 */
export function _0x398066F893149856(p0, p1, p2) {
    return Citizen.invokeNative('0x398066F893149856', p0, p1, p2);
}
/**
 * Hash: 0x3DF7EE3A76185108 | ApiSet: undefined
 */
export function _0x3DF7EE3A76185108() {
    Citizen.invokeNative('0x3DF7EE3A76185108');
}
/**
 * Hash: 0x3B31732FADE5BAF3 | ApiSet: undefined
 */
export function _0x3B31732FADE5BAF3() {
    return Citizen.invokeNative('0x3B31732FADE5BAF3');
}
/**
 * Hash: 0x3F4FD4BED07AB8C4 | ApiSet: undefined
 */
export function _0x3F4FD4BED07AB8C4(p0) {
    return Citizen.invokeNative('0x3F4FD4BED07AB8C4', p0);
}
/**
 * Hash: 0x3FFE60DD8A936551 | ApiSet: undefined
 */
export function _0x3FFE60DD8A936551(p0, p1) {
    return Citizen.invokeNative('0x3FFE60DD8A936551', p0, p1);
}
/**
 * Hash: 0x3EECAADAB0D9FE29 | ApiSet: undefined
 */
export function _0x3EECAADAB0D9FE29() {
    return Citizen.invokeNative('0x3EECAADAB0D9FE29');
}
/**
 * Hash: 0x455ECCA0715C507F | ApiSet: undefined
 */
export function _0x455ECCA0715C507F() {
    Citizen.invokeNative('0x455ECCA0715C507F');
}
/**
 * Hash: 0x580F34C726387226 | ApiSet: undefined
 */
export function _0x580F34C726387226(p0, p1) {
    return Citizen.invokeNative('0x580F34C726387226', p0, p1);
}
/**
 * Hash: 0x578907F59BA01B6D | ApiSet: undefined
 */
export function _0x578907F59BA01B6D(p0) {
    return Citizen.invokeNative('0x578907F59BA01B6D', p0);
}
/**
 * Hash: 0x644439B5387EE57E | ApiSet: undefined
 */
export function _0x644439B5387EE57E(p0, p1) {
    return Citizen.invokeNative('0x644439B5387EE57E', p0, p1);
}
/**
 * Hash: 0x58521E6DCDE97D74 | ApiSet: undefined
 */
export function _0x58521E6DCDE97D74(p0, p1, p2) {
    Citizen.invokeNative('0x58521E6DCDE97D74', p0, p1, p2);
}
/**
 * Hash: 0x6480723D3BE535B6 | ApiSet: undefined
 */
export function _0x6480723D3BE535B6(p0) {
    Citizen.invokeNative('0x6480723D3BE535B6', p0);
}
/**
 * Hash: 0x910B088E51A511AC | ApiSet: undefined
 */
export function _0x910B088E51A511AC() {
    return Citizen.invokeNative('0x910B088E51A511AC');
}
/**
 * Hash: 0x9DD95B405AB4983E | ApiSet: undefined
 */
export function _0x9DD95B405AB4983E(p0, p1) {
    return Citizen.invokeNative('0x9DD95B405AB4983E', p0, p1);
}
/**
 * Hash: 0xA2DB3C6270C122E3 | ApiSet: undefined
 */
export function _0xA2DB3C6270C122E3(p0, p1) {
    return Citizen.invokeNative('0xA2DB3C6270C122E3', p0, p1);
}
/**
 * Hash: 0xD39D32EB3B52DD83 | ApiSet: undefined
 */
export function _0xD39D32EB3B52DD83(p0) {
    return Citizen.invokeNative('0xD39D32EB3B52DD83', p0);
}
/**
 * Hash: 0xBEA7D3CB47E1479C | ApiSet: undefined
 */
export function _0xBEA7D3CB47E1479C() {
    return Citizen.invokeNative('0xBEA7D3CB47E1479C');
}
/**
 * Hash: 0xDF728C5AE137FC14 | ApiSet: undefined
 */
export function _0xDF728C5AE137FC14(p0, p1, p2) {
    return Citizen.invokeNative('0xDF728C5AE137FC14', p0, p1, p2);
}
/**
 * Hash: 0xE53A308AC35877A8 | ApiSet: undefined
 */
export function _0xE53A308AC35877A8() {
    return Citizen.invokeNative('0xE53A308AC35877A8');
}
/**
 * Hash: 0xF6DE98516FD3AC9B | ApiSet: undefined
 */
export function _0xF6DE98516FD3AC9B() {
    Citizen.invokeNative('0xF6DE98516FD3AC9B');
}
/**
 * Hash: 0xE1F365C4C8F259D8 | ApiSet: undefined
 */
export function _0xE1F365C4C8F259D8(p0, p1, p2) {
    return Citizen.invokeNative('0xE1F365C4C8F259D8', p0, p1, p2);
}
/**
 * Hash: 0x8DED681B161EBD78 | ApiSet: undefined
 */
export function pokerCall(p0, p1) {
    return PokerCall(p0, p1);
}
/**
 * Hash: 0xEC819D612038EF4B | ApiSet: undefined
 */
export function _0xEC819D612038EF4B(p0, p1, p2, p3, p4, p5, p6, p7) {
    return Citizen.invokeNative('0xEC819D612038EF4B', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x49A045628D9B1B86 | ApiSet: undefined
 */
export function pokerCheck(p0, p1) {
    return PokerCheck(p0, p1);
}
/**
 * Hash: 0xB4D610EA5A1FDE74 | ApiSet: undefined
 */
export function pokerBuyIn(p0, p1) {
    return PokerBuyIn(p0, p1);
}
/**
 * Hash: 0x3DFAB7D9BB45B5BE | ApiSet: undefined
 */
export function pokerFold(p0) {
    return PokerFold(p0);
}
/**
 * Hash: 0x2D20E12E1990D584 | ApiSet: undefined
 */
export function pokerGetGameSettingsForId(p0) {
    return PokerGetGameSettingsForId(p0);
}
/**
 * Hash: 0xECCF45A79A17BB96 | ApiSet: undefined
 */
export function pokerRaise(p0, p1) {
    return PokerRaise(p0, p1);
}
/**
 * Hash: 0x2F2131DB0A8B02DC | ApiSet: undefined
 */
export function pokerReveal(p0) {
    return PokerReveal(p0);
}
/**
 * Hash: 0x9AABABF8313C3516 | ApiSet: undefined
 */
export function missiondataGetHighScore(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataGetHighScore(missionId);
}
/**
 * Hash: 0x8C32D86E9556ED86 | ApiSet: undefined
 */
export function missiondataGetReplayState(p0) {
    return MissiondataGetReplayState(p0);
}
/**
 * Hash: 0x57E798B57C45EE16 | ApiSet: undefined
 */
export function missiondataGetTextureTxd(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataGetTextureTxd(missionId);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x57E798B65C45EE17 | ApiSet: undefined
 */
export function missiondataGetCatagory(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataGetCatagory(missionId);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE145864DECC34219 | ApiSet: undefined
 */
export function missiondataIsReplayCategoryLocked(category) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    return MissiondataIsReplayCategoryLocked(category);
}
/**
 * Hash: 0x57E798B54C45EE1A | ApiSet: undefined
 */
export function missiondataGetRating(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataGetRating(missionId);
}
/**
 * Hash: 0x57E798B56C45EE15 | ApiSet: undefined
 */
export function missiondataGetTextureName(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataGetTextureName(missionId);
}
/**
 * Hash: 0xE824CE7D13FCB35E | ApiSet: undefined
 */
export function missiondataIsRequiredStoryMission(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataIsRequiredStoryMission(missionId);
}
/**
 * Hash: 0xE54DC27571D5EDC5 | ApiSet: undefined
 */
export function missiondataIsValid(p0) {
    return MissiondataIsValid(p0);
}
/**
 * Hash: 0x3A04F0169DA87A9D | ApiSet: undefined
 */
export function missiondataSetHighScore(missionId, score) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    MissiondataSetHighScore(missionId, score);
}
/**
 * Hash: 0x12F65317708749A5 | ApiSet: undefined
 */
export function missiondataSetRatingScores(missionId, bronzeScore, silverScore, goldScore) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    MissiondataSetRatingScores(missionId, bronzeScore, silverScore, goldScore);
}
/**
 * ```
 * MISSION_RATING_INCOMPLETE = 0,
 * MISSION_RATING_SKIPPED,
 * MISSION_RATING_COMPLETE,
 * MISSION_RATING_BRONZE,
 * MISSION_RATING_SILVER,
 * MISSION_RATING_GOLD,
 * ```
 * Hash: 0xE824CE7D13FCB300 | ApiSet: undefined
 */
export function missiondataSetMissionRating(missionId, rating) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    MissiondataSetMissionRating(missionId, rating);
}
/**
 * ```
 * replayState: MISSIONDATA_GET_REPLAY_STATE
 * ```
 * Hash: 0xE4E2C581F127A11C | ApiSet: undefined
 */
export function missiondataSetReplayStateLocked(missionId, replayState) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    MissiondataSetReplayStateLocked(missionId, replayState);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x957A830C9B4B99EA | ApiSet: undefined
 */
export function missiondataSetReplayLockedForCategory(category, locked) {
    if (typeof category === 'string')
        category = this.getHashKey(category);
    MissiondataSetReplayLockedForCategory(category, locked);
}
/**
 * Hash: 0x7E8F86A4FA33033C | ApiSet: undefined
 */
export function missiondataTimecycleBoxExists() {
    return MissiondataTimecycleBoxExists();
}
/**
 * Hash: 0x7F89E15A8FB8DE97 | ApiSet: undefined
 */
export function missiondataTimecycleBoxDelete() {
    MissiondataTimecycleBoxDelete();
}
/**
 * Hash: 0x25855B1574BF8CD5 | ApiSet: undefined
 */
export function missiondataTimecycleBoxSetModifier(timecycleName) {
    MissiondataTimecycleBoxSetModifier(timecycleName);
}
/**
 * ```
 * see: missions.meta
 * ```
 * Hash: 0xE54DC27571D5EDC4 | ApiSet: undefined
 */
export function missiondataWasCompleted(missionId) {
    if (typeof missionId === 'string')
        missionId = this.getHashKey(missionId);
    return MissiondataWasCompleted(missionId);
}
/**
 * Hash: 0x466BC8769CF26A7A | ApiSet: undefined
 */
export function moneyDecrementCashBalance(amount) {
    return MoneyDecrementCashBalance(amount);
}
/**
 * Hash: 0xBC3422DC91667621 | ApiSet: undefined
 */
export function moneyIncrementCashBalance(amount, addReason) {
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    return MoneyIncrementCashBalance(amount, addReason);
}
/**
 * Hash: 0x8A67120DBC299525 | ApiSet: undefined
 */
export function networkGetCashBalance() {
    return NetworkGetCashBalance();
}
/**
 * Hash: 0x0C02DABFA3B98176 | ApiSet: undefined
 */
export function moneyGetCashBalance() {
    return MoneyGetCashBalance();
}
/**
 * Hash: 0xAEC5F0119867E457 | ApiSet: undefined
 */
export function networkIsMoneyBalanceNotLessThan(cashBalance, goldBarBalance) {
    return NetworkIsMoneyBalanceNotLessThan(cashBalance, goldBarBalance);
}
/**
 * Hash: 0x07AD9E43FD478527 | ApiSet: undefined
 */
export function _0x07AD9E43FD478527(p0, p1) {
    return Citizen.invokeNative('0x07AD9E43FD478527', p0, p1);
}
/**
 * Hash: 0xA46FD001D1BE896C | ApiSet: undefined
 */
export function _0xA46FD001D1BE896C() {
    return Citizen.invokeNative('0xA46FD001D1BE896C');
}
/**
 * Hash: 0x282D36FF103D78DF | ApiSet: undefined
 */
export function networkGetStringCashBalance() {
    return NetworkGetStringCashBalance();
}
/**
 * Hash: 0xD1CE92D1D9BE170A | ApiSet: undefined
 */
export function cashinventoryInitSessionIsFaulted() {
    return CashinventoryInitSessionIsFaulted();
}
/**
 * Hash: 0xC019112F8995DC1C | ApiSet: undefined
 */
export function cashinventoryInitSessionStatus() {
    return CashinventoryInitSessionStatus();
}
/**
 * Hash: 0x6CE9FB6332B5E46E | ApiSet: undefined
 */
export function cashinventoryIsConnectionFaulted() {
    return CashinventoryIsConnectionFaulted();
}
/**
 * Hash: 0x52BDE32F21BA3B6D | ApiSet: undefined
 */
export function cashinventoryTransactionAddAward(id, hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return CashinventoryTransactionAddAward(id, hash);
}
/**
 * Hash: 0xFCC24220FDDAC929 | ApiSet: undefined
 */
export function cashinventoryIsSessionReady() {
    return CashinventoryIsSessionReady();
}
/**
 * Hash: 0xF65D2D35037BF5EC | ApiSet: undefined
 */
export function cashinventoryTransactionAddItemWithIngredients(id, item, p2, p3, p4) {
    return CashinventoryTransactionAddItemWithIngredients(id, item, p2, p3, p4);
}
/**
 * Hash: 0x3745C002F5A21C45 | ApiSet: undefined
 */
export function cashinventoryTransactionAddItem(id, item, p2) {
    return CashinventoryTransactionAddItem(id, item, p2);
}
/**
 * Hash: 0x26C008791D066F37 | ApiSet: undefined
 */
export function cashinventoryTransactionCheckoutStatus(id) {
    return CashinventoryTransactionCheckoutStatus(id);
}
/**
 * Hash: 0x592BC00BF6629BE7 | ApiSet: undefined
 */
export function cashinventoryTransactionCheckout(id) {
    return CashinventoryTransactionCheckout(id);
}
/**
 * Hash: 0x59EF5D516E2D96B9 | ApiSet: undefined
 */
export function cashinventoryTransactionDelete(id) {
    return CashinventoryTransactionDelete(id);
}
/**
 * Hash: 0xFFEA09CCEC4AF32F | ApiSet: undefined
 */
export function cashinventoryTransactionFireAndForgetItem(actionHash, p3) {
    if (typeof actionHash === 'string')
        actionHash = this.getHashKey(actionHash);
    return CashinventoryTransactionFireAndForgetItem(actionHash, p3);
}
/**
 * Hash: 0xBD2D520C51CCFF52 | ApiSet: undefined
 */
export function cashinventoryTransactionGetAction(id) {
    return CashinventoryTransactionGetAction(id);
}
/**
 * Hash: 0x52A226ADF4A270D2 | ApiSet: undefined
 */
export function cashinventoryTransactionGetBasketIsValid(id) {
    return CashinventoryTransactionGetBasketIsValid(id);
}
/**
 * Hash: 0x7616B5F0895C2D99 | ApiSet: undefined
 */
export function cashinventoryTransactionGetItemInfo(id, index) {
    return CashinventoryTransactionGetItemInfo(id, index);
}
/**
 * Hash: 0x98412398BBE73F61 | ApiSet: undefined
 */
export function cashinventoryTransactionResponseGetItemInfo(id, index) {
    return CashinventoryTransactionResponseGetItemInfo(id, index);
}
/**
 * Hash: 0xCF2D04D076847478 | ApiSet: undefined
 */
export function cashinventoryTransactionGetNumOfItems(id) {
    return CashinventoryTransactionGetNumOfItems(id);
}
/**
 * Hash: 0xF039EC27F4490E96 | ApiSet: undefined
 */
export function cashinventoryTransactionStart(type, actionHash) {
    if (typeof type === 'string')
        type = this.getHashKey(type);
    if (typeof actionHash === 'string')
        actionHash = this.getHashKey(actionHash);
    return CashinventoryTransactionStart(type, actionHash);
}
/**
 * Hash: 0x6C9F12700BCE69F4 | ApiSet: undefined
 */
export function cashinventoryTransactionValidateItem(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return CashinventoryTransactionValidateItem(p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x38640A8C2DEF011B | ApiSet: undefined
 */
export function _0x38640A8C2DEF011B(p0) {
    return Citizen.invokeNative('0x38640A8C2DEF011B', p0);
}
/**
 * Hash: 0x3FA09DD57B93C0DE | ApiSet: undefined
 */
export function _0x3FA09DD57B93C0DE(p0, p1, p2, p3, p4) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0x3FA09DD57B93C0DE', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x92A32BA29622763F | ApiSet: undefined
 */
export function _0x92A32BA29622763F(id, index) {
    return Citizen.invokeNative('0x92A32BA29622763F', id, index);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xA3B8D31C13CB4239 | ApiSet: undefined
 */
export function _0xA3B8D31C13CB4239(p0, p1, p3, p5) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0xA3B8D31C13CB4239', p0, p1, p3, p5);
}
/**
 * Hash: 0xA0B7094629724974 | ApiSet: undefined
 */
export function _0xA0B7094629724974(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xA0B7094629724974', p0, p1);
}
/**
 * Hash: 0xB6F4557060EF0FB4 | ApiSet: undefined
 */
export function _0xB6F4557060EF0FB4(p0, p1) {
    return Citizen.invokeNative('0xB6F4557060EF0FB4', p0, p1);
}
/**
 * Hash: 0xCE54C9ABE6FBC6DB | ApiSet: undefined
 */
export function _0xCE54C9ABE6FBC6DB(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xCE54C9ABE6FBC6DB', p0);
}
/**
 * Hash: 0xD1555FBC96C88444 | ApiSet: undefined
 */
export function _0xD1555FBC96C88444(p0, p1, p2, p3, p4) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xD1555FBC96C88444', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xE0D73CDDEA79DDCD | ApiSet: undefined
 */
export function animSceneToNet(animScene) {
    return AnimSceneToNet(animScene);
}
/**
 * Hash: 0xD45B1FFCCD52FF19 | ApiSet: undefined
 */
export function activateDamageTrackerOnNetworkId(netID, toggle) {
    ActivateDamageTrackerOnNetworkId(netID, toggle);
}
/**
 * Hash: 0xBCBF4FEF9FA5D781 | ApiSet: undefined
 */
export function canRegisterMissionPeds(amount) {
    return CanRegisterMissionPeds(amount);
}
/**
 * Hash: 0x69778E7564BADE6D | ApiSet: undefined
 */
export function canRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt) {
    return CanRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt);
}
/**
 * Hash: 0x800DD4721A8B008B | ApiSet: undefined
 */
export function canRegisterMissionObjects(amount) {
    return CanRegisterMissionObjects(amount);
}
/**
 * Hash: 0x782C94DB6469634D | ApiSet: undefined
 */
export function clearLaunchParam(paramName) {
    ClearLaunchParam(paramName);
}
/**
 * Hash: 0x3A3D5568AF297CD5 | ApiSet: undefined
 */
export function cloudDidRequestSucceed(id) {
    return CloudDidRequestSucceed(id);
}
/**
 * Hash: 0xF0460C7BF80011EA | ApiSet: undefined
 */
export function canRegisterMissionPickups(amount) {
    return CanRegisterMissionPickups(amount);
}
/**
 * Hash: 0x4C61B39930D045DA | ApiSet: undefined
 */
export function cloudHasRequestCompleted(id) {
    return CloudHasRequestCompleted(id);
}
/**
 * Hash: 0x7277F1F2E085EE74 | ApiSet: undefined
 */
export function canRegisterMissionVehicles(amount) {
    return CanRegisterMissionVehicles(amount);
}
/**
 * ```
 * Takes the specified time and writes it to the structure specified in the second argument.
 * struct date_time
 * {
 * int year;
 * int PADDING1;
 * int month;
 * int PADDING2;
 * int day;
 * int PADDING3;
 * int hour;
 * int PADDING4;
 * int minute;
 * int PADDING5;
 * int second;
 * int PADDING6;
 * };
 * ```
 * Hash: 0xAC97AF97FA68E5D5 | ApiSet: undefined
 */
export function convertPosixTime(posixTime) {
    return ConvertPosixTime(posixTime);
}
/**
 * Hash: 0x966DD84FB6A46017 | ApiSet: undefined
 */
export function clearServiceEventArguments() {
    ClearServiceEventArguments();
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xDBC754CB6CCB9378 | ApiSet: undefined
 */
export function commerceStoreIsEnabled() {
    return CommerceStoreIsEnabled();
}
/**
 * Hash: 0x9A73240B49945C76 | ApiSet: undefined
 */
export function getCloudTimeAsInt() {
    return GetCloudTimeAsInt();
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xCE5E79D9E303628E | ApiSet: undefined
 */
export function commerceStoreIsOpen() {
    return CommerceStoreIsOpen();
}
/**
 * Hash: 0x02E97CE283648CD9 | ApiSet: undefined
 */
export function getLaunchParamExists(paramName) {
    return GetLaunchParamExists(paramName);
}
/**
 * Hash: 0xC59AB6A04333C502 | ApiSet: undefined
 */
export function getLaunchParamString() {
    return GetLaunchParamString();
}
/**
 * Hash: 0x65E65CA6A0FE59D4 | ApiSet: undefined
 */
export function getLaunchParamValue(paramName) {
    return GetLaunchParamValue(paramName);
}
/**
 * ```
 * Always returns 60
 * ```
 * Hash: 0xC7BE335216B5EC7C | ApiSet: undefined
 */
export function getMaxNumNetworkObjects() {
    return GetMaxNumNetworkObjects();
}
/**
 * ```
 * Always returns 80
 * ```
 * Hash: 0xA72835064DD63E4C | ApiSet: undefined
 */
export function getMaxNumNetworkPickups() {
    return GetMaxNumNetworkPickups();
}
/**
 * ```
 * Always returns 110
 * ```
 * Hash: 0x0C1F7D49C39D2289 | ApiSet: undefined
 */
export function getMaxNumNetworkPeds() {
    return GetMaxNumNetworkPeds();
}
/**
 * Hash: 0x7A5487FE9FAA6B48 | ApiSet: undefined
 */
export function getNetworkTime() {
    return GetNetworkTime();
}
/**
 * ```
 * Always returns 40
 * ```
 * Hash: 0x0AFCE529F69B21FF | ApiSet: undefined
 */
export function getMaxNumNetworkVehicles() {
    return GetMaxNumNetworkVehicles();
}
/**
 * Hash: 0x89023FBBF9200E9F | ApiSet: undefined
 */
export function getNetworkTimeAccurate() {
    return GetNetworkTimeAccurate();
}
/**
 * Hash: 0xCB215C4B56A7FAE7 | ApiSet: undefined
 */
export function getNumCreatedMissionPeds(p0) {
    return GetNumCreatedMissionPeds(p0);
}
/**
 * Hash: 0x12B6281B6C6706C0 | ApiSet: undefined
 */
export function getNumCreatedMissionObjects(p0) {
    return GetNumCreatedMissionObjects(p0);
}
/**
 * Hash: 0xD2BA051B94CA9BCC | ApiSet: undefined
 */
export function getNumCreatedMissionPickups(p0) {
    return GetNumCreatedMissionPickups(p0);
}
/**
 * Hash: 0x0CD9AB83489430EA | ApiSet: undefined
 */
export function getNumCreatedMissionVehicles(p0) {
    return GetNumCreatedMissionVehicles(p0);
}
/**
 * ```
 * Note: this native was added in build 1311.16
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4FE932E84FE932E8 | ApiSet: undefined
 */
export function getNumPeerNegotiationResponses() {
    return GetNumPeerNegotiationResponses();
}
/**
 * ```
 * p0 appears to be for MP
 * ```
 * Hash: 0xAA81B5F10BC43AC2 | ApiSet: undefined
 */
export function getNumReservedMissionObjects(p0) {
    return GetNumReservedMissionObjects(p0);
}
/**
 * ```
 * p0 appears to be for MP
 * ```
 * Hash: 0x1F13D5AE5CB17E17 | ApiSet: undefined
 */
export function getNumReservedMissionPeds(p0) {
    return GetNumReservedMissionPeds(p0);
}
/**
 * ```
 * p0 appears to be for MP
 * ```
 * Hash: 0xCF3A965906452031 | ApiSet: undefined
 */
export function getNumReservedMissionVehicles(p0) {
    return GetNumReservedMissionVehicles(p0);
}
/**
 * Hash: 0xDCC4B7F7112E8AB7 | ApiSet: undefined
 */
export function getPlayerWaypointIsActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerWaypointIsActive(_player);
}
/**
 * Hash: 0x62BE3ECC79FBD004 | ApiSet: undefined
 */
export function getNumReservedMissionPickups(p0) {
    return GetNumReservedMissionPickups(p0);
}
/**
 * ```
 * Only used in R* Script net_stable_manager
 * ```
 * ```
 * NativeDB Introduced: v1491
 * ```
 * Hash: 0x99AAC89C510DEB0D | ApiSet: undefined
 */
export function getReservedMissionEntitiesForThread(threadId) {
    return GetReservedMissionEntitiesForThread(threadId);
}
/**
 * ```
 * Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
 * Coords: Slot world position
 * ```
 * Hash: 0x5E71E72A94985214 | ApiSet: undefined
 */
export function getReservedMissionEntitiesInArea(position, p3) {
    return GetReservedMissionEntitiesInArea(position.x, position.y, position.z, p3);
}
/**
 * Hash: 0xD0541EF28E9C4783 | ApiSet: undefined
 */
export function getSocialMatchmakingAllowed() {
    return GetSocialMatchmakingAllowed();
}
/**
 * ```
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 * ```
 * Hash: 0x8BD6C6DEA20E82C6 | ApiSet: undefined
 */
export function getStatusOfTextureDownload(textureDownloadId) {
    return GetStatusOfTextureDownload(textureDownloadId);
}
/**
 * Hash: 0x07F723401B9D921C | ApiSet: undefined
 */
export function getUniqueIntForPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetUniqueIntForPlayer(_player);
}
/**
 * ```
 * Subtracts the second argument from the first.
 * ```
 * Hash: 0xA2C6FC031D46FFF0 | ApiSet: undefined
 */
export function getTimeDifference(timeA, timeB) {
    return GetTimeDifference(timeA, timeB);
}
/**
 * Hash: 0x46718ACEEDEAFC84 | ApiSet: undefined
 */
export function hasNetworkTimeStarted() {
    return HasNetworkTimeStarted();
}
/**
 * Hash: 0x21D04D7BC538C146 | ApiSet: undefined
 */
export function isEntityAGhost(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityAGhost(_entity);
}
/**
 * ```
 * Adds the first argument to the second.
 * ```
 * Hash: 0x017008CCDAD48503 | ApiSet: undefined
 */
export function getTimeOffset(timeA, timeB) {
    return GetTimeOffset(timeA, timeB);
}
/**
 * ```
 * Note: this native was added in build 1311.16
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x8FE9EB11EC9CC23A | ApiSet: undefined
 */
export function isObjectReassignmentInProgress() {
    return IsObjectReassignmentInProgress();
}
/**
 * Hash: 0x6E192E33AD436366 | ApiSet: undefined
 */
export function isDamageTrackerActiveOnNetworkId(netID) {
    return IsDamageTrackerActiveOnNetworkId(netID);
}
/**
 * Hash: 0xD82CF8E64C8729D8 | ApiSet: undefined
 */
export function isSphereVisibleToAnotherMachine(p0, p1, p2, p3, p4) {
    return IsSphereVisibleToAnotherMachine(p0, p1, p2, p3, p4);
}
/**
 * ```
 * Subtracts the first argument from the second, then returns whether the result is negative.
 * ```
 * Hash: 0xDE350F8651E4346C | ApiSet: undefined
 */
export function isTimeMoreThan(timeA, timeB) {
    return IsTimeMoreThan(timeA, timeB);
}
/**
 * Hash: 0x6E2FD8CF7EB10E53 | ApiSet: undefined
 */
export function localPlayerPedshotTextureDownloadRequest(playerSlot, personaPhotoLocalCacheType) {
    return LocalPlayerPedshotTextureDownloadRequest(playerSlot, personaPhotoLocalCacheType);
}
/**
 * ```
 * Note: this native was added in build 1311.16
 * GET_NUM_*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x02B3CDD652B3CDD6 | ApiSet: undefined
 */
export function _0x02B3CDD652B3CDD6() {
    return Citizen.invokeNative('0x02B3CDD652B3CDD6');
}
/**
 * ```
 * Only used in SP R* Script dominoes_sp: p1 = 0
 * ```
 * Hash: 0x02C4C6C2900D84DF | ApiSet: undefined
 */
export function _0x02C4C6C2900D84DF(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x02C4C6C2900D84DF', _player, p1);
}
/**
 * Hash: 0xA1607996431332DF | ApiSet: undefined
 */
export function isNetworkIdOwnedByParticipant(netId) {
    return IsNetworkIdOwnedByParticipant(netId);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x039B692B3318FAB6 | ApiSet: undefined
 */
export function _0x039B692B3318FAB6(p0) {
    return Citizen.invokeNative('0x039B692B3318FAB6', p0);
}
/**
 * Hash: 0xDC3A310219E5DA62 | ApiSet: undefined
 */
export function isSphereVisibleToPlayer(p0, p1, p2, p3, p4, p5) {
    return IsSphereVisibleToPlayer(p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * Subtracts the second argument from the first, then returns whether the result is negative.
 * ```
 * Hash: 0xCB2CF5148012C8D0 | ApiSet: undefined
 */
export function isTimeLessThan(timeA, timeB) {
    return IsTimeLessThan(timeA, timeB);
}
/**
 * Hash: 0x0B6B4507AC5EA8B8 | ApiSet: undefined
 */
export function _0x0B6B4507AC5EA8B8() {
    return Citizen.invokeNative('0x0B6B4507AC5EA8B8');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x0CC28C08613BA9E5 | ApiSet: undefined
 */
export function _0x0CC28C08613BA9E5(p0) {
    Citizen.invokeNative('0x0CC28C08613BA9E5', p0);
}
/**
 * Hash: 0xE1BC73D6815BA361 | ApiSet: undefined
 */
export function keepNetworkIdInFastInstance(netId, p1, p2) {
    KeepNetworkIdInFastInstance(netId, p1, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0D183D8490EE4366 | ApiSet: undefined
 */
export function _0x0D183D8490EE4366(p0, p1) {
    Citizen.invokeNative('0x0D183D8490EE4366', p0, p1);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x106CBDD5077DEDE1 | ApiSet: undefined
 */
export function _0x106CBDD5077DEDE1(p0) {
    return Citizen.invokeNative('0x106CBDD5077DEDE1', p0);
}
/**
 * ```
 * Returns textureDownloadId
 * ```
 * Hash: 0x9B5DB6CEAFAA10BB | ApiSet: undefined
 */
export function mugshotTextureDownloadRequest(p1, name, p3) {
    return MugshotTextureDownloadRequest(p1, name, p3);
}
/**
 * Hash: 0x1413B6BF27AB7A95 | ApiSet: undefined
 */
export function _0x1413B6BF27AB7A95() {
    return Citizen.invokeNative('0x1413B6BF27AB7A95');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x039AD6B57D5179FF | ApiSet: undefined
 */
export function _0x039AD6B57D5179FF() {
    return Citizen.invokeNative('0x039AD6B57D5179FF');
}
/**
 * Hash: 0x16EFB123C4451032 | ApiSet: undefined
 */
export function _0x16EFB123C4451032(p0) {
    return Citizen.invokeNative('0x16EFB123C4451032', p0);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x062842D61D0D53FD | ApiSet: undefined
 */
export function _0x062842D61D0D53FD() {
    return Citizen.invokeNative('0x062842D61D0D53FD');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x160F0CE6D76A39C9 | ApiSet: undefined
 */
export function _0x160F0CE6D76A39C9() {
    return Citizen.invokeNative('0x160F0CE6D76A39C9');
}
/**
 * Hash: 0x0BF90CBB6B72977B | ApiSet: undefined
 */
export function _0x0BF90CBB6B72977B() {
    Citizen.invokeNative('0x0BF90CBB6B72977B');
}
/**
 * Hash: 0x0E54D4DA6018FF8E | ApiSet: undefined
 */
export function _0x0E54D4DA6018FF8E() {
    return Citizen.invokeNative('0x0E54D4DA6018FF8E');
}
/**
 * Hash: 0x18B94666CF610AEB | ApiSet: undefined
 */
export function _0x18B94666CF610AEB() {
    return Citizen.invokeNative('0x18B94666CF610AEB');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x19447FCAE97704DC | ApiSet: undefined
 */
export function _0x19447FCAE97704DC(ctx, ec, ex, ro) {
    if (typeof ctx === 'string')
        ctx = this.getHashKey(ctx);
    Citizen.invokeNative('0x19447FCAE97704DC', ctx, ec, ex, ro);
}
/**
 * Hash: 0x13F592FC3BF0EA84 | ApiSet: undefined
 */
export function _0x13F592FC3BF0EA84(volume, p1, originalWeight, p3, p4) {
    Citizen.invokeNative('0x13F592FC3BF0EA84', volume, p1, originalWeight, p3, p4);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x1E4E097D71D449FB | ApiSet: undefined
 */
export function _0x1E4E097D71D449FB(p0) {
    return Citizen.invokeNative('0x1E4E097D71D449FB', p0);
}
/**
 * ```
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 * ```
 * Hash: 0x236321F1178A5446 | ApiSet: undefined
 */
export function _0x236321F1178A5446(player, ped) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x236321F1178A5446', _player, _ped);
}
/**
 * Hash: 0x19B52C20B5C4757C | ApiSet: undefined
 */
export function _0x19B52C20B5C4757C() {
    Citizen.invokeNative('0x19B52C20B5C4757C');
}
/**
 * ```
 * _GET_LAUNCH_PARAM_(RESPOT?)*
 * Name is probably invalid since this native only reads data from parsed entity.
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x26A867C0B7A456D1 | ApiSet: undefined
 */
export function _0x26A867C0B7A456D1(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x26A867C0B7A456D1', _entity);
}
/**
 * Hash: 0x273E04A3A7AD1F2D | ApiSet: undefined
 */
export function _0x273E04A3A7AD1F2D() {
    return Citizen.invokeNative('0x273E04A3A7AD1F2D');
}
/**
 * Hash: 0x232E1EB23CDB313C | ApiSet: undefined
 */
export function _0x232E1EB23CDB313C() {
    return Citizen.invokeNative('0x232E1EB23CDB313C');
}
/**
 * Hash: 0x27B1AE4D8C652F08 | ApiSet: undefined
 */
export function _0x27B1AE4D8C652F08(p0) {
    return Citizen.invokeNative('0x27B1AE4D8C652F08', p0);
}
/**
 * Hash: 0x2686BD9566B65EDA | ApiSet: undefined
 */
export function _0x2686BD9566B65EDA(position) {
    Citizen.invokeNative('0x2686BD9566B65EDA', position.x, position.y, position.z);
}
/**
 * Hash: 0x271F95E55C663B8B | ApiSet: undefined
 */
export function _0x271F95E55C663B8B(p0, p1) {
    return Citizen.invokeNative('0x271F95E55C663B8B', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x2C4E98DDA475364F | ApiSet: undefined
 */
export function _0x2C4E98DDA475364F(p0) {
    Citizen.invokeNative('0x2C4E98DDA475364F', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x2CD41AC000E6F611 | ApiSet: undefined
 */
export function _0x2CD41AC000E6F611() {
    Citizen.invokeNative('0x2CD41AC000E6F611');
}
/**
 * Hash: 0x3034C77C79A58880 | ApiSet: undefined
 */
export function _0x3034C77C79A58880(p0) {
    Citizen.invokeNative('0x3034C77C79A58880', p0);
}
/**
 * ```
 * _NETWORK_A* - _NETWORK_C*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x34BC1E79546BA543 | ApiSet: undefined
 */
export function _0x34BC1E79546BA543(p0) {
    Citizen.invokeNative('0x34BC1E79546BA543', p0);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x316FD416C432C761 | ApiSet: undefined
 */
export function _0x316FD416C432C761() {
    return Citizen.invokeNative('0x316FD416C432C761');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x3CBD6565D9C3B133 | ApiSet: undefined
 */
export function _0x3CBD6565D9C3B133(p0, p1, p2) {
    Citizen.invokeNative('0x3CBD6565D9C3B133', p0, p1, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x335AF56613CA0F49 | ApiSet: undefined
 */
export function _0x335AF56613CA0F49(p0) {
    Citizen.invokeNative('0x335AF56613CA0F49', p0);
}
/**
 * Hash: 0x3AA0CDC63696166D | ApiSet: undefined
 */
export function _0x3AA0CDC63696166D(p0) {
    return Citizen.invokeNative('0x3AA0CDC63696166D', p0);
}
/**
 * Hash: 0x3E74A687A73979C6 | ApiSet: undefined
 */
export function _0x3E74A687A73979C6(p0) {
    Citizen.invokeNative('0x3E74A687A73979C6', p0);
}
/**
 * ```
 * Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
 * ```
 * Hash: 0x3E8CCE6769DB5F34 | ApiSet: undefined
 */
export function _0x3E8CCE6769DB5F34(p0) {
    return Citizen.invokeNative('0x3E8CCE6769DB5F34', p0);
}
/**
 * Hash: 0x3E4A16BC669E71B3 | ApiSet: undefined
 */
export function _0x3E4A16BC669E71B3() {
    return Citizen.invokeNative('0x3E4A16BC669E71B3');
}
/**
 * Hash: 0x3F0ABAE38A0515AD | ApiSet: undefined
 */
export function _0x3F0ABAE38A0515AD(p0, p1) {
    Citizen.invokeNative('0x3F0ABAE38A0515AD', p0, p1);
}
/**
 * ```
 * Note: this native was added in build 1355.30
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x40FEDB13870042F1 | ApiSet: undefined
 */
export function _0x40FEDB13870042F1() {
    Citizen.invokeNative('0x40FEDB13870042F1');
}
/**
 * ```
 * Note: this native was added in build 1355.30
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x422F9D6D6C7BC290 | ApiSet: undefined
 */
export function _0x422F9D6D6C7BC290(p0) {
    Citizen.invokeNative('0x422F9D6D6C7BC290', p0);
}
/**
 * ```
 * Returns the entity associated with the given network ID.
 * ```
 * Hash: 0x4538EE7C321590BC | ApiSet: undefined
 */
export function _0x4538EE7C321590BC(networkId) {
    return Citizen.invokeNative('0x4538EE7C321590BC', networkId);
}
/**
 * Hash: 0x3F2EE18A3E294801 | ApiSet: undefined
 */
export function _0x3F2EE18A3E294801(p0) {
    return Citizen.invokeNative('0x3F2EE18A3E294801', p0);
}
/**
 * Hash: 0x455156F47DC6B78C | ApiSet: undefined
 */
export function _0x455156F47DC6B78C(p0) {
    Citizen.invokeNative('0x455156F47DC6B78C', p0);
}
/**
 * Hash: 0x405DDEFB1F531B18 | ApiSet: undefined
 */
export function _0x405DDEFB1F531B18(volume, p1, p2, p3) {
    Citizen.invokeNative('0x405DDEFB1F531B18', volume, p1, p2, p3);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4835413EA6F9C9CD | ApiSet: undefined
 */
export function _0x4835413EA6F9C9CD(p0) {
    return Citizen.invokeNative('0x4835413EA6F9C9CD', p0);
}
/**
 * Hash: 0x49CF17A564918E8D | ApiSet: undefined
 */
export function _0x49CF17A564918E8D() {
    Citizen.invokeNative('0x49CF17A564918E8D');
}
/**
 * Hash: 0x41452E8A3B9C0C4B | ApiSet: undefined
 */
export function _0x41452E8A3B9C0C4B() {
    return Citizen.invokeNative('0x41452E8A3B9C0C4B');
}
/**
 * Hash: 0x43CF999205084B4B | ApiSet: undefined
 */
export function _0x43CF999205084B4B() {
    Citizen.invokeNative('0x43CF999205084B4B');
}
/**
 * Hash: 0x51951DE06C0D1C40 | ApiSet: undefined
 */
export function _0x51951DE06C0D1C40(player, type) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x51951DE06C0D1C40', _player, type);
}
/**
 * ```
 * Hardcoded to return zero.
 * ```
 * Hash: 0x5133CF81924F1129 | ApiSet: undefined
 */
export function _0x5133CF81924F1129() {
    return Citizen.invokeNative('0x5133CF81924F1129');
}
/**
 * Hash: 0x5759160AC17C13CE | ApiSet: undefined
 */
export function _0x5759160AC17C13CE(message) {
    return Citizen.invokeNative('0x5759160AC17C13CE', message);
}
/**
 * Hash: 0x564552C6AF1EEAB1 | ApiSet: undefined
 */
export function _0x564552C6AF1EEAB1() {
    Citizen.invokeNative('0x564552C6AF1EEAB1');
}
/**
 * Hash: 0x5A91BCEF74944E93 | ApiSet: undefined
 */
export function _0x5A91BCEF74944E93(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x5A91BCEF74944E93', _player, p1);
}
/**
 * Hash: 0x5B9C6AC118FD4774 | ApiSet: undefined
 */
export function _0x5B9C6AC118FD4774() {
    Citizen.invokeNative('0x5B9C6AC118FD4774');
}
/**
 * Hash: 0x5CD3AAD8FF9ED121 | ApiSet: undefined
 */
export function _0x5CD3AAD8FF9ED121(p0) {
    Citizen.invokeNative('0x5CD3AAD8FF9ED121', p0);
}
/**
 * Hash: 0x5CB8B0C846D0F30B | ApiSet: undefined
 */
export function _0x5CB8B0C846D0F30B(p0) {
    Citizen.invokeNative('0x5CB8B0C846D0F30B', p0);
}
/**
 * ```
 * _NETWORK_SPAWN_CONFIG_*
 * ```
 * Hash: 0x5D3C528B7A7DF836 | ApiSet: undefined
 */
export function _0x5D3C528B7A7DF836(nsctf) {
    if (typeof nsctf === 'string')
        nsctf = this.getHashKey(nsctf);
    Citizen.invokeNative('0x5D3C528B7A7DF836', nsctf);
}
/**
 * Hash: 0x5ED39DA62BEB1330 | ApiSet: undefined
 */
export function _0x5ED39DA62BEB1330(p0) {
    return Citizen.invokeNative('0x5ED39DA62BEB1330', p0);
}
/**
 * Hash: 0x5F0E99071582DECA | ApiSet: undefined
 */
export function _0x5F0E99071582DECA(p0, index, p2) {
    return Citizen.invokeNative('0x5F0E99071582DECA', p0, index, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x5F328FC909F0E0FF | ApiSet: undefined
 */
export function _0x5F328FC909F0E0FF(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x5F328FC909F0E0FF', p0, p1, p2, p3);
}
/**
 * Hash: 0x603469298A4308AF | ApiSet: undefined
 */
export function _0x603469298A4308AF(p0) {
    Citizen.invokeNative('0x603469298A4308AF', p0);
}
/**
 * Hash: 0x61BFBAA795E712AD | ApiSet: undefined
 */
export function _0x61BFBAA795E712AD() {
    Citizen.invokeNative('0x61BFBAA795E712AD');
}
/**
 * Hash: 0x64A36BA85CE01A81 | ApiSet: undefined
 */
export function _0x64A36BA85CE01A81(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x64A36BA85CE01A81', p0, p1, p2, p3);
}
/**
 * Hash: 0x67CCDF74C4DF7169 | ApiSet: undefined
 */
export function _0x67CCDF74C4DF7169() {
    return Citizen.invokeNative('0x67CCDF74C4DF7169');
}
/**
 * Hash: 0x6C7E04E9DE451789 | ApiSet: undefined
 */
export function _0x6C7E04E9DE451789() {
    Citizen.invokeNative('0x6C7E04E9DE451789');
}
/**
 * Hash: 0x691E4DE5309EAEFC | ApiSet: undefined
 */
export function _0x691E4DE5309EAEFC(p0) {
    return Citizen.invokeNative('0x691E4DE5309EAEFC', p0);
}
/**
 * ```
 * _NETWORK_SPAWN_CONFIG_*
 * ```
 * Hash: 0x6CEE2E30021DAEC6 | ApiSet: undefined
 */
export function _0x6CEE2E30021DAEC6() {
    Citizen.invokeNative('0x6CEE2E30021DAEC6');
}
/**
 * Hash: 0x6C27442A225A241A | ApiSet: undefined
 */
export function _0x6C27442A225A241A(p0) {
    return Citizen.invokeNative('0x6C27442A225A241A', p0);
}
/**
 * ```
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 * ```
 * Hash: 0x6CF82A7F65A5AD5F | ApiSet: undefined
 */
export function _0x6CF82A7F65A5AD5F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x6CF82A7F65A5AD5F', _ped);
}
/**
 * Hash: 0x704F92B3AF20D857 | ApiSet: undefined
 */
export function _0x704F92B3AF20D857(setting) {
    Citizen.invokeNative('0x704F92B3AF20D857', setting);
}
/**
 * ```
 * Only used in R* Script fm_race_controller
 * ```
 * Hash: 0x71FA2D1880C48032 | ApiSet: undefined
 */
export function _0x71FA2D1880C48032(p0) {
    Citizen.invokeNative('0x71FA2D1880C48032', p0);
}
/**
 * Hash: 0x75FC34A2BA345BD1 | ApiSet: undefined
 */
export function _0x75FC34A2BA345BD1(entity, player) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x75FC34A2BA345BD1', _entity, _player);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x744BFBB0CA908161 | ApiSet: undefined
 */
export function _0x744BFBB0CA908161(p0) {
    return Citizen.invokeNative('0x744BFBB0CA908161', p0);
}
/**
 * Hash: 0x77B299E8799B1332 | ApiSet: undefined
 */
export function _0x77B299E8799B1332(p0, p1, p2) {
    return Citizen.invokeNative('0x77B299E8799B1332', p0, p1, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x7673C0D2C5CDAC55 | ApiSet: undefined
 */
export function _0x7673C0D2C5CDAC55() {
    Citizen.invokeNative('0x7673C0D2C5CDAC55');
}
/**
 * ```
 * Note: this native was added in build 1436.31
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x78271BC02AE9AF83 | ApiSet: undefined
 */
export function _0x78271BC02AE9AF83(p0) {
    return Citizen.invokeNative('0x78271BC02AE9AF83', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x780A13F780A13F1B | ApiSet: undefined
 */
export function _0x780A13F780A13F1B(toggle) {
    Citizen.invokeNative('0x780A13F780A13F1B', toggle);
}
/**
 * Hash: 0x7A8E8DF782B47EB0 | ApiSet: undefined
 */
export function _0x7A8E8DF782B47EB0(p0, p1, p2) {
    return Citizen.invokeNative('0x7A8E8DF782B47EB0', p0, p1, p2);
}
/**
 * Hash: 0x7B3FF2D193628126 | ApiSet: undefined
 */
export function _0x7B3FF2D193628126(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x7B3FF2D193628126', _player);
}
/**
 * Hash: 0x7BCA0A3972708436 | ApiSet: undefined
 */
export function _0x7BCA0A3972708436(p1) {
    return Citizen.invokeNative('0x7BCA0A3972708436', p1);
}
/**
 * Hash: 0x7E300B5B86AB1D1A | ApiSet: undefined
 */
export function _0x7E300B5B86AB1D1A(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    return Citizen.invokeNative('0x7E300B5B86AB1D1A', p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0x814729078AED6D30 | ApiSet: undefined
 */
export function _0x814729078AED6D30() {
    Citizen.invokeNative('0x814729078AED6D30');
}
/**
 * ```
 * Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x880A7202301E282B | ApiSet: undefined
 */
export function _0x880A7202301E282B(position, p5, p6) {
    return Citizen.invokeNative('0x880A7202301E282B', position.x, position.y, position.z, p5, p6);
}
/**
 * Hash: 0x894B5ECAB45D2342 | ApiSet: undefined
 */
export function _0x894B5ECAB45D2342(netHandle, p1) {
    Citizen.invokeNative('0x894B5ECAB45D2342', netHandle, p1);
}
/**
 * Hash: 0x862C5040F4888741 | ApiSet: undefined
 */
export function _0x862C5040F4888741(player1, player2) {
    const _player1 = player1 instanceof Entity ? player1.remoteId() : player1;
    const _player2 = player2 instanceof Entity ? player2.remoteId() : player2;
    return Citizen.invokeNative('0x862C5040F4888741', _player1, _player2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x917AD74BDCF8B6E9 | ApiSet: undefined
 */
export function _0x917AD74BDCF8B6E9(p0) {
    return Citizen.invokeNative('0x917AD74BDCF8B6E9', p0);
}
/**
 * Hash: 0x923346025512DFB7 | ApiSet: undefined
 */
export function _0x923346025512DFB7(p0) {
    return Citizen.invokeNative('0x923346025512DFB7', p0);
}
/**
 * Hash: 0x97BCE4C4B3191228 | ApiSet: undefined
 */
export function _0x97BCE4C4B3191228() {
    Citizen.invokeNative('0x97BCE4C4B3191228');
}
/**
 * ```
 * Must be called from a background script, otherwise it will do nothing.
 * ```
 * Hash: 0x979765465A6F25FC | ApiSet: undefined
 */
export function _0x979765465A6F25FC(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x979765465A6F25FC', _entity, p1);
}
/**
 * Hash: 0x9B39B0555CC692B5 | ApiSet: undefined
 */
export function _0x9B39B0555CC692B5() {
    Citizen.invokeNative('0x9B39B0555CC692B5');
}
/**
 * ```
 * Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x950ACD8F05B7B9DF | ApiSet: undefined
 */
export function _0x950ACD8F05B7B9DF(p0) {
    return Citizen.invokeNative('0x950ACD8F05B7B9DF', p0);
}
/**
 * Hash: 0x9F24A34863FD35DA | ApiSet: undefined
 */
export function _0x9F24A34863FD35DA(p0) {
    Citizen.invokeNative('0x9F24A34863FD35DA', p0);
}
/**
 * Hash: 0x981146E5C9CE9250 | ApiSet: undefined
 */
export function _0x981146E5C9CE9250(inviteIndex) {
    return Citizen.invokeNative('0x981146E5C9CE9250', inviteIndex);
}
/**
 * Hash: 0xA2837A5E21FB5A58 | ApiSet: undefined
 */
export function _0xA2837A5E21FB5A58(p0) {
    return Citizen.invokeNative('0xA2837A5E21FB5A58', p0);
}
/**
 * Hash: 0xA47D48D06AA5A188 | ApiSet: undefined
 */
export function _0xA47D48D06AA5A188() {
    return Citizen.invokeNative('0xA47D48D06AA5A188');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x982D7AD755B8F62C | ApiSet: undefined
 */
export function _0x982D7AD755B8F62C(p0) {
    return Citizen.invokeNative('0x982D7AD755B8F62C', p0);
}
/**
 * Hash: 0xA63E4F050F20021F | ApiSet: undefined
 */
export function _0xA63E4F050F20021F() {
    Citizen.invokeNative('0xA63E4F050F20021F');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9E5A47744C0F0376 | ApiSet: undefined
 */
export function _0x9E5A47744C0F0376(p0) {
    return Citizen.invokeNative('0x9E5A47744C0F0376', p0);
}
/**
 * Hash: 0xA6F1BAABFF6AD7B9 | ApiSet: undefined
 */
export function _0xA6F1BAABFF6AD7B9() {
    return Citizen.invokeNative('0xA6F1BAABFF6AD7B9');
}
/**
 * Hash: 0xA95470DA137587F5 | ApiSet: undefined
 */
export function _0xA95470DA137587F5(p0) {
    Citizen.invokeNative('0xA95470DA137587F5', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xACC44768AF229042 | ApiSet: undefined
 */
export function _0xACC44768AF229042() {
    Citizen.invokeNative('0xACC44768AF229042');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xA7670F7991099680 | ApiSet: undefined
 */
export function _0xA7670F7991099680(p0) {
    Citizen.invokeNative('0xA7670F7991099680', p0);
}
/**
 * Hash: 0xAFA14F98327791CE | ApiSet: undefined
 */
export function _0xAFA14F98327791CE() {
    return Citizen.invokeNative('0xAFA14F98327791CE');
}
/**
 * Hash: 0xB389289F031F059A | ApiSet: undefined
 */
export function _0xB389289F031F059A() {
    return Citizen.invokeNative('0xB389289F031F059A');
}
/**
 * Hash: 0xA94ECE191D90637A | ApiSet: undefined
 */
export function _0xA94ECE191D90637A() {
    return Citizen.invokeNative('0xA94ECE191D90637A');
}
/**
 * Hash: 0xB131E686BD97B3F8 | ApiSet: undefined
 */
export function _0xB131E686BD97B3F8() {
    Citizen.invokeNative('0xB131E686BD97B3F8');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xBAF7E2979442B29F | ApiSet: undefined
 */
export function _0xBAF7E2979442B29F(p0) {
    return Citizen.invokeNative('0xBAF7E2979442B29F', p0);
}
/**
 * Hash: 0xBB1EC8C2EEF33BAA | ApiSet: undefined
 */
export function _0xBB1EC8C2EEF33BAA(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xBB1EC8C2EEF33BAA', _entity);
}
/**
 * Hash: 0xBB697756309D77EE | ApiSet: undefined
 */
export function _0xBB697756309D77EE(p0) {
    return Citizen.invokeNative('0xBB697756309D77EE', p0);
}
/**
 * ```
 * Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
 * ```
 * Hash: 0xBC7D36946D19E60E | ApiSet: undefined
 */
export function _0xBC7D36946D19E60E(p0) {
    Citizen.invokeNative('0xBC7D36946D19E60E', p0);
}
/**
 * Hash: 0xBF8276E51761F9DA | ApiSet: undefined
 */
export function _0xBF8276E51761F9DA() {
    return Citizen.invokeNative('0xBF8276E51761F9DA');
}
/**
 * Hash: 0xC028B3F52C707C49 | ApiSet: undefined
 */
export function _0xC028B3F52C707C49(p0) {
    return Citizen.invokeNative('0xC028B3F52C707C49', p0);
}
/**
 * Hash: 0xC0CFFDA87C2C163D | ApiSet: undefined
 */
export function _0xC0CFFDA87C2C163D(p0, p1, p2) {
    return Citizen.invokeNative('0xC0CFFDA87C2C163D', p0, p1, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xC1968045EEB563B7 | ApiSet: undefined
 */
export function _0xC1968045EEB563B7(p0) {
    Citizen.invokeNative('0xC1968045EEB563B7', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xC964FCD3D1720697 | ApiSet: undefined
 */
export function _0xC964FCD3D1720697() {
    return Citizen.invokeNative('0xC964FCD3D1720697');
}
/**
 * Hash: 0xC8B6D18E22484643 | ApiSet: undefined
 */
export function _0xC8B6D18E22484643() {
    Citizen.invokeNative('0xC8B6D18E22484643');
}
/**
 * Hash: 0xCC4E72C339461ED1 | ApiSet: undefined
 */
export function _0xCC4E72C339461ED1() {
    return Citizen.invokeNative('0xCC4E72C339461ED1');
}
/**
 * Hash: 0xCA58D4FD20D70F24 | ApiSet: undefined
 */
export function _0xCA58D4FD20D70F24(p0) {
    return Citizen.invokeNative('0xCA58D4FD20D70F24', p0);
}
/**
 * Hash: 0xCF23AB5BD47B384D | ApiSet: undefined
 */
export function _0xCF23AB5BD47B384D(p0) {
    Citizen.invokeNative('0xCF23AB5BD47B384D', p0);
}
/**
 * Hash: 0xCD53E6CBF609C012 | ApiSet: undefined
 */
export function _0xCD53E6CBF609C012(ugcRequestId) {
    return Citizen.invokeNative('0xCD53E6CBF609C012', ugcRequestId);
}
/**
 * Hash: 0xD39A72AE5EBD57E5 | ApiSet: undefined
 */
export function _0xD39A72AE5EBD57E5() {
    Citizen.invokeNative('0xD39A72AE5EBD57E5');
}
/**
 * Hash: 0xD1FFB246F4E088AC | ApiSet: undefined
 */
export function _0xD1FFB246F4E088AC(p0) {
    return Citizen.invokeNative('0xD1FFB246F4E088AC', p0);
}
/**
 * Hash: 0xD4022C7286B0DFA2 | ApiSet: undefined
 */
export function _0xD4022C7286B0DFA2(p0, p1, p2) {
    return Citizen.invokeNative('0xD4022C7286B0DFA2', p0, p1, p2);
}
/**
 * Hash: 0xD3A3C8B9F3BDEF81 | ApiSet: undefined
 */
export function _0xD3A3C8B9F3BDEF81() {
    return Citizen.invokeNative('0xD3A3C8B9F3BDEF81');
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD42C543F73233041 | ApiSet: undefined
 */
export function _0xD42C543F73233041(p0) {
    Citizen.invokeNative('0xD42C543F73233041', p0);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD3B6EBC6C3D77D44 | ApiSet: undefined
 */
export function _0xD3B6EBC6C3D77D44(p0) {
    Citizen.invokeNative('0xD3B6EBC6C3D77D44', p0);
}
/**
 * Hash: 0xD78A26024BB13E08 | ApiSet: undefined
 */
export function _0xD78A26024BB13E08(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xD78A26024BB13E08', _player);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xD7D0DF27CB1765B5 | ApiSet: undefined
 */
export function _0xD7D0DF27CB1765B5(p0) {
    return Citizen.invokeNative('0xD7D0DF27CB1765B5', p0);
}
/**
 * Hash: 0xD637D327080CD86E | ApiSet: undefined
 */
export function _0xD637D327080CD86E(p0) {
    Citizen.invokeNative('0xD637D327080CD86E', p0);
}
/**
 * ```
 * Note: this native was added in build 1491.50
 * ```
 * ```
 * NativeDB Introduced: v1491
 * ```
 * Hash: 0xDBDF80673BBA3D65 | ApiSet: undefined
 */
export function _0xDBDF80673BBA3D65(p0) {
    return Citizen.invokeNative('0xDBDF80673BBA3D65', p0);
}
/**
 * Hash: 0xD7BAD4062074B9C1 | ApiSet: undefined
 */
export function _0xD7BAD4062074B9C1(p0) {
    return Citizen.invokeNative('0xD7BAD4062074B9C1', p0);
}
/**
 * Hash: 0xDA1BFED8582F61F0 | ApiSet: undefined
 */
export function _0xDA1BFED8582F61F0() {
    return Citizen.invokeNative('0xDA1BFED8582F61F0');
}
/**
 * Hash: 0xDCA4A74135E1DEA5 | ApiSet: undefined
 */
export function _0xDCA4A74135E1DEA5(p0) {
    return Citizen.invokeNative('0xDCA4A74135E1DEA5', p0);
}
/**
 * Hash: 0xE31A04513237DC89 | ApiSet: undefined
 */
export function _0xE31A04513237DC89(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xE31A04513237DC89', _entity);
}
/**
 * Hash: 0xDC6AD5C046F33AB4 | ApiSet: undefined
 */
export function _0xDC6AD5C046F33AB4(p0, p1) {
    Citizen.invokeNative('0xDC6AD5C046F33AB4', p0, p1);
}
/**
 * Hash: 0xE3AB5EEFCB6671A2 | ApiSet: undefined
 */
export function _0xE3AB5EEFCB6671A2(setting) {
    Citizen.invokeNative('0xE3AB5EEFCB6671A2', setting);
}
/**
 * Hash: 0xE10F2D7715ABABEC | ApiSet: undefined
 */
export function _0xE10F2D7715ABABEC(p0) {
    return Citizen.invokeNative('0xE10F2D7715ABABEC', p0);
}
/**
 * Hash: 0xE39600E50D608693 | ApiSet: undefined
 */
export function _0xE39600E50D608693(p0, p1) {
    return Citizen.invokeNative('0xE39600E50D608693', p0, p1);
}
/**
 * Hash: 0xE5634491A58C2703 | ApiSet: undefined
 */
export function _0xE5634491A58C2703(p0) {
    Citizen.invokeNative('0xE5634491A58C2703', p0);
}
/**
 * Hash: 0xE59F4924BD3A718D | ApiSet: undefined
 */
export function _0xE59F4924BD3A718D(p0) {
    return Citizen.invokeNative('0xE59F4924BD3A718D', p0);
}
/**
 * Hash: 0xE79BA3BC265895DA | ApiSet: undefined
 */
export function _0xE79BA3BC265895DA(p0) {
    return Citizen.invokeNative('0xE79BA3BC265895DA', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xEC089F84A9C16C62 | ApiSet: undefined
 */
export function _0xEC089F84A9C16C62() {
    return Citizen.invokeNative('0xEC089F84A9C16C62');
}
/**
 * Hash: 0xE5FF65CFF5160752 | ApiSet: undefined
 */
export function _0xE5FF65CFF5160752() {
    Citizen.invokeNative('0xE5FF65CFF5160752');
}
/**
 * ```
 * Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
 * ```
 * Hash: 0xF260AF6F43953316 | ApiSet: undefined
 */
export function _0xF260AF6F43953316(handle) {
    return Citizen.invokeNative('0xF260AF6F43953316', handle);
}
/**
 * Hash: 0xE8E633215471BB5D | ApiSet: undefined
 */
export function _0xE8E633215471BB5D(p0) {
    return Citizen.invokeNative('0xE8E633215471BB5D', p0);
}
/**
 * Hash: 0xF23A6D6C11D8EC15 | ApiSet: undefined
 */
export function _0xF23A6D6C11D8EC15() {
    return Citizen.invokeNative('0xF23A6D6C11D8EC15');
}
/**
 * ```
 * Returns the entity's network ID.
 * ```
 * Hash: 0xF302AB9D978352EE | ApiSet: undefined
 */
export function _0xF302AB9D978352EE(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0xF302AB9D978352EE', _entity);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xF8DC69DC1AD19072 | ApiSet: undefined
 */
export function _0xF8DC69DC1AD19072(p0) {
    return Citizen.invokeNative('0xF8DC69DC1AD19072', p0);
}
/**
 * Hash: 0xF342F6BD0A8287D5 | ApiSet: undefined
 */
export function _0xF342F6BD0A8287D5(p0) {
    Citizen.invokeNative('0xF342F6BD0A8287D5', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xFC6FCF4C03F1BBF6 | ApiSet: undefined
 */
export function _0xFC6FCF4C03F1BBF6() {
    Citizen.invokeNative('0xFC6FCF4C03F1BBF6');
}
/**
 * ```
 * Only used in R* Script startup_clip
 * ```
 * Hash: 0xFD4272A137703449 | ApiSet: undefined
 */
export function _0xFD4272A137703449() {
    Citizen.invokeNative('0xFD4272A137703449');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xFB3205788F8AFA3F | ApiSet: undefined
 */
export function _0xFB3205788F8AFA3F() {
    return Citizen.invokeNative('0xFB3205788F8AFA3F');
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xFD8112109A96877C | ApiSet: undefined
 */
export function _0xFD8112109A96877C() {
    Citizen.invokeNative('0xFD8112109A96877C');
}
/**
 * Hash: 0xFF36F36B07E69059 | ApiSet: undefined
 */
export function _0xFF36F36B07E69059(p0) {
    Citizen.invokeNative('0xFF36F36B07E69059', p0);
}
/**
 * ```
 * gets the entity id of a network id
 * ```
 * Hash: 0xBFFEAB45A9A9094A | ApiSet: undefined
 */
export function netToEnt(netHandle) {
    return NetToEnt(netHandle);
}
/**
 * Hash: 0xFE53B1F8D43F19BF | ApiSet: undefined
 */
export function _0xFE53B1F8D43F19BF(player1, player2) {
    const _player1 = player1 instanceof Entity ? player1.remoteId() : player1;
    const _player2 = player2 instanceof Entity ? player2.remoteId() : player2;
    return Citizen.invokeNative('0xFE53B1F8D43F19BF', _player1, _player2);
}
/**
 * ```
 * gets the object id of a network id
 * ```
 * Hash: 0xD8515F5FEA14CB3F | ApiSet: undefined
 */
export function netToObj(netHandle) {
    return NetToObj(netHandle);
}
/**
 * Hash: 0xD7F6781A0ABAF6FB | ApiSet: undefined
 */
export function netToAnimScene(netId) {
    return NetToAnimScene(netId);
}
/**
 * Hash: 0xD08066E00D26C448 | ApiSet: undefined
 */
export function netToPropset(netId) {
    return NetToPropset(netId);
}
/**
 * ```
 * gets the ped id of a network id
 * ```
 * Hash: 0xBDCD95FC216A8B3E | ApiSet: undefined
 */
export function netToPed(netHandle) {
    return NetToPed(netHandle);
}
/**
 * Hash: 0xAA6A47A573ABB75A | ApiSet: undefined
 */
export function networkAccessTunableBool(tunableContext, tunableName) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkAccessTunableBool(tunableContext, tunableName);
}
/**
 * Hash: 0x8BE1146DFD5D4468 | ApiSet: undefined
 */
export function networkAccessTunableInt(tunableContext, tunableName) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkAccessTunableInt(tunableContext, tunableName);
}
/**
 * Hash: 0x367B936610BA360C | ApiSet: undefined
 */
export function netToVeh(netHandle) {
    return NetToVeh(netHandle);
}
/**
 * Hash: 0x3FE141FDB990E3D1 | ApiSet: undefined
 */
export function networkActivityResetToIdle() {
    NetworkActivityResetToIdle();
}
/**
 * Hash: 0xB2CEA5105AAC8DDE | ApiSet: undefined
 */
export function networkAcceptRsInvite(p0) {
    return NetworkAcceptRsInvite(p0);
}
/**
 * Hash: 0x3B82ACC3F4B6240C | ApiSet: undefined
 */
export function networkActionPlatformInvite() {
    return NetworkActionPlatformInvite();
}
/**
 * Hash: 0x8E02D73914064223 | ApiSet: undefined
 */
export function networkAddFriend(message) {
    return NetworkAddFriend(message);
}
/**
 * Hash: 0x9ADAC065D9F6706F | ApiSet: undefined
 */
export function networkActivitySetCurrent(netPlaylistActivity) {
    NetworkActivitySetCurrent(netPlaylistActivity);
}
/**
 * Hash: 0x157D8F3DE12B307F | ApiSet: undefined
 */
export function networkAddPlayerToRecentGamersList(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    NetworkAddPlayerToRecentGamersList(_player, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x1BAA028F52EED310 | ApiSet: undefined
 */
export function networkAlert(ctx, lh, ec, h) {
    if (typeof ctx === 'string')
        ctx = this.getHashKey(ctx);
    if (typeof lh === 'string')
        lh = this.getHashKey(lh);
    NetworkAlert(ctx, lh, ec, h);
}
/**
 * Hash: 0xF3354D6CA46F419D | ApiSet: undefined
 */
export function networkAllowEntityFadingForInstances(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkAllowEntityFadingForInstances(_entity, toggle);
}
/**
 * Hash: 0x4B05B97BA46F419D | ApiSet: undefined
 */
export function networkAllowAllEntityFadingForInstances(toggle) {
    NetworkAllowAllEntityFadingForInstances(toggle);
}
/**
 * Hash: 0x57DBA049E110F217 | ApiSet: undefined
 */
export function networkAreHandlesTheSame() {
    return NetworkAreHandlesTheSame();
}
/**
 * Hash: 0x267C78C60E806B9A | ApiSet: undefined
 */
export function networkAllowRemoteAttachmentModification(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkAllowRemoteAttachmentModification(_entity, toggle);
}
/**
 * ```
 * Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
 * ```
 * Hash: 0xF5C5929E07512F80 | ApiSet: undefined
 */
export function networkAreOnlineNotificationsShownInStoryMode() {
    return NetworkAreOnlineNotificationsShownInStoryMode();
}
/**
 * Hash: 0x11820D1AE80DEA39 | ApiSet: undefined
 */
export function networkArePlayersInSamePlatformParty() {
    return NetworkArePlayersInSamePlatformParty();
}
/**
 * Hash: 0x9DE986FC9A87C474 | ApiSet: undefined
 */
export function networkArePlayersInSameTutorialSession(player, index) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkArePlayersInSameTutorialSession(_player, index);
}
/**
 * Hash: 0xE404BFF0ABA23CDC | ApiSet: undefined
 */
export function networkAutoSessionCanSplitSession() {
    return NetworkAutoSessionCanSplitSession();
}
/**
 * Hash: 0xBB51299166B844F3 | ApiSet: undefined
 */
export function networkAutoSessionFinishInstance() {
    NetworkAutoSessionFinishInstance();
}
/**
 * Hash: 0xE258570E0C116A66 | ApiSet: undefined
 */
export function networkAutoSessionIsAutoWarpDisabled() {
    return NetworkAutoSessionIsAutoWarpDisabled();
}
/**
 * Hash: 0x277865A734918AE6 | ApiSet: undefined
 */
export function networkAutoSessionIsInstancedSession() {
    return NetworkAutoSessionIsInstancedSession();
}
/**
 * Hash: 0xAADED99A6B268A27 | ApiSet: undefined
 */
export function networkAutoSessionIsAllowedToMerge() {
    return NetworkAutoSessionIsAllowedToMerge();
}
/**
 * Hash: 0xA021095C983F20D8 | ApiSet: undefined
 */
export function networkAutoSessionIsProcessingSessionSplit() {
    return NetworkAutoSessionIsProcessingSessionSplit();
}
/**
 * Hash: 0x0E2C3AEE6CE603B7 | ApiSet: undefined
 */
export function networkAutoSessionIsObjectCreationPaused() {
    return NetworkAutoSessionIsObjectCreationPaused();
}
/**
 * Hash: 0x63246A24F5747510 | ApiSet: undefined
 */
export function networkAutoSessionSetAllowedToMerge(toggle, p2) {
    return NetworkAutoSessionSetAllowedToMerge(toggle, p2);
}
/**
 * Hash: 0x0A428058079EE65C | ApiSet: undefined
 */
export function networkAutoSessionSetAllowedToSplit(toggle) {
    NetworkAutoSessionSetAllowedToSplit(toggle);
}
/**
 * Hash: 0x4440FEE3EFE78F54 | ApiSet: undefined
 */
export function networkAutoSessionSetAutoWarpEnabled(toggle) {
    NetworkAutoSessionSetAutoWarpEnabled(toggle);
}
/**
 * Hash: 0xC223D299C670413D | ApiSet: undefined
 */
export function networkAutoSessionSplitSession(playersToTake, maxInstancePlayers, sessionFlags, bucketId) {
    return NetworkAutoSessionSplitSession(playersToTake, maxInstancePlayers, sessionFlags, bucketId);
}
/**
 * ```
 * On PC this returns true if gamerHandle is a valid handle.
 * ```
 * Hash: 0x99ABE9BF9DADA162 | ApiSet: undefined
 */
export function networkCanAddFriend() {
    return NetworkCanAddFriend();
}
/**
 * Hash: 0x6D87BA8EF15226CD | ApiSet: undefined
 */
export function networkAutoSessionSplitSessionSuccessful() {
    return NetworkAutoSessionSplitSessionSuccessful();
}
/**
 * Hash: 0xFBE782B3165AC8EC | ApiSet: undefined
 */
export function networkAwardHasReachedMaxclaim(p0) {
    return NetworkAwardHasReachedMaxclaim(p0);
}
/**
 * Hash: 0xF23D6475640D29EB | ApiSet: undefined
 */
export function networkCanReceiveInviteFromHandle() {
    return NetworkCanReceiveInviteFromHandle();
}
/**
 * Hash: 0x4EEBC3694E49C572 | ApiSet: undefined
 */
export function networkCanSessionEnd() {
    return NetworkCanSessionEnd();
}
/**
 * Hash: 0xAF50DA1A3F8B1BA4 | ApiSet: undefined
 */
export function networkCanAccessMultiplayer() {
    return NetworkCanAccessMultiplayer();
}
/**
 * Hash: 0x2A8112A974DE1EF6 | ApiSet: undefined
 */
export function networkCheckAccessAndAlertIfFail() {
    return NetworkCheckAccessAndAlertIfFail();
}
/**
 * Hash: 0x1AF5E28E64A76A9F | ApiSet: undefined
 */
export function networkCanRefreshFriendPage() {
    return NetworkCanRefreshFriendPage();
}
/**
 * Hash: 0x246545C37C27A717 | ApiSet: undefined
 */
export function networkCanViewGamerUserContent() {
    return NetworkCanViewGamerUserContent();
}
/**
 * Hash: 0x83F28CE49FBBFFBA | ApiSet: undefined
 */
export function networkCheckCommunicationPrivileges(p0) {
    return NetworkCheckCommunicationPrivileges(p0);
}
/**
 * Hash: 0x595F028698072DD9 | ApiSet: undefined
 */
export function networkCheckUserContentPrivileges(p0) {
    return NetworkCheckUserContentPrivileges(p0);
}
/**
 * Hash: 0x65F040D91001ED4B | ApiSet: undefined
 */
export function networkClearClockOverrideOvertime(milliseconds) {
    NetworkClearClockOverrideOvertime(milliseconds);
}
/**
 * Hash: 0xD972DF67326F966E | ApiSet: undefined
 */
export function networkClearClockTimeOverride() {
    NetworkClearClockTimeOverride();
}
/**
 * Hash: 0x6D14CCEE1B40381A | ApiSet: undefined
 */
export function networkClearFoundGamers() {
    NetworkClearFoundGamers();
}
/**
 * Hash: 0x86E0660E4F5C956D | ApiSet: undefined
 */
export function networkClearGetGamerStatus() {
    NetworkClearGetGamerStatus();
}
/**
 * Hash: 0xA4484173759749B1 | ApiSet: undefined
 */
export function networkClearPlatformInvite() {
    NetworkClearPlatformInvite();
}
/**
 * Hash: 0x669E223E64B1903C | ApiSet: undefined
 */
export function networkClockTimeOverride(hour, minute, second, transitionTime, pauseClock) {
    NetworkClockTimeOverride(hour, minute, second, transitionTime, pauseClock);
}
/**
 * Hash: 0xBBDF066252829606 | ApiSet: undefined
 */
export function networkConcealPlayer(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    NetworkConcealPlayer(_player, toggle);
}
/**
 * Hash: 0xE28C13ECC36FF14E | ApiSet: undefined
 */
export function networkClockTimeOverride2(hour, minute, second, transitionTime, pauseClock, clockwise) {
    NetworkClockTimeOverride2(hour, minute, second, transitionTime, pauseClock, clockwise);
}
/**
 * ```
 * Must be called from a background script, otherwise it will do nothing.
 * ```
 * Hash: 0xFA38B52F91B59075 | ApiSet: undefined
 */
export function networkDebugRequestEntityPosition() {
    return NetworkDebugRequestEntityPosition();
}
/**
 * Hash: 0x5AE17C6B0134B7F1 | ApiSet: undefined
 */
export function networkDidGetGamerStatusSucceed() {
    return NetworkDidGetGamerStatusSucceed();
}
/**
 * Hash: 0xF9B83B77929D8863 | ApiSet: undefined
 */
export function networkDidFindGamersSucceed() {
    return NetworkDidFindGamersSucceed();
}
/**
 * Hash: 0x12AEB56B489415C5 | ApiSet: undefined
 */
export function networkDidRecentGamerNamesRequestSucceed() {
    return NetworkDidRecentGamerNamesRequestSucceed();
}
/**
 * Hash: 0x236905C700FDB54D | ApiSet: undefined
 */
export function networkDisableRealtimeMultiplayer() {
    NetworkDisableRealtimeMultiplayer();
}
/**
 * Hash: 0xC505036A35AFD01B | ApiSet: undefined
 */
export function networkDisableLeaveRemotePedBehind(toggle) {
    NetworkDisableLeaveRemotePedBehind(toggle);
}
/**
 * Hash: 0x407091CF6037118E | ApiSet: undefined
 */
export function networkDisableProximityMigration(netID) {
    NetworkDisableProximityMigration(netID);
}
/**
 * Hash: 0x38CE16C96BD11344 | ApiSet: undefined
 */
export function networkDoesNetworkIdExist(netID) {
    return NetworkDoesNetworkIdExist(netID);
}
/**
 * ```
 * Hardcoded to return -1.
 * ```
 * Hash: 0xD66C9E72B3CC4982 | ApiSet: undefined
 */
export function networkDisplaynamesFromHandlesStart(p1) {
    return NetworkDisplaynamesFromHandlesStart(p1);
}
/**
 * Hash: 0x85E5F8B9B898B20A | ApiSet: undefined
 */
export function networkDoesTunableExist(tunableContext, tunableName) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkDoesTunableExist(tunableContext, tunableName);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xAEDF1BC1C133D6E3 | ApiSet: undefined
 */
export function networkDumpNetIfConfig() {
    return NetworkDumpNetIfConfig();
}
/**
 * Hash: 0xD0AFAFF5A51D72F7 | ApiSet: undefined
 */
export function networkEndTutorialSession() {
    NetworkEndTutorialSession();
}
/**
 * Hash: 0xD414BE129BB81B32 | ApiSet: undefined
 */
export function networkGetAverageLatency(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetAverageLatency(_player);
}
/**
 * Hash: 0x4CACA84440FA26F6 | ApiSet: undefined
 */
export function networkGetAssistedDamageOfEntity(player, entity) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkGetAssistedDamageOfEntity(_player, _entity);
}
/**
 * Hash: 0xA3EEC0A5AFF3FC5B | ApiSet: undefined
 */
export function networkGetCurrentFriendPageData() {
    return NetworkGetCurrentFriendPageData();
}
/**
 * Hash: 0x350C23949E43686C | ApiSet: undefined
 */
export function networkGetAveragePacketLoss(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetAveragePacketLoss(_player);
}
/**
 * Hash: 0x7A1ADEEF01740A24 | ApiSet: undefined
 */
export function networkGetDestroyerOfNetworkId(netId) {
    return NetworkGetDestroyerOfNetworkId(netId);
}
/**
 * ```
 * Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
 * ```
 * Hash: 0x0E3A041ED6AC2B45 | ApiSet: undefined
 */
export function networkGetAveragePing(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetAveragePing(_player);
}
/**
 * ```
 * Example:
 * char displayName[64];
 * if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
 * {
 * // use displayName
 * }
 * ```
 * Hash: 0x7FEE4F07C54B6B3C | ApiSet: undefined
 */
export function networkGetDisplayNameFromHandle(displayName) {
    return NetworkGetDisplayNameFromHandle(displayName);
}
/**
 * Hash: 0xCE4E5D9B0A4FF560 | ApiSet: undefined
 */
export function networkGetEntityFromNetworkId(netId) {
    return NetworkGetEntityFromNetworkId(netId);
}
/**
 * ```
 * Hardcoded to return zero.
 * ```
 * Hash: 0x58CC181719256197 | ApiSet: undefined
 */
export function networkGetDisplaynamesFromHandles(p0, p1, p2) {
    return NetworkGetDisplaynamesFromHandles(p0, p1, p2);
}
/**
 * Hash: 0x42B2DAA6B596F5F8 | ApiSet: undefined
 */
export function networkGetEntityKillerOfPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetEntityKillerOfPlayer(_player);
}
/**
 * Hash: 0xC7827959479DCC78 | ApiSet: undefined
 */
export function networkGetEntityIsNetworked(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkGetEntityIsNetworked(_entity);
}
/**
 * Hash: 0xDDAEB478E58F8DEA | ApiSet: undefined
 */
export function networkGetGamerStatus(p1) {
    return NetworkGetGamerStatus(p1);
}
/**
 * Hash: 0x225640E09EFFDC3F | ApiSet: undefined
 */
export function networkGetGameMode() {
    return NetworkGetGameMode();
}
/**
 * Hash: 0x5659D87BE674AB17 | ApiSet: undefined
 */
export function networkGetGamertagFromFriend() {
    return NetworkGetGamertagFromFriend();
}
/**
 * Hash: 0xFBDFE1C1356E12E8 | ApiSet: undefined
 */
export function networkGetGamerSessionFromHandle(count) {
    return NetworkGetGamerSessionFromHandle(count);
}
/**
 * Hash: 0x11A7ADCD629E170F | ApiSet: undefined
 */
export function networkGetGlobalClock() {
    return NetworkGetGlobalClock();
}
/**
 * ```
 * Always returns a null string.
 * ```
 * Hash: 0x426141162EBE5CDB | ApiSet: undefined
 */
export function networkGetGamertagFromHandle() {
    return NetworkGetGamertagFromHandle();
}
/**
 * Hash: 0xDD7806FD0543BC3D | ApiSet: undefined
 */
export function networkGetGlobalEntityFlags(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkGetGlobalEntityFlags(_entity);
}
/**
 * Hash: 0x52C1EADAF7B10302 | ApiSet: undefined
 */
export function networkGetHighestReliableResendCount(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetHighestReliableResendCount(_player);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC7B4D79B01FA7A5C | ApiSet: undefined
 */
export function networkGetHostOfThisScript() {
    return NetworkGetHostOfThisScript();
}
/**
 * Hash: 0x6D03BFBD643B2A02 | ApiSet: undefined
 */
export function networkGetGlobalMultiplayerClock() {
    return NetworkGetGlobalMultiplayerClock();
}
/**
 * Hash: 0x638A3A81733086DB | ApiSet: undefined
 */
export function networkGetInstanceIdOfThisScript() {
    return NetworkGetInstanceIdOfThisScript();
}
/**
 * Hash: 0xE86051786B66CD8E | ApiSet: undefined
 */
export function networkGetLocalHandle() {
    return NetworkGetLocalHandle();
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x1D6A14F1F9A736FC | ApiSet: undefined
 */
export function networkGetHostOfScript(scriptName, p1, p2) {
    return NetworkGetHostOfScript(scriptName, p1, p2);
}
/**
 * ```
 * Seems to always return 0, but it's used in quite a few loops.
 * `for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)`
 * {
 * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)`
 * {
 * `var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));`
 * ```
 * Hash: 0xA6C90FBC38E395EE | ApiSet: undefined
 */
export function networkGetMaxNumParticipants() {
    return NetworkGetMaxNumParticipants();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x6FD992C4A1C1B986 | ApiSet: undefined
 */
export function networkGetNetStatisticsInfo() {
    return NetworkGetNetStatisticsInfo();
}
/**
 * Hash: 0xB4A25351D79B444C | ApiSet: undefined
 */
export function networkGetHostOfThread(threadId) {
    return NetworkGetHostOfThread(threadId);
}
/**
 * Hash: 0xFB9ECED5B68F3B78 | ApiSet: undefined
 */
export function networkGetInstanceIdOfThread(threadId) {
    return NetworkGetInstanceIdOfThread(threadId);
}
/**
 * Hash: 0x42871327315EDAE8 | ApiSet: undefined
 */
export function networkGetNetworkIdFromRopeId(ropeId) {
    return NetworkGetNetworkIdFromRopeId(ropeId);
}
/**
 * ```
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 * ```
 * Hash: 0xA4A79DD2D9600654 | ApiSet: undefined
 */
export function networkGetNumConnectedPlayers() {
    return NetworkGetNumConnectedPlayers();
}
/**
 * Hash: 0xA11700682F3AD45C | ApiSet: undefined
 */
export function networkGetNetworkIdFromEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkGetNetworkIdFromEntity(_entity);
}
/**
 * Hash: 0x18D0456E86604654 | ApiSet: undefined
 */
export function networkGetNumParticipants() {
    return NetworkGetNumParticipants();
}
/**
 * ```
 * Hardcoded to return zero.
 * ==== PS4 specific info ====
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 * 0 = REASON_OTHER
 * 1 = REASON_SYSTEM_UPDATE
 * 2 = REASON_GAME_UPDATE
 * 3 = REASON_SIGNED_OUT
 * 4 = REASON_AGE
 * 5 = REASON_CONNECTION
 * =================================
 * ```
 * Hash: 0x74FB3E29E6D10FA9 | ApiSet: undefined
 */
export function networkGetNpUnavailableReason() {
    return NetworkGetNpUnavailableReason();
}
/**
 * Hash: 0xFF8FCF9FFC458A1C | ApiSet: undefined
 */
export function networkGetNumUnackedReliables(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetNumUnackedReliables(_player);
}
/**
 * Hash: 0x37A834AEC6A4F74A | ApiSet: undefined
 */
export function networkGetNumRecentGamers() {
    return NetworkGetNumRecentGamers();
}
/**
 * Hash: 0x3658E8CD94FC121A | ApiSet: undefined
 */
export function networkGetNumScriptParticipants(scriptName, instanceId, position) {
    if (typeof position === 'string')
        position = this.getHashKey(position);
    return NetworkGetNumScriptParticipants(scriptName, instanceId, position);
}
/**
 * Hash: 0xD9267375834C5EAB | ApiSet: undefined
 */
export function networkGetPlayerFastInstanceId(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetPlayerFastInstanceId(_player);
}
/**
 * Hash: 0x1B84DF6AF2A46938 | ApiSet: undefined
 */
export function networkGetParticipantIndex(index) {
    return NetworkGetParticipantIndex(index);
}
/**
 * Hash: 0x9BCF28FB5D65A9BE | ApiSet: undefined
 */
export function networkGetPlatformInviteId() {
    return NetworkGetPlatformInviteId();
}
/**
 * Hash: 0xCE5F689CF5A0A49D | ApiSet: undefined
 */
export function networkGetPlayerFromGamerHandle() {
    return NetworkGetPlayerFromGamerHandle();
}
/**
 * ```
 * Returns the Player associated to a given Ped when in an online session.
 * ```
 * Hash: 0x6C0E2E0125610278 | ApiSet: undefined
 */
export function networkGetPlayerIndexFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return NetworkGetPlayerIndexFromPed(_ped);
}
/**
 * Hash: 0x24FB80D107371267 | ApiSet: undefined
 */
export function networkGetPlayerIndex(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetPlayerIndex(_player);
}
/**
 * Hash: 0xA6C0787443C9583E | ApiSet: undefined
 */
export function networkGetPlayerOwnerOfNetworkId(netId) {
    return NetworkGetPlayerOwnerOfNetworkId(netId);
}
/**
 * ```
 * Hardcoded to return zero.
 * ```
 * Hash: 0x2FB53C631A49BE92 | ApiSet: undefined
 */
export function networkGetPromotionDlgSeenCount() {
    return NetworkGetPromotionDlgSeenCount();
}
/**
 * Hash: 0xE30CF56F1EFA5F43 | ApiSet: undefined
 */
export function networkGetRandomIntRanged(rangeStart, rangeEnd) {
    return NetworkGetRandomIntRanged(rangeStart, rangeEnd);
}
/**
 * Hash: 0xEB1A4DD8352EC828 | ApiSet: undefined
 */
export function networkGetRopeIdFromNetworkId(netId) {
    return NetworkGetRopeIdFromNetworkId(netId);
}
/**
 * Hash: 0x3B39236746714134 | ApiSet: undefined
 */
export function networkGetPlayerTutorialSessionInstance(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetPlayerTutorialSessionInstance(_player);
}
/**
 * Hash: 0x32C90CDFAF40514C | ApiSet: undefined
 */
export function networkGetRank() {
    return NetworkGetRank();
}
/**
 * ```
 * Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
 * ```
 * Hash: 0xAC6153A0722F524C | ApiSet: undefined
 */
export function networkGetRosTitleName() {
    return NetworkGetRosTitleName();
}
/**
 * Hash: 0xFEFCC345CE357453 | ApiSet: undefined
 */
export function networkGetRecentGamerNames(p0, p1, dataSize) {
    return NetworkGetRecentGamerNames(p0, p1, dataSize);
}
/**
 * Hash: 0x8DC9AA3B508B1A85 | ApiSet: undefined
 */
export function networkGetSessionHost() {
    return NetworkGetSessionHost();
}
/**
 * Hash: 0x57D158647A6BFABF | ApiSet: undefined
 */
export function networkGetScriptStatus() {
    return NetworkGetScriptStatus();
}
/**
 * Hash: 0x690806BC83BC8CA2 | ApiSet: undefined
 */
export function networkGetSizeOfPlayerBroadcastDataStorage() {
    return NetworkGetSizeOfPlayerBroadcastDataStorage();
}
/**
 * Hash: 0xBA24095EA96DFE17 | ApiSet: undefined
 */
export function networkGetSizeOfHostBroadcastDataStorage() {
    return NetworkGetSizeOfHostBroadcastDataStorage();
}
/**
 * Hash: 0x2910669969E9535E | ApiSet: undefined
 */
export function networkGetThisScriptIsNetworkScript() {
    return NetworkGetThisScriptIsNetworkScript();
}
/**
 * Hash: 0xDB7ABDD203FA3704 | ApiSet: undefined
 */
export function networkGetTotalNumFriends() {
    return NetworkGetTotalNumFriends();
}
/**
 * Hash: 0x5ED0356A0CE3A34F | ApiSet: undefined
 */
export function networkGetTimeoutTime() {
    return NetworkGetTimeoutTime();
}
/**
 * Hash: 0x3765C3A3E8192E10 | ApiSet: undefined
 */
export function networkGetUnreliableResendCount(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkGetUnreliableResendCount(_player);
}
/**
 * Hash: 0xCF61D4B4702EE9EB | ApiSet: undefined
 */
export function networkGetTotalNumPlayers() {
    return NetworkGetTotalNumPlayers();
}
/**
 * Hash: 0xDB438CC9BC6F4022 | ApiSet: undefined
 */
export function networkGetXp() {
    return NetworkGetXp();
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x10BD227A753B0D84 | ApiSet: undefined
 */
export function networkGetTunableCloudCrc() {
    return NetworkGetTunableCloudCrc();
}
/**
 * Hash: 0x388EB2B86C73B6B3 | ApiSet: undefined
 */
export function networkHandleFromPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkHandleFromPlayer(_player);
}
/**
 * Hash: 0xD45CB817D7E177D2 | ApiSet: undefined
 */
export function networkHandleFromFriend(friendIndex) {
    return NetworkHandleFromFriend(friendIndex);
}
/**
 * Hash: 0xDD73C9838CE7181D | ApiSet: undefined
 */
export function networkHasCompletedMpIntroFlowOnCurrentSlot() {
    return NetworkHasCompletedMpIntroFlowOnCurrentSlot();
}
/**
 * Hash: 0x26A5C12FACFF8724 | ApiSet: undefined
 */
export function networkHasControlOfAnimScene(animScene) {
    return NetworkHasControlOfAnimScene(animScene);
}
/**
 * Hash: 0x4D36070FE0215186 | ApiSet: undefined
 */
export function networkHasControlOfNetworkId(netId) {
    return NetworkHasControlOfNetworkId(netId);
}
/**
 * Hash: 0x01BF60A500E28887 | ApiSet: undefined
 */
export function networkHasControlOfEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkHasControlOfEntity(_entity);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x51EABCF2786515AB | ApiSet: undefined
 */
export function networkHasControlOfPickupPlacement(p0) {
    return NetworkHasControlOfPickupPlacement(p0);
}
/**
 * Hash: 0x5BC9495F0B3B6FA6 | ApiSet: undefined
 */
export function networkHasControlOfPickup(pickup) {
    return NetworkHasControlOfPickup(pickup);
}
/**
 * Hash: 0xB07D3185E11657A5 | ApiSet: undefined
 */
export function networkHasEntityBeenRegisteredWithThisThread(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkHasEntityBeenRegisteredWithThisThread(_entity);
}
/**
 * Hash: 0x25189F9908E9CD65 | ApiSet: undefined
 */
export function networkHasCurrentGetGamerStatusStarted() {
    return NetworkHasCurrentGetGamerStatusStarted();
}
/**
 * Hash: 0xD0498AD30E16B6BD | ApiSet: undefined
 */
export function networkHasPendingInviteFailure() {
    return NetworkHasPendingInviteFailure();
}
/**
 * Hash: 0x5D10B3795F3FC886 | ApiSet: undefined
 */
export function networkHasReceivedHostBroadcastData() {
    return NetworkHasReceivedHostBroadcastData();
}
/**
 * Hash: 0xA699957E60D80214 | ApiSet: undefined
 */
export function networkHasRosPrivilege(index) {
    return NetworkHasRosPrivilege(index);
}
/**
 * ```
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 * ```
 * Hash: 0x85443FF4C328F53B | ApiSet: undefined
 */
export function networkHasValidRosCredentials() {
    return NetworkHasValidRosCredentials();
}
/**
 * Hash: 0x67A5589628E0CFF6 | ApiSet: undefined
 */
export function networkHasSocialClubAccount() {
    return NetworkHasSocialClubAccount();
}
/**
 * Hash: 0xBC1D768F2F5D6C05 | ApiSet: undefined
 */
export function networkHashFromPlayerHandle(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkHashFromPlayerHandle(_player);
}
/**
 * Hash: 0x8020A73847E0CA7D | ApiSet: undefined
 */
export function networkHaveRosBannedPriv() {
    return NetworkHaveRosBannedPriv();
}
/**
 * Hash: 0xD7C95D322FF57522 | ApiSet: undefined
 */
export function networkIsClockTimeOverridden() {
    return NetworkIsClockTimeOverridden();
}
/**
 * Hash: 0x25CB5A9F37BFD063 | ApiSet: undefined
 */
export function networkHaveOnlinePrivileges() {
    return NetworkHaveOnlinePrivileges();
}
/**
 * Hash: 0x8E7CE19219669AEB | ApiSet: undefined
 */
export function networkIsAimCamActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsAimCamActive(_player);
}
/**
 * Hash: 0x16D3D49902F697BB | ApiSet: undefined
 */
export function networkIsConnectedViaRelay(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsConnectedViaRelay(_player);
}
/**
 * Hash: 0x9A4CF4F48AD77302 | ApiSet: undefined
 */
export function networkIsCloudAvailable() {
    return NetworkIsCloudAvailable();
}
/**
 * Hash: 0x9C725D149622BFDE | ApiSet: undefined
 */
export function networkIsFeatureSupported(featureId) {
    return NetworkIsFeatureSupported(featureId);
}
/**
 * Hash: 0xDDDF64C91BFCF0AA | ApiSet: undefined
 */
export function networkIsFindingGamers() {
    return NetworkIsFindingGamers();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x78A9535AF83715C6 | ApiSet: undefined
 */
export function networkIsCustomUpsellEnabled() {
    return NetworkIsCustomUpsellEnabled();
}
/**
 * Hash: 0xE348D1404BD80146 | ApiSet: undefined
 */
export function networkIsFriendHandleOnline() {
    return NetworkIsFriendHandleOnline();
}
/**
 * Hash: 0x1A24A179F9B31654 | ApiSet: undefined
 */
export function networkIsFriend() {
    return NetworkIsFriend();
}
/**
 * Hash: 0x0F10B05DDF8D16E9 | ApiSet: undefined
 */
export function networkIsGamerInMySession() {
    return NetworkIsGamerInMySession();
}
/**
 * Hash: 0x665161D250850A9F | ApiSet: undefined
 */
export function networkIsFriendHandleInSameTitle() {
    return NetworkIsFriendHandleInSameTitle();
}
/**
 * Hash: 0x6F79B93B0A8E4133 | ApiSet: undefined
 */
export function networkIsHandleValid() {
    return NetworkIsHandleValid();
}
/**
 * Hash: 0x10FAB35428CCC9D7 | ApiSet: undefined
 */
export function networkIsGameInProgress() {
    return NetworkIsGameInProgress();
}
/**
 * ```
 * If you are host, returns true else returns false.
 * ```
 * Hash: 0x8DB296B814EDDA07 | ApiSet: undefined
 */
export function networkIsHost() {
    return NetworkIsHost();
}
/**
 * Hash: 0x83CD99A1E6061AB5 | ApiSet: undefined
 */
export function networkIsHostOfThisScript() {
    return NetworkIsHostOfThisScript();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x2FC5650B0271CB57 | ApiSet: undefined
 */
export function networkIsInPlatformParty() {
    return NetworkIsInPlatformParty();
}
/**
 * Hash: 0x6CC27C9FA2040220 | ApiSet: undefined
 */
export function networkIsInMpCutscene() {
    return NetworkIsInMpCutscene();
}
/**
 * Hash: 0x048746E388762E11 | ApiSet: undefined
 */
export function networkIsInSpectatorMode() {
    return NetworkIsInSpectatorMode();
}
/**
 * Hash: 0xADA24309FE08DACF | ApiSet: undefined
 */
export function networkIsInTutorialSession() {
    return NetworkIsInTutorialSession();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0xFD8B834A8BA05048 | ApiSet: undefined
 */
export function networkIsInPlatformPartyChat() {
    return NetworkIsInPlatformPartyChat();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x0BE73DA6984A6E33 | ApiSet: undefined
 */
export function networkIsPendingFriend() {
    return NetworkIsPendingFriend();
}
/**
 * Hash: 0xCA97246103B63917 | ApiSet: undefined
 */
export function networkIsInSession() {
    return NetworkIsInSession();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0xC5196C42DE19F646 | ApiSet: undefined
 */
export function networkIsInSessionLobby() {
    return NetworkIsInSessionLobby();
}
/**
 * Hash: 0x6FF8FF40B6357D45 | ApiSet: undefined
 */
export function networkIsParticipantActive(p0) {
    return NetworkIsParticipantActive(p0);
}
/**
 * Hash: 0xFC4165C9165C166F | ApiSet: undefined
 */
export function networkIsPlatformInvitePending() {
    return NetworkIsPlatformInvitePending();
}
/**
 * Hash: 0x1AD5B71586B94820 | ApiSet: undefined
 */
export function networkIsPlayerAParticipantOnScript(p0, p2) {
    const _p0 = p0 instanceof Entity ? p0.remoteId() : p0;
    return NetworkIsPlayerAParticipantOnScript(_p0, p2);
}
/**
 * Hash: 0x919B3C98ED8292F9 | ApiSet: undefined
 */
export function networkIsPlayerConcealed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerConcealed(_player);
}
/**
 * Hash: 0x3CA58F6CB7CBD784 | ApiSet: undefined
 */
export function networkIsPlayerAParticipant(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerAParticipant(_player);
}
/**
 * ```
 * Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
 * ```
 * Hash: 0x63F9EE203C3619F2 | ApiSet: undefined
 */
export function networkIsPlayerInMpCutscene(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerInMpCutscene(_player);
}
/**
 * ```
 * Returns true if the passed value is less than 32.
 * ```
 * Hash: 0x255A5EF65EDA9167 | ApiSet: undefined
 */
export function networkIsPlayerIndexValid(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerIndexValid(_player);
}
/**
 * Hash: 0xB8DFD30D6973E135 | ApiSet: undefined
 */
export function networkIsPlayerActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerActive(_player);
}
/**
 * Hash: 0x93DC1BE4E1ABE9D1 | ApiSet: undefined
 */
export function networkIsPlayerConnected(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerConnected(_player);
}
/**
 * ```
 * _NETWORK_IS_T* - _NETWORK_RE*
 * ```
 * Hash: 0xA21E3BAD0A42D199 | ApiSet: undefined
 */
export function networkIsPreviousUploadPending() {
    return NetworkIsPreviousUploadPending();
}
/**
 * Hash: 0x5B709519997ECF0F | ApiSet: undefined
 */
export function networkIsPlayerInSpectatorMode(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkIsPlayerInSpectatorMode(_player);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x8FF6059DA26E688A | ApiSet: undefined
 */
export function networkIsPromotionEnabled() {
    return NetworkIsPromotionEnabled();
}
/**
 * Hash: 0x1BB50CD340A996E6 | ApiSet: undefined
 */
export function networkIsResettingPopulation() {
    return NetworkIsResettingPopulation();
}
/**
 * Hash: 0x4664D213A0CCAF40 | ApiSet: undefined
 */
export function networkIsRecentGamerNamesRequestInProgress() {
    return NetworkIsRecentGamerNamesRequestInProgress();
}
/**
 * Hash: 0xD83C2B94E7508980 | ApiSet: undefined
 */
export function networkIsSessionActive() {
    return NetworkIsSessionActive();
}
/**
 * Hash: 0x9D40DF90FAD26098 | ApiSet: undefined
 */
export function networkIsScriptActive(scriptName, p1, p2, p3) {
    return NetworkIsScriptActive(scriptName, p1, p2, p3);
}
/**
 * Hash: 0x31DAD2CD6D49546E | ApiSet: undefined
 */
export function networkIsThreadActive(threadId) {
    return NetworkIsThreadActive(threadId);
}
/**
 * Hash: 0x1077788E268557C2 | ApiSet: undefined
 */
export function networkIsSignedOnline() {
    return NetworkIsSignedOnline();
}
/**
 * Hash: 0x1B89BC43B6E69107 | ApiSet: undefined
 */
export function networkIsScriptActiveByHash(scriptHash, p1, p2, p3) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return NetworkIsScriptActiveByHash(scriptHash, p1, p2, p3);
}
/**
 * Hash: 0xE525878A35B9EEBD | ApiSet: undefined
 */
export function networkIsTrackedPlayerVisible(player, trackedPlayer) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _trackedPlayer = trackedPlayer instanceof Entity ? trackedPlayer.remoteId() : trackedPlayer;
    return NetworkIsTrackedPlayerVisible(_player, _trackedPlayer);
}
/**
 * Hash: 0x9DE624D2FC4B603F | ApiSet: undefined
 */
export function networkIsSessionStarted() {
    return NetworkIsSessionStarted();
}
/**
 * Hash: 0x0467C11ED88B7D28 | ApiSet: undefined
 */
export function networkIsTunableCloudRequestPending() {
    return NetworkIsTunableCloudRequestPending();
}
/**
 * Hash: 0x35F0B98A8387274D | ApiSet: undefined
 */
export function networkIsTutorialSessionChangePending() {
    return NetworkIsTutorialSessionChangePending();
}
/**
 * ```
 * Returns false if pedshot push failed
 * ```
 * Hash: 0x2A48D9567940598F | ApiSet: undefined
 */
export function networkPersonaPhotoWriteLocal(texture, playerSlot, p2, personaPhotoLocalCacheType) {
    return NetworkPersonaPhotoWriteLocal(texture, playerSlot, p2, personaPhotoLocalCacheType);
}
/**
 * ```
 * Returns false if pedshot push failed
 * ```
 * Hash: 0xB72999D3120599DF | ApiSet: undefined
 */
export function networkPersonaPhotoWriteScProfile(texture, personaPhotoType, formatIndex) {
    return NetworkPersonaPhotoWriteScProfile(texture, personaPhotoType, formatIndex);
}
/**
 * Hash: 0x3E9B2F01C50DF595 | ApiSet: undefined
 */
export function networkRegisterHostBroadcastVariables(p0, p1, p2) {
    NetworkRegisterHostBroadcastVariables(p0, p1, p2);
}
/**
 * Hash: 0x1F51F367B710A832 | ApiSet: undefined
 */
export function networkRefreshCurrentFriendPage() {
    return NetworkRefreshCurrentFriendPage();
}
/**
 * Hash: 0x06FAACD625D80CAA | ApiSet: undefined
 */
export function networkRegisterEntityAsNetworked(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkRegisterEntityAsNetworked(_entity);
}
/**
 * Hash: 0x2302C0264EA58D31 | ApiSet: undefined
 */
export function networkPreventScriptHostMigration() {
    NetworkPreventScriptHostMigration();
}
/**
 * Hash: 0x55F618F68AB854D3 | ApiSet: undefined
 */
export function networkRemoveFriend() {
    return NetworkRemoveFriend();
}
/**
 * Hash: 0x3364AA97340CA215 | ApiSet: undefined
 */
export function networkRegisterPlayerBroadcastVariables(p0, p1, p2) {
    NetworkRegisterPlayerBroadcastVariables(p0, p1, p2);
}
/**
 * ```
 * Note: this native was added in build 1311.23, but was only used after build 1436.25
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x42FB3B532D526E6C | ApiSet: undefined
 */
export function networkRequestCloudTunables() {
    NetworkRequestCloudTunables();
}
/**
 * Hash: 0xAAA92B631B13F614 | ApiSet: undefined
 */
export function networkRequestControlOfAnimScene(animScene) {
    return NetworkRequestControlOfAnimScene(animScene);
}
/**
 * Hash: 0xB69317BF5E782347 | ApiSet: undefined
 */
export function networkRequestControlOfEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return NetworkRequestControlOfEntity(_entity);
}
/**
 * Hash: 0xA670B3662FAFFBD0 | ApiSet: undefined
 */
export function networkRequestControlOfNetworkId(netId) {
    return NetworkRequestControlOfNetworkId(netId);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x56ED2C48558DAB78 | ApiSet: undefined
 */
export function networkRequestControlOfPickupPlacement(p0) {
    return NetworkRequestControlOfPickupPlacement(p0);
}
/**
 * Hash: 0xE483BB6BE686F632 | ApiSet: undefined
 */
export function networkRequestJoin(p0) {
    return NetworkRequestJoin(p0);
}
/**
 * ```
 * flags:
 * enum eSessionRequestOptionFlags
 * {
 * SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
 * SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
 * };
 * seamlessType:
 * enum eSeamlessType
 * {
 * SEAMLESS_TYPE_NORMAL,
 * SEAMLESS_TYPE_PVE,
 * SEAMLESS_TYPE_DEV,
 * SEAMLESS_TYPE_NO_SEAMLESS
 * };
 * ```
 * Hash: 0x04019AE4956D4393 | ApiSet: undefined
 */
export function networkRequestSessionSeamless(flags, seamlessType) {
    return NetworkRequestSessionSeamless(flags, seamlessType);
}
/**
 * Hash: 0x6D206D383BB5F6B1 | ApiSet: undefined
 */
export function networkRequestRecentGamerNames(p0, playerCount) {
    return NetworkRequestRecentGamerNames(p0, playerCount);
}
/**
 * Hash: 0x101F538C25ABB39A | ApiSet: undefined
 */
export function networkResetPopulation(p0, p1) {
    return NetworkResetPopulation(p0, p1);
}
/**
 * Hash: 0xEA23C49EAA83ACFB | ApiSet: undefined
 */
export function networkResurrectLocalPlayer(position, heading, p4, p5, p6, p7) {
    NetworkResurrectLocalPlayer(position.x, position.y, position.z, heading, p4, p5, p6, p7);
}
/**
 * Hash: 0xF1B84178F8674195 | ApiSet: undefined
 */
export function networkSeedRandomNumberGenerator(seed) {
    NetworkSeedRandomNumberGenerator(seed);
}
/**
 * Hash: 0x4154B7D8C75E5DCF | ApiSet: undefined
 */
export function networkResurrectLocalPlayer2() {
    return NetworkResurrectLocalPlayer2();
}
/**
 * ```
 * enum eSessionFlags
 * {
 * SESSION_FLAG_NONE = 0,
 * SF_INSTANCE = (1 << 0),
 * SF_MATCH = (1 << 1),
 * SF_PRIVATE = (1 << 2),
 * SF_BLOCK_INVITES = (1 << 3),
 * SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
 * SF_BLOCK_NON_HOST_INVITES = (1 << 5),
 * SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
 * SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
 * SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
 * SF_IN_GAMEPLAY = (1 << 9),
 * SF_COMPETITIVE = (1 << 10),
 * SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
 * };
 * ```
 * Hash: 0xE546BDA1B3E288EE | ApiSet: undefined
 */
export function networkSessionAddSessionFlags(flags) {
    return NetworkSessionAddSessionFlags(flags);
}
/**
 * Hash: 0xE47001B7CB8B98AE | ApiSet: undefined
 */
export function networkSendSessionInvite(contentId, dataSize, p4, flags) {
    return NetworkSendSessionInvite(contentId, dataSize, p4, flags);
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4DEC5000F7B508F0 | ApiSet: undefined
 */
export function networkSessionAreSessionIdsEqual() {
    return NetworkSessionAreSessionIdsEqual();
}
/**
 * Hash: 0xE72E5C1289BD1F40 | ApiSet: undefined
 */
export function networkSessionCancelRequest() {
    return NetworkSessionCancelRequest();
}
/**
 * Hash: 0x51F33DBC1A41CBFD | ApiSet: undefined
 */
export function networkSessionGetSessionFlags() {
    return NetworkSessionGetSessionFlags();
}
/**
 * ```
 * Returns result of session request:
 * 0 - NOT_FOUND
 * 1 - IN_PROGRESS
 * 2 - TIMEOUT
 * 3 - PLAYER_OFFLINE
 * 4 - GANG_MEMBERS_CHANGED
 * 5 - PLAYER_CANCELLED
 * 6 - PLAYER_SET_TOO_LARGE
 * 7 - MATCH_ACCEPTED
 * 8 - OTHER
 * ```
 * Hash: 0x0DD051B1BF4B8BD6 | ApiSet: undefined
 */
export function networkSessionGetSessionRequestResult() {
    return NetworkSessionGetSessionRequestResult();
}
/**
 * ```
 * Note: this native was added in build 1311.23
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE9B356C330C0A806 | ApiSet: undefined
 */
export function networkSessionGetSessionId() {
    return NetworkSessionGetSessionId();
}
/**
 * Hash: 0xF0C0C94B404206FA | ApiSet: undefined
 */
export function networkSessionGetSessionType() {
    return NetworkSessionGetSessionType();
}
/**
 * Hash: 0xBAFFDE5F953720D9 | ApiSet: undefined
 */
export function networkSessionIsAnyRequestInProgress() {
    return NetworkSessionIsAnyRequestInProgress();
}
/**
 * Hash: 0x0F44A5C78D114922 | ApiSet: undefined
 */
export function networkSessionIsNsrrSuccess() {
    return NetworkSessionIsNsrrSuccess();
}
/**
 * ```
 * Checks for session flag 'SF_PRIVATE'
 * ```
 * Hash: 0xCEF70AA5B3F89BA1 | ApiSet: undefined
 */
export function networkSessionIsPrivate() {
    return NetworkSessionIsPrivate();
}
/**
 * Hash: 0x8FB7C254CFCBF78E | ApiSet: undefined
 */
export function networkSessionIsRequestInProgress() {
    return NetworkSessionIsRequestInProgress();
}
/**
 * Hash: 0x9E762A595CF88E4A | ApiSet: undefined
 */
export function networkSessionIsRequestInProgressByQueueGroup(queueGroup) {
    return NetworkSessionIsRequestInProgressByQueueGroup(queueGroup);
}
/**
 * Hash: 0xCCF878D50F8AB10D | ApiSet: undefined
 */
export function networkSessionIsRequestPendingTransition() {
    return NetworkSessionIsRequestPendingTransition();
}
/**
 * Hash: 0x2F54B146D3EDCE4D | ApiSet: undefined
 */
export function networkSessionIsSessionRequestIdValid() {
    return NetworkSessionIsSessionRequestIdValid();
}
/**
 * Hash: 0xF2CBC969C4F090C7 | ApiSet: undefined
 */
export function networkSessionIsTransitioning() {
    return NetworkSessionIsTransitioning();
}
/**
 * Hash: 0x17C21B7319A05047 | ApiSet: undefined
 */
export function networkSessionLeaveSession() {
    return NetworkSessionLeaveSession();
}
/**
 * Hash: 0xECE6A0C1B59CD8BE | ApiSet: undefined
 */
export function networkSessionLeftQueueOrRequestedSession() {
    return NetworkSessionLeftQueueOrRequestedSession();
}
/**
 * ```
 * Only used in R* Script net_rolling_playlist
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x8F9DB6CD03B42B58 | ApiSet: undefined
 */
export function networkSessionPlaylistGetUpcomingContent() {
    NetworkSessionPlaylistGetUpcomingContent();
}
/**
 * ```
 * Only used in R* Script net_rolling_playlist
 * ```
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xBDE605F925B07127 | ApiSet: undefined
 */
export function networkSessionPlaylistGoToNextContent() {
    NetworkSessionPlaylistGoToNextContent();
}
/**
 * ```
 * See _NETWORK_SESSION_ADD_SESSION_FLAGS
 * ```
 * Hash: 0x78335E12DB0BF961 | ApiSet: undefined
 */
export function networkSessionRemoveSessionFlags(flags) {
    return NetworkSessionRemoveSessionFlags(flags);
}
/**
 * Hash: 0x3215BBE34D3418C5 | ApiSet: undefined
 */
export function networkSessionRemovePlayerFlags(flags) {
    return NetworkSessionRemovePlayerFlags(flags);
}
/**
 * ```
 * matchType:
 * enum eMatchType
 * {
 * MATCHTYPE_DEPRECATED,
 * MATCHTYPE_UGCPLAYLIST,
 * MATCHTYPE_UGCMISSION,
 * MATCHTYPE_MINIGAME,
 * MATCHTYPE_SEAMLESS,
 * MATCHTYPE_PRIVATE_DO_NOT_USE
 * };
 * ```
 * Hash: 0x309BBEBEA8A3986C | ApiSet: undefined
 */
export function networkSessionRequestSessionCompetitive(flags, matchType, userHash, p3) {
    return NetworkSessionRequestSessionCompetitive(flags, matchType, userHash, p3);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x4F4672457FF597D1 | ApiSet: undefined
 */
export function networkSessionRequestSessionNominated(flags, userHash, p2) {
    return NetworkSessionRequestSessionNominated(flags, userHash, p2);
}
/**
 * ```
 * Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
 * Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
 * p1 is unused
 * ```
 * Hash: 0x2989E131FDE37E97 | ApiSet: undefined
 */
export function networkSessionRequestSessionSeamless(flags, seamlessType, userHash) {
    return NetworkSessionRequestSessionSeamless(flags, seamlessType, userHash);
}
/**
 * ```
 * Session flag 'SF_PRIVATE' is set internally
 * p1 represents max amount of players in private session
 * ```
 * Hash: 0x39A8EF7AF29A192C | ApiSet: undefined
 */
export function networkSessionRequestSessionPrivate(flags, numPlayers, userHash) {
    return NetworkSessionRequestSessionPrivate(flags, numPlayers, userHash);
}
/**
 * Hash: 0x0AE241A4A9ADEEEC | ApiSet: undefined
 */
export function networkSessionSetPlayerFlags(flags) {
    return NetworkSessionSetPlayerFlags(flags);
}
/**
 * ```
 * category:
 * enum eOnCallType
 * {
 * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
 * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
 * };
 * ```
 * Hash: 0x23D9C1F2E4098EDC | ApiSet: undefined
 */
export function networkSessionRequestSessionOnCall(flags, category, userHash) {
    return NetworkSessionRequestSessionOnCall(flags, category, userHash);
}
/**
 * Hash: 0xF20B18A330E6DB5C | ApiSet: undefined
 */
export function networkSessionTransitionToSession() {
    return NetworkSessionTransitionToSession();
}
/**
 * Hash: 0x2C5BD9A43987AA27 | ApiSet: undefined
 */
export function networkSetCompletedMpIntroFlowOnCurrentSlot(completed) {
    return NetworkSetCompletedMpIntroFlowOnCurrentSlot(completed);
}
/**
 * Hash: 0x9CA5DE655269FEC4 | ApiSet: undefined
 */
export function networkSetInMpCutscene(p0, p1, p2, p3) {
    NetworkSetInMpCutscene(p0, p1, p2, p3);
}
/**
 * Hash: 0x423DE3854BB50894 | ApiSet: undefined
 */
export function networkSetInSpectatorMode(toggle, playerPed) {
    const _playerPed = playerPed instanceof Ped ? playerPed.handle() : playerPed;
    NetworkSetInSpectatorMode(toggle, _playerPed);
}
/**
 * ```
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * pc or last gen?
 * ^^ last-gen
 * ```
 * Hash: 0xF1CA12B18AEF5298 | ApiSet: undefined
 */
export function networkSetEntityOnlyExistsForParticipants(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkSetEntityOnlyExistsForParticipants(_entity, toggle);
}
/**
 * Hash: 0x2D95C7E2D7E07307 | ApiSet: undefined
 */
export function networkSetLocalPlayerInvincibleTime(time) {
    NetworkSetLocalPlayerInvincibleTime(time);
}
/**
 * Hash: 0xD785864798258032 | ApiSet: undefined
 */
export function networkSetEntityRemainsWhenUnnetworked(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkSetEntityRemainsWhenUnnetworked(_entity, toggle);
}
/**
 * Hash: 0xF808475FA571D823 | ApiSet: undefined
 */
export function networkSetFriendlyFireOption(toggle) {
    NetworkSetFriendlyFireOption(toggle);
}
/**
 * Hash: 0xFBF1ECFB39A77B5F | ApiSet: undefined
 */
export function networkSetInStaticSpectatorMode(toggle, position) {
    NetworkSetInStaticSpectatorMode(toggle, position.x, position.y, position.z);
}
/**
 * Hash: 0x524FF0AEFF9C3973 | ApiSet: undefined
 */
export function networkSetLocalPlayerSyncLookAt(toggle) {
    NetworkSetLocalPlayerSyncLookAt(toggle);
}
/**
 * Hash: 0x007FF852DCF49DA4 | ApiSet: undefined
 */
export function networkSetLocalPlayerPendingFastInstanceId(instanceId) {
    NetworkSetLocalPlayerPendingFastInstanceId(instanceId);
}
/**
 * Hash: 0x3B3D11CD9FFCDFC9 | ApiSet: undefined
 */
export function networkSetMissionFinished() {
    NetworkSetMissionFinished();
}
/**
 * Hash: 0x9C25E8EC4C535FBD | ApiSet: undefined
 */
export function networkSetPlayerIsPassive(toggle) {
    NetworkSetPlayerIsPassive(toggle);
}
/**
 * Hash: 0x86FD10251A7118A4 | ApiSet: undefined
 */
export function networkSetMpMissionFlagOnCurrentSlot(enabled, flagIndex) {
    return NetworkSetMpMissionFlagOnCurrentSlot(enabled, flagIndex);
}
/**
 * Hash: 0x1DCCACDCFC569362 | ApiSet: undefined
 */
export function networkSetRichPresence(p0, p2, p3) {
    return NetworkSetRichPresence(p0, p2, p3);
}
/**
 * Hash: 0x7AC752103856FB20 | ApiSet: undefined
 */
export function networkSetScriptReadyForEvents(toggle) {
    NetworkSetScriptReadyForEvents(toggle);
}
/**
 * Hash: 0x29FE035D35B8589C | ApiSet: undefined
 */
export function networkSetRecentGamersEnabled(toggle) {
    NetworkSetRecentGamersEnabled(toggle);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0xDA4B1A479C414FB2 | ApiSet: undefined
 */
export function networkShouldShowPromotionDlg() {
    return NetworkShouldShowPromotionDlg();
}
/**
 * Hash: 0x1CA59E306ECB80A5 | ApiSet: undefined
 */
export function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants, p1, instanceId) {
    NetworkSetThisScriptIsNetworkScript(maxNumMissionParticipants, p1, instanceId);
}
/**
 * Hash: 0x83FE8D7229593017 | ApiSet: undefined
 */
export function networkShowAccountUpgradeUi() {
    NetworkShowAccountUpgradeUi();
}
/**
 * Hash: 0x859ED1CEA343FCA8 | ApiSet: undefined
 */
export function networkShowProfileUi() {
    return NetworkShowProfileUi();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x6BFF5F84102DF80A | ApiSet: undefined
 */
export function networkShowChatRestrictionMsc(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    NetworkShowChatRestrictionMsc(_player);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x5C497525F803486B | ApiSet: undefined
 */
export function networkShowPsnUgcRestriction() {
    NetworkShowPsnUgcRestriction();
}
/**
 * Hash: 0xEB6027FD1B4600D5 | ApiSet: undefined
 */
export function networkSpawnConfigAddPropertyPreference(configProperty, include, weight) {
    NetworkSpawnConfigAddPropertyPreference(configProperty, include, weight);
}
/**
 * Hash: 0xEEB7818B1D307212 | ApiSet: undefined
 */
export function networkSpawnConfigAddExclusionVolume(volume) {
    NetworkSpawnConfigAddExclusionVolume(volume);
}
/**
 * Hash: 0xFD1AC0B3858F224C | ApiSet: undefined
 */
export function networkSpawnConfigAddSpawnPoint(position, heading) {
    NetworkSpawnConfigAddSpawnPoint(position.x, position.y, position.z, heading);
}
/**
 * Hash: 0x44D59EC597BBF348 | ApiSet: undefined
 */
export function networkSpawnConfigAddPropertyScripted(configProperty, include) {
    NetworkSpawnConfigAddPropertyScripted(configProperty, include);
}
/**
 * Hash: 0xA35E7BF20FA269E0 | ApiSet: undefined
 */
export function networkSpawnConfigRemoveExclusionVolume(volume) {
    NetworkSpawnConfigRemoveExclusionVolume(volume);
}
/**
 * Hash: 0x89EC2FC89ECB1005 | ApiSet: undefined
 */
export function networkSpawnConfigSearchInProgress() {
    return NetworkSpawnConfigSearchInProgress();
}
/**
 * Hash: 0xF94A0D5B254375DF | ApiSet: undefined
 */
export function networkSpawnConfigSetFlags(flags) {
    NetworkSpawnConfigSetFlags(flags);
}
/**
 * Hash: 0x59577799F6AE2F34 | ApiSet: undefined
 */
export function networkSpawnConfigSetGroundToRootOffset(offset) {
    NetworkSpawnConfigSetGroundToRootOffset(offset);
}
/**
 * Hash: 0x765E60A1DCB8B1CE | ApiSet: undefined
 */
export function networkSpawnConfigSetCancelSearch() {
    NetworkSpawnConfigSetCancelSearch();
}
/**
 * Hash: 0xBDCC671B911040F9 | ApiSet: undefined
 */
export function networkSpawnConfigSetLevelWaterDepth(waterDepthLevel) {
    NetworkSpawnConfigSetLevelWaterDepth(waterDepthLevel);
}
/**
 * Hash: 0x17E0198B3882C2CB | ApiSet: undefined
 */
export function networkStartSoloTutorialSession() {
    NetworkStartSoloTutorialSession();
}
/**
 * ```
 * Always returns -1. Seems to be XB1 specific.
 * ```
 * Hash: 0xDEB2B99A1AF1A2A6 | ApiSet: undefined
 */
export function networkStartUserContentPermissionsCheck() {
    return NetworkStartUserContentPermissionsCheck();
}
/**
 * Hash: 0x0608326F7B98C08D | ApiSet: undefined
 */
export function networkSpawnConfigSetTuningFloat(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    NetworkSpawnConfigSetTuningFloat(p0, p1);
}
/**
 * Hash: 0xB2AD5D29A99D4B26 | ApiSet: undefined
 */
export function networkTryAccessTunableBoolHash(tunableContext, tunableName, defaultValue) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkTryAccessTunableBoolHash(tunableContext, tunableName, defaultValue);
}
/**
 * Hash: 0x0C8BC052AE87D744 | ApiSet: undefined
 */
export function networkTriggerDamageEventForZeroDamage(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    NetworkTriggerDamageEventForZeroDamage(_entity, p1);
}
/**
 * Hash: 0xA18393089C05E49C | ApiSet: undefined
 */
export function networkTryAccessTunableFloatHash(tunableContext, tunableName, defaultValue) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkTryAccessTunableFloatHash(tunableContext, tunableName, defaultValue);
}
/**
 * Hash: 0xA25E006B36719774 | ApiSet: undefined
 */
export function networkTryAccessTunableIntHash(tunableContext, tunableName, defaultValue) {
    if (typeof tunableContext === 'string')
        tunableContext = this.getHashKey(tunableContext);
    if (typeof tunableName === 'string')
        tunableName = this.getHashKey(tunableName);
    return NetworkTryAccessTunableIntHash(tunableContext, tunableName, defaultValue);
}
/**
 * ```
 * Returns the network ID of the given object.
 * ```
 * Hash: 0x99BFDC94A603E541 | ApiSet: undefined
 */
export function objToNet(object) {
    return ObjToNet(object);
}
/**
 * ```
 * Return the local Participant ID
 * ```
 * Hash: 0x90986E8876CE0A83 | ApiSet: undefined
 */
export function participantId() {
    return ParticipantId();
}
/**
 * ```
 * Return the local Participant ID.
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 * ```
 * Hash: 0x57A3BDDAD8E5AA0A | ApiSet: undefined
 */
export function participantIdToInt() {
    return ParticipantIdToInt();
}
/**
 * ```
 * Returns the network ID of the given ped.
 * ```
 * Hash: 0x0EDEC3C276198689 | ApiSet: undefined
 */
export function pedToNet(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedToNet(_ped);
}
/**
 * Hash: 0xCBAC13F065C47596 | ApiSet: undefined
 */
export function pedmugshotGetStatus() {
    return PedmugshotGetStatus();
}
/**
 * Hash: 0xCD954F330693F5F2 | ApiSet: undefined
 */
export function pedmugshotTake() {
    return PedmugshotTake();
}
/**
 * Hash: 0xFBC30B70B3CDB87E | ApiSet: undefined
 */
export function pedmugshotRequestSend() {
    return PedmugshotRequestSend();
}
/**
 * Hash: 0x7182EDDA1EE7DB5A | ApiSet: undefined
 */
export function preventNetworkIdMigration(netId) {
    PreventNetworkIdMigration(netId);
}
/**
 * Hash: 0x89D803CD48622150 | ApiSet: undefined
 */
export function preventMigrationOfEntitiesInFastInstanceForLocalPlayer(toggle) {
    PreventMigrationOfEntitiesInFastInstanceForLocalPlayer(toggle);
}
/**
 * Hash: 0x74F99EF7EF503398 | ApiSet: undefined
 */
export function propsetToNet(propSet) {
    return PropsetToNet(propSet);
}
/**
 * Hash: 0xA197C35F73AC0F12 | ApiSet: undefined
 */
export function reportPlayer(player, reportType, description, horseName) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ReportPlayer(_player, reportType, description, horseName);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x356F9FB0698C1FEB | ApiSet: undefined
 */
export function requestPedshotTextureLocalBackupDownload(player, personaPhotoLocalCacheType) {
    return RequestPedshotTextureLocalBackupDownload(player, personaPhotoLocalCacheType);
}
/**
 * Hash: 0xB5C4B18B12A2AF23 | ApiSet: undefined
 */
export function requestPedshotTextureMultiplayerDownload(p1) {
    return RequestPedshotTextureMultiplayerDownload(p1);
}
/**
 * ```
 * Only used in R* SP Script map_app_event_handler
 * ```
 * Hash: 0xCAF4CA2F87779F8F | ApiSet: undefined
 */
export function requestPedshotTextureLocalDownload(p1) {
    return RequestPedshotTextureLocalDownload(p1);
}
/**
 * Hash: 0x807E119F80231732 | ApiSet: undefined
 */
export function reserveNetworkClientMissionPeds(amount) {
    ReserveNetworkClientMissionPeds(amount);
}
/**
 * Hash: 0xE7DDA8BD3BCF751C | ApiSet: undefined
 */
export function reserveNetworkClientMissionObjects(amount) {
    ReserveNetworkClientMissionObjects(amount);
}
/**
 * Hash: 0x4E5C93BD0C32FBF8 | ApiSet: undefined
 */
export function reserveNetworkMissionObjects(amount) {
    ReserveNetworkMissionObjects(amount);
}
/**
 * Hash: 0xB60FEBA45333D36F | ApiSet: undefined
 */
export function reserveNetworkMissionPeds(amount) {
    ReserveNetworkMissionPeds(amount);
}
/**
 * Hash: 0x4D40E7D749BC6E6D | ApiSet: undefined
 */
export function reserveNetworkMissionPickups(amount) {
    ReserveNetworkMissionPickups(amount);
}
/**
 * Hash: 0x76B02E21ED27A469 | ApiSet: undefined
 */
export function reserveNetworkMissionVehicles(amount) {
    ReserveNetworkMissionVehicles(amount);
}
/**
 * Hash: 0x51D99497ABF3F451 | ApiSet: undefined
 */
export function setDoorNetworked(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    SetDoorNetworked(doorHash);
}
/**
 * Hash: 0xC1E1A3D5ED7617B8 | ApiSet: undefined
 */
export function setDoorUnnetworked(p0, toggle) {
    SetDoorUnnetworked(p0, toggle);
}
/**
 * Hash: 0xE0031D3C8F36AB82 | ApiSet: undefined
 */
export function setEntityVisibleInCutscene(entity, p1, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityVisibleInCutscene(_entity, p1, p2, p3);
}
/**
 * Hash: 0x5FFE9B4144F9712F | ApiSet: undefined
 */
export function setLocalPlayerAsGhost(toggle) {
    SetLocalPlayerAsGhost(toggle);
}
/**
 * Hash: 0xEE5AE9956743BA20 | ApiSet: undefined
 */
export function setEntityGhostedToLocalPlayer(entity, toggle) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetEntityGhostedToLocalPlayer(_entity, toggle);
}
/**
 * Hash: 0xDFFC15AA63D04AAB | ApiSet: undefined
 */
export function setLaunchParamString(params) {
    SetLaunchParamString(params);
}
/**
 * Hash: 0xD041A32992A55F84 | ApiSet: undefined
 */
export function setLocalPlayerDamageMultiplierForPlayer(player, damageMultiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetLocalPlayerDamageMultiplierForPlayer(_player, damageMultiplier);
}
/**
 * Hash: 0x668AF6E4933AC13F | ApiSet: undefined
 */
export function setLaunchParamValue(paramName, value) {
    SetLaunchParamValue(paramName, value);
}
/**
 * Hash: 0xE5F773C1A1D9D168 | ApiSet: undefined
 */
export function setLocalPlayerInvisibleLocally(p0) {
    SetLocalPlayerInvisibleLocally(p0);
}
/**
 * Hash: 0xD1065D68947E7B6E | ApiSet: undefined
 */
export function setLocalPlayerVisibleInCutscene(local, remote, instanceId) {
    SetLocalPlayerVisibleInCutscene(local, remote, instanceId);
}
/**
 * Hash: 0xE05E81A888FA63C8 | ApiSet: undefined
 */
export function setNetworkIdExistsOnAllMachines(netId, toggle) {
    SetNetworkIdExistsOnAllMachines(netId, toggle);
}
/**
 * Hash: 0xA8A024587329F36A | ApiSet: undefined
 */
export function setNetworkIdAlwaysExistsForPlayer(netId, player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetNetworkIdAlwaysExistsForPlayer(netId, _player, toggle);
}
/**
 * Hash: 0x9ED3108D6847760A | ApiSet: undefined
 */
export function setNetworkIdStopCloning(networkId, bStopCloning) {
    SetNetworkIdStopCloning(networkId, bStopCloning);
}
/**
 * Hash: 0xA6928482543022B4 | ApiSet: undefined
 */
export function setNetworkIdVisibleInCutscene(p0, p1, p2, p3) {
    SetNetworkIdVisibleInCutscene(p0, p1, p2, p3);
}
/**
 * Hash: 0x12B37D54667DB0B8 | ApiSet: undefined
 */
export function setPlayerInvisibleLocally(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerInvisibleLocally(_player, toggle);
}
/**
 * Hash: 0x442B4347B6EC36E8 | ApiSet: undefined
 */
export function setNetworkRespotTimer(entity, timer, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetNetworkRespotTimer(_entity, timer, p2);
}
/**
 * ```
 * _SET_PLAYER_V* - _SET_S*
 * ```
 * Hash: 0xDCA6ABDB9288FBE4 | ApiSet: undefined
 */
export function setPlayerVisibilityToLocalPlayerDisabled(player, disabled) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerVisibilityToLocalPlayerDisabled(_player, disabled);
}
/**
 * Hash: 0xFAA10F1FAFB11AF2 | ApiSet: undefined
 */
export function setPlayerVisibleLocally(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerVisibleLocally(_player, toggle);
}
/**
 * Hash: 0x777D0571A466B520 | ApiSet: undefined
 */
export function setSocialMatchmakingAllowed(toggle) {
    SetSocialMatchmakingAllowed(toggle);
}
/**
 * Hash: 0x3448505B6E35262D | ApiSet: undefined
 */
export function textureDownloadGetName(textureDownloadId) {
    return TextureDownloadGetName(textureDownloadId);
}
/**
 * Hash: 0x487EB90B98E9FB19 | ApiSet: undefined
 */
export function textureDownloadRelease(textureDownloadId) {
    TextureDownloadRelease(textureDownloadId);
}
/**
 * Hash: 0x7A17B7981560FFA5 | ApiSet: undefined
 */
export function textureDownloadReleaseByName(name) {
    TextureDownloadReleaseByName(name);
}
/**
 * Hash: 0xE2C3CEC3C0903A00 | ApiSet: undefined
 */
export function textureDownloadTextureNameIsValid(name) {
    return TextureDownloadTextureNameIsValid(name);
}
/**
 * Hash: 0x0B6009A90B8495F1 | ApiSet: undefined
 */
export function ugcDidRequestSucceed(ugcRequestId) {
    return UgcDidRequestSucceed(ugcRequestId);
}
/**
 * ```
 * Returns textureDownloadId
 * ```
 * Hash: 0x16160DA74A8E74A2 | ApiSet: undefined
 */
export function textureDownloadRequest(filePath, name, p3) {
    return TextureDownloadRequest(filePath, name, p3);
}
/**
 * Hash: 0x40F7E66472DF3E5C | ApiSet: undefined
 */
export function ugcGetCachedDescription(description, length) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcGetCachedDescription(description, length);
}
/**
 * Hash: 0xE931354FEA710038 | ApiSet: undefined
 */
export function ugcClearQueryResults(ugcRequestId) {
    UgcClearQueryResults(ugcRequestId);
}
/**
 * Hash: 0x162C23CA83ED0A62 | ApiSet: undefined
 */
export function ugcDidDescriptionRequestSucceed(description) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcDidDescriptionRequestSucceed(description);
}
/**
 * Hash: 0xEBFA8D50ADDC54C4 | ApiSet: undefined
 */
export function ugcHasDescriptionRequestFinished(description) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcHasDescriptionRequestFinished(description);
}
/**
 * ```
 * Checks if the user has ROS privilege 14.
 * ```
 * Hash: 0x6506BFA755FB209C | ApiSet: undefined
 */
export function ugcHasPrivilege() {
    return UgcHasPrivilege();
}
/**
 * Hash: 0xA9EB4D606076615D | ApiSet: undefined
 */
export function ugcHasRequestFinished(ugcRequestId) {
    return UgcHasRequestFinished(ugcRequestId);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xE42D1042F09865FE | ApiSet: undefined
 */
export function ugcIsBookMarked(contentId) {
    return UgcIsBookMarked(contentId);
}
/**
 * Hash: 0x2D5DC831176D0114 | ApiSet: undefined
 */
export function ugcIsDescriptionRequestInProgress(description) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcIsDescriptionRequestInProgress(description);
}
/**
 * Hash: 0xF53E48461B71EECB | ApiSet: undefined
 */
export function ugcIsLanguageSupported(languageId) {
    return UgcIsLanguageSupported(languageId);
}
/**
 * Hash: 0xF4AC4FA844FD559A | ApiSet: undefined
 */
export function ugcIsRequestPending(ugcRequestId) {
    return UgcIsRequestPending(ugcRequestId);
}
/**
 * ```
 * Returns ugcRequestId
 * ```
 * Hash: 0x8C109958C9BB559D | ApiSet: undefined
 */
export function ugcQueryByCategory(categoryType, p1, maxGet, contentTypeName, p4, p5) {
    return UgcQueryByCategory(categoryType, p1, maxGet, contentTypeName, p4, p5);
}
/**
 * ```
 * Returns ugcRequestId
 * ```
 * Hash: 0x69D22E183580113F | ApiSet: undefined
 */
export function ugcQueryByContentId(contentId, latestVersion, contentTypeName) {
    return UgcQueryByContentId(contentId, latestVersion, contentTypeName);
}
/**
 * ```
 * Returns ugcRequestId
 * ```
 * Hash: 0xF40EF49B3099E98E | ApiSet: undefined
 */
export function ugcQueryByContentType(p0, maxGet, contentTypeName, p3, p4, p5) {
    return UgcQueryByContentType(p0, maxGet, contentTypeName, p3, p4, p5);
}
/**
 * Hash: 0x98539FC453AEA639 | ApiSet: undefined
 */
export function ugcQueryGetBookMarked(p0, index) {
    return UgcQueryGetBookMarked(p0, index);
}
/**
 * Hash: 0xF794765390A6DCA5 | ApiSet: undefined
 */
export function ugcQueryGetContentHasPlayerRecord(p0, index) {
    return UgcQueryGetContentHasPlayerRecord(p0, index);
}
/**
 * Hash: 0x76160E0396142765 | ApiSet: undefined
 */
export function ugcQueryGetContentNum(ugcRequestId) {
    return UgcQueryGetContentNum(ugcRequestId);
}
/**
 * Hash: 0xADB56322EEDFBDC9 | ApiSet: undefined
 */
export function ugcQueryGetCreatorHandle(p0, index) {
    return UgcQueryGetCreatorHandle(p0, index);
}
/**
 * ```
 * Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
 * ```
 * Hash: 0x409FE0CA6A4D1D49 | ApiSet: undefined
 */
export function ugcQueryGetCreatorPhoto(p0, p1, p2) {
    return UgcQueryGetCreatorPhoto(p0, p1, p2);
}
/**
 * Hash: 0x97764E8AC6487A9A | ApiSet: undefined
 */
export function ugcQueryGetLanguage(p0, index) {
    return UgcQueryGetLanguage(p0, index);
}
/**
 * Hash: 0xE0CB4AB15CB32710 | ApiSet: undefined
 */
export function ugcQueryGetDate(p0, index) {
    return UgcQueryGetDate(p0, index);
}
/**
 * Hash: 0xA6BF569956C60A60 | ApiSet: undefined
 */
export function ugcQueryGetMissionDescHash(p0, index) {
    return UgcQueryGetMissionDescHash(p0, index);
}
/**
 * Hash: 0x2D053EA815702DD1 | ApiSet: undefined
 */
export function ugcQueryGetName(p0, index) {
    return UgcQueryGetName(p0, index);
}
/**
 * Hash: 0xF9F0B3028431967B | ApiSet: undefined
 */
export function ugcQueryGetOwnerId(p0, index) {
    return UgcQueryGetOwnerId(p0, index);
}
/**
 * Hash: 0xCAF50048C8D0FBA0 | ApiSet: undefined
 */
export function ugcQueryGetPlaylistName(p0, index) {
    return UgcQueryGetPlaylistName(p0, index);
}
/**
 * Hash: 0x104080CA9E519B00 | ApiSet: undefined
 */
export function ugcQueryGetPosixPublishedDate(p0, p1) {
    return UgcQueryGetPosixPublishedDate(p0, p1);
}
/**
 * Hash: 0x21A99A72B00D8002 | ApiSet: undefined
 */
export function ugcQueryGetPosixUpdatedDate(p0, p1) {
    return UgcQueryGetPosixUpdatedDate(p0, p1);
}
/**
 * Hash: 0x9993F1E11944A3DD | ApiSet: undefined
 */
export function ugcQueryGetPublished(p0, p1) {
    return UgcQueryGetPublished(p0, p1);
}
/**
 * Hash: 0x24CD8FAEA1368379 | ApiSet: undefined
 */
export function ugcQueryGetRating(p0, index, p2) {
    return UgcQueryGetRating(p0, index, p2);
}
/**
 * Hash: 0x566CEB0542EF5ECF | ApiSet: undefined
 */
export function ugcQueryGetRootContentId(p0, index) {
    return UgcQueryGetRootContentId(p0, index);
}
/**
 * Hash: 0x63E9DCBC8B0931ED | ApiSet: undefined
 */
export function ugcQueryGetVersion(p0, index, p2) {
    return UgcQueryGetVersion(p0, index, p2);
}
/**
 * Hash: 0x68103E2247887242 | ApiSet: undefined
 */
export function ugcReleaseAllCachedDescriptions() {
    UgcReleaseAllCachedDescriptions();
}
/**
 * Hash: 0x5A34CD9C3C5BEC44 | ApiSet: undefined
 */
export function ugcReleaseCachedDescription(description) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcReleaseCachedDescription(description);
}
/**
 * Hash: 0xF8F0705E77A0E705 | ApiSet: undefined
 */
export function ugcQueryWasForceCancelled(ugcRequestId) {
    return UgcQueryWasForceCancelled(ugcRequestId);
}
/**
 * Hash: 0x5E0165278F6339EE | ApiSet: undefined
 */
export function ugcRequestCachedDescription(description) {
    if (typeof description === 'string')
        description = this.getHashKey(description);
    return UgcRequestCachedDescription(description);
}
/**
 * Hash: 0x7FD2990AF016795E | ApiSet: undefined
 */
export function ugcRequestContentDataFromParams(contentTypeName, contentId, fileId, fileVersion, languageId) {
    return UgcRequestContentDataFromParams(contentTypeName, contentId, fileId, fileVersion, languageId);
}
/**
 * Hash: 0x308F96458B7087CC | ApiSet: undefined
 */
export function ugcTextureDownloadRequest(p1, p2, p3, p5) {
    return UgcTextureDownloadRequest(p1, p2, p3, p5);
}
/**
 * ```
 * Returns the network ID of the given vehicle.
 * ```
 * Hash: 0xB4C94523F023419C | ApiSet: undefined
 */
export function vehToNet(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return VehToNet(_vehicle);
}
/**
 * Hash: 0xF98DDE0A8ED09323 | ApiSet: undefined
 */
export function ugcSetQueryDataFromOffline(p0) {
    UgcSetQueryDataFromOffline(p0);
}
/**
 * Hash: 0x134549B388167CBF | ApiSet: undefined
 */
export function absf(value) {
    return Absf(value);
}
/**
 * Hash: 0x586690F0176DC575 | ApiSet: undefined
 */
export function acos(p0) {
    return Acos(p0);
}
/**
 * Hash: 0x0C214D5B8A38C828 | ApiSet: undefined
 */
export function absi(value) {
    return Absi(value);
}
/**
 * ```
 * Appears to remove stealth kill action from memory (?)
 * ```
 * Hash: 0x7ACF124C12A2B045 | ApiSet: undefined
 */
export function actionManagerEnableAction(hash, enable) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    ActionManagerEnableAction(hash, enable);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x91D657230BC208D2 | ApiSet: undefined
 */
export function activityFeedActionStartWithCommandLine(p0, p1) {
    ActivityFeedActionStartWithCommandLine(p0, p1);
}
/**
 * Hash: 0xFD0759658268FD8E | ApiSet: undefined
 */
export function actionManagerIsActionEnabled(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return ActionManagerIsActionEnabled(hash);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x1694A053DFB61A34 | ApiSet: undefined
 */
export function activityFeedActionStartWithCommandLineAdd(p0) {
    ActivityFeedActionStartWithCommandLineAdd(p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x9935F76407C32539 | ApiSet: undefined
 */
export function activityFeedAddSubstringToCaption(p0) {
    ActivityFeedAddSubstringToCaption(p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xB16FC7B364D86585 | ApiSet: undefined
 */
export function activityFeedPost() {
    ActivityFeedPost();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xCC7FC854B956A128 | ApiSet: undefined
 */
export function activityFeedCreate(p0, p1) {
    ActivityFeedCreate(p0, p1);
}
/**
 * Hash: 0xA2D5A26208421426 | ApiSet: undefined
 */
export function addDispatchSpawnBlockingArea(volume) {
    return AddDispatchSpawnBlockingArea(volume);
}
/**
 * Hash: 0x5EBDA1A3B8CB5EF7 | ApiSet: undefined
 */
export function addPopMultiplierArea(x1, y1, z1, x2, y2, z2, pedDensity, trafficDensity, p8, p9) {
    return AddPopMultiplierArea(x1, y1, z1, x2, y2, z2, pedDensity, trafficDensity, p8, p9);
}
/**
 * ```
 * Params: p3 is 0 in R* Script utopia2
 * ```
 * Hash: 0xE4EE55E63FA9AF45 | ApiSet: undefined
 */
export function addTacticalNavMeshPoint(position, p3) {
    AddTacticalNavMeshPoint(position.x, position.y, position.z, p3);
}
/**
 * ```
 * Only used in script function PROCESS_ZONE_CREATION
 * Returns Pop multiplier volume ID
 * ```
 * Hash: 0x3233C4EC0514C7EC | ApiSet: undefined
 */
export function addPopMultiplierVolume(volume, pedDensity, vehicleDensity, p3, p4) {
    return AddPopMultiplierVolume(volume, pedDensity, vehicleDensity, p3, p4);
}
/**
 * Hash: 0xD3852F22AB713A1F | ApiSet: undefined
 */
export function areStringsEqual(string1, string2) {
    return AreStringsEqual(string1, string2);
}
/**
 * Hash: 0x6E3C15D296C15583 | ApiSet: undefined
 */
export function asin(p0) {
    return Asin(p0);
}
/**
 * Hash: 0x965B220A066E3F07 | ApiSet: undefined
 */
export function atan2(p0, p1) {
    return Atan2(p0, p1);
}
/**
 * Hash: 0x503054DED0B78027 | ApiSet: undefined
 */
export function atan(p0) {
    return Atan(p0);
}
/**
 * ```
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 * ```
 * Hash: 0x66947E61A44DE2C6 | ApiSet: undefined
 */
export function blockDispatchServiceResourceCreation(dispatchService, toggle) {
    BlockDispatchServiceResourceCreation(dispatchService, toggle);
}
/**
 * Hash: 0x58A39BE597CE99CD | ApiSet: undefined
 */
export function cancelOnscreenKeyboard() {
    CancelOnscreenKeyboard();
}
/**
 * Hash: 0xD2D74F89DF844A50 | ApiSet: undefined
 */
export function clearAllBitFlags() {
    return ClearAllBitFlags();
}
/**
 * ```
 * flag |= 1 | 1048576 | 524288
 * ALL_BASE, PROJECTILES, AMBIENT_POPULATION, BROADCAST
 * ```
 * Hash: 0x3B882A96EA77D5B1 | ApiSet: undefined
 */
export function clearArea(position, radius, flag) {
    ClearArea(position.x, position.y, position.z, radius, flag);
}
/**
 * Hash: 0xA4D83115C1E02F8A | ApiSet: undefined
 */
export function clearAngledAreaOfVehicles(p0, p1, p2, p3, p4, p5, p6, p7) {
    ClearAngledAreaOfVehicles(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xB909149F2BB5F6DA | ApiSet: undefined
 */
export function clearBitFlag(flag) {
    return ClearBitFlag(flag);
}
/**
 * Hash: 0x7D1D4A3602B6AD4E | ApiSet: undefined
 */
export function clearBit(offset) {
    return ClearBit(offset);
}
/**
 * Hash: 0xD85DFE5C131E4AE9 | ApiSet: undefined
 */
export function clearWeatherTypePersist() {
    ClearWeatherTypePersist();
}
/**
 * Hash: 0x80A398F16FFE3CC3 | ApiSet: undefined
 */
export function clearOverrideWeather() {
    ClearOverrideWeather();
}
/**
 * Hash: 0xD93B6516C6878267 | ApiSet: undefined
 */
export function clearTacticalNavMeshPoints() {
    ClearTacticalNavMeshPoints();
}
/**
 * Hash: 0x2FCD528A397E5C88 | ApiSet: undefined
 */
export function clearVolumeArea(volume, flag) {
    ClearVolumeArea(volume, flag);
}
/**
 * Hash: 0x0E71C80FA4EC8147 | ApiSet: undefined
 */
export function clearWeatherVariation(weatherType, p1) {
    ClearWeatherVariation(weatherType, p1);
}
/**
 * Hash: 0xCE7690C0A0D1C36D | ApiSet: undefined
 */
export function clearWeatherTypePersistOvertime(milliseconds) {
    ClearWeatherTypePersistOvertime(milliseconds);
}
/**
 * Hash: 0xF7AC7DC0DEE7C9BE | ApiSet: undefined
 */
export function copyScriptStruct(size) {
    return CopyScriptStruct(size);
}
/**
 * Hash: 0xBFBB74A15EFC149B | ApiSet: undefined
 */
export function compareStrings(str1, str2, matchCase, maxLength) {
    return CompareStrings(str1, str2, matchCase, maxLength);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xE704838F36F93B7B | ApiSet: undefined
 */
export function countBitFlags() {
    return CountBitFlags();
}
/**
 * ```
 * Returns a formatted string (0x%x)
 * ```
 * Hash: 0xBCC2CFADEA1AEA6C | ApiSet: undefined
 */
export function createColorString(rgb) {
    return CreateColorString(rgb);
}
/**
 * ```
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 * The entities must be added to itemSet.
 * ```
 * Hash: 0xAB3D3F45436DB1D8 | ApiSet: undefined
 */
export function createIncidentWithEntities(dispatchService, position, itemSet, radius) {
    return CreateIncidentWithEntities(dispatchService, position.x, position.y, position.z, itemSet, radius);
}
/**
 * ```
 * aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
 * ```
 * Hash: 0x88BC5F4AEF77FC4E | ApiSet: undefined
 */
export function createAiMemory(aiMemoryType) {
    return CreateAiMemory(aiMemoryType);
}
/**
 * ```
 * Delete an incident with a given id.
 * ```
 * Hash: 0x5CFD0F0D6AAE0AEE | ApiSet: undefined
 */
export function deleteIncident(incidentId) {
    DeleteIncident(incidentId);
}
/**
 * ```
 * enum eOnscreenKeyboardTextType
 * {
 * KTEXTTYPE_INVALID = -1,
 * KTEXTTYPE_DEFAULT,
 * KTEXTTYPE_EMAIL,
 * KTEXTTYPE_PASSWORD,
 * KTEXTTYPE_NUMERIC,
 * KTEXTTYPE_ALPHABET,
 * KTEXTTYPE_GAMERTAG,
 * KTEXTTYPE_FILENAME,
 * KTEXTTYPE_COUNT
 * };
 * ```
 * Hash: 0x044131118D8DB3CD | ApiSet: undefined
 */
export function displayOnscreenKeyboard(textType, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength) {
    DisplayOnscreenKeyboard(textType, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength);
}
/**
 * ```
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 * ```
 * Hash: 0x3F892CAF67444AE7 | ApiSet: undefined
 */
export function createIncident(dispatchService, position, numUnits, radius, p7, p8) {
    return CreateIncident(dispatchService, position.x, position.y, position.z, numUnits, radius, p7, p8);
}
/**
 * Hash: 0x40D72189F46D2E15 | ApiSet: undefined
 */
export function disableLootingCompositeLootableThisFrame(compositeId, p1) {
    DisableLootingCompositeLootableThisFrame(compositeId, p1);
}
/**
 * Hash: 0x03BA619C81A646B3 | ApiSet: undefined
 */
export function doesPopMultiplierAreaExist(id) {
    return DoesPopMultiplierAreaExist(id);
}
/**
 * Hash: 0x39D6DACE323A20B6 | ApiSet: undefined
 */
export function doesPopMultiplierAreaExistForVolume(volume) {
    return DoesPopMultiplierAreaExistForVolume(volume);
}
/**
 * Hash: 0xBDC6E364C9C78178 | ApiSet: undefined
 */
export function doesItemHaveValidBase(item) {
    return DoesItemHaveValidBase(item);
}
/**
 * ```
 * enum DispatchType
 * {
 * DT_Invalid,
 * DT_PoliceAutomobile,
 * DT_PoliceHelicopter,
 * DT_FireDepartment,
 * DT_SwatAutomobile,
 * DT_AmbulanceDepartment,
 * DT_PoliceRiders,
 * DT_PoliceVehicleRequest,
 * DT_PoliceRoadBlock,
 * DT_PoliceAutomobileWaitPulledOver,
 * DT_PoliceAutomobileWaitCruising,
 * DT_Gangs,
 * DT_SwatHelicopter,
 * DT_PoliceBoat,
 * DT_ArmyVehicle,
 * DT_OnFoot,
 * DT_PoliceDogs
 * };
 * ```
 * Hash: 0x50E52637EF70EF77 | ApiSet: undefined
 */
export function enableDispatchService(dispatchService, toggle) {
    EnableDispatchService(dispatchService, toggle);
}
/**
 * Hash: 0x9382D5D43D2AA6FF | ApiSet: undefined
 */
export function doesStringExistInString(string1, string2) {
    return DoesStringExistInString(string1, string2);
}
/**
 * Hash: 0xCBC9A21F6A2A679C | ApiSet: undefined
 */
export function fireSingleBullet() {
    return FireSingleBullet();
}
/**
 * ```
 * p3 is always -1.0f in the scripts
 * ```
 * Hash: 0x67943537D179597C | ApiSet: undefined
 */
export function forceLightningFlashAtCoords(position, p3) {
    ForceLightningFlashAtCoords(position.x, position.y, position.z, p3);
}
/**
 * ```
 * creates single lightning+thunder at random position
 * ```
 * Hash: 0x369DB5B2510FA080 | ApiSet: undefined
 */
export function forceLightningFlash() {
    ForceLightningFlash();
}
/**
 * Hash: 0xFAED234C7F53ABEB | ApiSet: undefined
 */
export function gameFrameworkManagerGetMode() {
    return GameFrameworkManagerGetMode();
}
/**
 * Hash: 0x4CABE596D632E4B0 | ApiSet: undefined
 */
export function gameFrameworkManagerInit(transitionMode) {
    if (typeof transitionMode === 'string')
        transitionMode = this.getHashKey(transitionMode);
    return GameFrameworkManagerInit(transitionMode);
}
/**
 * Hash: 0xAFF2FD8ADD927585 | ApiSet: undefined
 */
export function gameFrameworkManagerShutdown() {
    GameFrameworkManagerShutdown();
}
/**
 * Hash: 0xFDF38E2B711BF78E | ApiSet: undefined
 */
export function getAiPedDoesHaveEventMemory(p1) {
    return GetAiPedDoesHaveEventMemory(p1);
}
/**
 * Hash: 0xD0DFE1C486097BBB | ApiSet: undefined
 */
export function getAngleBetween2dVectors(x1, y1, x2, y2) {
    return GetAngleBetween2dVectors(x1, y1, x2, y2);
}
/**
 * ```
 * Returns value of the '-benchmarkIterations' command line option.
 * ```
 * Hash: 0x22FC52CF470CC98D | ApiSet: undefined
 */
export function getBenchmarkIterations() {
    return GetBenchmarkIterations();
}
/**
 * Hash: 0x68E1352AF48F905D | ApiSet: undefined
 */
export function getBitsInRange(_var, rangeStart, rangeEnd) {
    return GetBitsInRange(_var, rangeStart, rangeEnd);
}
/**
 * ```
 * Params: percentWeather2: 0f - 0.75f in R* Scripts
 * ```
 * Hash: 0x0AC679B2342F14F2 | ApiSet: undefined
 */
export function getCurrWeatherState() {
    return GetCurrWeatherState();
}
/**
 * ```
 * Returns value of the '-benchmarkPass' command line option.
 * ```
 * Hash: 0x9297DACF3A2CDFF7 | ApiSet: undefined
 */
export function getBenchmarkPass() {
    return GetBenchmarkPass();
}
/**
 * ```
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 * `Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.`
 * ```
 * Hash: 0x0BE7F4E3CDBAFB28 | ApiSet: undefined
 */
export function getDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ) {
    return GetDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ);
}
/**
 * Hash: 0x83ACC65D9ACEC5EF | ApiSet: undefined
 */
export function getClosestPointOnLine(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    return new Vector3(GetClosestPointOnLine(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9));
}
/**
 * ```
 * Returns the weather type that has been set by a script
 * ```
 * Hash: 0xDD560ABEF5D3784C | ApiSet: undefined
 */
export function getForcedWeather() {
    return GetForcedWeather();
}
/**
 * Hash: 0xD73C960A681052DF | ApiSet: undefined
 */
export function getCoordsOfProjectileTypeWithinDistance(ped, weaponHash, distance, p4, mustBeOwnedByThisPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    const result = GetCoordsOfProjectileTypeWithinDistance(_ped, weaponHash, distance, p4, mustBeOwnedByThisPed);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0x5E72022914CE3C38 | ApiSet: undefined
 */
export function getFrameTime() {
    return GetFrameTime();
}
/**
 * ```
 * https://easings.net/
 * enum class eEasingCurveType
 * {
 * TYPE_LINEAR,
 * TYPE_QUADRATIC_IN,
 * TYPE_QUADRATIC_OUT,
 * TYPE_QUADRATIC_INOUT,
 * TYPE_CUBIC_IN,
 * TYPE_CUBIC_OUT,
 * TYPE_CUBIC_INOUT,
 * TYPE_QUARTIC_IN,
 * TYPE_QUARTIC_OUT,
 * TYPE_QUARTIC_INOUT,
 * TYPE_QUINTIC_IN,
 * TYPE_QUINTIC_OUT,
 * TYPE_QUINTIC_INOUT,
 * TYPE_EXPONENTIAL_IN,
 * TYPE_EXPONENTIAL_OUT,
 * TYPE_EXPONENTIAL_INOUT,
 * TYPE_SINE_IN,
 * TYPE_SINE_OUT,
 * TYPE_SINE_INOUT,
 * TYPE_CIRCULAR_IN,
 * TYPE_CIRCULAR_OUT,
 * TYPE_CIRCULAR_INOUT,
 * TYPE_BOUNCE_IN,
 * TYPE_BOUNCE_OUT,
 * TYPE_BOUNCE_INOUT,
 * TYPE_CUSTOM
 * };
 * ```
 * Hash: 0xEF50E344A8F93784 | ApiSet: undefined
 */
export function getEasingCurveValue(t, b, d, easingCurveType) {
    return GetEasingCurveValue(t, b, d, easingCurveType);
}
/**
 * Hash: 0x4F67E8ECA7D3F667 | ApiSet: undefined
 */
export function getGameTimer() {
    return GetGameTimer();
}
/**
 * Hash: 0xEE04C0AFD4EFAF0E | ApiSet: undefined
 */
export function getEntityFromItem(item) {
    return GetEntityFromItem(item);
}
/**
 * Hash: 0x2A29CA9A6319E6AB | ApiSet: undefined
 */
export function getGroundZAndNormalFor3dCoord(position) {
    const result = GetGroundZAndNormalFor3dCoord(position.x, position.y, position.z);
    return [result[0], result[1], new Vector3(result[2], result[3], result[4])];
}
/**
 * Hash: 0x77DFA958FCF100C1 | ApiSet: undefined
 */
export function getFrameCount() {
    return GetFrameCount();
}
/**
 * ```
 * dx = x1 - x2
 * dy = y1 - y2
 * ```
 * Hash: 0x38D5202FF9271C62 | ApiSet: undefined
 */
export function getHeadingFromVector2d(dx, dy) {
    return GetHeadingFromVector2d(dx, dy);
}
/**
 * ```
 * `Returns rage::fwTimer::sm_nonScaledClippedTime`
 * ```
 * Hash: 0x483B8C542103AD72 | ApiSet: undefined
 */
export function getGameTimerNonScaledClipped() {
    return GetGameTimerNonScaledClipped();
}
/**
 * Hash: 0x24FA4267BB8D2431 | ApiSet: undefined
 */
export function getGroundZFor3dCoord(position, p4) {
    return GetGroundZFor3dCoord(position.x, position.y, position.z, p4);
}
/**
 * ```
 * Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
 * Note: this implementation is case-insensitive.
 * ```
 * Hash: 0xFD340785ADF8CFB7 | ApiSet: undefined
 */
export function getHashKey(string) {
    return GetHashKey(string);
}
/**
 * ```
 * 0 = invalid
 * 1 = CEntity
 * `2 = rage::volBase`
 * `3 = rage::volSphere`
 * `4 = rage::volBox`
 * `5 = rage::volAggregate`
 * `6 = rage::volCylinder`
 * 7 = CScriptedCoverPoint
 * `8 = rage::ptfxScriptInfo`
 * 9 = CPed
 * 10 = CVehicle
 * 11 = CObject
 * 12 = CItemSet
 * 13 = CPersistentCharacter
 * ```
 * Hash: 0xDC8D2FF478DF9553 | ApiSet: undefined
 */
export function getItemType(handle) {
    return GetItemType(handle);
}
/**
 * Hash: 0xAB6A04CEC428258B | ApiSet: undefined
 */
export function getLinePlaneIntersection(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
    return GetLinePlaneIntersection(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
}
/**
 * ```
 * Event names in the scripts: MGBegin, MGEnd, ReadyForCut
 * ```
 * Hash: 0xF9B91C5129EABC08 | ApiSet: undefined
 */
export function getLootingEventHasFired(ped, eventName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLootingEventHasFired(_ped, eventName);
}
/**
 * Hash: 0xC43CD2668B204419 | ApiSet: undefined
 */
export function getMaxNumInstructions() {
    return GetMaxNumInstructions();
}
/**
 * Hash: 0xB15CD1CF58771DE1 | ApiSet: undefined
 */
export function getMissionFlag() {
    return GetMissionFlag();
}
/**
 * Hash: 0x40DC2907A9697EF7 | ApiSet: undefined
 */
export function getNumberOfFreeStacksOfThisSize(stackSize) {
    return GetNumberOfFreeStacksOfThisSize(stackSize);
}
/**
 * Hash: 0xB0CE5E5ED8BB3581 | ApiSet: undefined
 */
export function getNumberOfMicrosecondsSinceLastCall() {
    return GetNumberOfMicrosecondsSinceLastCall();
}
/**
 * Hash: 0xDCB8DDD5D054A7E7 | ApiSet: undefined
 */
export function getModelDimensions(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    const result = GetModelDimensions(modelHash);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4])];
}
/**
 * ```
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 * ```
 * Hash: 0xAFB4CF58A4A292B1 | ApiSet: undefined
 */
export function getOnscreenKeyboardResult() {
    return GetOnscreenKeyboardResult();
}
/**
 * Hash: 0x51021D36F62AAA83 | ApiSet: undefined
 */
export function getNextWeatherTypeHashName() {
    return GetNextWeatherTypeHashName();
}
/**
 * Hash: 0x72904D3D62AF5839 | ApiSet: undefined
 */
export function getNumberOfInstructions() {
    return GetNumberOfInstructions();
}
/**
 * Hash: 0x18013392501CE5DC | ApiSet: undefined
 */
export function getObjectFromIndexedItem(item) {
    return GetObjectFromIndexedItem(item);
}
/**
 * Hash: 0x4BEB42AEBCA732E9 | ApiSet: undefined
 */
export function getPrevWeatherTypeHashName() {
    return GetPrevWeatherTypeHashName();
}
/**
 * Hash: 0x3FFB15534067DCD4 | ApiSet: undefined
 */
export function getPedFromIndexedItem(item) {
    return GetPedFromIndexedItem(item);
}
/**
 * Hash: 0x931B5F4CC130224B | ApiSet: undefined
 */
export function getRainLevel() {
    return GetRainLevel();
}
/**
 * Hash: 0x9578986A6105A6AD | ApiSet: undefined
 */
export function getProjectileOfProjectileTypeWithinDistance(ped, weaponHash, distance, p5, mustBeOwnedByThisPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    const result = GetProjectileOfProjectileTypeWithinDistance(_ped, weaponHash, distance, p5, mustBeOwnedByThisPed);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0xE29F927A961F8AAA | ApiSet: undefined
 */
export function getRandomFloatInRange(startRange, endRange) {
    return GetRandomFloatInRange(startRange, endRange);
}
/**
 * Hash: 0x924D54E5698AE3E0 | ApiSet: undefined
 */
export function getRandomEventFlag() {
    return GetRandomEventFlag();
}
/**
 * Hash: 0xD53343AA4FB7DD28 | ApiSet: undefined
 */
export function getRandomIntInRange(startRange, endRange) {
    return GetRandomIntInRange(startRange, endRange);
}
/**
 * Hash: 0x1359C181BC625503 | ApiSet: undefined
 */
export function getRandomWeatherType() {
    return GetRandomWeatherType();
}
/**
 * Hash: 0x7F4CE164D9A11DFE | ApiSet: undefined
 */
export function getRandomWeatherTypeIndex() {
    return GetRandomWeatherTypeIndex();
}
/**
 * ```
 * Returns GET_GAME_TIMER() / 1000
 * Only used in rcm_pearson1.ysc
 * ```
 * Hash: 0x2E036F0480B8BF02 | ApiSet: undefined
 */
export function getRealWorldTime() {
    return GetRealWorldTime();
}
/**
 * Hash: 0x63219768C586667C | ApiSet: undefined
 */
export function getScriptTimeWithinFrameInMicroseconds() {
    return GetScriptTimeWithinFrameInMicroseconds();
}
/**
 * ```
 * Only 0 and 1 are valid for p0, higher values causes the native to return 2.
 * ```
 * Hash: 0x1B065A2BF7953815 | ApiSet: undefined
 */
export function getStatusOfSavegameOperation(p0) {
    return GetStatusOfSavegameOperation(p0);
}
/**
 * Hash: 0x1E5D727041BE1709 | ApiSet: undefined
 */
export function getSnowLevel() {
    return GetSnowLevel();
}
/**
 * Hash: 0x6C4DBF553885F9EB | ApiSet: undefined
 */
export function getStringFromVector(position) {
    return GetStringFromVector(position.x, position.y, position.z);
}
/**
 * Hash: 0xF216F74101968DB0 | ApiSet: undefined
 */
export function getStringFromBool(value) {
    return GetStringFromBool(value);
}
/**
 * Hash: 0x2B6846401D68E563 | ApiSet: undefined
 */
export function getStringFromFloat(value, digits) {
    return GetStringFromFloat(value, digits);
}
/**
 * Hash: 0xBE7F225417E35A7C | ApiSet: undefined
 */
export function getSystemTime() {
    return GetSystemTime();
}
/**
 * Hash: 0x3F3172FEAE3AFE1C | ApiSet: undefined
 */
export function getSystemTimeStep() {
    return GetSystemTimeStep();
}
/**
 * Hash: 0xB98B78C3768AF6E0 | ApiSet: undefined
 */
export function getTemperatureAtCoords(position) {
    return GetTemperatureAtCoords(position.x, position.y, position.z);
}
/**
 * Hash: 0xF18AF483DF70BBDE | ApiSet: undefined
 */
export function getVolumeFromIndexedItem(item) {
    return GetVolumeFromIndexedItem(item);
}
/**
 * Hash: 0xE578C8AE173719B3 | ApiSet: undefined
 */
export function getVehicleFromIndexedItem(item) {
    return GetVehicleFromIndexedItem(item);
}
/**
 * Hash: 0xF703E82F3FE14A5F | ApiSet: undefined
 */
export function getWindDirection() {
    return new Vector3(GetWindDirection());
}
/**
 * Hash: 0xFFB7E74E041150A4 | ApiSet: undefined
 */
export function getWindSpeed() {
    return GetWindSpeed();
}
/**
 * ```
 * p3 - possibly radius?
 * ```
 * Hash: 0xC153E5BCCF411814 | ApiSet: undefined
 */
export function hasBulletImpactedInArea(position, p3, p4, p5) {
    return HasBulletImpactedInArea(position.x, position.y, position.z, p3, p4, p5);
}
/**
 * Hash: 0x3B6A4C05FB2B33AC | ApiSet: undefined
 */
export function hasBulletImpactedInBox(p0, p1, p2, p3, p4, p5, p6, p7) {
    return HasBulletImpactedInBox(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x708DF841B8F27AA2 | ApiSet: undefined
 */
export function informCodeOfContentIdOfCurrentUgcMission(p0) {
    InformCodeOfContentIdOfCurrentUgcMission(p0);
}
/**
 * Hash: 0x6C9FF40FF1B69F8F | ApiSet: undefined
 */
export function ignoreNextRestart(toggle) {
    IgnoreNextRestart(toggle);
}
/**
 * ```
 * Note: the buffer should be exactly 32 bytes long
 * ```
 * Hash: 0xCF11C0CEB40C401B | ApiSet: undefined
 */
export function intToString(value, format, buffer) {
    IntToString(value, format, buffer);
}
/**
 * Hash: 0x80E9C316EF84DD81 | ApiSet: undefined
 */
export function isAnyBitFlagSet() {
    return IsAnyBitFlagSet();
}
/**
 * Hash: 0xFEC1D4B5C82C176F | ApiSet: undefined
 */
export function isBaseACoverPoint(handle) {
    return IsBaseACoverPoint(handle);
}
/**
 * Hash: 0x716F17F8A0419F95 | ApiSet: undefined
 */
export function isBaseAPersistentCharacter(handle) {
    return IsBaseAPersistentCharacter(handle);
}
/**
 * Hash: 0x8F4F050054005C27 | ApiSet: undefined
 */
export function isBitFlagSet(flag) {
    return IsBitFlagSet(flag);
}
/**
 * Hash: 0x9D09D8493747CF02 | ApiSet: undefined
 */
export function isBulletInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7) {
    return IsBulletInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xC652FD308772D79E | ApiSet: undefined
 */
export function isBulletInArea(p0, p1, p2, p3, p4) {
    return IsBulletInArea(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xC128137C52152741 | ApiSet: undefined
 */
export function isBulletInBox(p0, p1, p2, p3, p4, p5, p6) {
    return IsBulletInBox(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x4ED6CFDFE8D4131A | ApiSet: undefined
 */
export function isBitSet(address, offset) {
    return IsBitSet(address, offset);
}
/**
 * ```
 * Hardcoded to return false.
 * Checks for XBOXONE Game Build.
 * ```
 * Hash: 0xD1CCC2A2639D325F | ApiSet: undefined
 */
export function isDurangoVersion() {
    return IsDurangoVersion();
}
/**
 * Hash: 0x39F2B1BAD412246A | ApiSet: undefined
 */
export function isIncidentValid(incidentId) {
    return IsIncidentValid(incidentId);
}
/**
 * Hash: 0xF9E7DBB39080640B | ApiSet: undefined
 */
export function isGameSessionStateMachineIdle() {
    return IsGameSessionStateMachineIdle();
}
/**
 * Hash: 0xACB7E1418A8B6E32 | ApiSet: undefined
 */
export function isGlobalBlockValid(index) {
    return IsGlobalBlockValid(index);
}
/**
 * ```
 * magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
 * Hardcoded to return false.
 * ```
 * Hash: 0x5FC9357C26DAEFCE | ApiSet: undefined
 */
export function isMagDemo1Active() {
    return IsMagDemo1Active();
}
/**
 * Hash: 0xF4D8BCD052E7EA1B | ApiSet: undefined
 */
export function isMinigameInProgress() {
    return IsMinigameInProgress();
}
/**
 * ```
 * Hardcoded to return false.
 * Checks for PS4 Game Build.
 * ```
 * Hash: 0x88CFAE250D3E0C71 | ApiSet: undefined
 */
export function isOrbisVersion() {
    return IsOrbisVersion();
}
/**
 * ```
 * Hardcoded to return true.
 * ```
 * Hash: 0xB0FB6CFAA5A1C833 | ApiSet: undefined
 */
export function isPcVersion() {
    return IsPcVersion();
}
/**
 * Hash: 0xF236C84C6ADFCB2F | ApiSet: undefined
 */
export function isMissionCreatorActive() {
    return IsMissionCreatorActive();
}
/**
 * Hash: 0x5170DDA6D63ACAAA | ApiSet: undefined
 */
export function isPedDecomposed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDecomposed(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x36040772DF5E59A0 | ApiSet: undefined
 */
export function isPlayerOwningStandaloneSp() {
    return IsPlayerOwningStandaloneSp();
}
/**
 * ```
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 * ownedByPlayer = only projectiles fired by the player will be detected.
 * ```
 * Hash: 0x05B0061EFDFC8941 | ApiSet: undefined
 */
export function isProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer) {
    return IsProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer);
}
/**
 * Hash: 0x825CA3ED43831015 | ApiSet: undefined
 */
export function isPositionOccupied(position, range, p4, p5, p6, p7, p8, p9, p10) {
    return IsPositionOccupied(position.x, position.y, position.z, range, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x928431F4133CD3D4 | ApiSet: undefined
 */
export function isProjectileTypeInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    return IsProjectileTypeInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * ```
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
 * ```
 * Hash: 0x04965FB9E14235C7 | ApiSet: undefined
 */
export function isProjectileTypeInArea(xMin, yMin, zMin, xMax, yMax, zMax, weaponType, isPlayer) {
    if (typeof weaponType === 'string')
        weaponType = this.getHashKey(weaponType);
    return IsProjectileTypeInArea(xMin, yMin, zMin, xMax, yMax, zMax, weaponType, isPlayer);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x268AB8420A9E4ED7 | ApiSet: undefined
 */
export function isStadiaVersion() {
    return IsStadiaVersion();
}
/**
 * Hash: 0xF51C9BAAD9ED64C4 | ApiSet: undefined
 */
export function isProjectileTypeWithinDistance(p0, p1, p2, p3, p4, p5) {
    return IsProjectileTypeWithinDistance(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x48E4D50F87A96AA5 | ApiSet: undefined
 */
export function lootTablesGetInfo(ped, p1, p2, lootTableKey, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof lootTableKey === 'string')
        lootTableKey = this.getHashKey(lootTableKey);
    return LootTablesGetInfo(_ped, p1, p2, lootTableKey, p5);
}
/**
 * Hash: 0x2CF12F9ACF18F048 | ApiSet: undefined
 */
export function isStringNullOrEmpty(string) {
    return IsStringNullOrEmpty(string);
}
/**
 * Hash: 0x602102324604D96B | ApiSet: undefined
 */
export function isStringNull(string) {
    return IsStringNull(string);
}
/**
 * Hash: 0x082C043C7AFC3747 | ApiSet: undefined
 */
export function _0x082C043C7AFC3747(compositeId, p1) {
    Citizen.invokeNative('0x082C043C7AFC3747', compositeId, p1);
}
/**
 * ```
 * Returns true if the entire string consists only of space characters.
 * ```
 * Hash: 0x375F5870A7B8BEC1 | ApiSet: undefined
 */
export function isStringNullOrEmptyOrSpaces(string) {
    return IsStringNullOrEmptyOrSpaces(string);
}
/**
 * Hash: 0x0358B8A41916C613 | ApiSet: undefined
 */
export function _0x0358B8A41916C613(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x0358B8A41916C613', p0, p1, p2, p3);
}
/**
 * Hash: 0x0730E518486DEEC3 | ApiSet: undefined
 */
export function _0x0730E518486DEEC3(p0) {
    Citizen.invokeNative('0x0730E518486DEEC3', p0);
}
/**
 * Hash: 0x0D0AE5081F88CFE1 | ApiSet: undefined
 */
export function _0x0D0AE5081F88CFE1(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0x0D0AE5081F88CFE1', p0);
}
/**
 * Hash: 0x0A487CC74A517FB5 | ApiSet: undefined
 */
export function _0x0A487CC74A517FB5(p0) {
    Citizen.invokeNative('0x0A487CC74A517FB5', p0);
}
/**
 * ```
 * _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
 * ```
 * Hash: 0x1096603B519C905F | ApiSet: undefined
 */
export function _0x1096603B519C905F(name) {
    Citizen.invokeNative('0x1096603B519C905F', name);
}
/**
 * Hash: 0x183672FE838A661B | ApiSet: undefined
 */
export function _0x183672FE838A661B() {
    return Citizen.invokeNative('0x183672FE838A661B');
}
/**
 * Hash: 0x154340E87D8CC178 | ApiSet: undefined
 */
export function _0x154340E87D8CC178(p0) {
    Citizen.invokeNative('0x154340E87D8CC178', p0);
}
/**
 * Hash: 0x243CEDE8F916B994 | ApiSet: undefined
 */
export function _0x243CEDE8F916B994() {
    Citizen.invokeNative('0x243CEDE8F916B994');
}
/**
 * Hash: 0x33982467B1E349EF | ApiSet: undefined
 */
export function _0x33982467B1E349EF(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0x33982467B1E349EF', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x2916B30DC6C41179 | ApiSet: undefined
 */
export function _0x2916B30DC6C41179(weatherType) {
    if (typeof weatherType === 'string')
        weatherType = this.getHashKey(weatherType);
    Citizen.invokeNative('0x2916B30DC6C41179', weatherType);
}
/**
 * Hash: 0x35165C658077CD0B | ApiSet: undefined
 */
export function _0x35165C658077CD0B() {
    return Citizen.invokeNative('0x35165C658077CD0B');
}
/**
 * Hash: 0x38C0C9CAE1544500 | ApiSet: undefined
 */
export function _0x38C0C9CAE1544500(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    Citizen.invokeNative('0x38C0C9CAE1544500', p0);
}
/**
 * Hash: 0x38C2BF94D15F464D | ApiSet: undefined
 */
export function _0x38C2BF94D15F464D(p0) {
    return Citizen.invokeNative('0x38C2BF94D15F464D', p0);
}
/**
 * Hash: 0x3C3C7B1B5EC08764 | ApiSet: undefined
 */
export function _0x3C3C7B1B5EC08764() {
    Citizen.invokeNative('0x3C3C7B1B5EC08764');
}
/**
 * Hash: 0x3A87FDA8F1B6CDFB | ApiSet: undefined
 */
export function _0x3A87FDA8F1B6CDFB(p0, p1, p2) {
    Citizen.invokeNative('0x3A87FDA8F1B6CDFB', p0, p1, p2);
}
/**
 * Hash: 0x49C44FE78A135A1D | ApiSet: undefined
 */
export function _0x49C44FE78A135A1D(p0) {
    Citizen.invokeNative('0x49C44FE78A135A1D', p0);
}
/**
 * Hash: 0x4647842FE8F31C1E | ApiSet: undefined
 */
export function _0x4647842FE8F31C1E(p0, p1) {
    Citizen.invokeNative('0x4647842FE8F31C1E', p0, p1);
}
/**
 * Hash: 0x49F3241C28EBBFBC | ApiSet: undefined
 */
export function _0x49F3241C28EBBFBC(p0) {
    Citizen.invokeNative('0x49F3241C28EBBFBC', p0);
}
/**
 * Hash: 0x4B0501A468B749F8 | ApiSet: undefined
 */
export function _0x4B0501A468B749F8() {
    Citizen.invokeNative('0x4B0501A468B749F8');
}
/**
 * Hash: 0x4B101DBCC9482F2D | ApiSet: undefined
 */
export function _0x4B101DBCC9482F2D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x4B101DBCC9482F2D', _ped);
}
/**
 * Hash: 0x4D5C9CC7E7E23E09 | ApiSet: undefined
 */
export function _0x4D5C9CC7E7E23E09() {
    Citizen.invokeNative('0x4D5C9CC7E7E23E09');
}
/**
 * ```
 * UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
 * _J*, _K*, _L*
 * ```
 * Hash: 0x553D67295DDD2309 | ApiSet: undefined
 */
export function _0x553D67295DDD2309(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x553D67295DDD2309', _entity);
}
/**
 * Hash: 0x5801BE2DF2AF07EC | ApiSet: undefined
 */
export function _0x5801BE2DF2AF07EC(p0) {
    Citizen.invokeNative('0x5801BE2DF2AF07EC', p0);
}
/**
 * Hash: 0x5B4A8121A47D844D | ApiSet: undefined
 */
export function _0x5B4A8121A47D844D(p0) {
    return Citizen.invokeNative('0x5B4A8121A47D844D', p0);
}
/**
 * Hash: 0x627B68D9CE6EE8DE | ApiSet: undefined
 */
export function _0x627B68D9CE6EE8DE(p0) {
    return Citizen.invokeNative('0x627B68D9CE6EE8DE', p0);
}
/**
 * Hash: 0x68319452C5064ABA | ApiSet: undefined
 */
export function _0x68319452C5064ABA(p0, p1) {
    Citizen.invokeNative('0x68319452C5064ABA', p0, p1);
}
/**
 * ```
 * _SET_DISPATCH_*, unused
 * ```
 * Hash: 0x6BCF7B5CD338281A | ApiSet: undefined
 */
export function _0x6BCF7B5CD338281A(p0, p1, p2) {
    Citizen.invokeNative('0x6BCF7B5CD338281A', p0, p1, p2);
}
/**
 * Hash: 0x6BED40493A1AFDB8 | ApiSet: undefined
 */
export function _0x6BED40493A1AFDB8(p1) {
    return Citizen.invokeNative('0x6BED40493A1AFDB8', p1);
}
/**
 * Hash: 0x6C7B68D3CE60E8DE | ApiSet: undefined
 */
export function _0x6C7B68D3CE60E8DE(p0) {
    return Citizen.invokeNative('0x6C7B68D3CE60E8DE', p0);
}
/**
 * Hash: 0x6F02B5E50511721E | ApiSet: undefined
 */
export function _0x6F02B5E50511721E(p0) {
    return Citizen.invokeNative('0x6F02B5E50511721E', p0);
}
/**
 * Hash: 0x745808BB01CEC6B9 | ApiSet: undefined
 */
export function _0x745808BB01CEC6B9(p0) {
    Citizen.invokeNative('0x745808BB01CEC6B9', p0);
}
/**
 * Hash: 0x74ACA66484CEBAF0 | ApiSet: undefined
 */
export function _0x74ACA66484CEBAF0(p0) {
    Citizen.invokeNative('0x74ACA66484CEBAF0', p0);
}
/**
 * Hash: 0x7A76104CC2CC69E8 | ApiSet: undefined
 */
export function _0x7A76104CC2CC69E8(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x7A76104CC2CC69E8', _entity, p1, p2);
}
/**
 * Hash: 0x7CF96F1250EF3221 | ApiSet: undefined
 */
export function _0x7CF96F1250EF3221(p0) {
    return Citizen.invokeNative('0x7CF96F1250EF3221', p0);
}
/**
 * Hash: 0x7FA58CED69405F9A | ApiSet: undefined
 */
export function _0x7FA58CED69405F9A(p0, p1) {
    Citizen.invokeNative('0x7FA58CED69405F9A', p0, p1);
}
/**
 * Hash: 0x8BB99B85444544D9 | ApiSet: undefined
 */
export function _0x8BB99B85444544D9(p0, p1) {
    return Citizen.invokeNative('0x8BB99B85444544D9', p0, p1);
}
/**
 * Hash: 0x8314FC2013ECE2DA | ApiSet: undefined
 */
export function _0x8314FC2013ECE2DA(p0, p1, p2) {
    return Citizen.invokeNative('0x8314FC2013ECE2DA', p0, p1, p2);
}
/**
 * Hash: 0x8C0F6A3D7236DEEB | ApiSet: undefined
 */
export function _0x8C0F6A3D7236DEEB(p0, p1) {
    Citizen.invokeNative('0x8C0F6A3D7236DEEB', p0, p1);
}
/**
 * Hash: 0x94E8CA3DEE952789 | ApiSet: undefined
 */
export function _0x94E8CA3DEE952789(p0, p1) {
    return Citizen.invokeNative('0x94E8CA3DEE952789', p0, p1);
}
/**
 * Hash: 0x8DB104CCEBCD58C5 | ApiSet: undefined
 */
export function _0x8DB104CCEBCD58C5(p0, p1) {
    return Citizen.invokeNative('0x8DB104CCEBCD58C5', p0, p1);
}
/**
 * Hash: 0x94FCADCF9F0C368E | ApiSet: undefined
 */
export function _0x94FCADCF9F0C368E(p0) {
    Citizen.invokeNative('0x94FCADCF9F0C368E', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x96282005C5C6801F | ApiSet: undefined
 */
export function _0x96282005C5C6801F(p0, p1) {
    Citizen.invokeNative('0x96282005C5C6801F', p0, p1);
}
/**
 * Hash: 0x9A252AA23D7098F2 | ApiSet: undefined
 */
export function _0x9A252AA23D7098F2() {
    Citizen.invokeNative('0x9A252AA23D7098F2');
}
/**
 * Hash: 0x970339EFA4FDE518 | ApiSet: undefined
 */
export function _0x970339EFA4FDE518(p0, p1, p2) {
    return Citizen.invokeNative('0x970339EFA4FDE518', p0, p1, p2);
}
/**
 * Hash: 0x9BF2C0C568C61641 | ApiSet: undefined
 */
export function _0x9BF2C0C568C61641(p0) {
    Citizen.invokeNative('0x9BF2C0C568C61641', p0);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0xA08111B053D84B4D | ApiSet: undefined
 */
export function _0xA08111B053D84B4D(p0) {
    Citizen.invokeNative('0xA08111B053D84B4D', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA9342743B634A462 | ApiSet: undefined
 */
export function _0xA9342743B634A462(p0) {
    Citizen.invokeNative('0xA9342743B634A462', p0);
}
/**
 * Hash: 0xA3A8926951471C82 | ApiSet: undefined
 */
export function _0xA3A8926951471C82() {
    Citizen.invokeNative('0xA3A8926951471C82');
}
/**
 * Hash: 0xAB26DEEE120FD3FD | ApiSet: undefined
 */
export function _0xAB26DEEE120FD3FD(p0, p1) {
    Citizen.invokeNative('0xAB26DEEE120FD3FD', p0, p1);
}
/**
 * Hash: 0xAD44856A1CD29635 | ApiSet: undefined
 */
export function _0xAD44856A1CD29635(p0, p1, p2) {
    Citizen.invokeNative('0xAD44856A1CD29635', p0, p1, p2);
}
/**
 * Hash: 0xAF3A84C7DE6A1DC5 | ApiSet: undefined
 */
export function _0xAF3A84C7DE6A1DC5(p0, p1) {
    Citizen.invokeNative('0xAF3A84C7DE6A1DC5', p0, p1);
}
/**
 * ```
 * Hardcoded to return one/true.
 * ```
 * Hash: 0xAF530E56505D1BD6 | ApiSet: undefined
 */
export function _0xAF530E56505D1BD6(p0) {
    return Citizen.invokeNative('0xAF530E56505D1BD6', p0);
}
/**
 * Hash: 0xB1F6665AA54DCD5C | ApiSet: undefined
 */
export function _0xB1F6665AA54DCD5C(p0) {
    return Citizen.invokeNative('0xB1F6665AA54DCD5C', p0);
}
/**
 * Hash: 0xB08C4FA25BC29DB9 | ApiSet: undefined
 */
export function _0xB08C4FA25BC29DB9(p0) {
    Citizen.invokeNative('0xB08C4FA25BC29DB9', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xB711EB4BC8D06013 | ApiSet: undefined
 */
export function _0xB711EB4BC8D06013() {
    Citizen.invokeNative('0xB711EB4BC8D06013');
}
/**
 * Hash: 0xBBE5B63EFFB08E68 | ApiSet: undefined
 */
export function _0xBBE5B63EFFB08E68(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0xBBE5B63EFFB08E68', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xBB282CF5D2333FB8 | ApiSet: undefined
 */
export function _0xBB282CF5D2333FB8(p0, p1) {
    Citizen.invokeNative('0xBB282CF5D2333FB8', p0, p1);
}
/**
 * Hash: 0xCC1BAF72D571DB8D | ApiSet: undefined
 */
export function _0xCC1BAF72D571DB8D(p0, p1, p2) {
    return Citizen.invokeNative('0xCC1BAF72D571DB8D', p0, p1, p2);
}
/**
 * Hash: 0xCC3EDC5614B03F61 | ApiSet: undefined
 */
export function _0xCC3EDC5614B03F61(p0) {
    Citizen.invokeNative('0xCC3EDC5614B03F61', p0);
}
/**
 * Hash: 0xD3F943B88F55376A | ApiSet: undefined
 */
export function _0xD3F943B88F55376A(weatherType) {
    if (typeof weatherType === 'string')
        weatherType = this.getHashKey(weatherType);
    Citizen.invokeNative('0xD3F943B88F55376A', weatherType);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xDBDA48EC456ED908 | ApiSet: undefined
 */
export function _0xDBDA48EC456ED908() {
    Citizen.invokeNative('0xDBDA48EC456ED908');
}
/**
 * Hash: 0xDA4D8EB04E8E2928 | ApiSet: undefined
 */
export function _0xDA4D8EB04E8E2928(p0) {
    Citizen.invokeNative('0xDA4D8EB04E8E2928', p0);
}
/**
 * ```
 * Hardcoded to return one/true.
 * ```
 * Hash: 0xDC057B86FC157031 | ApiSet: undefined
 */
export function _0xDC057B86FC157031() {
    return Citizen.invokeNative('0xDC057B86FC157031');
}
/**
 * Hash: 0xDC416CA762BC4F43 | ApiSet: undefined
 */
export function _0xDC416CA762BC4F43(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0xDC416CA762BC4F43', p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0xEB946B9E579729AD | ApiSet: undefined
 */
export function _0xEB946B9E579729AD(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xEB946B9E579729AD', _ped, p1);
}
/**
 * Hash: 0xF63FA29D4A9ACA86 | ApiSet: undefined
 */
export function _0xF63FA29D4A9ACA86(p0, p1) {
    Citizen.invokeNative('0xF63FA29D4A9ACA86', p0, p1);
}
/**
 * Hash: 0xDE2C3B74D2B3705C | ApiSet: undefined
 */
export function _0xDE2C3B74D2B3705C(p0, p1) {
    Citizen.invokeNative('0xDE2C3B74D2B3705C', p0, p1);
}
/**
 * Hash: 0xF569E33FB72ED28E | ApiSet: undefined
 */
export function _0xF569E33FB72ED28E() {
    Citizen.invokeNative('0xF569E33FB72ED28E');
}
/**
 * Hash: 0xF81C53561D15F330 | ApiSet: undefined
 */
export function _0xF81C53561D15F330() {
    return Citizen.invokeNative('0xF81C53561D15F330');
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xF650DCF5D6F312C1 | ApiSet: undefined
 */
export function _0xF650DCF5D6F312C1(p0) {
    Citizen.invokeNative('0xF650DCF5D6F312C1', p0);
}
/**
 * Hash: 0xFC6ECB9170145ECE | ApiSet: undefined
 */
export function _0xFC6ECB9170145ECE() {
    Citizen.invokeNative('0xFC6ECB9170145ECE');
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xFF252E2BAFB7330F | ApiSet: undefined
 */
export function _0xFF252E2BAFB7330F(p0) {
    Citizen.invokeNative('0xFF252E2BAFB7330F', p0);
}
/**
 * Hash: 0x3D0EAC6385DD6100 | ApiSet: undefined
 */
export function networkSetScriptIsSafeForNetworkGame() {
    NetworkSetScriptIsSafeForNetworkGame();
}
/**
 * Hash: 0xB2C69E11A37B5AF0 | ApiSet: undefined
 */
export function overrideSaveHouse(override, position, heading, isAutosave) {
    const result = OverrideSaveHouse(override, position.x, position.y, position.z, heading, isAutosave);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0x5CB71EAA1429A358 | ApiSet: undefined
 */
export function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField) {
    NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField);
}
/**
 * ```
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 * ```
 * Hash: 0xEA6DC3A8ADD2005F | ApiSet: undefined
 */
export function populateNow() {
    PopulateNow();
}
/**
 * Hash: 0x66AB6B6C7E72F393 | ApiSet: undefined
 */
export function pauseDeathArrestRestart(toggle) {
    PauseDeathArrestRestart(toggle);
}
/**
 * ```
 * p0 must be < 2
 * ```
 * Hash: 0x279B0696DA4657EB | ApiSet: undefined
 */
export function queueSavegameOperation(p0) {
    return QueueSavegameOperation(p0);
}
/**
 * ```
 * Reads the passed value as floating point value and returns it.
 * Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
 * ```
 * Hash: 0xD2C9126410DFA1B2 | ApiSet: undefined
 */
export function readIntAsFloat(value) {
    return ReadIntAsFloat(value);
}
/**
 * ```
 * p3 is usually the same value of radius
 * p8 determines whether the ILO prompt is a lock on prompt with RMB
 * ```
 * Hash: 0x870708A6E147A9AD | ApiSet: undefined
 */
export function registerInteractionLockonPrompt(entity, text, radius, p3, flag, p5, p6, prompt, p8, p9) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return RegisterInteractionLockonPrompt(_entity, text, radius, p3, flag, p5, p6, prompt, p8, p9);
}
/**
 * Hash: 0x88CB484364EFB37A | ApiSet: undefined
 */
export function removePopMultiplierArea(id, p1) {
    RemovePopMultiplierArea(id, p1);
}
/**
 * Hash: 0x49F751F6868DDC5B | ApiSet: undefined
 */
export function removeDispatchSpawnBlockingArea(p0) {
    RemoveDispatchSpawnBlockingArea(p0);
}
/**
 * Hash: 0xC7817264BC4B6377 | ApiSet: undefined
 */
export function resetDispatchIdealSpawnDistance() {
    ResetDispatchIdealSpawnDistance();
}
/**
 * Hash: 0xBD090F5B1DB82189 | ApiSet: undefined
 */
export function removePopMultiplierAreaForVolume(volume, p1) {
    RemovePopMultiplierAreaForVolume(volume, p1);
}
/**
 * ```
 * Begins with RESET_*. Next character in the name is either D or E.
 * ```
 * Hash: 0xECBABD0307FB216F | ApiSet: undefined
 */
export function resetEndUserBenchmark() {
    ResetEndUserBenchmark();
}
/**
 * Hash: 0x54EC7B6BC72BAD69 | ApiSet: undefined
 */
export function resetDispatchMaxSpawnDistance() {
    ResetDispatchMaxSpawnDistance();
}
/**
 * Hash: 0x1411A7CBC3A6EB7B | ApiSet: undefined
 */
export function resetScriptTimeWithinFrame() {
    ResetScriptTimeWithinFrame();
}
/**
 * Hash: 0x96498D922D8D0D0A | ApiSet: undefined
 */
export function resetDispatchMinSpawnDistance() {
    ResetDispatchMinSpawnDistance();
}
/**
 * ```
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
 * ```
 * Hash: 0xF4743E2ECC02B3DA | ApiSet: undefined
 */
export function saveEndUserBenchmark() {
    SaveEndUserBenchmark();
}
/**
 * Hash: 0xEF42F56F69877125 | ApiSet: undefined
 */
export function resetWantedResponseNumPedsToSpawn() {
    ResetWantedResponseNumPedsToSpawn();
}
/**
 * Hash: 0x769E848C66E3C2BB | ApiSet: undefined
 */
export function scriptRaceGetPlayerSplitTime(p0) {
    return ScriptRaceGetPlayerSplitTime(p0);
}
/**
 * ```
 * Used in CAIConditionAmbientAIMemoryReactionsEnabled
 * ```
 * Hash: 0x6AC4AF46A6B8DFB2 | ApiSet: undefined
 */
export function setAiMemoryReactionsEnabled(enabled) {
    SetAiMemoryReactionsEnabled(enabled);
}
/**
 * Hash: 0x8AE059F47158417E | ApiSet: undefined
 */
export function scriptRaceInit(numCheckpoints, numLaps, numPlayers, p3) {
    ScriptRaceInit(numCheckpoints, numLaps, numPlayers, p3);
}
/**
 * ```
 * Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
 * The flags are stored in an int array where each int has the ability to hold 32 flags.
 * Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
 * ```
 * Hash: 0xE84AAC1B22A73E99 | ApiSet: undefined
 */
export function setBitFlag(flag) {
    return SetBitFlag(flag);
}
/**
 * Hash: 0xBA62B4D80FA66BD6 | ApiSet: undefined
 */
export function scriptRacePlayerHitCheckpoint(part, checkpoint, lap, time) {
    ScriptRacePlayerHitCheckpoint(part, checkpoint, lap, time);
}
/**
 * Hash: 0x334CE0DA4FAF330C | ApiSet: undefined
 */
export function scriptRaceShutdown() {
    ScriptRaceShutdown();
}
/**
 * Hash: 0x324DC1CEF57F31E6 | ApiSet: undefined
 */
export function setBitsInRange(rangeStart, rangeEnd, p3) {
    return SetBitsInRange(rangeStart, rangeEnd, p3);
}
/**
 * Hash: 0xF73FBE4845C43B5B | ApiSet: undefined
 */
export function setBit(offset) {
    return SetBit(offset);
}
/**
 * Hash: 0xD37BECF862DA726F | ApiSet: undefined
 */
export function setCreditsActive(toggle) {
    SetCreditsActive(toggle);
}
/**
 * ```
 * Cheats are GTA IV cheats:
 * 0 = unknown
 * 1 = unknown (same as 0)
 * 2 = Max Health and Armor
 * 3 = Raise Wanted Level
 * 4 = Lower Wanted Level
 * 5 = unknown (does nothing)
 * 6 = Change Weather
 * 7 = Spawn Annihilator
 * 8 = Spawn NRG 900
 * 9 = Spawn FBI
 * 10 = Spawn Jetmax
 * 11 = Spawn Comet
 * 12 = Spawn Turismo
 * 13 = Spawn Cognoscenti
 * 14 = Spawn Super GT
 * 15 = Spawn Sanchez
 * Initially used in Max Payne 3, that's why we know the name.
 * ```
 * Hash: 0xD4958E8CF0DE0DD0 | ApiSet: undefined
 */
export function setCheatActive(cheatId) {
    SetCheatActive(cheatId);
}
/**
 * Hash: 0xEAB6823B82FBD283 | ApiSet: undefined
 */
export function setDispatchIdealSpawnDistance(fIdealSpawnDistance) {
    SetDispatchIdealSpawnDistance(fIdealSpawnDistance);
}
/**
 * Hash: 0x89314FB3463E28DE | ApiSet: undefined
 */
export function setDispatchMaxSpawnDistance(maxSpawnDistance) {
    SetDispatchMaxSpawnDistance(maxSpawnDistance);
}
/**
 * ```
 * Params: BOOL p3 is always true
 * ```
 * Hash: 0xFA3E3CA8A1DE6D5D | ApiSet: undefined
 */
export function setCurrWeatherState(weatherType1, weatherType2, percentWeather2, enabled) {
    if (typeof weatherType1 === 'string')
        weatherType1 = this.getHashKey(weatherType1);
    if (typeof weatherType2 === 'string')
        weatherType2 = this.getHashKey(weatherType2);
    SetCurrWeatherState(weatherType1, weatherType2, percentWeather2, enabled);
}
/**
 * Hash: 0x27A1B170AA8AF84C | ApiSet: undefined
 */
export function setDispatchMinSpawnDistance(minSpawnDistance) {
    SetDispatchMinSpawnDistance(minSpawnDistance);
}
/**
 * Hash: 0xAC806C4CAB973517 | ApiSet: undefined
 */
export function setFadeInAfterLoad(toggle) {
    SetFadeInAfterLoad(toggle);
}
/**
 * ```
 * Sets whether the game should fade in after the player dies or is arrested.
 * ```
 * Hash: 0xDF3B5846DE5904AF | ApiSet: undefined
 */
export function setFadeInAfterDeathArrest(toggle) {
    SetFadeInAfterDeathArrest(toggle);
}
/**
 * ```
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
 * ```
 * Hash: 0xFAEC088D28B1DE4A | ApiSet: undefined
 */
export function setGamePaused(toggle) {
    SetGamePaused(toggle);
}
/**
 * ```
 * Note: this native was added in build 1232.56
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x550F05CFFBD63C8C | ApiSet: undefined
 */
export function setGameLogicPaused() {
    SetGameLogicPaused();
}
/**
 * Hash: 0x9617B6E5F6537B63 | ApiSet: undefined
 */
export function setIncidentUnk(incidentId) {
    SetIncidentUnk(incidentId);
}
/**
 * Hash: 0xE97240065406CB80 | ApiSet: undefined
 */
export function setGlobalBlockIsLoaded(index, toggle) {
    SetGlobalBlockIsLoaded(index, toggle);
}
/**
 * Hash: 0x9B47971234169990 | ApiSet: undefined
 */
export function setLootPeltSatchelItem(ped, item) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetLootPeltSatchelItem(_ped, item);
}
/**
 * Hash: 0xBE83CAE8ED77A94F | ApiSet: undefined
 */
export function setOverrideWeather(weatherType) {
    if (typeof weatherType === 'string')
        weatherType = this.getHashKey(weatherType);
    SetOverrideWeather(weatherType);
}
/**
 * Hash: 0x193DFC0526830FD6 | ApiSet: undefined
 */
export function setRain(intensity) {
    SetRain(intensity);
}
/**
 * ```
 * If true, the player can't save the game.
 * ```
 * Hash: 0x36694B456BE80D0A | ApiSet: undefined
 */
export function setMissionFlag(toggle) {
    SetMissionFlag(toggle);
}
/**
 * ```
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 * ```
 * Hash: 0xB1ADCCC4150C6473 | ApiSet: undefined
 */
export function setRandomEventFlag(toggle) {
    SetRandomEventFlag(toggle);
}
/**
 * Hash: 0x674B90BE1115846D | ApiSet: undefined
 */
export function setPedDecomposed(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDecomposed(_ped, toggle);
}
/**
 * Hash: 0x6E5A7FBEECAB3C72 | ApiSet: undefined
 */
export function setRandomWeatherType(p0, p1) {
    SetRandomWeatherType(p0, p1);
}
/**
 * Hash: 0x5CD7A49104AFCB6B | ApiSet: undefined
 */
export function setRandomSeed(seed) {
    SetRandomSeed(seed);
}
/**
 * Hash: 0xB3E9BE963F10C445 | ApiSet: undefined
 */
export function setSuperJumpThisFrame(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSuperJumpThisFrame(_player);
}
/**
 * Hash: 0xF6BEE7E80EC5CA40 | ApiSet: undefined
 */
export function setSnowLevel(level) {
    SetSnowLevel(level);
}
/**
 * ```
 * Maximum value is 1.0f
 * At a value of 0.0f the game will still run at a minimum time scale.
 * ```
 * Hash: 0x9682AF6050854856 | ApiSet: undefined
 */
export function setTimeScale(timeScale) {
    SetTimeScale(timeScale);
}
/**
 * Hash: 0x3215376E79F6EA18 | ApiSet: undefined
 */
export function setThisScriptCanBePaused(toggle) {
    SetThisScriptCanBePaused(toggle);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
 * ```
 * Hash: 0x59174F1AFE095B5A | ApiSet: undefined
 */
export function setWeatherType(weatherType, p1, p2, transition, transitionTime, p5) {
    if (typeof weatherType === 'string')
        weatherType = this.getHashKey(weatherType);
    SetWeatherType(weatherType, p1, p2, transition, transitionTime, p5);
}
/**
 * Hash: 0x8ABD939C2E5D00ED | ApiSet: undefined
 */
export function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle) {
    SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle);
}
/**
 * Hash: 0xD74ACDF7DB8114AF | ApiSet: undefined
 */
export function setWeatherTypeFrozen(toggle) {
    SetWeatherTypeFrozen(toggle);
}
/**
 * Hash: 0x2C6A07AF9AEDABD8 | ApiSet: undefined
 */
export function setWeatherType2(weatherType, p1, p2, p3, p4) {
    if (typeof weatherType === 'string')
        weatherType = this.getHashKey(weatherType);
    SetWeatherType2(weatherType, p1, p2, p3, p4);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
 * ```
 * Hash: 0x3373779BAF7CAF48 | ApiSet: undefined
 */
export function setWeatherVariation(weatherType, variation) {
    SetWeatherVariation(weatherType, variation);
}
/**
 * Hash: 0xB56C4F5F57A45600 | ApiSet: undefined
 */
export function setWindDirection(direction) {
    SetWindDirection(direction);
}
/**
 * Hash: 0xD00C2D82DC04A99F | ApiSet: undefined
 */
export function setWindSpeed(speed) {
    SetWindSpeed(speed);
}
/**
 * Hash: 0x867654CBC7606F2C | ApiSet: undefined
 */
export function shootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, p13) {
    const _ownerPed = ownerPed instanceof Ped ? ownerPed.handle() : ownerPed;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    ShootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, _ownerPed, isAudible, isInvisible, speed, p13);
}
/**
 * ```
 * Returns whether the game's measurement system is set to metric.
 * ```
 * Hash: 0x4FB556ACEFA93098 | ApiSet: undefined
 */
export function shouldUseMetricMeasurements() {
    return ShouldUseMetricMeasurements();
}
/**
 * ```
 * Same as SHOULD_USE_METRIC_MEASUREMENTS
 * ```
 * Hash: 0x58BCDC75BA52110A | ApiSet: undefined
 */
export function shouldUseMetricMeasurements2() {
    return ShouldUseMetricMeasurements2();
}
/**
 * Hash: 0xFF4AAF3275BAAB4F | ApiSet: undefined
 */
export function shouldUseMetricTemperature() {
    return ShouldUseMetricTemperature();
}
/**
 * Hash: 0x8F24157FEDB85EA2 | ApiSet: undefined
 */
export function shouldUseMetricWeight() {
    return ShouldUseMetricWeight();
}
/**
 * Hash: 0x0177CF20345F44DD | ApiSet: undefined
 */
export function shouldUse24HourClock() {
    return ShouldUse24HourClock();
}
/**
 * ```
 * Begins with START_*. Next character in the name is either D or E.
 * ```
 * Hash: 0x29D1F6DF864A094E | ApiSet: undefined
 */
export function startEndUserBenchmark() {
    StartEndUserBenchmark();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA565FAC215CBC77D | ApiSet: undefined
 */
export function stopCurrentLoadingProgressTimer() {
    StopCurrentLoadingProgressTimer();
}
/**
 * ```
 * Begins with STOP_*. Next character in the name is either D or E.
 * ```
 * Hash: 0xB89AEC71AFF2B599 | ApiSet: undefined
 */
export function stopEndUserBenchmark() {
    StopEndUserBenchmark();
}
/**
 * Hash: 0x8C13DB96497B7ABF | ApiSet: undefined
 */
export function tan(p0) {
    return Tan(p0);
}
/**
 * ```
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 * ```
 * Hash: 0xF2DD2298B3AF23E2 | ApiSet: undefined
 */
export function stringToInt(string) {
    return StringToInt(string);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x4FFA0386A6216113 | ApiSet: undefined
 */
export function uiStartedEndUserBenchmark() {
    return UiStartedEndUserBenchmark();
}
/**
 * Hash: 0xE98D55C5983F2509 | ApiSet: undefined
 */
export function unregisterInteractionLockonPrompt(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return UnregisterInteractionLockonPrompt(_entity);
}
/**
 * ```
 * Note: The first bit in 'flags' must not be set.
 * It is also required to pass at least one extra argument (this must be a text label string or hash).
 * When passing a hash, flags should be 0.
 * ```
 * Hash: 0xFA925AC00EB830B9 | ApiSet: undefined
 */
export function varString(p0, p1, variadic) {
    return VarString(p0, p1, variadic);
}
/**
 * ```
 * Returns the current status of the onscreen keyboard, and updates the output.
 * Status Codes:
 * 0 - User still editing
 * 1 - User has finished editing
 * 2 - User has canceled editing
 * 3 - Keyboard isn't active
 * ```
 * Hash: 0x37DF360F235A3893 | ApiSet: undefined
 */
export function updateOnscreenKeyboard() {
    return UpdateOnscreenKeyboard();
}
/**
 * ```
 * Only used in smuggler2 script
 * ```
 * Hash: 0xF06C5B66DE20B2B8 | ApiSet: undefined
 */
export function waterOverrideSetOceanwavemaxamplitude(maxAmplitude) {
    WaterOverrideSetOceanwavemaxamplitude(maxAmplitude);
}
/**
 * ```
 * Only used in smuggler2 script
 * ```
 * Hash: 0x55123D5A7D9D3C42 | ApiSet: undefined
 */
export function waterOverrideSetShorewaveamplitude(amplitude) {
    WaterOverrideSetShorewaveamplitude(amplitude);
}
/**
 * ```
 * Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
 * ```
 * Hash: 0xD99229FE93B46286 | ApiSet: undefined
 */
export function addDoorToSystemNew(doorHash, p1, p2, p3, threadId, p5, p6) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    AddDoorToSystemNew(doorHash, p1, p2, p3, threadId, p5, p6);
}
/**
 * Hash: 0xE2B3B852B537C398 | ApiSet: undefined
 */
export function allowDamageEventsForNonNetworkedObjects(enabled) {
    AllowDamageEventsForNonNetworkedObjects(enabled);
}
/**
 * Hash: 0x8DC39368BDD57755 | ApiSet: undefined
 */
export function attachPortablePickupToPed(pickupObject, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AttachPortablePickupToPed(pickupObject, _ped);
}
/**
 * Hash: 0xB8F5062070BB6DBD | ApiSet: undefined
 */
export function blockPickupFromPlayerCollection(p0, p1) {
    BlockPickupFromPlayerCollection(p0, p1);
}
/**
 * Hash: 0x8462BE2341A55B6F | ApiSet: undefined
 */
export function breakAllObjectFragmentBones(object) {
    BreakAllObjectFragmentBones(object);
}
/**
 * Hash: 0xE7E4C198B0185900 | ApiSet: undefined
 */
export function breakObjectFragmentChild(object, p1, p2) {
    BreakObjectFragmentChild(object, p1, p2);
}
/**
 * Hash: 0x5EAAD83F8CFB4575 | ApiSet: undefined
 */
export function convertOldPickupTypeToNew(pickupHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    return ConvertOldPickupTypeToNew(pickupHash);
}
/**
 * ```
 * flags: see CREATE_PICKUP
 * ```
 * Hash: 0x673966A0C0FD7171 | ApiSet: undefined
 */
export function createAmbientPickup(pickupHash, position, flags, value, modelHash, p7, p8, p9, p10) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreateAmbientPickup(pickupHash, position.x, position.y, position.z, flags, value, modelHash, p7, p8, p9, p10);
}
/**
 * Hash: 0x509D5878EB39E842 | ApiSet: undefined
 */
export function createObject(modelHash, position, isNetwork, bScriptHostObj, dynamic, p7, p8) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreateObject(modelHash, position.x, position.y, position.z, isNetwork, bScriptHostObj, dynamic, p7, p8);
}
/**
 * Hash: 0x9A294B2138ABB884 | ApiSet: undefined
 */
export function createObjectNoOffset(modelHash, position, isNetwork, bScriptHostObj, dynamic, p7) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreateObjectNoOffset(modelHash, position.x, position.y, position.z, isNetwork, bScriptHostObj, dynamic, p7);
}
/**
 * Hash: 0xB6CBD40F8EA69E8A | ApiSet: undefined
 */
export function createObjectSkeleton(object) {
    return CreateObjectSkeleton(object);
}
/**
 * ```
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
 * ```
 * Hash: 0xFBA08C503DD5FA58 | ApiSet: undefined
 */
export function createPickup(pickupHash, position, flags, p5, p6, modelHash, p8, p9, p10) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePickup(pickupHash, position.x, position.y, position.z, flags, p5, p6, modelHash, p8, p9, p10);
}
/**
 * Hash: 0x2EAF1FDB2FB55698 | ApiSet: undefined
 */
export function createPortablePickup(pickupHash, position, placeOnGround, modelHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePortablePickup(pickupHash, position.x, position.y, position.z, placeOnGround, modelHash);
}
/**
 * Hash: 0xE4EFB315BCD2A838 | ApiSet: undefined
 */
export function damageBoneOnProp(object, bone) {
    DamageBoneOnProp(object, bone);
}
/**
 * ```
 * flags: see CREATE_PICKUP
 * ```
 * Hash: 0x891804727E0A98B7 | ApiSet: undefined
 */
export function createPickupRotate(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flags, p8, p9, p10, modelHash, p12, p13, p14) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePickupRotate(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flags, p8, p9, p10, modelHash, p12, p13, p14);
}
/**
 * ```
 * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0x931914268722C263 | ApiSet: undefined
 */
export function deleteObject(object) {
    const _object = object instanceof Entity ? object.handle() : object;
    DeleteObject(_object);
}
/**
 * Hash: 0xBFA48E2FF417213F | ApiSet: undefined
 */
export function doesObjectOfTypeExistAtCoords(position, radius, hash, p5) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return DoesObjectOfTypeExistAtCoords(position.x, position.y, position.z, radius, hash, p5);
}
/**
 * Hash: 0xCF463D1E9A0AECB1 | ApiSet: undefined
 */
export function detachPortablePickupFromPed(pickupObject) {
    DetachPortablePickupFromPed(pickupObject);
}
/**
 * Hash: 0xAFC1CA75AD4074D1 | ApiSet: undefined
 */
export function doesPickupExist(pickup) {
    return DoesPickupExist(pickup);
}
/**
 * Hash: 0xD9EFB6DBF7DAAEA3 | ApiSet: undefined
 */
export function doesPickupObjectExist(pickupObject) {
    return DoesPickupObjectExist(pickupObject);
}
/**
 * Hash: 0xF9C36251F6E48E33 | ApiSet: undefined
 */
export function doesPickupOfTypeExistInArea(pickupHash, position, radius) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    return DoesPickupOfTypeExistInArea(pickupHash, position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x52AF537A0C5B8AAD | ApiSet: undefined
 */
export function doesRayfireMapObjectExist(object) {
    return DoesRayfireMapObjectExist(object);
}
/**
 * Hash: 0x985767F5FA45BC44 | ApiSet: undefined
 */
export function doorSystemChangeScriptOwner(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemChangeScriptOwner(doorHash);
}
/**
 * Hash: 0x276AAF0F1C7F2494 | ApiSet: undefined
 */
export function doorSystemForceShut(doorHash, p1) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemForceShut(doorHash, p1);
}
/**
 * Hash: 0x8433E1954BE323FC | ApiSet: undefined
 */
export function doorSystemGetAutomaticRate(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return DoorSystemGetAutomaticRate(doorHash);
}
/**
 * Hash: 0x160AA1B32F6139B8 | ApiSet: undefined
 */
export function doorSystemGetDoorState(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return DoorSystemGetDoorState(doorHash);
}
/**
 * Hash: 0x65499865FCA6E5EC | ApiSet: undefined
 */
export function doorSystemGetOpenRatio(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return DoorSystemGetOpenRatio(doorHash);
}
/**
 * Hash: 0x1F1FABFE9B2A1254 | ApiSet: undefined
 */
export function doorSystemSetAbleToChangeOpenRatioWhileLocked(doorHash, p1) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetAbleToChangeOpenRatioWhileLocked(doorHash, p1);
}
/**
 * Hash: 0x9BA001CB45CBF627 | ApiSet: undefined
 */
export function doorSystemSetAutomaticDistance(doorHash, distance) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetAutomaticDistance(doorHash, distance);
}
/**
 * Hash: 0x03C27E13B42A0E82 | ApiSet: undefined
 */
export function doorSystemSetAutomaticRate(doorHash, rate) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetAutomaticRate(doorHash, rate);
}
/**
 * ```
 * _ALLOW_* - _ATTACH_*
 * ```
 * Hash: 0x1BC47A9DEDC8DF5D | ApiSet: undefined
 */
export function doorSystemSetAutomaticState(doorHash, disable) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetAutomaticState(doorHash, disable);
}
/**
 * ```
 * Door lock states:
 * enum eDoorState
 * {
 * DOORSTATE_INVALID = -1,
 * DOORSTATE_UNLOCKED,
 * DOORSTATE_LOCKED_UNBREAKABLE,
 * DOORSTATE_LOCKED_BREAKABLE,
 * DOORSTATE_HOLD_OPEN_POSITIVE,
 * DOORSTATE_HOLD_OPEN_NEGATIVE
 * };
 * ```
 * Hash: 0x6BAB9442830C7F53 | ApiSet: undefined
 */
export function doorSystemSetDoorState(doorHash, state) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetDoorState(doorHash, state);
}
/**
 * Hash: 0x758A5C1B3B1E1990 | ApiSet: undefined
 */
export function forcePickupRegenerate(p0) {
    ForcePickupRegenerate(p0);
}
/**
 * ```
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * ```
 * Hash: 0xB6E6FBA95C7324AC | ApiSet: undefined
 */
export function doorSystemSetOpenRatio(doorHash, ajar, forceUpdate) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    DoorSystemSetOpenRatio(doorHash, ajar, forceUpdate);
}
/**
 * Hash: 0xF9C1681347C8BD15 | ApiSet: undefined
 */
export function fixObjectFragment(object) {
    FixObjectFragment(object);
}
/**
 * Hash: 0x44B09A23D728045A | ApiSet: undefined
 */
export function getAmmoTypeFromPickupType(pickupHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    return GetAmmoTypeFromPickupType(pickupHash);
}
/**
 * Hash: 0xB6FBFD079B8D0596 | ApiSet: undefined
 */
export function getObjectFragmentDamageHealth(p0, p1) {
    return GetObjectFragmentDamageHealth(p0, p1);
}
/**
 * ```
 * missionScriptObject - if true won't return mission script objects
 * scriptHostObject - if true won't return script host objects
 * networkObject - if true won't return networked objects
 * ```
 * Hash: 0xE143FA2249364369 | ApiSet: undefined
 */
export function getClosestObjectOfType(position, radius, modelHash, missionScriptObject, scriptHostObject, networkObject) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetClosestObjectOfType(position.x, position.y, position.z, radius, modelHash, missionScriptObject, scriptHostObject, networkObject);
}
/**
 * Hash: 0x163E252DE035A133 | ApiSet: undefined
 */
export function getOffsetFromCoordAndHeadingInWorldCoords(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset) {
    return new Vector3(GetOffsetFromCoordAndHeadingInWorldCoords(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset));
}
/**
 * Hash: 0xFA3B61EC249B4674 | ApiSet: undefined
 */
export function getLightIntensityFromObject(object) {
    return GetLightIntensityFromObject(object);
}
/**
 * Hash: 0x225B8B35C88029B3 | ApiSet: undefined
 */
export function getPickupCoords(pickup) {
    return new Vector3(GetPickupCoords(pickup));
}
/**
 * ```
 * Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
 * ```
 * Hash: 0x3397CD4E0353DFBA | ApiSet: undefined
 */
export function getObjectLightIntensity(object) {
    return GetObjectLightIntensity(object);
}
/**
 * Hash: 0xB48FCED898292E52 | ApiSet: undefined
 */
export function getRayfireMapObject(position, radius, name) {
    return GetRayfireMapObject(position.x, position.y, position.z, radius, name);
}
/**
 * Hash: 0x5099BC55630B25AE | ApiSet: undefined
 */
export function getPickupObject(pickup) {
    return GetPickupObject(pickup);
}
/**
 * Hash: 0x260EE4FDBDF4DB01 | ApiSet: undefined
 */
export function getRayfireMapObjectAnimPhase(object) {
    return GetRayfireMapObjectAnimPhase(object);
}
/**
 * Hash: 0x6E16BC2503FF1FF0 | ApiSet: undefined
 */
export function getSafePickupCoords(p0, p1, p2, p3, p4, p5) {
    return new Vector3(GetSafePickupCoords(p0, p1, p2, p3, p4, p5));
}
/**
 * Hash: 0x08F96CA6C551AD51 | ApiSet: undefined
 */
export function getWeaponTypeFromPickupType(pickupHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    return GetWeaponTypeFromPickupType(pickupHash);
}
/**
 * Hash: 0x899BA936634A322E | ApiSet: undefined
 */
export function getStateOfRayfireMapObject(object) {
    return GetStateOfRayfireMapObject(object);
}
/**
 * Hash: 0x761B0E69AC4D007E | ApiSet: undefined
 */
export function hasClosestObjectOfTypeBeenBroken(p0, p1, p2, p3, modelHash, p5) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return HasClosestObjectOfTypeBeenBroken(p0, p1, p2, p3, modelHash, p5);
}
/**
 * Hash: 0x8ABFB70C49CC43E2 | ApiSet: undefined
 */
export function hasObjectBeenBroken(p0) {
    return HasObjectBeenBroken(p0);
}
/**
 * Hash: 0x80EC48E6679313F9 | ApiSet: undefined
 */
export function hasPickupBeenCollected(pickup) {
    return HasPickupBeenCollected(pickup);
}
/**
 * Hash: 0xC531EE8A1145A149 | ApiSet: undefined
 */
export function isDoorClosed(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return IsDoorClosed(doorHash);
}
/**
 * Hash: 0x2777150CC7D9365E | ApiSet: undefined
 */
export function hidePickupObject(pickupObject, toggle) {
    HidePickupObject(pickupObject, toggle);
}
/**
 * Hash: 0xB5DED7B65C604FDF | ApiSet: undefined
 */
export function isDoorRegisteredWithNetwork(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return IsDoorRegisteredWithNetwork(doorHash);
}
/**
 * ```
 * Returns true if door is alredy registered with owner
 * ```
 * Hash: 0x4F89DAD4156BA145 | ApiSet: undefined
 */
export function isDoorRegisteredWithOwner(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return IsDoorRegisteredWithOwner(doorHash);
}
/**
 * Hash: 0xC153C43EA202C8C1 | ApiSet: undefined
 */
export function isDoorRegisteredWithSystem(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    return IsDoorRegisteredWithSystem(doorHash);
}
/**
 * Hash: 0x8B32ACE6326A7546 | ApiSet: undefined
 */
export function isObjectVisible(object) {
    return IsObjectVisible(object);
}
/**
 * Hash: 0x0378C08504160D0D | ApiSet: undefined
 */
export function isObjectAPortablePickup(object) {
    return IsObjectAPortablePickup(object);
}
/**
 * Hash: 0x2A70BAE8883E4C81 | ApiSet: undefined
 */
export function isPointInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
    return IsPointInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
}
/**
 * Hash: 0x08C5825A2932EA7B | ApiSet: undefined
 */
export function _0x08C5825A2932EA7B(p0) {
    return Citizen.invokeNative('0x08C5825A2932EA7B', p0);
}
/**
 * Hash: 0x007BD043587F7C82 | ApiSet: undefined
 */
export function isPickupTypeValid(pickupHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    return IsPickupTypeValid(pickupHash);
}
/**
 * ```
 * _PRE* or _Q* or _RE*
 * ```
 * Hash: 0x1461DF6DB886BE3F | ApiSet: undefined
 */
export function makeItemCarriable(object) {
    MakeItemCarriable(object);
}
/**
 * ```
 * _SET_A(MBIENT_PICKUP_?)*
 * ```
 * Hash: 0x1F5E07E14A86FAFC | ApiSet: undefined
 */
export function _0x1F5E07E14A86FAFC(p0) {
    Citizen.invokeNative('0x1F5E07E14A86FAFC', p0);
}
/**
 * ```
 * Params: p1 = 23 in R* Scripts
 * ```
 * Hash: 0x0943113E02322164 | ApiSet: undefined
 */
export function _0x0943113E02322164(object, p1) {
    return Citizen.invokeNative('0x0943113E02322164', object, p1);
}
/**
 * Hash: 0x0C0A373D181BF900 | ApiSet: undefined
 */
export function _0x0C0A373D181BF900(p0) {
    Citizen.invokeNative('0x0C0A373D181BF900', p0);
}
/**
 * Hash: 0x20135AF9C10D2A3D | ApiSet: undefined
 */
export function _0x20135AF9C10D2A3D(p0) {
    return Citizen.invokeNative('0x20135AF9C10D2A3D', p0);
}
/**
 * Hash: 0x235C863DA77BD88D | ApiSet: undefined
 */
export function _0x235C863DA77BD88D(p0, p1, p2) {
    return Citizen.invokeNative('0x235C863DA77BD88D', p0, p1, p2);
}
/**
 * Hash: 0x250EBB11E81A10BE | ApiSet: undefined
 */
export function _0x250EBB11E81A10BE(p0) {
    return Citizen.invokeNative('0x250EBB11E81A10BE', p0);
}
/**
 * Hash: 0x22031584496CFB70 | ApiSet: undefined
 */
export function _0x22031584496CFB70(p0, p1) {
    Citizen.invokeNative('0x22031584496CFB70', p0, p1);
}
/**
 * Hash: 0x3A77DAE8B4FD7586 | ApiSet: undefined
 */
export function _0x3A77DAE8B4FD7586(p0, p1) {
    Citizen.invokeNative('0x3A77DAE8B4FD7586', p0, p1);
}
/**
 * Hash: 0x2BF1953C0C21AC88 | ApiSet: undefined
 */
export function _0x2BF1953C0C21AC88(p0) {
    return Citizen.invokeNative('0x2BF1953C0C21AC88', p0);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x3DF1A0A58498E209 | ApiSet: undefined
 */
export function _0x3DF1A0A58498E209(object, p1) {
    Citizen.invokeNative('0x3DF1A0A58498E209', object, p1);
}
/**
 * Hash: 0x3E2616E7EA539480 | ApiSet: undefined
 */
export function _0x3E2616E7EA539480(p0) {
    return Citizen.invokeNative('0x3E2616E7EA539480', p0);
}
/**
 * Hash: 0x46CBCF0E98A4E156 | ApiSet: undefined
 */
export function _0x46CBCF0E98A4E156(p0, p1) {
    Citizen.invokeNative('0x46CBCF0E98A4E156', p0, p1);
}
/**
 * Hash: 0x491439AEF410A2FC | ApiSet: undefined
 */
export function _0x491439AEF410A2FC(p0) {
    Citizen.invokeNative('0x491439AEF410A2FC', p0);
}
/**
 * Hash: 0x4AE07EBA3462C5D5 | ApiSet: undefined
 */
export function _0x4AE07EBA3462C5D5(p0, p1) {
    Citizen.invokeNative('0x4AE07EBA3462C5D5', p0, p1);
}
/**
 * Hash: 0x4D8611DFE1126478 | ApiSet: undefined
 */
export function _0x4D8611DFE1126478(p0) {
    return Citizen.invokeNative('0x4D8611DFE1126478', p0);
}
/**
 * Hash: 0x5230BF34EB0EC645 | ApiSet: undefined
 */
export function _0x5230BF34EB0EC645(p0) {
    Citizen.invokeNative('0x5230BF34EB0EC645', p0);
}
/**
 * Hash: 0x57C242543B7B8FB9 | ApiSet: undefined
 */
export function _0x57C242543B7B8FB9(p0, p1) {
    Citizen.invokeNative('0x57C242543B7B8FB9', p0, p1);
}
/**
 * Hash: 0x58DE624FA7FB0E7F | ApiSet: undefined
 */
export function _0x58DE624FA7FB0E7F(p0) {
    return Citizen.invokeNative('0x58DE624FA7FB0E7F', p0);
}
/**
 * Hash: 0x614D0B4533F842D3 | ApiSet: undefined
 */
export function _0x614D0B4533F842D3(p0) {
    return Citizen.invokeNative('0x614D0B4533F842D3', p0);
}
/**
 * Hash: 0x6579860A5558524A | ApiSet: undefined
 */
export function _0x6579860A5558524A(p0, p1) {
    Citizen.invokeNative('0x6579860A5558524A', p0, p1);
}
/**
 * Hash: 0x7D4411D6736CD295 | ApiSet: undefined
 */
export function _0x7D4411D6736CD295(p0, p1) {
    return Citizen.invokeNative('0x7D4411D6736CD295', p0, p1);
}
/**
 * Hash: 0x6E2AA80BB0C03728 | ApiSet: undefined
 */
export function _0x6E2AA80BB0C03728(p0, p1) {
    return Citizen.invokeNative('0x6E2AA80BB0C03728', p0, p1);
}
/**
 * Hash: 0x7F458B543006C8FE | ApiSet: undefined
 */
export function _0x7F458B543006C8FE(p0, p1) {
    Citizen.invokeNative('0x7F458B543006C8FE', p0, p1);
}
/**
 * Hash: 0x7FCD49388BC9B775 | ApiSet: undefined
 */
export function _0x7FCD49388BC9B775(p0, p1) {
    Citizen.invokeNative('0x7FCD49388BC9B775', p0, p1);
}
/**
 * Hash: 0xA93F925F1942E434 | ApiSet: undefined
 */
export function _0xA93F925F1942E434(p0, p1) {
    Citizen.invokeNative('0xA93F925F1942E434', p0, p1);
}
/**
 * Hash: 0x9A74A9CADFA8A598 | ApiSet: undefined
 */
export function _0x9A74A9CADFA8A598(p0) {
    Citizen.invokeNative('0x9A74A9CADFA8A598', p0);
}
/**
 * Hash: 0xAAACF33CBF9B990A | ApiSet: undefined
 */
export function _0xAAACF33CBF9B990A(p0, p1) {
    Citizen.invokeNative('0xAAACF33CBF9B990A', p0, p1);
}
/**
 * Hash: 0x9F52AD67D1A91BAD | ApiSet: undefined
 */
export function _0x9F52AD67D1A91BAD(p0, p1) {
    return Citizen.invokeNative('0x9F52AD67D1A91BAD', p0, p1);
}
/**
 * Hash: 0xAEE6C800E124CFE1 | ApiSet: undefined
 */
export function _0xAEE6C800E124CFE1(p0, p1) {
    Citizen.invokeNative('0xAEE6C800E124CFE1', p0, p1);
}
/**
 * Hash: 0xACD4F9831DFAD7F5 | ApiSet: undefined
 */
export function _0xACD4F9831DFAD7F5(p0) {
    return Citizen.invokeNative('0xACD4F9831DFAD7F5', p0);
}
/**
 * Hash: 0xB3B1546D23DF8DE1 | ApiSet: undefined
 */
export function _0xB3B1546D23DF8DE1(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xB3B1546D23DF8DE1', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xC07B91B996C1DE89 | ApiSet: undefined
 */
export function _0xC07B91B996C1DE89(p0, p1) {
    Citizen.invokeNative('0xC07B91B996C1DE89', p0, p1);
}
/**
 * Hash: 0xCBFBD38F2E0A263B | ApiSet: undefined
 */
export function _0xCBFBD38F2E0A263B(p0, p1) {
    Citizen.invokeNative('0xCBFBD38F2E0A263B', p0, p1);
}
/**
 * ```
 * _SET_OBJECT_*
 * ```
 * Hash: 0xCAAF2BCCFEF37F77 | ApiSet: undefined
 */
export function _0xCAAF2BCCFEF37F77(object, p1) {
    Citizen.invokeNative('0xCAAF2BCCFEF37F77', object, p1);
}
/**
 * Hash: 0xD503D6F0986D58BC | ApiSet: undefined
 */
export function _0xD503D6F0986D58BC(p0, p1) {
    Citizen.invokeNative('0xD503D6F0986D58BC', p0, p1);
}
/**
 * Hash: 0xCEAB54F4632C6EF6 | ApiSet: undefined
 */
export function _0xCEAB54F4632C6EF6(p0, p1) {
    Citizen.invokeNative('0xCEAB54F4632C6EF6', p0, p1);
}
/**
 * Hash: 0xD91E55B6C005EB09 | ApiSet: undefined
 */
export function _0xD91E55B6C005EB09(p0, p1) {
    return Citizen.invokeNative('0xD91E55B6C005EB09', p0, p1);
}
/**
 * Hash: 0xDFA1237F5228263F | ApiSet: undefined
 */
export function _0xDFA1237F5228263F(p0, p1) {
    Citizen.invokeNative('0xDFA1237F5228263F', p0, p1);
}
/**
 * Hash: 0xDE116ECFFDD4B997 | ApiSet: undefined
 */
export function _0xDE116ECFFDD4B997(p0, p1) {
    Citizen.invokeNative('0xDE116ECFFDD4B997', p0, p1);
}
/**
 * Hash: 0xE157A8A336C7F04A | ApiSet: undefined
 */
export function _0xE157A8A336C7F04A(p0, p1) {
    Citizen.invokeNative('0xE157A8A336C7F04A', p0, p1);
}
/**
 * Hash: 0xF65EDE5D02A7A760 | ApiSet: undefined
 */
export function _0xF65EDE5D02A7A760(p0, p1) {
    Citizen.invokeNative('0xF65EDE5D02A7A760', p0, p1);
}
/**
 * Hash: 0xEBA314768FB35D58 | ApiSet: undefined
 */
export function _0xEBA314768FB35D58(p0) {
    return Citizen.invokeNative('0xEBA314768FB35D58', p0);
}
/**
 * Hash: 0xF6E88489B4E6EBE5 | ApiSet: undefined
 */
export function _0xF6E88489B4E6EBE5(p0, p1) {
    Citizen.invokeNative('0xF6E88489B4E6EBE5', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xFA99E8E575F2FEF8 | ApiSet: undefined
 */
export function _0xFA99E8E575F2FEF8(p0) {
    return Citizen.invokeNative('0xFA99E8E575F2FEF8', p0);
}
/**
 * Hash: 0x58A850EAEE20FAA3 | ApiSet: undefined
 */
export function placeObjectOnGroundProperly(object, p1) {
    return PlaceObjectOnGroundProperly(object, p1);
}
/**
 * Hash: 0x27F9D613092159CF | ApiSet: undefined
 */
export function removeAllPickupsOfType(pickupHash) {
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    RemoveAllPickupsOfType(pickupHash);
}
/**
 * Hash: 0x3288D8ACAECD2AB2 | ApiSet: undefined
 */
export function removePickup(pickup) {
    RemovePickup(pickup);
}
/**
 * Hash: 0xADBE4809F19F927A | ApiSet: undefined
 */
export function onlyCleanUpObjectWhenOutOfRange(object) {
    OnlyCleanUpObjectWhenOutOfRange(object);
}
/**
 * Hash: 0x92AEFB5F6E294023 | ApiSet: undefined
 */
export function preventCollectionOfPortablePickup(object, p1, p2) {
    PreventCollectionOfPortablePickup(object, p1, p2);
}
/**
 * Hash: 0x464D8E1427156FE4 | ApiSet: undefined
 */
export function removeDoorFromSystem(doorHash) {
    if (typeof doorHash === 'string')
        doorHash = this.getHashKey(doorHash);
    RemoveDoorFromSystem(doorHash);
}
/**
 * Hash: 0x406137F8EF90EAF5 | ApiSet: undefined
 */
export function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(object, toggle) {
    SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object, toggle);
}
/**
 * Hash: 0xAC9AE68F0A463752 | ApiSet: undefined
 */
export function setAmbientPickupLifetime(lifetime) {
    SetAmbientPickupLifetime(lifetime);
}
/**
 * Hash: 0xE124889AE0521FCF | ApiSet: undefined
 */
export function setCustomTexturesOnObject(object, txdHash, p2, p3) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    SetCustomTexturesOnObject(object, txdHash, p2, p3);
}
/**
 * Hash: 0xF49574E2332A8F06 | ApiSet: undefined
 */
export function setLightIntensityForObject(object, lightIntensity) {
    SetLightIntensityForObject(object, lightIntensity);
}
/**
 * ```
 * Sets object as auto-jumpable by horse.
 * ```
 * Hash: 0x98D2D9C053A1F449 | ApiSet: undefined
 */
export function setAutoJumpableByHorse(object, p1) {
    SetAutoJumpableByHorse(object, p1);
}
/**
 * Hash: 0x04D1D4E411CE52D0 | ApiSet: undefined
 */
export function setLightScatteringDisabledForObject(object, disable) {
    SetLightScatteringDisabledForObject(object, disable);
}
/**
 * Hash: 0xF538081986E49E9D | ApiSet: undefined
 */
export function setForceObjectThisFrame(position, p3) {
    SetForceObjectThisFrame(position.x, position.y, position.z, p3);
}
/**
 * ```
 * Params: value = 0.0 - 586.67 (?)
 * ```
 * Hash: 0x63E39F09310F481F | ApiSet: undefined
 */
export function setLightTranslucencyForObject(object, value) {
    SetLightTranslucencyForObject(object, value);
}
/**
 * Hash: 0x78857FC65CADB909 | ApiSet: undefined
 */
export function setLocalPlayerCanCollectPortablePickups(toggle) {
    SetLocalPlayerCanCollectPortablePickups(toggle);
}
/**
 * Hash: 0xF40AB58D83C35027 | ApiSet: undefined
 */
export function resetObjectVelocity(object) {
    ResetObjectVelocity(object);
}
/**
 * ```
 * Maximum amount of pickup models that can be disallowed is 10.
 * ```
 * Hash: 0x88EAEC617CD26926 | ApiSet: undefined
 */
export function setLocalPlayerPermittedToCollectPickupsWithModel(modelHash, toggle) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    SetLocalPlayerPermittedToCollectPickupsWithModel(modelHash, toggle);
}
/**
 * Hash: 0x0BF3B3BD47D79C08 | ApiSet: undefined
 */
export function setMaxNumPortablePickupsCarriedByPlayer(modelHash, p1) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    SetMaxNumPortablePickupsCarriedByPlayer(modelHash, p1);
}
/**
 * ```
 * Sets object as not jumpable by horse.
 * ```
 * Hash: 0xE1C708BA4885796B | ApiSet: undefined
 */
export function setNotJumpableByHorse(object, p1) {
    SetNotJumpableByHorse(object, p1);
}
/**
 * ```
 * Params: p2 controls whether to make pickups usable/collectable or not in networked games
 * ```
 * Hash: 0x94F3D956BFAEAE18 | ApiSet: undefined
 */
export function setNetworkPickupUsableForPlayer(player, pickupHash, isUsable) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof pickupHash === 'string')
        pickupHash = this.getHashKey(pickupHash);
    SetNetworkPickupUsableForPlayer(_player, pickupHash, isUsable);
}
/**
 * Hash: 0x4D89D607CB3DD1D2 | ApiSet: undefined
 */
export function setObjectAllowLowLodBuoyancy(object, toggle) {
    SetObjectAllowLowLodBuoyancy(object, toggle);
}
/**
 * Hash: 0xFFB99FFD17F65889 | ApiSet: undefined
 */
export function setObjectBreakScale(object, scale) {
    SetObjectBreakScale(object, scale);
}
/**
 * ```
 * Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
 * ```
 * Hash: 0x2797C633DCDBBAC5 | ApiSet: undefined
 */
export function setObjectBurnLevel(object, burnLevel, affectAsh) {
    SetObjectBurnLevel(object, burnLevel, affectAsh);
}
/**
 * Hash: 0xC8E21C1677DC5E6F | ApiSet: undefined
 */
export function setObjectBurnIntensity(object, intensity) {
    SetObjectBurnIntensity(object, intensity);
}
/**
 * Hash: 0x7D7285EFEAB5AF15 | ApiSet: undefined
 */
export function setObjectBurnOpacity(object, opacity) {
    SetObjectBurnOpacity(object, opacity);
}
/**
 * ```
 * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
 * Other parameters seem to be unknown.
 * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
 * p3: seems similar to p2
 * p4: makes obj fall slower the higher the value
 * p5: similar to p4
 * ```
 * Hash: 0xF6DF6E90DE7DF90F | ApiSet: undefined
 */
export function setObjectPhysicsParams(object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy) {
    SetObjectPhysicsParams(object, weight, p2, p3, p4, p5, gravity, p7, p8, p9, p10, buoyancy);
}
/**
 * ```
 * p2 is usually the same as speed parameter
 * ```
 * Hash: 0x646564A3B7DF68F8 | ApiSet: undefined
 */
export function setObjectBurnSpeed(object, speed, p2) {
    SetObjectBurnSpeed(object, speed, p2);
}
/**
 * Hash: 0xEB6F1A9B5510A5D2 | ApiSet: undefined
 */
export function setObjectTakesDamageFromCollidingWithBuildings(object, enabled) {
    SetObjectTakesDamageFromCollidingWithBuildings(object, enabled);
}
/**
 * Hash: 0xB7017DA4D498269F | ApiSet: undefined
 */
export function setObjectKickable(object, kickable) {
    SetObjectKickable(object, kickable);
}
/**
 * Hash: 0x8A7391690F5AFD81 | ApiSet: undefined
 */
export function setObjectTargettable(object, targettable) {
    SetObjectTargettable(object, targettable);
}
/**
 * ```
 * When p1 and p2 are true you can focus on the object (similar to when you focus a ped)
 * ```
 * Hash: 0xA22712E8471AA08E | ApiSet: undefined
 */
export function setObjectTargettableFocus(object, p1, p2) {
    SetObjectTargettableFocus(object, p1, p2);
}
/**
 * Hash: 0x581EDBE56E8D62C9 | ApiSet: undefined
 */
export function setObjectTargettable2(object, targettable) {
    SetObjectTargettable2(object, targettable);
}
/**
 * Hash: 0x00EE08603EADEE92 | ApiSet: undefined
 */
export function setPickupCollectableOnMount(object) {
    SetPickupCollectableOnMount(object);
}
/**
 * ```
 * Alt name: _SET_OBJECT_TINT
 * ```
 * Hash: 0x971DA0055324D033 | ApiSet: undefined
 */
export function setObjectTintIndex(object, textureVariation) {
    SetObjectTintIndex(object, textureVariation);
}
/**
 * Hash: 0x318516E02DE3ECE2 | ApiSet: undefined
 */
export function setPickupGenerationRangeMultiplier(multiplier) {
    SetPickupGenerationRangeMultiplier(multiplier);
}
/**
 * Hash: 0x634C19521485AB25 | ApiSet: undefined
 */
export function setPickupDoNotAutoPlaceOnGround(pickupObject) {
    SetPickupDoNotAutoPlaceOnGround(pickupObject);
}
/**
 * Hash: 0x81218CE01B672219 | ApiSet: undefined
 */
export function setPickupHiddenWhenUncollectable(p0, p1) {
    SetPickupHiddenWhenUncollectable(p0, p1);
}
/**
 * Hash: 0x92E87F60F21A0C3A | ApiSet: undefined
 */
export function setPickupNotLootable(p0, p1) {
    SetPickupNotLootable(p0, p1);
}
/**
 * Hash: 0xEB9740A38FD6D634 | ApiSet: undefined
 */
export function setPickupParticleFxSpawn(p0, p1) {
    SetPickupParticleFxSpawn(p0, p1);
}
/**
 * Hash: 0x4A8CB328CD6F1C9B | ApiSet: undefined
 */
export function setPickupUncollectable(p0, p1) {
    SetPickupUncollectable(p0, p1);
}
/**
 * Hash: 0x78015C9B4B3ECC9D | ApiSet: undefined
 */
export function setPickupRegenerationTime(pickup, duration) {
    SetPickupRegenerationTime(pickup, duration);
}
/**
 * Hash: 0x1607C7D9B3021DF5 | ApiSet: undefined
 */
export function setPickupParticleFxHighlight(p0, p1) {
    SetPickupParticleFxHighlight(p0, p1);
}
/**
 * Hash: 0x53E0DF1A2A3CF0CA | ApiSet: undefined
 */
export function setTeamPickupObject(object, p1, p2) {
    SetTeamPickupObject(object, p1, p2);
}
/**
 * Hash: 0x5C29F698D404C5E1 | ApiSet: undefined
 */
export function setStateOfRayfireMapObject(object, state) {
    SetStateOfRayfireMapObject(object, state);
}
/**
 * Hash: 0xF92099527DB8E2A7 | ApiSet: undefined
 */
export function suppressPickupRewardType(rewardType, suppress) {
    SuppressPickupRewardType(rewardType, suppress);
}
/**
 * Hash: 0x2FDFF4107B8C1147 | ApiSet: undefined
 */
export function slideObject(object, toX, toY, toZ, speedX, speedY, speedZ, collision) {
    return SlideObject(object, toX, toY, toZ, speedX, speedY, speedZ, collision);
}
/**
 * Hash: 0xB252BC036B525623 | ApiSet: undefined
 */
export function trackObjectVisibility(object) {
    TrackObjectVisibility(object);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xCB0360EFEFB2580D | ApiSet: undefined
 */
export function clearControlLightEffect(control) {
    ClearControlLightEffect(control);
}
/**
 * Hash: 0x5F4B6931816E599B | ApiSet: undefined
 */
export function disableAllControlActions(control) {
    DisableAllControlActions(control);
}
/**
 * Hash: 0x351220255D64C155 | ApiSet: undefined
 */
export function enableControlAction(control, action, enableRelatedActions) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    EnableControlAction(control, action, enableRelatedActions);
}
/**
 * Hash: 0xA0CEFCEA390AAB9B | ApiSet: undefined
 */
export function clearControlShakeSuppressedId(control) {
    ClearControlShakeSuppressedId(control);
}
/**
 * ```
 * Returns time in ms since last input.
 * ```
 * Hash: 0xD7D22F5592AED8BA | ApiSet: undefined
 */
export function getControlHowLongAgo(control) {
    return GetControlHowLongAgo(control);
}
/**
 * Hash: 0xFE99B66D079CF6BC | ApiSet: undefined
 */
export function disableControlAction(control, action, disableRelatedActions) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    DisableControlAction(control, action, disableRelatedActions);
}
/**
 * Hash: 0xEC3C9B8D5327B563 | ApiSet: undefined
 */
export function getControlNormal(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return GetControlNormal(control, action);
}
/**
 * Hash: 0x5B84D09CEC5209C5 | ApiSet: undefined
 */
export function getControlUnboundNormal(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return GetControlUnboundNormal(control, action);
}
/**
 * Hash: 0xD95E79E8686D2C27 | ApiSet: undefined
 */
export function getControlValue(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return GetControlValue(control, action);
}
/**
 * ```
 * Gets the current control context. See: _SET_CONTROL_CONTEXT
 * ```
 * Hash: 0xDDCEB0F26C89C00F | ApiSet: undefined
 */
export function getCurrentControlContext(control) {
    return GetCurrentControlContext(control);
}
/**
 * Hash: 0x771DFCB24D19C2F6 | ApiSet: undefined
 */
export function getDisabledControlHowLongAgo(control) {
    return GetDisabledControlHowLongAgo(control);
}
/**
 * Hash: 0x11E65974A982637C | ApiSet: undefined
 */
export function getDisabledControlNormal(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return GetDisabledControlNormal(control, action);
}
/**
 * Hash: 0x6CD79468A1E595C6 | ApiSet: undefined
 */
export function haveControlsChanged(control) {
    return HaveControlsChanged(control);
}
/**
 * Hash: 0x4F8A26A890FD62FB | ApiSet: undefined
 */
export function getDisabledControlUnboundNormal(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return GetDisabledControlUnboundNormal(control, action);
}
/**
 * Hash: 0xBC0884BC590951C7 | ApiSet: undefined
 */
export function isControlActionValid(action, control) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlActionValid(action, control);
}
/**
 * Hash: 0x580417101DDB492F | ApiSet: undefined
 */
export function isControlJustPressed(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlJustPressed(control, action);
}
/**
 * Hash: 0x1CEA6BFDF248E5D9 | ApiSet: undefined
 */
export function isControlEnabled(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlEnabled(control, action);
}
/**
 * Hash: 0xF3A21BCD95725A4A | ApiSet: undefined
 */
export function isControlPressed(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlPressed(control, action);
}
/**
 * Hash: 0x50F940259D3841E6 | ApiSet: undefined
 */
export function isControlJustReleased(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlJustReleased(control, action);
}
/**
 * Hash: 0x648EE3E7F38877DD | ApiSet: undefined
 */
export function isControlReleased(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsControlReleased(control, action);
}
/**
 * Hash: 0x91AEF906BCA88877 | ApiSet: undefined
 */
export function isDisabledControlJustPressed(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsDisabledControlJustPressed(control, action);
}
/**
 * Hash: 0x77B612531280010D | ApiSet: undefined
 */
export function isLookInverted() {
    return IsLookInverted();
}
/**
 * ```
 * _IS_R* - _IS_S*
 * ```
 * Hash: 0x1252C029FC8EBB4D | ApiSet: undefined
 */
export function _0x1252C029FC8EBB4D() {
    return Citizen.invokeNative('0x1252C029FC8EBB4D');
}
/**
 * Hash: 0x305C8DCD79DA8B0F | ApiSet: undefined
 */
export function isDisabledControlJustReleased(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsDisabledControlJustReleased(control, action);
}
/**
 * Hash: 0xE2587F8CBBD87B1D | ApiSet: undefined
 */
export function isDisabledControlPressed(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return IsDisabledControlPressed(control, action);
}
/**
 * Hash: 0x43F35DDB2905D945 | ApiSet: undefined
 */
export function _0x43F35DDB2905D945(p0, p1) {
    return Citizen.invokeNative('0x43F35DDB2905D945', p0, p1);
}
/**
 * ```
 * padIndex is not used
 * ```
 * Hash: 0xA571D46727E2B718 | ApiSet: undefined
 */
export function isUsingKeyboardAndMouse(control) {
    return IsUsingKeyboardAndMouse(control);
}
/**
 * ```
 * rumbleCurve: common_0/data/rumblecurves.meta
 * ```
 * Hash: 0x5F217BC1190503D8 | ApiSet: undefined
 */
export function _0x5F217BC1190503D8(rumbleCurve, p1) {
    Citizen.invokeNative('0x5F217BC1190503D8', rumbleCurve, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x52C68E92D6E23ADD | ApiSet: undefined
 */
export function _0x52C68E92D6E23ADD(p0) {
    Citizen.invokeNative('0x52C68E92D6E23ADD', p0);
}
/**
 * Hash: 0x709BA8C08C5C008D | ApiSet: undefined
 */
export function _0x709BA8C08C5C008D() {
    Citizen.invokeNative('0x709BA8C08C5C008D');
}
/**
 * Hash: 0xBD629C1C4F501C80 | ApiSet: undefined
 */
export function _0xBD629C1C4F501C80(p0) {
    return Citizen.invokeNative('0xBD629C1C4F501C80', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x8290252FFF36ACB5 | ApiSet: undefined
 */
export function setControlLightEffectColor(control, red, green, blue) {
    SetControlLightEffectColor(control, red, green, blue);
}
/**
 * ```
 * Sets the current control context. Must be called every frame.
 * context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
 * For more information, see common:/data/control/settings.meta
 * https://github.com/femga/rdr3_discoveries/tree/master/Controls
 * ```
 * Hash: 0x2804658EB7D8A50B | ApiSet: undefined
 */
export function setControlContext(control, context) {
    if (typeof context === 'string')
        context = this.getHashKey(context);
    SetControlContext(control, context);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA45884DB10EC7EE3 | ApiSet: undefined
 */
export function setControlLightEffectFlashingColor(control, red, green, blue) {
    SetControlLightEffectFlashingColor(control, red, green, blue);
}
/**
 * Hash: 0x48B3886C1358D0D5 | ApiSet: undefined
 */
export function setControlShake(control, duration, frequency) {
    SetControlShake(control, duration, frequency);
}
/**
 * Hash: 0xF239400E16C23E08 | ApiSet: undefined
 */
export function setControlShakeSuppressedId(control, uniqueId) {
    SetControlShakeSuppressedId(control, uniqueId);
}
/**
 * ```
 * This is for simulating player input.
 * value is a float value from 0 - 1
 * control: see IS_CONTROL_ENABLED
 * ```
 * Hash: 0xE8A25867FBA3B05E | ApiSet: undefined
 */
export function setControlValueNextFrame(control, action, value) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    return SetControlValueNextFrame(control, action, value);
}
/**
 * Hash: 0x38C16A305E8CDC8D | ApiSet: undefined
 */
export function stopControlShake(control) {
    StopControlShake(control);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x14D29BB12D47F68C | ApiSet: undefined
 */
export function setControlTriggerShake(control, leftDuration, leftFrequency, rightDuration, rightFrequency) {
    SetControlTriggerShake(control, leftDuration, leftFrequency, rightDuration, rightFrequency);
}
/**
 * Hash: 0xEDE476E5EE29EDB1 | ApiSet: undefined
 */
export function setInputExclusive(control, action) {
    if (typeof action === 'string')
        action = this.getHashKey(action);
    SetInputExclusive(control, action);
}
/**
 * Hash: 0x387EAD7EE42F6685 | ApiSet: undefined
 */
export function addNavmeshRequiredRegion(x, y, radius) {
    AddNavmeshRequiredRegion(x, y, radius);
}
/**
 * Hash: 0xFCD5C8E06E502F5A | ApiSet: undefined
 */
export function addNavmeshBlockingObject(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    return AddNavmeshBlockingObject(p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x19C7567D2F2287D6 | ApiSet: undefined
 */
export function addNavmeshBlockingVolume(volume, flags) {
    return AddNavmeshBlockingVolume(volume, flags);
}
/**
 * Hash: 0xF7B79A50B905A30D | ApiSet: undefined
 */
export function areNodesLoadedForArea(x1, y1, x2, y2) {
    return AreNodesLoadedForArea(x1, y1, x2, y2);
}
/**
 * Hash: 0xDE0EA444735C1368 | ApiSet: undefined
 */
export function doesNavmeshBlockingVolumeExist(volume) {
    return DoesNavmeshBlockingVolumeExist(volume);
}
/**
 * Hash: 0x0EAEB0DB4B132399 | ApiSet: undefined
 */
export function doesNavmeshBlockingObjectExist(p0) {
    return DoesNavmeshBlockingObjectExist(p0);
}
/**
 * Hash: 0x132F52BBA570FE92 | ApiSet: undefined
 */
export function getClosestRoad(position, p3, p4, p10) {
    const result = GetClosestRoad(position.x, position.y, position.z, p3, p4, p10);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4]), result[3], result[4], result[5]];
}
/**
 * ```
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 * ```
 * Hash: 0x336511A34F2E5185 | ApiSet: undefined
 */
export function getApproxFloorForPoint(x, y) {
    return GetApproxFloorForPoint(x, y);
}
/**
 * Hash: 0x23CFFD4CCB243354 | ApiSet: undefined
 */
export function getClosestVehicleNodeWithHeading(position, nodeType, p6, p7) {
    const result = GetClosestVehicleNodeWithHeading(position.x, position.y, position.z, nodeType, p6, p7);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0x240A18690AE96513 | ApiSet: undefined
 */
export function getClosestVehicleNode(position, nodeType, p5, p6) {
    const result = GetClosestVehicleNode(position.x, position.y, position.z, nodeType, p5, p6);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0x869DAACBBE9FA006 | ApiSet: undefined
 */
export function getGpsBlipRouteFound() {
    return GetGpsBlipRouteFound();
}
/**
 * Hash: 0xBBB45C3CF5C8AA85 | ApiSet: undefined
 */
export function getGpsBlipRouteLength() {
    return GetGpsBlipRouteLength();
}
/**
 * Hash: 0x5A6D8DF6FBC5D0C4 | ApiSet: undefined
 */
export function getNthClosestVehicleNode(position, nthClosest, unknown1, unknown2, unknown3) {
    const result = GetNthClosestVehicleNode(position.x, position.y, position.z, nthClosest, unknown1, unknown2, unknown3);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Returns the nth closest vehicle node with a heading to a coord
 * ```
 * Hash: 0x4114EAA8A7F7766D | ApiSet: undefined
 */
export function getNthClosestVehicleNodeIdWithHeading(position, nthClosest, nodeFlags, zMeasureMult, zTolerance) {
    return GetNthClosestVehicleNodeIdWithHeading(position.x, position.y, position.z, nthClosest, nodeFlags, zMeasureMult, zTolerance);
}
/**
 * Hash: 0x2FAC235A6062F14A | ApiSet: undefined
 */
export function getNthClosestVehicleNodeFavourDirection(position, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11) {
    const result = GetNthClosestVehicleNodeFavourDirection(position.x, position.y, position.z, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0x591B40D4390DB54A | ApiSet: undefined
 */
export function getNthClosestVehicleNodeWithHeading(position, nthClosest, unknown2, unknown3, unknown4) {
    const result = GetNthClosestVehicleNodeWithHeading(position.x, position.y, position.z, nthClosest, unknown2, unknown3, unknown4);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2], result[3]];
}
/**
 * Hash: 0x116443008E5CEFC3 | ApiSet: undefined
 */
export function getNthClosestVehicleNodeId(position, nth, nodetype, p5, p6) {
    return GetNthClosestVehicleNodeId(position.x, position.y, position.z, nth, nodetype, p5, p6);
}
/**
 * Hash: 0x01708E8DD3FF8C65 | ApiSet: undefined
 */
export function getNumNavmeshesExistingInArea(p0, p1, p2, p3, p4, p5) {
    return GetNumNavmeshesExistingInArea(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x93E0DB8440B73A7D | ApiSet: undefined
 */
export function getRandomVehicleNode(position, radius, minLanes, avoidDeadEnds, avoidHighways) {
    const result = GetRandomVehicleNode(position.x, position.y, position.z, radius, minLanes, avoidDeadEnds, avoidHighways);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0xB61C8E878A4199CA | ApiSet: undefined
 */
export function getSafeCoordForPed(position, onGround, flags) {
    const result = GetSafeCoordForPed(position.x, position.y, position.z, onGround, flags);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0x28533DBDDF7C2C97 | ApiSet: undefined
 */
export function getVehicleNodeIsSwitchedOff(nodeID) {
    return GetVehicleNodeIsSwitchedOff(nodeID);
}
/**
 * Hash: 0xA3791B915B8B84C6 | ApiSet: undefined
 */
export function getSpawnDataForRoadNode(nodeId, position) {
    const result = GetSpawnDataForRoadNode(nodeId, position.x, position.y, position.z);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0x8E8D72FF24DEE1FB | ApiSet: undefined
 */
export function getVehicleNodePosition(nodeId) {
    const result = GetVehicleNodePosition(nodeId);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Gets a value indicating whether the specified position is on a road.
 * ```
 * Hash: 0x125BF4ABFC536B09 | ApiSet: undefined
 */
export function isPointOnRoad(position, vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPointOnRoad(position.x, position.y, position.z, _vehicle);
}
/**
 * ```
 * Returns whether navmesh for the region is loaded.
 * ```
 * Hash: 0xF813C7E63F9062A5 | ApiSet: undefined
 */
export function isNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2) {
    return IsNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2);
}
/**
 * Hash: 0x264E9A5CD78C338F | ApiSet: undefined
 */
export function _0x264E9A5CD78C338F(p0) {
    Citizen.invokeNative('0x264E9A5CD78C338F', p0);
}
/**
 * ```
 * Returns true if the id is non zero.
 * ```
 * Hash: 0x5829A02AF4F0B3CB | ApiSet: undefined
 */
export function isVehicleNodeIdValid(vehicleNodeId) {
    return IsVehicleNodeIdValid(vehicleNodeId);
}
/**
 * Hash: 0x4358BCF14C91761C | ApiSet: undefined
 */
export function _0x4358BCF14C91761C(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    Citizen.invokeNative('0x4358BCF14C91761C', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x34C9AF25649172D0 | ApiSet: undefined
 */
export function _0x34C9AF25649172D0(p0) {
    Citizen.invokeNative('0x34C9AF25649172D0', p0);
}
/**
 * Hash: 0x54F4D7B6670FBB5A | ApiSet: undefined
 */
export function _0x54F4D7B6670FBB5A(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0x54F4D7B6670FBB5A', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x4BDEBEA5702B97A9 | ApiSet: undefined
 */
export function _0x4BDEBEA5702B97A9(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0x4BDEBEA5702B97A9', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x5A3B54ADDF5472A3 | ApiSet: undefined
 */
export function _0x5A3B54ADDF5472A3(p0) {
    return Citizen.invokeNative('0x5A3B54ADDF5472A3', p0);
}
/**
 * Hash: 0x5A4E1A41E3A02AD0 | ApiSet: undefined
 */
export function _0x5A4E1A41E3A02AD0(p0, p1, p2) {
    Citizen.invokeNative('0x5A4E1A41E3A02AD0', p0, p1, p2);
}
/**
 * Hash: 0x6C3F12ECEB6D2E2A | ApiSet: undefined
 */
export function _0x6C3F12ECEB6D2E2A(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
    Citizen.invokeNative('0x6C3F12ECEB6D2E2A', xMin, yMin, zMin, xMax, yMax, zMax, p6, p7);
}
/**
 * Hash: 0x869A7015BD4606E9 | ApiSet: undefined
 */
export function _0x869A7015BD4606E9(p0) {
    Citizen.invokeNative('0x869A7015BD4606E9', p0);
}
/**
 * Hash: 0x665B21666351CB37 | ApiSet: undefined
 */
export function _0x665B21666351CB37(p0, p1, p2) {
    return Citizen.invokeNative('0x665B21666351CB37', p0, p1, p2);
}
/**
 * Hash: 0x6DAD6630AE4A74CB | ApiSet: undefined
 */
export function _0x6DAD6630AE4A74CB(p0, p1) {
    Citizen.invokeNative('0x6DAD6630AE4A74CB', p0, p1);
}
/**
 * Hash: 0xA33914B00CA55756 | ApiSet: undefined
 */
export function _0xA33914B00CA55756(p0, p1) {
    return Citizen.invokeNative('0xA33914B00CA55756', p0, p1);
}
/**
 * Hash: 0xAFE2AE66F6251C66 | ApiSet: undefined
 */
export function _0xAFE2AE66F6251C66(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
    Citizen.invokeNative('0xAFE2AE66F6251C66', xMin, yMin, zMin, xMax, yMax, zMax, p6, p7);
}
/**
 * Hash: 0xCA27A86CAA4E98ED | ApiSet: undefined
 */
export function _0xCA27A86CAA4E98ED(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0xCA27A86CAA4E98ED', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xB03944057FD735BA | ApiSet: undefined
 */
export function _0xB03944057FD735BA(p0, p1, p2) {
    Citizen.invokeNative('0xB03944057FD735BA', p0, p1, p2);
}
/**
 * Hash: 0xCF213A5FC3ABFC08 | ApiSet: undefined
 */
export function _0xCF213A5FC3ABFC08(p0, p1, p2) {
    Citizen.invokeNative('0xCF213A5FC3ABFC08', p0, p1, p2);
}
/**
 * Hash: 0xE5EF9DE716FF737E | ApiSet: undefined
 */
export function _0xE5EF9DE716FF737E(p0, p1, p2) {
    Citizen.invokeNative('0xE5EF9DE716FF737E', p0, p1, p2);
}
/**
 * ```
 * GPS disabled zone: p1 = 0
 * Clearing GPS disabled zone: p1 = 1
 * ```
 * Hash: 0xF2A2177AC848B3A8 | ApiSet: undefined
 */
export function _0xF2A2177AC848B3A8(volume, p1, p2) {
    Citizen.invokeNative('0xF2A2177AC848B3A8', volume, p1, p2);
}
/**
 * Hash: 0x44026E3DB3CED602 | ApiSet: undefined
 */
export function navmeshAssignNavmeshToVehicle(vehicle, navMeshName) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return NavmeshAssignNavmeshToVehicle(_vehicle, navMeshName);
}
/**
 * Hash: 0xEFC535C9FAF563B3 | ApiSet: undefined
 */
export function _0xEFC535C9FAF563B3(p0) {
    return Citizen.invokeNative('0xEFC535C9FAF563B3', p0);
}
/**
 * Hash: 0x527B97C203BB8606 | ApiSet: undefined
 */
export function navmeshDeactivateSwap(name) {
    return NavmeshDeactivateSwap(name);
}
/**
 * Hash: 0x7C334FF4D9215912 | ApiSet: undefined
 */
export function navmeshActivateSwap(name) {
    return NavmeshActivateSwap(name);
}
/**
 * Hash: 0x5AC0944C156E5F44 | ApiSet: undefined
 */
export function navmeshIsSwapActive(name) {
    return NavmeshIsSwapActive(name);
}
/**
 * ```
 * Called in scripts after finished with requested pathes. Immediately resets all values connected to the path handle except query status, which changes from 1 to 2 before eventually becoming fully invalidated to 0.
 * ```
 * Hash: 0x661BB1E1FF77742D | ApiSet: undefined
 */
export function navmeshClearRequestedPath(path) {
    return NavmeshClearRequestedPath(path);
}
/**
 * Hash: 0x495CFAB2924237C7 | ApiSet: undefined
 */
export function navmeshDoesSwapExist(name) {
    return NavmeshDoesSwapExist(name);
}
/**
 * ```
 * Returns the number of waypoints for a requested path (NAVMESH_REQUEST_PATH) if the query is completed (_NAVMESH_REQUESTED_QUERY_STATUS). For use with _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 * ```
 * Hash: 0xD470725E0703D22F | ApiSet: undefined
 */
export function navmeshRequestedPathNumWaypoints(path) {
    return NavmeshRequestedPathNumWaypoints(path);
}
/**
 * ```
 * Starts a nav mesh query for a path between coordinates with a given ped and returns a handle to be validated by _NAVMESH_REQUESTED_QUERY_STATUS and then _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
 * Only bit flag values used in scripts are 0, 23, and 29. 23 is used with dogs and horses. 29 with legendary animals.
 * ```
 * Hash: 0x348F211CA2404039 | ApiSet: undefined
 */
export function navmeshRequestPath(ped, x1, y1, z1, x2, y2, z2, bitFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return NavmeshRequestPath(_ped, x1, y1, z1, x2, y2, z2, bitFlag);
}
/**
 * ```
 * Returns a vector3 waypoint at the specified index for a path. Use _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS to get available indexes.
 * ```
 * Hash: 0x430F8319AE56C8A9 | ApiSet: undefined
 */
export function navmeshRequestedPathWaypointByIndex(path, waypointIndex) {
    return new Vector3(NavmeshRequestedPathWaypointByIndex(path, waypointIndex));
}
/**
 * ```
 * Returns true if a path of waypoints was found. Waypoints can be retrieved with _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS and _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 * ```
 * Hash: 0x8800776E410EB669 | ApiSet: undefined
 */
export function navmeshRequestedPathWaypointsFound(path) {
    return NavmeshRequestedPathWaypointsFound(path);
}
/**
 * Hash: 0x2C87C3E1C7B96EE2 | ApiSet: undefined
 */
export function removeNavmeshBlockingVolume(volume) {
    RemoveNavmeshBlockingVolume(volume);
}
/**
 * ```
 * Returns a bit flag for seemingly terrain within the waypoints in the path. Checked against bit value 2 to match water in the path, seems to always contain at least 1 though regardless of location/ped.
 * ```
 * Hash: 0xF61CFEDEAB627BFA | ApiSet: undefined
 */
export function navmeshRequestedPathWaypointsTerrain(path) {
    return NavmeshRequestedPathWaypointsTerrain(path);
}
/**
 * Hash: 0x07FB139B592FA687 | ApiSet: undefined
 */
export function requestPathNodesInAreaThisFrame(x1, y1, x2, y2) {
    return RequestPathNodesInAreaThisFrame(x1, y1, x2, y2);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x72751156E7678833 | ApiSet: undefined
 */
export function setIgnoreNoGpsFlag(toggle) {
    SetIgnoreNoGpsFlag(toggle);
}
/**
 * ```
 * Returns eNavMeshQueryStatus
 * enum eNavMeshQueryStatus
 * {
 * QS_NOT_FOUND,
 * QS_COMPLETE,
 * QS_PENDING
 * };
 * It appears that the pending state of 2 is at least also used when cleaning up a request (_NAVMESH_CLEAR_REQUESTED_PATH) or if a request never completes. Eventually queries are invalidated and return 0.
 * ```
 * Hash: 0x3A0F82F6EE2291C8 | ApiSet: undefined
 */
export function navmeshRequestedQueryStatus(path) {
    return NavmeshRequestedQueryStatus(path);
}
/**
 * Hash: 0xE04B48F2CC926253 | ApiSet: undefined
 */
export function setPedPathsBackToOriginal(p0, p1, p2, p3, p4, p5, p6) {
    SetPedPathsBackToOriginal(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x46399A7895957C0E | ApiSet: undefined
 */
export function removeNavmeshBlockingObject(p0) {
    RemoveNavmeshBlockingObject(p0);
}
/**
 * Hash: 0x34F060F4BF92E018 | ApiSet: undefined
 */
export function setPedPathsInArea(x1, y1, z1, x2, y2, z2, unknown, p7) {
    SetPedPathsInArea(x1, y1, z1, x2, y2, z2, unknown, p7);
}
/**
 * Hash: 0xD17672447692478E | ApiSet: undefined
 */
export function resetRoadsInVolume(volume, p1) {
    ResetRoadsInVolume(volume, p1);
}
/**
 * Hash: 0x0027501B9F3B407E | ApiSet: undefined
 */
export function setRoadsBackToOriginalInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    SetRoadsBackToOriginalInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x0B919E1FB47CC4E0 | ApiSet: undefined
 */
export function setAmbientPedRangeMultiplierThisFrame(multiplier) {
    SetAmbientPedRangeMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0xBF1A602B5BA52FEE | ApiSet: undefined
 */
export function setRoadsInArea(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7, p8) {
    SetRoadsInArea(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7, p8);
}
/**
 * Hash: 0x1EE7063B80FFC77C | ApiSet: undefined
 */
export function setRoadsBackToOriginal(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7) {
    SetRoadsBackToOriginal(xMin, yMin, zMin, xMax, yMax, zMax, p6, p7);
}
/**
 * Hash: 0x1A5AA1208AF5DB59 | ApiSet: undefined
 */
export function setRoadsInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    SetRoadsInAngledArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x4907D0E4FB26EE65 | ApiSet: undefined
 */
export function simulatedRouteDelete(p0) {
    SimulatedRouteDelete(p0);
}
/**
 * Hash: 0xC1799FAFD2FDF52B | ApiSet: undefined
 */
export function setRoadsInVolume(volume, p1, p2, p3) {
    SetRoadsInVolume(volume, p1, p2, p3);
}
/**
 * Hash: 0x2DD5F78D73B24172 | ApiSet: undefined
 */
export function simulatedRouteGetEta(p0) {
    return SimulatedRouteGetEta(p0);
}
/**
 * Hash: 0xFD5BB35AAB83FD48 | ApiSet: undefined
 */
export function simulatedRouteCreate(x1, y1, z1, x2, y2, z2, p6) {
    return SimulatedRouteCreate(x1, y1, z1, x2, y2, z2, p6);
}
/**
 * Hash: 0x240915043CB799D7 | ApiSet: undefined
 */
export function simulatedRouteIsLoaded(p0) {
    return SimulatedRouteIsLoaded(p0);
}
/**
 * Hash: 0x65A8196B8D7F5E0B | ApiSet: undefined
 */
export function simulatedRouteExists(p0) {
    return SimulatedRouteExists(p0);
}
/**
 * Hash: 0xA1A3DE1C215C7394 | ApiSet: undefined
 */
export function simulatedRouteTravelToPoint(p0, p1, p2) {
    SimulatedRouteTravelToPoint(p0, p1, p2);
}
/**
 * Hash: 0x7B204F88F6C3D287 | ApiSet: undefined
 */
export function forceDespawnPerschar(persChar) {
    ForceDespawnPerschar(persChar);
}
/**
 * Hash: 0x4F76E3676583D951 | ApiSet: undefined
 */
export function createPersistentCharacter(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return CreatePersistentCharacter(hash);
}
/**
 * Hash: 0x0CADC3A977997472 | ApiSet: undefined
 */
export function forceSpawnPerschar(persChar, p1) {
    return ForceSpawnPerschar(persChar, p1);
}
/**
 * Hash: 0x32A1E3B83D501096 | ApiSet: undefined
 */
export function getPerscharIndexFromPedIndex(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPerscharIndexFromPedIndex(_ped);
}
/**
 * Hash: 0xA00DF706C60173D1 | ApiSet: undefined
 */
export function getPerscharModelName(persCharHash) {
    if (typeof persCharHash === 'string')
        persCharHash = this.getHashKey(persCharHash);
    return GetPerscharModelName(persCharHash);
}
/**
 * Hash: 0xFC77C5B44D5FF7C0 | ApiSet: undefined
 */
export function deletePerschar(persChar) {
    DeletePerschar(persChar);
}
/**
 * Hash: 0x31C70A716CAE1FEE | ApiSet: undefined
 */
export function getPerscharPedIndex(persChar) {
    return GetPerscharPedIndex(persChar);
}
/**
 * Hash: 0xEB98B38CA60742D7 | ApiSet: undefined
 */
export function isPersistentCharacterDead(persChar) {
    return IsPersistentCharacterDead(persChar);
}
/**
 * Hash: 0x800DF3FC913355F3 | ApiSet: undefined
 */
export function isPersistentCharacterValid(persChar) {
    return IsPersistentCharacterValid(persChar);
}
/**
 * Hash: 0x0B3A99AB6713AA52 | ApiSet: undefined
 */
export function _0x0B3A99AB6713AA52(p0) {
    Citizen.invokeNative('0x0B3A99AB6713AA52', p0);
}
/**
 * Hash: 0x08FC896D2CB31FCC | ApiSet: undefined
 */
export function _0x08FC896D2CB31FCC(p0, p1) {
    return Citizen.invokeNative('0x08FC896D2CB31FCC', p0, p1);
}
/**
 * Hash: 0x112DDF56300BC6E5 | ApiSet: undefined
 */
export function _0x112DDF56300BC6E5(p0) {
    return Citizen.invokeNative('0x112DDF56300BC6E5', p0);
}
/**
 * Hash: 0x2E957AA81F2C61C9 | ApiSet: undefined
 */
export function _0x2E957AA81F2C61C9() {
    Citizen.invokeNative('0x2E957AA81F2C61C9');
}
/**
 * Hash: 0x4AFC7288C77238B3 | ApiSet: undefined
 */
export function _0x4AFC7288C77238B3(p0) {
    return Citizen.invokeNative('0x4AFC7288C77238B3', p0);
}
/**
 * Hash: 0x2DF89CD2ED1D0BDE | ApiSet: undefined
 */
export function _0x2DF89CD2ED1D0BDE(p0, p1) {
    Citizen.invokeNative('0x2DF89CD2ED1D0BDE', p0, p1);
}
/**
 * Hash: 0x535A66AAD2BF68F9 | ApiSet: undefined
 */
export function _0x535A66AAD2BF68F9(p0, p1) {
    Citizen.invokeNative('0x535A66AAD2BF68F9', p0, p1);
}
/**
 * Hash: 0x5EE6FCCC9C832CA2 | ApiSet: undefined
 */
export function _0x5EE6FCCC9C832CA2(p0) {
    return new Vector3(Citizen.invokeNative('0x5EE6FCCC9C832CA2', p0));
}
/**
 * Hash: 0x406808610220405B | ApiSet: undefined
 */
export function _0x406808610220405B(p0) {
    Citizen.invokeNative('0x406808610220405B', p0);
}
/**
 * Hash: 0x4F81EAD1DE8FA19B | ApiSet: undefined
 */
export function _0x4F81EAD1DE8FA19B(persChar) {
    Citizen.invokeNative('0x4F81EAD1DE8FA19B', persChar);
}
/**
 * Hash: 0x63AA2B8EB087886A | ApiSet: undefined
 */
export function _0x63AA2B8EB087886A(p0, p1) {
    Citizen.invokeNative('0x63AA2B8EB087886A', p0, p1);
}
/**
 * Hash: 0x59C7AD6FEA2AC449 | ApiSet: undefined
 */
export function _0x59C7AD6FEA2AC449(p0, p1, p2, p3) {
    Citizen.invokeNative('0x59C7AD6FEA2AC449', p0, p1, p2, p3);
}
/**
 * Hash: 0x6759BEE6762E140B | ApiSet: undefined
 */
export function _0x6759BEE6762E140B(persChar) {
    Citizen.invokeNative('0x6759BEE6762E140B', persChar);
}
/**
 * Hash: 0x70605812ABC9FF0F | ApiSet: undefined
 */
export function _0x70605812ABC9FF0F(p0, p1) {
    Citizen.invokeNative('0x70605812ABC9FF0F', p0, p1);
}
/**
 * Hash: 0x8B44273A92CD406C | ApiSet: undefined
 */
export function _0x8B44273A92CD406C(p0) {
    Citizen.invokeNative('0x8B44273A92CD406C', p0);
}
/**
 * Hash: 0x669C25840C6F7AE2 | ApiSet: undefined
 */
export function _0x669C25840C6F7AE2(p0, p1) {
    Citizen.invokeNative('0x669C25840C6F7AE2', p0, p1);
}
/**
 * Hash: 0x92690B0822493CE0 | ApiSet: undefined
 */
export function _0x92690B0822493CE0() {
    Citizen.invokeNative('0x92690B0822493CE0');
}
/**
 * Hash: 0x94995829ED15A598 | ApiSet: undefined
 */
export function _0x94995829ED15A598(p0) {
    return new Vector3(Citizen.invokeNative('0x94995829ED15A598', p0));
}
/**
 * Hash: 0x69786495C92A3044 | ApiSet: undefined
 */
export function _0x69786495C92A3044(p0) {
    return Citizen.invokeNative('0x69786495C92A3044', p0);
}
/**
 * Hash: 0x8AE4EFA464DAE42D | ApiSet: undefined
 */
export function _0x8AE4EFA464DAE42D(p0, p1) {
    Citizen.invokeNative('0x8AE4EFA464DAE42D', p0, p1);
}
/**
 * Hash: 0x8BC555034A5A5E8C | ApiSet: undefined
 */
export function _0x8BC555034A5A5E8C(p0, p1) {
    Citizen.invokeNative('0x8BC555034A5A5E8C', p0, p1);
}
/**
 * Hash: 0x9C7F95946E304778 | ApiSet: undefined
 */
export function _0x9C7F95946E304778(p0, p1) {
    return Citizen.invokeNative('0x9C7F95946E304778', p0, p1);
}
/**
 * Hash: 0xA4DCB3F0DD7488BD | ApiSet: undefined
 */
export function _0xA4DCB3F0DD7488BD(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xA4DCB3F0DD7488BD', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xA2B18FF8D39F6D87 | ApiSet: undefined
 */
export function _0xA2B18FF8D39F6D87(p0) {
    Citizen.invokeNative('0xA2B18FF8D39F6D87', p0);
}
/**
 * Hash: 0xA8120EBEAF290C7A | ApiSet: undefined
 */
export function _0xA8120EBEAF290C7A(p0) {
    return Citizen.invokeNative('0xA8120EBEAF290C7A', p0);
}
/**
 * Hash: 0xA8C406C2A56EDC16 | ApiSet: undefined
 */
export function _0xA8C406C2A56EDC16(persChar) {
    Citizen.invokeNative('0xA8C406C2A56EDC16', persChar);
}
/**
 * Hash: 0xB173599D61FAEB31 | ApiSet: undefined
 */
export function _0xB173599D61FAEB31() {
    Citizen.invokeNative('0xB173599D61FAEB31');
}
/**
 * Hash: 0xB65E7F733956CF25 | ApiSet: undefined
 */
export function _0xB65E7F733956CF25(persChar) {
    Citizen.invokeNative('0xB65E7F733956CF25', persChar);
}
/**
 * Hash: 0xBB68908CD11AEBDC | ApiSet: undefined
 */
export function _0xBB68908CD11AEBDC(persChar) {
    Citizen.invokeNative('0xBB68908CD11AEBDC', persChar);
}
/**
 * Hash: 0xCEB40B678E403759 | ApiSet: undefined
 */
export function _0xCEB40B678E403759(p0) {
    return Citizen.invokeNative('0xCEB40B678E403759', p0);
}
/**
 * Hash: 0xD4B614179BCD0654 | ApiSet: undefined
 */
export function _0xD4B614179BCD0654(p0) {
    Citizen.invokeNative('0xD4B614179BCD0654', p0);
}
/**
 * Hash: 0xD95D777F828B2BBB | ApiSet: undefined
 */
export function _0xD95D777F828B2BBB(p0) {
    Citizen.invokeNative('0xD95D777F828B2BBB', p0);
}
/**
 * Hash: 0xDC9655D47DEC0353 | ApiSet: undefined
 */
export function _0xDC9655D47DEC0353(p0) {
    return Citizen.invokeNative('0xDC9655D47DEC0353', p0);
}
/**
 * Hash: 0xE0E65E0D261F7507 | ApiSet: undefined
 */
export function _0xE0E65E0D261F7507(p0) {
    Citizen.invokeNative('0xE0E65E0D261F7507', p0);
}
/**
 * Hash: 0xE4C51A8A3BD1664C | ApiSet: undefined
 */
export function _0xE4C51A8A3BD1664C(p0) {
    return Citizen.invokeNative('0xE4C51A8A3BD1664C', p0);
}
/**
 * Hash: 0xEFC5C6670E0B99BA | ApiSet: undefined
 */
export function _0xEFC5C6670E0B99BA() {
    Citizen.invokeNative('0xEFC5C6670E0B99BA');
}
/**
 * Hash: 0xEC254C2C9B0F08F1 | ApiSet: undefined
 */
export function _0xEC254C2C9B0F08F1(p0, p1) {
    return Citizen.invokeNative('0xEC254C2C9B0F08F1', p0, p1);
}
/**
 * Hash: 0xFCC6DB8DBE709BC8 | ApiSet: undefined
 */
export function _0xFCC6DB8DBE709BC8(persChar) {
    Citizen.invokeNative('0xFCC6DB8DBE709BC8', persChar);
}
/**
 * Hash: 0xF8DE7154F7D1458F | ApiSet: undefined
 */
export function _0xF8DE7154F7D1458F(p0) {
    return Citizen.invokeNative('0xF8DE7154F7D1458F', p0);
}
/**
 * Hash: 0x631CD2D77FDC0316 | ApiSet: undefined
 */
export function retaskPersistentCharacter(persChar) {
    RetaskPersistentCharacter(persChar);
}
/**
 * Hash: 0x49A8C2CD97815215 | ApiSet: undefined
 */
export function revivePerschar(persChar) {
    return RevivePerschar(persChar);
}
/**
 * Hash: 0x187D65F3AEC5D679 | ApiSet: undefined
 */
export function setPerscharSchedule(persCharHash, schedule) {
    if (typeof persCharHash === 'string')
        persCharHash = this.getHashKey(persCharHash);
    SetPerscharSchedule(persCharHash, schedule);
}
/**
 * ```
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 * ```
 * Hash: 0x5BA652A0CD14DF2F | ApiSet: undefined
 */
export function addArmourToPed(ped, amount) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddArmourToPed(_ped, amount);
}
/**
 * Hash: 0xB05945C1E9E60D91 | ApiSet: undefined
 */
export function addFormationLocation(groupId, p1, p2, p3) {
    return AddFormationLocation(groupId, p1, p2, p3);
}
/**
 * Hash: 0x4E23CD07BD161E06 | ApiSet: undefined
 */
export function addCustomFormationLocation(groupId, pos, position) {
    AddCustomFormationLocation(groupId, pos.x, pos.y, pos.z, position);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE37287EE358939C3 | ApiSet: undefined
 */
export function addPedSubscribeToLegendaryBlips(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return AddPedSubscribeToLegendaryBlips(_ped);
}
/**
 * ```
 * The hash of the created relationship group is output in the second parameter.
 * ```
 * Hash: 0xF372BC22FCB88606 | ApiSet: undefined
 */
export function addRelationshipGroup(name) {
    return AddRelationshipGroup(name);
}
/**
 * Hash: 0xE9B168527B337BF0 | ApiSet: undefined
 */
export function addPedStayOutVolume(ped, volume) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return AddPedStayOutVolume(_ped, volume);
}
/**
 * ```
 * blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
 * ```
 * Hash: 0x1B5C85C612E5256E | ApiSet: undefined
 */
export function addScenarioBlockingArea(x1, y1, z1, x2, y2, z2, p6, blockingFlags) {
    return AddScenarioBlockingArea(x1, y1, z1, x2, y2, z2, p6, blockingFlags);
}
/**
 * ```
 * Forces transition now, called together with 0xD65FDC686A031C83
 * ```
 * Hash: 0x6D07B371E9439019 | ApiSet: undefined
 */
export function addScenarioTransition(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddScenarioTransition(_ped);
}
/**
 * ```
 * flag: see ADD_SCENARIO_BLOCKING_AREA
 * ```
 * Hash: 0x4C39C95AE5DB1329 | ApiSet: undefined
 */
export function addScenarioBlockingVolume(volume, p1, flag) {
    return AddScenarioBlockingVolume(volume, p1, flag);
}
/**
 * ```
 * damages a ped with the given amount
 * ```
 * Hash: 0x697157CED63F18D4 | ApiSet: undefined
 */
export function applyDamageToPed(ped, damageAmount, damageArmour, boneId, pedKiller) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _pedKiller = pedKiller instanceof Ped ? pedKiller.handle() : pedKiller;
    ApplyDamageToPed(_ped, damageAmount, damageArmour, boneId, _pedKiller);
}
/**
 * ```
 * Creates ped overlay in texture override data and returns it's index.
 * This index are used for further overlay editing.
 * albedoHash: a hash of overlay's albedo texture
 * colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
 * ```
 * Hash: 0x86BB5FF45F193A02 | ApiSet: undefined
 */
export function addTextureLayer(textureId, albedoHash, normalHash, materialHash, blendType, texAlpha, sheetGridIndex) {
    if (typeof albedoHash === 'string')
        albedoHash = this.getHashKey(albedoHash);
    if (typeof normalHash === 'string')
        normalHash = this.getHashKey(normalHash);
    if (typeof materialHash === 'string')
        materialHash = this.getHashKey(materialHash);
    return AddTextureLayer(textureId, albedoHash, normalHash, materialHash, blendType, texAlpha, sheetGridIndex);
}
/**
 * Hash: 0xEF0D582CBF2D9B0F | ApiSet: undefined
 */
export function applyPedBloodSpecific(ped, p1, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ApplyPedBloodSpecific(_ped, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
 * ```
 * Hash: 0x46DF918788CB093F | ApiSet: undefined
 */
export function applyPedDamagePack(ped, damagePack, damage, mult) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ApplyPedDamagePack(_ped, damagePack, damage, mult);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 * ```
 * Hash: 0x74F512E29CB717E2 | ApiSet: undefined
 */
export function applyPedMetaPedOutfit(requestId, ped, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ApplyPedMetaPedOutfit(requestId, _ped, p2, p3);
}
/**
 * Hash: 0xD3A7B003ED343FD9 | ApiSet: undefined
 */
export function applyShopItemToPed(ped, componentHash, immediately, isMp, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    ApplyShopItemToPed(_ped, componentHash, immediately, isMp, p4);
}
/**
 * Hash: 0x5E420FF293EE5472 | ApiSet: undefined
 */
export function areAllAmbientPedReservationsReady() {
    return AreAllAmbientPedReservationsReady();
}
/**
 * Hash: 0x0B46E25761519058 | ApiSet: undefined
 */
export function applyTextureOnPed(ped, componentHash, textureId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    ApplyTextureOnPed(_ped, componentHash, textureId);
}
/**
 * Hash: 0x7C00CFC48A782DC0 | ApiSet: undefined
 */
export function attachVolumeToEntity(volume, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, p8, p9) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    AttachVolumeToEntity(volume, _entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, p8, p9);
}
/**
 * Hash: 0x2D64376CF437363E | ApiSet: undefined
 */
export function canPedBeMounted(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CanPedBeMounted(_ped);
}
/**
 * Hash: 0x128F79EDCECE4FD5 | ApiSet: undefined
 */
export function canPedRagdoll(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CanPedRagdoll(_ped);
}
/**
 * Hash: 0x51AC07A44D4F5B8A | ApiSet: undefined
 */
export function canKnockPedOffVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CanKnockPedOffVehicle(_ped);
}
/**
 * Hash: 0x9D9473CB82D83A30 | ApiSet: undefined
 */
export function canPedSeePedCached(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return CanPedSeePedCached(_ped, _targetPed, p2);
}
/**
 * Hash: 0xEAD42DE3610D0721 | ApiSet: undefined
 */
export function canPedInCombatSeeTarget(ped, target) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Ped ? target.handle() : target;
    return CanPedInCombatSeeTarget(_ped, _target);
}
/**
 * ```
 * Returns:
 * 0 - CTR_CANNOT_TARGET
 * 1 - CTR_CAN_TARGET
 * 2 - CTR_NOT_SURE_YET
 * ```
 * Hash: 0x7F9B9791D4CB71F6 | ApiSet: undefined
 */
export function canPedSeeEntity(ped, targetEntity, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    return CanPedSeeEntity(_ped, _targetEntity, p2, p3);
}
/**
 * ```
 * Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
 * ```
 * Hash: 0xC3D4B754C0E86B9E | ApiSet: undefined
 */
export function changePedStamina(ped, amount) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ChangePedStamina(_ped, amount);
}
/**
 * ```
 * p2 is always 0, p3 is always 0, p4 is always 1
 * ```
 * Hash: 0xAB643407D0B26F07 | ApiSet: undefined
 */
export function canPedUseScenarioPoint(ped, scenario, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CanPedUseScenarioPoint(_ped, scenario, p2, p3, p4);
}
/**
 * ```
 * Used in Script Functions PLAYER_HORSE_RELEASE_HORSE_TO_AMBIENT_WORLD (p1 = true), HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = false)
 * Set to false for player horse in scripts and seems it's only true when releasing/changing a player horse? Cannot determine what effect it has, but it doesn't seem to affect _GET_HORSE_TAMING_STATE
 * ```
 * Hash: 0xBCC76708E5677E1D | ApiSet: undefined
 */
export function clearActiveAnimalOwner(horse, clear) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    ClearActiveAnimalOwner(_horse, clear);
}
/**
 * Hash: 0x726256CC1EEB182F | ApiSet: undefined
 */
export function clearFacialIdleAnimOverride(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearFacialIdleAnimOverride(_ped);
}
/**
 * Hash: 0x949B2F9ED2917F5D | ApiSet: undefined
 */
export function clearPedActionDisableFlag(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedActionDisableFlag(_ped, actionDisableFlag);
}
/**
 * Hash: 0x8FE22675A5A45817 | ApiSet: undefined
 */
export function clearPedBloodDamage(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedBloodDamage(_ped);
}
/**
 * Hash: 0x56E3B78C5408D9F4 | ApiSet: undefined
 */
export function clearPedBloodDamageByZone(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedBloodDamageByZone(_ped, p1);
}
/**
 * Hash: 0x7F5D88333EE8A86F | ApiSet: undefined
 */
export function clearPedBloodDamageFacial(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedBloodDamageFacial(_ped, p1);
}
/**
 * ```
 * Params: p1 = 1 in R* Scripts
 * ```
 * Hash: 0x78815FC52832B690 | ApiSet: undefined
 */
export function clearPedCombatStyle(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedCombatStyle(_ped, p1);
}
/**
 * ```
 * _CLEAR_PED_COMBAT_*
 * ```
 * Hash: 0x1FA132CBCD7CB239 | ApiSet: undefined
 */
export function clearPedCombatStyleMod(ped, combatStyleModHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof combatStyleModHash === 'string')
        combatStyleModHash = this.getHashKey(combatStyleModHash);
    ClearPedCombatStyleMod(_ped, combatStyleModHash);
}
/**
 * Hash: 0x523C79AEEFCC4A2A | ApiSet: undefined
 */
export function clearPedDamageDecalByZone(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedDamageDecalByZone(_ped, p1, p2);
}
/**
 * ```
 * Clears locomotion archetype
 * ```
 * Hash: 0x4FD80C3DD84B817B | ApiSet: undefined
 */
export function clearPedDesiredLocoForModel(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedDesiredLocoForModel(_ped);
}
/**
 * Hash: 0x0E5173C163976E38 | ApiSet: undefined
 */
export function clearPedDecorations(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedDecorations(_ped);
}
/**
 * Hash: 0x58F7DB5BD8FA2288 | ApiSet: undefined
 */
export function clearPedDesiredLocoMotionType(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedDesiredLocoMotionType(_ped);
}
/**
 * Hash: 0x8EF6B7AC68E2F01B | ApiSet: undefined
 */
export function clearPedLastDamageBone(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedLastDamageBone(_ped);
}
/**
 * Hash: 0x6585D955A68452A5 | ApiSet: undefined
 */
export function clearPedEnvDirt(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedEnvDirt(_ped);
}
/**
 * Hash: 0x2E05208086BA0651 | ApiSet: undefined
 */
export function clearPedNonCreationArea() {
    ClearPedNonCreationArea();
}
/**
 * Hash: 0xEAE3B5B019C8D23F | ApiSet: undefined
 */
export function clearPedGrappleFlag(ped, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedGrappleFlag(_ped, flag);
}
/**
 * ```
 * Removes every texture layer
 * ```
 * Hash: 0xB63B9178D0F58D82 | ApiSet: undefined
 */
export function clearPedTexture(textureId) {
    ClearPedTexture(textureId);
}
/**
 * Hash: 0xBBF6D1D07C02D00A | ApiSet: undefined
 */
export function clearPedTargetActionDisableFlag(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedTargetActionDisableFlag(_ped, actionDisableFlag);
}
/**
 * Hash: 0x627F7F3A0C4C51FF | ApiSet: undefined
 */
export function clearPeltFromHorse(horse, peltId) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    ClearPeltFromHorse(_horse, peltId);
}
/**
 * ```
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 * ```
 * Hash: 0x9C720776DAA43E7E | ApiSet: undefined
 */
export function clearPedWetness(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedWetness(_ped);
}
/**
 * ```
 * flags: see SET_RAGDOLL_BLOCKING_FLAGS
 * ```
 * Hash: 0xD86D101FCFD00A4B | ApiSet: undefined
 */
export function clearRagdollBlockingFlags(ped, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearRagdollBlockingFlags(_ped, flags);
}
/**
 * Hash: 0x5E29243FB56FC6D4 | ApiSet: undefined
 */
export function clearRelationshipBetweenGroups(relationship, group1, group2) {
    if (typeof group1 === 'string')
        group1 = this.getHashKey(group1);
    if (typeof group2 === 'string')
        group2 = this.getHashKey(group2);
    ClearRelationshipBetweenGroups(relationship, group1, group2);
}
/**
 * Hash: 0xEF29A16337FACADB | ApiSet: undefined
 */
export function clonePed(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ClonePed(_ped, isNetwork, bScriptHostPed, copyHeadBlendFlag);
}
/**
 * ```
 * Copies ped's components and props to targetPed.
 * Can be used to clear anything from a ped by cloning it, including bullet holes.
 * ```
 * Hash: 0xE952D6431689AD9A | ApiSet: undefined
 */
export function clonePedToTarget(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    ClonePedToTarget(_ped, _targetPed);
}
/**
 * ```
 * Related to dead animals items/loots
 * Notice: skinningQuality is partially calculated using pedQuality
 * ```
 * Hash: 0x6B89FAA36FC909A3 | ApiSet: undefined
 */
export function computeSatchelItemForPedCarcass(ped, damageCleanliness, skinningQuality) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ComputeSatchelItemForPedCarcass(_ped, damageCleanliness, skinningQuality);
}
/**
 * Hash: 0x9E7738B291706746 | ApiSet: undefined
 */
export function computeSatchelItemForPedDamage(p0, pedAttached, damageCleanliness) {
    const _pedAttached = pedAttached instanceof Ped ? pedAttached.handle() : pedAttached;
    return ComputeSatchelItemForPedDamage(p0, _pedAttached, damageCleanliness);
}
/**
 * Hash: 0x5407B7288D0478B7 | ApiSet: undefined
 */
export function countPedsInCombatWithTarget(ped, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CountPedsInCombatWithTarget(_ped, flag);
}
/**
 * Hash: 0x336B3D200AB007CB | ApiSet: undefined
 */
export function countPedsInCombatWithTargetWithinRadius(ped, position, radius, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return CountPedsInCombatWithTargetWithinRadius(_ped, position.x, position.y, position.z, radius, flag);
}
/**
 * ```
 * Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
 * Can be useful to "point" player at some specific position.
 * Only works while on-foot.
 * _CREATE_[P-Z]
 * ```
 * Hash: 0x4F5EBE70081E5A20 | ApiSet: undefined
 */
export function createGravityWell(xPos, yPos, zPos, heading, radius, p5, p6, p7, stopAtDestination) {
    return CreateGravityWell(xPos, yPos, zPos, heading, radius, p5, p6, p7, stopAtDestination);
}
/**
 * ```
 * Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
 * ```
 * Hash: 0x0BCD4091C8EABA42 | ApiSet: undefined
 */
export function createMetaPed(requestId, position, heading, p5, p6, p7, p8, p9) {
    return CreateMetaPed(requestId, position.x, position.y, position.z, heading, p5, p6, p7, p8, p9);
}
/**
 * ```
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 * The parameter is unused.
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 * ```
 * Hash: 0x90370EBE0FEE1A3D | ApiSet: undefined
 */
export function createGroup(taskAllocator) {
    return CreateGroup(taskAllocator);
}
/**
 * ```
 * Creates prop from metaped asset bundle
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
 * Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
 * ```
 * Hash: 0x9641A9A20310F6B8 | ApiSet: undefined
 */
export function createMetaPedAsset(asset, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9) {
    if (typeof asset === 'string')
        asset = this.getHashKey(asset);
    return CreateMetaPedAsset(asset, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9);
}
/**
 * ```
 * Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
 * ```
 * Hash: 0xEAF682A14F8E5F53 | ApiSet: undefined
 */
export function createMetaPedOutfitPed(requestId, position, heading, p5, p6, p7, p8) {
    return CreateMetaPedOutfitPed(requestId, position.x, position.y, position.z, heading, p5, p6, p7, p8);
}
/**
 * Hash: 0xD49F9B0955C367DE | ApiSet: undefined
 */
export function createPed(modelHash, position, heading, isNetwork, bScriptHostPed, p7, p8) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePed(modelHash, position.x, position.y, position.z, heading, isNetwork, bScriptHostPed, p7, p8);
}
/**
 * ```
 * seatIndex:
 * enum eVehicleSeat
 * {
 * VS_ANY_PASSENGER = -2,
 * VS_DRIVER,
 * VS_FRONT_RIGHT,
 * VS_BACK_LEFT,
 * VS_BACK_RIGHT,
 * VS_EXTRA_LEFT_1,
 * VS_EXTRA_RIGHT_1,
 * VS_EXTRA_LEFT_2,
 * VS_EXTRA_RIGHT_2,
 * VS_EXTRA_LEFT_3,
 * VS_EXTRA_RIGHT_3,
 * VS_NUM_SEATS
 * };
 * ```
 * Hash: 0x7DD959874C1FD534 | ApiSet: undefined
 */
export function createPedInsideVehicle(vehicle, modelHash, seatIndex, p3, p4, p5) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePedInsideVehicle(_vehicle, modelHash, seatIndex, p3, p4, p5);
}
/**
 * Hash: 0xF89AA2BD01FC06B7 | ApiSet: undefined
 */
export function createPedOnMount(mount, modelHash, index, p3, p4, p5, p6) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreatePedOnMount(_mount, modelHash, index, p3, p4, p5, p6);
}
/**
 * ```
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0xCC0EF140F99365C5 | ApiSet: undefined
 */
export function deletePed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DeletePed(_ped);
}
/**
 * Hash: 0xED00D72F81CF7278 | ApiSet: undefined
 */
export function detachCarriableEntity(entity, p1, p2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DetachCarriableEntity(_entity, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xE1965A380342BE1F | ApiSet: undefined
 */
export function disableAllLookAtRequests(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DisableAllLookAtRequests(_ped, p1);
}
/**
 * Hash: 0x80038740C96AD17F | ApiSet: undefined
 */
export function disableAmbientLookAtRequests(p0, p1) {
    DisableAmbientLookAtRequests(p0, p1);
}
/**
 * Hash: 0x7C6B0C22F9F40BBE | ApiSet: undefined
 */
export function doesGroupExist(groupId) {
    return DoesGroupExist(groupId);
}
/**
 * Hash: 0x19C975B81BE53C28 | ApiSet: undefined
 */
export function detachVolumeFromEntity(volume, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DetachVolumeFromEntity(volume, _entity);
}
/**
 * Hash: 0x733C87D4CE22BEA2 | ApiSet: undefined
 */
export function disablePedInjuredOnGroundBehaviour(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DisablePedInjuredOnGroundBehaviour(_ped);
}
/**
 * Hash: 0x4FF3C2B4E6A196C1 | ApiSet: undefined
 */
export function doesMetaPedSuboutfitExistForPedModel(outfit, suboutfit, model) {
    if (typeof outfit === 'string')
        outfit = this.getHashKey(outfit);
    if (typeof suboutfit === 'string')
        suboutfit = this.getHashKey(suboutfit);
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return DoesMetaPedSuboutfitExistForPedModel(outfit, suboutfit, model);
}
/**
 * Hash: 0xC0E880B7A441164D | ApiSet: undefined
 */
export function doesMetaPedOutfitExistForPedModel(outfit, model) {
    if (typeof outfit === 'string')
        outfit = this.getHashKey(outfit);
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return DoesMetaPedOutfitExistForPedModel(outfit, model);
}
/**
 * ```
 * Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
 * Body Types:
 * MPCREATOR_NEUTRAL
 * MPCREATOR_SKINNY
 * MPCREATOR_SKINNY_MUSCULAR
 * MPCREATOR_HEAVY
 * MPCREATOR_HEAVY_MUSCULAR
 * eBodyWeightOutfit (pedattributes.ymt):
 * -2045421226 (smallest)
 * -1745814259
 * -325933489
 * -1065791927
 * -844699484
 * -1273449080
 * 927185840
 * 149872391
 * 399015098
 * -644349862
 * 1745919061 (default)
 * 1004225511
 * 1278600348
 * 502499352
 * -2093198664
 * -1837436619
 * 1736416063
 * 2040610690
 * -1173634986
 * -867801909
 * 1960266524 (biggest)
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
 * Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
 * ```
 * Hash: 0x1902C4CFCC5BE57C | ApiSet: undefined
 */
export function equipMetaPedOutfit(ped, hash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    EquipMetaPedOutfit(_ped, hash);
}
/**
 * ```
 * Changes Multiplayer ped face and body type components, they can be stacked
 * Params: p3 = 1
 * Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
 * Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
 * Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
 * ```
 * Hash: 0xA5BAE410B03E7371 | ApiSet: undefined
 */
export function equipMetaPedOutfitExtra(ped, component, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EquipMetaPedOutfitExtra(_ped, component, p2, p3);
}
/**
 * Hash: 0x66FF395445A88A6E | ApiSet: undefined
 */
export function equipMetaPedSuboutfit(ped, suboutfit, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof suboutfit === 'string')
        suboutfit = this.getHashKey(suboutfit);
    EquipMetaPedSuboutfit(_ped, suboutfit, p2);
}
/**
 * Hash: 0x7043D0681285BA2D | ApiSet: undefined
 */
export function fadeAndDestroyPed() {
    return FadeAndDestroyPed();
}
/**
 * ```
 * Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
 * If p2 is true as player, then certain components like facial hair and hair will not be removed.
 * ```
 * Hash: 0x77FF8D35EEC6BBC4 | ApiSet: undefined
 */
export function equipMetaPedOutfitPreset(ped, presetId, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EquipMetaPedOutfitPreset(_ped, presetId, p2);
}
/**
 * Hash: 0x8B3CB08158E98481 | ApiSet: undefined
 */
export function fakeSetPedLocoInjured(ped, enabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    FakeSetPedLocoInjured(_ped, enabled);
}
/**
 * ```
 * Forces the ped to fall back and kills it.
 * It doesn't really explode the ped's head but it kills the ped
 * ```
 * Hash: 0x2D05CED3A38D0F3A | ApiSet: undefined
 */
export function explodePedHead(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    ExplodePedHead(_ped, weaponHash);
}
/**
 * Hash: 0xB5ACE8B23A438EC0 | ApiSet: undefined
 */
export function findAllAttachedCarriableEntities(ped, itemset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    FindAllAttachedCarriableEntities(_ped, itemset);
}
/**
 * Hash: 0xFF287323B0E2C69A | ApiSet: undefined
 */
export function forceAllHeadingValuesToAlign(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ForceAllHeadingValuesToAlign(_ped);
}
/**
 * Hash: 0x2208438012482A1A | ApiSet: undefined
 */
export function forcePedAiAndAnimationUpdate(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ForcePedAiAndAnimationUpdate(_ped, p1, p2);
}
/**
 * Hash: 0x1CE875505D45338A | ApiSet: undefined
 */
export function forcePedDeath(ped, pedKiller, weapon) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _pedKiller = pedKiller instanceof Ped ? pedKiller.handle() : pedKiller;
    if (typeof weapon === 'string')
        weapon = this.getHashKey(weapon);
    ForcePedDeath(_ped, _pedKiller, weapon);
}
/**
 * Hash: 0xDC9273D95976BA22 | ApiSet: undefined
 */
export function getAccuracyAgainstLocalPlayerModifier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAccuracyAgainstLocalPlayerModifier(_ped);
}
/**
 * ```
 * motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/FORCE_PED_MOTION_STATE
 * ```
 * Hash: 0xF28965D04F570DCA | ApiSet: undefined
 */
export function forcePedMotionState(ped, motionStateHash, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof motionStateHash === 'string')
        motionStateHash = this.getHashKey(motionStateHash);
    return ForcePedMotionState(_ped, motionStateHash, p2, p3, p4);
}
/**
 * Hash: 0xF103823FFE72BB49 | ApiSet: undefined
 */
export function getActiveAnimalOwner(animal) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    return GetActiveAnimalOwner(_animal);
}
/**
 * ```
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 * ```
 * Hash: 0x569F1E1237508DEB | ApiSet: undefined
 */
export function getActiveDynamicScenario(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetActiveDynamicScenario(_ped);
}
/**
 * Hash: 0xBE22B26DD764C040 | ApiSet: undefined
 */
export function getAnimInitialOffsetPosition(animDict, animName, position, xRot, yRot, zRot, p8, p9) {
    return new Vector3(GetAnimInitialOffsetPosition(animDict, animName, position.x, position.y, position.z, xRot, yRot, zRot, p8, p9));
}
/**
 * ```
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 * ```
 * Hash: 0xC22AA08A8ADB87D4 | ApiSet: undefined
 */
export function getActiveDynamicScenario2(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetActiveDynamicScenario2(_ped);
}
/**
 * Hash: 0x4B805E6046EE9E47 | ApiSet: undefined
 */
export function getAnimInitialOffsetRotation(animDict, animName, position, xRot, yRot, zRot, p8, p9) {
    return new Vector3(GetAnimInitialOffsetRotation(animDict, animName, position.x, position.y, position.z, xRot, yRot, zRot, p8, p9));
}
/**
 * Hash: 0x268B3AEBF032A88D | ApiSet: undefined
 */
export function getBlockingOfNonTemporaryEvents(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetBlockingOfNonTemporaryEvents(_ped);
}
/**
 * Hash: 0x608BC6A6AACD5036 | ApiSet: undefined
 */
export function getCarriedAttachedInfoForSlot(p0, p1, p2, p3) {
    return GetCarriedAttachedInfoForSlot(p0, p1, p2, p3);
}
/**
 * Hash: 0x79443D56C8DF45EE | ApiSet: undefined
 */
export function getCarrierAsHuman(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetCarrierAsHuman(_entity);
}
/**
 * Hash: 0x09B83E68DE004CD4 | ApiSet: undefined
 */
export function getCarrierAsPed(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetCarrierAsPed(_entity);
}
/**
 * Hash: 0xA033D7E4BBF9844D | ApiSet: undefined
 */
export function getCarrierAsMount(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetCarrierAsMount(_entity);
}
/**
 * ```
 * Gets MetaPedExpression at index specified
 * For index, see: _SET_CHAR_EXPRESSION
 * ```
 * Hash: 0xFD1BA1EEF7985BB8 | ApiSet: undefined
 */
export function getCharExpression(ped, index) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCharExpression(_ped, index);
}
/**
 * ```
 * Gets the closest ped in a radius.
 * ```
 * Hash: 0xC33AB876A77F8164 | ApiSet: undefined
 */
export function getClosestPed(position, radius, p4, p5, p7, p8, p9, pedType) {
    return GetClosestPed(position.x, position.y, position.z, radius, p4, p5, p7, p8, p9, pedType);
}
/**
 * Hash: 0x52DFF8A10508090A | ApiSet: undefined
 */
export function getCombatFloat(ped, combatType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCombatFloat(_ped, combatType);
}
/**
 * Hash: 0xCD66FEA29400A0B5 | ApiSet: undefined
 */
export function getCurrentTargetForPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentTargetForPed(_ped);
}
/**
 * Hash: 0xCD5003B097200F36 | ApiSet: undefined
 */
export function getDeadPedPickupCoords(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return new Vector3(GetDeadPedPickupCoords(_ped, p1, p2));
}
/**
 * Hash: 0xD806CD2A4F2C2996 | ApiSet: undefined
 */
export function getFirstEntityPedIsCarrying(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetFirstEntityPedIsCarrying(_ped);
}
/**
 * Hash: 0x95B8E397B8F4360F | ApiSet: undefined
 */
export function getHealthRechargeMultiplier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetHealthRechargeMultiplier(_ped);
}
/**
 * Hash: 0x3CC4A718C258BDD0 | ApiSet: undefined
 */
export function getDefaultRelationshipGroupHash(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetDefaultRelationshipGroupHash(modelHash);
}
/**
 * Hash: 0x13A1B061007C906B | ApiSet: undefined
 */
export function getGroupFormation(groupId) {
    return GetGroupFormation(groupId);
}
/**
 * ```
 * Returns an int based on enum eTamingState
 * enum eTamingState
 * {
 * ATS_INVALID = 0,
 * ATS_INACTIVE,
 * ATS_TARGET_DETECTED,
 * ATS_CALLED_OUT,
 * ATS_MOUNTABLE,
 * ATS_BEING_PATTED,
 * ATS_BREAKING_ACTIVE,
 * ATS_SPOOKED,
 * ATS_RETREATING,
 * ATS_FLEEING
 * };
 * ```
 * Hash: 0x454AD4DA6C41B5BD | ApiSet: undefined
 */
export function getHorseTamingState(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    return GetHorseTamingState(_horse);
}
/**
 * Hash: 0x8DE69FE35CA09A45 | ApiSet: undefined
 */
export function getGroupSize(groupId) {
    return GetGroupSize(groupId);
}
/**
 * Hash: 0x88D9D76D78065487 | ApiSet: undefined
 */
export function getIncapacitationTimeRemaining(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetIncapacitationTimeRemaining(_ped);
}
/**
 * ```
 * If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
 * _GET_IS_PED_[M-R]*
 * ```
 * Hash: 0xE33F98BD76490ABC | ApiSet: undefined
 */
export function getIsPedBeingRobbed(ped, player, trueUntilPlayerPocketsItem) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetIsPedBeingRobbed(_ped, _player, trueUntilPlayerPocketsItem);
}
/**
 * Hash: 0x68821369A2CEADD5 | ApiSet: undefined
 */
export function getIsPedCommandHashPresent(ped, commandHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof commandHash === 'string')
        commandHash = this.getHashKey(commandHash);
    return GetIsPedCommandHashPresent(_ped, commandHash);
}
/**
 * ```
 * motivationState: see _SET_PED_MOTIVATION
 * ```
 * Hash: 0x33FA048675821DA7 | ApiSet: undefined
 */
export function getIsPedMotivationStateEnabled(ped, motivationState) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetIsPedMotivationStateEnabled(_ped, motivationState);
}
/**
 * ```
 * Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
 * ```
 * Hash: 0x331550B212014B92 | ApiSet: undefined
 */
export function getIsPedInDisputeWithPed(ped, pedInDisputeWith) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _pedInDisputeWith = pedInDisputeWith instanceof Ped ? pedInDisputeWith.handle() : pedInDisputeWith;
    return GetIsPedInDisputeWithPed(_ped, _pedInDisputeWith);
}
/**
 * Hash: 0xA454D234E45BB6E5 | ApiSet: undefined
 */
export function getIsPedRespondingToNegativeInteraction(ped, player) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetIsPedRespondingToNegativeInteraction(_ped, _player);
}
/**
 * Hash: 0x5486A79D9FBD342D | ApiSet: undefined
 */
export function getJackTarget(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetJackTarget(_ped);
}
/**
 * Hash: 0x9337183FDA2E9035 | ApiSet: undefined
 */
export function getIsPedRespondingToPositiveInteraction(ped, player) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetIsPedRespondingToPositiveInteraction(_ped, _player);
}
/**
 * Hash: 0x0C31C51168E80365 | ApiSet: undefined
 */
export function getLassoedLassoer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLassoedLassoer(_ped);
}
/**
 * Hash: 0xB65A4DAB460A19BD | ApiSet: undefined
 */
export function getLassoTarget(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLassoTarget(_ped);
}
/**
 * ```
 * Returns last horse the ped was leading
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x693126B5D0457D0D | ApiSet: undefined
 */
export function getLastLedMount(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLastLedMount(_ped);
}
/**
 * Hash: 0x5064DB5083C29921 | ApiSet: undefined
 */
export function getLastVehicleDraftHorseWasAttachedTo(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    return GetLastVehicleDraftHorseWasAttachedTo(_horse);
}
/**
 * ```
 * _IS_PED_S* - _IS_PED_U*
 * ```
 * Hash: 0x833F0053340EF413 | ApiSet: undefined
 */
export function getLassoerOfPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLassoerOfPed(_ped);
}
/**
 * Hash: 0x4C8B59171957BCF7 | ApiSet: undefined
 */
export function getLastMount(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLastMount(_ped);
}
/**
 * ```
 * lootFlag: see SET_LOOTING_FLAG
 * ```
 * Hash: 0xE4C11F104620DDCE | ApiSet: undefined
 */
export function getLootingFlag(ped, lootFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLootingFlag(_ped, lootFlag);
}
/**
 * Hash: 0x14169FA823679E41 | ApiSet: undefined
 */
export function getLootingPickupTargetEntity(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLootingPickupTargetEntity(_ped);
}
/**
 * Hash: 0xE7998FEC53A33BBE | ApiSet: undefined
 */
export function getMetaPedAssetTint(ped, index) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMetaPedAssetTint(_ped, index);
}
/**
 * Hash: 0xE7E11B8DCBED1058 | ApiSet: undefined
 */
export function getMount(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMount(_ped);
}
/**
 * Hash: 0x90403E8107B60E81 | ApiSet: undefined
 */
export function getNumComponentsInPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetNumComponentsInPed(_ped);
}
/**
 * Hash: 0x18A3E9EE1297FD39 | ApiSet: undefined
 */
export function getMeleeTargetForPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMeleeTargetForPed(_ped);
}
/**
 * Hash: 0x10C70A515BC03707 | ApiSet: undefined
 */
export function getNumMetaPedOutfits(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetNumMetaPedOutfits(_ped);
}
/**
 * ```
 * This is a way to get what drawables a ped has equipped
 * Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
 * Note: this works with non shop components, direct .ydd files.
 * ```
 * Hash: 0xA9C28516A6DC9D56 | ApiSet: undefined
 */
export function getMetaPedAssetGuids(ped, index) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMetaPedAssetGuids(_ped, index);
}
/**
 * Hash: 0x5C16855277819BBF | ApiSet: undefined
 */
export function getNumReservedAmbientPedsReady() {
    return GetNumReservedAmbientPedsReady();
}
/**
 * ```
 * enum eMetaPedType
 * {
 * MPT_MALE,
 * MPT_FEMALE,
 * MPT_TEEN,
 * MPT_ANIMAL,
 * MPT_NONE
 * };
 * ```
 * Hash: 0xEC9A1261BF0CE510 | ApiSet: undefined
 */
export function getMetaPedType(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMetaPedType(_ped);
}
/**
 * ```
 * Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
 * ```
 * Hash: 0xA622E66EEE92A08D | ApiSet: undefined
 */
export function getNumComponentCategoriesInPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetNumComponentCategoriesInPed(_ped);
}
/**
 * Hash: 0x37F4AD56ECBC0CD6 | ApiSet: undefined
 */
export function getPedAccuracy(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedAccuracy(_ped);
}
/**
 * Hash: 0x51455483CF23ED97 | ApiSet: undefined
 */
export function getPedAsGroupMember(groupID, memberNumber) {
    return GetPedAsGroupMember(groupID, memberNumber);
}
/**
 * Hash: 0x62DE46F061CAA468 | ApiSet: undefined
 */
export function getNumReservedAmbientPedsDesired() {
    return GetNumReservedAmbientPedsDesired();
}
/**
 * ```
 * AI_ATTITUDE_NEUTRAL = 0,
 * AI_ATTITUDE_FRIENDLY,
 * AI_ATTITUDE_WARY,
 * AI_ATTITUDE_COMBATIVE,
 * AI_ATTITUDE_NEVER_MET
 * ```
 * Hash: 0x7CC2186C32D3540A | ApiSet: undefined
 */
export function getPedAttitude(ped, player) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPedAttitude(_ped, _player);
}
/**
 * Hash: 0x313778EDCA9158E2 | ApiSet: undefined
 */
export function getNumFreeSlotsInPedPool() {
    return GetNumFreeSlotsInPedPool();
}
/**
 * Hash: 0x16F2C8C084AB2092 | ApiSet: undefined
 */
export function getNumReservedHealth(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetNumReservedHealth(_ped);
}
/**
 * Hash: 0xBF5E791BBBF90A3C | ApiSet: undefined
 */
export function getPedBlackboardHash(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardHash(_ped, variableName);
}
/**
 * Hash: 0x4912DFE492DB98CD | ApiSet: undefined
 */
export function getPedBlackboardScriptBool(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardScriptBool(_ped, variableName);
}
/**
 * Hash: 0x5CCE68DBD5FE93EC | ApiSet: undefined
 */
export function getPedAsGroupLeader(groupID) {
    return GetPedAsGroupLeader(groupID);
}
/**
 * Hash: 0xA29FD00D45311EB7 | ApiSet: undefined
 */
export function getPedBlackboardScriptFloat(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardScriptFloat(_ped, variableName);
}
/**
 * ```
 * Can be used to get a peds foliage active status: variableName = FoliageActive
 * ```
 * Hash: 0x498F2E77982D6945 | ApiSet: undefined
 */
export function getPedBlackboardBool(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardBool(_ped, variableName);
}
/**
 * Hash: 0xB71B91B398F8F067 | ApiSet: undefined
 */
export function getPedBlackboardScriptInt(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardScriptInt(_ped, variableName);
}
/**
 * ```
 * Can be used to get a peds foliage raw height: variableName = FoliageHeight
 * ```
 * Hash: 0x56E58D4D118FB45E | ApiSet: undefined
 */
export function getPedBlackboardFloat(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBlackboardFloat(_ped, variableName);
}
/**
 * ```
 * Gets the position of the specified bone of the specified ped.
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 * ```
 * Hash: 0x17C07FC640E86B4E | ApiSet: undefined
 */
export function getPedBoneCoords(ped, boneId, offsetX, offsetY, offsetZ) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return new Vector3(GetPedBoneCoords(_ped, boneId, offsetX, offsetY, offsetZ));
}
/**
 * Hash: 0xEC6B59BE445FEC51 | ApiSet: undefined
 */
export function getPedBrawlingStyle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBrawlingStyle(_ped);
}
/**
 * ```
 * no bone = -1
 * ```
 * Hash: 0x3F428D08BE5AAE31 | ApiSet: undefined
 */
export function getPedBoneIndex(ped, boneId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBoneIndex(_ped, boneId);
}
/**
 * Hash: 0x7A4E00364B5D727B | ApiSet: undefined
 */
export function getPedCanBeIncapacitatedThisFrame(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCanBeIncapacitatedThisFrame(_ped);
}
/**
 * Hash: 0xDEA92412FCAEB3F5 | ApiSet: undefined
 */
export function getPedCombatMovement(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCombatMovement(_ped);
}
/**
 * Hash: 0xCC2B20596E29E4E3 | ApiSet: undefined
 */
export function getPedCombatAttribute(ped, attributeIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCombatAttribute(_ped, attributeIndex);
}
/**
 * ```
 * Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
 * ```
 * Hash: 0xCCB97B51893C662F | ApiSet: undefined
 */
export function getPedComponentCategoryByIndex(ped, index) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedComponentCategoryByIndex(_ped, index);
}
/**
 * ```
 * Returns the hash of the weapon/model/object that killed the ped.
 * ```
 * Hash: 0x16FFE42AB2D2DC59 | ApiSet: undefined
 */
export function getPedCauseOfDeath(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCauseOfDeath(_ped);
}
/**
 * ```
 * flagId: see SET_PED_CONFIG_FLAG
 * ```
 * Hash: 0x7EE53118C892B513 | ApiSet: undefined
 */
export function getPedConfigFlag(ped, flagId, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedConfigFlag(_ped, flagId, p2);
}
/**
 * ```
 * enum ePedDamageCleanliness
 * {
 * PED_DAMAGE_CLEANLINESS_POOR,
 * PED_DAMAGE_CLEANLINESS_GOOD,
 * PED_DAMAGE_CLEANLINESS_PERFECT
 * };
 * ```
 * Hash: 0x88EFFED5FE8B0B4A | ApiSet: undefined
 */
export function getPedDamageCleanliness(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedDamageCleanliness(_ped);
}
/**
 * Hash: 0xF60165E1D2C5370B | ApiSet: undefined
 */
export function getPedCurrentMoveBlendRatio(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCurrentMoveBlendRatio(_ped);
}
/**
 * Hash: 0xD5FE956C70FF370B | ApiSet: undefined
 */
export function getPedCrouchMovement(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCrouchMovement(_ped);
}
/**
 * ```
 * Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
 * ```
 * Hash: 0x6CFC373008A1EDAF | ApiSet: undefined
 */
export function getPedDamaged(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedDamaged(_ped);
}
/**
 * Hash: 0x3C06B8786DD94CD1 | ApiSet: undefined
 */
export function getPedDefensiveAreaPosition(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return new Vector3(GetPedDefensiveAreaPosition(_ped, p1));
}
/**
 * ```
 * Returns ped drunk level
 * _H* or _I*
 * ```
 * Hash: 0x6FB76442469ABD68 | ApiSet: undefined
 */
export function getPedDrunkness(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedDrunkness(_ped);
}
/**
 * Hash: 0xEF2E6F870783369B | ApiSet: undefined
 */
export function getPedDefensiveVolume(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedDefensiveVolume(_ped, p1);
}
/**
 * Hash: 0x2311F15D971AA680 | ApiSet: undefined
 */
export function getPedGrappleState(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGrappleState(_ped);
}
/**
 * Hash: 0xF3C873ED0C595109 | ApiSet: undefined
 */
export function getPedGrappleFlag(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGrappleFlag(_ped);
}
/**
 * Hash: 0xD0B7AEB56229D317 | ApiSet: undefined
 */
export function getPedGrappler(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGrappler(_ped);
}
/**
 * Hash: 0x753B15AD0FD6F3E3 | ApiSet: undefined
 */
export function getPedGrappleStyle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGrappleStyle(_ped);
}
/**
 * Hash: 0x1D491CCF7211FB74 | ApiSet: undefined
 */
export function getPedHeight(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedHeight(_ped);
}
/**
 * Hash: 0x31167ED4324B758D | ApiSet: undefined
 */
export function getPedIdRange(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIdRange(_ped);
}
/**
 * Hash: 0x89BFDF6D53145545 | ApiSet: undefined
 */
export function getPedIncapacitationHealth(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIncapacitationHealth(_ped);
}
/**
 * Hash: 0xD7AD3C7EBAF88C92 | ApiSet: undefined
 */
export function getPedInteractionPersonality(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedInteractionPersonality(_ped);
}
/**
 * Hash: 0x3BDFCF25B58B0415 | ApiSet: undefined
 */
export function getPedIsBeingGrappled(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIsBeingGrappled(_ped);
}
/**
 * ```
 * Returns the groupId of which the specified ped is a member of.
 * ```
 * Hash: 0xF162E133B4E7A675 | ApiSet: undefined
 */
export function getPedGroupIndex(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGroupIndex(_ped);
}
/**
 * Hash: 0xC48A9EB0D499B3E5 | ApiSet: undefined
 */
export function getPedIsDoingCombatRoll(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIsDoingCombatRoll(_ped);
}
/**
 * Hash: 0x0E99E3BF11BB6367 | ApiSet: undefined
 */
export function getPedIsGrappling(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIsGrappling(_ped);
}
/**
 * ```
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
 * ```
 * Hash: 0x2C76FA0E01681F8D | ApiSet: undefined
 */
export function getPedLassoHogtieFlag(ped, flagId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedLassoHogtieFlag(_ped, flagId);
}
/**
 * Hash: 0x1F714E7A9DADFC42 | ApiSet: undefined
 */
export function getPedLastDroppedHat(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedLastDroppedHat(_ped);
}
/**
 * Hash: 0xD75960F6BD9EA49C | ApiSet: undefined
 */
export function getPedLastDamageBone(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedLastDamageBone(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x1B710E6F4AB69341 | ApiSet: undefined
 */
export function getPedLodMultiplier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedLodMultiplier(_ped);
}
/**
 * ```
 * enum ePedLootStatus
 * {
 * PLS_NONE,
 * PLS_PRE_LOOT,
 * PLS_SAMPLING,
 * PLS_SKINNING
 * };
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xC737697C41628340 | ApiSet: undefined
 */
export function getPedLootStatusMp(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedLootStatusMp(_ped);
}
/**
 * Hash: 0x4700A416E8324EF3 | ApiSet: undefined
 */
export function getPedMaxHealth(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMaxHealth(_ped);
}
/**
 * Hash: 0x6127F25ED21C533C | ApiSet: undefined
 */
export function getPedMeleeActionPhase(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMeleeActionPhase(_ped);
}
/**
 * Hash: 0xCB42AFE2B613EE55 | ApiSet: undefined
 */
export function getPedMaxStamina(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMaxStamina(_ped);
}
/**
 * ```
 * PS_SMALL = 0,
 * PS_MEDIUM,
 * PS_MEDIUM_LARGE,
 * PS_LARGE,
 * PS_EXTRA_LARGE
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xA65AA1ACE81E5A77 | ApiSet: undefined
 */
export function getPedModelSizeFromHash(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetPedModelSizeFromHash(modelHash);
}
/**
 * Hash: 0x30569F348D126A5A | ApiSet: undefined
 */
export function getPedMetaOutfitHash(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMetaOutfitHash(_ped);
}
/**
 * Hash: 0x243E1B4607040057 | ApiSet: undefined
 */
export function getPedMotionFocusEntity(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMotionFocusEntity(_ped);
}
/**
 * ```
 * If targetPed is set to 0 the ped motivationState affects everyone
 * ```
 * Hash: 0x42688E94E96FD9B4 | ApiSet: undefined
 */
export function getPedMotivation(ped, motivationState, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return GetPedMotivation(_ped, motivationState, _targetPed);
}
/**
 * Hash: 0x3F69145BBA87BAE7 | ApiSet: undefined
 */
export function getPedMoney(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedMoney(_ped);
}
/**
 * Hash: 0x23F8F5FC7E8C4A6B | ApiSet: undefined
 */
export function getPedNearbyPeds(ped, ignoredPedType, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedNearbyPeds(_ped, ignoredPedType, p3);
}
/**
 * Hash: 0xCFF869CBFA210D82 | ApiSet: undefined
 */
export function getPedNearbyVehicles(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedNearbyVehicles(_ped);
}
/**
 * ```
 * Gets a registered/attached prop entity for a particular ped. Second parameter will detach the prop entity from the ped if true. Props primarily appear to come from scenarios, such as a broom or hay bale.
 * Known props: https://pastebin.com/ap2NEJqB
 * ```
 * Hash: 0x4D0D2E3D8BC000EB | ApiSet: undefined
 */
export function getPedRegisterProp(ped, propName, detachProp) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedRegisterProp(_ped, propName, detachProp);
}
/**
 * ```
 * Returns Ped Quality to be used to calculate Skinning Quality
 * enum ePedQuality
 * {
 * PQ_INVALID = -1,
 * PQ_LOW,
 * PQ_MEDIUM,
 * PQ_HIGH,
 * PQ_MAX
 * };
 * ```
 * Hash: 0x7BCC6087D130312A | ApiSet: undefined
 */
export function getPedQuality(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedQuality(_ped);
}
/**
 * ```
 * normalized / non normalized
 * 0.0        / 1000.0         STARTED IN WRITHE STAGE
 * 1.0        / 0.0            END OF WRITHE, DEAD
 * -1.0                        DEAD
 * Returns some value from AI task 562 (unknown).
 * ```
 * Hash: 0xEBE89623EB861271 | ApiSet: undefined
 */
export function getPedRemainingRevivalTime(ped, normalized) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedRemainingRevivalTime(_ped, normalized);
}
/**
 * Hash: 0x42FDD0F017B1E38E | ApiSet: undefined
 */
export function getPedRelationshipGroupDefaultHash(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedRelationshipGroupDefaultHash(_ped);
}
/**
 * Hash: 0xAF9E59B1B1FBF2A0 | ApiSet: undefined
 */
export function getPedResetFlag(ped, flagId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedResetFlag(_ped, flagId);
}
/**
 * Hash: 0x7DBDD04862D95F04 | ApiSet: undefined
 */
export function getPedRelationshipGroupHash(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedRelationshipGroupHash(_ped);
}
/**
 * Hash: 0x775A1CA7893AA8B5 | ApiSet: undefined
 */
export function getPedStamina(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedStamina(_ped);
}
/**
 * ```
 * Returns the entity that killed the ped
 * It is best to check if the Ped is dead before asking for its killer.
 * ```
 * Hash: 0x93C8B64DEB84728C | ApiSet: undefined
 */
export function getPedSourceOfDeath(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedSourceOfDeath(_ped);
}
/**
 * ```
 * Returns stamina normalizedValue / normalizedUnlockedMax
 * ```
 * Hash: 0x22F2A386D43048A9 | ApiSet: undefined
 */
export function getPedStaminaNormalized(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedStaminaNormalized(_ped);
}
/**
 * Hash: 0x1E98817B311AE98A | ApiSet: undefined
 */
export function getPedTimeOfDeath(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedTimeOfDeath(_ped);
}
/**
 * Hash: 0x936E7CAD0AE2EE14 | ApiSet: undefined
 */
export function getPedToPlayerWeaponDamageModifier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedToPlayerWeaponDamageModifier(_ped);
}
/**
 * ```
 * Returns whether the entity is in stealth mode
 * ```
 * Hash: 0x7C2AC9CA66575FBF | ApiSet: undefined
 */
export function getPedStealthMovement(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedStealthMovement(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x65C75FDCCAC86464 | ApiSet: undefined
 */
export function getPedTranquilizer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedTranquilizer(_ped);
}
/**
 * Hash: 0xFF059E1E4C01E63C | ApiSet: undefined
 */
export function getPedType(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedType(_ped);
}
/**
 * Hash: 0x9B128DC36C1E04CF | ApiSet: undefined
 */
export function getPedsJacker(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedsJacker(_ped);
}
/**
 * Hash: 0x7BE607DAFF382FD2 | ApiSet: undefined
 */
export function getPedsInCombatWithTarget(ped, itemset, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedsInCombatWithTarget(_ped, itemset, flag);
}
/**
 * ```
 * Returns peltId
 * ```
 * Hash: 0x0CEEB6F4780B1F2F | ApiSet: undefined
 */
export function getPeltFromHorse(horse, index) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    return GetPeltFromHorse(_horse, index);
}
/**
 * ```
 * Returns animal skin quality modifier
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xEE2D5C819A65BF26 | ApiSet: undefined
 */
export function getPlayerCurrentAnimalDamageModifier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerCurrentAnimalDamageModifier(_player);
}
/**
 * Hash: 0x6A3975DEA89F9A17 | ApiSet: undefined
 */
export function getPlayerPedIsFollowing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPlayerPedIsFollowing(_ped);
}
/**
 * ```
 * Returns how deep the water is below the ped (if in water)
 * -1.0f = Not in water
 * 10.0f = Max water depth
 * ```
 * Hash: 0x2942457417A5FD24 | ApiSet: undefined
 */
export function getPlayerPedWaterDepth(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPlayerPedWaterDepth(_ped);
}
/**
 * Hash: 0x9E6B70061662AE5C | ApiSet: undefined
 */
export function getRelationshipBetweenGroups(group1, group2) {
    if (typeof group1 === 'string')
        group1 = this.getHashKey(group1);
    if (typeof group2 === 'string')
        group2 = this.getHashKey(group2);
    return GetRelationshipBetweenGroups(group1, group2);
}
/**
 * Hash: 0xEBA5AD3A0EAF7121 | ApiSet: undefined
 */
export function getRelationshipBetweenPeds(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return GetRelationshipBetweenPeds(_ped1, _ped2);
}
/**
 * Hash: 0xB676EFDA03DADA52 | ApiSet: undefined
 */
export function getRiderOfMount(mount, p1) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    return GetRiderOfMount(_mount, p1);
}
/**
 * Hash: 0x6F4C85ACD641BCD2 | ApiSet: undefined
 */
export function getSeatPedIsTryingToEnter(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetSeatPedIsTryingToEnter(_ped);
}
/**
 * Hash: 0x4E76CB57222A00E5 | ApiSet: undefined
 */
export function getSeatPedIsUsing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetSeatPedIsUsing(_ped);
}
/**
 * Hash: 0x63342C50EC115CE8 | ApiSet: undefined
 */
export function getShopItemBaseLayers(shopItem, p1, ped, metapedType, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof shopItem === 'string')
        shopItem = this.getHashKey(shopItem);
    return GetShopItemBaseLayers(shopItem, p1, _ped, metapedType, p4);
}
/**
 * Hash: 0x77BA37622E22023B | ApiSet: undefined
 */
export function getShopItemComponentAtIndex(ped, index, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetShopItemComponentAtIndex(_ped, index, p2);
}
/**
 * Hash: 0x5FF9A878C3D115B8 | ApiSet: undefined
 */
export function getShopItemComponentCategory(componentHash, metapedType, isMP) {
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    return GetShopItemComponentCategory(componentHash, metapedType, isMP);
}
/**
 * Hash: 0x7E02E4218D916B94 | ApiSet: undefined
 */
export function getShopItemHatComponent(ped, metapedType, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetShopItemHatComponent(_ped, metapedType, p2);
}
/**
 * ```
 * Returns the number of wearable states available for a shop item / component. p2 seems to be true in scripts.
 * For use with 0x6243635AF2F1B826 (_GET_SHOP_ITEM_AVAILABLE_WEARABLE_STATE_BY_INDEX)
 * ```
 * Hash: 0xFFCC2DB2D9953401 | ApiSet: undefined
 */
export function getShopItemNumWearableStates(componentHash, isMpFemale, p2) {
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    return GetShopItemNumWearableStates(componentHash, isMpFemale, p2);
}
/**
 * Hash: 0x825F6DD559A0895B | ApiSet: undefined
 */
export function getStaminaDepletionMultiplier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetStaminaDepletionMultiplier(_ped);
}
/**
 * ```
 * Gets an available wearable state by index for a shop item / component - it does not retreive what the current state is. p3 seems to be true in scripts.
 * Use 0xFFCC2DB2D9953401 (_GET_SHOP_ITEM_NUM_WEARABLE_STATES) to get the number of available wearable states
 * ```
 * Hash: 0x6243635AF2F1B826 | ApiSet: undefined
 */
export function getShopItemWearableStateByIndex(componentHash, wearableStateIndex, isMpFemale, p3) {
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    return GetShopItemWearableStateByIndex(componentHash, wearableStateIndex, isMpFemale, p3);
}
/**
 * Hash: 0xE7687EB2F634ABF0 | ApiSet: undefined
 */
export function getStaminaRechargeMultiplier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetStaminaRechargeMultiplier(_ped);
}
/**
 * ```
 * _GET_WA*
 * ```
 * Hash: 0x92C8EACA29F6BED6 | ApiSet: undefined
 */
export function getTotalPedDamageFromAi(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTotalPedDamageFromAi(_ped);
}
/**
 * Hash: 0xE4770DA1B8FF4FD1 | ApiSet: undefined
 */
export function getVehicleDraftHorseIsAttachedTo(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    return GetVehicleDraftHorseIsAttachedTo(_horse);
}
/**
 * Hash: 0x511F1A683387C7E2 | ApiSet: undefined
 */
export function getTrackedPedPixelcount(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTrackedPedPixelcount(_ped);
}
/**
 * Hash: 0xF92691AED837A5FC | ApiSet: undefined
 */
export function getVehiclePedIsEntering(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetVehiclePedIsEntering(_ped);
}
/**
 * Hash: 0x849BD6C6314793D0 | ApiSet: undefined
 */
export function getTransportPedIsSeatedOn(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTransportPedIsSeatedOn(_ped);
}
/**
 * ```
 * Gets the vehicle the specified Ped is in.
 * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
 * ```
 * Hash: 0x9A9112A0FE9A4713 | ApiSet: undefined
 */
export function getVehiclePedIsIn(ped, lastVehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetVehiclePedIsIn(_ped, lastVehicle);
}
/**
 * Hash: 0x6094AD011A2EA87D | ApiSet: undefined
 */
export function getVehiclePedIsUsing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetVehiclePedIsUsing(_ped);
}
/**
 * ```
 * Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 * ```
 * Hash: 0xD65FDC686A031C83 | ApiSet: undefined
 */
export function givePedHashCommand(ped, commandHash, activationDuration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof commandHash === 'string')
        commandHash = this.getHashKey(commandHash);
    GivePedHashCommand(_ped, commandHash, activationDuration);
}
/**
 * Hash: 0x2B02DB082258625F | ApiSet: undefined
 */
export function givePedHashScenarioProp(ped, object, conditionalAnim, scenarioType, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    return GivePedHashScenarioProp(_ped, object, conditionalAnim, scenarioType, p4, p5);
}
/**
 * ```
 * Only used in SP R* Script rcm_jack2
 * ```
 * Hash: 0xA0774E388CE4A679 | ApiSet: undefined
 */
export function givePedScenarioPropDynamic(ped, object, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GivePedScenarioPropDynamic(_ped, object, p2, p3, p4);
}
/**
 * Hash: 0x3BBDD6143FF16F98 | ApiSet: undefined
 */
export function givePedScenarioProp(ped, object, conditionalAnim, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GivePedScenarioProp(_ped, object, conditionalAnim, p3, p4, p5);
}
/**
 * Hash: 0xC0940AC858C1E126 | ApiSet: undefined
 */
export function hasMetaPedRequestLoaded(requestId) {
    return HasMetaPedRequestLoaded(requestId);
}
/**
 * Hash: 0xB0B2C6D170B0E8E5 | ApiSet: undefined
 */
export function hasMetaPedAssetLoaded(requestId) {
    return HasMetaPedAssetLoaded(requestId);
}
/**
 * Hash: 0x610438375E5D1801 | ApiSet: undefined
 */
export function hasMetaPedOutfitLoaded(requestId) {
    return HasMetaPedOutfitLoaded(requestId);
}
/**
 * Hash: 0x854BC9B1A1CCD034 | ApiSet: undefined
 */
export function hasMotionTypeAssetLoaded(nameHash, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof nameHash === 'string')
        nameHash = this.getHashKey(nameHash);
    return HasMotionTypeAssetLoaded(nameHash, _ped);
}
/**
 * ```
 * See _REQUEST_PED_EMOTIONAL_PRESET
 * ```
 * Hash: 0xDE3904B22695D9F9 | ApiSet: undefined
 */
export function hasPedEmotionalPresetLoaded(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return HasPedEmotionalPresetLoaded(_ped, name);
}
/**
 * Hash: 0x29FCE825613FEFCA | ApiSet: undefined
 */
export function hasPedBeenShovedRecently(ped, ms) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return HasPedBeenShovedRecently(_ped, ms);
}
/**
 * ```
 * _H* - _I*
 * ```
 * Hash: 0xBAE08F00021BFFB2 | ApiSet: undefined
 */
export function horseAgitate(mount, kickOffRider) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    HorseAgitate(_mount, kickOffRider);
}
/**
 * ```
 * limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
 * ```
 * Hash: 0xBA208A8D6399A3AC | ApiSet: undefined
 */
export function hasPedTakenGoreDamage(ped, limb) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return HasPedTakenGoreDamage(_ped, limb);
}
/**
 * Hash: 0x7DD7FB3480D8083E | ApiSet: undefined
 */
export function initPedDefaultHealth(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    InitPedDefaultHealth(_ped);
}
/**
 * Hash: 0xF6262491C7704A63 | ApiSet: undefined
 */
export function incapacitatedRevive(ped, ped2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    IncapacitatedRevive(_ped, _ped2);
}
/**
 * ```
 * Returns true only if it's a player ped and an animal as well.
 * _IS_ANY_* - _IS_CONTROL_*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0E2F43516F998269 | ApiSet: undefined
 */
export function isAnimalControlledByAPlayer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAnimalControlledByAPlayer(_ped);
}
/**
 * Hash: 0xD543D3A8FDE4F185 | ApiSet: undefined
 */
export function isAnimalInteractionPossible(ped, animal) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    return IsAnimalInteractionPossible(_ped, _animal);
}
/**
 * Hash: 0x4759CC730F947C81 | ApiSet: undefined
 */
export function instantlyFillPedPopulation() {
    InstantlyFillPedPopulation();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x68772DB2B2526F9F | ApiSet: undefined
 */
export function isAnyHostilePedNearPoint(ped, position, radius) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAnyHostilePedNearPoint(_ped, position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x7FC84E85D98F063D | ApiSet: undefined
 */
export function isAnimalInteractionRunning(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsAnimalInteractionRunning(_ped);
}
/**
 * Hash: 0x083961498679DC9F | ApiSet: undefined
 */
export function isAnyPedNearPoint(position, radius) {
    return IsAnyPedNearPoint(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0xA0D3D71EA1086C55 | ApiSet: undefined
 */
export function isAnyPedShootingInArea(x1, y1, z1, x2, y2, z2, p6, p7) {
    return IsAnyPedShootingInArea(x1, y1, z1, x2, y2, z2, p6, p7);
}
/**
 * Hash: 0xC8D523BF5BBD3808 | ApiSet: undefined
 */
export function isEventInQueue(ped, eventType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return IsEventInQueue(_ped, eventType);
}
/**
 * Hash: 0x0EE3F0D7FECCC54F | ApiSet: undefined
 */
export function isInstantlyFillPedPopulationFinished() {
    return IsInstantlyFillPedPopulationFinished();
}
/**
 * Hash: 0x909AD9E9A92A10DF | ApiSet: undefined
 */
export function isGroupLocallyControlled(groupId) {
    return IsGroupLocallyControlled(groupId);
}
/**
 * Hash: 0xFB1E7998B8595825 | ApiSet: undefined
 */
export function isLocationSpawnSafe(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsLocationSpawnSafe(_ped, p1);
}
/**
 * Hash: 0x43E4DA469541A9C9 | ApiSet: undefined
 */
export function isMetaPedRequestValid(requestId) {
    return IsMetaPedRequestValid(requestId);
}
/**
 * ```
 * Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
 * ```
 * Hash: 0x98082246107A6ACF | ApiSet: undefined
 */
export function isMetaPedOutfitEquipped(ped, outfit) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof outfit === 'string')
        outfit = this.getHashKey(outfit);
    return IsMetaPedOutfitEquipped(_ped, outfit);
}
/**
 * ```
 * Returns true if given ped is a fish.
 * _IS_ME* - _IS_MO*
 * ```
 * Hash: 0x118D476A6F1A13F1 | ApiSet: undefined
 */
export function isMetaPedFish(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsMetaPedFish(_ped);
}
/**
 * Hash: 0x93FFD92F05EC32FD | ApiSet: undefined
 */
export function isMetaPedAssetValid(requestId) {
    return IsMetaPedAssetValid(requestId);
}
/**
 * Hash: 0xFB4891BD7578CDC1 | ApiSet: undefined
 */
export function isMetaPedUsingComponent(ped, component) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof component === 'string')
        component = this.getHashKey(component);
    return IsMetaPedUsingComponent(_ped, component);
}
/**
 * Hash: 0xB25E57FC8E37114D | ApiSet: undefined
 */
export function isMetaPedOutfitRequestValid(requestId) {
    return IsMetaPedOutfitRequestValid(requestId);
}
/**
 * Hash: 0x12534C348C6CB68B | ApiSet: undefined
 */
export function isPedAPlayer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedAPlayer(_ped);
}
/**
 * Hash: 0xAAB0FE202E9FC9F0 | ApiSet: undefined
 */
export function isMountSeatFree(mount, seat) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    return IsMountSeatFree(_mount, seat);
}
/**
 * Hash: 0x3998B1276A3300E5 | ApiSet: undefined
 */
export function isPedAimingFromCover(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedAimingFromCover(_ped);
}
/**
 * Hash: 0xEF3A8772F085B4AA | ApiSet: undefined
 */
export function isPedBeingDragged(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedBeingDragged(_ped);
}
/**
 * Hash: 0xB346C85D49CC998E | ApiSet: undefined
 */
export function isPedActionDisableFlagEnabled(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedActionDisableFlagEnabled(_ped, actionDisableFlag);
}
/**
 * Hash: 0xD453BB601D4A606E | ApiSet: undefined
 */
export function isPedBeingHogtied(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedBeingHogtied(_ped);
}
/**
 * Hash: 0x9A497FE2DF198913 | ApiSet: undefined
 */
export function isPedBeingJacked(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedBeingJacked(_ped);
}
/**
 * Hash: 0x863B23EFDE9C5DF2 | ApiSet: undefined
 */
export function isPedBeingStealthKilled(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedBeingStealthKilled(_ped);
}
/**
 * Hash: 0xA911EE21EDF69DAF | ApiSet: undefined
 */
export function isPedCarryingSomething(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedCarryingSomething(_ped);
}
/**
 * Hash: 0x53E8CB4F48BFE623 | ApiSet: undefined
 */
export function isPedClimbing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedClimbing(_ped);
}
/**
 * Hash: 0x4FBACCE3B4138EE8 | ApiSet: undefined
 */
export function isPedBeingStunned(ped, weaponType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponType === 'string')
        weaponType = this.getHashKey(weaponType);
    return IsPedBeingStunned(_ped, weaponType);
}
/**
 * Hash: 0xB086C8C0F5701D14 | ApiSet: undefined
 */
export function isPedCowering(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedCowering(_ped);
}
/**
 * Hash: 0x137772000DAF42C5 | ApiSet: undefined
 */
export function isPedChild(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedChild(_ped);
}
/**
 * Hash: 0x3317DEDB88C95038 | ApiSet: undefined
 */
export function isPedDeadOrDying(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDeadOrDying(_ped, p1);
}
/**
 * Hash: 0x59643424B68D52B5 | ApiSet: undefined
 */
export function isPedClimbingLadder(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedClimbingLadder(_ped);
}
/**
 * Hash: 0xBA63D9FE45412247 | ApiSet: undefined
 */
export function isPedDefensiveAreaActive(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDefensiveAreaActive(_ped, p1);
}
/**
 * Hash: 0x5527B8246FEF9B11 | ApiSet: undefined
 */
export function isPedDiving(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDiving(_ped);
}
/**
 * Hash: 0x226CF9B159E38F42 | ApiSet: undefined
 */
export function isPedDragging(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDragging(_ped);
}
/**
 * Hash: 0xC488B8C0E52560D8 | ApiSet: undefined
 */
export function isPedDoingScenarioTransition(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDoingScenarioTransition(_ped);
}
/**
 * Hash: 0x1D46B417F926D34D | ApiSet: undefined
 */
export function isPedEnteringAnyTransport(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedEnteringAnyTransport(_ped);
}
/**
 * Hash: 0x50F124E6EF188B22 | ApiSet: undefined
 */
export function isPedDrunk(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDrunk(_ped);
}
/**
 * ```
 * angle is ped's view cone
 * ```
 * Hash: 0xD71649DB0A545AA3 | ApiSet: undefined
 */
export function isPedFacingPed(ped, otherPed, angle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _otherPed = otherPed instanceof Ped ? otherPed.handle() : otherPed;
    return IsPedFacingPed(_ped, _otherPed, angle);
}
/**
 * Hash: 0xFB92A102F1C4DFA3 | ApiSet: undefined
 */
export function isPedFalling(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedFalling(_ped);
}
/**
 * ```
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 * ```
 * Hash: 0x414641C26E105898 | ApiSet: undefined
 */
export function isPedEvasiveDiving(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedEvasiveDiving(_ped);
}
/**
 * Hash: 0x3E592D0486DEC0F6 | ApiSet: undefined
 */
export function isPedFallingOver(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedFallingOver(_ped);
}
/**
 * Hash: 0xBBCCE00B381F8482 | ApiSet: undefined
 */
export function isPedFleeing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedFleeing(_ped);
}
/**
 * ```
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 * ```
 * Hash: 0xD839450756ED5A80 | ApiSet: undefined
 */
export function isPedFatallyInjured(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedFatallyInjured(_ped);
}
/**
 * Hash: 0x95CBC65780DE7EB1 | ApiSet: undefined
 */
export function isPedFullyOnMount(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedFullyOnMount(_ped, p1);
}
/**
 * Hash: 0xBB062B2B5722478E | ApiSet: undefined
 */
export function isPedGettingIntoAVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedGettingIntoAVehicle(_ped);
}
/**
 * Hash: 0x9F65DBC537E59AD5 | ApiSet: undefined
 */
export function isPedGoingIntoCover(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedGoingIntoCover(_ped);
}
/**
 * Hash: 0x878B68960C1C2A35 | ApiSet: undefined
 */
export function isPedGroupLeader(ped, groupId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedGroupLeader(_ped, groupId);
}
/**
 * Hash: 0x9BB01E3834671191 | ApiSet: undefined
 */
export function isPedGroupMember(ped, groupId, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedGroupMember(_ped, groupId, p2);
}
/**
 * Hash: 0xFCF37A457CB96DC0 | ApiSet: undefined
 */
export function isPedHeadingTowardsPosition(ped, position, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedHeadingTowardsPosition(_ped, position.x, position.y, position.z, p4);
}
/**
 * Hash: 0x1C86D8AEF8254B78 | ApiSet: undefined
 */
export function isPedHangingOnToVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedHangingOnToVehicle(_ped);
}
/**
 * Hash: 0x813A0A7C9D2E831F | ApiSet: undefined
 */
export function isPedHeadtrackingEntity(ped, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsPedHeadtrackingEntity(_ped, _entity);
}
/**
 * Hash: 0x5CD3CB88A7F8850D | ApiSet: undefined
 */
export function isPedHeadtrackingPed(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return IsPedHeadtrackingPed(_ped1, _ped2);
}
/**
 * Hash: 0x3AA24CCC0D451379 | ApiSet: undefined
 */
export function isPedHogtied(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedHogtied(_ped);
}
/**
 * Hash: 0x42429C674B61238B | ApiSet: undefined
 */
export function isPedHogtying(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedHogtying(_ped);
}
/**
 * ```
 * Returns true/false if the ped is/isn't humanoid.
 * ```
 * Hash: 0xB980061DA992779D | ApiSet: undefined
 */
export function isPedHuman(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedHuman(_ped);
}
/**
 * Hash: 0x2E0E1C2B4F6CB339 | ApiSet: undefined
 */
export function isPedInAnyBoat(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyBoat(_ped);
}
/**
 * Hash: 0x298B91AE825E5705 | ApiSet: undefined
 */
export function isPedInAnyHeli(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyHeli(_ped);
}
/**
 * Hash: 0x6F972C1AB75A1ED0 | ApiSet: undefined
 */
export function isPedInAnyTrain(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyTrain(_ped);
}
/**
 * Hash: 0x5FFF4CFC74D8FB80 | ApiSet: undefined
 */
export function isPedInAnyPlane(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyPlane(_ped);
}
/**
 * Hash: 0x6E575D6A898AB852 | ApiSet: undefined
 */
export function isPedInAnyTaxi(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyTaxi(_ped);
}
/**
 * ```
 * Gets a value indicating whether the specified ped is in any vehicle.
 * ```
 * Hash: 0x997ABD671D25CA0B | ApiSet: undefined
 */
export function isPedInAnyVehicle(ped, atGetIn) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInAnyVehicle(_ped, atGetIn);
}
/**
 * Hash: 0x60DFD0691A170B88 | ApiSet: undefined
 */
export function isPedInCover(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInCover(_ped, p1, p2);
}
/**
 * Hash: 0x4859F1FC66A6278E | ApiSet: undefined
 */
export function isPedInCombat(ped, target) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Ped ? target.handle() : target;
    return IsPedInCombat(_ped, _target);
}
/**
 * Hash: 0x845333B3150583AB | ApiSet: undefined
 */
export function isPedInCoverFacingLeft(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInCoverFacingLeft(_ped);
}
/**
 * Hash: 0x9134873537FA419C | ApiSet: undefined
 */
export function isPedInFlyingVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInFlyingVehicle(_ped);
}
/**
 * Hash: 0x5891CAC5D4ACFF74 | ApiSet: undefined
 */
export function isPedInGroup(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInGroup(_ped);
}
/**
 * ```
 * Notes: The function only returns true while the ped is:
 * A.) Swinging a random melee attack (including pistol-whipping)
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
 * You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 * ```
 * Hash: 0x4E209B2C1EAD5159 | ApiSet: undefined
 */
export function isPedInMeleeCombat(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInMeleeCombat(_ped);
}
/**
 * Hash: 0x796D90EFB19AA332 | ApiSet: undefined
 */
export function isPedInModel(ped, modelHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return IsPedInModel(_ped, modelHash);
}
/**
 * ```
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 * ```
 * Hash: 0xA3EE4A07279BB9DB | ApiSet: undefined
 */
export function isPedInVehicle(ped, vehicle, atGetIn) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPedInVehicle(_ped, _vehicle, atGetIn);
}
/**
 * Hash: 0xB655DB7582AEC805 | ApiSet: undefined
 */
export function isPedIncapacitated(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedIncapacitated(_ped);
}
/**
 * ```
 * Gets a value indicating whether this ped's health is below its injured threshold.
 * The default threshold is 100.
 * ```
 * Hash: 0x84A2DD9AC37C35C1 | ApiSet: undefined
 */
export function isPedInjured(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInjured(_ped);
}
/**
 * ```
 * If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
 * If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
 * _IS_PED_IN_*
 * ```
 * Hash: 0x078076AB50FB117F | ApiSet: undefined
 */
export function isPedInPoint(ped, position, radius, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInPoint(_ped, position.x, position.y, position.z, radius, p5);
}
/**
 * Hash: 0x57779B55B83E2BEA | ApiSet: undefined
 */
export function isPedIntimidated(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedIntimidated(_ped);
}
/**
 * Hash: 0x4AE4FF911DFB61DA | ApiSet: undefined
 */
export function isPedJacking(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedJacking(_ped);
}
/**
 * ```
 * _IS_PED_IN*
 * ```
 * Hash: 0x7583A9D35248B83F | ApiSet: undefined
 */
export function isPedInvestigating(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInvestigating(_ped);
}
/**
 * Hash: 0x9682F850056C9ADE | ApiSet: undefined
 */
export function isPedLassoed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedLassoed(_ped);
}
/**
 * Hash: 0xCEDABC5900A0BF97 | ApiSet: undefined
 */
export function isPedJumping(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedJumping(_ped);
}
/**
 * ```
 * _IS_PED_L* - _IS_PED_M*
 * ```
 * Hash: 0x917760CFE7A0E0F1 | ApiSet: undefined
 */
export function isPedLeadingAnyGroup(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedLeadingAnyGroup(_ped);
}
/**
 * ```
 * Returns true/false if the ped is/isn't male.
 * ```
 * Hash: 0x6D9F5FAA7488BA46 | ApiSet: undefined
 */
export function isPedMale(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedMale(_ped);
}
/**
 * Hash: 0xAA9F048DCF69B6DC | ApiSet: undefined
 */
export function isPedModelSuppressed(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsPedModelSuppressed(model);
}
/**
 * Hash: 0xC9D55B1A358A5BF7 | ApiSet: undefined
 */
export function isPedModel(ped, modelHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return IsPedModel(_ped, modelHash);
}
/**
 * Hash: 0x01FEE67DB37F59B2 | ApiSet: undefined
 */
export function isPedOnFoot(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedOnFoot(_ped);
}
/**
 * Hash: 0xEC5F66E459AF3BB2 | ApiSet: undefined
 */
export function isPedOnSpecificVehicle(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPedOnSpecificVehicle(_ped, _vehicle);
}
/**
 * Hash: 0x460BC76A0E10655E | ApiSet: undefined
 */
export function isPedOnMount(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedOnMount(_ped);
}
/**
 * Hash: 0xDCCA191DF9980FD7 | ApiSet: undefined
 */
export function isPedPerformingMeleeAction(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return IsPedPerformingMeleeAction(_ped, p1, p2);
}
/**
 * ```
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 * ```
 * Hash: 0x67722AEB798E5FAB | ApiSet: undefined
 */
export function isPedOnVehicle(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedOnVehicle(_ped, p1);
}
/**
 * Hash: 0xD6A86331A537A7B9 | ApiSet: undefined
 */
export function isPedProne(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedProne(_ped);
}
/**
 * ```
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 * ```
 * Hash: 0x26AF0E8E30BD2A2C | ApiSet: undefined
 */
export function isPedOpeningDoor(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedOpeningDoor(_ped);
}
/**
 * Hash: 0x8D9BFCE3352DE47F | ApiSet: undefined
 */
export function isPedQueuedForDeletion(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedQueuedForDeletion(_ped);
}
/**
 * Hash: 0xC70B5FAE151982D8 | ApiSet: undefined
 */
export function isPedPlantingBomb(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedPlantingBomb(_ped);
}
/**
 * ```
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 * ```
 * Hash: 0x47E4E977581C5B55 | ApiSet: undefined
 */
export function isPedRagdoll(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRagdoll(_ped);
}
/**
 * Hash: 0xA0BC8FAED8CFEB3C | ApiSet: undefined
 */
export function isPedReadyToRender(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedReadyToRender(_ped);
}
/**
 * ```
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0x625B774D75C87068 | ApiSet: undefined
 */
export function isPedRespondingToEvent(ped, eventType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return IsPedRespondingToEvent(_ped, eventType);
}
/**
 * ```
 * Returns whether the specified ped is reloading.
 * ```
 * Hash: 0x24B100C68C645951 | ApiSet: undefined
 */
export function isPedReloading(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedReloading(_ped);
}
/**
 * Hash: 0x2AFE52F782F25775 | ApiSet: undefined
 */
export function isPedRunningMobilePhoneTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRunningMobilePhoneTask(_ped);
}
/**
 * ```
 * Returns whether the specified ped is shooting.
 * ```
 * Hash: 0x34616828CD07F1A1 | ApiSet: undefined
 */
export function isPedShooting(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedShooting(_ped);
}
/**
 * Hash: 0x77525BBF433F2CD6 | ApiSet: undefined
 */
export function isPedRespondingToThreat(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRespondingToThreat(_ped);
}
/**
 * ```
 * Detect if ped is in any vehicle
 * [True/False]
 * ```
 * Hash: 0x826AA586EDB9FEF8 | ApiSet: undefined
 */
export function isPedSittingInAnyVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSittingInAnyVehicle(_ped);
}
/**
 * Hash: 0xE3B6097CC25AA69E | ApiSet: undefined
 */
export function isPedRunningRagdollTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRunningRagdollTask(_ped);
}
/**
 * Hash: 0xD6740E14E4CEFC0B | ApiSet: undefined
 */
export function isPedSliding(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSliding(_ped);
}
/**
 * Hash: 0x84D0BF2B21862059 | ApiSet: undefined
 */
export function isPedSitting(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSitting(_ped);
}
/**
 * Hash: 0x530944F6F4B8A214 | ApiSet: undefined
 */
export function isPedStopped(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedStopped(_ped);
}
/**
 * ```
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 * ```
 * Hash: 0xA808AA1D79230FC2 | ApiSet: undefined
 */
export function isPedSittingInVehicle(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPedSittingInVehicle(_ped, _vehicle);
}
/**
 * Hash: 0xC024869A53992F34 | ApiSet: undefined
 */
export function isPedSwimmingUnderWater(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSwimmingUnderWater(_ped);
}
/**
 * Hash: 0x02AA2096FE00F3E1 | ApiSet: undefined
 */
export function isPedTargetActionDisableFlagEnabled(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedTargetActionDisableFlagEnabled(_ped, actionDisableFlag);
}
/**
 * Hash: 0x00E73468D085F745 | ApiSet: undefined
 */
export function isPedUsingActionMode(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedUsingActionMode(_ped);
}
/**
 * Hash: 0x57AB4A3080F85143 | ApiSet: undefined
 */
export function isPedUsingAnyScenario(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedUsingAnyScenario(_ped);
}
/**
 * Hash: 0x9DE327631295B4C2 | ApiSet: undefined
 */
export function isPedSwimming(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSwimming(_ped);
}
/**
 * Hash: 0x9C54041BB66BCF9E | ApiSet: undefined
 */
export function isPedUsingThisScenario(ped, scenario) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedUsingThisScenario(_ped, scenario);
}
/**
 * Hash: 0xEBB208D6AE712C03 | ApiSet: undefined
 */
export function isPedUsingActionMode2(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedUsingActionMode2(_ped);
}
/**
 * ```
 * Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
 * ```
 * Hash: 0x34D6AC1157C8226C | ApiSet: undefined
 */
export function isPedUsingScenarioHash(ped, scenarioHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    return IsPedUsingScenarioHash(_ped, scenarioHash);
}
/**
 * Hash: 0x117C70D1F5730B5E | ApiSet: undefined
 */
export function isPedVaulting(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedVaulting(_ped);
}
/**
 * Hash: 0x5102307CE88798EB | ApiSet: undefined
 */
export function isPedVisibilityTracked(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedVisibilityTracked(_ped);
}
/**
 * Hash: 0x6E5CBCB3941D7D08 | ApiSet: undefined
 */
export function isTarget(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return IsTarget(_ped, _targetPed);
}
/**
 * Hash: 0x91A5F9CBEBB9D936 | ApiSet: undefined
 */
export function isScenarioBlockingAreaValid(p0) {
    return IsScenarioBlockingAreaValid(p0);
}
/**
 * ```
 * Returns true if ped is in perception (focused and looking at target ped)
 * Most float params are -1.f in R* Scripts
 * ```
 * Hash: 0x06087579E7AA85A9 | ApiSet: undefined
 */
export function isTargetPedInPerceptionArea(ped, targetPed, p2, customDistance, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return IsTargetPedInPerceptionArea(_ped, _targetPed, p2, customDistance, p4, p5);
}
/**
 * Hash: 0x31DC8D3F216D8509 | ApiSet: undefined
 */
export function isTextureValid(textureId) {
    return IsTextureValid(textureId);
}
/**
 * Hash: 0x772A1969F649E902 | ApiSet: undefined
 */
export function isThisModelAHorse(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsThisModelAHorse(model);
}
/**
 * ```
 * Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 * Target needs to be tracked first, won't work otherwise.
 * ```
 * Hash: 0x91C8E617F64188AC | ApiSet: undefined
 */
export function isTrackedPedVisible(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsTrackedPedVisible(_ped);
}
/**
 * Hash: 0x164CECC59E70DF86 | ApiSet: undefined
 */
export function isTrackedPedVisibilityPercentageNotLessThan(ped, percent) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsTrackedPedVisibilityPercentageNotLessThan(_ped, percent);
}
/**
 * Hash: 0x6FD7816A36615F48 | ApiSet: undefined
 */
export function knockOffPedProp(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    KnockOffPedProp(_ped, p1, p2, p3, p4);
}
/**
 * ```
 * _IS_TRACKED_* - IS_V*
 * ```
 * Hash: 0xAF61B3CD8C3B82C3 | ApiSet: undefined
 */
export function isUsingSlipstream(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsUsingSlipstream(_ped);
}
/**
 * Hash: 0x45BBCBA77C29A841 | ApiSet: undefined
 */
export function knockPedOffVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    KnockPedOffVehicle(_ped);
}
/**
 * Hash: 0x00B380FF2DF6AB7A | ApiSet: undefined
 */
export function _0x00B380FF2DF6AB7A(p0, p1) {
    Citizen.invokeNative('0x00B380FF2DF6AB7A', p0, p1);
}
/**
 * Hash: 0x0105FEE8F9091255 | ApiSet: undefined
 */
export function _0x0105FEE8F9091255(p0, p1) {
    return Citizen.invokeNative('0x0105FEE8F9091255', p0, p1);
}
/**
 * Hash: 0x024EC9B649111915 | ApiSet: undefined
 */
export function _0x024EC9B649111915(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x024EC9B649111915', _ped, p1);
}
/**
 * ```
 * _SET_ST* - _SET_SW*
 * ```
 * Hash: 0x028E7B3BBA0BD2FC | ApiSet: undefined
 */
export function _0x028E7B3BBA0BD2FC(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x028E7B3BBA0BD2FC', _ped);
}
/**
 * ```
 * _DOES_GROUP_* - _DOES_N*
 * ```
 * Hash: 0x0455546F23FF08E4 | ApiSet: undefined
 */
export function _0x0455546F23FF08E4(groupId) {
    return Citizen.invokeNative('0x0455546F23FF08E4', groupId);
}
/**
 * ```
 * _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
 * ```
 * Hash: 0x02E741E19E39628C | ApiSet: undefined
 */
export function _0x02E741E19E39628C(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x02E741E19E39628C', _ped, p1);
}
/**
 * ```
 * _GET_PED_D*
 * ```
 * Hash: 0x06A10B4D7F50B0C3 | ApiSet: undefined
 */
export function _0x06A10B4D7F50B0C3(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x06A10B4D7F50B0C3', _ped);
}
/**
 * Hash: 0x09171A6F8FDE5DC1 | ApiSet: undefined
 */
export function _0x09171A6F8FDE5DC1(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x09171A6F8FDE5DC1', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x09D7AFD3716DA8E1 | ApiSet: undefined
 */
export function _0x09D7AFD3716DA8E1(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x09D7AFD3716DA8E1', _ped, p1);
}
/**
 * Hash: 0x070A3841406C43D5 | ApiSet: undefined
 */
export function _0x070A3841406C43D5(p0, p1) {
    Citizen.invokeNative('0x070A3841406C43D5', p0, p1);
}
/**
 * Hash: 0x07EA5B053FA60AC7 | ApiSet: undefined
 */
export function _0x07EA5B053FA60AC7(groupId, p1) {
    Citizen.invokeNative('0x07EA5B053FA60AC7', groupId, p1);
}
/**
 * Hash: 0x095C2277FED731DB | ApiSet: undefined
 */
export function _0x095C2277FED731DB(p0) {
    return Citizen.invokeNative('0x095C2277FED731DB', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0B787A37EEDD226F | ApiSet: undefined
 */
export function _0x0B787A37EEDD226F(p0, p1) {
    Citizen.invokeNative('0x0B787A37EEDD226F', p0, p1);
}
/**
 * Hash: 0x09E378C52B1433B5 | ApiSet: undefined
 */
export function _0x09E378C52B1433B5(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x09E378C52B1433B5', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x0A4618FFD517E24D | ApiSet: undefined
 */
export function _0x0A4618FFD517E24D(p0, p1) {
    Citizen.invokeNative('0x0A4618FFD517E24D', p0, p1);
}
/**
 * ```
 * _IS_PED_M*
 * ```
 * Hash: 0x0D3B1568917EBDA0 | ApiSet: undefined
 */
export function _0x0D3B1568917EBDA0(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x0D3B1568917EBDA0', _ped, p1);
}
/**
 * Hash: 0x0D497AA69059FE40 | ApiSet: undefined
 */
export function _0x0D497AA69059FE40(p0, p1) {
    Citizen.invokeNative('0x0D497AA69059FE40', p0, p1);
}
/**
 * ```
 * _CAN_PED_B* - _CAN_PED_I*
 * ```
 * Hash: 0x0EA9EACBA3B01601 | ApiSet: undefined
 */
export function _0x0EA9EACBA3B01601(ped1, ped2, p2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return Citizen.invokeNative('0x0EA9EACBA3B01601', _ped1, _ped2, p2);
}
/**
 * ```
 * _IS_PED_L* - _IS_PED_M*
 * ```
 * Hash: 0x0EEF7A81C17679DB | ApiSet: undefined
 */
export function _0x0EEF7A81C17679DB(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x0EEF7A81C17679DB', _ped);
}
/**
 * Hash: 0x0F967019CC853BCC | ApiSet: undefined
 */
export function _0x0F967019CC853BCC(p0, p1) {
    Citizen.invokeNative('0x0F967019CC853BCC', p0, p1);
}
/**
 * Hash: 0x0ADA3EC589E1736E | ApiSet: undefined
 */
export function _0x0ADA3EC589E1736E() {
    Citizen.invokeNative('0x0ADA3EC589E1736E');
}
/**
 * Hash: 0x0FB1BA7FF73B41E1 | ApiSet: undefined
 */
export function _0x0FB1BA7FF73B41E1(p0, p1, p2) {
    Citizen.invokeNative('0x0FB1BA7FF73B41E1', p0, p1, p2);
}
/**
 * Hash: 0x0FFDF937E5C11382 | ApiSet: undefined
 */
export function _0x0FFDF937E5C11382(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0x0FFDF937E5C11382', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x101B45C5F56D970F | ApiSet: undefined
 */
export function _0x101B45C5F56D970F(ped, damageCleanliness, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x101B45C5F56D970F', _ped, damageCleanliness, p3);
}
/**
 * ```
 * _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
 * ```
 * Hash: 0x1148F706CF4EBDDA | ApiSet: undefined
 */
export function _0x1148F706CF4EBDDA(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0x1148F706CF4EBDDA', _ped, p1, p2);
}
/**
 * Hash: 0x1298B3D8E4C2409F | ApiSet: undefined
 */
export function _0x1298B3D8E4C2409F(p0) {
    Citizen.invokeNative('0x1298B3D8E4C2409F', p0);
}
/**
 * ```
 * NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
 * ```
 * Hash: 0x10F96086123B939F | ApiSet: undefined
 */
export function _0x10F96086123B939F(legendaryPed, preyPed, p2) {
    const _legendaryPed = legendaryPed instanceof Ped ? legendaryPed.handle() : legendaryPed;
    const _preyPed = preyPed instanceof Ped ? preyPed.handle() : preyPed;
    Citizen.invokeNative('0x10F96086123B939F', _legendaryPed, _preyPed, p2);
}
/**
 * ```
 * _GET_PED_M*
 * ```
 * Hash: 0x134775B093AD5C38 | ApiSet: undefined
 */
export function _0x134775B093AD5C38(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x134775B093AD5C38', _ped);
}
/**
 * ```
 * _GET_IS_PED_(BLEEDING_OUT?)*
 * ```
 * Hash: 0x12EB4E31F092C9B3 | ApiSet: undefined
 */
export function _0x12EB4E31F092C9B3(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x12EB4E31F092C9B3', _ped);
}
/**
 * ```
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 * ```
 * Hash: 0x154B7E841AC7412F | ApiSet: undefined
 */
export function _0x154B7E841AC7412F(groupId, p1) {
    Citizen.invokeNative('0x154B7E841AC7412F', groupId, p1);
}
/**
 * ```
 * _SET_A* - _SET_B*
 * ```
 * Hash: 0x12F2D161BF4031FC | ApiSet: undefined
 */
export function _0x12F2D161BF4031FC(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x12F2D161BF4031FC', _ped, p1);
}
/**
 * Hash: 0x15F4732C357B1D6D | ApiSet: undefined
 */
export function _0x15F4732C357B1D6D(p0, p1, p2) {
    Citizen.invokeNative('0x15F4732C357B1D6D', p0, p1, p2);
}
/**
 * Hash: 0x16802C32B2FCA06B | ApiSet: undefined
 */
export function _0x16802C32B2FCA06B(p0, p1, p2, p3) {
    Citizen.invokeNative('0x16802C32B2FCA06B', p0, p1, p2, p3);
}
/**
 * ```
 * _SET_PED_CA* - _SET_PED_CO*
 * ```
 * Hash: 0x1D4636C90BBEFACB | ApiSet: undefined
 */
export function _0x1D4636C90BBEFACB(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x1D4636C90BBEFACB', _ped, p1);
}
/**
 * ```
 * _PED_COWER_M*
 * ```
 * Hash: 0x16F798A05BB9E3B5 | ApiSet: undefined
 */
export function _0x16F798A05BB9E3B5(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x16F798A05BB9E3B5', _ped);
}
/**
 * ```
 * Only used in SP R* Scripts
 * Params: p2 = same as p2 of 0x3C529A827998F9B3
 * _SET_PED_TA* - _SET_PED_TO_*
 * ```
 * Hash: 0x1F44B7E283C09EDE | ApiSet: undefined
 */
export function _0x1F44B7E283C09EDE(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x1F44B7E283C09EDE', _ped, p1, p2);
}
/**
 * Hash: 0x1D23D3F70606D788 | ApiSet: undefined
 */
export function _0x1D23D3F70606D788(p0, p1) {
    Citizen.invokeNative('0x1D23D3F70606D788', p0, p1);
}
/**
 * Hash: 0x1E017404784AA6A3 | ApiSet: undefined
 */
export function _0x1E017404784AA6A3(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0x1E017404784AA6A3', _ped, p1);
}
/**
 * Hash: 0x1F8215D0E446F593 | ApiSet: undefined
 */
export function _0x1F8215D0E446F593(p0, p1, p2) {
    Citizen.invokeNative('0x1F8215D0E446F593', p0, p1, p2);
}
/**
 * Hash: 0x23BDE06596A22CEC | ApiSet: undefined
 */
export function _0x23BDE06596A22CEC(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x23BDE06596A22CEC', _ped, p1, p2, p3);
}
/**
 * Hash: 0x2371C39D4F91C288 | ApiSet: undefined
 */
export function _0x2371C39D4F91C288(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x2371C39D4F91C288', _ped);
}
/**
 * ```
 * _IS_PED_FL* - _IS_PED_FU*
 * ```
 * Hash: 0x256EDD55C6BE1482 | ApiSet: undefined
 */
export function _0x256EDD55C6BE1482(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x256EDD55C6BE1482', _ped);
}
/**
 * Hash: 0x242EDF85D4E87B65 | ApiSet: undefined
 */
export function _0x242EDF85D4E87B65(p0) {
    return Citizen.invokeNative('0x242EDF85D4E87B65', p0);
}
/**
 * Hash: 0x273915CE30780986 | ApiSet: undefined
 */
export function _0x273915CE30780986(p0, p1) {
    return Citizen.invokeNative('0x273915CE30780986', p0, p1);
}
/**
 * ```
 * _IS_PED_L* - _IS_PED_M*
 * ```
 * Hash: 0x290B2E6CCDE532E1 | ApiSet: undefined
 */
export function _0x290B2E6CCDE532E1(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x290B2E6CCDE532E1', _ped);
}
/**
 * Hash: 0x29F3539189D3E277 | ApiSet: undefined
 */
export function _0x29F3539189D3E277(p0, p1) {
    Citizen.invokeNative('0x29F3539189D3E277', p0, p1);
}
/**
 * Hash: 0x27E8A84C12B0B7D1 | ApiSet: undefined
 */
export function _0x27E8A84C12B0B7D1(p0, p1, p2) {
    return Citizen.invokeNative('0x27E8A84C12B0B7D1', p0, p1, p2);
}
/**
 * ```
 * Used in Script Function CHECK_IS_PLAYER_SEEN
 * _GET_PED_*
 * ```
 * Hash: 0x2BA9D7BF629F920C | ApiSet: undefined
 */
export function _0x2BA9D7BF629F920C(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x2BA9D7BF629F920C', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x28508173C6A7CC18 | ApiSet: undefined
 */
export function _0x28508173C6A7CC18(p0) {
    Citizen.invokeNative('0x28508173C6A7CC18', p0);
}
/**
 * Hash: 0x2D976DBDC731DF80 | ApiSet: undefined
 */
export function _0x2D976DBDC731DF80(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x2D976DBDC731DF80', _ped);
}
/**
 * ```
 * _SET_PED_K* or _SET_PED_L*
 * ```
 * Hash: 0x29924EB8EE9DB926 | ApiSet: undefined
 */
export function _0x29924EB8EE9DB926(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x29924EB8EE9DB926', _ped, p1);
}
/**
 * ```
 * _IS_PED_D*
 * ```
 * Hash: 0x2DC0E8DCBD3546E9 | ApiSet: undefined
 */
export function _0x2DC0E8DCBD3546E9(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x2DC0E8DCBD3546E9', _ped);
}
/**
 * Hash: 0x2B4CE170DE09F346 | ApiSet: undefined
 */
export function _0x2B4CE170DE09F346(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x2B4CE170DE09F346', _ped, p1);
}
/**
 * ```
 * _IS_PED_M* - _IS_PED_O*
 * ```
 * Hash: 0x2DD4E0E26DFAD97D | ApiSet: undefined
 */
export function _0x2DD4E0E26DFAD97D(ped1, ped2, p2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return Citizen.invokeNative('0x2DD4E0E26DFAD97D', _ped1, _ped2, p2);
}
/**
 * Hash: 0x2E5B5D1F1453E08E | ApiSet: undefined
 */
export function _0x2E5B5D1F1453E08E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x2E5B5D1F1453E08E', _ped, p1);
}
/**
 * Hash: 0x2FA568BFA725F8D6 | ApiSet: undefined
 */
export function _0x2FA568BFA725F8D6(p0, p1, p2, p3) {
    Citizen.invokeNative('0x2FA568BFA725F8D6', p0, p1, p2, p3);
}
/**
 * Hash: 0x31B2E7F2E3C58B89 | ApiSet: undefined
 */
export function _0x31B2E7F2E3C58B89(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x31B2E7F2E3C58B89', p0, p1, p2, p3);
}
/**
 * Hash: 0x32417CB860A3BDC4 | ApiSet: undefined
 */
export function _0x32417CB860A3BDC4(p0, p1) {
    return Citizen.invokeNative('0x32417CB860A3BDC4', p0, p1);
}
/**
 * ```
 * Only used in R* SP Script short_update
 * _GET_TARGET_* - _GET_TRACKED*
 * ```
 * Hash: 0x326F7951EF0D7F75 | ApiSet: undefined
 */
export function _0x326F7951EF0D7F75(ped, eventType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return Citizen.invokeNative('0x326F7951EF0D7F75', _ped, eventType);
}
/**
 * ```
 * _SET_PED_P* - _SET_PED_R*
 * ```
 * Hash: 0x329772C47DBB2FBC | ApiSet: undefined
 */
export function _0x329772C47DBB2FBC(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x329772C47DBB2FBC', _ped);
}
/**
 * ```
 * _STOP_(?)*
 * ```
 * Hash: 0x32CCAD8A981B53D3 | ApiSet: undefined
 */
export function _0x32CCAD8A981B53D3(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x32CCAD8A981B53D3', _ped);
}
/**
 * Hash: 0x32CEDA9A0AB4CEF7 | ApiSet: undefined
 */
export function _0x32CEDA9A0AB4CEF7(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x32CEDA9A0AB4CEF7', _ped, p1, p2);
}
/**
 * Hash: 0x34B5CEAC180A5D6E | ApiSet: undefined
 */
export function _0x34B5CEAC180A5D6E(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x34B5CEAC180A5D6E', _ped, p1, p2);
}
/**
 * Hash: 0x34C11114887150FD | ApiSet: undefined
 */
export function _0x34C11114887150FD(p0, p1) {
    Citizen.invokeNative('0x34C11114887150FD', p0, p1);
}
/**
 * Hash: 0x34EDDD59364AD74A | ApiSet: undefined
 */
export function _0x34EDDD59364AD74A(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x34EDDD59364AD74A', _ped);
}
/**
 * ```
 * _RESET_PED_*
 * ```
 * Hash: 0x36513AFFC703C60D | ApiSet: undefined
 */
export function _0x36513AFFC703C60D(p0) {
    Citizen.invokeNative('0x36513AFFC703C60D', p0);
}
/**
 * Hash: 0x354CA4DDDEEC397A | ApiSet: undefined
 */
export function _0x354CA4DDDEEC397A(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x354CA4DDDEEC397A', _ped);
}
/**
 * ```
 * _SET_PED_MO*
 * ```
 * Hash: 0x3A5697B80FED5EBE | ApiSet: undefined
 */
export function _0x3A5697B80FED5EBE(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3A5697B80FED5EBE', _ped, p1, p2, p3, p4);
}
/**
 * ```
 * _IS_PED_R*
 * ```
 * Hash: 0x3AEC4A410ECAF30D | ApiSet: undefined
 */
export function _0x3AEC4A410ECAF30D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x3AEC4A410ECAF30D', _ped);
}
/**
 * Hash: 0x3D9F958834AB9C30 | ApiSet: undefined
 */
export function _0x3D9F958834AB9C30(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x3D9F958834AB9C30', _ped);
}
/**
 * ```
 * _RESET_PED_*
 * ```
 * Hash: 0x370A973252741AC4 | ApiSet: undefined
 */
export function _0x370A973252741AC4(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x370A973252741AC4', _ped, p1);
}
/**
 * ```
 * Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
 * Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
 * Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
 * _GET_NUM_M* - _GET_PEDS_J*
 * ```
 * Hash: 0x3ACCE14DFA6BA8C2 | ApiSet: undefined
 */
export function _0x3ACCE14DFA6BA8C2(ped, p1, position, p5, itemset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x3ACCE14DFA6BA8C2', _ped, p1, position.x, position.y, position.z, p5, itemset);
}
/**
 * ```
 * _SET_PED_TA* - _SET_PED_TO_*
 * ```
 * Hash: 0x3C529A827998F9B3 | ApiSet: undefined
 */
export function _0x3C529A827998F9B3(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3C529A827998F9B3', _ped, p1, p2);
}
/**
 * ```
 * Used for script function PROCESS_PLAYER_HAT_EVENT
 * Returns requestId to be used with 0x13E7320C762F0477
 * ```
 * Hash: 0x3FCBB5FCFD968698 | ApiSet: undefined
 */
export function _0x3FCBB5FCFD968698(drawable, albedo, normal, material, p4) {
    if (typeof drawable === 'string')
        drawable = this.getHashKey(drawable);
    if (typeof albedo === 'string')
        albedo = this.getHashKey(albedo);
    if (typeof normal === 'string')
        normal = this.getHashKey(normal);
    if (typeof material === 'string')
        material = this.getHashKey(material);
    return Citizen.invokeNative('0x3FCBB5FCFD968698', drawable, albedo, normal, material, p4);
}
/**
 * ```
 * Changes health bar around heart core icon
 * INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
 * INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
 * _SET_D*
 * ```
 * Hash: 0x3FDCC1F8C17E303E | ApiSet: undefined
 */
export function _0x3FDCC1F8C17E303E(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3FDCC1F8C17E303E', _ped, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x3EFED081B4834BA1 | ApiSet: undefined
 */
export function _0x3EFED081B4834BA1(p0) {
    Citizen.invokeNative('0x3EFED081B4834BA1', p0);
}
/**
 * ```
 * _SET_PED_A*
 * ```
 * Hash: 0x405180B14DA5A935 | ApiSet: undefined
 */
export function _0x405180B14DA5A935(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x405180B14DA5A935', _ped, p1);
}
/**
 * Hash: 0x3FDBB99EFD8CE4AF | ApiSet: undefined
 */
export function _0x3FDBB99EFD8CE4AF(p0, p1, p2) {
    Citizen.invokeNative('0x3FDBB99EFD8CE4AF', p0, p1, p2);
}
/**
 * ```
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 * ```
 * Hash: 0x40C3524D4ED83554 | ApiSet: undefined
 */
export function _0x40C3524D4ED83554(groupId, p1) {
    Citizen.invokeNative('0x40C3524D4ED83554', groupId, p1);
}
/**
 * Hash: 0x413697EC260AABBF | ApiSet: undefined
 */
export function _0x413697EC260AABBF(p0, p1, p2) {
    Citizen.invokeNative('0x413697EC260AABBF', p0, p1, p2);
}
/**
 * ```
 * _IS_PED_RE*
 * ```
 * Hash: 0x40C9155AF8BC13F3 | ApiSet: undefined
 */
export function _0x40C9155AF8BC13F3(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x40C9155AF8BC13F3', _ped);
}
/**
 * ```
 * _SET_PED_IN*
 * ```
 * Hash: 0x45FEA6D5539BD474 | ApiSet: undefined
 */
export function _0x45FEA6D5539BD474(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x45FEA6D5539BD474', _ped, p1);
}
/**
 * ```
 * _SET_PED_IN*
 * ```
 * Hash: 0x41C23A8E6B344867 | ApiSet: undefined
 */
export function _0x41C23A8E6B344867(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x41C23A8E6B344867', _ped, p1);
}
/**
 * Hash: 0x49DADFC4CD808B0A | ApiSet: undefined
 */
export function _0x49DADFC4CD808B0A(p0, p1, p2) {
    Citizen.invokeNative('0x49DADFC4CD808B0A', p0, p1, p2);
}
/**
 * Hash: 0x4642182A298187D0 | ApiSet: undefined
 */
export function _0x4642182A298187D0(ped, p1, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x4642182A298187D0', _ped, p1, p3, p4);
}
/**
 * ```
 * Returns vehicle (desired) speed
 * _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
 * ```
 * Hash: 0x46BF2A810679D6E6 | ApiSet: undefined
 */
export function _0x46BF2A810679D6E6(ped, maxMoveBlendRatio) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x46BF2A810679D6E6', _ped, maxMoveBlendRatio);
}
/**
 * Hash: 0x4E68C7EF706DF35D | ApiSet: undefined
 */
export function _0x4E68C7EF706DF35D(ped, position, p4, relationshipGroup) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof relationshipGroup === 'string')
        relationshipGroup = this.getHashKey(relationshipGroup);
    Citizen.invokeNative('0x4E68C7EF706DF35D', _ped, position.x, position.y, position.z, p4, relationshipGroup);
}
/**
 * ```
 * _SET_PED_A*
 * ```
 * Hash: 0x4EC4EA2F72B36358 | ApiSet: undefined
 */
export function _0x4EC4EA2F72B36358(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x4EC4EA2F72B36358', _ped, p1);
}
/**
 * Hash: 0x4B19F171450E0D4F | ApiSet: undefined
 */
export function _0x4B19F171450E0D4F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x4B19F171450E0D4F', _ped);
}
/**
 * Hash: 0x4F27603E44A8E4C0 | ApiSet: undefined
 */
export function _0x4F27603E44A8E4C0(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x4F27603E44A8E4C0', _ped, p1, p2);
}
/**
 * ```
 * Only used in R* Script shop_harriet
 * _SET_PED_F*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4F63433CE3C08230 | ApiSet: undefined
 */
export function _0x4F63433CE3C08230(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x4F63433CE3C08230', _ped, p1);
}
/**
 * Hash: 0x52A24D8A1DA89658 | ApiSet: undefined
 */
export function _0x52A24D8A1DA89658(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x52A24D8A1DA89658', _ped, p1, p2);
}
/**
 * Hash: 0x5203038FF8BAE577 | ApiSet: undefined
 */
export function _0x5203038FF8BAE577(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x5203038FF8BAE577', _ped, p1, p2);
}
/**
 * Hash: 0x53BA7D96B9A421D9 | ApiSet: undefined
 */
export function _0x53BA7D96B9A421D9(p0, p1) {
    Citizen.invokeNative('0x53BA7D96B9A421D9', p0, p1);
}
/**
 * Hash: 0x52250B92EA70BE3D | ApiSet: undefined
 */
export function _0x52250B92EA70BE3D(p0) {
    return Citizen.invokeNative('0x52250B92EA70BE3D', p0);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x54D3CD482742C482 | ApiSet: undefined
 */
export function _0x54D3CD482742C482(animal, p2) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    Citizen.invokeNative('0x54D3CD482742C482', _animal, p2);
}
/**
 * ```
 * _HAS_PED_*
 * ```
 * Hash: 0x550CB89DD7F4FA3D | ApiSet: undefined
 */
export function _0x550CB89DD7F4FA3D(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return Citizen.invokeNative('0x550CB89DD7F4FA3D', _ped1, _ped2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x56076667E7C2DCD6 | ApiSet: undefined
 */
export function _0x56076667E7C2DCD6(p0, p1) {
    Citizen.invokeNative('0x56076667E7C2DCD6', p0, p1);
}
/**
 * Hash: 0x55546004A244302A | ApiSet: undefined
 */
export function _0x55546004A244302A(p0, p1) {
    Citizen.invokeNative('0x55546004A244302A', p0, p1);
}
/**
 * Hash: 0x56E4BAD93D33453C | ApiSet: undefined
 */
export function _0x56E4BAD93D33453C(p0, p1) {
    return Citizen.invokeNative('0x56E4BAD93D33453C', p0, p1);
}
/**
 * ```
 * _SET_PED_M*
 * ```
 * Hash: 0x57F35552E771BE9D | ApiSet: undefined
 */
export function _0x57F35552E771BE9D(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x57F35552E771BE9D', _ped, p1);
}
/**
 * ```
 * _IS_PED_C* - _IS_PED_D*
 * ```
 * Hash: 0x577C60BA06D0EA64 | ApiSet: undefined
 */
export function _0x577C60BA06D0EA64(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x577C60BA06D0EA64', _ped);
}
/**
 * Hash: 0x58D32261AE0F0843 | ApiSet: undefined
 */
export function _0x58D32261AE0F0843(ped, boneId, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x58D32261AE0F0843', _ped, boneId, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * ```
 * _SET_C*
 * ```
 * Hash: 0x5AF24CA9C974E51A | ApiSet: undefined
 */
export function _0x5AF24CA9C974E51A(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    Citizen.invokeNative('0x5AF24CA9C974E51A', _ped1, _ped2);
}
/**
 * ```
 * _C*
 * ```
 * Hash: 0x5A1A929C8B729B4A | ApiSet: undefined
 */
export function _0x5A1A929C8B729B4A(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x5A1A929C8B729B4A', _ped);
}
/**
 * Hash: 0x5BB04BC74A474B47 | ApiSet: undefined
 */
export function _0x5BB04BC74A474B47(p0, p1) {
    Citizen.invokeNative('0x5BB04BC74A474B47', p0, p1);
}
/**
 * ```
 * _IS_PED_B* - _IS_PED_C*
 * ```
 * Hash: 0x5BF0B9D9A8E227A0 | ApiSet: undefined
 */
export function _0x5BF0B9D9A8E227A0(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x5BF0B9D9A8E227A0', _ped);
}
/**
 * Hash: 0x5C90E20C25E6D83C | ApiSet: undefined
 */
export function _0x5C90E20C25E6D83C(p0) {
    Citizen.invokeNative('0x5C90E20C25E6D83C', p0);
}
/**
 * Hash: 0x5B73975B4F12F7F3 | ApiSet: undefined
 */
export function _0x5B73975B4F12F7F3(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x5B73975B4F12F7F3', p0, p1, p2, p3, p4);
}
/**
 * ```
 * _IS_PED_IN*
 * ```
 * Hash: 0x5C6C7C70CA302801 | ApiSet: undefined
 */
export function _0x5C6C7C70CA302801(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x5C6C7C70CA302801', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x5CB2EBB467BE3ED6 | ApiSet: undefined
 */
export function _0x5CB2EBB467BE3ED6(animal, p2) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    Citizen.invokeNative('0x5CB2EBB467BE3ED6', _animal, p2);
}
/**
 * ```
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
 * ```
 * Hash: 0x5CA20FBE49891BBD | ApiSet: undefined
 */
export function _0x5CA20FBE49891BBD(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x5CA20FBE49891BBD', _ped, p1);
}
/**
 * Hash: 0x5DA36CCCB63C0895 | ApiSet: undefined
 */
export function _0x5DA36CCCB63C0895(p0, p1, p2) {
    return Citizen.invokeNative('0x5DA36CCCB63C0895', p0, p1, p2);
}
/**
 * ```
 * Related to ped hat
 * _SET_PED_LA* - _SET_PED_LE*
 * ```
 * Hash: 0x5D4CD22A8C82A81A | ApiSet: undefined
 */
export function _0x5D4CD22A8C82A81A(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x5D4CD22A8C82A81A', _ped, p1);
}
/**
 * ```
 * Only used in R* SP Scripts
 * _GET_PED_IN*
 * ```
 * Hash: 0x5E9FAF6C513347B4 | ApiSet: undefined
 */
export function _0x5E9FAF6C513347B4(ped, eventType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return Citizen.invokeNative('0x5E9FAF6C513347B4', _ped, eventType);
}
/**
 * Hash: 0x5FCF25D584065BFD | ApiSet: undefined
 */
export function _0x5FCF25D584065BFD(p0, p1, p2, p3) {
    Citizen.invokeNative('0x5FCF25D584065BFD', p0, p1, p2, p3);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0x600BBDD29820370C | ApiSet: undefined
 */
export function _0x600BBDD29820370C(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x600BBDD29820370C', _ped);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0x606D529DADA3C940 | ApiSet: undefined
 */
export function _0x606D529DADA3C940(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x606D529DADA3C940', _ped, p1);
}
/**
 * Hash: 0x5EFA8A3D8A60D662 | ApiSet: undefined
 */
export function _0x5EFA8A3D8A60D662(p0, p1) {
    return Citizen.invokeNative('0x5EFA8A3D8A60D662', p0, p1);
}
/**
 * Hash: 0x604E1010E3162E86 | ApiSet: undefined
 */
export function _0x604E1010E3162E86(p0, p1, p2) {
    Citizen.invokeNative('0x604E1010E3162E86', p0, p1, p2);
}
/**
 * ```
 * Returns p1 value for 0x8E84119A23C16623
 * ```
 * Hash: 0x62FDF4E678E40CC6 | ApiSet: undefined
 */
export function _0x62FDF4E678E40CC6(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return Citizen.invokeNative('0x62FDF4E678E40CC6', _entity, p1);
}
/**
 * Hash: 0x633F83B301C87994 | ApiSet: undefined
 */
export function _0x633F83B301C87994(p0, p1) {
    Citizen.invokeNative('0x633F83B301C87994', p0, p1);
}
/**
 * Hash: 0x6734F0A6A52C371C | ApiSet: undefined
 */
export function _0x6734F0A6A52C371C(player, horseSlot) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x6734F0A6A52C371C', _player, horseSlot);
}
/**
 * Hash: 0x6A190B94C2541A99 | ApiSet: undefined
 */
export function _0x6A190B94C2541A99(p0) {
    Citizen.invokeNative('0x6A190B94C2541A99', p0);
}
/**
 * ```
 * _SET_PED_M*
 * ```
 * Hash: 0x642720D8D69328B6 | ApiSet: undefined
 */
export function _0x642720D8D69328B6(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x642720D8D69328B6', _ped, p1);
}
/**
 * Hash: 0x6A489892E813951A | ApiSet: undefined
 */
export function _0x6A489892E813951A(p0) {
    Citizen.invokeNative('0x6A489892E813951A', p0);
}
/**
 * ```
 * _IS_N* - _IS_P*
 * ```
 * Hash: 0x6507AC3BD7C99009 | ApiSet: undefined
 */
export function _0x6507AC3BD7C99009(position, p3) {
    return Citizen.invokeNative('0x6507AC3BD7C99009', position.x, position.y, position.z, p3);
}
/**
 * Hash: 0x6B67320E0D57856A | ApiSet: undefined
 */
export function _0x6B67320E0D57856A(ped, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x6B67320E0D57856A', _ped, p2, p3);
}
/**
 * ```
 * Only used in R* SP Script winter1: p1 = 5000
 * _SET_PED_M*
 * ```
 * Hash: 0x6DB875AFC584FA32 | ApiSet: undefined
 */
export function _0x6DB875AFC584FA32(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x6DB875AFC584FA32', _ped, p1);
}
/**
 * Hash: 0x6F43C351A5D51E2F | ApiSet: undefined
 */
export function _0x6F43C351A5D51E2F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x6F43C351A5D51E2F', _ped);
}
/**
 * ```
 * Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
 * ```
 * Hash: 0x6E8B87139854022D | ApiSet: undefined
 */
export function _0x6E8B87139854022D(ped, clipset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x6E8B87139854022D', _ped, clipset);
}
/**
 * ```
 * _HAS_*
 * ```
 * Hash: 0x7020839C7302D8AC | ApiSet: undefined
 */
export function _0x7020839C7302D8AC(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x7020839C7302D8AC', _ped);
}
/**
 * Hash: 0x6F46F8ACB44C4FC1 | ApiSet: undefined
 */
export function _0x6F46F8ACB44C4FC1(p0) {
    return Citizen.invokeNative('0x6F46F8ACB44C4FC1', p0);
}
/**
 * ```
 * _SET_PED_F*
 * ```
 * Hash: 0x735662994E60A710 | ApiSet: undefined
 */
export function _0x735662994E60A710(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x735662994E60A710', _ped, p1);
}
/**
 * Hash: 0x7406C71F4AC2FFCC | ApiSet: undefined
 */
export function _0x7406C71F4AC2FFCC(p0) {
    Citizen.invokeNative('0x7406C71F4AC2FFCC', p0);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0x704C908E9C405136 | ApiSet: undefined
 */
export function _0x704C908E9C405136(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x704C908E9C405136', _ped);
}
/**
 * ```
 * _SET_PED_MO*
 * ```
 * Hash: 0x712B2C2B2471B493 | ApiSet: undefined
 */
export function _0x712B2C2B2471B493(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x712B2C2B2471B493', _ped, p1);
}
/**
 * Hash: 0x758F081DB204DDDE | ApiSet: undefined
 */
export function _0x758F081DB204DDDE(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x758F081DB204DDDE', _ped);
}
/**
 * Hash: 0x75A082563B4452E5 | ApiSet: undefined
 */
export function _0x75A082563B4452E5(p0, p1, p2, p3) {
    Citizen.invokeNative('0x75A082563B4452E5', p0, p1, p2, p3);
}
/**
 * ```
 * Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x763FA8A9D76EE3A7 | ApiSet: undefined
 */
export function _0x763FA8A9D76EE3A7(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x763FA8A9D76EE3A7', _ped);
}
/**
 * Hash: 0x75D3333409CD33CE | ApiSet: undefined
 */
export function _0x75D3333409CD33CE(p0, p1, p2) {
    Citizen.invokeNative('0x75D3333409CD33CE', p0, p1, p2);
}
/**
 * Hash: 0x7ABBD9E449E0DB00 | ApiSet: undefined
 */
export function _0x7ABBD9E449E0DB00(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x7ABBD9E449E0DB00', _ped, p1);
}
/**
 * Hash: 0x7B5C293238EE4F20 | ApiSet: undefined
 */
export function _0x7B5C293238EE4F20(p0) {
    return Citizen.invokeNative('0x7B5C293238EE4F20', p0);
}
/**
 * ```
 * _IS_I* - _IS_L*
 * ```
 * Hash: 0x77243ED4F7CAAA55 | ApiSet: undefined
 */
export function _0x77243ED4F7CAAA55(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x77243ED4F7CAAA55', _ped);
}
/**
 * ```
 * Only used in SP
 * _SET_REMOVE_PED*
 * ```
 * Hash: 0x7C08E7CB8D951B70 | ApiSet: undefined
 */
export function _0x7C08E7CB8D951B70(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x7C08E7CB8D951B70', _ped, p1);
}
/**
 * Hash: 0x7BB810E8B343AC7B | ApiSet: undefined
 */
export function _0x7BB810E8B343AC7B(p0) {
    return Citizen.invokeNative('0x7BB810E8B343AC7B', p0);
}
/**
 * Hash: 0x7C8AA850617651D9 | ApiSet: undefined
 */
export function _0x7C8AA850617651D9(p0, p1) {
    return Citizen.invokeNative('0x7C8AA850617651D9', p0, p1);
}
/**
 * ```
 * _CLEAR_PED_M*
 * ```
 * Hash: 0x7C10221CE718AA72 | ApiSet: undefined
 */
export function _0x7C10221CE718AA72(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x7C10221CE718AA72', _ped, p1);
}
/**
 * ```
 * _SET_FORMATION_P*
 * ```
 * Hash: 0x7E5185B979706210 | ApiSet: undefined
 */
export function _0x7E5185B979706210(groupId, p1) {
    Citizen.invokeNative('0x7E5185B979706210', groupId, p1);
}
/**
 * Hash: 0x7E8F9949B7AABBF0 | ApiSet: undefined
 */
export function _0x7E8F9949B7AABBF0(p0, p1, p2) {
    Citizen.invokeNative('0x7E8F9949B7AABBF0', p0, p1, p2);
}
/**
 * ```
 * _IS_PED_H* - _IS_PED_I*
 * ```
 * Hash: 0x7EE3A8660F38797E | ApiSet: undefined
 */
export function _0x7EE3A8660F38797E(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x7EE3A8660F38797E', _ped);
}
/**
 * ```
 * Only used in R* Script net_moonshine_property
 * _A* - _B*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x7EDB3C766B0D073F | ApiSet: undefined
 */
export function _0x7EDB3C766B0D073F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x7EDB3C766B0D073F', _ped);
}
/**
 * Hash: 0x7F090958AE95B61B | ApiSet: undefined
 */
export function _0x7F090958AE95B61B(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x7F090958AE95B61B', _ped, p1);
}
/**
 * ```
 * _ATTACH_*
 * ```
 * Hash: 0x8101BA1C0B462412 | ApiSet: undefined
 */
export function _0x8101BA1C0B462412(ped, ropeId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8101BA1C0B462412', _ped, ropeId);
}
/**
 * Hash: 0x82CB0F3F0C7785E5 | ApiSet: undefined
 */
export function _0x82CB0F3F0C7785E5(p0) {
    return Citizen.invokeNative('0x82CB0F3F0C7785E5', p0);
}
/**
 * ```
 * _SET_PED_COMBAT_R - _SET_PED_C*
 * ```
 * Hash: 0x815C0074A1BC0D93 | ApiSet: undefined
 */
export function _0x815C0074A1BC0D93(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x815C0074A1BC0D93', _ped, p1);
}
/**
 * Hash: 0x851966E1E35AF491 | ApiSet: undefined
 */
export function _0x851966E1E35AF491(p0, p1) {
    Citizen.invokeNative('0x851966E1E35AF491', p0, p1);
}
/**
 * ```
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_A*
 * ```
 * Hash: 0x85F500F4E24CA43E | ApiSet: undefined
 */
export function _0x85F500F4E24CA43E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x85F500F4E24CA43E', _ped, p1);
}
/**
 * ```
 * _SET_PED_*
 * ```
 * Hash: 0x86F0B6730C32AC14 | ApiSet: undefined
 */
export function _0x86F0B6730C32AC14(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x86F0B6730C32AC14', _ped, p1);
}
/**
 * Hash: 0x86FAFC18E3D4380C | ApiSet: undefined
 */
export function _0x86FAFC18E3D4380C(groupId, p1) {
    Citizen.invokeNative('0x86FAFC18E3D4380C', groupId, p1);
}
/**
 * Hash: 0x878E8104FA27CDAE | ApiSet: undefined
 */
export function _0x878E8104FA27CDAE(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x878E8104FA27CDAE', _vehicle, p1);
}
/**
 * ```
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 * ```
 * Hash: 0x87C2724A56F66020 | ApiSet: undefined
 */
export function _0x87C2724A56F66020(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x87C2724A56F66020', _ped);
}
/**
 * ```
 * If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
 * _GET_D* - _GET_E*
 * ```
 * Hash: 0x8822F139408B8D0A | ApiSet: undefined
 */
export function _0x8822F139408B8D0A(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x8822F139408B8D0A', _ped);
}
/**
 * ```
 * Only used in R* Script train_robbery4
 * _SET_PED_D*
 * ```
 * Hash: 0x8822F124788B8D0A | ApiSet: undefined
 */
export function _0x8822F124788B8D0A(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8822F124788B8D0A', _ped, p1);
}
/**
 * ```
 * Used in R* Script generic_weight_control_item
 * _CLEAR_PED_E* - CLEAR_PED_(G?)L*
 * ```
 * Hash: 0x88A95BB640FC186F | ApiSet: undefined
 */
export function _0x88A95BB640FC186F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x88A95BB640FC186F', _ped);
}
/**
 * Hash: 0x88A5564B19C15391 | ApiSet: undefined
 */
export function _0x88A5564B19C15391(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x88A5564B19C15391', _ped);
}
/**
 * Hash: 0x897934E868EDDD6C | ApiSet: undefined
 */
export function _0x897934E868EDDD6C(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x897934E868EDDD6C', _ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x88B2026A3B0BE33D | ApiSet: undefined
 */
export function _0x88B2026A3B0BE33D(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x88B2026A3B0BE33D', _ped, p1);
}
/**
 * ```
 * _GET_PED_B* - _GET_PED_C*
 * ```
 * Hash: 0x89816B58C3466262 | ApiSet: undefined
 */
export function _0x89816B58C3466262(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x89816B58C3466262', _ped);
}
/**
 * ```
 * _SET_PED_O*
 * ```
 * Hash: 0x899DFA0009AC93DE | ApiSet: undefined
 */
export function _0x899DFA0009AC93DE(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x899DFA0009AC93DE', _ped, p1);
}
/**
 * ```
 * _SET_C*
 * ```
 * Hash: 0x89E59DBD15E21177 | ApiSet: undefined
 */
export function _0x89E59DBD15E21177(groupId, p1) {
    Citizen.invokeNative('0x89E59DBD15E21177', groupId, p1);
}
/**
 * ```
 * _SET_PED_IN*
 * ```
 * Hash: 0x8AF46E5159A5B620 | ApiSet: undefined
 */
export function _0x8AF46E5159A5B620(ped, speechParams) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof speechParams === 'string')
        speechParams = this.getHashKey(speechParams);
    Citizen.invokeNative('0x8AF46E5159A5B620', _ped, speechParams);
}
/**
 * ```
 * _SET_FORMATION_*
 * ```
 * Hash: 0x8AFCCC0F18D70018 | ApiSet: undefined
 */
export function _0x8AFCCC0F18D70018(groupId, p1) {
    Citizen.invokeNative('0x8AFCCC0F18D70018', groupId, p1);
}
/**
 * ```
 * `Returns offset (0 < 32) to be used with MISC::SET_BIT`
 * _GET_PED_CR*
 * ```
 * Hash: 0x8AF8E647D6B2A649 | ApiSet: undefined
 */
export function _0x8AF8E647D6B2A649(groupId, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x8AF8E647D6B2A649', groupId, _ped);
}
/**
 * Hash: 0x8BA0C65AC15A7D33 | ApiSet: undefined
 */
export function _0x8BA0C65AC15A7D33(p0, p1, p2, p3) {
    Citizen.invokeNative('0x8BA0C65AC15A7D33', p0, p1, p2, p3);
}
/**
 * ```
 * _SET_PED_T* - SET_PED_U*
 * ```
 * Hash: 0x8CB2553C559102C1 | ApiSet: undefined
 */
export function _0x8CB2553C559102C1(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8CB2553C559102C1', _ped, p1, p2);
}
/**
 * Hash: 0x8B74032DDD2156FE | ApiSet: undefined
 */
export function _0x8B74032DDD2156FE(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x8B74032DDD2156FE', p0, p1, p2, p3, p4);
}
/**
 * ```
 * Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
 * ```
 * Hash: 0x8BE24D74D74C6E9B | ApiSet: undefined
 */
export function _0x8BE24D74D74C6E9B(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x8BE24D74D74C6E9B', _ped);
}
/**
 * ```
 * Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
 * _GET_PED_*
 * ```
 * Hash: 0x900CA00CE703E1E2 | ApiSet: undefined
 */
export function _0x900CA00CE703E1E2(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x900CA00CE703E1E2', _ped);
}
/**
 * Hash: 0x8D9DB115FBA8E23D | ApiSet: undefined
 */
export function _0x8D9DB115FBA8E23D(p0) {
    Citizen.invokeNative('0x8D9DB115FBA8E23D', p0);
}
/**
 * Hash: 0x9078FB0557364099 | ApiSet: undefined
 */
export function _0x9078FB0557364099(p0) {
    Citizen.invokeNative('0x9078FB0557364099', p0);
}
/**
 * ```
 * _IS_PED_S* - _IS_PED_U*
 * ```
 * Hash: 0x913D04A5176F84C9 | ApiSet: undefined
 */
export function _0x913D04A5176F84C9(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x913D04A5176F84C9', _ped);
}
/**
 * Hash: 0x91BAB9E064F036CD | ApiSet: undefined
 */
export function _0x91BAB9E064F036CD(p0, p1) {
    Citizen.invokeNative('0x91BAB9E064F036CD', p0, p1);
}
/**
 * ```
 * _GET_IS_PED_*
 * ```
 * Hash: 0x94132D7C8D3575C4 | ApiSet: undefined
 */
export function _0x94132D7C8D3575C4(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x94132D7C8D3575C4', _ped);
}
/**
 * Hash: 0x9184788BFF1EDAD7 | ApiSet: undefined
 */
export function _0x9184788BFF1EDAD7(p0, p1) {
    Citizen.invokeNative('0x9184788BFF1EDAD7', p0, p1);
}
/**
 * Hash: 0x9629FAF6460D35CB | ApiSet: undefined
 */
export function _0x9629FAF6460D35CB(group, p1) {
    if (typeof group === 'string')
        group = this.getHashKey(group);
    Citizen.invokeNative('0x9629FAF6460D35CB', group, p1);
}
/**
 * Hash: 0x92A1B55A59720395 | ApiSet: undefined
 */
export function _0x92A1B55A59720395(p0, p1) {
    Citizen.invokeNative('0x92A1B55A59720395', p0, p1);
}
/**
 * ```
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
 * _GET_PED_G* - _GET_PED_I(NTERACTION?)*
 * ```
 * Hash: 0x947E43F544B6AB34 | ApiSet: undefined
 */
export function _0x947E43F544B6AB34(ped, player, flag, ms) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x947E43F544B6AB34', _ped, _player, flag, ms);
}
/**
 * ```
 * _SET_FORMATION_P*
 * ```
 * Hash: 0x966DE09688A1DE39 | ApiSet: undefined
 */
export function _0x966DE09688A1DE39(groupId, p1, p2, p3, p4) {
    Citizen.invokeNative('0x966DE09688A1DE39', groupId, p1, p2, p3, p4);
}
/**
 * ```
 * Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
 * _SET_PED_S* - _SET_PED_TARGET_*
 * ```
 * Hash: 0x96595B36D6A2279B | ApiSet: undefined
 */
export function _0x96595B36D6A2279B(animal, toggle) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    Citizen.invokeNative('0x96595B36D6A2279B', _animal, toggle);
}
/**
 * Hash: 0x96C7B659854DE629 | ApiSet: undefined
 */
export function _0x96C7B659854DE629(p0, p1) {
    Citizen.invokeNative('0x96C7B659854DE629', p0, p1);
}
/**
 * ```
 * _SET_PED_D*
 * ```
 * Hash: 0x97A38B65EBDA3D50 | ApiSet: undefined
 */
export function _0x97A38B65EBDA3D50(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x97A38B65EBDA3D50', _ped, p1);
}
/**
 * ```
 * _CLEAR*
 * ```
 * Hash: 0x97B06669AC569003 | ApiSet: undefined
 */
export function _0x97B06669AC569003(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    Citizen.invokeNative('0x97B06669AC569003', _ped1, _ped2);
}
/**
 * Hash: 0x9851DE7AEC10B4E1 | ApiSet: undefined
 */
export function _0x9851DE7AEC10B4E1(position, p3, p4, p5) {
    Citizen.invokeNative('0x9851DE7AEC10B4E1', position.x, position.y, position.z, p3, p4, p5);
}
/**
 * ```
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 * ```
 * Hash: 0x97C475212B327666 | ApiSet: undefined
 */
export function _0x97C475212B327666(groupId, p1) {
    Citizen.invokeNative('0x97C475212B327666', groupId, p1);
}
/**
 * ```
 * _CAN_PED_*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x99DF2639DA76C1DC | ApiSet: undefined
 */
export function _0x99DF2639DA76C1DC(ped1, ped2, p2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    return Citizen.invokeNative('0x99DF2639DA76C1DC', _ped1, _ped2, p2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x992187D975635DF5 | ApiSet: undefined
 */
export function _0x992187D975635DF5(p0, p1) {
    Citizen.invokeNative('0x992187D975635DF5', p0, p1);
}
/**
 * Hash: 0x9A4AC116CC1EEE14 | ApiSet: undefined
 */
export function _0x9A4AC116CC1EEE14(p0) {
    Citizen.invokeNative('0x9A4AC116CC1EEE14', p0);
}
/**
 * ```
 * _SET_PED_M*
 * ```
 * Hash: 0x9AB33CB5834885B3 | ApiSet: undefined
 */
export function _0x9AB33CB5834885B3(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9AB33CB5834885B3', _ped, p1, p2, p3, p4);
}
/**
 * ```
 * Only used in SP R* Script winter1: p1 = Winter1Mount
 * ```
 * Hash: 0x9B65444C07B782BF | ApiSet: undefined
 */
export function _0x9B65444C07B782BF(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9B65444C07B782BF', _ped, p1);
}
/**
 * Hash: 0x9B90842304C938A7 | ApiSet: undefined
 */
export function _0x9B90842304C938A7(p0, p1, p2) {
    return Citizen.invokeNative('0x9B90842304C938A7', p0, p1, p2);
}
/**
 * ```
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
 * ```
 * Hash: 0x9B9B9FA0EA283E3D | ApiSet: undefined
 */
export function _0x9B9B9FA0EA283E3D(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9B9B9FA0EA283E3D', _ped, p1);
}
/**
 * ```
 * _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
 * ```
 * Hash: 0x9BBEAF8B0C007F1E | ApiSet: undefined
 */
export function _0x9BBEAF8B0C007F1E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9BBEAF8B0C007F1E', _ped, p1);
}
/**
 * ```
 * _RESET_PED_*
 * ```
 * Hash: 0x9D8DFE2DE9CB4DFC | ApiSet: undefined
 */
export function _0x9D8DFE2DE9CB4DFC(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9D8DFE2DE9CB4DFC', _ped);
}
/**
 * ```
 * If returned true: CHECK_SHOT_NEAR: Succeeded shot near
 * If returned false: CHECK_SHOT_NEAR: Failed shot near
 * ```
 * Hash: 0x9C81338B2E62CE0A | ApiSet: undefined
 */
export function _0x9C81338B2E62CE0A(player, ped, shotNearRecentlyTime) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x9C81338B2E62CE0A', _player, _ped, shotNearRecentlyTime);
}
/**
 * ```
 * Only used in SP R* Script loanshark_hunter
 * ```
 * Hash: 0x9E3842E5DAD69F80 | ApiSet: undefined
 */
export function _0x9E3842E5DAD69F80(volume) {
    Citizen.invokeNative('0x9E3842E5DAD69F80', volume);
}
/**
 * Hash: 0x9E66708B2B41F14A | ApiSet: undefined
 */
export function _0x9E66708B2B41F14A(p0, p1) {
    Citizen.invokeNative('0x9E66708B2B41F14A', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x9F0F28B42C4EE80A | ApiSet: undefined
 */
export function _0x9F0F28B42C4EE80A(animal, p2) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    Citizen.invokeNative('0x9F0F28B42C4EE80A', _animal, p2);
}
/**
 * Hash: 0x9F933E0985E12C51 | ApiSet: undefined
 */
export function _0x9F933E0985E12C51(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9F933E0985E12C51', _ped, p1, p2, p3);
}
/**
 * Hash: 0xA064BBABB064446F | ApiSet: undefined
 */
export function _0xA064BBABB064446F(p0) {
    Citizen.invokeNative('0xA064BBABB064446F', p0);
}
/**
 * Hash: 0xA180FBD502A03125 | ApiSet: undefined
 */
export function _0xA180FBD502A03125(p0, p1, p2) {
    return Citizen.invokeNative('0xA180FBD502A03125', p0, p1, p2);
}
/**
 * Hash: 0xA1FBAC56D38563E2 | ApiSet: undefined
 */
export function _0xA1FBAC56D38563E2(volume) {
    return Citizen.invokeNative('0xA1FBAC56D38563E2', volume);
}
/**
 * Hash: 0xA274F51EF7E34B95 | ApiSet: undefined
 */
export function _0xA274F51EF7E34B95(p0, p1) {
    return Citizen.invokeNative('0xA274F51EF7E34B95', p0, p1);
}
/**
 * ```
 * _SET_PED_*
 * ```
 * Hash: 0xA2116C1E4ED85C24 | ApiSet: undefined
 */
export function _0xA2116C1E4ED85C24(ped, inverted) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA2116C1E4ED85C24', _ped, inverted);
}
/**
 * Hash: 0xA218D2BBCAA7388C | ApiSet: undefined
 */
export function _0xA218D2BBCAA7388C(p0, p1) {
    return Citizen.invokeNative('0xA218D2BBCAA7388C', p0, p1);
}
/**
 * Hash: 0xA2B8E47442C76CEC | ApiSet: undefined
 */
export function _0xA2B8E47442C76CEC(p0, p1) {
    Citizen.invokeNative('0xA2B8E47442C76CEC', p0, p1);
}
/**
 * Hash: 0xA2F8B3B5FEDFC100 | ApiSet: undefined
 */
export function _0xA2F8B3B5FEDFC100(p0, p1) {
    Citizen.invokeNative('0xA2F8B3B5FEDFC100', p0, p1);
}
/**
 * Hash: 0xA31D350D66FA1855 | ApiSet: undefined
 */
export function _0xA31D350D66FA1855(p0) {
    return Citizen.invokeNative('0xA31D350D66FA1855', p0);
}
/**
 * Hash: 0xA4AC05B1A364EBC5 | ApiSet: undefined
 */
export function _0xA4AC05B1A364EBC5(p0, p1, p2) {
    return Citizen.invokeNative('0xA4AC05B1A364EBC5', p0, p1, p2);
}
/**
 * Hash: 0xA405BF9F01960C16 | ApiSet: undefined
 */
export function _0xA405BF9F01960C16(p0) {
    Citizen.invokeNative('0xA405BF9F01960C16', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xA4B6432E3880F2F9 | ApiSet: undefined
 */
export function _0xA4B6432E3880F2F9(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xA4B6432E3880F2F9', _ped);
}
/**
 * Hash: 0xA691C10054275290 | ApiSet: undefined
 */
export function _0xA691C10054275290(mount, player, dismountedTimestamp) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xA691C10054275290', _mount, _player, dismountedTimestamp);
}
/**
 * ```
 * Washing player's face/hands now
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 * ```
 * Hash: 0xA7A806677F8DE138 | ApiSet: undefined
 */
export function _0xA7A806677F8DE138(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA7A806677F8DE138', _ped);
}
/**
 * ```
 * _DELETE_*
 * ```
 * Hash: 0xA6D6F03095C88F59 | ApiSet: undefined
 */
export function _0xA6D6F03095C88F59(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA6D6F03095C88F59', _ped);
}
/**
 * ```
 * _CLEAR_PED_B* - _CLEAR_PED_C*
 * ```
 * Hash: 0xA7DC9266ED6A4E51 | ApiSet: undefined
 */
export function _0xA7DC9266ED6A4E51(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA7DC9266ED6A4E51', _ped);
}
/**
 * ```
 * Only used in R* Script mob4 and rcm_mason4
 * _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
 * ```
 * Hash: 0xA90684ED185CCB4B | ApiSet: undefined
 */
export function _0xA90684ED185CCB4B(animal, p1, p2, p3) {
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    Citizen.invokeNative('0xA90684ED185CCB4B', _animal, p1, p2, p3);
}
/**
 * ```
 * _SET_ENABLE_B* - _SET_ENABLE_H*
 * ```
 * Hash: 0xA8A95CECB1906EA2 | ApiSet: undefined
 */
export function _0xA8A95CECB1906EA2(groupId, p1) {
    Citizen.invokeNative('0xA8A95CECB1906EA2', groupId, p1);
}
/**
 * ```
 * _SET_PED_P* - _SET_PED_R*
 * ```
 * Hash: 0xA967D6A8ED2D713B | ApiSet: undefined
 */
export function _0xA967D6A8ED2D713B(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA967D6A8ED2D713B', _ped, p1);
}
/**
 * Hash: 0xAA6C49AE90A32299 | ApiSet: undefined
 */
export function _0xAA6C49AE90A32299(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xAA6C49AE90A32299', _ped, p1);
}
/**
 * ```
 * Related to _0x704C908E9C405136 for component loading
 * _S*
 * ```
 * Hash: 0xAAB86462966168CE | ApiSet: undefined
 */
export function _0xAAB86462966168CE(ped, isMP) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xAAB86462966168CE', _ped, isMP);
}
/**
 * Hash: 0xAD3330E3C3E98007 | ApiSet: undefined
 */
export function _0xAD3330E3C3E98007(p0, p1) {
    Citizen.invokeNative('0xAD3330E3C3E98007', p0, p1);
}
/**
 * Hash: 0xAAC0EE3B4999ABB5 | ApiSet: undefined
 */
export function _0xAAC0EE3B4999ABB5(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    Citizen.invokeNative('0xAAC0EE3B4999ABB5', _ped, _targetPed);
}
/**
 * Hash: 0xAE6B68A83ABBE7C0 | ApiSet: undefined
 */
export function _0xAE6B68A83ABBE7C0(p0) {
    Citizen.invokeNative('0xAE6B68A83ABBE7C0', p0);
}
/**
 * ```
 * _CLEAR_PED_D*
 * ```
 * Hash: 0xAF041C10756C30FB | ApiSet: undefined
 */
export function _0xAF041C10756C30FB(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xAF041C10756C30FB', _ped, p1, p2, p3);
}
/**
 * Hash: 0xB06F5F1DEF417216 | ApiSet: undefined
 */
export function _0xB06F5F1DEF417216(p0, p1, p2, p3) {
    Citizen.invokeNative('0xB06F5F1DEF417216', p0, p1, p2, p3);
}
/**
 * ```
 * Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
 * _SET_FORMATION_*
 * ```
 * Hash: 0xB05CC690CDE8A4A9 | ApiSet: undefined
 */
export function _0xB05CC690CDE8A4A9(groupId, p1) {
    return Citizen.invokeNative('0xB05CC690CDE8A4A9', groupId, p1);
}
/**
 * ```
 * Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
 * ```
 * Hash: 0xB29C553BA582D09E | ApiSet: undefined
 */
export function _0xB29C553BA582D09E(model, damageCleanliness, p3) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return Citizen.invokeNative('0xB29C553BA582D09E', model, damageCleanliness, p3);
}
/**
 * Hash: 0xB292203008EBBAAC | ApiSet: undefined
 */
export function _0xB292203008EBBAAC(p0) {
    return Citizen.invokeNative('0xB292203008EBBAAC', p0);
}
/**
 * ```
 * _RESET_PED_C*
 * ```
 * Hash: 0xB4B7C92FCE7347B7 | ApiSet: undefined
 */
export function _0xB4B7C92FCE7347B7(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xB4B7C92FCE7347B7', _ped);
}
/**
 * Hash: 0xB65927F861E7AE39 | ApiSet: undefined
 */
export function _0xB65927F861E7AE39(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xB65927F861E7AE39', _ped, p1);
}
/**
 * Hash: 0xB7DBB2986B87E230 | ApiSet: undefined
 */
export function _0xB7DBB2986B87E230(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xB7DBB2986B87E230', _ped, p1);
}
/**
 * ```
 * _SET_HO*
 * ```
 * Hash: 0xB8AB265426CFE6DD | ApiSet: undefined
 */
export function _0xB8AB265426CFE6DD(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xB8AB265426CFE6DD', _ped, p1);
}
/**
 * Hash: 0xB8E2D655E1D5BD39 | ApiSet: undefined
 */
export function _0xB8E2D655E1D5BD39(p0) {
    return Citizen.invokeNative('0xB8E2D655E1D5BD39', p0);
}
/**
 * ```
 * _IS_PED_J* - _IS_PED_L*
 * ```
 * Hash: 0xB91AB3BE7F655D49 | ApiSet: undefined
 */
export function _0xB91AB3BE7F655D49(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xB91AB3BE7F655D49', _ped);
}
/**
 * ```
 * _SET_PED_D*
 * ```
 * Hash: 0xBAD2A311667A50D7 | ApiSet: undefined
 */
export function _0xBAD2A311667A50D7(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xBAD2A311667A50D7', _ped, p1);
}
/**
 * Hash: 0xB9BDFAE609DFB7C5 | ApiSet: undefined
 */
export function _0xB9BDFAE609DFB7C5(p0, p1, p2) {
    Citizen.invokeNative('0xB9BDFAE609DFB7C5', p0, p1, p2);
}
/**
 * Hash: 0xBC1DC48270468444 | ApiSet: undefined
 */
export function _0xBC1DC48270468444(p0) {
    Citizen.invokeNative('0xBC1DC48270468444', p0);
}
/**
 * Hash: 0xBB3E5370EBB6BE28 | ApiSet: undefined
 */
export function _0xBB3E5370EBB6BE28(p0, p1) {
    return Citizen.invokeNative('0xBB3E5370EBB6BE28', p0, p1);
}
/**
 * Hash: 0xBF567DF2BEF211A6 | ApiSet: undefined
 */
export function _0xBF567DF2BEF211A6(p0, p1) {
    Citizen.invokeNative('0xBF567DF2BEF211A6', p0, p1);
}
/**
 * ```
 * Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
 * ```
 * Hash: 0xBFA6B7731C3BAF02 | ApiSet: undefined
 */
export function _0xBFA6B7731C3BAF02() {
    Citizen.invokeNative('0xBFA6B7731C3BAF02');
}
/**
 * ```
 * _IS_PED_M* - _IS_PED_O*
 * ```
 * Hash: 0xBD0E4F52F6D95242 | ApiSet: undefined
 */
export function _0xBD0E4F52F6D95242(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xBD0E4F52F6D95242', _ped);
}
/**
 * ```
 * _FORCE_PED_*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC2722B252C79E641 | ApiSet: undefined
 */
export function _0xC2722B252C79E641(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC2722B252C79E641', _ped, p1, p2, p3);
}
/**
 * ```
 * _SET_PED_P* - _SET_PED_R*
 * ```
 * Hash: 0xC17A94CC8FC3C61A | ApiSet: undefined
 */
export function _0xC17A94CC8FC3C61A(entity, boneId, p2, p3, p4) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xC17A94CC8FC3C61A', _entity, boneId, p2, p3, p4);
}
/**
 * Hash: 0xC2EF407645BEECDC | ApiSet: undefined
 */
export function _0xC2EF407645BEECDC(p0) {
    return Citizen.invokeNative('0xC2EF407645BEECDC', p0);
}
/**
 * Hash: 0xC412AA1C73111FE0 | ApiSet: undefined
 */
export function _0xC412AA1C73111FE0(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xC412AA1C73111FE0', p0, p1, p2, p3, p4);
}
/**
 * ```
 * _GET_PED_G* - _GET_PED_I*
 * ```
 * Hash: 0xC3995D396F1D97B6 | ApiSet: undefined
 */
export function _0xC3995D396F1D97B6(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xC3995D396F1D97B6', _ped, p1, p2);
}
/**
 * ```
 * [WARDROBE] Player took off their disguise: p1 = 13
 * [WARDROBE] Player put on a disguise: p1 = 0
 * ```
 * Hash: 0xC494C76A34266E82 | ApiSet: undefined
 */
export function _0xC494C76A34266E82(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC494C76A34266E82', _ped, p1);
}
/**
 * ```
 * _SET_PED_M*
 * ```
 * Hash: 0xC48AF420371C7407 | ApiSet: undefined
 */
export function _0xC48AF420371C7407(ped, grapple) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof grapple === 'string')
        grapple = this.getHashKey(grapple);
    return Citizen.invokeNative('0xC48AF420371C7407', _ped, grapple);
}
/**
 * ```
 * Returns boneIndex
 * _GET_PED_N* - _GET_PED_R*
 * ```
 * Hash: 0xC5303F460A40D21D | ApiSet: undefined
 */
export function _0xC5303F460A40D21D(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xC5303F460A40D21D', _ped, p1);
}
/**
 * ```
 * _SET_H* - _SET_I*
 * ```
 * Hash: 0xC5B78E41DCF8227C | ApiSet: undefined
 */
export function _0xC5B78E41DCF8227C(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC5B78E41DCF8227C', _ped, p1);
}
/**
 * Hash: 0xC6136B40FFFB778B | ApiSet: undefined
 */
export function _0xC6136B40FFFB778B(p0) {
    Citizen.invokeNative('0xC6136B40FFFB778B', p0);
}
/**
 * Hash: 0xC6981AFF6D2A71C2 | ApiSet: undefined
 */
export function _0xC6981AFF6D2A71C2(p0) {
    Citizen.invokeNative('0xC6981AFF6D2A71C2', p0);
}
/**
 * Hash: 0xC9151483CC06A414 | ApiSet: undefined
 */
export function _0xC9151483CC06A414(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC9151483CC06A414', _ped);
}
/**
 * Hash: 0xC6C4E15CF7D52FEA | ApiSet: undefined
 */
export function _0xC6C4E15CF7D52FEA(p0, p1) {
    Citizen.invokeNative('0xC6C4E15CF7D52FEA', p0, p1);
}
/**
 * ```
 * _SET_PLAYER_N* - _SET_PLAYER_S*
 * ```
 * Hash: 0xC99F104BDF8C7F5A | ApiSet: undefined
 */
export function _0xC99F104BDF8C7F5A(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC99F104BDF8C7F5A', _ped, p1);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0xC991EF46FE323867 | ApiSet: undefined
 */
export function _0xC991EF46FE323867(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xC991EF46FE323867', _ped, p1);
}
/**
 * Hash: 0xCA95C156C14B2054 | ApiSet: undefined
 */
export function _0xCA95C156C14B2054(p0, p1) {
    Citizen.invokeNative('0xCA95C156C14B2054', p0, p1);
}
/**
 * ```
 * Returns vehicle speed
 * _COMPUTE_*
 * ```
 * Hash: 0xCA95924C893A0C91 | ApiSet: undefined
 */
export function _0xCA95924C893A0C91(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xCA95924C893A0C91', _ped, p1);
}
/**
 * Hash: 0xCAC43D060099EA72 | ApiSet: undefined
 */
export function _0xCAC43D060099EA72(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xCAC43D060099EA72', _ped);
}
/**
 * Hash: 0xCB86D3E3E3708901 | ApiSet: undefined
 */
export function _0xCB86D3E3E3708901(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0xCB86D3E3E3708901', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xCB1A3864C524F784 | ApiSet: undefined
 */
export function _0xCB1A3864C524F784(p0, p1) {
    Citizen.invokeNative('0xCB1A3864C524F784', p0, p1);
}
/**
 * Hash: 0xCBDE59C48F2B06F5 | ApiSet: undefined
 */
export function _0xCBDE59C48F2B06F5(p0, p1, p2) {
    Citizen.invokeNative('0xCBDE59C48F2B06F5', p0, p1, p2);
}
/**
 * ```
 * Only used in R* SP Scripts
 * _GET_PLAYER_W* - _GET_RANDOM_*
 * ```
 * Hash: 0xCB8F4C9343EBE240 | ApiSet: undefined
 */
export function _0xCB8F4C9343EBE240(ped, eventType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    const result = Citizen.invokeNative('0xCB8F4C9343EBE240', _ped, eventType);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * _SET_PED_R* - _SET_PED_S*
 * ```
 * Hash: 0xCD9E5F94A2F38683 | ApiSet: undefined
 */
export function _0xCD9E5F94A2F38683(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xCD9E5F94A2F38683', _ped, p1);
}
/**
 * Hash: 0xCDFB8C04D4C95D9B | ApiSet: undefined
 */
export function _0xCDFB8C04D4C95D9B(p0, p1, p2, p3) {
    Citizen.invokeNative('0xCDFB8C04D4C95D9B', p0, p1, p2, p3);
}
/**
 * Hash: 0xCE7A6C1D5CDE1F9D | ApiSet: undefined
 */
export function _0xCE7A6C1D5CDE1F9D(ped, object, propName, animName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xCE7A6C1D5CDE1F9D', _ped, object, propName, animName);
}
/**
 * Hash: 0xD049920CD29F6CC8 | ApiSet: undefined
 */
export function _0xD049920CD29F6CC8(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xD049920CD29F6CC8', p0, p1, p2, p3, p4);
}
/**
 * ```
 * _SET_PED_COMBAT_*
 * ```
 * Hash: 0xCF0B19806473D324 | ApiSet: undefined
 */
export function _0xCF0B19806473D324(ped, position) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xCF0B19806473D324', _ped, position.x, position.y, position.z);
}
/**
 * ```
 * Params: p1 either a 1 or 0, so perhaps BOOL
 * _SET_PED_A*
 * ```
 * Hash: 0xD103F6DBB5442BE8 | ApiSet: undefined
 */
export function _0xD103F6DBB5442BE8(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xD103F6DBB5442BE8', _ped, p1);
}
/**
 * Hash: 0xD049FDAF089FDDB0 | ApiSet: undefined
 */
export function _0xD049FDAF089FDDB0(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xD049FDAF089FDDB0', _ped, p1, p2);
}
/**
 * Hash: 0xD2F0FE8805D91647 | ApiSet: undefined
 */
export function _0xD2F0FE8805D91647(p0, p1) {
    Citizen.invokeNative('0xD2F0FE8805D91647', p0, p1);
}
/**
 * Hash: 0xD355E2F1BB41087E | ApiSet: undefined
 */
export function _0xD355E2F1BB41087E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xD355E2F1BB41087E', _ped, p1);
}
/**
 * Hash: 0xD4D403EA031F351C | ApiSet: undefined
 */
export function _0xD4D403EA031F351C(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xD4D403EA031F351C', _ped);
}
/**
 * ```
 * Used in Script Function LA_CHECK_ALERTED
 * _GET_IS_PED_*
 * ```
 * Hash: 0xD55DB4466D00A258 | ApiSet: undefined
 */
export function _0xD55DB4466D00A258(legendaryAnimal) {
    const _legendaryAnimal = legendaryAnimal instanceof Ped ? legendaryAnimal.handle() : legendaryAnimal;
    return Citizen.invokeNative('0xD55DB4466D00A258', _legendaryAnimal);
}
/**
 * ```
 * _SET_FORMATION_*
 * ```
 * Hash: 0xD5BD1B5318A81994 | ApiSet: undefined
 */
export function _0xD5BD1B5318A81994(groupId, p1) {
    Citizen.invokeNative('0xD5BD1B5318A81994', groupId, p1);
}
/**
 * Hash: 0xD61FCF9FCFD515B7 | ApiSet: undefined
 */
export function _0xD61FCF9FCFD515B7(p0, p1, p2) {
    Citizen.invokeNative('0xD61FCF9FCFD515B7', p0, p1, p2);
}
/**
 * Hash: 0xD7D2F45C56A4F4DF | ApiSet: undefined
 */
export function _0xD7D2F45C56A4F4DF(p0, p1, p2) {
    Citizen.invokeNative('0xD7D2F45C56A4F4DF', p0, p1, p2);
}
/**
 * ```
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * p1 is mostly 10
 * _CLEAR_PED_N* - _CLEAR_PED_W*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD8544F6260F5F01E | ApiSet: undefined
 */
export function _0xD8544F6260F5F01E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xD8544F6260F5F01E', _ped, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD97BC27AC039F681 | ApiSet: undefined
 */
export function _0xD97BC27AC039F681(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xD97BC27AC039F681', p0, p1, p2, p3);
}
/**
 * Hash: 0xD8CEEED54C672B5D | ApiSet: undefined
 */
export function _0xD8CEEED54C672B5D(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0xD8CEEED54C672B5D', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
 * _SET_RELATIONSHIP_*
 * ```
 * Hash: 0xDC91F22F09BC6C2F | ApiSet: undefined
 */
export function _0xDC91F22F09BC6C2F(group, p1) {
    if (typeof group === 'string')
        group = this.getHashKey(group);
    Citizen.invokeNative('0xDC91F22F09BC6C2F', group, p1);
}
/**
 * ```
 * _IS_PED_IN_* (near water?)
 * Returns true if ped is swimming in water
 * ```
 * Hash: 0xDC88D06719070C39 | ApiSet: undefined
 */
export function _0xDC88D06719070C39(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xDC88D06719070C39', _ped);
}
/**
 * Hash: 0xDD9540E7B1C9714F | ApiSet: undefined
 */
export function _0xDD9540E7B1C9714F(ped, p1, r, g, b) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xDD9540E7B1C9714F', _ped, p1, r, g, b);
}
/**
 * ```
 * _SET_FORMATION_P*
 * ```
 * Hash: 0xDDFAD4DEAA7FA362 | ApiSet: undefined
 */
export function _0xDDFAD4DEAA7FA362(groupId, p1, p2, p3, p4) {
    Citizen.invokeNative('0xDDFAD4DEAA7FA362', groupId, p1, p2, p3, p4);
}
/**
 * Hash: 0xDEDBED3020DA49DC | ApiSet: undefined
 */
export function _0xDEDBED3020DA49DC(p0) {
    Citizen.invokeNative('0xDEDBED3020DA49DC', p0);
}
/**
 * Hash: 0xDEE8D30AA5C2E28D | ApiSet: undefined
 */
export function _0xDEE8D30AA5C2E28D(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xDEE8D30AA5C2E28D', _ped, p1, p2);
}
/**
 * ```
 * _SET_FORMATION_P*
 * ```
 * Hash: 0xE1103300F3456DE7 | ApiSet: undefined
 */
export function _0xE1103300F3456DE7(groupId, p1, p2) {
    Citizen.invokeNative('0xE1103300F3456DE7', groupId, p1, p2);
}
/**
 * Hash: 0xE0FE107AB174D64A | ApiSet: undefined
 */
export function _0xE0FE107AB174D64A(p0, p1) {
    Citizen.invokeNative('0xE0FE107AB174D64A', p0, p1);
}
/**
 * Hash: 0xE1B3BE07D3AADDED | ApiSet: undefined
 */
export function _0xE1B3BE07D3AADDED(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xE1B3BE07D3AADDED', _ped, p1, p2);
}
/**
 * ```
 * _C*
 * ```
 * Hash: 0xE1AADD0055D76603 | ApiSet: undefined
 */
export function _0xE1AADD0055D76603(ped, entity, boneIndex1, boneIndex2, position, p7, p8, p9, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xE1AADD0055D76603', _ped, _entity, boneIndex1, boneIndex2, position.x, position.y, position.z, p7, p8, p9, p10);
}
/**
 * Hash: 0xE20027B414BFE6C7 | ApiSet: undefined
 */
export function _0xE20027B414BFE6C7(p0, p1) {
    Citizen.invokeNative('0xE20027B414BFE6C7', p0, p1);
}
/**
 * ```
 * _SET_PED_R* -_SET_PED_S*
 * ```
 * Hash: 0xE29D8CD66553DBAA | ApiSet: undefined
 */
export function _0xE29D8CD66553DBAA(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    Citizen.invokeNative('0xE29D8CD66553DBAA', _horse);
}
/**
 * ```
 * _SET_PED_IN*
 * ```
 * Hash: 0xE37ACEE15AC50C7E | ApiSet: undefined
 */
export function _0xE37ACEE15AC50C7E(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xE37ACEE15AC50C7E', _ped, p1);
}
/**
 * Hash: 0xE4C95E0AE31C6512 | ApiSet: undefined
 */
export function _0xE4C95E0AE31C6512(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xE4C95E0AE31C6512', _ped, p1);
}
/**
 * Hash: 0xE4EF4382E22C780C | ApiSet: undefined
 */
export function _0xE4EF4382E22C780C(p0) {
    Citizen.invokeNative('0xE4EF4382E22C780C', p0);
}
/**
 * ```
 * _SET_D*
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xE50C9816B3F22D8B | ApiSet: undefined
 */
export function _0xE50C9816B3F22D8B(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0xE50C9816B3F22D8B', _ped, p1, p2);
}
/**
 * Hash: 0xE6CB36F43A95D75F | ApiSet: undefined
 */
export function _0xE6CB36F43A95D75F(p0) {
    Citizen.invokeNative('0xE6CB36F43A95D75F', p0);
}
/**
 * Hash: 0xE735A7DA22E88359 | ApiSet: undefined
 */
export function _0xE735A7DA22E88359(p0) {
    Citizen.invokeNative('0xE735A7DA22E88359', p0);
}
/**
 * ```
 * Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
 * Params: p1 = 0
 * _GET_PED_IN*
 * ```
 * Hash: 0xE76687023D8C8505 | ApiSet: undefined
 */
export function _0xE76687023D8C8505(perscharModel, p1) {
    if (typeof perscharModel === 'string')
        perscharModel = this.getHashKey(perscharModel);
    return Citizen.invokeNative('0xE76687023D8C8505', perscharModel, p1);
}
/**
 * ```
 * Only used in R* Script nb_animal_attack: p2 = 120000
 * _SET_PED_SH* - _SET_PED_SP*
 * ```
 * Hash: 0xE737D5F14304A2EC | ApiSet: undefined
 */
export function _0xE737D5F14304A2EC(ped, player, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xE737D5F14304A2EC', _ped, _player, p2);
}
/**
 * ```
 * Returns dismounted timestamp
 * ```
 * Hash: 0xE8D1CCB9375C101B | ApiSet: undefined
 */
export function _0xE8D1CCB9375C101B(mount, player) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xE8D1CCB9375C101B', _mount, _player);
}
/**
 * Hash: 0xE9E06EA514A69061 | ApiSet: undefined
 */
export function _0xE9E06EA514A69061(p0, p1) {
    Citizen.invokeNative('0xE9E06EA514A69061', p0, p1);
}
/**
 * Hash: 0xE8ABE3B73FC7FE17 | ApiSet: undefined
 */
export function _0xE8ABE3B73FC7FE17(p0, p1, p2, p3) {
    Citizen.invokeNative('0xE8ABE3B73FC7FE17', p0, p1, p2, p3);
}
/**
 * Hash: 0xEA8763E505AFD49A | ApiSet: undefined
 */
export function _0xEA8763E505AFD49A(p0, p1, p2) {
    Citizen.invokeNative('0xEA8763E505AFD49A', p0, p1, p2);
}
/**
 * ```
 * If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
 * If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
 * _IS_PED_T* - _IS_PED_U*
 * ```
 * Hash: 0xEBAAC9A750E7563B | ApiSet: undefined
 */
export function _0xEBAAC9A750E7563B(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xEBAAC9A750E7563B', _ped);
}
/**
 * ```
 * Washing player's face/hands now
 * _FA* - _FI*
 * ```
 * Hash: 0xEB8886E1065654CD | ApiSet: undefined
 */
export function _0xEB8886E1065654CD(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xEB8886E1065654CD', _ped, p1, p2, p3);
}
/**
 * ```
 * _SET_C*
 * ```
 * Hash: 0xEC60D1D225BC50AA | ApiSet: undefined
 */
export function _0xEC60D1D225BC50AA(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xEC60D1D225BC50AA', _ped, p1);
}
/**
 * ```
 * Only used in R* Script nb_stalking_hunter
 * ```
 * Hash: 0xED1C764997A86D5A | ApiSet: undefined
 */
export function _0xED1C764997A86D5A(ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    Citizen.invokeNative('0xED1C764997A86D5A', _ped1, _ped2);
}
/**
 * Hash: 0xEBD49472BCCF7642 | ApiSet: undefined
 */
export function _0xEBD49472BCCF7642(p0, p1) {
    Citizen.invokeNative('0xEBD49472BCCF7642', p0, p1);
}
/**
 * ```
 * _ADD_*
 * ```
 * Hash: 0xEF371232BC6053E1 | ApiSet: undefined
 */
export function _0xEF371232BC6053E1(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xEF371232BC6053E1', _ped);
}
/**
 * Hash: 0xEEDC9B29314B2733 | ApiSet: undefined
 */
export function _0xEEDC9B29314B2733(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    Citizen.invokeNative('0xEEDC9B29314B2733', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0xF634E2892220EF34 | ApiSet: undefined
 */
export function _0xF634E2892220EF34(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF634E2892220EF34', _ped, p1);
}
/**
 * ```
 * Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xF47D54B986F0A346 | ApiSet: undefined
 */
export function _0xF47D54B986F0A346(ped, danceIntensity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF47D54B986F0A346', _ped, danceIntensity);
}
/**
 * Hash: 0xF7327ACC7A89AEF1 | ApiSet: undefined
 */
export function _0xF7327ACC7A89AEF1(p0, p1, p2) {
    return Citizen.invokeNative('0xF7327ACC7A89AEF1', p0, p1, p2);
}
/**
 * Hash: 0xF9331B3A314EB49D | ApiSet: undefined
 */
export function _0xF9331B3A314EB49D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xF9331B3A314EB49D', _ped);
}
/**
 * ```
 * Only used in SP Scripts
 * Returns count / index
 * _C*
 * ```
 * Hash: 0xF4860514AD354226 | ApiSet: undefined
 */
export function _0xF4860514AD354226(shockingEvent, position, p4) {
    return Citizen.invokeNative('0xF4860514AD354226', shockingEvent, position.x, position.y, position.z, p4);
}
/**
 * ```
 * Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
 * ```
 * Hash: 0xF9CBD46433E36713 | ApiSet: undefined
 */
export function _0xF9CBD46433E36713(ped, targetEntity, p2, p3, p4, p5, p6, p7, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    Citizen.invokeNative('0xF9CBD46433E36713', _ped, _targetEntity, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0xF6A8C4B4A11AE89C | ApiSet: undefined
 */
export function _0xF6A8C4B4A11AE89C(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0xF6A8C4B4A11AE89C', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xFA0D206B489A6846 | ApiSet: undefined
 */
export function _0xFA0D206B489A6846(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xFA0D206B489A6846', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xFA742B82D093D848 | ApiSet: undefined
 */
export function _0xFA742B82D093D848(p0, p1, p2) {
    Citizen.invokeNative('0xFA742B82D093D848', p0, p1, p2);
}
/**
 * Hash: 0xF917F92BF22ECBAB | ApiSet: undefined
 */
export function _0xF917F92BF22ECBAB(p0) {
    Citizen.invokeNative('0xF917F92BF22ECBAB', p0);
}
/**
 * ```
 * _SET_PED_WETNESS*
 * ```
 * Hash: 0xF9CFF5BB70E8A2CB | ApiSet: undefined
 */
export function _0xF9CFF5BB70E8A2CB(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF9CFF5BB70E8A2CB', _ped, p1);
}
/**
 * Hash: 0xFC3B580C4380B5B7 | ApiSet: undefined
 */
export function _0xFC3B580C4380B5B7(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xFC3B580C4380B5B7', _ped);
}
/**
 * ```
 * _HAS_PED_*
 * ```
 * Hash: 0xFA8C10DCE0706D43 | ApiSet: undefined
 */
export function _0xFA8C10DCE0706D43(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xFA8C10DCE0706D43', _ped);
}
/**
 * Hash: 0xFD8E853F0BC2E942 | ApiSet: undefined
 */
export function _0xFD8E853F0BC2E942(p0, p1) {
    Citizen.invokeNative('0xFD8E853F0BC2E942', p0, p1);
}
/**
 * Hash: 0xFC23348F0F4E245F | ApiSet: undefined
 */
export function _0xFC23348F0F4E245F(p0, p1, p2, p3) {
    Citizen.invokeNative('0xFC23348F0F4E245F', p0, p1, p2, p3);
}
/**
 * ```
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * _SET_M* - _SET_P*
 * ```
 * Hash: 0xFEA6126C34DF2532 | ApiSet: undefined
 */
export function _0xFEA6126C34DF2532(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xFEA6126C34DF2532', _ped, p1);
}
/**
 * ```
 * _DISABLE_A* - _DISABLE_C*
 * ```
 * Hash: 0xFD3C31A2E45671E7 | ApiSet: undefined
 */
export function _0xFD3C31A2E45671E7(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xFD3C31A2E45671E7', _ped, p1);
}
/**
 * Hash: 0xFEAB3DB4EDB236EB | ApiSet: undefined
 */
export function _0xFEAB3DB4EDB236EB(p0) {
    return Citizen.invokeNative('0xFEAB3DB4EDB236EB', p0);
}
/**
 * Hash: 0xFFA1594703ED27CA | ApiSet: undefined
 */
export function _0xFFA1594703ED27CA(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xFFA1594703ED27CA', _ped, p1);
}
/**
 * ```
 * _GET_PED_COMBAT_M* - _GET_PED_C*
 * ```
 * Hash: 0xFFDE295662405B25 | ApiSet: undefined
 */
export function _0xFFDE295662405B25(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xFFDE295662405B25', _ped);
}
/**
 * Hash: 0x935CF6E42BAF7F4D | ApiSet: undefined
 */
export function pedClearLocoMotion(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PedClearLocoMotion(_ped);
}
/**
 * Hash: 0x1E4C940233FC0C6F | ApiSet: undefined
 */
export function pedCowerMoveToPoint(ped, p1, p2, p3, ped2, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    PedCowerMoveToPoint(_ped, p1, p2, p3, _ped2, p5);
}
/**
 * Hash: 0xF6E1E9F47A7686F8 | ApiSet: undefined
 */
export function pedCowerInPlace(ped, ped2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    PedCowerInPlace(_ped, _ped2);
}
/**
 * Hash: 0xBD6B242B8BD5543A | ApiSet: undefined
 */
export function pedDuelingDidPlayerHeadshotOpponent(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedDuelingDidPlayerHeadshotOpponent(_ped);
}
/**
 * Hash: 0x06FA94C835787C64 | ApiSet: undefined
 */
export function pedWasKilledByHeadshot(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedWasKilledByHeadshot(_ped);
}
/**
 * ```
 * target: 0 affects everyone
 * duration: -1 indefinite
 * flag: always 4 in R* Scripts
 * ```
 * Hash: 0xAAB050DA48B57978 | ApiSet: undefined
 */
export function pedEmotionalPresetLocoMotion(ped, presetName, targetPed, duration, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    PedEmotionalPresetLocoMotion(_ped, presetName, _targetPed, duration, flag);
}
/**
 * ```
 * Returns loot state
 * enum eLootState
 * {
 * LAP_NONE,
 * LAP_RESUMING,
 * LAP_GETTING_ON_FOOT,
 * LAP_DISTANT_NAV,
 * LAP_CHOOSING_ACTION,
 * LAP_APPROACHING,
 * LAP_ENTERING,
 * LAP_LOOTING,
 * LAP_EXITING
 * };
 * _POSSE_* - _REGISTER_HATED*
 * ```
 * Hash: 0x5463C962BC7777C3 | ApiSet: undefined
 */
export function refreshLootStateForPed(ped, p1, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RefreshLootStateForPed(_ped, p1, p3, p4);
}
/**
 * ```
 * p1 is always 1
 * ```
 * Hash: 0x59BD177A1A48600A | ApiSet: undefined
 */
export function refreshMetaPedShopItems(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RefreshMetaPedShopItems(_ped, p1);
}
/**
 * Hash: 0xD8736EFDA38EDC5C | ApiSet: undefined
 */
export function registerHatedTargetsInArea(ped, position, radius) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RegisterHatedTargetsInArea(_ped, position.x, position.y, position.z, radius);
}
/**
 * ```
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 * ```
 * Hash: 0x9222F300BF8354FE | ApiSet: undefined
 */
export function registerHatedTargetsAroundPed(ped, radius) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RegisterHatedTargetsAroundPed(_ped, radius);
}
/**
 * Hash: 0x2F25D9AEFA34FBA2 | ApiSet: undefined
 */
export function registerTarget(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    RegisterTarget(_ped, _targetPed, p2);
}
/**
 * Hash: 0x3972F78A78B5D9DF | ApiSet: undefined
 */
export function releaseMetaPedRequest(requestId) {
    ReleaseMetaPedRequest(requestId);
}
/**
 * Hash: 0x4592B8B9B0EF5F48 | ApiSet: undefined
 */
export function releaseMetaPedOutfitRequest(requestId) {
    ReleaseMetaPedOutfitRequest(requestId);
}
/**
 * ```
 * Removes a texture created by 0xC5E7204F322E49EB.
 * ```
 * Hash: 0x6BEFAA907B076859 | ApiSet: undefined
 */
export function releaseTexture(textureId) {
    ReleaseTexture(textureId);
}
/**
 * Hash: 0x13E7320C762F0477 | ApiSet: undefined
 */
export function releaseMetaPedAssetRequest(requestId) {
    ReleaseMetaPedAssetRequest(requestId);
}
/**
 * Hash: 0x3088634CF8C819CF | ApiSet: undefined
 */
export function releasePedVisibilityTracking(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ReleasePedVisibilityTracking(_ped);
}
/**
 * Hash: 0xDE7B2B4144906CDF | ApiSet: undefined
 */
export function removeMotionTypeAsset(nameHash, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof nameHash === 'string')
        nameHash = this.getHashKey(nameHash);
    RemoveMotionTypeAsset(nameHash, _ped);
}
/**
 * ```
 * Removes gravity well by handle returned from 0x4F5EBE70081E5A20
 * ```
 * Hash: 0x87247BC60B60BED8 | ApiSet: undefined
 */
export function removeGravityWell(handle) {
    RemoveGravityWell(handle);
}
/**
 * Hash: 0x8EB2F69076AF7053 | ApiSet: undefined
 */
export function removeGroup(groupId) {
    RemoveGroup(groupId);
}
/**
 * Hash: 0x411189E51B8020BA | ApiSet: undefined
 */
export function removePedBlackboardFloat(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedBlackboardFloat(_ped, variableName);
}
/**
 * Hash: 0xA6F67BEC53379A32 | ApiSet: undefined
 */
export function removePedBlackboardBool(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedBlackboardBool(_ped, variableName);
}
/**
 * Hash: 0x0E17378642156790 | ApiSet: undefined
 */
export function removePedBlackboardHash(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedBlackboardHash(_ped, variableName);
}
/**
 * ```
 * Ped will no longer get angry when you stay near him.
 * ```
 * Hash: 0x74D4E028107450A9 | ApiSet: undefined
 */
export function removePedDefensiveArea(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedDefensiveArea(_ped, toggle);
}
/**
 * Hash: 0x81B75428A7813E67 | ApiSet: undefined
 */
export function removePedBlackboardInt(ped, variableName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedBlackboardInt(_ped, variableName);
}
/**
 * ```
 * See _REQUEST_PED_EMOTIONAL_PRESET
 * ```
 * Hash: 0xFC3BAB1801A8255A | ApiSet: undefined
 */
export function removePedEmotionalPreset(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedEmotionalPreset(_ped, name);
}
/**
 * Hash: 0xED74007FFB146BC2 | ApiSet: undefined
 */
export function removePedFromGroup(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedFromGroup(_ped);
}
/**
 * Hash: 0x5337B721C51883A9 | ApiSet: undefined
 */
export function removePedFromMount(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedFromMount(_ped, p1, p2);
}
/**
 * Hash: 0x96C349DE04C49011 | ApiSet: undefined
 */
export function removePedOverlay(textureId, overlayId) {
    RemovePedOverlay(textureId, overlayId);
}
/**
 * Hash: 0x3A50753042B6891B | ApiSet: undefined
 */
export function removePedProp(ped, propName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePedProp(_ped, propName);
}
/**
 * Hash: 0x0CAB404CD2DB41F5 | ApiSet: undefined
 */
export function removePedStayOutVolume(ped, volume) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RemovePedStayOutVolume(_ped, volume);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x011A42FD923D41CA | ApiSet: undefined
 */
export function removePedSubscribeToLegendaryBlips(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RemovePedSubscribeToLegendaryBlips(_ped);
}
/**
 * Hash: 0xB6BA2444AB393DA2 | ApiSet: undefined
 */
export function removeRelationshipGroup(groupHash) {
    if (typeof groupHash === 'string')
        groupHash = this.getHashKey(groupHash);
    RemoveRelationshipGroup(groupHash);
}
/**
 * ```
 * Directly removes a shop item component from a ped
 * Params: p2 and p3 are always 0
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x0D7FFA1B2F69ED82 | ApiSet: undefined
 */
export function removeShopItemFromPed(ped, componentHash, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    RemoveShopItemFromPed(_ped, componentHash, p2, p3);
}
/**
 * Hash: 0x31D16B74C6E29D66 | ApiSet: undefined
 */
export function removeScenarioBlockingArea(p0, p1) {
    RemoveScenarioBlockingArea(p0, p1);
}
/**
 * Hash: 0xD37401D78A929A49 | ApiSet: undefined
 */
export function removeScenarioBlockingAreas() {
    RemoveScenarioBlockingAreas();
}
/**
 * ```
 * Params: p2, p3 usually 0 in R* Scripts
 * ```
 * Hash: 0xDF631E4BCE1B1FC4 | ApiSet: undefined
 */
export function removeShopItemFromPedByCategory(ped, componentCategory, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentCategory === 'string')
        componentCategory = this.getHashKey(componentCategory);
    RemoveShopItemFromPedByCategory(_ped, componentCategory, p2, p3);
}
/**
 * Hash: 0xD710A5007C2AC539 | ApiSet: undefined
 */
export function removeTagFromMetaPed(ped, component, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof component === 'string')
        component = this.getHashKey(component);
    RemoveTagFromMetaPed(_ped, component, p2);
}
/**
 * Hash: 0x4707E9C23D8CA3FE | ApiSet: undefined
 */
export function removeTarget(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    RemoveTarget(_ped, _targetPed);
}
/**
 * ```
 * Returns requestId
 * Params: p1 = 1 in R* Scripts (Used in SP only)
 * ```
 * Hash: 0xF97C34C33487D569 | ApiSet: undefined
 */
export function requestMetaPed(model, p1) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return RequestMetaPed(model, p1);
}
/**
 * Hash: 0xF6D9E1F3560CBF8E | ApiSet: undefined
 */
export function requestMetaPedComponent(metaPedType, p1, p2, p3, p4) {
    return RequestMetaPedComponent(metaPedType, p1, p2, p3, p4);
}
/**
 * ```
 * Returns requestId
 * Params: p1 = 1 in R* Scripts
 * ```
 * Hash: 0x91FE941F9FCFB702 | ApiSet: undefined
 */
export function requestMetaPedAssetBundle(asset, p1) {
    if (typeof asset === 'string')
        asset = this.getHashKey(asset);
    return RequestMetaPedAssetBundle(asset, p1);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 * Returns requestId, to be used with 0x74F512E29CB717E2
 * ```
 * Hash: 0x13154A76CE0CF9AB | ApiSet: undefined
 */
export function requestMetaPedOutfit(model, outfit) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    if (typeof outfit === 'string')
        outfit = this.getHashKey(outfit);
    return RequestMetaPedOutfit(model, outfit);
}
/**
 * Hash: 0xF7EA250B9A919E03 | ApiSet: undefined
 */
export function requestMotionTypeAsset(nameHash, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof nameHash === 'string')
        nameHash = this.getHashKey(nameHash);
    RequestMotionTypeAsset(nameHash, _ped);
}
/**
 * ```
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/fwFacialAnimRequest__Mood
 * Params: p2 = 6 in R* Scripts
 * ```
 * Hash: 0x8B3B71C80A29A4BB | ApiSet: undefined
 */
export function requestPedFacialMoodThisFrame(ped, mood, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof mood === 'string')
        mood = this.getHashKey(mood);
    RequestPedFacialMoodThisFrame(_ped, mood, p2);
}
/**
 * ```
 * For more information, see common:/data/emotional_presets.meta
 * ```
 * Hash: 0x5C3C55EAAD19915F | ApiSet: undefined
 */
export function requestPedEmotionalPreset(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestPedEmotionalPreset(_ped, name);
}
/**
 * Hash: 0xBDED916A9F9B0604 | ApiSet: undefined
 */
export function requestPedForScenarioType(ped, object, p2, scenarioType, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    return RequestPedForScenarioType(_ped, object, p2, scenarioType, p4, p5);
}
/**
 * ```
 * Known get up animation types: REAR, FRONT
 * ```
 * Hash: 0xEAA8242C8479C27D | ApiSet: undefined
 */
export function requestPedGetupAnimation(ped, getUpType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestPedGetupAnimation(_ped, getUpType);
}
/**
 * Hash: 0x75BA1CB3B7D40CAF | ApiSet: undefined
 */
export function requestPedUseSmallBboxVisibilityTracking(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestPedUseSmallBboxVisibilityTracking(_ped, p1);
}
/**
 * Hash: 0x7D7A2E43E74E2EB8 | ApiSet: undefined
 */
export function requestPedVisibilityTracking(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestPedVisibilityTracking(_ped);
}
/**
 * ```
 * Creates a texture override data for ped and returns it's index.
 * So you can replace any texture of any ped's component.
 * Also, you can add overlays on it, such as aging, lipstick and more.
 * Textures can be reused by multiple peds at once.
 * You can keep only 32 textures at once(including other peds).
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
 * materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
 * ```
 * Hash: 0xC5E7204F322E49EB | ApiSet: undefined
 */
export function requestTexture(albedoHash, normalHash, materialHash) {
    if (typeof albedoHash === 'string')
        albedoHash = this.getHashKey(albedoHash);
    if (typeof normalHash === 'string')
        normalHash = this.getHashKey(normalHash);
    if (typeof materialHash === 'string')
        materialHash = this.getHashKey(materialHash);
    return RequestTexture(albedoHash, normalHash, materialHash);
}
/**
 * Hash: 0x2BC338A7B21F4608 | ApiSet: undefined
 */
export function requestPedVehicleVisibilityTracking(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestPedVehicleVisibilityTracking(_ped, p1);
}
/**
 * Hash: 0xF008E0BA1FE1D644 | ApiSet: undefined
 */
export function reserveAmbientPedsTotal(numPeds) {
    ReserveAmbientPedsTotal(numPeds);
}
/**
 * Hash: 0xBEC65C6049B3219D | ApiSet: undefined
 */
export function requestPropScenarioPed(ped, object, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RequestPropScenarioPed(_ped, object, p2, p3, p4, p5);
}
/**
 * Hash: 0xEA16670E7BA4743C | ApiSet: undefined
 */
export function resetAiWeaponDamageModifier() {
    ResetAiWeaponDamageModifier();
}
/**
 * Hash: 0xED9582B3DA8F02B4 | ApiSet: undefined
 */
export function reserveAmbientPeds(numPeds) {
    ReserveAmbientPeds(numPeds);
}
/**
 * Hash: 0x2A5AFD2B8381A6E1 | ApiSet: undefined
 */
export function resetHorseAvoidanceLevelToDefault(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    ResetHorseAvoidanceLevelToDefault(_horse);
}
/**
 * Hash: 0x63DAB4CCB3273205 | ApiSet: undefined
 */
export function resetGroupFormationDefaultSpacing(groupId) {
    ResetGroupFormationDefaultSpacing(groupId);
}
/**
 * Hash: 0x0BFA1BD465CDFEFD | ApiSet: undefined
 */
export function resetPedComponents(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedComponents(_ped);
}
/**
 * Hash: 0x801917E7D7BCE418 | ApiSet: undefined
 */
export function resetPedLadderMovementSpeedModifier(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedLadderMovementSpeedModifier(_ped);
}
/**
 * Hash: 0x22EF8FF8778030EB | ApiSet: undefined
 */
export function resetPedInVehicleContext(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedInVehicleContext(_ped);
}
/**
 * Hash: 0x4B9668DB91DC39B8 | ApiSet: undefined
 */
export function resetPedIncapacitationBleedOutDuration(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedIncapacitationBleedOutDuration(_ped);
}
/**
 * ```
 * Resets the value for the last vehicle driven by the Ped.
 * ```
 * Hash: 0xBB8DE8CF6A8DD8BB | ApiSet: undefined
 */
export function resetPedLastVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedLastVehicle(_ped);
}
/**
 * Hash: 0x9FA4664CF62E47E8 | ApiSet: undefined
 */
export function resetPedRagdollTimer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedRagdollTimer(_ped);
}
/**
 * ```
 * Removes every texture layer but the base layer
 * Clearing texture's data: setting params to default values, but keep overlays.
 * ```
 * Hash: 0x8472A1789478F82F | ApiSet: undefined
 */
export function resetPedTexture(textureId) {
    ResetPedTexture(textureId);
}
/**
 * Hash: 0x97B0DB5B4AA74E77 | ApiSet: undefined
 */
export function resetPedWeaponMovementClipset(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResetPedWeaponMovementClipset(_ped);
}
/**
 * Hash: 0x8D8ACD8388CD99CE | ApiSet: undefined
 */
export function reviveInjuredPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ReviveInjuredPed(_ped);
}
/**
 * ```
 * 0.0 <= stamina <= 100.0
 * ```
 * Hash: 0x675680D089BFA21F | ApiSet: undefined
 */
export function restorePedStamina(ped, stamina) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RestorePedStamina(_ped, stamina);
}
/**
 * Hash: 0xC2266AA617668AD3 | ApiSet: undefined
 */
export function setAccuracyAgainstLocalPlayerModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAccuracyAgainstLocalPlayerModifier(_ped, modifier);
}
/**
 * ```
 * This function will simply bring the dead ped back to life.
 * Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 * ```
 * Hash: 0x71BC8E838B9C6035 | ApiSet: undefined
 */
export function resurrectPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ResurrectPed(_ped);
}
/**
 * Hash: 0x66460DEDDD417254 | ApiSet: undefined
 */
export function setAiMeleeWeaponDamageModifier(modifier) {
    SetAiMeleeWeaponDamageModifier(modifier);
}
/**
 * Hash: 0x1B1E2A40A65B8521 | ApiSet: undefined
 */
export function setAiWeaponDamageModifier(value) {
    SetAiWeaponDamageModifier(value);
}
/**
 * Hash: 0xC0258742B034DFAF | ApiSet: undefined
 */
export function setAmbientAnimalDensityMultiplierThisFrame(multiplier) {
    SetAmbientAnimalDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0xBA0980B5C0A11924 | ApiSet: undefined
 */
export function setAmbientHumanDensityMultiplierThisFrame(multiplier) {
    SetAmbientHumanDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0xAB0D553FE20A6E25 | ApiSet: undefined
 */
export function setAmbientPedDensityMultiplierThisFrame(multiplier) {
    SetAmbientPedDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0x9F8AA94D6D97DBF4 | ApiSet: undefined
 */
export function setBlockingOfNonTemporaryEvents(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetBlockingOfNonTemporaryEvents(_ped, toggle);
}
/**
 * Hash: 0x9911F4A24485F653 | ApiSet: undefined
 */
export function setBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(p0) {
    SetBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(p0);
}
/**
 * ```
 * Sets MetaPedExpression at index specified. Morphs components, such as changing body size or facial features.
 * Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
 * index = MetaPedExpression IDs
 * List of face features: https://pastebin.com/9jb88FXW
 * Full list of MetaPedExpressions: https://pastebin.com/Ld76cAn7
 * value: -1.0 to 1.0 (values beyond this likely won't sync to other clients)
 * This native also allows you to change a horse's gender.
 * ```
 * Hash: 0x5653AB26C82938CF | ApiSet: undefined
 */
export function setCharExpression(ped, index, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetCharExpression(_ped, index, value);
}
/**
 * ```
 * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
 * ```
 * Hash: 0xFF41B4B141ED981C | ApiSet: undefined
 */
export function setCombatFloat(ped, combatType, newValue) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetCombatFloat(_ped, combatType, newValue);
}
/**
 * Hash: 0x069EDDF1FD4DEB0A | ApiSet: undefined
 */
export function setCurrentDefenseAgainstPlayersModifier(horse, modifier) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    SetCurrentDefenseAgainstPlayersModifier(_horse, modifier);
}
/**
 * Hash: 0x9B6808EC46BE849B | ApiSet: undefined
 */
export function setDefenseModifierForPed(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetDefenseModifierForPed(_ped, modifier);
}
/**
 * Hash: 0x102E68B2024D536D | ApiSet: undefined
 */
export function setCreateRandomCops(toggle) {
    SetCreateRandomCops(toggle);
}
/**
 * Hash: 0xC52E0F855C58FC2E | ApiSet: undefined
 */
export function setEnableBoundAnkles(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetEnableBoundAnkles(_ped, toggle);
}
/**
 * ```
 * Ped can not pull out a weapon when true
 * ```
 * Hash: 0xDF1AF8B5D56542FA | ApiSet: undefined
 */
export function setEnableHandcuffs(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetEnableHandcuffs(_ped, p1, p2);
}
/**
 * Hash: 0x478F6B9920446CE2 | ApiSet: undefined
 */
export function setFormationAutoAssignPosition(groupId, toggle) {
    SetFormationAutoAssignPosition(groupId, toggle);
}
/**
 * Hash: 0xFFC24B988B938B38 | ApiSet: undefined
 */
export function setFacialIdleAnimOverride(ped, animName, animDict) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetFacialIdleAnimOverride(_ped, animName, animDict);
}
/**
 * ```
 * eFormationType
 * 0: Default
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 * ```
 * Hash: 0xCE2F5FC3AF7E8C1E | ApiSet: undefined
 */
export function setGroupFormation(groupId, formationType) {
    SetGroupFormation(groupId, formationType);
}
/**
 * ```
 * Sets the range at which members will automatically leave the group.
 * ```
 * Hash: 0x4102C7858CFEE4E4 | ApiSet: undefined
 */
export function setGroupSeparationRange(groupId, separationRange) {
    SetGroupSeparationRange(groupId, separationRange);
}
/**
 * ```
 * -1 - HORSE_ASSIST__NO_CHANGE
 * 0 - HORSE_ASSIST__MANUAL
 * 1 - HORSE_ASSIST__SEMIASSIST
 * 2 - HORSE_ASSIST__FULLASSIST
 * ```
 * Hash: 0xDDCF6FEA5D7ACC17 | ApiSet: undefined
 */
export function setHorseAvoidanceLevel(horse, avoidanceLevel) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    SetHorseAvoidanceLevel(_horse, avoidanceLevel);
}
/**
 * Hash: 0x7CC7D3B7AF7FB71F | ApiSet: undefined
 */
export function setFormationPositionsTargetRadius(groupId, radius) {
    return SetFormationPositionsTargetRadius(groupId, radius);
}
/**
 * Hash: 0x1D9D45004C28C916 | ApiSet: undefined
 */
export function setGroupFormationSpacing(groupId, p1, p2, p3) {
    SetGroupFormationSpacing(groupId, p1, p2, p3);
}
/**
 * Hash: 0xFECA2081F61ED2CD | ApiSet: undefined
 */
export function setInteractionLockonFlag(ped, player, flag, enable) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetInteractionLockonFlag(_ped, _player, flag, enable);
}
/**
 * Hash: 0xDE1B1907A83A1550 | ApiSet: undefined
 */
export function setHealthRechargeMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetHealthRechargeMultiplier(_ped, multiplier);
}
/**
 * Hash: 0xC32779C16FCEECD9 | ApiSet: undefined
 */
export function setIkTarget(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entityLookAt = entityLookAt instanceof Entity ? entityLookAt.handle() : entityLookAt;
    SetIkTarget(_ped, ikIndex, _entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration);
}
/**
 * ```
 * Use to apply metaped player components
 * Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
 * ```
 * Hash: 0xBC6DF00D7A4A6819 | ApiSet: undefined
 */
export function setMetaPedTag(ped, drawable, albedo, normal, material, palette, tint0, tint1, tint2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof drawable === 'string')
        drawable = this.getHashKey(drawable);
    if (typeof albedo === 'string')
        albedo = this.getHashKey(albedo);
    if (typeof normal === 'string')
        normal = this.getHashKey(normal);
    if (typeof material === 'string')
        material = this.getHashKey(material);
    if (typeof palette === 'string')
        palette = this.getHashKey(palette);
    SetMetaPedTag(_ped, drawable, albedo, normal, material, palette, tint0, tint1, tint2);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x7883AA809DF43D98 | ApiSet: undefined
 */
export function setMinPedHealthThreshold(ped, healthAmount) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetMinPedHealthThreshold(_ped, healthAmount);
}
/**
 * ```
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
 * lootFlag:
 * enum eLootFlag
 * {
 * LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
 * LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
 * LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
 * };
 * ```
 * Hash: 0x6569F31A01B4C097 | ApiSet: undefined
 */
export function setLootingFlag(ped, lootFlag, enabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetLootingFlag(_ped, lootFlag, enabled);
}
/**
 * Hash: 0xA69899995997A63B | ApiSet: undefined
 */
export function setMountBondingLevel(ped, bondingLevel) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetMountBondingLevel(_ped, bondingLevel);
}
/**
 * ```
 * Sets ped eye redness, weariness: 0.f to 1.f
 * ```
 * Hash: 0x314C5465195F3B30 | ApiSet: undefined
 */
export function setMetaPedWeariness(ped, weariness) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetMetaPedWeariness(_ped, weariness);
}
/**
 * ```
 * Note: this native was added in build 1232.40
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x11E6B9629C46D6EC | ApiSet: undefined
 */
export function setMountSecurityEnabled(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetMountSecurityEnabled(_ped, toggle);
}
/**
 * Hash: 0x925A160133003AC6 | ApiSet: undefined
 */
export function setPausePedWritheBleedout(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPausePedWritheBleedout(_ped, toggle);
}
/**
 * ```
 * accuracy = 0-100, 100 being perfectly accurate
 * ```
 * Hash: 0x7AEFB85C1D49DEB6 | ApiSet: undefined
 */
export function setPedAccuracy(ped, accuracy) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAccuracy(_ped, accuracy);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
 * ```
 * Hash: 0xB8DE69D9473B7593 | ApiSet: undefined
 */
export function setPedActionDisableFlag(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedActionDisableFlag(_ped, actionDisableFlag);
}
/**
 * ```
 * Params: hash - ARTHUR or JOHN
 * _SET_PED_(A-D)*
 * ```
 * Hash: 0xB285AD0EC870B2DF | ApiSet: undefined
 */
export function setPedActivePlayerType(ped, playerType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof playerType === 'string')
        playerType = this.getHashKey(playerType);
    SetPedActivePlayerType(_ped, playerType);
}
/**
 * ```
 * bloodFountainPressure: visible effect from 0.0 till 20.0
 * yaw: visible effect from -3.0 till 3.0
 * bloodFountainDirection: 1.0 left side, -1.0 right side
 * bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
 * make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
 * ```
 * Hash: 0xFFD54D9FE71B966A | ApiSet: undefined
 */
export function setPedActivateWoundEffect(ped, p1, boneId, moveWoundLeftRight, bloodFountainPressure, yaw, bloodFountainDirection, bloodFountainPulse, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedActivateWoundEffect(_ped, p1, boneId, moveWoundLeftRight, bloodFountainPressure, yaw, bloodFountainDirection, bloodFountainPulse, p8, p9);
}
/**
 * ```
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 * toggle = bSetRelGroup
 * ```
 * Hash: 0xBB03C38DD3FB7FFD | ApiSet: undefined
 */
export function setPedAsCop(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAsCop(_ped, toggle);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x43CA928E892CFDB8 | ApiSet: undefined
 */
export function setPedAnimalDetectionModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAnimalDetectionModifier(_ped, modifier);
}
/**
 * Hash: 0x2A7819605465FBCE | ApiSet: undefined
 */
export function setPedAsGroupLeader(ped, groupId, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAsGroupLeader(_ped, groupId, p2);
}
/**
 * ```
 * NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
 * ```
 * Hash: 0x6DBF2D78709AD70B | ApiSet: undefined
 */
export function setPedBeatMultiplier(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedBeatMultiplier(_ped, p1);
}
/**
 * Hash: 0x9F3480FE65DB31B5 | ApiSet: undefined
 */
export function setPedAsGroupMember(ped, groupId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAsGroupMember(_ped, groupId);
}
/**
 * Hash: 0xCB9401F918CB0F75 | ApiSet: undefined
 */
export function setPedBlackboardBool(ped, variableName, value, removeTimer) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedBlackboardBool(_ped, variableName, value, removeTimer);
}
/**
 * ```
 * p1:
 * BodyPartChained
 * OverloadMostInjuredBodyPart
 * p2:
 * LeftLeg
 * Legs
 * RightArm
 * ```
 * Hash: 0xA762C9D6CF165E0D | ApiSet: undefined
 */
export function setPedBlackboardHash(ped, variableName, value, removeTimer) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedBlackboardHash(_ped, variableName, value, removeTimer);
}
/**
 * Hash: 0x437C08DB4FEBE2BD | ApiSet: undefined
 */
export function setPedBlackboardFloat(ped, variableName, value, removeTimer) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedBlackboardFloat(_ped, variableName, value, removeTimer);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
 * Blackboard natives allow you to apply and check certain data to/for peds.
 * Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
 * Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
 * "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
 * ```
 * Hash: 0x5F53010C4C3F6BAF | ApiSet: undefined
 */
export function setPedBlackboardInt(ped, variableName, value, removeTimer) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedBlackboardInt(_ped, variableName, value, removeTimer);
}
/**
 * ```
 * Bleedout profiles:
 * Animal_FastBleedout
 * Animal_Generic
 * Human_FastBleedout
 * Human_Generic
 * Human_Mission
 * For more information, see common/data/ai/peddamageinfo.meta
 * ```
 * Hash: 0x66C047719B0E80E1 | ApiSet: undefined
 */
export function setPedBleedoutProfile(ped, bleedoutProfile) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof bleedoutProfile === 'string')
        bleedoutProfile = this.getHashKey(bleedoutProfile);
    SetPedBleedoutProfile(_ped, bleedoutProfile);
}
/**
 * Hash: 0x6C3B4D6D13B4C841 | ApiSet: undefined
 */
export function setPedCanArmIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanArmIk(_ped, toggle);
}
/**
 * ```
 * brawlingStyle:
 * enum eBrawlingStyle : Hash
 * {
 * BS_AI = 0x802C604D,
 * BS_AI_BARBRAWL = 0x4FF5F0C7,
 * BS_AI_DEFENSIVE = 0xD888F2FD,
 * BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
 * BS_ALLIGATOR = 0x7A5548ED,
 * BS_ALLIGATOR_LARGE = 0x368EC7CB,
 * BS_ALLY = 0x69C76C14,
 * BS_ANIMAL = 0xD777C754,
 * BS_BADGER = 0x7E7C3F53,
 * BS_BEAR = 0x0BC66E35,
 * BS_BEAVER = 0x4E313783,
 * BS_BOAR = 0x176A5831,
 * BS_BOUNTY_HUNTER = 0x3900654C,
 * BS_BRUISER = 0x4514DB61,
 * BS_BULL = 0x4E50C5D2,
 * BS_COUGAR = 0x9DAA7CCB,
 * BS_COW = 0xB0E91295,
 * BS_COYOTE = 0xA448EB69,
 * BS_DEER = 0xA781E6B3,
 * BS_DOG = 0x5A4155C4,
 * BS_ELK = 0x408697F0,
 * BS_FEMALE = 0x6A3BB2C2,
 * BS_FEMALE_STRONG = 0x4DAFDD84,
 * BS_GANGUP = 0xD0CECFF2,
 * BS_GOAT = 0x078E649F,
 * BS_HORSE = 0xF6B775F3,
 * BS_MICAH_FINALE = 0x1F0BB27A,
 * BS_MOOSE = 0x968917AB,
 * BS_MUSKRAT = 0x1EDC33AC,
 * BS_NO_MELEE = 0x25B5F931,
 * BS_PIG = 0x22EAD110,
 * BS_PLAYER = 0x78BAEF07,
 * BS_PLAYER_FINALE = 0xF9E77D2D,
 * BS_PLAYER_MOONSHINER = 0x687BF19F,
 * BS_PLAYER_WINTER1 = 0x3C6A802F,
 * BS_QUICK = 0xC4CABB1B,
 * BS_RACCOON = 0x505F8917,
 * BS_SHEEP = 0x6827CCCF,
 * BS_SNAKE = 0x82BEBC4B,
 * BS_TIMID = 0x431AEF77,
 * BS_WOLF = 0xA8F023D4
 * };
 * ```
 * Hash: 0x8BA83CC4288CD56D | ApiSet: undefined
 */
export function setPedBrawlingStyle(ped, brawlingStyle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof brawlingStyle === 'string')
        brawlingStyle = this.getHashKey(brawlingStyle);
    SetPedBrawlingStyle(_ped, brawlingStyle);
}
/**
 * ```
 * state:
 * enum eKnockOffVehicle
 * {
 * KNOCKOFFVEHICLE_DEFAULT,
 * KNOCKOFFVEHICLE_NEVER,
 * KNOCKOFFVEHICLE_EASY,
 * KNOCKOFFVEHICLE_HARD
 * };
 * ```
 * Hash: 0x7A6535691B477C48 | ApiSet: undefined
 */
export function setPedCanBeKnockedOffVehicle(ped, state) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanBeKnockedOffVehicle(_ped, state);
}
/**
 * ```
 * When set on a player ped, its just like when you die in RDO
 * ```
 * Hash: 0x5240864E847C691C | ApiSet: undefined
 */
export function setPedCanBeIncapacitated(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanBeIncapacitated(_ped, toggle);
}
/**
 * ```
 * SET_PED_CAN_*
 * ```
 * Hash: 0xFD6943B6DF77E449 | ApiSet: undefined
 */
export function setPedCanBeLassoed(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanBeLassoed(_ped, toggle);
}
/**
 * Hash: 0x63F58F7C80513AAD | ApiSet: undefined
 */
export function setPedCanBeTargetted(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanBeTargetted(_ped, toggle);
}
/**
 * Hash: 0x66B57B72E0836A76 | ApiSet: undefined
 */
export function setPedCanBeTargettedByPlayer(ped, player, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPedCanBeTargettedByPlayer(_ped, _player, toggle);
}
/**
 * Hash: 0xBF1CA77833E58F2C | ApiSet: undefined
 */
export function setPedCanBeTargettedByTeam(ped, team, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanBeTargettedByTeam(_ped, team, toggle);
}
/**
 * Hash: 0x73518ECE2485412B | ApiSet: undefined
 */
export function setPedCanLegIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanLegIk(_ped, toggle);
}
/**
 * Hash: 0xC11C18092C5530DC | ApiSet: undefined
 */
export function setPedCanHeadIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanHeadIk(_ped, toggle);
}
/**
 * Hash: 0x6373D1349925A70E | ApiSet: undefined
 */
export function setPedCanPlayAmbientAnims(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanPlayAmbientAnims(_ped, toggle);
}
/**
 * Hash: 0xBAF20C5432058024 | ApiSet: undefined
 */
export function setPedCanPlayGestureAnims(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanPlayGestureAnims(_ped, p1, p2);
}
/**
 * Hash: 0x0EB0585D15254740 | ApiSet: undefined
 */
export function setPedCanPlayAmbientBaseAnims(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanPlayAmbientBaseAnims(_ped, toggle);
}
/**
 * Hash: 0xDF993EE5E90ABA25 | ApiSet: undefined
 */
export function setPedCanRagdollFromPlayerImpact(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanRagdollFromPlayerImpact(_ped, toggle);
}
/**
 * Hash: 0xB128377056A54E2A | ApiSet: undefined
 */
export function setPedCanRagdoll(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanRagdoll(_ped, toggle);
}
/**
 * ```
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 * Only works in singleplayer
 * ```
 * Hash: 0x2E2F4240B3F24647 | ApiSet: undefined
 */
export function setPedCanTeleportToGroupLeader(pedHandle, groupId, toggle) {
    const _pedHandle = pedHandle instanceof Ped ? pedHandle.handle() : pedHandle;
    SetPedCanTeleportToGroupLeader(_pedHandle, groupId, toggle);
}
/**
 * Hash: 0xF2B7106D37947CE0 | ApiSet: undefined
 */
export function setPedCanTorsoIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanTorsoIk(_ped, toggle);
}
/**
 * Hash: 0xF5846EDB26A98A24 | ApiSet: undefined
 */
export function setPedCanTorsoReactIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanTorsoReactIk(_ped, toggle);
}
/**
 * Hash: 0x6647C5F6F5792496 | ApiSet: undefined
 */
export function setPedCanTorsoVehicleIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanTorsoVehicleIk(_ped, toggle);
}
/**
 * ```
 * _SET_PED_CAN_(?)_IK*
 * ```
 * Hash: 0xEE9DF765990E8D1D | ApiSet: undefined
 */
export function setPedCanUnkBodypartIk(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanUnkBodypartIk(_ped, toggle);
}
/**
 * ```
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 * Setting this to 0.001 will allow warping through some objects.
 * ```
 * Hash: 0x364DF566EC833DE2 | ApiSet: undefined
 */
export function setPedCapsule(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCapsule(_ped, value);
}
/**
 * Hash: 0xEC4686EC06434678 | ApiSet: undefined
 */
export function setPedCanUseAutoConversationLookat(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCanUseAutoConversationLookat(_ped, toggle);
}
/**
 * ```
 * abilityLevel:
 * enum eCombatAbilityLevel
 * {
 * CAL_POOR,
 * CAL_AVERAGE,
 * CAL_PROFESSIONAL
 * };
 * ```
 * Hash: 0xC7622C0D36B2FDA8 | ApiSet: undefined
 */
export function setPedCombatAbility(ped, abilityLevel) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCombatAbility(_ped, abilityLevel);
}
/**
 * Hash: 0x78C4E9961DB3EB5B | ApiSet: undefined
 */
export function setPedClothPinFrames(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedClothPinFrames(_ped, p1);
}
/**
 * ```
 * Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
 * _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
 * ```
 * Hash: 0xBD75500141E4725C | ApiSet: undefined
 */
export function setPedCombatAttributeHash(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetPedCombatAttributeHash(_ped, p1);
}
/**
 * ```
 * attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
 * ```
 * Hash: 0x9F7794730795E019 | ApiSet: undefined
 */
export function setPedCombatAttributes(ped, attributeIndex, enabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCombatAttributes(_ped, attributeIndex, enabled);
}
/**
 * Hash: 0x9238A3D970BBB0A9 | ApiSet: undefined
 */
export function setPedCombatBehaviour(ped, behaviour) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof behaviour === 'string')
        behaviour = this.getHashKey(behaviour);
    SetPedCombatBehaviour(_ped, behaviour);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
 * Params: p2 is usually 1, sometimes 0 or 2
 * duration in seconds, -1.0 = forever
 * ```
 * Hash: 0x8ACC0506743A8A5C | ApiSet: undefined
 */
export function setPedCombatStyle(ped, combatStyleHash, p2, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof combatStyleHash === 'string')
        combatStyleHash = this.getHashKey(combatStyleHash);
    SetPedCombatStyle(_ped, combatStyleHash, p2, duration);
}
/**
 * ```
 * 0 - Stationary (Will just stand in place)
 * 1 - Defensive (Will try to find cover and very likely to blind fire)
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
 * ```
 * Hash: 0x4D9CA1009AFBD057 | ApiSet: undefined
 */
export function setPedCombatMovement(ped, combatMovement) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCombatMovement(_ped, combatMovement);
}
/**
 * ```
 * range:
 * enum eCombatRange
 * {
 * CR_NEAR,
 * CR_MEDIUM,
 * CR_FAR,
 * CR_VERY_FAR
 * };
 * ```
 * Hash: 0x3C606747B23E497B | ApiSet: undefined
 */
export function setPedCombatRange(ped, range) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCombatRange(_ped, range);
}
/**
 * ```
 * duration in seconds, -1.0 = forever
 * ```
 * Hash: 0x8B1E8E35A6E814EA | ApiSet: undefined
 */
export function setPedCombatStyleMod(ped, combatStyleModHash, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof combatStyleModHash === 'string')
        combatStyleModHash = this.getHashKey(combatStyleModHash);
    SetPedCombatStyleMod(_ped, combatStyleModHash, duration);
}
/**
 * Hash: 0x7DE9692C6F64CFE8 | ApiSet: undefined
 */
export function setPedCrouchMovement(ped, state, p2, immediately) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCrouchMovement(_ped, state, p2, immediately);
}
/**
 * ```
 * flagId: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptConfigFlags
 * https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
 * ```
 * Hash: 0x1913FE4CBF41C463 | ApiSet: undefined
 */
export function setPedConfigFlag(ped, flagId, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedConfigFlag(_ped, flagId, value);
}
/**
 * ```
 * damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
 * ```
 * Hash: 0x7528720101A807A5 | ApiSet: undefined
 */
export function setPedDamageCleanliness(ped, damageCleanliness) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDamageCleanliness(_ped, damageCleanliness);
}
/**
 * ```
 * The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
 * ```
 * Hash: 0x8AC1D721B2097B6E | ApiSet: undefined
 */
export function setPedCullRange(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCullRange(_ped, p1, p2);
}
/**
 * Hash: 0xDACE03C65C6666DB | ApiSet: undefined
 */
export function setPedDamaged(ped, damaged) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDamaged(_ped, damaged);
}
/**
 * ```
 * _SET_PED_(A?)*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xEB2BFE5D009F0331 | ApiSet: undefined
 */
export function setPedDefensiveAreaToAngledArea(ped, x1, y1, z1, x2, y2, z2, p7, p8, p9, entity, p11) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetPedDefensiveAreaToAngledArea(_ped, x1, y1, z1, x2, y2, z2, p7, p8, p9, _entity, p11);
}
/**
 * Hash: 0x413C6C763A4AFFAD | ApiSet: undefined
 */
export function setPedDefensiveAreaDirection(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDefensiveAreaDirection(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x1854217C640B39EC | ApiSet: undefined
 */
export function setPedDefensiveSphereAttachedToEntity(ped, entity, position, radius, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetPedDefensiveSphereAttachedToEntity(_ped, _entity, position.x, position.y, position.z, radius, p6, p7);
}
/**
 * Hash: 0xFC3DB99C8144CD81 | ApiSet: undefined
 */
export function setPedDefensiveAreaVolume(ped, volume, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDefensiveAreaVolume(_ped, volume, p2, p3, p4);
}
/**
 * Hash: 0xAA5A7ECE2AA8FE70 | ApiSet: undefined
 */
export function setPedDesiredHeading(ped, heading) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDesiredHeading(_ped, heading);
}
/**
 * ```
 * Seems to set the ped's loco type.
 * Values used in the scripts:
 * algie
 * angry_female
 * arthur_healthy
 * cowboy
 * cowboy_f
 * default
 * default_female
 * free_slave_01
 * free_slave_02
 * gold_panner
 * guard_lantern
 * injured_general
 * john_marston
 * lilly_millet
 * lone_prisoner
 * lost_man
 * mp_ova_hunter
 * mp_ova_hunter_female
 * murfree
 * old_female
 * primate
 * rally
 * waiter
 * war_veteran
 * ```
 * Hash: 0x923583741DC87BCE | ApiSet: undefined
 */
export function setPedDesiredLocoForModel(ped, locomotionArchetype) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDesiredLocoForModel(_ped, locomotionArchetype);
}
/**
 * ```
 * Sets peds motion type
 * ```
 * Hash: 0x89F5E7ADECCCB49C | ApiSet: undefined
 */
export function setPedDesiredLocoMotionType(ped, locoMotionType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDesiredLocoMotionType(_ped, locoMotionType);
}
/**
 * ```
 * Params: ped, 0f, -1, true, true in R* MP Scripts
 * _SET_PED_DE* - _SET_PED_F*
 * ```
 * Hash: 0xE3144B932DFDFF65 | ApiSet: undefined
 */
export function setPedDirtCleaned(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDirtCleaned(_ped, p1, p2, p3, p4);
}
/**
 * ```
 * Disables being able to kick move ped.
 * ```
 * Hash: 0xADD31A5C7A5FAA73 | ApiSet: undefined
 */
export function setPedDisableKickMove(ped, disable) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDisableKickMove(_ped, disable);
}
/**
 * ```
 * SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
 * ```
 * Hash: 0x406CCF555B04FAD3 | ApiSet: undefined
 */
export function setPedDrunkness(ped, enabled, drunknessLevel) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDrunkness(_ped, enabled, drunknessLevel);
}
/**
 * ```
 * Used in various R* MP & SP Scripts
 * ```
 * Hash: 0x9AC577F5A12AD8A9 | ApiSet: undefined
 */
export function setPedFiringPattern(ped, patternHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof patternHash === 'string')
        patternHash = this.getHashKey(patternHash);
    SetPedFiringPattern(_ped, patternHash);
}
/**
 * ```
 * Only used in R* MP Script fm_mission_controller
 * ```
 * Hash: 0x244E8C282188E40F | ApiSet: undefined
 */
export function setPedFiringPattern3(ped, patternHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof patternHash === 'string')
        patternHash = this.getHashKey(patternHash);
    SetPedFiringPattern3(_ped, patternHash);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
 * attributeFlags:
 * enum eFleeAttribute
 * {
 * FA_FORCE_EXIT_VEHICLE = (1 << 16),
 * FA_DISABLE_MOUNT_USAGE = (1 << 20),
 * FA_DISABLE_ENTER_VEHICLES = (1 << 22),
 * };
 * ```
 * Hash: 0x70A2D1137C8ED7C9 | ApiSet: undefined
 */
export function setPedFleeAttributes(ped, attributeFlags, enable) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedFleeAttributes(_ped, attributeFlags, enable);
}
/**
 * ```
 * Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
 * ```
 * Hash: 0x20E54854DEF6A54A | ApiSet: undefined
 */
export function setPedFiringPattern2(ped, patternHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof patternHash === 'string')
        patternHash = this.getHashKey(patternHash);
    SetPedFiringPattern2(_ped, patternHash);
}
/**
 * Hash: 0x0E9E95FDEDCC9D35 | ApiSet: undefined
 */
export function setPedFormationPosition(ped, position, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedFormationPosition(_ped, position, toggle);
}
/**
 * Hash: 0xDDF803377F94AAA8 | ApiSet: undefined
 */
export function setPedGestureGroup(ped, gesture, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGestureGroup(_ped, gesture, p2);
}
/**
 * Hash: 0x3AE3552E7C207CC5 | ApiSet: undefined
 */
export function setPedGetupAnimation(ped, animName, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGetupAnimation(_ped, animName, p2);
}
/**
 * Hash: 0x8301D87B1B89E219 | ApiSet: undefined
 */
export function setPedGrappleAction(ped, grappleAction) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof grappleAction === 'string')
        grappleAction = this.getHashKey(grappleAction);
    SetPedGrappleAction(_ped, grappleAction);
}
/**
 * Hash: 0x99A6E246C315BF60 | ApiSet: undefined
 */
export function setPedGrappleEffectMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedGrappleEffectMultiplier(_ped, multiplier);
}
/**
 * Hash: 0x56E9C26CD29D1ED6 | ApiSet: undefined
 */
export function setPedGrappleAnimation(ped, grappleAnim) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof grappleAnim === 'string')
        grappleAnim = this.getHashKey(grappleAnim);
    SetPedGrappleAnimation(_ped, grappleAnim);
}
/**
 * Hash: 0x604190F0CF0DF158 | ApiSet: undefined
 */
export function setPedGrappleSequence(ped, grappleSequence) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGrappleSequence(_ped, grappleSequence);
}
/**
 * Hash: 0x789DABD18E9024DB | ApiSet: undefined
 */
export function setPedGrappleFlag(ped, flag, enable) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGrappleFlag(_ped, flag, enable);
}
/**
 * Hash: 0x9FF447B6B6AD960A | ApiSet: undefined
 */
export function setPedGravity(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGravity(_ped, toggle);
}
/**
 * ```
 * Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
 * ```
 * Hash: 0x630E7B01F091A197 | ApiSet: undefined
 */
export function setPedGrappleStyle(ped, style) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof style === 'string')
        style = this.getHashKey(style);
    return SetPedGrappleStyle(_ped, style);
}
/**
 * Hash: 0x2BA918C823B8BA56 | ApiSet: undefined
 */
export function setPedHeadshotDamageMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedHeadshotDamageMultiplier(_ped, multiplier);
}
/**
 * Hash: 0x0BDDB8D9EC6BCF3C | ApiSet: undefined
 */
export function setPedGroupMemberPassengerIndex(ped, index) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedGroupMemberPassengerIndex(_ped, index);
}
/**
 * Hash: 0x33A8F7F7D5F7F33C | ApiSet: undefined
 */
export function setPedHearingRange(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedHearingRange(_ped, value);
}
/**
 * ```
 * configHash: see pedhealth.meta
 * ```
 * Hash: 0xF6B82FCE03B43A37 | ApiSet: undefined
 */
export function setPedHealthConfig(ped, configHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof configHash === 'string')
        configHash = this.getHashKey(configHash);
    SetPedHealthConfig(_ped, configHash);
}
/**
 * Hash: 0x52D59AB61DDC05DD | ApiSet: undefined
 */
export function setPedHighlyPerceptive(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedHighlyPerceptive(_ped, toggle);
}
/**
 * Hash: 0xF107E836A70DCE05 | ApiSet: undefined
 */
export function setPedIdRange(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIdRange(_ped, value);
}
/**
 * ```
 * Only used in R* Script beat_sharp_shooter
 * Blocks ped from swimming underwater
 * ```
 * Hash: 0x7FB0088E8769CDDB | ApiSet: undefined
 */
export function setPedImmersionFlag(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedImmersionFlag(_ped, toggle);
}
/**
 * Hash: 0xD67B6F3BCF81BA47 | ApiSet: undefined
 */
export function setPedIncapacitationFlags(ped, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIncapacitationFlags(_ped, flags);
}
/**
 * Hash: 0x39ED303390DDEAC7 | ApiSet: undefined
 */
export function setPedIncapacitationModifiers(ped, canBeIncapacitated, threshold, bleedoutTime, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIncapacitationModifiers(_ped, canBeIncapacitated, threshold, bleedoutTime, p4);
}
/**
 * Hash: 0x2890418B39BC8FFF | ApiSet: undefined
 */
export function setPedIncapacitationTotalBleedOutDuration(ped, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIncapacitationTotalBleedOutDuration(_ped, duration);
}
/**
 * Hash: 0xA3C53CDE922BC78B | ApiSet: undefined
 */
export function setPedInteractionNegativeResponse(ped, speech) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedInteractionNegativeResponse(_ped, speech);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xEC4B4B3B9908052A | ApiSet: undefined
 */
export function setPedInjuredOnGroundBehaviour(ped, unk) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedInjuredOnGroundBehaviour(_ped, unk);
}
/**
 * Hash: 0x20C5459379D75C1C | ApiSet: undefined
 */
export function setPedInteractionPositiveResponse(ped, speech) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedInteractionPositiveResponse(_ped, speech);
}
/**
 * ```
 * personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
 * personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
 * ```
 * Hash: 0x24C82EF607105FAA | ApiSet: undefined
 */
export function setPedInteractionPersonality(ped, personality) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof personality === 'string')
        personality = this.getHashKey(personality);
    SetPedInteractionPersonality(_ped, personality);
}
/**
 * ```
 * Ped: The ped to warp.
 * vehicle: The vehicle to warp the ped into.
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0xF75B0D629E1C063D | ApiSet: undefined
 */
export function setPedIntoVehicle(ped, vehicle, seatIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetPedIntoVehicle(_ped, _vehicle, seatIndex);
}
/**
 * Hash: 0x971D38760FBC02EF | ApiSet: undefined
 */
export function setPedKeepTask(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedKeepTask(_ped, toggle);
}
/**
 * Hash: 0x5BCF0B79D4F5DBA3 | ApiSet: undefined
 */
export function setPedKnockedByOneHit(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedKnockedByOneHit(_ped, p1);
}
/**
 * Hash: 0x05CE6AF4DF071D23 | ApiSet: undefined
 */
export function setPedLadderMovementSpeedModifier(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLadderMovementSpeedModifier(_ped, p1);
}
/**
 * Hash: 0xAE6004120C18DF97 | ApiSet: undefined
 */
export function setPedLassoHogtieFlag(ped, flagId, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLassoHogtieFlag(_ped, flagId, value);
}
/**
 * Hash: 0xC396F5B86FF9FEBD | ApiSet: undefined
 */
export function setPedLegIkMode(ped, mode) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLegIkMode(_ped, mode);
}
/**
 * Hash: 0x13A210949FCBD92B | ApiSet: undefined
 */
export function setPedLights(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLights(_ped, toggle);
}
/**
 * Hash: 0xDC2C5C242AAC342B | ApiSet: undefined
 */
export function setPedLodMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedLodMultiplier(_ped, multiplier);
}
/**
 * ```
 * Sets the maximum health of a ped.
 * ```
 * Hash: 0xF5F6378C4F3419D3 | ApiSet: undefined
 */
export function setPedMaxHealth(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMaxHealth(_ped, value);
}
/**
 * Hash: 0x433083750C5E064A | ApiSet: undefined
 */
export function setPedMaxMoveBlendRatio(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMaxMoveBlendRatio(_ped, value);
}
/**
 * Hash: 0x43C851690662113D | ApiSet: undefined
 */
export function setPedMaxTimeInWater(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMaxTimeInWater(_ped, value);
}
/**
 * Hash: 0x6BA428C528D9E522 | ApiSet: undefined
 */
export function setPedMaxTimeUnderwater(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMaxTimeUnderwater(_ped, value);
}
/**
 * Hash: 0x01A898D26E2333DD | ApiSet: undefined
 */
export function setPedMinMoveBlendRatio(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMinMoveBlendRatio(_ped, value);
}
/**
 * Hash: 0xE163A4BCE4DE6F11 | ApiSet: undefined
 */
export function setPedModelIsSuppressed(model, toggle) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    SetPedModelIsSuppressed(model, toggle);
}
/**
 * Hash: 0xA9C8960E8684C1B5 | ApiSet: undefined
 */
export function setPedMoney(ped, amount) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMoney(_ped, amount);
}
/**
 * ```
 * enum eMotivationState
 * {
 * TOILET_STATE,
 * FEAR_STATE,
 * ANGRY_STATE,
 * AGITATION_STATE,
 * HUNGRY_STATE,
 * TIRED_STATE,
 * SAD_STATE,
 * BRAVE_STATE,
 * OFFER_ITEM_STATE,
 * SUSPICION,
 * DRUNK_STATE
 * };
 * If targetPed is set to 0 the ped motivationState affects everyone
 * ```
 * Hash: 0x06D26A96CA1BCA75 | ApiSet: undefined
 */
export function setPedMotivation(ped, motivationState, threshold, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    SetPedMotivation(_ped, motivationState, threshold, _targetPed);
}
/**
 * ```
 * The higher the modifier, the slower the motivationState value will decrease
 * ```
 * Hash: 0xA1EB5D029E0191D3 | ApiSet: undefined
 */
export function setPedMotivationModifier(ped, motivationState, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMotivationModifier(_ped, motivationState, modifier);
}
/**
 * ```
 * motivationState: see _SET_PED_MOTIVATION
 * ```
 * Hash: 0x2EB75FB86C41F026 | ApiSet: undefined
 */
export function setPedMotivationStateOverride(ped, motivationState, enabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMotivationStateOverride(_ped, motivationState, enabled);
}
/**
 * ```
 * Min: 0.0f
 * Max: 1.15f
 * ```
 * Hash: 0x085BF80FA50A39D1 | ApiSet: undefined
 */
export function setPedMoveRateOverride(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMoveRateOverride(_ped, value);
}
/**
 * Hash: 0x9E8C908F41584ECD | ApiSet: undefined
 */
export function setPedMoveAnimsBlendOut(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedMoveAnimsBlendOut(_ped);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x98EFA132A4117BE1 | ApiSet: undefined
 */
export function setPedNameDebug(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedNameDebug(_ped, name);
}
/**
 * Hash: 0x028F76B6E78246EB | ApiSet: undefined
 */
export function setPedOntoMount(ped, mount, seatIndex, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    SetPedOntoMount(_ped, _mount, seatIndex, p3);
}
/**
 * ```
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 * ```
 * Hash: 0xEE01041D559983EA | ApiSet: undefined
 */
export function setPedNonCreationArea(x1, y1, z1, x2, y2, z2) {
    SetPedNonCreationArea(x1, y1, z1, x2, y2, z2);
}
/**
 * Hash: 0x931B241409216C1F | ApiSet: undefined
 */
export function setPedOwnsAnimal(ped, animal, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _animal = animal instanceof Ped ? animal.handle() : animal;
    SetPedOwnsAnimal(_ped, _animal, p2);
}
/**
 * Hash: 0xFE07FF6495D52E2A | ApiSet: undefined
 */
export function setPedPanicExitScenario(ped, position) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedPanicExitScenario(_ped, position.x, position.y, position.z);
}
/**
 * ```
 * Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE, LAW_POLICE, GUARD_DOG, ATTACK_DOG
 * Personalities can also be found in common:/data/ai/interactionpersonalities
 * ```
 * Hash: 0xB8B6430EAD2D2437 | ApiSet: undefined
 */
export function setPedPersonality(ped, personality) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof personality === 'string')
        personality = this.getHashKey(personality);
    SetPedPersonality(_ped, personality);
}
/**
 * Hash: 0x4A48B6E03BABB4AC | ApiSet: undefined
 */
export function setPedPromptName(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPromptName(_ped, name);
}
/**
 * Hash: 0xFCA8FB9E15FA80D3 | ApiSet: undefined
 */
export function setPedPromptNameFromGxtEntry(ped, gxtEntryHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof gxtEntryHash === 'string')
        gxtEntryHash = this.getHashKey(gxtEntryHash);
    SetPedPromptNameFromGxtEntry(_ped, gxtEntryHash);
}
/**
 * Hash: 0xC2745D9261664901 | ApiSet: undefined
 */
export function setPedPromptNameFromGxtEntry2(ped, gxtEntryHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof gxtEntryHash === 'string')
        gxtEntryHash = this.getHashKey(gxtEntryHash);
    SetPedPromptNameFromGxtEntry2(_ped, gxtEntryHash);
}
/**
 * Hash: 0x19B14E04B009E28B | ApiSet: undefined
 */
export function setPedPromptName2(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPromptName2(_ped, name);
}
/**
 * ```
 * quality: see _GET_PED_QUALITY
 * ```
 * Hash: 0xCE6B874286D640BB | ApiSet: undefined
 */
export function setPedQuality(ped, quality) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedQuality(_ped, quality);
}
/**
 * ```
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 * ```
 * Hash: 0xF0A4F1BBF4FA7497 | ApiSet: undefined
 */
export function setPedRagdollOnCollision(ped, toggle, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedRagdollOnCollision(_ped, toggle, p2);
}
/**
 * Hash: 0x01F6594B923B9251 | ApiSet: undefined
 */
export function setPedRagdollForceFall(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedRagdollForceFall(_ped);
}
/**
 * Hash: 0xC8A9481A01E63C28 | ApiSet: undefined
 */
export function setPedRandomComponentVariation(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedRandomComponentVariation(_ped, p1);
}
/**
 * Hash: 0xC80A74AC829DDD92 | ApiSet: undefined
 */
export function setPedRelationshipGroupHash(ped, relationshipGroup) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof relationshipGroup === 'string')
        relationshipGroup = this.getHashKey(relationshipGroup);
    SetPedRelationshipGroupHash(_ped, relationshipGroup);
}
/**
 * Hash: 0xADB3F206518799E8 | ApiSet: undefined
 */
export function setPedRelationshipGroupDefaultHash(ped, hash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    SetPedRelationshipGroupDefaultHash(_ped, hash);
}
/**
 * ```
 * Needs to be called every frame
 * flagid:https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
 * ```
 * Hash: 0xC1E8A365BF3B29F2 | ApiSet: undefined
 */
export function setPedResetFlag(ped, flagId, doReset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedResetFlag(_ped, flagId, doReset);
}
/**
 * Hash: 0x25ACFC650B65C538 | ApiSet: undefined
 */
export function setPedScale(ped, scale) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedScale(_ped, scale);
}
/**
 * Hash: 0xF29CF591C4BF6CEE | ApiSet: undefined
 */
export function setPedSeeingRange(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedSeeingRange(_ped, value);
}
/**
 * ```
 * 0.0 - 1.0
 * Modifies the "scent line" on the ped's body when using Eagle Eye.
 * ```
 * Hash: 0x01B21B81865E2A1F | ApiSet: undefined
 */
export function setPedScent(ped, scent) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedScent(_ped, scent);
}
/**
 * ```
 * Params: shootRate = 0 - 1000
 * ```
 * Hash: 0x614DA022990752DC | ApiSet: undefined
 */
export function setPedShootRate(ped, shootRate) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedShootRate(_ped, shootRate);
}
/**
 * Hash: 0xEC6935EBE0847B90 | ApiSet: undefined
 */
export function setPedShouldPlayDirectedNormalScenarioExit(ped, position) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedShouldPlayDirectedNormalScenarioExit(_ped, position.x, position.y, position.z);
}
/**
 * ```
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * ```
 * Hash: 0x802092B07E3B1EEA | ApiSet: undefined
 */
export function setPedShouldPlayCombatScenarioExit(ped, position, lookIntensity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedShouldPlayCombatScenarioExit(_ped, position.x, position.y, position.z, lookIntensity);
}
/**
 * ```
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * ```
 * Hash: 0x62FDAD5E01D2DD47 | ApiSet: undefined
 */
export function setPedShouldPlayEmotionalScenarioExit(ped, position, lookIntensity, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedShouldPlayEmotionalScenarioExit(_ped, position.x, position.y, position.z, lookIntensity, p5);
}
/**
 * ```
 * lookIntensity:
 * 0 - REACT_LOOK_NONE
 * 1 - REACT_LOOK_LOW
 * 2 - REACT_LOOK_MEDIUM
 * 3 - REACT_LOOK_HIGH
 * ```
 * Hash: 0xEEED8FAFEC331A70 | ApiSet: undefined
 */
export function setPedShouldPlayFleeScenarioExit(ped, position, lookIntensity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedShouldPlayFleeScenarioExit(_ped, position.x, position.y, position.z, lookIntensity);
}
/**
 * Hash: 0xF1C03A5352243A30 | ApiSet: undefined
 */
export function setPedShouldPlayImmediateScenarioExit(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedShouldPlayImmediateScenarioExit(_ped);
}
/**
 * Hash: 0xA3A9299C4F2ADB98 | ApiSet: undefined
 */
export function setPedShouldPlayNormalScenarioExit(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedShouldPlayNormalScenarioExit(_ped);
}
/**
 * ```
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * ```
 * Hash: 0x463803429297117C | ApiSet: undefined
 */
export function setPedShouldPlayQuickScenarioExit(ped, position, lookIntensity, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedShouldPlayQuickScenarioExit(_ped, position.x, position.y, position.z, lookIntensity, p5);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0x88CBB5CEB96B7BD2 | ApiSet: undefined
 */
export function setPedStealthMovement(ped, toggle, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedStealthMovement(_ped, toggle, p2, p3);
}
/**
 * Hash: 0x9D3151A373974804 | ApiSet: undefined
 */
export function setPedSphereDefensiveArea(ped, position, radius, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedSphereDefensiveArea(_ped, position.x, position.y, position.z, radius, p5, p6, p7);
}
/**
 * Hash: 0x27B0405F59637D1F | ApiSet: undefined
 */
export function setPedSweat(ped, sweat) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedSweat(_ped, sweat);
}
/**
 * ```
 * TLR_ExitTask = 0,
 * TLR_NeverLoseTarget,
 * TLR_SearchForTarget
 * ```
 * Hash: 0x0703B9079823DA4A | ApiSet: undefined
 */
export function setPedTargetLossResponse(ped, responseType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedTargetLossResponse(_ped, responseType);
}
/**
 * Hash: 0xC163DAC52AC975D3 | ApiSet: undefined
 */
export function setPedTargetActionDisableFlag(ped, actionDisableFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedTargetActionDisableFlag(_ped, actionDisableFlag);
}
/**
 * Hash: 0x36E4B61DC56DE77C | ApiSet: undefined
 */
export function setPedToBeRemoved(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedToBeRemoved(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x112942C6E708F70B | ApiSet: undefined
 */
export function setPedToInformRespectedFriends(ped, radius, maxFriends) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedToInformRespectedFriends(_ped, radius, maxFriends);
}
/**
 * Hash: 0x221F4D9912B7FE86 | ApiSet: undefined
 */
export function setPedToDisableRagdoll(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedToDisableRagdoll(_ped, toggle);
}
/**
 * ```
 * nmTaskMessageParameterName: See physicstasks.ymt. Search for DraggedByCart or 0xD00820D7 (Used in R* SP Script marston8)
 * ```
 * Hash: 0xAE99FB955581844A | ApiSet: undefined
 */
export function setPedToRagdoll(ped, timeMin, timeMax, ragdollType, abortIfInjured, abortIfDead, nmTaskMessageParameterName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedToRagdoll(_ped, timeMin, timeMax, ragdollType, abortIfInjured, abortIfDead, nmTaskMessageParameterName);
}
/**
 * ```
 * duration in seconds
 * ```
 * Hash: 0xA5950E16B8F31052 | ApiSet: undefined
 */
export function setPedTrailEffect(ped, p1, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedTrailEffect(_ped, p1, duration);
}
/**
 * Hash: 0xD77AE48611B7B10A | ApiSet: undefined
 */
export function setPedToPlayerWeaponDamageModifier(ped, damageModifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedToPlayerWeaponDamageModifier(_ped, damageModifier);
}
/**
 * Hash: 0xD76632D99E4966C8 | ApiSet: undefined
 */
export function setPedToRagdollWithFall(ped, timeMin, timeMax, ragdollType, falldirX, falldirY, falldirZ, p7, p8, p9, p10, p11, p12, p13) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedToRagdollWithFall(_ped, timeMin, timeMax, ragdollType, falldirX, falldirY, falldirZ, p7, p8, p9, p10, p11, p12, p13);
}
/**
 * Hash: 0xD75ACCF5E0FB5367 | ApiSet: undefined
 */
export function setPedUsingActionMode(ped, bActionModeEnabled, p2, action) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedUsingActionMode(_ped, bActionModeEnabled, p2, action);
}
/**
 * ```
 * Doesn't actually return anything.
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xEB72453B6F5B45B0 | ApiSet: undefined
 */
export function setPedUseHorseMapCollision(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedUseHorseMapCollision(_ped, toggle);
}
/**
 * Hash: 0x70793BDCA1E854D4 | ApiSet: undefined
 */
export function setPedVisualFieldMaxAngle(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedVisualFieldMaxAngle(_ped, value);
}
/**
 * Hash: 0x3B6405E8AB34A907 | ApiSet: undefined
 */
export function setPedVisualFieldCenterAngle(ped, angle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedVisualFieldCenterAngle(_ped, angle);
}
/**
 * Hash: 0x2DB492222FB21E26 | ApiSet: undefined
 */
export function setPedVisualFieldMinAngle(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedVisualFieldMinAngle(_ped, value);
}
/**
 * Hash: 0x9C74B0BC831B753A | ApiSet: undefined
 */
export function setPedVisualFieldPeripheralRange(ped, range) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedVisualFieldPeripheralRange(_ped, range);
}
/**
 * ```
 * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
 * ```
 * Hash: 0xB5485E4907B53019 | ApiSet: undefined
 */
export function setPedWetnessEnabledThisFrame(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedWetnessEnabledThisFrame(_ped);
}
/**
 * ```
 * _SET_PED_S* - _SET_PED_T*
 * ```
 * Hash: 0xD05AD61F242C626B | ApiSet: undefined
 */
export function setPedVoiceVolume(ped, volume) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedVoiceVolume(_ped, volume);
}
/**
 * ```
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 * ```
 * Hash: 0x44CB6447D2571AA0 | ApiSet: undefined
 */
export function setPedWetnessHeight(ped, height) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedWetnessHeight(_ped, height);
}
/**
 * Hash: 0x4DB9D03AC4E1FA84 | ApiSet: undefined
 */
export function setPedWrithingDuration(ped, writhingDuration1, writhingDuration2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedWrithingDuration(_ped, writhingDuration1, writhingDuration2, p3);
}
/**
 * Hash: 0xA73F50E8796150D5 | ApiSet: undefined
 */
export function setPeltForHorse(horse, peltId) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    SetPeltForHorse(_horse, peltId);
}
/**
 * Hash: 0x5708EDD71B50C008 | ApiSet: undefined
 */
export function setPlayerAntagonizeDisabledForPed(ped, player, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerAntagonizeDisabledForPed(_ped, _player, duration);
}
/**
 * ```
 * Animal Skin Quality Modifier
 * Params: p2 = 2, p3 = 3 in R* Scripts
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x9EFF3C91DF38304F | ApiSet: undefined
 */
export function setPlayerCurrentAnimalDamageModifier(player, modifier, p2, p3) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return SetPlayerCurrentAnimalDamageModifier(_player, modifier, p2, p3);
}
/**
 * Hash: 0x19173C3F15367B54 | ApiSet: undefined
 */
export function setPlayerGreetDisabledForPed(ped, player, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerGreetDisabledForPed(_ped, _player, duration);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
 * flags:
 * enum eRagdollBlockingFlags
 * {
 * RBF_BULLET_IMPACT = (1 << 0),
 * RBF_VEHICLE_IMPACT = (1 << 1),
 * RBF_FIRE = (1 << 2),
 * RBF_ELECTROCUTION = (1 << 3),
 * RBF_PLAYER_IMPACT = (1 << 4),
 * RBF_EXPLOSION = (1 << 5),
 * RBF_IMPACT_OBJECT = (1 << 6),
 * RBF_MELEE = (1 << 7),
 * RBF_RUBBER_BULLET = (1 << 8),
 * RBF_FALLING = (1 << 9),
 * RBF_WATER_JET = (1 << 10),
 * RBF_DROWNING = (1 << 11),
 * RBF_0x9F52E2C4 = (1 << 12),
 * RBF_PLAYER_BUMP = (1 << 13),
 * RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
 * RBF_PED_RAGDOLL_BUMP = (1 << 15),
 * RBF_VEHICLE_GRAB = (1 << 16),
 * RBF_SMOKE_GRENADE = (1 << 17),
 * RBF_HORSE_BUMP = (1 << 18),
 * RBF_ACTIVATE_ON_COLLISION = (1 << 19)
 * };
 * ```
 * Hash: 0x26695EC767728D84 | ApiSet: undefined
 */
export function setRagdollBlockingFlags(ped, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetRagdollBlockingFlags(_ped, flags);
}
/**
 * Hash: 0xD8C3BE3EE94CAF2D | ApiSet: undefined
 */
export function setPopControlSphereThisFrame(p0, p1, p2, p3, p4) {
    SetPopControlSphereThisFrame(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x283978A15512B2FE | ApiSet: undefined
 */
export function setRandomOutfitVariation(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetRandomOutfitVariation(_ped, p1);
}
/**
 * Hash: 0x39A2FC5AF55A52B1 | ApiSet: undefined
 */
export function setRemovePedNetworked(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetRemovePedNetworked(_ped, p1);
}
/**
 * Hash: 0xBF25EB89375A37AD | ApiSet: undefined
 */
export function setRelationshipBetweenGroups(relationship, group1, group2) {
    if (typeof group1 === 'string')
        group1 = this.getHashKey(group1);
    if (typeof group2 === 'string')
        group2 = this.getHashKey(group2);
    SetRelationshipBetweenGroups(relationship, group1, group2);
}
/**
 * Hash: 0xDB48E99F8E064E56 | ApiSet: undefined
 */
export function setScenarioAnimalDensityMultiplierThisFrame(multiplier) {
    SetScenarioAnimalDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0x28CB6391ACEDD9DB | ApiSet: undefined
 */
export function setScenarioHumanDensityMultiplierThisFrame(multiplier) {
    SetScenarioHumanDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0x7A556143A1C03898 | ApiSet: undefined
 */
export function setScenarioPedDensityMultiplierThisFrame(multiplier) {
    SetScenarioPedDensityMultiplierThisFrame(multiplier);
}
/**
 * ```
 * Sets the scenario ped density to the given config.
 * Valid configs:
 * - BLACKWATER
 * - DEFAULT
 * - NEWBORDEAUX
 * - RHODES
 * - STRAWBERRY
 * - TUMBLEWEED
 * - VALENTINE
 * - VANHORN
 * See common/data/ai/densityscoringconfigs.meta for more information.
 * ```
 * Hash: 0x95423627A9CA598E | ApiSet: undefined
 */
export function setScenarioPedDensityThisFrame(configHash) {
    if (typeof configHash === 'string')
        configHash = this.getHashKey(configHash);
    SetScenarioPedDensityThisFrame(configHash);
}
/**
 * Hash: 0xA77FA7BE9312F8C0 | ApiSet: undefined
 */
export function setScenarioPedRangeMultiplierThisFrame(multiplier) {
    SetScenarioPedRangeMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0x345C9F993A8AB4A4 | ApiSet: undefined
 */
export function setStaminaRechargeMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetStaminaRechargeMultiplier(_ped, multiplier);
}
/**
 * Hash: 0xEF5A3D2285D8924B | ApiSet: undefined
 */
export function setStaminaDepletionMultiplier(ped, multiplier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetStaminaDepletionMultiplier(_ped, multiplier);
}
/**
 * Hash: 0x6C76BC24F8BB709A | ApiSet: undefined
 */
export function setTextureLayerAlpha(textureId, layerId, texAlpha) {
    SetTextureLayerAlpha(textureId, layerId, texAlpha);
}
/**
 * ```
 * Size will be permanent
 * ```
 * Hash: 0x7FF72DE061DF55E2 | ApiSet: undefined
 */
export function setTankAttributeSize(ped, attributeIndex, size) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTankAttributeSize(_ped, attributeIndex, size);
}
/**
 * Hash: 0xF2EA041F1146D75B | ApiSet: undefined
 */
export function setTextureLayerMod(textureId, layerId, modTextureHash, modAlpha, modChannel) {
    if (typeof modTextureHash === 'string')
        modTextureHash = this.getHashKey(modTextureHash);
    SetTextureLayerMod(textureId, layerId, modTextureHash, modAlpha, modChannel);
}
/**
 * ```
 * paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
 * ```
 * Hash: 0x1ED8588524AC9BE1 | ApiSet: undefined
 */
export function setTextureLayerPallete(textureId, layerId, paletteHash) {
    if (typeof paletteHash === 'string')
        paletteHash = this.getHashKey(paletteHash);
    SetTextureLayerPallete(textureId, layerId, paletteHash);
}
/**
 * Hash: 0x057C4F092E2298BE | ApiSet: undefined
 */
export function setTextureLayerRoughness(textureId, layerId, texRough) {
    SetTextureLayerRoughness(textureId, layerId, texRough);
}
/**
 * Hash: 0x3329AAE2882FC8E4 | ApiSet: undefined
 */
export function setTextureLayerSheetGridIndex(textureId, layerId, sheetGridIndex) {
    SetTextureLayerSheetGridIndex(textureId, layerId, sheetGridIndex);
}
/**
 * Hash: 0x253A63B5BADBC398 | ApiSet: undefined
 */
export function setTextureLayerTextureMap(textureId, layerId, albedoHash, normalHash, materialHash) {
    if (typeof albedoHash === 'string')
        albedoHash = this.getHashKey(albedoHash);
    if (typeof normalHash === 'string')
        normalHash = this.getHashKey(normalHash);
    if (typeof materialHash === 'string')
        materialHash = this.getHashKey(materialHash);
    SetTextureLayerTextureMap(textureId, layerId, albedoHash, normalHash, materialHash);
}
/**
 * ```
 * Seem color is not RGB or HSV
 * ```
 * Hash: 0x2DF59FFE6FFD6044 | ApiSet: undefined
 */
export function setTextureLayerTint(textureId, layerId, tint0, tint1, tint2) {
    SetTextureLayerTint(textureId, layerId, tint0, tint1, tint2);
}
/**
 * ```
 * _SET_W(EAPON?)*
 * ```
 * Hash: 0x932786CE3C76477C | ApiSet: undefined
 */
export function setTotalPedDamageFalloffBonus(ped, bonus) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTotalPedDamageFalloffBonus(_ped, bonus);
}
/**
 * ```
 * Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
 * ```
 * Hash: 0x4EFC1F8FF1AD94DE | ApiSet: undefined
 */
export function setTextureOutfitTints(ped, componentCategory, palette, tint0, tint1, tint2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentCategory === 'string')
        componentCategory = this.getHashKey(componentCategory);
    if (typeof palette === 'string')
        palette = this.getHashKey(palette);
    SetTextureOutfitTints(_ped, componentCategory, palette, tint0, tint1, tint2);
}
/**
 * ```
 * _SET_W(EAPON?)*
 * ```
 * Hash: 0x73B6F907B913C860 | ApiSet: undefined
 */
export function setTotalPedDamageFromAi(ped, totalDamage) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTotalPedDamageFromAi(_ped, totalDamage);
}
/**
 * Hash: 0xFEE4A5459472A9F8 | ApiSet: undefined
 */
export function spawnpointsCancelSearch() {
    SpawnpointsCancelSearch();
}
/**
 * ```
 * Triggers a gunshot
 * Params: p5 = -1 in R* Scripts
 * ```
 * Hash: 0x4C57F27D1554E6B0 | ApiSet: undefined
 */
export function shootTriggerAtCoords(ped, position, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return ShootTriggerAtCoords(_ped, position.x, position.y, position.z, p4, p5, p6, p7);
}
/**
 * Hash: 0xA635C11B8C44AFC2 | ApiSet: undefined
 */
export function spawnpointsGetNumSearchResults() {
    return SpawnpointsGetNumSearchResults();
}
/**
 * Hash: 0xB782F8238512BAD5 | ApiSet: undefined
 */
export function spawnpointsGetSearchResultFlags(p0) {
    return SpawnpointsGetSearchResultFlags(p0);
}
/**
 * Hash: 0x280C7E3AC7F56E90 | ApiSet: undefined
 */
export function spawnpointsGetSearchResult(randomInt) {
    return SpawnpointsGetSearchResult(randomInt);
}
/**
 * Hash: 0xA586FBEB32A53DBB | ApiSet: undefined
 */
export function spawnpointsIsSearchComplete() {
    return SpawnpointsIsSearchComplete();
}
/**
 * Hash: 0x3C67506996001F5E | ApiSet: undefined
 */
export function spawnpointsIsSearchActive() {
    return SpawnpointsIsSearchActive();
}
/**
 * ```
 * Params: p4 = 35.f, duration = 5000 in R* Scripts
 * ```
 * Hash: 0x2DF9038C90AD5264 | ApiSet: undefined
 */
export function spawnpointsStartSearch(position, width, p4, spawnpointsFlag, p6, duration, p8) {
    SpawnpointsStartSearch(position.x, position.y, position.z, width, p4, spawnpointsFlag, p6, duration, p8);
}
/**
 * Hash: 0xF445DE8DA80A1792 | ApiSet: undefined
 */
export function spawnpointsIsSearchFailed() {
    return SpawnpointsIsSearchFailed();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x83ED1FC9DF3411F5 | ApiSet: undefined
 */
export function spawnpointsStartSearchWithVolume(volume, spawnpointsFlag, p2, duration, p4) {
    SpawnpointsStartSearchWithVolume(volume, spawnpointsFlag, p2, duration, p4);
}
/**
 * ```
 * Searching area between coords 1 and 2
 * ```
 * Hash: 0xB2AFF10216DEFA2F | ApiSet: undefined
 */
export function spawnpointsStartSearchInAngledArea(x1, y1, z1, x2, y2, z2, width, spawnpointsFlag, p8, duration, p10) {
    SpawnpointsStartSearchInAngledArea(x1, y1, z1, x2, y2, z2, width, spawnpointsFlag, p8, duration, p10);
}
/**
 * Hash: 0xF9ACF4A08098EA25 | ApiSet: undefined
 */
export function specialFunctionDoNotUse(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SpecialFunctionDoNotUse(_ped, p1);
}
/**
 * ```
 * Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
 * ```
 * Hash: 0x285D36C5C72B0569 | ApiSet: undefined
 */
export function timeSincePedLastShot(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TimeSincePedLastShot(_ped);
}
/**
 * ```
 * If toggle is true, when the ped is using a scenario he will stop it and become scared
 * If toggle is false, the ped will not be scared anymore and continue his scenario
 * ```
 * Hash: 0x9A77DFD295E29B09 | ApiSet: undefined
 */
export function toggleScenarioPedCowerInPlace(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ToggleScenarioPedCowerInPlace(_ped, toggle);
}
/**
 * Hash: 0x7D4E70A67A651C71 | ApiSet: undefined
 */
export function unreserveAmbientPeds(numPeds) {
    UnreserveAmbientPeds(numPeds);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0F9E754EBE8FDBFA | ApiSet: undefined
 */
export function updateAnimalDamageModifier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    UpdateAnimalDamageModifier(_player);
}
/**
 * ```
 * Should be called at least once for any new texture override.
 * Otherwise component textures will be just black.
 * Also needs to be called for updating any ped overlays to apply the changes.
 * ```
 * Hash: 0x92DAABA2C1C10B0E | ApiSet: undefined
 */
export function updatePedTexture(textureId) {
    UpdatePedTexture(textureId);
}
/**
 * ```
 * Params: 0.0f to remove wound effects
 * ```
 * Hash: 0x66B1CB778D911F49 | ApiSet: undefined
 */
export function updatePedWoundEffect(ped, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    UpdatePedWoundEffect(_ped, value);
}
/**
 * ```
 * Update variation on ped, needed after first creation, or when component or texture/overlay is changed
 * ```
 * Hash: 0xCC8CA3E88256E58F | ApiSet: undefined
 */
export function updatePedVariation(ped, p1, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    UpdatePedVariation(_ped, p1, p2, p3, p4, p5);
}
/**
 * ```
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 * ```
 * Hash: 0x11B499C1E0FF8559 | ApiSet: undefined
 */
export function wasPedSkeletonUpdated(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return WasPedSkeletonUpdated(_ped);
}
/**
 * Hash: 0x66B957AAC2EAAEAB | ApiSet: undefined
 */
export function updateShopItemWearableState(ped, componentHash, wearableState, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    if (typeof wearableState === 'string')
        wearableState = this.getHashKey(wearableState);
    UpdateShopItemWearableState(_ped, componentHash, wearableState, p3, p4, p5);
}
/**
 * Hash: 0xE0B61ED8BB37712F | ApiSet: undefined
 */
export function warpPedOutOfVehicle(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    WarpPedOutOfVehicle(_ped);
}
/**
 * Hash: 0x065887B694359799 | ApiSet: undefined
 */
export function _0x065887B694359799(p0) {
    Citizen.invokeNative('0x065887B694359799', p0);
}
/**
 * Hash: 0x1F56FB3FDB4EAF65 | ApiSet: undefined
 */
export function _0x1F56FB3FDB4EAF65(p0) {
    return Citizen.invokeNative('0x1F56FB3FDB4EAF65', p0);
}
/**
 * Hash: 0x291CC21D1FB6790E | ApiSet: undefined
 */
export function _0x291CC21D1FB6790E(p0) {
    Citizen.invokeNative('0x291CC21D1FB6790E', p0);
}
/**
 * Hash: 0x2E545965DF98D476 | ApiSet: undefined
 */
export function _0x2E545965DF98D476(p0) {
    return Citizen.invokeNative('0x2E545965DF98D476', p0);
}
/**
 * Hash: 0x5A79220F6D38D7C3 | ApiSet: undefined
 */
export function _0x5A79220F6D38D7C3(p0) {
    return Citizen.invokeNative('0x5A79220F6D38D7C3', p0);
}
/**
 * Hash: 0x3CA5E58C9731A16B | ApiSet: undefined
 */
export function _0x3CA5E58C9731A16B(p0, p1) {
    Citizen.invokeNative('0x3CA5E58C9731A16B', p0, p1);
}
/**
 * Hash: 0x8DE104BEC243A73B | ApiSet: undefined
 */
export function _0x8DE104BEC243A73B(p0) {
    Citizen.invokeNative('0x8DE104BEC243A73B', p0);
}
/**
 * ```
 * _PERSISTENCE_*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x66DAA3A9274E8E82 | ApiSet: undefined
 */
export function _0x66DAA3A9274E8E82() {
    Citizen.invokeNative('0x66DAA3A9274E8E82');
}
/**
 * Hash: 0x7A1BD123E5CDB6E5 | ApiSet: undefined
 */
export function _0x7A1BD123E5CDB6E5() {
    Citizen.invokeNative('0x7A1BD123E5CDB6E5');
}
/**
 * Hash: 0xBA2C49EA6A8D24FF | ApiSet: undefined
 */
export function _0xBA2C49EA6A8D24FF(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0xBA2C49EA6A8D24FF', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xB03140014ACA6C40 | ApiSet: undefined
 */
export function _0xB03140014ACA6C40(p0, p1) {
    Citizen.invokeNative('0xB03140014ACA6C40', p0, p1);
}
/**
 * Hash: 0xCFDA2518F322D836 | ApiSet: undefined
 */
export function _0xCFDA2518F322D836(p0) {
    return Citizen.invokeNative('0xCFDA2518F322D836', p0);
}
/**
 * Hash: 0xE225CEF1901F6108 | ApiSet: undefined
 */
export function _0xE225CEF1901F6108(p0, p1) {
    Citizen.invokeNative('0xE225CEF1901F6108', p0, p1);
}
/**
 * Hash: 0xDC0A1F0ECEC9F0C0 | ApiSet: undefined
 */
export function _0xDC0A1F0ECEC9F0C0(p0, p1) {
    Citizen.invokeNative('0xDC0A1F0ECEC9F0C0', p0, p1);
}
/**
 * Hash: 0xF5622FA6ACFCA7DB | ApiSet: undefined
 */
export function _0xF5622FA6ACFCA7DB(p0, p1) {
    Citizen.invokeNative('0xF5622FA6ACFCA7DB', p0, p1);
}
/**
 * Hash: 0x8245C1F3262F4AC2 | ApiSet: undefined
 */
export function persistenceAddScenarioLooted(scenario) {
    PersistenceAddScenarioLooted(scenario);
}
/**
 * Hash: 0xFB7CF1DE938A3E22 | ApiSet: undefined
 */
export function persistenceIsScenarioMarkedAsLooted(scenario) {
    return PersistenceIsScenarioMarkedAsLooted(scenario);
}
/**
 * Hash: 0xFC9806DA9A460093 | ApiSet: undefined
 */
export function _0xFC9806DA9A460093(x1, y1, z1, x2, y2, z2) {
    Citizen.invokeNative('0xFC9806DA9A460093', x1, y1, z1, x2, y2, z2);
}
/**
 * Hash: 0xB6E1A185C2B9319A | ApiSet: undefined
 */
export function persistenceIsScenarioMarkedAsLootedAtCoords(position) {
    return PersistenceIsScenarioMarkedAsLootedAtCoords(position.x, position.y, position.z);
}
/**
 * Hash: 0x188313616D184213 | ApiSet: undefined
 */
export function persistenceIsScenarioMarkedAsLootedAtCoordsWithModel(position, model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return PersistenceIsScenarioMarkedAsLootedAtCoordsWithModel(position.x, position.y, position.z, model);
}
/**
 * ```
 * Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
 * ```
 * Hash: 0xEFB5F34CC0953B27 | ApiSet: undefined
 */
export function persistenceRefreshTownVolume(volume) {
    PersistenceRefreshTownVolume(volume);
}
/**
 * Hash: 0x9D16896F0DBE78A2 | ApiSet: undefined
 */
export function persistenceRemoveAllEntitiesInArea(position, radius) {
    PersistenceRemoveAllEntitiesInArea(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x710311ADF0E20730 | ApiSet: undefined
 */
export function activatePhysics(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ActivatePhysics(_entity);
}
/**
 * ```
 * There are 19 types of rope, from type = 0 to type = 18
 * Rope definitions are stored in ropedata.xml
 * Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
 * ```
 * Hash: 0xE832D760399EB220 | ApiSet: undefined
 */
export function addRope(position, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, p10, p11, p12, rigid, p14, breakWhenShot, p17) {
    return AddRope(position.x, position.y, position.z, rotX, rotY, rotZ, length, ropeType, maxLength, minLength, p10, p11, p12, rigid, p14, breakWhenShot, p17);
}
/**
 * Hash: 0xE9CD9A67834985A7 | ApiSet: undefined
 */
export function attachEntitesToRope3(ropeId, entity1, entity2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    AttachEntitesToRope3(ropeId, _entity1, _entity2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0xE9C59F6809373A99 | ApiSet: undefined
 */
export function addRope2(position, rotX, rotY, rotZ, length, ropeType, isNetworked, p9, p10) {
    return AddRope2(position.x, position.y, position.z, rotX, rotY, rotZ, length, ropeType, isNetworked, p9, p10);
}
/**
 * ```
 * Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
 * ```
 * Hash: 0x462FF2A432733A44 | ApiSet: undefined
 */
export function attachEntitiesToRope2(ropeId, entity1, entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, boneName1, boneName2) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    AttachEntitiesToRope2(ropeId, _entity1, _entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, boneName1, boneName2);
}
/**
 * ```
 * Attaches entity 1 to entity 2.
 * If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
 * ```
 * Hash: 0x3D95EC8B6D940AC3 | ApiSet: undefined
 */
export function attachEntitiesToRope(ropeId, entity1, entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, length, alwaysZero1, alwaysZero2, boneName1, boneName2, p14, boneId1, boneId2, alwaysZero3, alwaysZero4, p19, p20) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    AttachEntitiesToRope(ropeId, _entity1, _entity2, ent1X, ent1Y, ent1Z, ent2X, ent2Y, ent2Z, length, alwaysZero1, alwaysZero2, boneName1, boneName2, p14, boneId1, boneId2, alwaysZero3, alwaysZero4, p19, p20);
}
/**
 * ```
 * ropeTop returns top half of rope, ropeBottom returns bottom half of rope
 * ```
 * Hash: 0x4CFA2B7FAE115ECB | ApiSet: undefined
 */
export function breakRope(offsetX, offsetY, offsetZ, p6) {
    return BreakRope(offsetX, offsetY, offsetZ, p6);
}
/**
 * Hash: 0x2E648D16F6E308F3 | ApiSet: undefined
 */
export function breakEntityGlass(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    BreakEntityGlass(_entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * Combining this with ADD_ROPE enables winding
 * p1: mostly empty (0)
 * ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
 * _CREATE_*
 * ```
 * Hash: 0x3C6490D940FF5D0B | ApiSet: undefined
 */
export function createRopeWindingAbility(ropeId, p1, ropeModelType, length, p4) {
    CreateRopeWindingAbility(ropeId, p1, ropeModelType, length, p4);
}
/**
 * Hash: 0xAA5D6B1888E4DB20 | ApiSet: undefined
 */
export function deleteChildRope(ropeId) {
    DeleteChildRope(ropeId);
}
/**
 * Hash: 0x52B4829281364649 | ApiSet: undefined
 */
export function deleteRope(ropeId) {
    DeleteRope(ropeId);
}
/**
 * Hash: 0xBCF3026912A8647D | ApiSet: undefined
 */
export function detachRopeFromEntity(ropeId, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DetachRopeFromEntity(ropeId, _entity);
}
/**
 * Hash: 0xFD5448BE3111ED96 | ApiSet: undefined
 */
export function doesRopeExist(ropeId) {
    return DoesRopeExist(ropeId);
}
/**
 * Hash: 0x21BB0FBD3E217C2D | ApiSet: undefined
 */
export function getRopeLastVertexCoord(ropeId) {
    return new Vector3(GetRopeLastVertexCoord(ropeId));
}
/**
 * Hash: 0xEA61CA8E80F09E4D | ApiSet: undefined
 */
export function getRopeVertexCoord(ropeId, vertex) {
    return new Vector3(GetRopeVertexCoord(ropeId, vertex));
}
/**
 * Hash: 0x3655F544CD30F0B5 | ApiSet: undefined
 */
export function getRopeVertexCount(ropeId) {
    return GetRopeVertexCount(ropeId);
}
/**
 * Hash: 0x9B4F7E3E4F9C77B3 | ApiSet: undefined
 */
export function isRopeAttachedToEntity(ropeId, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsRopeAttachedToEntity(ropeId, _entity);
}
/**
 * Hash: 0x06AADE17334F7A40 | ApiSet: undefined
 */
export function hitchHorse(horse, position) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    HitchHorse(_horse, position.x, position.y, position.z);
}
/**
 * Hash: 0x0CB16D05E03FB525 | ApiSet: undefined
 */
export function _0x0CB16D05E03FB525(p0) {
    Citizen.invokeNative('0x0CB16D05E03FB525', p0);
}
/**
 * Hash: 0x79C2BEC82CFD7F7F | ApiSet: undefined
 */
export function isRopeBroken(ropeId) {
    return IsRopeBroken(ropeId);
}
/**
 * Hash: 0x1FC92BDBA1106BD2 | ApiSet: undefined
 */
export function _0x1FC92BDBA1106BD2(ropeId, p1) {
    Citizen.invokeNative('0x1FC92BDBA1106BD2', ropeId, p1);
}
/**
 * Hash: 0x31160EC47E7C9549 | ApiSet: undefined
 */
export function _0x31160EC47E7C9549(p0, p1) {
    Citizen.invokeNative('0x31160EC47E7C9549', p0, p1);
}
/**
 * Hash: 0x3900491C0D61ED4B | ApiSet: undefined
 */
export function _0x3900491C0D61ED4B(p0, p1) {
    Citizen.invokeNative('0x3900491C0D61ED4B', p0, p1);
}
/**
 * Hash: 0x1D97DA8ACB5D2582 | ApiSet: undefined
 */
export function _0x1D97DA8ACB5D2582(ropeId, p1) {
    Citizen.invokeNative('0x1D97DA8ACB5D2582', ropeId, p1);
}
/**
 * Hash: 0x423C6B1F3786D28B | ApiSet: undefined
 */
export function _0x423C6B1F3786D28B(p0, p1) {
    Citizen.invokeNative('0x423C6B1F3786D28B', p0, p1);
}
/**
 * Hash: 0x21D0890D88DFB0B0 | ApiSet: undefined
 */
export function _0x21D0890D88DFB0B0(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    Citizen.invokeNative('0x21D0890D88DFB0B0', ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x32F4DBFDFCCCC735 | ApiSet: undefined
 */
export function _0x32F4DBFDFCCCC735(p0, p1, p2) {
    Citizen.invokeNative('0x32F4DBFDFCCCC735', p0, p1, p2);
}
/**
 * Hash: 0x5A989B7EE3672A56 | ApiSet: undefined
 */
export function _0x5A989B7EE3672A56(p0, p1) {
    Citizen.invokeNative('0x5A989B7EE3672A56', p0, p1);
}
/**
 * Hash: 0x5E981C764DF33117 | ApiSet: undefined
 */
export function _0x5E981C764DF33117(p0, p1) {
    Citizen.invokeNative('0x5E981C764DF33117', p0, p1);
}
/**
 * Hash: 0x461FCBDEB4D06717 | ApiSet: undefined
 */
export function _0x461FCBDEB4D06717(ropeId, p1) {
    Citizen.invokeNative('0x461FCBDEB4D06717', ropeId, p1);
}
/**
 * Hash: 0x483D4E917B0D35A9 | ApiSet: undefined
 */
export function _0x483D4E917B0D35A9(p0, p1) {
    Citizen.invokeNative('0x483D4E917B0D35A9', p0, p1);
}
/**
 * Hash: 0x69C810B72291D831 | ApiSet: undefined
 */
export function _0x69C810B72291D831(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0x69C810B72291D831', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x522FA3F490E2F7AC | ApiSet: undefined
 */
export function _0x522FA3F490E2F7AC(ropeId, p1, p2) {
    Citizen.invokeNative('0x522FA3F490E2F7AC', ropeId, p1, p2);
}
/**
 * Hash: 0x5BD7457221CC5FF4 | ApiSet: undefined
 */
export function _0x5BD7457221CC5FF4(p0, p1) {
    Citizen.invokeNative('0x5BD7457221CC5FF4', p0, p1);
}
/**
 * Hash: 0x6EA0E93CFFA472CC | ApiSet: undefined
 */
export function _0x6EA0E93CFFA472CC(p0) {
    Citizen.invokeNative('0x6EA0E93CFFA472CC', p0);
}
/**
 * Hash: 0x76BAD9D538BCA1AA | ApiSet: undefined
 */
export function _0x76BAD9D538BCA1AA(ropeId, p1) {
    Citizen.invokeNative('0x76BAD9D538BCA1AA', ropeId, p1);
}
/**
 * ```
 * _ROPE_SET_*
 * ```
 * Hash: 0x8D59079C37C21D78 | ApiSet: undefined
 */
export function _0x8D59079C37C21D78(ropeId, p1) {
    Citizen.invokeNative('0x8D59079C37C21D78', ropeId, p1);
}
/**
 * Hash: 0x751DF00EEFF122E3 | ApiSet: undefined
 */
export function _0x751DF00EEFF122E3(p0) {
    Citizen.invokeNative('0x751DF00EEFF122E3', p0);
}
/**
 * Hash: 0x9C24846D0A4A2776 | ApiSet: undefined
 */
export function _0x9C24846D0A4A2776(p0) {
    Citizen.invokeNative('0x9C24846D0A4A2776', p0);
}
/**
 * Hash: 0x814D453FCFDF119F | ApiSet: undefined
 */
export function _0x814D453FCFDF119F(p0, p1, p2) {
    Citizen.invokeNative('0x814D453FCFDF119F', p0, p1, p2);
}
/**
 * Hash: 0xB40EA9E0D2E2F7F3 | ApiSet: undefined
 */
export function _0xB40EA9E0D2E2F7F3(ropeId, p1) {
    Citizen.invokeNative('0xB40EA9E0D2E2F7F3', ropeId, p1);
}
/**
 * Hash: 0x8EEDFD8921389928 | ApiSet: undefined
 */
export function _0x8EEDFD8921389928(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    Citizen.invokeNative('0x8EEDFD8921389928', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0xB7469CB9AC3C0FD4 | ApiSet: undefined
 */
export function _0xB7469CB9AC3C0FD4(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0xB7469CB9AC3C0FD4', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xBDDA142759307528 | ApiSet: undefined
 */
export function _0xBDDA142759307528(p0) {
    Citizen.invokeNative('0xBDDA142759307528', p0);
}
/**
 * Hash: 0xBB3E9B073E66C3C9 | ApiSet: undefined
 */
export function _0xBB3E9B073E66C3C9(ropeId, p1, p2, p3, p4) {
    Citizen.invokeNative('0xBB3E9B073E66C3C9', ropeId, p1, p2, p3, p4);
}
/**
 * Hash: 0xC64E7A62632AD2FE | ApiSet: undefined
 */
export function _0xC64E7A62632AD2FE(ropeId, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0xC64E7A62632AD2FE', ropeId, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xD699E688B49C0FD2 | ApiSet: undefined
 */
export function _0xD699E688B49C0FD2(ropeId, p1, p2, p3, p4) {
    Citizen.invokeNative('0xD699E688B49C0FD2', ropeId, p1, p2, p3, p4);
}
/**
 * Hash: 0xC89E7410A93AC19A | ApiSet: undefined
 */
export function _0xC89E7410A93AC19A(ropeId, p1) {
    Citizen.invokeNative('0xC89E7410A93AC19A', ropeId, p1);
}
/**
 * Hash: 0xE54BF2CE6C7D23A9 | ApiSet: undefined
 */
export function _0xE54BF2CE6C7D23A9(ropeId, p1, position) {
    Citizen.invokeNative('0xE54BF2CE6C7D23A9', ropeId, p1, position.x, position.y, position.z);
}
/**
 * Hash: 0xDEDE679ED29DD4E7 | ApiSet: undefined
 */
export function _0xDEDE679ED29DD4E7(ropeId, p1) {
    Citizen.invokeNative('0xDEDE679ED29DD4E7', ropeId, p1);
}
/**
 * Hash: 0xEAF529446488EB18 | ApiSet: undefined
 */
export function _0xEAF529446488EB18(p0) {
    Citizen.invokeNative('0xEAF529446488EB18', p0);
}
/**
 * Hash: 0xF1EA2A881EB7F2CD | ApiSet: undefined
 */
export function _0xF1EA2A881EB7F2CD(ropeId, p1) {
    Citizen.invokeNative('0xF1EA2A881EB7F2CD', ropeId, p1);
}
/**
 * Hash: 0xF27F1A8DE4F50A1B | ApiSet: undefined
 */
export function _0xF27F1A8DE4F50A1B(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0xF27F1A8DE4F50A1B', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xFB9153A54AC713E8 | ApiSet: undefined
 */
export function _0xFB9153A54AC713E8(ropeId, p1) {
    Citizen.invokeNative('0xFB9153A54AC713E8', ropeId, p1);
}
/**
 * Hash: 0xF8CA39D5C0D1D9A1 | ApiSet: undefined
 */
export function _0xF8CA39D5C0D1D9A1(p0, p1) {
    Citizen.invokeNative('0xF8CA39D5C0D1D9A1', p0, p1);
}
/**
 * Hash: 0x6076213101A47B3B | ApiSet: undefined
 */
export function releaseRope(ropeId) {
    ReleaseRope(ropeId);
}
/**
 * Hash: 0x7A54D82227A139DB | ApiSet: undefined
 */
export function ropeChangeVisibility(visible) {
    return RopeChangeVisibility(visible);
}
/**
 * Hash: 0xF159A63806BB5BA8 | ApiSet: undefined
 */
export function ropeDrawShadowEnabled(toggle) {
    return RopeDrawShadowEnabled(toggle);
}
/**
 * ```
 * Forces a rope to a certain length.
 * ```
 * Hash: 0xD009F759A723DB1B | ApiSet: undefined
 */
export function ropeForceLength(ropeId, length) {
    RopeForceLength(ropeId, length);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xEE360CFC80C8B2BC | ApiSet: undefined
 */
export function ropeGetBreakerOfRope(ropeId) {
    return RopeGetBreakerOfRope(ropeId);
}
/**
 * Hash: 0x3D69537039F8D824 | ApiSet: undefined
 */
export function ropeGetForcedLength(ropeId) {
    return RopeGetForcedLength(ropeId);
}
/**
 * Hash: 0xDC57A637A20006ED | ApiSet: undefined
 */
export function ropeSetUpdateOrder(ropeId, p1) {
    RopeSetUpdateOrder(ropeId, p1);
}
/**
 * Hash: 0xEEA3B200A6FEB65B | ApiSet: undefined
 */
export function setDamping(entity, vertex, value) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetDamping(_entity, vertex, value);
}
/**
 * Hash: 0x01BA3AED21C16CFB | ApiSet: undefined
 */
export function setDisableFragDamage(object, toggle) {
    SetDisableFragDamage(object, toggle);
}
/**
 * Hash: 0x5CEC1A84620E7D5B | ApiSet: undefined
 */
export function setDisableBreaking(object, toggle) {
    SetDisableBreaking(object, toggle);
}
/**
 * Hash: 0x00F611A794A3C36E | ApiSet: undefined
 */
export function startRopeUnwindingBack(ropeId) {
    StartRopeUnwindingBack(ropeId);
}
/**
 * Hash: 0x1461C72C889E343E | ApiSet: undefined
 */
export function startRopeWinding(ropeId) {
    StartRopeWinding(ropeId);
}
/**
 * Hash: 0x10DAA76CB8A201A1 | ApiSet: undefined
 */
export function stopRopeUnwindingBack(ropeId) {
    StopRopeUnwindingBack(ropeId);
}
/**
 * Hash: 0xCB2D4AB84A19AA7C | ApiSet: undefined
 */
export function stopRopeWinding(ropeId) {
    StopRopeWinding(ropeId);
}
/**
 * Hash: 0x538D1179EC1AA9A9 | ApiSet: undefined
 */
export function startRopeUnwindingFront(ropeId) {
    StartRopeUnwindingFront(ropeId);
}
/**
 * Hash: 0xFFF3A50779EFBBB3 | ApiSet: undefined
 */
export function stopRopeUnwindingFront(ropeId) {
    StopRopeUnwindingFront(ropeId);
}
/**
 * Hash: 0x0348469DAA17576C | ApiSet: undefined
 */
export function unhitchHorse(horse) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    UnhitchHorse(_horse);
}
/**
 * Hash: 0xC06CFF658B2E51DA | ApiSet: undefined
 */
export function _0xC06CFF658B2E51DA(p0, p1, p2) {
    return Citizen.invokeNative('0xC06CFF658B2E51DA', p0, p1, p2);
}
/**
 * Hash: 0xC084FF658B2E52DA | ApiSet: undefined
 */
export function _0xC084FF658B2E52DA(p0) {
    return Citizen.invokeNative('0xC084FF658B2E52DA', p0);
}
/**
 * Hash: 0xC07CFF658B2E51DA | ApiSet: undefined
 */
export function _0xC07CFF658B2E51DA(p0, p1) {
    return Citizen.invokeNative('0xC07CFF658B2E51DA', p0, p1);
}
/**
 * Hash: 0xC084FF658B2E55DA | ApiSet: undefined
 */
export function _0xC084FF658B2E55DA(p0, p1) {
    return Citizen.invokeNative('0xC084FF658B2E55DA', p0, p1);
}
/**
 * Hash: 0xC084FF658B2E53DA | ApiSet: undefined
 */
export function _0xC084FF658B2E53DA() {
    return Citizen.invokeNative('0xC084FF658B2E53DA');
}
/**
 * Hash: 0xC084FF658B2E71DA | ApiSet: undefined
 */
export function _0xC084FF658B2E71DA(p0, p1, p2) {
    return Citizen.invokeNative('0xC084FF658B2E71DA', p0, p1, p2);
}
/**
 * Hash: 0xC084FF658B2E54DA | ApiSet: undefined
 */
export function _0xC084FF658B2E54DA(p0) {
    return Citizen.invokeNative('0xC084FF658B2E54DA', p0);
}
/**
 * Hash: 0xC086FF658B2E51DA | ApiSet: undefined
 */
export function _0xC086FF658B2E51DA(p0) {
    return Citizen.invokeNative('0xC086FF658B2E51DA', p0);
}
/**
 * Hash: 0xC084FF658B2E61DA | ApiSet: undefined
 */
export function _0xC084FF658B2E61DA(p0) {
    return Citizen.invokeNative('0xC084FF658B2E61DA', p0);
}
/**
 * Hash: 0xC087FF658B2E51DA | ApiSet: undefined
 */
export function _0xC087FF658B2E51DA(p0, p1) {
    return Citizen.invokeNative('0xC087FF658B2E51DA', p0, p1);
}
/**
 * Hash: 0xC084FF658B2E81DA | ApiSet: undefined
 */
export function _0xC084FF658B2E81DA(p0, p1, p2) {
    return Citizen.invokeNative('0xC084FF658B2E81DA', p0, p1, p2);
}
/**
 * Hash: 0xC086FF658B2E51DB | ApiSet: undefined
 */
export function _0xC086FF658B2E51DB() {
    return Citizen.invokeNative('0xC086FF658B2E51DB');
}
/**
 * Hash: 0xC08AFF658B2E51DA | ApiSet: undefined
 */
export function _0xC08AFF658B2E51DA(p0) {
    Citizen.invokeNative('0xC08AFF658B2E51DA', p0);
}
/**
 * Hash: 0xC089FF658B2E51DA | ApiSet: undefined
 */
export function _0xC089FF658B2E51DA(p0, p1) {
    return Citizen.invokeNative('0xC089FF658B2E51DA', p0, p1);
}
/**
 * Hash: 0xC08AFF658B2E51DB | ApiSet: undefined
 */
export function _0xC08AFF658B2E51DB(p0) {
    Citizen.invokeNative('0xC08AFF658B2E51DB', p0);
}
/**
 * Hash: 0xC08BFF658B2E51DA | ApiSet: undefined
 */
export function _0xC08BFF658B2E51DA(p0) {
    return Citizen.invokeNative('0xC08BFF658B2E51DA', p0);
}
/**
 * Hash: 0xC08CFF658B2E51DA | ApiSet: undefined
 */
export function _0xC08CFF658B2E51DA(p0, p1) {
    return Citizen.invokeNative('0xC08CFF658B2E51DA', p0, p1);
}
/**
 * Hash: 0xC08DEF658B2E51DA | ApiSet: undefined
 */
export function _0xC08DEF658B2E51DA(p0) {
    return Citizen.invokeNative('0xC08DEF658B2E51DA', p0);
}
/**
 * Hash: 0xC08DFF658B2E51DA | ApiSet: undefined
 */
export function _0xC08DFF658B2E51DA() {
    return Citizen.invokeNative('0xC08DFF658B2E51DA');
}
/**
 * Hash: 0xC08DFF658B2E51DB | ApiSet: undefined
 */
export function _0xC08DFF658B2E51DB(p0) {
    return Citizen.invokeNative('0xC08DFF658B2E51DB', p0);
}
/**
 * Hash: 0xC08FFF658B2E51DA | ApiSet: undefined
 */
export function _0xC08FFF658B2E51DA() {
    return Citizen.invokeNative('0xC08FFF658B2E51DA');
}
/**
 * Hash: 0xC08EFF658B2E51DB | ApiSet: undefined
 */
export function _0xC08EFF658B2E51DB(p0, p1) {
    return Citizen.invokeNative('0xC08EFF658B2E51DB', p0, p1);
}
/**
 * Hash: 0xC08FFF658B2E51DB | ApiSet: undefined
 */
export function _0xC08FFF658B2E51DB(p0) {
    return Citizen.invokeNative('0xC08FFF658B2E51DB', p0);
}
/**
 * Hash: 0xC184FF658B2E55DA | ApiSet: undefined
 */
export function _0xC184FF658B2E55DA(p0, p1) {
    return Citizen.invokeNative('0xC184FF658B2E55DA', p0, p1);
}
/**
 * Hash: 0xC09CFF658B2E51DA | ApiSet: undefined
 */
export function _0xC09CFF658B2E51DA(p0, p1, p2) {
    return Citizen.invokeNative('0xC09CFF658B2E51DA', p0, p1, p2);
}
/**
 * Hash: 0xC394FF658B2E55DA | ApiSet: undefined
 */
export function _0xC394FF658B2E55DA(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xC394FF658B2E55DA', p0, p1, p2, p3);
}
/**
 * Hash: 0xC584FF658B2E55DA | ApiSet: undefined
 */
export function _0xC584FF658B2E55DA(p0) {
    Citizen.invokeNative('0xC584FF658B2E55DA', p0);
}
/**
 * Hash: 0xC284FF658B2E55DA | ApiSet: undefined
 */
export function _0xC284FF658B2E55DA(p0, p1, p2) {
    return Citizen.invokeNative('0xC284FF658B2E55DA', p0, p1, p2);
}
/**
 * Hash: 0xC088FF658B2E51DA | ApiSet: undefined
 */
export function posseGetPosseMembershipCount() {
    return PosseGetPosseMembershipCount();
}
/**
 * Hash: 0xC484FF658B2E55DA | ApiSet: undefined
 */
export function _0xC484FF658B2E55DA(p0) {
    Citizen.invokeNative('0xC484FF658B2E55DA', p0);
}
/**
 * Hash: 0xC684FF658B2E55DA | ApiSet: undefined
 */
export function _0xC684FF658B2E55DA(p0) {
    Citizen.invokeNative('0xC684FF658B2E55DA', p0);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
 * ```
 * Hash: 0x75F90E4051CC084C | ApiSet: undefined
 */
export function addAdditionalPropSetForVehicle(vehicle, propset) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof propset === 'string')
        propset = this.getHashKey(propset);
    AddAdditionalPropSetForVehicle(_vehicle, propset);
}
/**
 * ```
 * List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
 * ```
 * Hash: 0xD80FAF919A2E56EA | ApiSet: undefined
 */
export function addPropSetForVehicle(vehicle, propset) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof propset === 'string')
        propset = this.getHashKey(propset);
    AddPropSetForVehicle(_vehicle, propset);
}
/**
 * ```
 * To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
 * 0xA6A9712955F53D9C returns lightPropset Hashes
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
 * ```
 * Hash: 0xC0F0417A90402742 | ApiSet: undefined
 */
export function addLightPropSetToVehicle(vehicle, lightPropset) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof lightPropset === 'string')
        lightPropset = this.getHashKey(lightPropset);
    AddLightPropSetToVehicle(_vehicle, lightPropset);
}
/**
 * ```
 * propsetType: https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
 * placementType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PlacementType
 * ```
 * Hash: 0xE65C5CBA95F0E510 | ApiSet: undefined
 */
export function createPropSet(propsetType, position, placementType, heading, zProbe, p7, useVegMod) {
    if (typeof propsetType === 'string')
        propsetType = this.getHashKey(propsetType);
    return CreatePropSet(propsetType, position.x, position.y, position.z, placementType, heading, zProbe, p7, useVegMod);
}
/**
 * ```
 * Same as _CREATE_PROP_SET
 * ```
 * Hash: 0x899C97A1CCE7D483 | ApiSet: undefined
 */
export function createPropSet2(propsetType, position, placementType, heading, zProbe, p7, useVegMod) {
    if (typeof propsetType === 'string')
        propsetType = this.getHashKey(propsetType);
    return CreatePropSet2(propsetType, position.x, position.y, position.z, placementType, heading, zProbe, p7, useVegMod);
}
/**
 * Hash: 0x9609DBDDE18FAD8C | ApiSet: undefined
 */
export function createPropSetInstanceAttachedToEntity(hash, position, entity, p5, p6, p7, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return CreatePropSetInstanceAttachedToEntity(hash, position.x, position.y, position.z, _entity, p5, p6, p7, p8);
}
/**
 * Hash: 0x7DDDCF815E650FF5 | ApiSet: undefined
 */
export function doesPropSetExist(propSet) {
    return DoesPropSetExist(propSet);
}
/**
 * ```
 * Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
 * ```
 * Hash: 0xACA7FB30269096D4 | ApiSet: undefined
 */
export function createPropSetInstanceAttachedToEntity2(hash, position, entity, p5, p6, p7, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return CreatePropSetInstanceAttachedToEntity2(hash, position.x, position.y, position.z, _entity, p5, p6, p7, p8);
}
/**
 * Hash: 0xC9B4B3A36F81FD75 | ApiSet: undefined
 */
export function doesVehicleHaveAnyLightPropSet(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return DoesVehicleHaveAnyLightPropSet(_vehicle);
}
/**
 * Hash: 0x58AC173A55D9D7B4 | ApiSet: undefined
 */
export function deletePropSet(propSet, p1, p2) {
    DeletePropSet(propSet, p1, p2);
}
/**
 * Hash: 0x72068021F498E6E3 | ApiSet: undefined
 */
export function doesPropSetOfTypeExistNearCoords(propsetHash, position) {
    if (typeof propsetHash === 'string')
        propsetHash = this.getHashKey(propsetHash);
    return DoesPropSetOfTypeExistNearCoords(propsetHash, position.x, position.y, position.z);
}
/**
 * Hash: 0x53784CEA0159439B | ApiSet: undefined
 */
export function doesVehicleHaveAnyPropSet(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return DoesVehicleHaveAnyPropSet(_vehicle);
}
/**
 * Hash: 0x738271B660FE0695 | ApiSet: undefined
 */
export function getEntitiesFromPropSet(propSet, itemSet, model, p3, p4) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return GetEntitiesFromPropSet(propSet, itemSet, model, p3, p4);
}
/**
 * Hash: 0xA6A9712955F53D9C | ApiSet: undefined
 */
export function getPropSetModel(propSet) {
    return GetPropSetModel(propSet);
}
/**
 * Hash: 0xC061E50F8D299F95 | ApiSet: undefined
 */
export function getPropSetAtCoords(propsetHash, position) {
    if (typeof propsetHash === 'string')
        propsetHash = this.getHashKey(propsetHash);
    return GetPropSetAtCoords(propsetHash, position.x, position.y, position.z);
}
/**
 * ```
 * Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
 * ```
 * Hash: 0xCFC0BD09BB1B73FF | ApiSet: undefined
 */
export function getTrainCarriagePropSet(trainCarriage) {
    const _trainCarriage = trainCarriage instanceof Entity ? trainCarriage.handle() : trainCarriage;
    return GetTrainCarriagePropSet(_trainCarriage);
}
/**
 * ```
 * Returns PropSet handle to be used with _GET_PROP_SET_MODEL
 * ```
 * Hash: 0xA079300AF757FB1A | ApiSet: undefined
 */
export function getVehicleLightPropSet(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleLightPropSet(_vehicle);
}
/**
 * Hash: 0x36F69E7A22655653 | ApiSet: undefined
 */
export function getVehiclePropSetHash(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehiclePropSetHash(_vehicle);
}
/**
 * Hash: 0xCE2ACD6F602803E5 | ApiSet: undefined
 */
export function getVehiclePropSet(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehiclePropSet(_vehicle);
}
/**
 * ```
 * Same as _HAS_PROP_SET_LOADED
 * ```
 * Hash: 0xD090ABEF4D6A7D96 | ApiSet: undefined
 */
export function hasPropSetLoaded2(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return HasPropSetLoaded2(hash);
}
/**
 * Hash: 0x48A88FC684C55FDC | ApiSet: undefined
 */
export function hasPropSetLoaded(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return HasPropSetLoaded(hash);
}
/**
 * Hash: 0x8F3333F0A6900B3C | ApiSet: undefined
 */
export function hasVehicleTrailerPropSetLoaded(vehicle, wagonIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return HasVehicleTrailerPropSetLoaded(_vehicle, wagonIndex);
}
/**
 * Hash: 0xF42DB680A8B2A4D9 | ApiSet: undefined
 */
export function isPropSetFullyLoaded(propSet) {
    return IsPropSetFullyLoaded(propSet);
}
/**
 * Hash: 0x0CE8AAFE9E433A23 | ApiSet: undefined
 */
export function isPropSetVisible(propSet) {
    return IsPropSetVisible(propSet);
}
/**
 * Hash: 0x0790473EEE1977D3 | ApiSet: undefined
 */
export function isVehicleLightPropSetLoaded(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleLightPropSetLoaded(_vehicle);
}
/**
 * Hash: 0x155B2FBE72D7D1D0 | ApiSet: undefined
 */
export function isVehiclePropSetLoaded(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehiclePropSetLoaded(_vehicle);
}
/**
 * Hash: 0x58E0B01D45CA7357 | ApiSet: undefined
 */
export function _0x58E0B01D45CA7357(p0) {
    Citizen.invokeNative('0x58E0B01D45CA7357', p0);
}
/**
 * Hash: 0x7264F9CA87A9830B | ApiSet: undefined
 */
export function isVehiclePropSetLoadedAdditional(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehiclePropSetLoadedAdditional(_vehicle);
}
/**
 * Hash: 0xB1964A83B345B4AB | ApiSet: undefined
 */
export function releasePropSet(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return ReleasePropSet(hash);
}
/**
 * Hash: 0xC4B67EF3FD65622D | ApiSet: undefined
 */
export function _0xC4B67EF3FD65622D(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xC4B67EF3FD65622D', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x3BCF32FF37EA9F1D | ApiSet: undefined
 */
export function removeVehiclePropSets(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    RemoveVehiclePropSets(_vehicle);
}
/**
 * Hash: 0xE31C0CB1C3186D40 | ApiSet: undefined
 */
export function removeVehicleLightPropSets(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    RemoveVehicleLightPropSets(_vehicle);
}
/**
 * Hash: 0xF3DE57A46D5585E9 | ApiSet: undefined
 */
export function requestPropSet(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return RequestPropSet(hash);
}
/**
 * ```
 * Same as _REQUEST_PROP_SET
 * ```
 * Hash: 0xE72F591958F3ACAB | ApiSet: undefined
 */
export function requestPropSet2(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return RequestPropSet2(hash);
}
/**
 * Hash: 0x909E3C7FAE539FB1 | ApiSet: undefined
 */
export function setPropSetAsNoLongerNeeded(propSet) {
    SetPropSetAsNoLongerNeeded(propSet);
}
/**
 * Hash: 0x9D096A5BD02F953E | ApiSet: undefined
 */
export function setPropSetVisible(propSet, toggle) {
    SetPropSetVisible(propSet, toggle);
}
/**
 * Hash: 0xC1AB7EEFD3E6EE49 | ApiSet: undefined
 */
export function setPropSetFlag(propSet, flag) {
    SetPropSetFlag(propSet, flag);
}
/**
 * Hash: 0xD87DF294B049211D | ApiSet: undefined
 */
export function eventQueuePop(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    EventQueuePop(hash);
}
/**
 * Hash: 0x402B5D7D269FF796 | ApiSet: undefined
 */
export function eventQueueIsEmpty(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return EventQueueIsEmpty(hash);
}
/**
 * ```
 * Hardcoded to return true.
 * ```
 * Hash: 0xCEEC64BD27A59312 | ApiSet: undefined
 */
export function closeVideoEditor(p0) {
    return CloseVideoEditor(p0);
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x9EEB007317FA3B9C | ApiSet: undefined
 */
export function isVideoEditorRunning() {
    return IsVideoEditorRunning();
}
/**
 * ```
 * Hardcoded to return true.
 * ```
 * Hash: 0xB3F2829907403C13 | ApiSet: undefined
 */
export function openVideoEditor() {
    return OpenVideoEditor();
}
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x0F838D47DE58EDB2 | ApiSet: undefined
 */
export function replaySystemHasRequestedAScriptCleanup() {
    return ReplaySystemHasRequestedAScriptCleanup();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x57C6525034E76EB0 | ApiSet: undefined
 */
export function setScriptsHaveCleanedUpForReplaySystem() {
    SetScriptsHaveCleanedUpForReplaySystem();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xA8C44C13419634F2 | ApiSet: undefined
 */
export function replayPreventRecordingThisFrame() {
    ReplayPreventRecordingThisFrame();
}
/**
 * Hash: 0x1431540BCA1A1BD2 | ApiSet: undefined
 */
export function _0x1431540BCA1A1BD2() {
    return Citizen.invokeNative('0x1431540BCA1A1BD2');
}
/**
 * Hash: 0x443174C20B8B9E7F | ApiSet: undefined
 */
export function _0x443174C20B8B9E7F(p0, p1, p2) {
    Citizen.invokeNative('0x443174C20B8B9E7F', p0, p1, p2);
}
/**
 * Hash: 0x81F4E92BE3958364 | ApiSet: undefined
 */
export function _0x81F4E92BE3958364(p0, p1, p2) {
    Citizen.invokeNative('0x81F4E92BE3958364', p0, p1, p2);
}
/**
 * Hash: 0x4FB5869E2B37FC00 | ApiSet: undefined
 */
export function _0x4FB5869E2B37FC00() {
    Citizen.invokeNative('0x4FB5869E2B37FC00');
}
/**
 * Hash: 0x8E8FFB9E4AD051D2 | ApiSet: undefined
 */
export function _0x8E8FFB9E4AD051D2(p0, p1, p2, p3) {
    Citizen.invokeNative('0x8E8FFB9E4AD051D2', p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xA7ECEBAFBAF997A5 | ApiSet: undefined
 */
export function _0xA7ECEBAFBAF997A5(savegameType) {
    if (typeof savegameType === 'string')
        savegameType = this.getHashKey(savegameType);
    return Citizen.invokeNative('0xA7ECEBAFBAF997A5', savegameType);
}
/**
 * Hash: 0x9BB83C4DD7BE0802 | ApiSet: undefined
 */
export function _0x9BB83C4DD7BE0802(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x9BB83C4DD7BE0802', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xC0ABF784590798A9 | ApiSet: undefined
 */
export function _0xC0ABF784590798A9(p0) {
    Citizen.invokeNative('0xC0ABF784590798A9', p0);
}
/**
 * Hash: 0xA844FEB5C22C2C74 | ApiSet: undefined
 */
export function _0xA844FEB5C22C2C74() {
    Citizen.invokeNative('0xA844FEB5C22C2C74');
}
/**
 * Hash: 0xB00CE33465B5406D | ApiSet: undefined
 */
export function _0xB00CE33465B5406D(p0, p1) {
    return Citizen.invokeNative('0xB00CE33465B5406D', p0, p1);
}
/**
 * Hash: 0xE0B45E983BFC0768 | ApiSet: undefined
 */
export function _0xE0B45E983BFC0768() {
    Citizen.invokeNative('0xE0B45E983BFC0768');
}
/**
 * ```
 * Does the exact same as 0x529B9CCD0972AF4E
 * ```
 * Hash: 0xBB7F4273C186BC4B | ApiSet: undefined
 */
export function savegameGetBool(variableName) {
    return SavegameGetBool(variableName);
}
/**
 * Hash: 0x529B9CCD0972AF4E | ApiSet: undefined
 */
export function savegameGetInt(variableName) {
    return SavegameGetInt(variableName);
}
/**
 * Hash: 0xE8346E62FD7FB962 | ApiSet: undefined
 */
export function _0xE8346E62FD7FB962() {
    Citizen.invokeNative('0xE8346E62FD7FB962');
}
/**
 * Hash: 0xED4B0C1057892B2E | ApiSet: undefined
 */
export function _0xED4B0C1057892B2E(p0, p1, p2, p3) {
    Citizen.invokeNative('0xED4B0C1057892B2E', p0, p1, p2, p3);
}
/**
 * Hash: 0x35DEFECAE36D4FAE | ApiSet: undefined
 */
export function savegameGetFloat(variableName) {
    return SavegameGetFloat(variableName);
}
/**
 * ```
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with enums and flags
 * ```
 * Hash: 0xB25B5A375BE5BE26 | ApiSet: undefined
 */
export function savegameGetInt3(variableName) {
    return SavegameGetInt3(variableName);
}
/**
 * Hash: 0x5A10D6506B2F2C63 | ApiSet: undefined
 */
export function savegameGetTextLabel23(variableName) {
    return SavegameGetTextLabel23(variableName);
}
/**
 * ```
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with time/timestamps
 * ```
 * Hash: 0x529B9CCD0972AF4D | ApiSet: undefined
 */
export function savegameGetInt2(variableName) {
    return SavegameGetInt2(variableName);
}
/**
 * Hash: 0x4845E7E7643A908C | ApiSet: undefined
 */
export function savegameGetTextLabel31(variableName) {
    return SavegameGetTextLabel31(variableName);
}
/**
 * Hash: 0x186608A2AC6F9E88 | ApiSet: undefined
 */
export function savegameGetTextLabel63(variableName) {
    return SavegameGetTextLabel63(variableName);
}
/**
 * Hash: 0x3CF46F55C6585590 | ApiSet: undefined
 */
export function savegameIsSavePending() {
    return SavegameIsSavePending();
}
/**
 * ```
 * See SAVEGAME_SAVE_SP
 * ```
 * Hash: 0x1840F3B30ED0105F | ApiSet: undefined
 */
export function savegameSaveMp(savegameType) {
    if (typeof savegameType === 'string')
        savegameType = this.getHashKey(savegameType);
    return SavegameSaveMp(savegameType);
}
/**
 * ```
 * enum eSavegameType : Hash
 * {
 * SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
 * SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
 * SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
 * SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
 * SAVEGAMETYPE_END_MATCH = 0xE470ED50,
 * SAVEGAMETYPE_END_MISSION = 0x9A444E54,
 * SAVEGAMETYPE_END_SESSION = 0x6D23956C,
 * SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
 * SAVEGAMETYPE_RANKUP = 0xE25F8017,
 * SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
 * SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
 * SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
 * SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
 * };
 * ```
 * Hash: 0x62C9EB51656D68CE | ApiSet: undefined
 */
export function savegameSaveSp(savegameType) {
    if (typeof savegameType === 'string')
        savegameType = this.getHashKey(savegameType);
    return SavegameSaveSp(savegameType);
}
/**
 * Hash: 0xAC8FAB22A914AE34 | ApiSet: undefined
 */
export function awardsGetResultItem(awardHash, itemIndex) {
    if (typeof awardHash === 'string')
        awardHash = this.getHashKey(awardHash);
    return AwardsGetResultItem(awardHash, itemIndex);
}
/**
 * ```
 * goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
 * ```
 * Hash: 0x7D654266025E921B | ApiSet: undefined
 */
export function activateGoalContext(goalContext) {
    if (typeof goalContext === 'string')
        goalContext = this.getHashKey(goalContext);
    ActivateGoalContext(goalContext);
}
/**
 * Hash: 0xB9467E41DAB1CF2C | ApiSet: undefined
 */
export function awardsGetUnlockClaimData(awardHash, dataIndex) {
    if (typeof awardHash === 'string')
        awardHash = this.getHashKey(awardHash);
    return AwardsGetUnlockClaimData(awardHash, dataIndex);
}
/**
 * Hash: 0xBC2C927F5C264243 | ApiSet: undefined
 */
export function bailToLandingPage(bailCode) {
    BailToLandingPage(bailCode);
}
/**
 * Hash: 0xE98204D3C25AE14C | ApiSet: undefined
 */
export function bailWithPassThroughParams(params) {
    BailWithPassThroughParams(params);
}
/**
 * ```
 * Deletes the given context from the background scripts context map.
 * ```
 * Hash: 0x3ABF7BA1C3E2C8CF | ApiSet: undefined
 */
export function bgEndContext(contextName) {
    BgEndContext(contextName);
}
/**
 * ```
 * Hashed version of BG_END_CONTEXT
 * ```
 * Hash: 0x6D1431744182CDE8 | ApiSet: undefined
 */
export function bgEndContextHash(contextHash) {
    if (typeof contextHash === 'string')
        contextHash = this.getHashKey(contextHash);
    BgEndContextHash(contextHash);
}
/**
 * Hash: 0x4AE1DFF337A86FDE | ApiSet: undefined
 */
export function bgDoesLaunchParamExist(scriptIndex, p1) {
    return BgDoesLaunchParamExist(scriptIndex, p1);
}
/**
 * Hash: 0x55C40B7592BAD213 | ApiSet: undefined
 */
export function bgGetLaunchParamValue(scriptIndex, p1) {
    return BgGetLaunchParamValue(scriptIndex, p1);
}
/**
 * Hash: 0x829CD22E043A2577 | ApiSet: undefined
 */
export function bgGetScriptIdFromNameHash(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return BgGetScriptIdFromNameHash(p0);
}
/**
 * ```
 * Sets bit 0 in GtaThread+0x784
 * ```
 * Hash: 0x4858148E3B8A75D0 | ApiSet: undefined
 */
export function bgSetExitflagResponse() {
    BgSetExitflagResponse();
}
/**
 * ```
 * Returns true if GtaThread+0x77C is equal to 1.
 * ```
 * Hash: 0x2238EC3EC631AB1F | ApiSet: undefined
 */
export function bgIsExitflagSet() {
    return BgIsExitflagSet();
}
/**
 * ```
 * Inserts the given context into the background scripts context map.
 * ```
 * Hash: 0x49BA5678BA040CA7 | ApiSet: undefined
 */
export function bgStartContext(contextName) {
    BgStartContext(contextName);
}
/**
 * Hash: 0xBE7D814CFA181B56 | ApiSet: undefined
 */
export function bgReloadAllBackgroundScripts() {
    BgReloadAllBackgroundScripts();
}
/**
 * Hash: 0xDE544B7EC0C187CC | ApiSet: undefined
 */
export function clearAllPlayerBits() {
    return ClearAllPlayerBits();
}
/**
 * ```
 * Hashed version of BG_START_CONTEXT
 * ```
 * Hash: 0x2EB67D564DCC09D5 | ApiSet: undefined
 */
export function bgStartContextHash(contextHash) {
    if (typeof contextHash === 'string')
        contextHash = this.getHashKey(contextHash);
    BgStartContextHash(contextHash);
}
/**
 * Hash: 0xD426E2E3288469D6 | ApiSet: undefined
 */
export function clearPlayerBitAtIndex(bitIndex) {
    return ClearPlayerBitAtIndex(bitIndex);
}
/**
 * Hash: 0x462C687BEA254BD9 | ApiSet: undefined
 */
export function countPlayerBits() {
    return CountPlayerBits();
}
/**
 * ```
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 * ```
 * Hash: 0x50B72A754EE64A71 | ApiSet: undefined
 */
export function deactivateGoalContext(goalContext) {
    if (typeof goalContext === 'string')
        goalContext = this.getHashKey(goalContext);
    DeactivateGoalContext(goalContext);
}
/**
 * Hash: 0x2F050A3FF8738245 | ApiSet: undefined
 */
export function countParticipantBits() {
    return CountParticipantBits();
}
/**
 * Hash: 0x1E5B70E53DB661E5 | ApiSet: undefined
 */
export function displayLoadingScreens(p0, p1, p2, gamemodeName, title, subtitle) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    DisplayLoadingScreens(p0, p1, p2, gamemodeName, title, subtitle);
}
/**
 * Hash: 0x66EE5B93C308F734 | ApiSet: undefined
 */
export function doesCompressedGlobalBlockBufferExist(index) {
    return DoesCompressedGlobalBlockBufferExist(index);
}
/**
 * Hash: 0x552B171E3F69E5AE | ApiSet: undefined
 */
export function doesScriptExist(scriptName) {
    return DoesScriptExist(scriptName);
}
/**
 * Hash: 0xA34E89749F628284 | ApiSet: undefined
 */
export function doesScriptWithNameHashExist(scriptHash) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return DoesScriptWithNameHashExist(scriptHash);
}
/**
 * Hash: 0xFA3B530A5CC693D5 | ApiSet: undefined
 */
export function getBlockOfPlayerBits(p1) {
    return GetBlockOfPlayerBits(p1);
}
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * ```
 * Hash: 0xA85E614430EFF816 | ApiSet: undefined
 */
export function getEventAtIndex(eventGroup, eventIndex) {
    return GetEventAtIndex(eventGroup, eventIndex);
}
/**
 * Hash: 0xFF975BC4435A0FA3 | ApiSet: undefined
 */
export function doesThreadExist(threadId) {
    return DoesThreadExist(threadId);
}
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * ```
 * Hash: 0xC9F59C0A710ECD34 | ApiSet: undefined
 */
export function getEventExists(eventGroup, eventType) {
    if (typeof eventType === 'string')
        eventType = this.getHashKey(eventType);
    return GetEventExists(eventGroup, eventType);
}
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
 * ```
 * Hash: 0x57EC5FA4D4D6AFCA | ApiSet: undefined
 */
export function getEventData(eventGroup, eventIndex, eventDataSize) {
    return GetEventData(eventGroup, eventIndex, eventDataSize);
}
/**
 * Hash: 0x42A7EB5C814C2DE0 | ApiSet: undefined
 */
export function getGlobalBlockCanBeAccessed(index) {
    return GetGlobalBlockCanBeAccessed(index);
}
/**
 * Hash: 0xBC2C927F5C264960 | ApiSet: undefined
 */
export function getHashOfThisScriptName() {
    return GetHashOfThisScriptName();
}
/**
 * Hash: 0x724CB89D35B283D0 | ApiSet: undefined
 */
export function getHashOfThread(threadId) {
    return GetHashOfThread(threadId);
}
/**
 * Hash: 0x55525C346BEF6960 | ApiSet: undefined
 */
export function getIdOfThisThread() {
    return GetIdOfThisThread();
}
/**
 * Hash: 0x323DAF00687E0F28 | ApiSet: undefined
 */
export function getNoLoadingScreen() {
    return GetNoLoadingScreen();
}
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
 * ```
 * Hash: 0x5CE8DE5909565748 | ApiSet: undefined
 */
export function getNumberOfEvents(eventGroup) {
    return GetNumberOfEvents(eventGroup);
}
/**
 * ```
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
 * return v3;
 * ```
 * Hash: 0x8E34C953364A76DD | ApiSet: undefined
 */
export function getNumberOfThreadsRunningTheScriptWithThisHash(scriptHash) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return GetNumberOfThreadsRunningTheScriptWithThisHash(scriptHash);
}
/**
 * Hash: 0xD92FA81B64920E85 | ApiSet: undefined
 */
export function getThreadExistenceDetails(threadId) {
    return GetThreadExistenceDetails(threadId);
}
/**
 * ```
 * enum eThreadExitReason
 * {
 * THREAD_EXIT_REASON_NONE,
 * THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
 * THREAD_EXIT_REASON_SESSION_MERGE,
 * THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
 * THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
 * };
 * ```
 * Hash: 0x54AE4FDEEFEAB77E | ApiSet: undefined
 */
export function getThreadExitReason() {
    return GetThreadExitReason();
}
/**
 * Hash: 0xA5D8E0C2F3C7EEBC | ApiSet: undefined
 */
export function hasScriptWithNameHashLoaded(scriptHash) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return HasScriptWithNameHashLoaded(scriptHash);
}
/**
 * ```
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 * ```
 * Hash: 0xE97BD36574F8B0A6 | ApiSet: undefined
 */
export function hasScriptLoaded(scriptName) {
    return HasScriptLoaded(scriptName);
}
/**
 * ```
 * Waiting for child scripts to terminate / waiting for collapse of child scripts
 * ```
 * Hash: 0x380FFA15B72408FB | ApiSet: undefined
 */
export function haveAllChildScriptsTerminated(p0) {
    return HaveAllChildScriptsTerminated(p0);
}
/**
 * Hash: 0x179A6F0EE2E79026 | ApiSet: undefined
 */
export function isAnyPlayerBitSet() {
    return IsAnyPlayerBitSet();
}
/**
 * Hash: 0x20B7F69B40C6B755 | ApiSet: undefined
 */
export function isBackgroundScript(threadId) {
    return IsBackgroundScript(threadId);
}
/**
 * ```
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 * ```
 * Hash: 0x7409669C5ED50144 | ApiSet: undefined
 */
export function isGoalContextActive(goalContext) {
    if (typeof goalContext === 'string')
        goalContext = this.getHashKey(goalContext);
    return IsGoalContextActive(goalContext);
}
/**
 * ```
 * Same as GET_IS_LOADING_SCREEN_ACTIVE
 * ```
 * Hash: 0xB54ADBE65D528FCB | ApiSet: undefined
 */
export function isLoadingScreenVisible() {
    return IsLoadingScreenVisible();
}
/**
 * Hash: 0x46E9AE36D8FA6417 | ApiSet: undefined
 */
export function isThreadActive(threadId, ignoreKilledState) {
    return IsThreadActive(threadId, ignoreKilledState);
}
/**
 * Hash: 0x72B2E00C9BAC6789 | ApiSet: undefined
 */
export function isPlayerBitSetAtIndex(bitIndex) {
    return IsPlayerBitSetAtIndex(bitIndex);
}
/**
 * Hash: 0x30BED53646C86D11 | ApiSet: undefined
 */
export function isThreadExitRequestedForThreadWithThisId(threadId) {
    return IsThreadExitRequestedForThreadWithThisId(threadId);
}
/**
 * Hash: 0x9E4EF615E307FBBE | ApiSet: undefined
 */
export function isThreadExitRequested() {
    return IsThreadExitRequested();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xF1E9045F5AA9E428 | ApiSet: undefined
 */
export function lootGetLootClaimData(dataIndex) {
    return LootGetLootClaimData(dataIndex);
}
/**
 * Hash: 0x4293B44A855F82CC | ApiSet: undefined
 */
export function lootGetResultItem(itemIndex) {
    return LootGetResultItem(itemIndex);
}
/**
 * Hash: 0x0A79C81C418F5D38 | ApiSet: undefined
 */
export function _0x0A79C81C418F5D38(p0, p1) {
    return Citizen.invokeNative('0x0A79C81C418F5D38', p0, p1);
}
/**
 * ```
 * Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
 * ```
 * Hash: 0x11B0A0B282FA9B10 | ApiSet: undefined
 */
export function _0x11B0A0B282FA9B10(p0) {
    Citizen.invokeNative('0x11B0A0B282FA9B10', p0);
}
/**
 * Hash: 0x1BDB5A07307F6929 | ApiSet: undefined
 */
export function _0x1BDB5A07307F6929(p0, p1) {
    Citizen.invokeNative('0x1BDB5A07307F6929', p0, p1);
}
/**
 * Hash: 0x1C5EB3C27F7508CB | ApiSet: undefined
 */
export function _0x1C5EB3C27F7508CB(p0, p1) {
    Citizen.invokeNative('0x1C5EB3C27F7508CB', p0, p1);
}
/**
 * Hash: 0x29FB4CE89472C3CB | ApiSet: undefined
 */
export function _0x29FB4CE89472C3CB(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0x29FB4CE89472C3CB', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x42A429CDFED6D99D | ApiSet: undefined
 */
export function _0x42A429CDFED6D99D(p0, p1, p2) {
    Citizen.invokeNative('0x42A429CDFED6D99D', p0, p1, p2);
}
/**
 * Hash: 0x5827BE85A87B073D | ApiSet: undefined
 */
export function _0x5827BE85A87B073D(p0) {
    Citizen.invokeNative('0x5827BE85A87B073D', p0);
}
/**
 * Hash: 0x6F700A4BF7C3331B | ApiSet: undefined
 */
export function _0x6F700A4BF7C3331B(p0) {
    Citizen.invokeNative('0x6F700A4BF7C3331B', p0);
}
/**
 * Hash: 0x64F765D9A1F8F02C | ApiSet: undefined
 */
export function _0x64F765D9A1F8F02C() {
    return Citizen.invokeNative('0x64F765D9A1F8F02C');
}
/**
 * Hash: 0x76CBCD9EADC00955 | ApiSet: undefined
 */
export function _0x76CBCD9EADC00955() {
    Citizen.invokeNative('0x76CBCD9EADC00955');
}
/**
 * Hash: 0xE7282390542F570D | ApiSet: undefined
 */
export function _0xE7282390542F570D(p0) {
    return Citizen.invokeNative('0xE7282390542F570D', p0);
}
/**
 * Hash: 0xA88E1D7FA1E20080 | ApiSet: undefined
 */
export function _0xA88E1D7FA1E20080(p0) {
    return Citizen.invokeNative('0xA88E1D7FA1E20080', p0);
}
/**
 * Hash: 0xF9E951A1E5517C06 | ApiSet: undefined
 */
export function _0xF9E951A1E5517C06() {
    Citizen.invokeNative('0xF9E951A1E5517C06');
}
/**
 * Hash: 0xE4ABE20DCE7C7CFE | ApiSet: undefined
 */
export function _0xE4ABE20DCE7C7CFE(p0, p1, p2) {
    Citizen.invokeNative('0xE4ABE20DCE7C7CFE', p0, p1, p2);
}
/**
 * ```
 * Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xAC9FF854BD4BA9B5 | ApiSet: undefined
 */
export function netRpcGuidToString() {
    return NetRpcGuidToString();
}
/**
 * Hash: 0xF6B9CE3F8D5B9B74 | ApiSet: undefined
 */
export function requestScriptWithNameHash(scriptHash) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    RequestScriptWithNameHash(scriptHash);
}
/**
 * Hash: 0xFFDDF802279BE128 | ApiSet: undefined
 */
export function _0xFFDDF802279BE128(p0, p1, p2) {
    Citizen.invokeNative('0xFFDDF802279BE128', p0, p1, p2);
}
/**
 * Hash: 0x46ED607DDD40D7FE | ApiSet: undefined
 */
export function requestScript(scriptName) {
    RequestScript(scriptName);
}
/**
 * Hash: 0x7423F7835770F619 | ApiSet: undefined
 */
export function requestThreadExitForAllThreadsWithThisName(nameHash) {
    if (typeof nameHash === 'string')
        nameHash = this.getHashKey(nameHash);
    RequestThreadExitForAllThreadsWithThisName(nameHash);
}
/**
 * ```
 * If the function returns 0, the end of the iteration has been reached.
 * ```
 * Hash: 0x3CE3FB167E837D7C | ApiSet: undefined
 */
export function scriptThreadIteratorGetNextThreadId() {
    return ScriptThreadIteratorGetNextThreadId();
}
/**
 * Hash: 0x7DE4643157AD646C | ApiSet: undefined
 */
export function requestThreadExit(threadId) {
    RequestThreadExit(threadId);
}
/**
 * Hash: 0xDC3914A99B4A5FDF | ApiSet: undefined
 */
export function restoreGlobalBlock(index) {
    return RestoreGlobalBlock(index);
}
/**
 * Hash: 0x11986B05885564D2 | ApiSet: undefined
 */
export function setAllGlobalBlocksHaveBeenLoaded(toggle) {
    SetAllGlobalBlocksHaveBeenLoaded(toggle);
}
/**
 * Hash: 0xC6DFB8C04C86D5A5 | ApiSet: undefined
 */
export function setBlockOfPlayerBits(p1, p2) {
    return SetBlockOfPlayerBits(p1, p2);
}
/**
 * ```
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 * ```
 * Hash: 0x39382EB8DCD8684D | ApiSet: undefined
 */
export function scriptThreadIteratorReset() {
    ScriptThreadIteratorReset();
}
/**
 * Hash: 0x4768D5252EAEB76F | ApiSet: undefined
 */
export function setEventFlagForDeletion(eventGroup, eventIndex, p2) {
    SetEventFlagForDeletion(eventGroup, eventIndex, p2);
}
/**
 * Hash: 0x20F4CB76689ACDBC | ApiSet: undefined
 */
export function setAllPlayerBits() {
    return SetAllPlayerBits();
}
/**
 * Hash: 0xE66F392BFCE734AF | ApiSet: undefined
 */
export function setGlobalBlockCanBeAccessed(index, toggle) {
    SetGlobalBlockCanBeAccessed(index, toggle);
}
/**
 * Hash: 0x5CB83156AA038F95 | ApiSet: undefined
 */
export function setNoLoadingScreen(toggle) {
    SetNoLoadingScreen(toggle);
}
/**
 * Hash: 0x0086D3067E1CFD1C | ApiSet: undefined
 */
export function setScriptAsNoLongerNeeded(scriptName) {
    SetScriptAsNoLongerNeeded(scriptName);
}
/**
 * Hash: 0x31010318BA9897AC | ApiSet: undefined
 */
export function setPlayerBitAtIndex(bitIndex) {
    return SetPlayerBitAtIndex(bitIndex);
}
/**
 * Hash: 0xFC179D7E8886DADF | ApiSet: undefined
 */
export function shutdownLoadingScreen() {
    ShutdownLoadingScreen();
}
/**
 * Hash: 0x50723A1567C8361E | ApiSet: undefined
 */
export function setScriptWithNameHashAsNoLongerNeeded(scriptHash) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    SetScriptWithNameHashAsNoLongerNeeded(scriptHash);
}
/**
 * ```
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 * ```
 * Hash: 0xB8BA7F44DF1575E1 | ApiSet: undefined
 */
export function startNewScriptWithArgs(scriptName, argCount, stackSize) {
    return StartNewScriptWithArgs(scriptName, argCount, stackSize);
}
/**
 * Hash: 0xE81651AD79516E48 | ApiSet: undefined
 */
export function startNewScript(scriptName, stackSize) {
    return StartNewScript(scriptName, stackSize);
}
/**
 * Hash: 0xEB1C67C3A5333A92 | ApiSet: undefined
 */
export function startNewScriptWithNameHash(scriptHash, stackSize) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return StartNewScriptWithNameHash(scriptHash, stackSize);
}
/**
 * Hash: 0xC4BB298BD441BE78 | ApiSet: undefined
 */
export function startNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize) {
    if (typeof scriptHash === 'string')
        scriptHash = this.getHashKey(scriptHash);
    return StartNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize);
}
/**
 * Hash: 0x778D4733E0F2F265 | ApiSet: undefined
 */
export function stopDisplayingMpTransitionLoadingScreens(p0) {
    StopDisplayingMpTransitionLoadingScreens(p0);
}
/**
 * Hash: 0xB952A3AC41D58F2F | ApiSet: undefined
 */
export function storeGlobalBlock(index) {
    return StoreGlobalBlock(index);
}
/**
 * Hash: 0x5E8B6D17FF91CD59 | ApiSet: undefined
 */
export function terminateThisThread() {
    TerminateThisThread();
}
/**
 * Hash: 0x87ED52AE40EA1A52 | ApiSet: undefined
 */
export function terminateThread(threadId) {
    TerminateThread(threadId);
}
/**
 * Hash: 0x8B61C950A148FFA2 | ApiSet: undefined
 */
export function triggerScriptEvent2(eventDataSize, scriptMetadataIndex, threadId) {
    return TriggerScriptEvent2(eventDataSize, scriptMetadataIndex, threadId);
}
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 * ```
 * Hash: 0x5AE99C571D5BBE5D | ApiSet: undefined
 */
export function triggerScriptEvent(eventGroup, eventDataSize, scriptMetadataIndex) {
    return TriggerScriptEvent(eventGroup, eventDataSize, scriptMetadataIndex);
}
/**
 * ```
 * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * enum eShapeTestStatus
 * {
 * SHAPETEST_STATUS_NONEXISTENT,
 * SHAPETEST_STATUS_RESULTS_NOTREADY,
 * SHAPETEST_STATUS_RESULTS_READY
 * };
 * ```
 * Hash: 0xEDE8AC7C5108FB1D | ApiSet: undefined
 */
export function getShapeTestResult(shapeTestHandle) {
    const result = GetShapeTestResult(shapeTestHandle);
    return [result[0], result[1], new Vector3(result[2], result[3], result[4]), new Vector3(result[3], result[4], result[5]), result[4]];
}
/**
 * Hash: 0x04AA59CA40571C2E | ApiSet: undefined
 */
export function _0x04AA59CA40571C2E(p0, p1) {
    return Citizen.invokeNative('0x04AA59CA40571C2E', p0, p1);
}
/**
 * ```
 * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
 * ```
 * Hash: 0x377906D8A31E5586 | ApiSet: undefined
 */
export function startExpensiveSynchronousShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entityToIgnore, p8) {
    const _entityToIgnore = entityToIgnore instanceof Entity ? entityToIgnore.handle() : entityToIgnore;
    return StartExpensiveSynchronousShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, _entityToIgnore, p8);
}
/**
 * Hash: 0x28579D1B8F8AAC80 | ApiSet: undefined
 */
export function startShapeTestCapsule(x1, y1, z1, x2, y2, z2, radius, flags, entityToIgnore, p9) {
    const _entityToIgnore = entityToIgnore instanceof Entity ? entityToIgnore.handle() : entityToIgnore;
    return StartShapeTestCapsule(x1, y1, z1, x2, y2, z2, radius, flags, _entityToIgnore, p9);
}
/**
 * Hash: 0xFE466162C4401D18 | ApiSet: undefined
 */
export function startShapeTestBox(posX, posY, posZ, dimensionsX, dimensionsY, dimensionsZ, rotX, rotY, rotZ, rotationOrder, flags, entityToIgnore, options) {
    const _entityToIgnore = entityToIgnore instanceof Entity ? entityToIgnore.handle() : entityToIgnore;
    return StartShapeTestBox(posX, posY, posZ, dimensionsX, dimensionsY, dimensionsZ, rotX, rotY, rotZ, rotationOrder, flags, _entityToIgnore, options);
}
/**
 * Hash: 0x9839013D8B6014F1 | ApiSet: undefined
 */
export function startShapeTestMouseCursorLosProbe(flag, entity, flag2) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const result = StartShapeTestMouseCursorLosProbe(flag, _entity, flag2);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4])];
}
/**
 * ```
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
 * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
 * ```
 * Hash: 0x7EE9F5D83DD4F90E | ApiSet: undefined
 */
export function startShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entity, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, _entity, p8);
}
/**
 * Hash: 0xAA5B7C8309F73230 | ApiSet: undefined
 */
export function startShapeTestSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StartShapeTestSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, _entity, p9);
}
/**
 * Hash: 0x89D9BDE7334B110F | ApiSet: undefined
 */
export function scCommunityEventGetDisplayName(p0) {
    return ScCommunityEventGetDisplayName(p0);
}
/**
 * Hash: 0x85EA0BEC7B1F7622 | ApiSet: undefined
 */
export function scCommunityEventGetDisplayNameForType(p0, p1) {
    return ScCommunityEventGetDisplayNameForType(p0, p1);
}
/**
 * Hash: 0x03C03ABBABBEF752 | ApiSet: undefined
 */
export function scCommunityEventGetEventIdForType(p0) {
    return ScCommunityEventGetEventIdForType(p0);
}
/**
 * Hash: 0x11EA52CAD1B55910 | ApiSet: undefined
 */
export function scCommunityEventGetDisplayNameById(p0, p1) {
    return ScCommunityEventGetDisplayNameById(p0, p1);
}
/**
 * Hash: 0x1BDB56DB258F052D | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataFloatForType(p0, p2) {
    return ScCommunityEventGetExtraDataFloatForType(p0, p2);
}
/**
 * Hash: 0xB4411D4D6B81438E | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataInt(p0) {
    return ScCommunityEventGetExtraDataInt(p0);
}
/**
 * Hash: 0xD635DF6BAA5A6017 | ApiSet: undefined
 */
export function scCommunityEventGetEventId() {
    return ScCommunityEventGetEventId();
}
/**
 * Hash: 0x060BBAD634C2B44B | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataFloat(p0) {
    return ScCommunityEventGetExtraDataFloat(p0);
}
/**
 * Hash: 0x3519CC3525319A96 | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataIntForType(p0, p2) {
    return ScCommunityEventGetExtraDataIntForType(p0, p2);
}
/**
 * Hash: 0x049D2196D9D11184 | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataStringById(p0, p1, p2) {
    return ScCommunityEventGetExtraDataStringById(p0, p1, p2);
}
/**
 * Hash: 0x91C9E2A0F9DD6DD4 | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataFloatById(p0, p1) {
    return ScCommunityEventGetExtraDataFloatById(p0, p1);
}
/**
 * Hash: 0x7C981DE05A7403A0 | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataIntById(p0, p1) {
    return ScCommunityEventGetExtraDataIntById(p0, p1);
}
/**
 * Hash: 0xCBF743C984695CF3 | ApiSet: undefined
 */
export function scCommunityEventIsActive() {
    return ScCommunityEventIsActive();
}
/**
 * Hash: 0x9F6DCD0C939C71E9 | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataString(p0, p1) {
    return ScCommunityEventGetExtraDataString(p0, p1);
}
/**
 * Hash: 0xC8FC3B2432E8229D | ApiSet: undefined
 */
export function scCommunityEventGetExtraDataStringForType(p0, p1, p2) {
    return ScCommunityEventGetExtraDataStringForType(p0, p1, p2);
}
/**
 * Hash: 0x62B384FEFDE06817 | ApiSet: undefined
 */
export function scCommunityEventIsActiveById(p0) {
    return ScCommunityEventIsActiveById(p0);
}
/**
 * Hash: 0x09937EB0CEBC2F9F | ApiSet: undefined
 */
export function scCommunityEventIsActiveForType(p0) {
    return ScCommunityEventIsActiveForType(p0);
}
/**
 * Hash: 0x74CF39E030A382C4 | ApiSet: undefined
 */
export function scInboxGetMessageIsReadAtIndex(msgIndex) {
    return ScInboxGetMessageIsReadAtIndex(msgIndex);
}
/**
 * Hash: 0xFF92537C4DDC1241 | ApiSet: undefined
 */
export function scInboxGetMessageTypeAtIndex(msgIndex) {
    return ScInboxGetMessageTypeAtIndex(msgIndex);
}
/**
 * Hash: 0x95BB39C4DA99F348 | ApiSet: undefined
 */
export function scInboxMessageGetDataInt(p0, context) {
    return ScInboxMessageGetDataInt(p0, context);
}
/**
 * Hash: 0x8EF0F633280C0663 | ApiSet: undefined
 */
export function scInboxGetTotalNumMessages() {
    return ScInboxGetTotalNumMessages();
}
/**
 * Hash: 0x66F77FD58506FF6B | ApiSet: undefined
 */
export function scInboxMessageGetDataString(p0, context, out) {
    return ScInboxMessageGetDataString(p0, context, out);
}
/**
 * Hash: 0x176D077685CD83E4 | ApiSet: undefined
 */
export function scInboxMessageGetRawTypeAtIndex(p0) {
    return ScInboxMessageGetRawTypeAtIndex(p0);
}
/**
 * Hash: 0xA31DAFCDC33775E9 | ApiSet: undefined
 */
export function scPresenceAttrSetFloat(attrHash, value) {
    if (typeof attrHash === 'string')
        attrHash = this.getHashKey(attrHash);
    return ScPresenceAttrSetFloat(attrHash, value);
}
/**
 * Hash: 0x63CAC501FFF66DC4 | ApiSet: undefined
 */
export function scInboxSetMessageAsReadAtIndex(msgIndex) {
    return ScInboxSetMessageAsReadAtIndex(msgIndex);
}
/**
 * Hash: 0x00000000467F4CAA | ApiSet: undefined
 */
export function scPresenceAttrSetFloatEx(attrName, value, p2) {
    return ScPresenceAttrSetFloatEx(attrName, value, p2);
}
/**
 * Hash: 0x0000000085488C49 | ApiSet: undefined
 */
export function scPresenceAttrSetIntEx(attrName, value, p2) {
    return ScPresenceAttrSetIntEx(attrName, value, p2);
}
/**
 * ```
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 * ```
 * Hash: 0x9C74AC9D87B3FFF4 | ApiSet: undefined
 */
export function scProfanityCheckString(string) {
    return ScProfanityCheckString(string);
}
/**
 * Hash: 0x00000000EB2D93B3 | ApiSet: undefined
 */
export function scPresenceAttrSetStringEx(attrName, value, p2) {
    return ScPresenceAttrSetStringEx(attrName, value, p2);
}
/**
 * Hash: 0x08C8052AF40C4247 | ApiSet: undefined
 */
export function scProfanityGetCheckIsValid(token) {
    return ScProfanityGetCheckIsValid(token);
}
/**
 * Hash: 0x3A10BCD0C8AA0B82 | ApiSet: undefined
 */
export function scProfanityGetCheckIsPending(token) {
    return ScProfanityGetCheckIsPending(token);
}
/**
 * Hash: 0x0CF3BFB99EBBE5B1 | ApiSet: undefined
 */
export function scProfanityGetStringStatus(token) {
    return ScProfanityGetStringStatus(token);
}
/**
 * Hash: 0xF302973BB8BE70E6 | ApiSet: undefined
 */
export function scProfanityGetStringPassed(token) {
    return ScProfanityGetStringPassed(token);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x068332D20CB6F897 | ApiSet: undefined
 */
export function scFeedHubHasNewData() {
    return ScFeedHubHasNewData();
}
/**
 * Hash: 0xEFB64240F6B17817 | ApiSet: undefined
 */
export function scFeedSubmitPresetMessage(type, subType) {
    return ScFeedSubmitPresetMessage(type, subType);
}
/**
 * Hash: 0x1F471B79ACC97BEF | ApiSet: undefined
 */
export function spactionproxyGetNextPendingCraftingAction() {
    return SpactionproxyGetNextPendingCraftingAction();
}
/**
 * Hash: 0x1F471B79ACC98BEF | ApiSet: undefined
 */
export function spactionproxyGetNextPendingBuyAction() {
    return SpactionproxyGetNextPendingBuyAction();
}
/**
 * Hash: 0x1F471B79ACC91BEC | ApiSet: undefined
 */
export function spactionproxyManagerIsFailed() {
    return SpactionproxyManagerIsFailed();
}
/**
 * Hash: 0x1F471B79ACC91BED | ApiSet: undefined
 */
export function spactionproxyManagerIsReady() {
    return SpactionproxyManagerIsReady();
}
/**
 * Hash: 0x1F471B79ACC91BEE | ApiSet: undefined
 */
export function spactionproxyStartManager() {
    return SpactionproxyStartManager();
}
/**
 * Hash: 0x1F471B79ACC94BEF | ApiSet: undefined
 */
export function spactionproxyProcessAction(p0, p1) {
    return SpactionproxyProcessAction(p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x77B97A827739D434 | ApiSet: undefined
 */
export function chalAchievementIsComplete(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return ChalAchievementIsComplete(p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x86922D8C02FB7705 | ApiSet: undefined
 */
export function chalAddGoalProgressFloatByScoreId(p0, value) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    ChalAddGoalProgressFloatByScoreId(p0, value);
}
/**
 * Hash: 0xDDBD560745B1EE9C | ApiSet: undefined
 */
export function chalAddGoalProgressIntByScoreId(p0, value) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    ChalAddGoalProgressIntByScoreId(p0, value);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x808712E428F697B8 | ApiSet: undefined
 */
export function chalAchievementGetProgressInt(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return ChalAchievementGetProgressInt(p0, p1);
}
/**
 * Hash: 0x86922D8C02FB7703 | ApiSet: undefined
 */
export function chalAddGoalProgressFloat(chalHash, goalHash, value) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalAddGoalProgressFloat(chalHash, goalHash, value);
}
/**
 * Hash: 0x58CB53DB63F84DE9 | ApiSet: undefined
 */
export function chalGetNumRanksCompleted(chalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return ChalGetNumRanksCompleted(chalHash);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
 * ```
 * Hash: 0x04DAC3929796EB87 | ApiSet: undefined
 */
export function chalIsGoalActive(chalHash, goalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    return ChalIsGoalActive(chalHash, goalHash);
}
/**
 * Hash: 0xDDBD560745B1EE9A | ApiSet: undefined
 */
export function chalAddGoalProgressInt(chalHash, goalHash, value) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalAddGoalProgressInt(chalHash, goalHash, value);
}
/**
 * Hash: 0xA785A52B59B7E7B2 | ApiSet: undefined
 */
export function chalMissionGetNumGoalsComplete(missionHash) {
    if (typeof missionHash === 'string')
        missionHash = this.getHashKey(missionHash);
    return ChalMissionGetNumGoalsComplete(missionHash);
}
/**
 * Hash: 0x58CB53DB63F84DEA | ApiSet: undefined
 */
export function chalGetMaxRanks(chalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return ChalGetMaxRanks(chalHash);
}
/**
 * Hash: 0xC0BB774787BBF301 | ApiSet: undefined
 */
export function chalMissionIsGoalComplete(missionHash, goalHash) {
    if (typeof missionHash === 'string')
        missionHash = this.getHashKey(missionHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    return ChalMissionIsGoalComplete(missionHash, goalHash);
}
/**
 * Hash: 0x97E18E7C098626DE | ApiSet: undefined
 */
export function chalMissionAddGoalProgressInt(missionHash, goalHash, value) {
    if (typeof missionHash === 'string')
        missionHash = this.getHashKey(missionHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalMissionAddGoalProgressInt(missionHash, goalHash, value);
}
/**
 * Hash: 0x4ABF7E4DB6279E8F | ApiSet: undefined
 */
export function chalNetStartChal(chalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    ChalNetStartChal(chalHash);
}
/**
 * Hash: 0x0B0576DD3A75E58D | ApiSet: undefined
 */
export function chalMissionGetNumGoals(missionHash) {
    if (typeof missionHash === 'string')
        missionHash = this.getHashKey(missionHash);
    return ChalMissionGetNumGoals(missionHash);
}
/**
 * Hash: 0xC3FCB47344DCB638 | ApiSet: undefined
 */
export function chalNetStartGoal(chalHash, goalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalNetStartGoal(chalHash, goalHash);
}
/**
 * Hash: 0xDDBD560745B1EE9B | ApiSet: undefined
 */
export function chalSetGoalProgressInt(chalHash, goalHash, value) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalSetGoalProgressInt(chalHash, goalHash, value);
}
/**
 * Hash: 0x43B0163154A50C86 | ApiSet: undefined
 */
export function chalNetStopChal(chalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    ChalNetStopChal(chalHash);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x0FEE2561120F3333 | ApiSet: undefined
 */
export function _0x0FEE2561120F3333() {
    return Citizen.invokeNative('0x0FEE2561120F3333');
}
/**
 * Hash: 0x00CE6A93324A590B | ApiSet: undefined
 */
export function chalNetStopGoal(chalHash, goalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalNetStopGoal(chalHash, goalHash);
}
/**
 * Hash: 0x218F7710A139D012 | ApiSet: undefined
 */
export function _0x218F7710A139D012() {
    Citizen.invokeNative('0x218F7710A139D012');
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xF63DF9EE16393343 | ApiSet: undefined
 */
export function chalSetGoalDisabled(chalHash, goalHash, disabled) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    ChalSetGoalDisabled(chalHash, goalHash, disabled);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x302E71C1D9EE75B9 | ApiSet: undefined
 */
export function _0x302E71C1D9EE75B9(p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return Citizen.invokeNative('0x302E71C1D9EE75B9', p1);
}
/**
 * Hash: 0x025E98E317652CDD | ApiSet: undefined
 */
export function _0x025E98E317652CDD(p0) {
    Citizen.invokeNative('0x025E98E317652CDD', p0);
}
/**
 * Hash: 0x3AEABAE3F3C7600C | ApiSet: undefined
 */
export function _0x3AEABAE3F3C7600C() {
    return Citizen.invokeNative('0x3AEABAE3F3C7600C');
}
/**
 * Hash: 0x3EB2791A1FBC8A42 | ApiSet: undefined
 */
export function _0x3EB2791A1FBC8A42(statItem, p1) {
    if (typeof statItem === 'string')
        statItem = this.getHashKey(statItem);
    Citizen.invokeNative('0x3EB2791A1FBC8A42', statItem, p1);
}
/**
 * Hash: 0x332630B862277879 | ApiSet: undefined
 */
export function _0x332630B862277879() {
    return Citizen.invokeNative('0x332630B862277879');
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x4DAC398297981B87 | ApiSet: undefined
 */
export function _0x4DAC398297981B87(p0) {
    return Citizen.invokeNative('0x4DAC398297981B87', p0);
}
/**
 * Hash: 0x378D3B1B11D9385B | ApiSet: undefined
 */
export function _0x378D3B1B11D9385B(p0) {
    Citizen.invokeNative('0x378D3B1B11D9385B', p0);
}
/**
 * Hash: 0x3F6FD87D2030ADC6 | ApiSet: undefined
 */
export function _0x3F6FD87D2030ADC6() {
    return Citizen.invokeNative('0x3F6FD87D2030ADC6');
}
/**
 * ```
 * Only used in R* Script net_char_creator
 * ```
 * Hash: 0x4F2D5FA23DB992DE | ApiSet: undefined
 */
export function _0x4F2D5FA23DB992DE() {
    Citizen.invokeNative('0x4F2D5FA23DB992DE');
}
/**
 * Hash: 0x6123E2832C34243D | ApiSet: undefined
 */
export function _0x6123E2832C34243D(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x6123E2832C34243D', p0, p1, p2, p3, p4);
}
/**
 * ```
 * Only used in R* Script net_char_creator
 * ```
 * Hash: 0x4E463A3CDEFFFE96 | ApiSet: undefined
 */
export function _0x4E463A3CDEFFFE96() {
    Citizen.invokeNative('0x4E463A3CDEFFFE96');
}
/**
 * Hash: 0x4FCBCC0584CD08E9 | ApiSet: undefined
 */
export function _0x4FCBCC0584CD08E9(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    Citizen.invokeNative('0x4FCBCC0584CD08E9', p0);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x8312F09C56149A8A | ApiSet: undefined
 */
export function _0x8312F09C56149A8A(animalType) {
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    Citizen.invokeNative('0x8312F09C56149A8A', animalType);
}
/**
 * Hash: 0x70379B5C3FF1D209 | ApiSet: undefined
 */
export function _0x70379B5C3FF1D209() {
    return Citizen.invokeNative('0x70379B5C3FF1D209');
}
/**
 * Hash: 0x8BA3D7B1E83EF803 | ApiSet: undefined
 */
export function _0x8BA3D7B1E83EF803(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0x8BA3D7B1E83EF803', p0);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x91A4F58E01ED5E4C | ApiSet: undefined
 */
export function _0x91A4F58E01ED5E4C(value) {
    return Citizen.invokeNative('0x91A4F58E01ED5E4C', value);
}
/**
 * Hash: 0x8C889E4CBB4B2356 | ApiSet: undefined
 */
export function _0x8C889E4CBB4B2356(p0, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8C889E4CBB4B2356', p0, _ped);
}
/**
 * Hash: 0x997060BC223ADFF9 | ApiSet: undefined
 */
export function _0x997060BC223ADFF9() {
    return Citizen.invokeNative('0x997060BC223ADFF9');
}
/**
 * Hash: 0x99230691875FC218 | ApiSet: undefined
 */
export function _0x99230691875FC218(p0, p1, position) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x99230691875FC218', p0, p1, position.x, position.y, position.z);
}
/**
 * Hash: 0xA2E2BEA4E83F6270 | ApiSet: undefined
 */
export function _0xA2E2BEA4E83F6270(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xA2E2BEA4E83F6270', p0);
}
/**
 * Hash: 0x9D0F5D2E1951CD84 | ApiSet: undefined
 */
export function _0x9D0F5D2E1951CD84() {
    return Citizen.invokeNative('0x9D0F5D2E1951CD84');
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0xA59590050F80FF2E | ApiSet: undefined
 */
export function _0xA59590050F80FF2E(p0, p1, p2, p3) {
    Citizen.invokeNative('0xA59590050F80FF2E', p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xA596890CF55B5095 | ApiSet: undefined
 */
export function _0xA596890CF55B5095(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xA596890CF55B5095', _ped, p1);
}
/**
 * Hash: 0xB5E2EDA2135E0FA1 | ApiSet: undefined
 */
export function _0xB5E2EDA2135E0FA1(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xB5E2EDA2135E0FA1', p0, p1);
}
/**
 * Hash: 0xB112B9262EC29C20 | ApiSet: undefined
 */
export function _0xB112B9262EC29C20(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xB112B9262EC29C20', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xBE66B26B6529E943 | ApiSet: undefined
 */
export function _0xBE66B26B6529E943(unlockHash, ped, animalType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    Citizen.invokeNative('0xBE66B26B6529E943', unlockHash, _ped, animalType);
}
/**
 * Hash: 0xCA1F0B5103936891 | ApiSet: undefined
 */
export function _0xCA1F0B5103936891(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return Citizen.invokeNative('0xCA1F0B5103936891', p0);
}
/**
 * Hash: 0xCAAE29CB5591B2A5 | ApiSet: undefined
 */
export function _0xCAAE29CB5591B2A5(p0, p1) {
    return Citizen.invokeNative('0xCAAE29CB5591B2A5', p0, p1);
}
/**
 * Hash: 0xCA41E86545413B5B | ApiSet: undefined
 */
export function _0xCA41E86545413B5B(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0xCA41E86545413B5B', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xD64DBC8B0424135F | ApiSet: undefined
 */
export function _0xD64DBC8B0424135F(ped, animalType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    Citizen.invokeNative('0xD64DBC8B0424135F', _ped, animalType);
}
/**
 * Hash: 0xDA26263C07CCE9C2 | ApiSet: undefined
 */
export function _0xDA26263C07CCE9C2(p0) {
    Citizen.invokeNative('0xDA26263C07CCE9C2', p0);
}
/**
 * Hash: 0xDDBD560745B1EE98 | ApiSet: undefined
 */
export function _0xDDBD560745B1EE98(chalHash, goalHash, player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    if (typeof goalHash === 'string')
        goalHash = this.getHashKey(goalHash);
    return Citizen.invokeNative('0xDDBD560745B1EE98', chalHash, goalHash, _player);
}
/**
 * Hash: 0xDCEC875A02991AD0 | ApiSet: undefined
 */
export function _0xDCEC875A02991AD0(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xDCEC875A02991AD0', p0, p1, p2, p3);
}
/**
 * Hash: 0xDF95DF488A645CE7 | ApiSet: undefined
 */
export function _0xDF95DF488A645CE7() {
    Citizen.invokeNative('0xDF95DF488A645CE7');
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * Only used in R* SP Scripts
 * _STAT_ID_SET_*
 * ```
 * Hash: 0xE141F6B40B1E3683 | ApiSet: undefined
 */
export function _0xE141F6B40B1E3683(value) {
    return Citizen.invokeNative('0xE141F6B40B1E3683', value);
}
/**
 * Hash: 0xF21A5D66874FCEDD | ApiSet: undefined
 */
export function _0xF21A5D66874FCEDD(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    Citizen.invokeNative('0xF21A5D66874FCEDD', p0, p1, p2);
}
/**
 * Hash: 0xE5A680A5D8B1F687 | ApiSet: undefined
 */
export function _0xE5A680A5D8B1F687(p0) {
    Citizen.invokeNative('0xE5A680A5D8B1F687', p0);
}
/**
 * Hash: 0xF8181B5EF156862C | ApiSet: undefined
 */
export function _0xF8181B5EF156862C(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF8181B5EF156862C', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xF2B5ABDE09958689 | ApiSet: undefined
 */
export function _0xF2B5ABDE09958689(unlockHash, ped1, ped2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    Citizen.invokeNative('0xF2B5ABDE09958689', unlockHash, _ped1, _ped2);
}
/**
 * ```
 * Related to animal tagging
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x90E9A5DADBABC918 | ApiSet: undefined
 */
export function statAddAnimalSampleTarget(animalType) {
    if (typeof animalType === 'string')
        animalType = this.getHashKey(animalType);
    StatAddAnimalSampleTarget(animalType);
}
/**
 * Hash: 0x6B1044FDC2B09101 | ApiSet: undefined
 */
export function statAddBountyTarget(unlockHash, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    StatAddBountyTarget(unlockHash, _ped);
}
/**
 * Hash: 0x262EF7CF49CF1EB9 | ApiSet: undefined
 */
export function statBountyCaptured(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    StatBountyCaptured(_entity);
}
/**
 * Hash: 0xB22F05732F72F70C | ApiSet: undefined
 */
export function statBountyEscaped(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StatBountyEscaped(_ped);
}
/**
 * Hash: 0x831BF01C56149A8A | ApiSet: undefined
 */
export function statCarriedSatchelItemFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StatCarriedSatchelItemFromPed(_ped);
}
/**
 * ```
 * Calculation: (value / 1000) / 60 % 60
 * ```
 * Hash: 0x1E7384AB5D4F4581 | ApiSet: undefined
 */
export function statCalculateCooldown(value) {
    return StatCalculateCooldown(value);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0xBD861AE8A5181ED7 | ApiSet: undefined
 */
export function statIdDecrementInt(value) {
    return StatIdDecrementInt(value);
}
/**
 * Hash: 0x7C2ABF6E556B21FC | ApiSet: undefined
 */
export function statDonateIncrementItem(item, slot, p2, p3) {
    StatDonateIncrementItem(item, slot, p2, p3);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x11B5E6D2AE73F48F | ApiSet: undefined
 */
export function statIdGetBool() {
    return StatIdGetBool();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x8B0FACEFC36C824C | ApiSet: undefined
 */
export function statIdGetDate() {
    return StatIdGetDate();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0xD7AE6C9C9C6AC54D | ApiSet: undefined
 */
export function statIdGetFloat() {
    return StatIdGetFloat();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x767FBC2AC802EF3E | ApiSet: undefined
 */
export function statIdGetInt() {
    return StatIdGetInt();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x6A0184E904CDF25E | ApiSet: undefined
 */
export function statIdIncrementInt(value) {
    return StatIdIncrementInt(value);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x4A47E38EA3D60939 | ApiSet: undefined
 */
export function statIdIncrementFloat(value) {
    return StatIdIncrementFloat(value);
}
/**
 * ```
 * struct StatId
 * {
 * alignas(8) Hash BaseId;
 * alignas(8) Hash PermutationId;
 * }
 * ```
 * Hash: 0xC48FE1971C9743FF | ApiSet: undefined
 */
export function statIdIsValid() {
    return StatIdIsValid();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x3B5107353267D7A1 | ApiSet: undefined
 */
export function statIdSetBool(value, p2) {
    return StatIdSetBool(value, p2);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x1FAE9B2FAA2DFE06 | ApiSet: undefined
 */
export function statIdSetDate(p2) {
    return StatIdSetDate(p2);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x481BDF6A10C5EF68 | ApiSet: undefined
 */
export function statIdSetFloat(value, p2) {
    return StatIdSetFloat(value, p2);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0xA4DDF5DF95E65EEE | ApiSet: undefined
 */
export function statIdSetInt(value, p2) {
    return StatIdSetInt(value, p2);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x05060A54834F2382 | ApiSet: undefined
 */
export function statIdSetGxtLabel(label, p2) {
    return StatIdSetGxtLabel(label, p2);
}
/**
 * Hash: 0xDA26263C87CCE9C1 | ApiSet: undefined
 */
export function statItemFishCaught(fish, weight, category, subcategory) {
    const _fish = fish instanceof Ped ? fish.handle() : fish;
    if (typeof category === 'string')
        category = this.getHashKey(category);
    if (typeof subcategory === 'string')
        subcategory = this.getHashKey(subcategory);
    StatItemFishCaught(_fish, weight, category, subcategory);
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * Hash: 0x34B22DE38477EDB4 | ApiSet: undefined
 */
export function statIdSetToPosseId() {
    return StatIdSetToPosseId();
}
/**
 * ```
 * statId: see STAT_ID_IS_VALID
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x5420D398A42917FC | ApiSet: undefined
 */
export function statPheromoneCooldownLegendaryAnimal(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return StatPheromoneCooldownLegendaryAnimal(_entity);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4D31051A4CA83787 | ApiSet: undefined
 */
export function statPhotographTaken(itemset) {
    StatPhotographTaken(itemset);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xCD0D69C65BB0E8B9 | ApiSet: undefined
 */
export function statRegisterLegendaryAnimalDeed(deedHash) {
    if (typeof deedHash === 'string')
        deedHash = this.getHashKey(deedHash);
    StatRegisterLegendaryAnimalDeed(deedHash);
}
/**
 * Hash: 0xB2A38826E5886E83 | ApiSet: undefined
 */
export function statstrackerDeedStarted(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    StatstrackerDeedStarted(p0, p1);
}
/**
 * Hash: 0x01F4D242765C6B24 | ApiSet: undefined
 */
export function statstrackerIsInitialized(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return StatstrackerIsInitialized(p0);
}
/**
 * Hash: 0xD5910ECF81A2278C | ApiSet: undefined
 */
export function statstrackerDeedStatus(deedType, deedHash, missionStatus) {
    if (typeof deedHash === 'string')
        deedHash = this.getHashKey(deedHash);
    return StatstrackerDeedStatus(deedType, deedHash, missionStatus);
}
/**
 * Hash: 0xBA61BA6205A3F5A8 | ApiSet: undefined
 */
export function weeklyCollectibleGetItemInSet(chalHash, setIndex, itemIndex) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return WeeklyCollectibleGetItemInSet(chalHash, setIndex, itemIndex);
}
/**
 * Hash: 0x610783F646894D25 | ApiSet: undefined
 */
export function weeklyCollectibleGetItemSetBuyAward(chalHash, index) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return WeeklyCollectibleGetItemSetBuyAward(chalHash, index);
}
/**
 * Hash: 0x7D675C9DDDB365BE | ApiSet: undefined
 */
export function weeklyCollectibleGetNumItemsInSet(chalHash, index) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return WeeklyCollectibleGetNumItemsInSet(chalHash, index);
}
/**
 * Hash: 0xBFFA88522FF0F730 | ApiSet: undefined
 */
export function weeklyCollectibleGetItemSetLabel(chalHash, index) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return WeeklyCollectibleGetItemSetLabel(chalHash, index);
}
/**
 * Hash: 0x8F5317729F791D10 | ApiSet: undefined
 */
export function weeklyCollectibleGetNumSets(chalHash) {
    if (typeof chalHash === 'string')
        chalHash = this.getHashKey(chalHash);
    return WeeklyCollectibleGetNumSets(chalHash);
}
/**
 * ```
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
 * ```
 * Hash: 0xB56D41A694E42E86 | ApiSet: undefined
 */
export function addAmbientAvoidanceRestriction(volume, includeFlags, excludeFlags, p3, p4, p5, p6) {
    if (typeof p3 === 'string')
        p3 = this.getHashKey(p3);
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    if (typeof p5 === 'string')
        p5 = this.getHashKey(p5);
    AddAmbientAvoidanceRestriction(volume, includeFlags, excludeFlags, p3, p4, p5, p6);
}
/**
 * ```
 * flags: see 0xB56D41A694E42E86
 * ```
 * Hash: 0x18262CAFEBB5FBE1 | ApiSet: undefined
 */
export function addAmbientSpawnRestriction(volume, includeFlags, excludeFlags, p3, p4, p5, p6) {
    if (typeof p3 === 'string')
        p3 = this.getHashKey(p3);
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    if (typeof p5 === 'string')
        p5 = this.getHashKey(p5);
    AddAmbientSpawnRestriction(volume, includeFlags, excludeFlags, p3, p4, p5, p6);
}
/**
 * Hash: 0x217A54DE2D200305 | ApiSet: undefined
 */
export function clearSpawnerInfoPriority(p0, p1) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    ClearSpawnerInfoPriority(p0, p1);
}
/**
 * Hash: 0xA6E6A66FC4CA4224 | ApiSet: undefined
 */
export function deleteScriptPopzone(popZone) {
    DeleteScriptPopzone(popZone);
}
/**
 * Hash: 0xC6DCC2A3A8825C85 | ApiSet: undefined
 */
export function disableAmbientRoadPopulation(unk) {
    DisableAmbientRoadPopulation(unk);
}
/**
 * Hash: 0x9AC1C64FE46B6D09 | ApiSet: undefined
 */
export function createPopzoneFromVolume(volume) {
    return CreatePopzoneFromVolume(volume);
}
/**
 * Hash: 0x3EAFA1C533B7139E | ApiSet: undefined
 */
export function getPedModelNameInPopulationSet(popSetHash, index) {
    if (typeof popSetHash === 'string')
        popSetHash = this.getHashKey(popSetHash);
    return GetPedModelNameInPopulationSet(popSetHash, index);
}
/**
 * Hash: 0xBC90BDF4E5228EA1 | ApiSet: undefined
 */
export function enableAmbientRoadPopulation() {
    EnableAmbientRoadPopulation();
}
/**
 * Hash: 0x6B12ED8C77E8567B | ApiSet: undefined
 */
export function getRandomModelFromPopulationSet(popSetHash, flags, p2, p3, p4, position) {
    if (typeof popSetHash === 'string')
        popSetHash = this.getHashKey(popSetHash);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return GetRandomModelFromPopulationSet(popSetHash, flags, p2, p3, p4, position.x, position.y, position.z);
}
/**
 * Hash: 0xA1E3171ED0E47564 | ApiSet: undefined
 */
export function getNumModelsInPopulationSet(popSetHash) {
    if (typeof popSetHash === 'string')
        popSetHash = this.getHashKey(popSetHash);
    return GetNumModelsInPopulationSet(popSetHash);
}
/**
 * Hash: 0xA5BD585005EFCAD4 | ApiSet: undefined
 */
export function isPopzoneValid(popZone) {
    return IsPopzoneValid(popZone);
}
/**
 * ```
 * Returns model hash of the closest fish
 * ```
 * Hash: 0x595478B3BBC3076D | ApiSet: undefined
 */
export function getRandomFishTypeForLocation() {
    return GetRandomFishTypeForLocation();
}
/**
 * Hash: 0x0F1861101C9A9944 | ApiSet: undefined
 */
export function _0x0F1861101C9A9944(popZone, p1) {
    Citizen.invokeNative('0x0F1861101C9A9944', popZone, p1);
}
/**
 * Hash: 0x08892122769770D5 | ApiSet: undefined
 */
export function _0x08892122769770D5(popZone, p1) {
    Citizen.invokeNative('0x08892122769770D5', popZone, p1);
}
/**
 * Hash: 0x247F86595D396344 | ApiSet: undefined
 */
export function _0x247F86595D396344(p0) {
    Citizen.invokeNative('0x247F86595D396344', p0);
}
/**
 * Hash: 0x578E2FA64E847C60 | ApiSet: undefined
 */
export function _0x578E2FA64E847C60(popZone, p1) {
    Citizen.invokeNative('0x578E2FA64E847C60', popZone, p1);
}
/**
 * Hash: 0x2161278C6322F740 | ApiSet: undefined
 */
export function _0x2161278C6322F740(includeFlags, excludeFlags, p2, p3, p4, volume) {
    if (typeof p3 === 'string')
        p3 = this.getHashKey(p3);
    Citizen.invokeNative('0x2161278C6322F740', includeFlags, excludeFlags, p2, p3, p4, volume);
}
/**
 * Hash: 0x638FCFC6042A9473 | ApiSet: undefined
 */
export function _0x638FCFC6042A9473(p0, p1) {
    Citizen.invokeNative('0x638FCFC6042A9473', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x2660E7720EDC4BD0 | ApiSet: undefined
 */
export function _0x2660E7720EDC4BD0(p0, p1, p2) {
    Citizen.invokeNative('0x2660E7720EDC4BD0', p0, p1, p2);
}
/**
 * Hash: 0x324AB2A68AD8AEE5 | ApiSet: undefined
 */
export function _0x324AB2A68AD8AEE5() {
    Citizen.invokeNative('0x324AB2A68AD8AEE5');
}
/**
 * Hash: 0x7E6BC0B94F5928F0 | ApiSet: undefined
 */
export function _0x7E6BC0B94F5928F0(popZone, p1, p2) {
    Citizen.invokeNative('0x7E6BC0B94F5928F0', popZone, p1, p2);
}
/**
 * Hash: 0xC4533E3E87125C9E | ApiSet: undefined
 */
export function _0xC4533E3E87125C9E(p0) {
    Citizen.invokeNative('0xC4533E3E87125C9E', p0);
}
/**
 * Hash: 0x8EC7CD701F872F87 | ApiSet: undefined
 */
export function _0x8EC7CD701F872F87(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0x8EC7CD701F872F87', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xDBBF12EA7C1029B2 | ApiSet: undefined
 */
export function _0xDBBF12EA7C1029B2(p0, p1) {
    Citizen.invokeNative('0xDBBF12EA7C1029B2', p0, p1);
}
/**
 * ```
 * Only used for Special Event (XMAS).
 * _SET_P*
 * ```
 * Hash: 0xEC116EDB683AD479 | ApiSet: undefined
 */
export function _0xEC116EDB683AD479(p0) {
    Citizen.invokeNative('0xEC116EDB683AD479', p0);
}
/**
 * ```
 * flags: see 0xB56D41A694E42E86
 * ```
 * Hash: 0x74C2B3DC0B294102 | ApiSet: undefined
 */
export function removeAmbientAvoidanceRestriction(volume) {
    RemoveAmbientAvoidanceRestriction(volume);
}
/**
 * Hash: 0xF45E46DEECF7DF6E | ApiSet: undefined
 */
export function _0xF45E46DEECF7DF6E(bitFlag, p1, p2, p3, p4) {
    Citizen.invokeNative('0xF45E46DEECF7DF6E', bitFlag, p1, p2, p3, p4);
}
/**
 * Hash: 0xA1CFB35069D23C23 | ApiSet: undefined
 */
export function removeAmbientSpawnRestriction(volume) {
    RemoveAmbientSpawnRestriction(volume);
}
/**
 * ```
 * Params: p1 = 1 & 2 in R* Scripts, 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
 * ```
 * Hash: 0xF74E134F40192884 | ApiSet: undefined
 */
export function setPedShouldIgnoreAvoidanceVolumes(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedShouldIgnoreAvoidanceVolumes(_ped, p1);
}
/**
 * Hash: 0x3E6A49D9B519E85C | ApiSet: undefined
 */
export function setPopzonePopulationSet(popZone, populationSetHash) {
    if (typeof populationSetHash === 'string')
        populationSetHash = this.getHashKey(populationSetHash);
    SetPopzonePopulationSet(popZone, populationSetHash);
}
/**
 * Hash: 0x60CDE717A6D47769 | ApiSet: undefined
 */
export function setSpawnerInfoPriority(p0, p1, priority) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetSpawnerInfoPriority(p0, p1, priority);
}
/**
 * Hash: 0x09C28F828EE674FA | ApiSet: undefined
 */
export function boostPlayerHorseSpeedForTime(player, speedBoost, duration) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    BoostPlayerHorseSpeedForTime(_player, speedBoost, duration);
}
/**
 * ```
 * Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
 * followMode:
 * HORSEFOLLOWMODE_AUTO = 0,
 * HORSEFOLLOWMODE_SIDE_ONLY,
 * HORSEFOLLOWMODE_BEHIND_ONLY,
 * HORSEFOLLOWMODE_BEHIND_AND_SIDE,
 * HORSEFOLLOWMODE_BEHIND_CLOSE
 * followPriority:
 * HORSEFOLLOWPRIORITY_STEER_ASSIST = 0,
 * HORSEFOLLOWPRIORITY_AMBIENT,
 * HORSEFOLLOWPRIORITY_NORMAL,
 * HORSEFOLLOWPRIORITY_HIGH
 * ```
 * Hash: 0xAC22AA6DF4D1C1DE | ApiSet: undefined
 */
export function addPlayerAsFollowTarget(player, ped, p2, p3, followMode, followPriority, p6) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddPlayerAsFollowTarget(_player, _ped, p2, p3, followMode, followPriority, p6);
}
/**
 * Hash: 0x8F2A81C09DA9124A | ApiSet: undefined
 */
export function clearBountyTarget(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearBountyTarget(_player);
}
/**
 * Hash: 0x2DF170B1185AF777 | ApiSet: undefined
 */
export function canPlayerStartMission(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return CanPlayerStartMission(_player);
}
/**
 * Hash: 0x0361096D6CE4372C | ApiSet: undefined
 */
export function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearPlayerHasDamagedAtLeastOneNonAnimalPed(_player);
}
/**
 * Hash: 0x270B63A641BE32F2 | ApiSet: undefined
 */
export function clearPlayerHasDamagedAtLeastOnePed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearPlayerHasDamagedAtLeastOnePed(_player);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x4E4B996C928C7AA6 | ApiSet: undefined
 */
export function clearPlayerWantedLevel(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ClearPlayerWantedLevel(_player);
}
/**
 * ```
 * Inhibits the player from using any method of combat including melee and firearms.
 * NOTE: Only disables the firing for one frame
 * ```
 * Hash: 0x2970929FD5F9FC89 | ApiSet: undefined
 */
export function disablePlayerFiring(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    DisablePlayerFiring(_player, toggle);
}
/**
 * Hash: 0x40AB73092C95B5F5 | ApiSet: undefined
 */
export function eagleEyeDisableTrackingTrail(entity, trail, p2, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    EagleEyeDisableTrackingTrail(_entity, trail, p2, p3);
}
/**
 * Hash: 0x907B16B3834C69E2 | ApiSet: undefined
 */
export function eagleEyeSetCustomDistance(entity, distance) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    EagleEyeSetCustomDistance(_entity, distance);
}
/**
 * ```
 * false: default eagleeye color
 * true: green eagleeye color
 * ```
 * Hash: 0x2C41D93F550D5E37 | ApiSet: undefined
 */
export function eagleEyeSetColor(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return EagleEyeSetColor(_player, p1);
}
/**
 * Hash: 0x62ED71E133B6C9F1 | ApiSet: undefined
 */
export function eagleEyeSetCustomEntityTint(entity, red, green, blue) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    EagleEyeSetCustomEntityTint(_entity, red, green, blue);
}
/**
 * Hash: 0xE0D6C2A146A5C993 | ApiSet: undefined
 */
export function eagleEyeSetDrainRateModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    EagleEyeSetDrainRateModifier(_player, modifier);
}
/**
 * Hash: 0x2AF423D6ECB2C485 | ApiSet: undefined
 */
export function eagleEyeSetFocusOnAssociatedClueTrail(player, linkedWaypointPed) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _linkedWaypointPed = linkedWaypointPed instanceof Entity ? linkedWaypointPed.handle() : linkedWaypointPed;
    EagleEyeSetFocusOnAssociatedClueTrail(_player, _linkedWaypointPed);
}
/**
 * Hash: 0xDFC85C5199045026 | ApiSet: undefined
 */
export function eagleEyeSetTrackingUpgrade(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    EagleEyeSetTrackingUpgrade(_player, p1);
}
/**
 * Hash: 0xCE285A4413B00B7F | ApiSet: undefined
 */
export function eagleEyeSetPlusFlagDisabled(ped, disabled) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EagleEyeSetPlusFlagDisabled(_ped, disabled);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x6FA957D1B55941C1 | ApiSet: undefined
 */
export function eagleEyeSetTrackingUpgrade2(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    EagleEyeSetTrackingUpgrade2(_player, p1);
}
/**
 * Hash: 0x95EE1DEE1DCD9070 | ApiSet: undefined
 */
export function enableCustomDeadeyeAbility(player, enable) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    EnableCustomDeadeyeAbility(_player, enable);
}
/**
 * ```
 * (Un)lock Eagle Eye functionality
 * ```
 * Hash: 0xA63FCAD3A6FEC6D2 | ApiSet: undefined
 */
export function enableEagleeye(player, enable) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    EnableEagleeye(_player, enable);
}
/**
 * Hash: 0x768C017FB878E4F4 | ApiSet: undefined
 */
export function forceCleanup(cleanupFlags) {
    ForceCleanup(cleanupFlags);
}
/**
 * Hash: 0xF4C9512A2F0A3031 | ApiSet: undefined
 */
export function forceCleanupForThreadWithThisId(id, cleanupFlags) {
    ForceCleanupForThreadWithThisId(id, cleanupFlags);
}
/**
 * Hash: 0xDAACAF8B687F2353 | ApiSet: undefined
 */
export function forceCleanupForAllThreadsWithThisName(name, cleanupFlags) {
    ForceCleanupForAllThreadsWithThisName(name, cleanupFlags);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE5A3DD2FF84E1A4B | ApiSet: undefined
 */
export function forceRestScenario(toggle) {
    ForceRestScenario(toggle);
}
/**
 * Hash: 0x5B6193813E03E4E9 | ApiSet: undefined
 */
export function formatPlayerNameString(string) {
    return FormatPlayerNameString(string);
}
/**
 * Hash: 0x46FA0AE18F4C7FA9 | ApiSet: undefined
 */
export function getActiveHorseForPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetActiveHorseForPlayer(_player);
}
/**
 * Hash: 0x2E78D822208E740A | ApiSet: undefined
 */
export function getAiPlayerDefenseModifierAgainstAi(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetAiPlayerDefenseModifierAgainstAi(_player);
}
/**
 * Hash: 0x84E8E29EBD4A46D2 | ApiSet: undefined
 */
export function getCauseOfMostRecentForceCleanup() {
    return GetCauseOfMostRecentForceCleanup();
}
/**
 * ```
 * p0: mostly Ped Hashes
 * ```
 * Hash: 0x8E84119A23C16623 | ApiSet: undefined
 */
export function getConstructedDiscoveredCharacterName(p0, model, outfit) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return GetConstructedDiscoveredCharacterName(p0, model, outfit);
}
/**
 * Hash: 0xCCE7C695C164C35F | ApiSet: undefined
 */
export function getDeadeyeAbilityLevel(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetDeadeyeAbilityLevel(_player);
}
/**
 * Hash: 0xA6817C110B830EAD | ApiSet: undefined
 */
export function getEntityPlayerIsFreeAimingAt(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetEntityPlayerIsFreeAimingAt(_player);
}
/**
 * ```
 * Returns name hash (name) and outHash includes the type.
 * ```
 * Hash: 0x0139637A3BFF8B6D | ApiSet: undefined
 */
export function getDiscoverableNameHashAndTypeForEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetDiscoverableNameHashAndTypeForEntity(_entity);
}
/**
 * Hash: 0x354F689C4FFAAB37 | ApiSet: undefined
 */
export function getHasPlayerDiscoveredCharacterNameMp(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    return GetHasPlayerDiscoveredCharacterNameMp(discoveryHash);
}
/**
 * Hash: 0x0772F87D7B07719A | ApiSet: undefined
 */
export function getHasPlayerDiscoveredCharacterNameSp(player, p1, discoveryHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    return GetHasPlayerDiscoveredCharacterNameSp(_player, p1, discoveryHash);
}
/**
 * Hash: 0x32348719DCED2969 | ApiSet: undefined
 */
export function getIsDeadeyeTaggingEnabled(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetIsDeadeyeTaggingEnabled(_player);
}
/**
 * ```
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 * ```
 * Hash: 0xD04CFAD1E2B7984A | ApiSet: undefined
 */
export function getMaxWantedLevel() {
    return GetMaxWantedLevel();
}
/**
 * Hash: 0x51BEA356B1C60225 | ApiSet: undefined
 */
export function getIsPlayerUiPromptActive(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetIsPlayerUiPromptActive(_player, p1);
}
/**
 * Hash: 0xF49F14462F0AE27C | ApiSet: undefined
 */
export function getMountOwnedByPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetMountOwnedByPlayer(_player);
}
/**
 * Hash: 0xCCD9B77F70D31C9D | ApiSet: undefined
 */
export function getNumMarkedDeadeyeTargets(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetNumMarkedDeadeyeTargets(_player);
}
/**
 * Hash: 0xDF66A37936D5F3D9 | ApiSet: undefined
 */
export function getPlayerCachedDeadEyeAmount(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerCachedDeadEyeAmount(_player);
}
/**
 * Hash: 0xD7ECC25E176ECBA5 | ApiSet: undefined
 */
export function getPlayerCurrentStealthNoise(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerCurrentStealthNoise(_player);
}
/**
 * Hash: 0xA81D24AE0AF99A5E | ApiSet: undefined
 */
export function getPlayerDeadEye(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerDeadEye(_player);
}
/**
 * Hash: 0x3A6AE4EEE30370FE | ApiSet: undefined
 */
export function getPlayerDeadEyeMeterLevel(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerDeadEyeMeterLevel(_player, p1);
}
/**
 * ```
 * Returns the group ID the player is member of.
 * ```
 * Hash: 0x9BAB31815159ABCF | ApiSet: undefined
 */
export function getPlayerGroup(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerGroup(_player);
}
/**
 * Hash: 0x0317C947D062854E | ApiSet: undefined
 */
export function getPlayerHealth(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerHealth(_player);
}
/**
 * Hash: 0x22CD23BB0C45E0CD | ApiSet: undefined
 */
export function getPlayerHealthRechargeMultiplier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerHealthRechargeMultiplier(_player);
}
/**
 * Hash: 0x5CA6BBD4A7D8145E | ApiSet: undefined
 */
export function getPlayerHuntingWagon(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerHuntingWagon(_player);
}
/**
 * ```
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 * ```
 * Hash: 0x47E385B0D957C8D4 | ApiSet: undefined
 */
export function getPlayerIndex() {
    return GetPlayerIndex();
}
/**
 * Hash: 0x3EE1F7A8C32F24E1 | ApiSet: undefined
 */
export function getPlayerInteractionTargetEntity(player, p2, p3) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerInteractionTargetEntity(_player, p2, p3);
}
/**
 * ```
 * Returns the player's invincibility status.
 * ```
 * Hash: 0x0CBBCB2CCFA7DC4E | ApiSet: undefined
 */
export function getPlayerInvincible(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerInvincible(_player);
}
/**
 * Hash: 0x592F58BC4D2A2CF3 | ApiSet: undefined
 */
export function getPlayerMaxDeadEye(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerMaxDeadEye(_player, p1);
}
/**
 * ```
 * See _SET_PLAYER_MOOD
 * ```
 * Hash: 0x054473164C012699 | ApiSet: undefined
 */
export function getPlayerMood(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerMood(_player);
}
/**
 * Hash: 0x7124FD9AC0E01BA0 | ApiSet: undefined
 */
export function getPlayerName(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerName(_player);
}
/**
 * Hash: 0xAD03B03737CE6810 | ApiSet: undefined
 */
export function getPlayerOwnerOfMount(mount) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    return GetPlayerOwnerOfMount(_mount);
}
/**
 * Hash: 0x7C803BDC8343228D | ApiSet: undefined
 */
export function getPlayerOwnerOfVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetPlayerOwnerOfVehicle(_vehicle);
}
/**
 * Hash: 0x275F255ED201B937 | ApiSet: undefined
 */
export function getPlayerPed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerPed(_player);
}
/**
 * ```
 * `Does the same like PLAYER::GET_PLAYER_PED`
 * ```
 * Hash: 0x5C880F9056D784C8 | ApiSet: undefined
 */
export function getPlayerPedScriptIndex(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerPedScriptIndex(_player);
}
/**
 * Hash: 0xFB6EB8785F808551 | ApiSet: undefined
 */
export function getPlayerReceivedBattleEventRecently(player, p1, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerReceivedBattleEventRecently(_player, p1, p2);
}
/**
 * Hash: 0x5EBE38A20BC51C27 | ApiSet: undefined
 */
export function getPlayerPed2(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerPed2(_player);
}
/**
 * ```
 * playerResetFlag: See 0x9F9A829C6751F3C7
 * ```
 * Hash: 0xFE691E89C08937B6 | ApiSet: undefined
 */
export function getPlayerResetFlag(player, playerResetFlag) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerResetFlag(_player, playerResetFlag);
}
/**
 * ```
 * If player has less Dead Eye than required, Dead Eye cant be triggered.
 * ```
 * Hash: 0x811A748B1BE231BA | ApiSet: undefined
 */
export function getPlayerRequiredDeadEyeAmount(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerRequiredDeadEyeAmount(_player);
}
/**
 * Hash: 0x0FF421E467373FCF | ApiSet: undefined
 */
export function getPlayerStamina(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerStamina(_player);
}
/**
 * Hash: 0xAB3773E7AA1E9DCC | ApiSet: undefined
 */
export function getPlayerSpecialAbilityMultiplier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerSpecialAbilityMultiplier(_player);
}
/**
 * Hash: 0x68A0389E0718AC8F | ApiSet: undefined
 */
export function getPlayerStaminaDepletionMultiplier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerStaminaDepletionMultiplier(_player);
}
/**
 * Hash: 0x617D3494AD58200F | ApiSet: undefined
 */
export function getPlayerStaminaRechargeMultiplier(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerStaminaRechargeMultiplier(_player);
}
/**
 * Hash: 0xAE663DDD99C8A670 | ApiSet: undefined
 */
export function getPlayerTargetEntity(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerTargetEntity(_player);
}
/**
 * ```
 * Gets the player's team.
 * Returns -1 in singleplayer.
 * ```
 * Hash: 0xB464EB6A40C7975B | ApiSet: undefined
 */
export function getPlayerTeam(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerTeam(_player);
}
/**
 * ```
 * Returns true if PromptType is enabled for ped (mount)
 * Params: See 0x0751D461F06E41CE
 * ```
 * Hash: 0xEA8F168A76A0B9BC | ApiSet: undefined
 */
export function getPlayerUiPromptForPedIsEnabled(player, ped, promptType, promptMode) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPlayerUiPromptForPedIsEnabled(_player, _ped, promptType, promptMode);
}
/**
 * ```
 * Returns false if PromptType is enabled
 * Params: See 0x0751D461F06E41CE
 * ```
 * Hash: 0x6614F9039BD31931 | ApiSet: undefined
 */
export function getPlayerUiPromptIsDisabled(player, promptType, promptMode) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerUiPromptIsDisabled(_player, promptType, promptMode);
}
/**
 * Hash: 0xABC532F9098BFD9D | ApiSet: undefined
 */
export function getPlayerWantedLevel(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetPlayerWantedLevel(_player);
}
/**
 * Hash: 0x2F96E7720B0B19EA | ApiSet: undefined
 */
export function getPlayersLastVehicle() {
    return GetPlayersLastVehicle();
}
/**
 * Hash: 0xFE0304050261442C | ApiSet: undefined
 */
export function getPlayerWeaponDamage(player, weaponHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetPlayerWeaponDamage(_player, weaponHash);
}
/**
 * Hash: 0x36E3D8B5A6552FE8 | ApiSet: undefined
 */
export function getTargetCharacterNameForLocalPlayer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTargetCharacterNameForLocalPlayer(_ped);
}
/**
 * Hash: 0xB48050D326E9A2F3 | ApiSet: undefined
 */
export function getSaddleHorseForPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetSaddleHorseForPlayer(_player);
}
/**
 * Hash: 0x0335106F3ACABBED | ApiSet: undefined
 */
export function getTargetCharacterNameScriptOverrideHash(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTargetCharacterNameScriptOverrideHash(_ped);
}
/**
 * Hash: 0x755E08680F21EF30 | ApiSet: undefined
 */
export function getTargetCharacterNameScriptOverrideRawString(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTargetCharacterNameScriptOverrideRawString(_ped);
}
/**
 * Hash: 0xB9050A97594C8832 | ApiSet: undefined
 */
export function getVehicleOwnedByPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetVehicleOwnedByPlayer(_player);
}
/**
 * Hash: 0x80B00EB26D9521C7 | ApiSet: undefined
 */
export function getWantedLevelRadius(p0) {
    return GetWantedLevelRadius(p0);
}
/**
 * Hash: 0xD3F7445CEA2E5035 | ApiSet: undefined
 */
export function getTempPlayerHorse(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetTempPlayerHorse(_player);
}
/**
 * ```
 * Returns -1.0f if no multiplier has been set
 * ```
 * Hash: 0xA82964B9D8D6A983 | ApiSet: undefined
 */
export function getWantedLevelMultiplier() {
    return GetWantedLevelMultiplier();
}
/**
 * Hash: 0xC11469DCA6FC3BB5 | ApiSet: undefined
 */
export function hasForceCleanupOccurred(cleanupFlags) {
    return HasForceCleanupOccurred(cleanupFlags);
}
/**
 * Hash: 0x16C8D205DD5A2E90 | ApiSet: undefined
 */
export function hasPlayerDamagedAtLeastOneNonAnimalPed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return HasPlayerDamagedAtLeastOneNonAnimalPed(_player);
}
/**
 * Hash: 0x1B1A3B358F7D8F07 | ApiSet: undefined
 */
export function getWantedLevelThreshold(wantedLevel) {
    return GetWantedLevelThreshold(wantedLevel);
}
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x58FF971FC8F2702C | ApiSet: undefined
 */
export function intToParticipantindex(value) {
    return IntToParticipantindex(value);
}
/**
 * Hash: 0xC932F57F31EA9152 | ApiSet: undefined
 */
export function hasPlayerBeenSpottedInStolenVehicle(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return HasPlayerBeenSpottedInStolenVehicle(_player);
}
/**
 * Hash: 0x8A0643B0B4CA276B | ApiSet: undefined
 */
export function isDeadeyeAbilityLocked(player, abilityType) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsDeadeyeAbilityLocked(_player, abilityType);
}
/**
 * Hash: 0xDA4A4B9B96E20092 | ApiSet: undefined
 */
export function hasPlayerDamagedAtLeastOnePed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return HasPlayerDamagedAtLeastOnePed(_player);
}
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x748B3A65C2604C33 | ApiSet: undefined
 */
export function intToPlayerindex(value) {
    return IntToPlayerindex(value);
}
/**
 * ```
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 * ```
 * Hash: 0xB8A70C22FD48197A | ApiSet: undefined
 */
export function isPlayerClimbing(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerClimbing(_player);
}
/**
 * Hash: 0x0E6846476906C9DD | ApiSet: undefined
 */
export function isEagleEyeRegisteredForEntity(player, entity) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEagleEyeRegisteredForEntity(_player, _entity);
}
/**
 * Hash: 0x2E9C3FCB6798F397 | ApiSet: undefined
 */
export function isPlayerDead(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerDead(_player);
}
/**
 * ```
 * Return true while player is being arrested / busted.
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 * ```
 * Hash: 0xC8183AE963C58374 | ApiSet: undefined
 */
export function isPlayerBeingArrested(player, atArresting) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerBeingArrested(_player, atArresting);
}
/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely.
 * ```
 * Hash: 0x936F967D4BE1CE9D | ApiSet: undefined
 */
export function isPlayerFreeAiming(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerFreeAiming(_player);
}
/**
 * ```
 * Returns whether the player can control himself.
 * ```
 * Hash: 0x7964097FCE4C244B | ApiSet: undefined
 */
export function isPlayerControlOn(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerControlOn(_player);
}
/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 * ```
 * Hash: 0x8C67C11C68713D25 | ApiSet: undefined
 */
export function isPlayerFreeAimingAtEntity(player, entity) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsPlayerFreeAimingAtEntity(_player, _entity);
}
/**
 * Hash: 0xE24C64D9ADED2EF5 | ApiSet: undefined
 */
export function isPlayerFollowingTarget(player, ped) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPlayerFollowingTarget(_player, _ped);
}
/**
 * ```
 * Checks if player is focused on any entity
 * ```
 * Hash: 0x1A51BFE60708E482 | ApiSet: undefined
 */
export function isPlayerFreeFocusing(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerFreeFocusing(_player);
}
/**
 * Hash: 0x04D7F33640662FA2 | ApiSet: undefined
 */
export function isPlayerInScope(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerInScope(_player);
}
/**
 * ```
 * Returns true if the player is riding a train.
 * ```
 * Hash: 0x2FB0ACADA6A238DD | ApiSet: undefined
 */
export function isPlayerRidingTrain(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerRidingTrain(_player);
}
/**
 * ```
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 * ```
 * Hash: 0xBFFB35986CAAE58C | ApiSet: undefined
 */
export function isPlayerPlaying(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerPlaying(_player);
}
/**
 * Hash: 0xAA67BCB0097F2FA3 | ApiSet: undefined
 */
export function isPlayerReadyForCutscene(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerReadyForCutscene(_player);
}
/**
 * Hash: 0xB78350754157C00F | ApiSet: undefined
 */
export function isPlayerScriptControlOn(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerScriptControlOn(_player);
}
/**
 * Hash: 0x27F89FDC16688A7A | ApiSet: undefined
 */
export function isPlayerTargettingEntity(player, entity, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsPlayerTargettingEntity(_player, _entity, p2);
}
/**
 * Hash: 0x4605C66E0F935F83 | ApiSet: undefined
 */
export function isPlayerTargettingAnything(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerTargettingAnything(_player);
}
/**
 * Hash: 0x085EEAEB8783FEB5 | ApiSet: undefined
 */
export function isPlayerTeleportActive() {
    return IsPlayerTeleportActive();
}
/**
 * Hash: 0xE1C0AD4C24324C36 | ApiSet: undefined
 */
export function isPlayerWantedLevelGreater(player, wantedLevel) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsPlayerWantedLevelGreater(_player, wantedLevel);
}
/**
 * Hash: 0x45AB66D02B601FA7 | ApiSet: undefined
 */
export function isSecondarySpecialAbilityActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsSecondarySpecialAbilityActive(_player);
}
/**
 * ```
 * Returns true if eagle eye is enabled for the player
 * ```
 * Hash: 0xE022CC1B545F1D9F | ApiSet: undefined
 */
export function isSecondarySpecialAbilityEnabled(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsSecondarySpecialAbilityEnabled(_player);
}
/**
 * Hash: 0x908258B6209E71F7 | ApiSet: undefined
 */
export function isSystemUiBeingDisplayed() {
    return IsSystemUiBeingDisplayed();
}
/**
 * Hash: 0xB16223CB7DA965F0 | ApiSet: undefined
 */
export function isSpecialAbilityActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return IsSpecialAbilityActive(_player);
}
/**
 * ```
 * Toggle handles wether Deadeye and Eagleeye are infinite or not.
 * ```
 * Hash: 0x28A13BF6B05C3D83 | ApiSet: undefined
 */
export function modifyInfiniteTrailVision(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ModifyInfiniteTrailVision(_player, toggle);
}
/**
 * Hash: 0xFB0E622B401884D3 | ApiSet: undefined
 */
export function modifyPlayerDiscoveredCharacterNameMpSetUndiscovered(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    ModifyPlayerDiscoveredCharacterNameMpSetUndiscovered(discoveryHash);
}
/**
 * ```
 * Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
 * promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
 * ```
 * Hash: 0x0751D461F06E41CE | ApiSet: undefined
 */
export function modifyPlayerUiPrompt(player, promptType, promptMode, disabled) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ModifyPlayerUiPrompt(_player, promptType, promptMode, disabled);
}
/**
 * ```
 * Params: See 0x0751D461F06E41CE
 * ```
 * Hash: 0xA3DB37EDF9A74635 | ApiSet: undefined
 */
export function modifyPlayerUiPromptForPed(player, ped, promptType, promptMode, enabled) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ModifyPlayerUiPromptForPed(_player, _ped, promptType, promptMode, enabled);
}
/**
 * Hash: 0x00B156AFEBCC5AE0 | ApiSet: undefined
 */
export function _0x00B156AFEBCC5AE0(p0) {
    Citizen.invokeNative('0x00B156AFEBCC5AE0', p0);
}
/**
 * Hash: 0x00EB5A760638DB55 | ApiSet: undefined
 */
export function _0x00EB5A760638DB55(p0, p1, p2) {
    Citizen.invokeNative('0x00EB5A760638DB55', p0, p1, p2);
}
/**
 * Hash: 0x03B4B759A8990505 | ApiSet: undefined
 */
export function _0x03B4B759A8990505(p0) {
    return Citizen.invokeNative('0x03B4B759A8990505', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x06C3DB00B69D5435 | ApiSet: undefined
 */
export function _0x06C3DB00B69D5435(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x06C3DB00B69D5435', _player, p1);
}
/**
 * Hash: 0x086549F3B0381CB1 | ApiSet: undefined
 */
export function _0x086549F3B0381CB1(p0, p1) {
    Citizen.invokeNative('0x086549F3B0381CB1', p0, p1);
}
/**
 * Hash: 0x0869D499A7848309 | ApiSet: undefined
 */
export function _0x0869D499A7848309(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0x0869D499A7848309', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x06E1FB78B1E59CA5 | ApiSet: undefined
 */
export function _0x06E1FB78B1E59CA5(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x06E1FB78B1E59CA5', _ped, p1);
}
/**
 * Hash: 0x0E9057A9DA78D0F8 | ApiSet: undefined
 */
export function _0x0E9057A9DA78D0F8(player, bitflag) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x0E9057A9DA78D0F8', _player, bitflag);
}
/**
 * Hash: 0x08E22898A6AF4905 | ApiSet: undefined
 */
export function _0x08E22898A6AF4905(p0, p1) {
    Citizen.invokeNative('0x08E22898A6AF4905', p0, p1);
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * Hash: 0x0B7803F6F7BB43E0 | ApiSet: undefined
 */
export function _0x0B7803F6F7BB43E0() {
    return Citizen.invokeNative('0x0B7803F6F7BB43E0');
}
/**
 * Hash: 0x0F9CF06986300875 | ApiSet: undefined
 */
export function _0x0F9CF06986300875(p0) {
    Citizen.invokeNative('0x0F9CF06986300875', p0);
}
/**
 * Hash: 0x0F4EAF69DA41AF43 | ApiSet: undefined
 */
export function _0x0F4EAF69DA41AF43(p0) {
    return Citizen.invokeNative('0x0F4EAF69DA41AF43', p0);
}
/**
 * Hash: 0x0FAF95D71ED67ADE | ApiSet: undefined
 */
export function _0x0FAF95D71ED67ADE(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x0FAF95D71ED67ADE', _player, p1);
}
/**
 * Hash: 0x12E09E278C6C29B7 | ApiSet: undefined
 */
export function _0x12E09E278C6C29B7(p0) {
    Citizen.invokeNative('0x12E09E278C6C29B7', p0);
}
/**
 * Hash: 0x107F2A66E1C4C83A | ApiSet: undefined
 */
export function _0x107F2A66E1C4C83A(p0) {
    Citizen.invokeNative('0x107F2A66E1C4C83A', p0);
}
/**
 * Hash: 0x131E294EF60160DF | ApiSet: undefined
 */
export function _0x131E294EF60160DF(player, p1, p2, p3, p4, p5) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x131E294EF60160DF', _player, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x113EF458AB6CDA67 | ApiSet: undefined
 */
export function _0x113EF458AB6CDA67(p0, p1) {
    Citizen.invokeNative('0x113EF458AB6CDA67', p0, p1);
}
/**
 * Hash: 0x14E57F88BA0A07FC | ApiSet: undefined
 */
export function _0x14E57F88BA0A07FC(location) {
    if (typeof location === 'string')
        location = this.getHashKey(location);
    Citizen.invokeNative('0x14E57F88BA0A07FC', location);
}
/**
 * Hash: 0x19B2C7A6C34FAD54 | ApiSet: undefined
 */
export function _0x19B2C7A6C34FAD54(p0, p1) {
    return Citizen.invokeNative('0x19B2C7A6C34FAD54', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x1AD8AD999C27F44A | ApiSet: undefined
 */
export function _0x1AD8AD999C27F44A(p0) {
    Citizen.invokeNative('0x1AD8AD999C27F44A', p0);
}
/**
 * Hash: 0x1A6E84F13C952094 | ApiSet: undefined
 */
export function _0x1A6E84F13C952094(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x1A6E84F13C952094', _player, p1);
}
/**
 * Hash: 0x1D256EED194F5B58 | ApiSet: undefined
 */
export function _0x1D256EED194F5B58(p0) {
    Citizen.invokeNative('0x1D256EED194F5B58', p0);
}
/**
 * Hash: 0x1DA5C5B0923E1B85 | ApiSet: undefined
 */
export function _0x1DA5C5B0923E1B85(p0) {
    return Citizen.invokeNative('0x1DA5C5B0923E1B85', p0);
}
/**
 * Hash: 0x1E8099F449ABB0BA | ApiSet: undefined
 */
export function _0x1E8099F449ABB0BA(p0) {
    return Citizen.invokeNative('0x1E8099F449ABB0BA', p0);
}
/**
 * ```
 * _IS_PLAYER_F*
 * ```
 * Hash: 0x2009F8AB7A5E9D6D | ApiSet: undefined
 */
export function _0x2009F8AB7A5E9D6D(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x2009F8AB7A5E9D6D', _player);
}
/**
 * ```
 * _RESET_PLAYER_A* - _RESET_PLAYER_I*
 * ```
 * Hash: 0x1F488807BC8E0630 | ApiSet: undefined
 */
export function _0x1F488807BC8E0630(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x1F488807BC8E0630', _player);
}
/**
 * Hash: 0x216BC0D3D2E413D2 | ApiSet: undefined
 */
export function _0x216BC0D3D2E413D2(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x216BC0D3D2E413D2', _player, p1);
}
/**
 * Hash: 0x22B3CABEDDB538B2 | ApiSet: undefined
 */
export function _0x22B3CABEDDB538B2(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x22B3CABEDDB538B2', _player, p1);
}
/**
 * Hash: 0x1FDA57E8908F2609 | ApiSet: undefined
 */
export function _0x1FDA57E8908F2609(player, ped, useSteerassist) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x1FDA57E8908F2609', _player, _ped, useSteerassist);
}
/**
 * Hash: 0x22C8B10802301381 | ApiSet: undefined
 */
export function _0x22C8B10802301381(p0, p1) {
    Citizen.invokeNative('0x22C8B10802301381', p0, p1);
}
/**
 * Hash: 0x21091B4BEB6376EE | ApiSet: undefined
 */
export function _0x21091B4BEB6376EE(p0) {
    return Citizen.invokeNative('0x21091B4BEB6376EE', p0);
}
/**
 * Hash: 0x263D69767F76059C | ApiSet: undefined
 */
export function _0x263D69767F76059C(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x263D69767F76059C', _player, p1);
}
/**
 * Hash: 0x27AD7162D3FED01E | ApiSet: undefined
 */
export function _0x27AD7162D3FED01E(p0, p1) {
    return Citizen.invokeNative('0x27AD7162D3FED01E', p0, p1);
}
/**
 * Hash: 0x2B12B6FC8B8772AB | ApiSet: undefined
 */
export function _0x2B12B6FC8B8772AB(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x2B12B6FC8B8772AB', _player, p1);
}
/**
 * Hash: 0x2BB8D58E88777499 | ApiSet: undefined
 */
export function _0x2BB8D58E88777499(p0) {
    Citizen.invokeNative('0x2BB8D58E88777499', p0);
}
/**
 * Hash: 0x2BEED53B912537D0 | ApiSet: undefined
 */
export function _0x2BEED53B912537D0(p0, p1, p2) {
    Citizen.invokeNative('0x2BEED53B912537D0', p0, p1, p2);
}
/**
 * Hash: 0x2E67707BEC52CA4B | ApiSet: undefined
 */
export function _0x2E67707BEC52CA4B(p0) {
    Citizen.invokeNative('0x2E67707BEC52CA4B', p0);
}
/**
 * Hash: 0x2C2D287748E8E9B7 | ApiSet: undefined
 */
export function _0x2C2D287748E8E9B7(p0) {
    Citizen.invokeNative('0x2C2D287748E8E9B7', p0);
}
/**
 * Hash: 0x310CE349E0C0EC4B | ApiSet: undefined
 */
export function _0x310CE349E0C0EC4B(player, ped, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x310CE349E0C0EC4B', _player, _ped, p2);
}
/**
 * Hash: 0x2E1ABE627C95ED9B | ApiSet: undefined
 */
export function _0x2E1ABE627C95ED9B() {
    return Citizen.invokeNative('0x2E1ABE627C95ED9B');
}
/**
 * ```
 * Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
 * ```
 * Hash: 0x325434C68358D282 | ApiSet: undefined
 */
export function _0x325434C68358D282(toggle) {
    Citizen.invokeNative('0x325434C68358D282', toggle);
}
/**
 * Hash: 0x330CA55A3647FA1C | ApiSet: undefined
 */
export function _0x330CA55A3647FA1C(p0, p1) {
    Citizen.invokeNative('0x330CA55A3647FA1C', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x35A33783EC3C3448 | ApiSet: undefined
 */
export function _0x35A33783EC3C3448(p0) {
    Citizen.invokeNative('0x35A33783EC3C3448', p0);
}
/**
 * Hash: 0x3813E11A378958A5 | ApiSet: undefined
 */
export function _0x3813E11A378958A5(p0) {
    return Citizen.invokeNative('0x3813E11A378958A5', p0);
}
/**
 * Hash: 0x3946FC742AC305CD | ApiSet: undefined
 */
export function _0x3946FC742AC305CD(player, ped, p2, position, targetEntity, p7) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    Citizen.invokeNative('0x3946FC742AC305CD', _player, _ped, p2, position.x, position.y, position.z, _targetEntity, p7);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x39D8D7082BC34B72 | ApiSet: undefined
 */
export function _0x39D8D7082BC34B72(p0) {
    Citizen.invokeNative('0x39D8D7082BC34B72', p0);
}
/**
 * Hash: 0x3A8611BD7BDE84F7 | ApiSet: undefined
 */
export function _0x3A8611BD7BDE84F7(p0, p1) {
    Citizen.invokeNative('0x3A8611BD7BDE84F7', p0, p1);
}
/**
 * Hash: 0x3AD212429E095EFB | ApiSet: undefined
 */
export function _0x3AD212429E095EFB(p0, p1) {
    Citizen.invokeNative('0x3AD212429E095EFB', p0, p1);
}
/**
 * Hash: 0x3BB84F812E052C90 | ApiSet: undefined
 */
export function _0x3BB84F812E052C90(p0) {
    Citizen.invokeNative('0x3BB84F812E052C90', p0);
}
/**
 * ```
 * Used in script function INIT_DEADEYE_SLOWDOWN
 * ```
 * Hash: 0x3ACAC8832E77BC93 | ApiSet: undefined
 */
export function _0x3ACAC8832E77BC93(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x3ACAC8832E77BC93', _player, p1);
}
/**
 * Hash: 0x3C4AE8506638C7E2 | ApiSet: undefined
 */
export function _0x3C4AE8506638C7E2(p0, p1) {
    Citizen.invokeNative('0x3C4AE8506638C7E2', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x3B296934DB026873 | ApiSet: undefined
 */
export function _0x3B296934DB026873(p0, p1) {
    Citizen.invokeNative('0x3B296934DB026873', p0, p1);
}
/**
 * Hash: 0x3D9DA5C9EFD20D88 | ApiSet: undefined
 */
export function _0x3D9DA5C9EFD20D88(p0, p1) {
    Citizen.invokeNative('0x3D9DA5C9EFD20D88', p0, p1);
}
/**
 * Hash: 0x3DAABE78A23694BC | ApiSet: undefined
 */
export function _0x3DAABE78A23694BC(p0, p1) {
    Citizen.invokeNative('0x3DAABE78A23694BC', p0, p1);
}
/**
 * Hash: 0x45EF176B532CA851 | ApiSet: undefined
 */
export function _0x45EF176B532CA851(p0, p1) {
    Citizen.invokeNative('0x45EF176B532CA851', p0, p1);
}
/**
 * Hash: 0x497A18F8F88AA9D8 | ApiSet: undefined
 */
export function _0x497A18F8F88AA9D8() {
    Citizen.invokeNative('0x497A18F8F88AA9D8');
}
/**
 * Hash: 0x4DBC4873707E8FD6 | ApiSet: undefined
 */
export function _0x4DBC4873707E8FD6(p0, p1, p2, p3) {
    Citizen.invokeNative('0x4DBC4873707E8FD6', p0, p1, p2, p3);
}
/**
 * ```
 * _SET_SPECIAL_ABILITY_*
 * ```
 * Hash: 0x4D1699543B1C023C | ApiSet: undefined
 */
export function _0x4D1699543B1C023C(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x4D1699543B1C023C', _player, p1);
}
/**
 * Hash: 0x4EC8BE63B8A5D4EF | ApiSet: undefined
 */
export function _0x4EC8BE63B8A5D4EF(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x4EC8BE63B8A5D4EF', _player, p1);
}
/**
 * Hash: 0x4F0D2256AAE94EDA | ApiSet: undefined
 */
export function _0x4F0D2256AAE94EDA(p0) {
    Citizen.invokeNative('0x4F0D2256AAE94EDA', p0);
}
/**
 * Hash: 0x51139D8C17B16FBC | ApiSet: undefined
 */
export function _0x51139D8C17B16FBC(p0) {
    return Citizen.invokeNative('0x51139D8C17B16FBC', p0);
}
/**
 * ```
 * Used in script function INIT_DEADEYE_SLOWDOWN
 * ```
 * Hash: 0x570A13A4CA2799BB | ApiSet: undefined
 */
export function _0x570A13A4CA2799BB(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x570A13A4CA2799BB', _player, p1);
}
/**
 * ```
 * _IS_PLAYER_D* - _IS_PLAYER_F*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x57028FD99886F6F9 | ApiSet: undefined
 */
export function _0x57028FD99886F6F9() {
    return Citizen.invokeNative('0x57028FD99886F6F9');
}
/**
 * Hash: 0x57D9991DC1334151 | ApiSet: undefined
 */
export function _0x57D9991DC1334151(p0) {
    return Citizen.invokeNative('0x57D9991DC1334151', p0);
}
/**
 * Hash: 0x585CE159DB46FADB | ApiSet: undefined
 */
export function _0x585CE159DB46FADB(p0, p1) {
    Citizen.invokeNative('0x585CE159DB46FADB', p0, p1);
}
/**
 * Hash: 0x5C2E5E3CAEEB1F58 | ApiSet: undefined
 */
export function _0x5C2E5E3CAEEB1F58(p0, p1, p2) {
    Citizen.invokeNative('0x5C2E5E3CAEEB1F58', p0, p1, p2);
}
/**
 * Hash: 0x5B7B97E99F84138B | ApiSet: undefined
 */
export function _0x5B7B97E99F84138B(p0) {
    return Citizen.invokeNative('0x5B7B97E99F84138B', p0);
}
/**
 * Hash: 0x65887EAC535A0B0C | ApiSet: undefined
 */
export function _0x65887EAC535A0B0C(p0) {
    Citizen.invokeNative('0x65887EAC535A0B0C', p0);
}
/**
 * ```
 * _IS_PLAYER_S* - _IS_PLAYER_T*
 * ```
 * Hash: 0x621D1B289CAF5978 | ApiSet: undefined
 */
export function _0x621D1B289CAF5978(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x621D1B289CAF5978', _player);
}
/**
 * Hash: 0x6852288340B43239 | ApiSet: undefined
 */
export function _0x6852288340B43239(p0, p1) {
    return Citizen.invokeNative('0x6852288340B43239', p0, p1);
}
/**
 * Hash: 0x628E742FE1F79C4A | ApiSet: undefined
 */
export function _0x628E742FE1F79C4A(p0, p1) {
    Citizen.invokeNative('0x628E742FE1F79C4A', p0, p1);
}
/**
 * Hash: 0x67659A8F248E0141 | ApiSet: undefined
 */
export function _0x67659A8F248E0141(p0, p1) {
    Citizen.invokeNative('0x67659A8F248E0141', p0, p1);
}
/**
 * Hash: 0x6C54E69516CC56BD | ApiSet: undefined
 */
export function _0x6C54E69516CC56BD(p0) {
    return Citizen.invokeNative('0x6C54E69516CC56BD', p0);
}
/**
 * Hash: 0x694FFA4308060CD1 | ApiSet: undefined
 */
export function _0x694FFA4308060CD1(p0, p1) {
    Citizen.invokeNative('0x694FFA4308060CD1', p0, p1);
}
/**
 * Hash: 0x6EDB5D08CB03E763 | ApiSet: undefined
 */
export function _0x6EDB5D08CB03E763(p0, p1) {
    Citizen.invokeNative('0x6EDB5D08CB03E763', p0, p1);
}
/**
 * Hash: 0x6ECFC621A168424C | ApiSet: undefined
 */
export function _0x6ECFC621A168424C(entity1, entity2, p2, p3) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    Citizen.invokeNative('0x6ECFC621A168424C', _entity1, _entity2, p2, p3);
}
/**
 * Hash: 0x73EB2EF2E92D23BF | ApiSet: undefined
 */
export function _0x73EB2EF2E92D23BF() {
    return Citizen.invokeNative('0x73EB2EF2E92D23BF');
}
/**
 * ```
 * _HAS_PLAYER_D*
 * ```
 * Hash: 0x72AD59F7B7FB6E24 | ApiSet: undefined
 */
export function _0x72AD59F7B7FB6E24(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x72AD59F7B7FB6E24', _player, p1);
}
/**
 * Hash: 0x747257807B8721CE | ApiSet: undefined
 */
export function _0x747257807B8721CE(p0, p1) {
    return Citizen.invokeNative('0x747257807B8721CE', p0, p1);
}
/**
 * Hash: 0x76F7E1BCD623A429 | ApiSet: undefined
 */
export function _0x76F7E1BCD623A429(p0) {
    Citizen.invokeNative('0x76F7E1BCD623A429', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x77B0B6D17A3AC9AA | ApiSet: undefined
 */
export function _0x77B0B6D17A3AC9AA(p0, p1) {
    Citizen.invokeNative('0x77B0B6D17A3AC9AA', p0, p1);
}
/**
 * Hash: 0x77E83C315A3B31CA | ApiSet: undefined
 */
export function _0x77E83C315A3B31CA(p0) {
    Citizen.invokeNative('0x77E83C315A3B31CA', p0);
}
/**
 * ```
 * Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
 * _GET_PLAYER_*
 * ```
 * Hash: 0x7AE93C45EC14A166 | ApiSet: undefined
 */
export function _0x7AE93C45EC14A166(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x7AE93C45EC14A166', _player);
}
/**
 * ```
 * _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
 * ```
 * Hash: 0x818241B3EDA84191 | ApiSet: undefined
 */
export function _0x818241B3EDA84191(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x818241B3EDA84191', _player, p1);
}
/**
 * Hash: 0x83C989D5B5B5B466 | ApiSet: undefined
 */
export function _0x83C989D5B5B5B466(p0, p1) {
    Citizen.invokeNative('0x83C989D5B5B5B466', p0, p1);
}
/**
 * Hash: 0x84481018E668E1B8 | ApiSet: undefined
 */
export function _0x84481018E668E1B8(player, ped, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x84481018E668E1B8', _player, _ped, p2);
}
/**
 * Hash: 0x8702D9150D9FBB3D | ApiSet: undefined
 */
export function _0x8702D9150D9FBB3D(p0, p1) {
    return Citizen.invokeNative('0x8702D9150D9FBB3D', p0, p1);
}
/**
 * ```
 * SET_PLAYER_S/T*
 * ```
 * Hash: 0x8591EE69CC3ED257 | ApiSet: undefined
 */
export function _0x8591EE69CC3ED257(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x8591EE69CC3ED257', _player, toggle);
}
/**
 * Hash: 0x8F44EBB3BA8F6D44 | ApiSet: undefined
 */
export function _0x8F44EBB3BA8F6D44(p0, p1) {
    Citizen.invokeNative('0x8F44EBB3BA8F6D44', p0, p1);
}
/**
 * Hash: 0x9044835BE9D9DBFE | ApiSet: undefined
 */
export function _0x9044835BE9D9DBFE(p0, p1) {
    Citizen.invokeNative('0x9044835BE9D9DBFE', p0, p1);
}
/**
 * Hash: 0x9073EC5456651A90 | ApiSet: undefined
 */
export function _0x9073EC5456651A90(p0, p1) {
    Citizen.invokeNative('0x9073EC5456651A90', p0, p1);
}
/**
 * Hash: 0x908D4B72854C8F62 | ApiSet: undefined
 */
export function _0x908D4B72854C8F62(p0) {
    Citizen.invokeNative('0x908D4B72854C8F62', p0);
}
/**
 * ```
 * _GET_A* - _GET_C*
 * ```
 * Hash: 0x927861B2C08DBEA5 | ApiSet: undefined
 */
export function _0x927861B2C08DBEA5(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x927861B2C08DBEA5', _player);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x929DDD5538F3DF1F | ApiSet: undefined
 */
export function _0x929DDD5538F3DF1F(p0, p1) {
    Citizen.invokeNative('0x929DDD5538F3DF1F', p0, p1);
}
/**
 * Hash: 0x93624B36E8851B42 | ApiSet: undefined
 */
export function _0x93624B36E8851B42(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x93624B36E8851B42', _player);
}
/**
 * Hash: 0x9422743A5BA50E10 | ApiSet: undefined
 */
export function _0x9422743A5BA50E10(p0) {
    return Citizen.invokeNative('0x9422743A5BA50E10', p0);
}
/**
 * Hash: 0x9461A8FAB0378E5B | ApiSet: undefined
 */
export function _0x9461A8FAB0378E5B(p0, p1) {
    Citizen.invokeNative('0x9461A8FAB0378E5B', p0, p1);
}
/**
 * Hash: 0x9AFCF9FE1884BF62 | ApiSet: undefined
 */
export function _0x9AFCF9FE1884BF62(p0, p1) {
    Citizen.invokeNative('0x9AFCF9FE1884BF62', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x988C9045531B9FCE | ApiSet: undefined
 */
export function _0x988C9045531B9FCE(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x988C9045531B9FCE', _player, p1);
}
/**
 * Hash: 0x9FC5A003FB76EDBD | ApiSet: undefined
 */
export function _0x9FC5A003FB76EDBD(p0, p1) {
    Citizen.invokeNative('0x9FC5A003FB76EDBD', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xA28056CD1B04B250 | ApiSet: undefined
 */
export function _0xA28056CD1B04B250(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    Citizen.invokeNative('0xA28056CD1B04B250', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * Params: p1 is mostly 15, sometimes 1 in R* Scripts (Function: PLAYER_TOGGLE_PICK_UP_HATS)
 * _SET_PLAYER_*
 * ```
 * Hash: 0xA0C683284DF027C7 | ApiSet: undefined
 */
export function _0xA0C683284DF027C7(player, p1, enable) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xA0C683284DF027C7', _player, p1, enable);
}
/**
 * Hash: 0xA54000D4BFD90BDE | ApiSet: undefined
 */
export function _0xA54000D4BFD90BDE(p0) {
    return Citizen.invokeNative('0xA54000D4BFD90BDE', p0);
}
/**
 * Hash: 0xA342495F93B7B838 | ApiSet: undefined
 */
export function _0xA342495F93B7B838(p0, p1) {
    Citizen.invokeNative('0xA342495F93B7B838', p0, p1);
}
/**
 * Hash: 0xA62BBAAE67A05BB0 | ApiSet: undefined
 */
export function _0xA62BBAAE67A05BB0(p0) {
    return Citizen.invokeNative('0xA62BBAAE67A05BB0', p0);
}
/**
 * Hash: 0xAAED694CE814817F | ApiSet: undefined
 */
export function _0xAAED694CE814817F(p0) {
    return Citizen.invokeNative('0xAAED694CE814817F', p0);
}
/**
 * ```
 * _SET_PLAYER_CAN_BE_* - _SET_PLAYER_CAN_USE_*
 * ```
 * Hash: 0xACA45DDCEF6071C4 | ApiSet: undefined
 */
export function _0xACA45DDCEF6071C4(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xACA45DDCEF6071C4', _player, p1);
}
/**
 * Hash: 0xBA5CA1FEB5DE0DF6 | ApiSet: undefined
 */
export function _0xBA5CA1FEB5DE0DF6(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xBA5CA1FEB5DE0DF6', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xB15CD2F9932C9AB5 | ApiSet: undefined
 */
export function _0xB15CD2F9932C9AB5(p0) {
    return Citizen.invokeNative('0xB15CD2F9932C9AB5', p0);
}
/**
 * ```
 * _IS_PLAYER_I* - _IS_PLAYER_P*
 * ```
 * Hash: 0xB331D8A73F9D2BDF | ApiSet: undefined
 */
export function _0xB331D8A73F9D2BDF(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xB331D8A73F9D2BDF', _player);
}
/**
 * ```
 * NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
 * NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
 * NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_GREET
 * NPEW__ENUM__NUM_EMOTE_CATEGORIES
 * NPEW__ENUM__NUM_DISPLAY_TEXTURES
 * ```
 * Hash: 0xBB6EA5D59E926095 | ApiSet: undefined
 */
export function _0xBB6EA5D59E926095(category, emote) {
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    Citizen.invokeNative('0xBB6EA5D59E926095', category, emote);
}
/**
 * ```
 * Used in script function INIT_DEADEYE_SLOWDOWN
 * _SPECIAL_ABILITY*
 * ```
 * Hash: 0xBBA140062B15A8AC | ApiSet: undefined
 */
export function _0xBBA140062B15A8AC(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xBBA140062B15A8AC', _player);
}
/**
 * Hash: 0xBC02B3D151D3859F | ApiSet: undefined
 */
export function _0xBC02B3D151D3859F(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xBC02B3D151D3859F', _entity, p1);
}
/**
 * ```
 * _GET_PLAYER_I*
 * ```
 * Hash: 0xBEA3A6E5F5F79A6F | ApiSet: undefined
 */
export function _0xBEA3A6E5F5F79A6F(p0, p1) {
    return Citizen.invokeNative('0xBEA3A6E5F5F79A6F', p0, p1);
}
/**
 * Hash: 0xBD96185264DDAAEA | ApiSet: undefined
 */
export function _0xBD96185264DDAAEA(p0, p1) {
    Citizen.invokeNative('0xBD96185264DDAAEA', p0, p1);
}
/**
 * Hash: 0xBEFED69CE8317F91 | ApiSet: undefined
 */
export function _0xBEFED69CE8317F91(p0) {
    return Citizen.invokeNative('0xBEFED69CE8317F91', p0);
}
/**
 * Hash: 0xBED386157F65942C | ApiSet: undefined
 */
export function _0xBED386157F65942C(p0, p1) {
    Citizen.invokeNative('0xBED386157F65942C', p0, p1);
}
/**
 * Hash: 0xC177C827CEFC0AA4 | ApiSet: undefined
 */
export function _0xC177C827CEFC0AA4(p0, p1) {
    Citizen.invokeNative('0xC177C827CEFC0AA4', p0, p1);
}
/**
 * Hash: 0xC4873B053054C04B | ApiSet: undefined
 */
export function _0xC4873B053054C04B(p0, p1, p2, p3, p4, p5, p6, p7) {
    Citizen.invokeNative('0xC4873B053054C04B', p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xC58CE6824E604DEC | ApiSet: undefined
 */
export function _0xC58CE6824E604DEC(p0) {
    Citizen.invokeNative('0xC58CE6824E604DEC', p0);
}
/**
 * ```
 * _DISABLE_*(PLAYER_FORCED_INTERACTION_LOCKON?)
 * ```
 * Hash: 0xC67A4910425F11F1 | ApiSet: undefined
 */
export function _0xC67A4910425F11F1(player, name) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xC67A4910425F11F1', _player, name);
}
/**
 * Hash: 0xC71D07C96946E263 | ApiSet: undefined
 */
export function _0xC71D07C96946E263(p0, p1) {
    Citizen.invokeNative('0xC71D07C96946E263', p0, p1);
}
/**
 * ```
 * Hardcoded to return zero/false.
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xC74EB3F2EC169F6B | ApiSet: undefined
 */
export function _0xC74EB3F2EC169F6B(p0) {
    return Citizen.invokeNative('0xC74EB3F2EC169F6B', p0);
}
/**
 * Hash: 0xC900A465364A85D6 | ApiSet: undefined
 */
export function _0xC900A465364A85D6(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xC900A465364A85D6', _player);
}
/**
 * Hash: 0xC93A9A45430D484E | ApiSet: undefined
 */
export function _0xC93A9A45430D484E(p0) {
    return Citizen.invokeNative('0xC93A9A45430D484E', p0);
}
/**
 * Hash: 0xCA59808E51FD67C4 | ApiSet: undefined
 */
export function _0xCA59808E51FD67C4(p0, p1) {
    Citizen.invokeNative('0xCA59808E51FD67C4', p0, p1);
}
/**
 * Hash: 0xCB0B9506BC91E441 | ApiSet: undefined
 */
export function _0xCB0B9506BC91E441(p0, p1) {
    Citizen.invokeNative('0xCB0B9506BC91E441', p0, p1);
}
/**
 * Hash: 0xCBB54CC7FFFFAB86 | ApiSet: undefined
 */
export function _0xCBB54CC7FFFFAB86(p0, p1, p2, p3) {
    Citizen.invokeNative('0xCBB54CC7FFFFAB86', p0, p1, p2, p3);
}
/**
 * Hash: 0xCB61A63AA53D7D22 | ApiSet: undefined
 */
export function _0xCB61A63AA53D7D22(p0, p1) {
    Citizen.invokeNative('0xCB61A63AA53D7D22', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xCD7CA3013FD12749 | ApiSet: undefined
 */
export function _0xCD7CA3013FD12749(p0, p1) {
    Citizen.invokeNative('0xCD7CA3013FD12749', p0, p1);
}
/**
 * Hash: 0xCDDD4B74660E2335 | ApiSet: undefined
 */
export function _0xCDDD4B74660E2335(p0, p1, p2) {
    Citizen.invokeNative('0xCDDD4B74660E2335', p0, p1, p2);
}
/**
 * Hash: 0xCFB2EED4FCB7BD77 | ApiSet: undefined
 */
export function _0xCFB2EED4FCB7BD77(p0, p1, p2) {
    Citizen.invokeNative('0xCFB2EED4FCB7BD77', p0, p1, p2);
}
/**
 * Hash: 0xCEDC16930526F728 | ApiSet: undefined
 */
export function _0xCEDC16930526F728(p0) {
    Citizen.invokeNative('0xCEDC16930526F728', p0);
}
/**
 * Hash: 0xCFFC3ECCD7A5CCEB | ApiSet: undefined
 */
export function _0xCFFC3ECCD7A5CCEB(player, weapon, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof weapon === 'string')
        weapon = this.getHashKey(weapon);
    Citizen.invokeNative('0xCFFC3ECCD7A5CCEB', _player, weapon, p2);
}
/**
 * Hash: 0xD1A70C1E8D1031FE | ApiSet: undefined
 */
export function _0xD1A70C1E8D1031FE(p0, p1) {
    Citizen.invokeNative('0xD1A70C1E8D1031FE', p0, p1);
}
/**
 * Hash: 0xD1F6B912785BFD35 | ApiSet: undefined
 */
export function _0xD1F6B912785BFD35(p0) {
    return Citizen.invokeNative('0xD1F6B912785BFD35', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD288E02E364972D2 | ApiSet: undefined
 */
export function _0xD288E02E364972D2(p0, p1, p2) {
    Citizen.invokeNative('0xD288E02E364972D2', p0, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD48227263E3D06AE | ApiSet: undefined
 */
export function _0xD48227263E3D06AE(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    Citizen.invokeNative('0xD48227263E3D06AE', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0xDA9D7BE231FE865F | ApiSet: undefined
 */
export function _0xDA9D7BE231FE865F(p0, p1, p2) {
    return Citizen.invokeNative('0xDA9D7BE231FE865F', p0, p1, p2);
}
/**
 * Hash: 0xDAB6A2FC56B7DE65 | ApiSet: undefined
 */
export function _0xDAB6A2FC56B7DE65(p0) {
    return Citizen.invokeNative('0xDAB6A2FC56B7DE65', p0);
}
/**
 * Hash: 0xDC5E09D012D759C4 | ApiSet: undefined
 */
export function _0xDC5E09D012D759C4(entity1, entity2, p2) {
    const _entity1 = entity1 instanceof Entity ? entity1.handle() : entity1;
    const _entity2 = entity2 instanceof Entity ? entity2.handle() : entity2;
    Citizen.invokeNative('0xDC5E09D012D759C4', _entity1, _entity2, p2);
}
/**
 * Hash: 0xDE6C85975F9D4894 | ApiSet: undefined
 */
export function _0xDE6C85975F9D4894(p0) {
    return Citizen.invokeNative('0xDE6C85975F9D4894', p0);
}
/**
 * Hash: 0xDD33A82352C4652F | ApiSet: undefined
 */
export function _0xDD33A82352C4652F(player, ped, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xDD33A82352C4652F', _player, _ped, p2);
}
/**
 * Hash: 0xE50A67C33514A390 | ApiSet: undefined
 */
export function _0xE50A67C33514A390(p0, p1) {
    return Citizen.invokeNative('0xE50A67C33514A390', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xE1D356F5A66D0FFA | ApiSet: undefined
 */
export function _0xE1D356F5A66D0FFA(emote) {
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    return Citizen.invokeNative('0xE1D356F5A66D0FFA', emote);
}
/**
 * ```
 * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
 * ```
 * Hash: 0xE5D3EB37ABC1EB03 | ApiSet: undefined
 */
export function _0xE5D3EB37ABC1EB03(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xE5D3EB37ABC1EB03', _player);
}
/**
 * Hash: 0xE631EAF35828FA67 | ApiSet: undefined
 */
export function _0xE631EAF35828FA67(p0) {
    return Citizen.invokeNative('0xE631EAF35828FA67', p0);
}
/**
 * ```
 * _IS_PLAYER_A* - _IS_PLAYER_BE*
 * ```
 * Hash: 0xE7F8707269544B29 | ApiSet: undefined
 */
export function _0xE7F8707269544B29(player, ped) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xE7F8707269544B29', _player, _ped);
}
/**
 * Hash: 0xE910932F4B30BE23 | ApiSet: undefined
 */
export function _0xE910932F4B30BE23(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xE910932F4B30BE23', _player);
}
/**
 * Hash: 0xE92261BD28C0878F | ApiSet: undefined
 */
export function _0xE92261BD28C0878F(p0) {
    return Citizen.invokeNative('0xE92261BD28C0878F', p0);
}
/**
 * Hash: 0xE956C2340A76272E | ApiSet: undefined
 */
export function _0xE956C2340A76272E(p0) {
    return Citizen.invokeNative('0xE956C2340A76272E', p0);
}
/**
 * Hash: 0xEBB6E27AC2FF32DA | ApiSet: undefined
 */
export function _0xEBB6E27AC2FF32DA(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xEBB6E27AC2FF32DA', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xEACEBAAE0A33FB3F | ApiSet: undefined
 */
export function _0xEACEBAAE0A33FB3F(p0) {
    Citizen.invokeNative('0xEACEBAAE0A33FB3F', p0);
}
/**
 * ```
 * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
 * ```
 * Hash: 0xF21C7A3F3FFBA629 | ApiSet: undefined
 */
export function _0xF21C7A3F3FFBA629(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xF21C7A3F3FFBA629', _player);
}
/**
 * Hash: 0xF993373285053D77 | ApiSet: undefined
 */
export function _0xF993373285053D77(p0, p1, p2) {
    Citizen.invokeNative('0xF993373285053D77', p0, p1, p2);
}
/**
 * Hash: 0xEBFF94328FF7A18A | ApiSet: undefined
 */
export function _0xEBFF94328FF7A18A(p0, p1) {
    Citizen.invokeNative('0xEBFF94328FF7A18A', p0, p1);
}
/**
 * Hash: 0xF4CB347D7B5EB0FD | ApiSet: undefined
 */
export function _0xF4CB347D7B5EB0FD() {
    return Citizen.invokeNative('0xF4CB347D7B5EB0FD');
}
/**
 * Hash: 0xFA7DAAE3959E6C7B | ApiSet: undefined
 */
export function _0xFA7DAAE3959E6C7B(p0, p1) {
    Citizen.invokeNative('0xFA7DAAE3959E6C7B', p0, p1);
}
/**
 * ```
 * Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
 * _SPECIAL_ABILITY*
 * ```
 * Hash: 0xFA437FA0738C370C | ApiSet: undefined
 */
export function _0xFA437FA0738C370C(player, p1, p2, p3, p4) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xFA437FA0738C370C', _player, p1, p2, p3, p4);
}
/**
 * ```
 * Returns true if the given player has a valid ped.
 * ```
 * Hash: 0x0760D6F70EBCC05C | ApiSet: undefined
 */
export function networkHasPlayerValidPed(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return NetworkHasPlayerValidPed(_player);
}
/**
 * ```
 * Returns current player ped
 * ```
 * Hash: 0x096275889B8E0EE0 | ApiSet: undefined
 */
export function playerPedId() {
    return PlayerPedId();
}
/**
 * ```
 * Does exactly the same thing as PLAYER_ID()
 * ```
 * Hash: 0x8A9386F0749A17FA | ApiSet: undefined
 */
export function networkPlayerIdToInt() {
    return NetworkPlayerIdToInt();
}
/**
 * Hash: 0xAC67098A1E54ABB0 | ApiSet: undefined
 */
export function registerEagleEyeTrailsForEntity(player, entity, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RegisterEagleEyeTrailsForEntity(_player, _entity, p2);
}
/**
 * ```
 * This returns YOUR 'identity' as a Player type.
 * Always returns 0 in story mode.
 * ```
 * Hash: 0x217E9DC48139933D | ApiSet: undefined
 */
export function playerId() {
    return PlayerId();
}
/**
 * ```
 * Used for setting up eagle eye for entity
 * Params: p2 = re-register or not?
 * ```
 * Hash: 0x543DFE14BE720027 | ApiSet: undefined
 */
export function registerEagleEyeForEntity(player, entity, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    RegisterEagleEyeForEntity(_player, _entity, p2);
}
/**
 * Hash: 0x0C6B89876262A99D | ApiSet: undefined
 */
export function removePlayerAsFollowTarget(player, ped) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemovePlayerAsFollowTarget(_player, _ped);
}
/**
 * Hash: 0x5CE5CACC01D0F985 | ApiSet: undefined
 */
export function resetLawResponseDelayOverride() {
    ResetLawResponseDelayOverride();
}
/**
 * Hash: 0xCBCCF73FFA69CC6B | ApiSet: undefined
 */
export function reportPoliceSpottedPlayer(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ReportPoliceSpottedPlayer(_player);
}
/**
 * Hash: 0x61A2EECAB274829B | ApiSet: undefined
 */
export function resetPlayerInputGait(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ResetPlayerInputGait(_player);
}
/**
 * Hash: 0x062D14F18E8B0CAE | ApiSet: undefined
 */
export function resetWantedLevelDifficulty(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ResetWantedLevelDifficulty(_player);
}
/**
 * Hash: 0x12917931C31F1750 | ApiSet: undefined
 */
export function resetPlayerArrestState(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    ResetPlayerArrestState(_player);
}
/**
 * Hash: 0xC41F4B6E23FE6A4A | ApiSet: undefined
 */
export function restorePlayerStamina(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    RestorePlayerStamina(_player, p1);
}
/**
 * ```
 * Activates EagleEye, called together with 0x28A13BF6B05C3D83
 * ```
 * Hash: 0x1710BC33CFB83634 | ApiSet: undefined
 */
export function secondarySpecialAbilitySetActive(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SecondarySpecialAbilitySetActive(_player);
}
/**
 * ```
 * Deactivates EagleEye, called together with 0xC0B21F235C02139C
 * ```
 * Hash: 0x64FF4BF9AF59E139 | ApiSet: undefined
 */
export function secondarySpecialAbilitySetDisabled(player, disabled) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SecondarySpecialAbilitySetDisabled(_player, disabled);
}
/**
 * ```
 * Sets Player's Defense against AI modifier
 * ```
 * Hash: 0x914071FF93AF2692 | ApiSet: undefined
 */
export function setAiPlayerDefenseModifierAgainstAi(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetAiPlayerDefenseModifierAgainstAi(_player, modifier);
}
/**
 * ```
 * This can be between 1.0f - 50.0f
 * ```
 * Hash: 0x5DA6500FE849DA16 | ApiSet: undefined
 */
export function setAirDragMultiplierForPlayersVehicle(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetAirDragMultiplierForPlayersVehicle(_player, multiplier);
}
/**
 * Hash: 0x16752DAA7E6D3F72 | ApiSet: undefined
 */
export function setAllNeutralRandomPedsFleeThisFrame(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetAllNeutralRandomPedsFleeThisFrame(_player);
}
/**
 * ```
 * Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
 * ```
 * Hash: 0xE705309B8C6445A4 | ApiSet: undefined
 */
export function setAllRandomPedsFlee(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetAllRandomPedsFlee(_player, toggle);
}
/**
 * Hash: 0xD5C198A62F1DEB0A | ApiSet: undefined
 */
export function setAllRandomPedsFleeThisFrame(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetAllRandomPedsFleeThisFrame(_player);
}
/**
 * Hash: 0x6ADF821FBF21920E | ApiSet: undefined
 */
export function setBountyTarget(player, target) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _target = target instanceof Entity ? target.remoteId() : target;
    SetBountyTarget(_player, _target);
}
/**
 * Hash: 0xBE0C524970892D41 | ApiSet: undefined
 */
export function setBowDrawReductionTimeInDeadeye(player, drawReductionTime) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetBowDrawReductionTimeInDeadeye(_player, drawReductionTime);
}
/**
 * ```
 * Decreases Stamina bar drain speed by % when drawing a bow.
 * ```
 * Hash: 0xFE7C9CF376D23342 | ApiSet: undefined
 */
export function setBowStaminaDrainSpeed(player, staminaDrain) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetBowStaminaDrainSpeed(_player, staminaDrain);
}
/**
 * Hash: 0x5006C36652D6EC56 | ApiSet: undefined
 */
export function setDamageCloseDistanceBonusTotal(player, closeDamageBonus) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDamageCloseDistanceBonusTotal(_player, closeDamageBonus);
}
/**
 * Hash: 0x7761A30432C91297 | ApiSet: undefined
 */
export function setDamageCloseDistanceBonus(player, closeRangeLowerBound, closeRangeUpperBound) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDamageCloseDistanceBonus(_player, closeRangeLowerBound, closeRangeUpperBound);
}
/**
 * Hash: 0xED591CB17C8BA216 | ApiSet: undefined
 */
export function setDamageFarDistanceBonus(player, farRangeLowerBound, farRangeUpperBound) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDamageFarDistanceBonus(_player, farRangeLowerBound, farRangeUpperBound);
}
/**
 * Hash: 0x1F0E3A4434565F8F | ApiSet: undefined
 */
export function setDamageFarDistanceBonusTotal(player, farDamageBonus) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDamageFarDistanceBonusTotal(_player, farDamageBonus);
}
/**
 * ```
 * Only used in R* SP Script short_update
 * ```
 * Hash: 0x870634493CB4372C | ApiSet: undefined
 */
export function setDeadeyeAbilityDepletionDelay(player, delay) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDeadeyeAbilityDepletionDelay(_player, delay);
}
/**
 * ```
 * Max level is 5.
 * ```
 * Hash: 0xF0FE8E790BFEB5BB | ApiSet: undefined
 */
export function setDeadeyeAbilityLevel(player, level) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDeadeyeAbilityLevel(_player, level);
}
/**
 * Hash: 0x6B5DDFB967E5073D | ApiSet: undefined
 */
export function setDeadeyeTaggingEnabled(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDeadeyeTaggingEnabled(_player, toggle);
}
/**
 * Hash: 0x2797B8D66DD0EBB8 | ApiSet: undefined
 */
export function setDeadeyeAbilityLocked(player, abilityType, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDeadeyeAbilityLocked(_player, abilityType, toggle);
}
/**
 * Hash: 0x83FCD6921FC8FD05 | ApiSet: undefined
 */
export function setDeadeyeTaggingConfig(player, filter) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDeadeyeTaggingConfig(_player, filter);
}
/**
 * ```
 * Disables the players ability to be wanted by lawmen
 * ```
 * Hash: 0x8674D138391FFB1B | ApiSet: undefined
 */
export function setDisablePlayerWantedLevel(player, disable) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetDisablePlayerWantedLevel(_player, disable);
}
/**
 * Hash: 0xD2DFC9CCA5596A11 | ApiSet: undefined
 */
export function setLawResponseDelayOverride(p0) {
    SetLawResponseDelayOverride(p0);
}
/**
 * Hash: 0x34630A768925B852 | ApiSet: undefined
 */
export function setEveryoneIgnorePlayer(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetEveryoneIgnorePlayer(_player, toggle);
}
/**
 * ```
 * see personaabilities.meta
 * enum ePersonaAbilityFlag
 * {
 * PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
 * PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
 * PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
 * PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
 * PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
 * PERSONA_DEADEYE_INSTANT_RELOAD,
 * PERSONA_USE_PHOSPHOROUS_ROUNDS,
 * PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
 * PERSONA_CONT_DEADEYE_ON_RELOAD,
 * PERSONA_CONT_DEADEYE_ON_SHOOTING,
 * PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
 * PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
 * PERSONA_CONT_DEADEYE_ON_RAGDOLL,
 * PERSONA_USE_EXPLOSIVE_ROUNDS,
 * PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
 * PERSONA_CARRY_TWO_MONEYBAGS,
 * PERSONA_ABILITY_LONG_PICK_HERBS,
 * PERSONA_ABILITY_UNBREAKABLE_LASSO,
 * PERSONA_CONT_DEADEYE_ON_SPRINTING,
 * PERSONA_CANT_DEAL_HEADSHOTS,
 * PERSONA_HANGMAN,
 * PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
 * PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
 * PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
 * PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
 * PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
 * PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
 * PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
 * PERSONA_CONT_EAGLEEYE_ON_SPRINT,
 * PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
 * };
 * ```
 * Hash: 0x7146CF430965927C | ApiSet: undefined
 */
export function setLocalPlayerPersonaAbilityFlag(flagId, toggle) {
    SetLocalPlayerPersonaAbilityFlag(flagId, toggle);
}
/**
 * ```
 * Focus Fire VFX start for player: p1 = focusfire
 * ```
 * Hash: 0x5F8E0303C229C84B | ApiSet: undefined
 */
export function setLockonFocusFireVfx(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetLockonFocusFireVfx(_player, p1);
}
/**
 * Hash: 0x4A056257802DD3E5 | ApiSet: undefined
 */
export function setLockonToFriendlyPlayers(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetLockonToFriendlyPlayers(_player, toggle);
}
/**
 * Hash: 0x28A4BD2CEE236E19 | ApiSet: undefined
 */
export function setMaxWantedLevel(maxWantedLevel) {
    SetMaxWantedLevel(maxWantedLevel);
}
/**
 * Hash: 0xEA6DE0CD15AECBE2 | ApiSet: undefined
 */
export function setMaxWantedLevel2(maxWantedLevel) {
    SetMaxWantedLevel2(maxWantedLevel);
}
/**
 * Hash: 0x506CE71FB6E8CF5E | ApiSet: undefined
 */
export function setMinTimeBeforeHorseBucking(mount, iMinBuckTime) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    SetMinTimeBeforeHorseBucking(_mount, iMinBuckTime);
}
/**
 * Hash: 0x5B9813ECF7633FE8 | ApiSet: undefined
 */
export function setMountPromptDisabled(disabled) {
    SetMountPromptDisabled(disabled);
}
/**
 * Hash: 0x227B06324234FB09 | ApiSet: undefined
 */
export function setPedAsTempPlayerHorse(player, horse) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    return SetPedAsTempPlayerHorse(_player, _horse);
}
/**
 * ```
 * Seems to work similar to 0xD2CB0FB0FDCB473D
 * ```
 * Hash: 0x8FBF9EDB378CCB8C | ApiSet: undefined
 */
export function setPedActivePlayerHorse(player, horse) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    SetPedActivePlayerHorse(_player, _horse);
}
/**
 * Hash: 0xD2CB0FB0FDCB473D | ApiSet: undefined
 */
export function setPedAsSaddleHorseForPlayer(player, mount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    SetPedAsSaddleHorseForPlayer(_player, _mount);
}
/**
 * ```
 * Sets whether this player can be hassled by gangs.
 * ```
 * Hash: 0xC7FE774412046825 | ApiSet: undefined
 */
export function setPlayerCanBeHassledByGangs(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerCanBeHassledByGangs(_player, toggle);
}
/**
 * ```
 * Sets whether this player can take cover.
 * ```
 * Hash: 0x5EDA520F7A3BAF4E | ApiSet: undefined
 */
export function setPlayerCanUseCover(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerCanUseCover(_player, toggle);
}
/**
 * ```
 * damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
 * ```
 * Hash: 0x78B3D19AF6391A55 | ApiSet: undefined
 */
export function setPlayerDamageInfoOverride(player, damageInfo) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerDamageInfoOverride(_player, damageInfo);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x39363DFD04E91496 | ApiSet: undefined
 */
export function setPlayerCanMercyKill(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerCanMercyKill(_player, toggle);
}
/**
 * ```
 * Sets stamina core drains peed using ranged damage scale and melee damage scale
 * ```
 * Hash: 0x497A6539BB0E8787 | ApiSet: undefined
 */
export function setPlayerDefenseModifier(player, weaponDefenseMod, meleeDefenseMod) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerDefenseModifier(_player, weaponDefenseMod, meleeDefenseMod);
}
/**
 * Hash: 0xD0D9317DFEEF9A66 | ApiSet: undefined
 */
export function setPlayerClothPinFrames(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPlayerClothPinFrames(_ped, p1);
}
/**
 * ```
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
 * ```
 * Hash: 0x4D51E59243281D80 | ApiSet: undefined
 */
export function setPlayerControl(player, toggle, flags, bPreventHeadingChange) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerControl(_player, toggle, flags, bPreventHeadingChange);
}
/**
 * ```
 * bullet damage modifier: type = 4
 * explosive damage Defense mod: type = 7
 * fire damage Defense mod: type = 8, 15
 * ```
 * Hash: 0x93F499CAE53FCD05 | ApiSet: undefined
 */
export function setPlayerDefenseTypeModifier(player, type, defenseModifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerDefenseTypeModifier(_player, type, defenseModifier);
}
/**
 * Hash: 0xD5FCC166AEB2FD0F | ApiSet: undefined
 */
export function setPlayerForcedAim(player, toggle, ped, p3, p4) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPlayerForcedAim(_player, toggle, _ped, p3, p4);
}
/**
 * Hash: 0x2D3ACE3DE0A2B622 | ApiSet: undefined
 */
export function setPlayerExplosiveWeaponDamageModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerExplosiveWeaponDamageModifier(_player, modifier);
}
/**
 * Hash: 0x946D46CD6DFB9742 | ApiSet: undefined
 */
export function setPlayerHasDiscoveredCharacterNameSp(player, p1, discoveryHash) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    SetPlayerHasDiscoveredCharacterNameSp(_player, p1, discoveryHash);
}
/**
 * Hash: 0x7C32191D9FB2BDEA | ApiSet: undefined
 */
export function setPlayerHasDiscoveredCharacterNameMp(discoveryHash) {
    if (typeof discoveryHash === 'string')
        discoveryHash = this.getHashKey(discoveryHash);
    SetPlayerHasDiscoveredCharacterNameMp(discoveryHash);
}
/**
 * Hash: 0x8899C244EBCF70DE | ApiSet: undefined
 */
export function setPlayerHealthRechargeMultiplier(player, regenRate) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerHealthRechargeMultiplier(_player, regenRate);
}
/**
 * ```
 * Setting player's Health recharge time to zero forces immediate health regen
 * ```
 * Hash: 0x535ED4605F89AB6E | ApiSet: undefined
 */
export function setPlayerHealthRechargeTimeModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerHealthRechargeTimeModifier(_player, modifier);
}
/**
 * ```
 * Only applies to HUNTERCART01
 * ```
 * Hash: 0x6A4404BDFA62CE2C | ApiSet: undefined
 */
export function setPlayerHuntingWagon(player, wagon) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _wagon = wagon instanceof Entity ? wagon.handle() : wagon;
    SetPlayerHuntingWagon(_player, _wagon);
}
/**
 * ```
 * Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
 * see SET_PLAYER_TARGETING_MODE for eTargetingMode
 * ```
 * Hash: 0x19B4F71703902238 | ApiSet: undefined
 */
export function setPlayerInVehicleTargetingMode(targetMode) {
    SetPlayerInVehicleTargetingMode(targetMode);
}
/**
 * ```
 * Simply sets you as invincible (Health will not deplete).
 * ```
 * Hash: 0xFEBEEBC9CBDF4B12 | ApiSet: undefined
 */
export function setPlayerInvincible(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerInvincible(_player, toggle);
}
/**
 * Hash: 0x98CD760DE43B612E | ApiSet: undefined
 */
export function setPlayerInteractionNegativeResponse(player, speech) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerInteractionNegativeResponse(_player, speech);
}
/**
 * ```
 * _SET_PLAYER_A* - _SET_PLAYER_C*
 * ```
 * Hash: 0x43F50A7CD2482156 | ApiSet: undefined
 */
export function setPlayerLassoDamagePerSecond(player, damage) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerLassoDamagePerSecond(_player, damage);
}
/**
 * Hash: 0xC6366A585659D15C | ApiSet: undefined
 */
export function setPlayerInteractionPositiveResponse(player, speech) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerInteractionPositiveResponse(_player, speech);
}
/**
 * Hash: 0x4EA69188FBCE6A7D | ApiSet: undefined
 */
export function setPlayerLocalAccuracyFloorModifier(player, accuracy) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerLocalAccuracyFloorModifier(_player, accuracy);
}
/**
 * Hash: 0x292F0B6EDC82E3A4 | ApiSet: undefined
 */
export function setPlayerManageBuffSuperJump(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerManageBuffSuperJump(_player, p1);
}
/**
 * Hash: 0xBEC463B3A11C909E | ApiSet: undefined
 */
export function setPlayerMayNotEnterAnyVehicle(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerMayNotEnterAnyVehicle(_player);
}
/**
 * Hash: 0x462AA1973CBBA75E | ApiSet: undefined
 */
export function setPlayerLockon(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerLockon(_player, toggle);
}
/**
 * Hash: 0xDA35A134038557EC | ApiSet: undefined
 */
export function setPlayerMayOnlyEnterThisVehicle(player, vehicle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetPlayerMayOnlyEnterThisVehicle(_player, _vehicle);
}
/**
 * ```
 * Affects the range of auto aim target.
 * ```
 * Hash: 0x3A3CD06597388322 | ApiSet: undefined
 */
export function setPlayerLockonRangeOverride(player, range) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerLockonRangeOverride(_player, range);
}
/**
 * Hash: 0xE133C1EC5300F740 | ApiSet: undefined
 */
export function setPlayerMaxAmmoOverrideForAmmoType(player, ammoType, amount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof ammoType === 'string')
        ammoType = this.getHashKey(ammoType);
    SetPlayerMaxAmmoOverrideForAmmoType(_player, ammoType, amount);
}
/**
 * Hash: 0xE4CB5A3F18170381 | ApiSet: undefined
 */
export function setPlayerMeleeWeaponDamageModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerMeleeWeaponDamageModifier(_player, modifier);
}
/**
 * ```
 * Make sure to request the model first and wait until it has loaded.
 * ```
 * Hash: 0xED40380076A31506 | ApiSet: undefined
 */
export function setPlayerModel(player, modelHash, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    SetPlayerModel(_player, modelHash, p2);
}
/**
 * ```
 * Name could potentially be inaccurate.
 * Used in Script Function HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = true)
 * _SET_PLAYER_L* - _SET_PLAYER_M*
 * ```
 * Hash: 0xDF93973251FB2CA5 | ApiSet: undefined
 */
export function setPlayerMountStateActive(player, active) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerMountStateActive(_player, active);
}
/**
 * ```
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedMood
 * ```
 * Hash: 0x39BED552DB46FFA9 | ApiSet: undefined
 */
export function setPlayerMood(player, mood) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerMood(_player, mood);
}
/**
 * Hash: 0xB5EC6BDAEBCA454C | ApiSet: undefined
 */
export function setPlayerNoiseMultiplier(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerNoiseMultiplier(_player, multiplier);
}
/**
 * ```
 * Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
 * ```
 * Hash: 0xE6D4E435B56D5BD0 | ApiSet: undefined
 */
export function setPlayerOwnsMount(player, mount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    SetPlayerOwnsMount(_player, _mount);
}
/**
 * Hash: 0xD0E02AA618020D17 | ApiSet: undefined
 */
export function setPlayerOwnsVehicle(player, vehicle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetPlayerOwnsVehicle(_player, _vehicle);
}
/**
 * ```
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePlayerResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
 * ```
 * Hash: 0x9F9A829C6751F3C7 | ApiSet: undefined
 */
export function setPlayerResetFlag(player, playerResetFlag, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerResetFlag(_player, playerResetFlag, p2);
}
/**
 * Hash: 0xDEE80FEDFDD43C9B | ApiSet: undefined
 */
export function setPlayerRemoteAccuracyFloorModifier(player, accuracy) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerRemoteAccuracyFloorModifier(_player, accuracy);
}
/**
 * Hash: 0x4DE44FA389DCA565 | ApiSet: undefined
 */
export function setPlayerSneakingNoiseMultiplier(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerSneakingNoiseMultiplier(_player, multiplier);
}
/**
 * Hash: 0xE0447DEF81CCDFD2 | ApiSet: undefined
 */
export function setPlayerSimulateAiming(player, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerSimulateAiming(_player, toggle);
}
/**
 * Hash: 0xBBADFB5E5E5766FB | ApiSet: undefined
 */
export function setPlayerStaminaSprintDepletionMultiplier(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerStaminaSprintDepletionMultiplier(_player, multiplier);
}
/**
 * Hash: 0xFECA17CF3343694B | ApiSet: undefined
 */
export function setPlayerStaminaRechargeMultiplier(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerStaminaRechargeMultiplier(_player, multiplier);
}
/**
 * ```
 * _N*, _O* or _PE*
 * ```
 * Hash: 0x768E81AE285A4B67 | ApiSet: undefined
 */
export function setPlayerStatFlagHash(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    SetPlayerStatFlagHash(_player, p1);
}
/**
 * ```
 * Sets your targeting mode for when you're on foot.
 * enum eTargetingMode
 * {
 * TARGETING_MODE_INVALID = -1,
 * TARGETING_MODE_CAUSAL, (Wide)
 * TARGETING_MODE_NORMAL,
 * TARGETING_MODE_HARD, (Narrow)
 * TARGETING_MODE_EXPERT (Free Aim)
 * };
 * ```
 * Hash: 0xD66A941F401E7302 | ApiSet: undefined
 */
export function setPlayerTargetingMode(targetMode) {
    SetPlayerTargetingMode(targetMode);
}
/**
 * Hash: 0x967FF5BC0CFE6D26 | ApiSet: undefined
 */
export function setPlayerTotalAccuracyModifier(player, accuracy) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerTotalAccuracyModifier(_player, accuracy);
}
/**
 * ```
 * Sets the player's team.
 * ```
 * Hash: 0xE8DD8536F01DE600 | ApiSet: undefined
 */
export function setPlayerTeam(player, team, bRestrictToThisScript) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerTeam(_player, team, bRestrictToThisScript);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x384D4765395E006C | ApiSet: undefined
 */
export function setPlayerWantedLevel(player, wantedLevel, disableNoMission) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerWantedLevel(_player, wantedLevel, disableNoMission);
}
/**
 * Hash: 0xAF341032E97FB061 | ApiSet: undefined
 */
export function setPlayerTrampleDamageModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerTrampleDamageModifier(_player, modifier);
}
/**
 * ```
 * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
 * ```
 * Hash: 0x94D529F7B73D7A85 | ApiSet: undefined
 */
export function setPlayerWeaponDamageModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerWeaponDamageModifier(_player, modifier);
}
/**
 * Hash: 0xD15CC2D493160BE3 | ApiSet: undefined
 */
export function setPlayerWeaponDefenseModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetPlayerWeaponDefenseModifier(_player, modifier);
}
/**
 * Hash: 0x59F0AFF3E0A1B019 | ApiSet: undefined
 */
export function setPlayerWeaponGroupAsInstantKill(player, weaponGroup, toggle) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof weaponGroup === 'string')
        weaponGroup = this.getHashKey(weaponGroup);
    SetPlayerWeaponGroupAsInstantKill(_player, weaponGroup, toggle);
}
/**
 * Hash: 0xD04AD186CE8BB129 | ApiSet: undefined
 */
export function setPlayerWeaponTypeDamageModifier(player, weaponHash, damageModifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SetPlayerWeaponTypeDamageModifier(_player, weaponHash, damageModifier);
}
/**
 * Hash: 0xFC79DCC94D0A5897 | ApiSet: undefined
 */
export function setPlayerWeaponGroupDamageModifier(player, weaponGroup, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    if (typeof weaponGroup === 'string')
        weaponGroup = this.getHashKey(weaponGroup);
    SetPlayerWeaponGroupDamageModifier(_player, weaponGroup, modifier);
}
/**
 * ```
 * If toggle is set to false:
 * The police won't be shown on the (mini)map
 * If toggle is set to true:
 * The police will be shown on the (mini)map
 * ```
 * Hash: 0x6FD7DD6B63F2820E | ApiSet: undefined
 */
export function setPoliceRadarBlips(toggle) {
    SetPoliceRadarBlips(toggle);
}
/**
 * ```
 * Decreases the damage the player receives while on horseback
 * ```
 * Hash: 0xB427911EA6DFFEF3 | ApiSet: undefined
 */
export function setReceivedHorsebackDamageDecrease(player, damageDecrease) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetReceivedHorsebackDamageDecrease(_player, damageDecrease);
}
/**
 * Hash: 0xDC68829BB3F37023 | ApiSet: undefined
 */
export function setShowInfoCard(player, showingInfoCard) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetShowInfoCard(_player, showingInfoCard);
}
/**
 * ```
 * Only used in R* SP Script short_update
 * ```
 * Hash: 0xC0B1C05B313693D1 | ApiSet: undefined
 */
export function setSpecialAbilityDisableTimer(player, timer) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSpecialAbilityDisableTimer(_player, timer);
}
/**
 * Hash: 0xAE4BCC79C587EBBF | ApiSet: undefined
 */
export function setSpecialAbilityActivationCost(player, activationCost, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSpecialAbilityActivationCost(_player, activationCost, p2);
}
/**
 * Hash: 0x5A498FCA232F71E1 | ApiSet: undefined
 */
export function setSpecialAbilityMultiplier(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSpecialAbilityMultiplier(_player, multiplier);
}
/**
 * ```
 * durationCost: per second
 * ```
 * Hash: 0xB783F75940B23014 | ApiSet: undefined
 */
export function setSpecialAbilityDurationCost(player, durationCost) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSpecialAbilityDurationCost(_player, durationCost);
}
/**
 * ```
 * Swim speed multiplier.
 * Multiplier goes up to 1.49f
 * ```
 * Hash: 0xBFCEABDE34DA5085 | ApiSet: undefined
 */
export function setSwimMultiplierForPlayer(player, multiplier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSwimMultiplierForPlayer(_player, multiplier);
}
/**
 * ```
 * SPECIAL_ABILITY_NONE = -1,
 * SPECIAL_ABILITY_CAR_SLOWDOWN,
 * SPECIAL_ABILITY_RAGE,
 * SPECIAL_ABILITY_BULLET_TIME,
 * SPECIAL_ABILITY_SNAPSHOT,
 * SPECIAL_ABILITY_INSULT,
 * SPECIAL_ABILITY_DEADEYE,
 * SPECIAL_ABILITY_REVIVE
 * ```
 * Hash: 0x00BA333DA05ADC23 | ApiSet: undefined
 */
export function setSpecialAbilityType(player, type) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetSpecialAbilityType(_player, type);
}
/**
 * Hash: 0x0E1DB1F8F5B561DC | ApiSet: undefined
 */
export function setUsedItemEffect(health, stamina, deadeye, healthCore, staminaCore, deadeyeCore) {
    SetUsedItemEffect(health, stamina, deadeye, healthCore, staminaCore, deadeyeCore);
}
/**
 * Hash: 0xD7FA719CB54866C2 | ApiSet: undefined
 */
export function setWantedLevelMultiplier(multiplier) {
    SetWantedLevelMultiplier(multiplier);
}
/**
 * Hash: 0x11A7FF918EF6BC66 | ApiSet: undefined
 */
export function setWeaponDegradationModifier(player, modifier) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetWeaponDegradationModifier(_player, modifier);
}
/**
 * Hash: 0xFA0C063C422C4355 | ApiSet: undefined
 */
export function simulatePlayerInputGait(player, speed, duration, heading, p4, p5) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SimulatePlayerInputGait(_player, speed, duration, heading, p4, p5);
}
/**
 * ```
 * Returns Deadeye value from player
 * ```
 * Hash: 0x029884FB65821B07 | ApiSet: undefined
 */
export function specialAbilityGetAmountCached(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return SpecialAbilityGetAmountCached(_player);
}
/**
 * ```
 * Drains Deadeye by given amount.
 * ```
 * Hash: 0x200114E99552462B | ApiSet: undefined
 */
export function specialAbilityDrainByAmount(player, amount, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilityDrainByAmount(_player, amount, p2);
}
/**
 * ```
 * Restores Deadeye by given amount.
 * Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
 * ```
 * Hash: 0x51345AE20F22C261 | ApiSet: undefined
 */
export function specialAbilityRestoreByAmount(player, amount, p2, p3, p4) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilityRestoreByAmount(_player, amount, p2, p3, p4);
}
/**
 * ```
 * Only used in R* SP Script short_update
 * Restores Deadeye Outer Ring
 * ```
 * Hash: 0x2498035289B5688F | ApiSet: undefined
 */
export function specialAbilityRestoreOuterRing(player, amount) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilityRestoreOuterRing(_player, amount);
}
/**
 * Hash: 0xAE637BB8EF017875 | ApiSet: undefined
 */
export function specialAbilitySetDisabled(player, disabled) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilitySetDisabled(_player, disabled);
}
/**
 * Hash: 0xC0B21F235C02139C | ApiSet: undefined
 */
export function specialAbilitySetEagleEyeDisabled(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilitySetEagleEyeDisabled(_player);
}
/**
 * ```
 * Params: p1 = -1 in R* Scripts
 * ```
 * Hash: 0x1D77B47AFA584E90 | ApiSet: undefined
 */
export function specialAbilityStartRestore(player, p1, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SpecialAbilityStartRestore(_player, p1, p2);
}
/**
 * Hash: 0xDF8822C55EDDA65B | ApiSet: undefined
 */
export function startPlayerTeleport(player, position, heading, p5, p6, p7, p8) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    StartPlayerTeleport(_player, position.x, position.y, position.z, heading, p5, p6, p7, p8);
}
/**
 * ```
 * Disables the player's teleportation
 * ```
 * Hash: 0x0858B86146601BE8 | ApiSet: undefined
 */
export function stopPlayerTeleport() {
    StopPlayerTeleport();
}
/**
 * Hash: 0x9DAE1380CC5C6451 | ApiSet: undefined
 */
export function unregisterEagleEyeForEntity(player, entity) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    UnregisterEagleEyeForEntity(_player, _entity);
}
/**
 * Hash: 0x96722257E5381E00 | ApiSet: undefined
 */
export function suppressWitnessesCallingPoliceThisFrame(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    SuppressWitnessesCallingPoliceThisFrame(_player);
}
/**
 * Hash: 0x9A957912CE2EABD1 | ApiSet: undefined
 */
export function unregisterEagleEyeTrailsForEntity(player, entity, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    UnregisterEagleEyeTrailsForEntity(_player, _entity, p2);
}
/**
 * Hash: 0xD0B0B044112BF424 | ApiSet: undefined
 */
export function updateWantedPositionThisFrame(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    UpdateWantedPositionThisFrame(_player);
}
/**
 * Hash: 0xC39DCE4672CBFBC1 | ApiSet: undefined
 */
export function updatePlayerTeleport(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return UpdatePlayerTeleport(_player);
}
/**
 * Hash: 0x0360710033BE60D9 | ApiSet: undefined
 */
export function beginSrl() {
    BeginSrl();
}
/**
 * Hash: 0x86CCAF7CE493EFBE | ApiSet: undefined
 */
export function clearFocus() {
    ClearFocus();
}
/**
 * Hash: 0xD83B22434E52728D | ApiSet: undefined
 */
export function clearHdArea() {
    ClearHdArea();
}
/**
 * Hash: 0x537F44CB0D7F150D | ApiSet: undefined
 */
export function doesAnimDictExist(animDict) {
    return DoesAnimDictExist(animDict);
}
/**
 * ```
 * Outputs IPL position and radius (previously wrongly named heading)
 * https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
 * ```
 * Hash: 0x9C77964B0E07B633 | ApiSet: undefined
 */
export function getIplBoundingSphere(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    const result = GetIplBoundingSphere(iplHash);
    return [result[0], new Vector3(result[1], result[2], result[3]), result[2]];
}
/**
 * Hash: 0x1CE71FB33CA079FE | ApiSet: undefined
 */
export function endSrl() {
    EndSrl();
}
/**
 * Hash: 0x8A3945405B31048F | ApiSet: undefined
 */
export function getPopulationBudgetMultiplier() {
    return GetPopulationBudgetMultiplier();
}
/**
 * Hash: 0x30CCCC4D88E654CA | ApiSet: undefined
 */
export function getNumberOfStreamingRequests() {
    return GetNumberOfStreamingRequests();
}
/**
 * Hash: 0x27FF6FE8009B40CA | ApiSet: undefined
 */
export function hasAnimDictLoaded(animDict) {
    return HasAnimDictLoaded(animDict);
}
/**
 * ```
 * Alias for HAS_ANIM_SET_LOADED.
 * ```
 * Hash: 0x1F23D6B6DA1CC3B2 | ApiSet: undefined
 */
export function hasClipSetLoaded(clipSet) {
    return HasClipSetLoaded(clipSet);
}
/**
 * Hash: 0x210A79C9EC89778F | ApiSet: undefined
 */
export function hasCollisionForModelLoaded(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return HasCollisionForModelLoaded(model);
}
/**
 * Hash: 0xDA8B2EAF29E872E2 | ApiSet: undefined
 */
export function hasCollisionLoadedAtCoord(position) {
    return HasCollisionLoadedAtCoord(position.x, position.y, position.z);
}
/**
 * ```
 * Checks if the specified model has loaded into memory.
 * ```
 * Hash: 0x1283B8B89DD5D1B6 | ApiSet: undefined
 */
export function hasModelLoaded(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return HasModelLoaded(model);
}
/**
 * Hash: 0x2C04D89A0FB4E244 | ApiSet: undefined
 */
export function hasMoveNetworkDefLoaded(name) {
    return HasMoveNetworkDefLoaded(name);
}
/**
 * Hash: 0x65BB72F29138F5D6 | ApiSet: undefined
 */
export function hasNamedPtfxAssetLoaded(fxNameHash) {
    if (typeof fxNameHash === 'string')
        fxNameHash = this.getHashKey(fxNameHash);
    return HasNamedPtfxAssetLoaded(fxNameHash);
}
/**
 * Hash: 0x13A3F30A9ED0BC31 | ApiSet: undefined
 */
export function hasPtfxAssetLoaded() {
    return HasPtfxAssetLoaded();
}
/**
 * Hash: 0x9427C94D2E4094A4 | ApiSet: undefined
 */
export function hasScenarioTypeLoaded(scenarioType, p1) {
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    return HasScenarioTypeLoaded(scenarioType, p1);
}
/**
 * Hash: 0x31108BB5715D035F | ApiSet: undefined
 */
export function iplGroupSwapCancel() {
    IplGroupSwapCancel();
}
/**
 * Hash: 0xFC464598F6EE97B0 | ApiSet: undefined
 */
export function iplGroupSwapIsActive() {
    return IplGroupSwapIsActive();
}
/**
 * Hash: 0x040EE319EFD1D3B5 | ApiSet: undefined
 */
export function iplGroupSwapFinish() {
    IplGroupSwapFinish();
}
/**
 * Hash: 0xC2C05DEFE85A0B64 | ApiSet: undefined
 */
export function iplGroupSwapIsReady() {
    return IplGroupSwapIsReady();
}
/**
 * Hash: 0x20D504994FDC4412 | ApiSet: undefined
 */
export function iplGroupSwapStart(iplName1, iplName2) {
    IplGroupSwapStart(iplName1, iplName2);
}
/**
 * Hash: 0xF87DE697E9A06EC6 | ApiSet: undefined
 */
export function isEntityFocus(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return IsEntityFocus(_entity);
}
/**
 * Hash: 0x93AC1B91CB6D9913 | ApiSet: undefined
 */
export function isIplActiveByHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    return IsIplActiveByHash(iplHash);
}
/**
 * Hash: 0xD779B9B910BD3B7C | ApiSet: undefined
 */
export function isIplActiveHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    return IsIplActiveHash(iplHash);
}
/**
 * Hash: 0xC3F09DE9D6D17DDA | ApiSet: undefined
 */
export function isModelAPed(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsModelAPed(model);
}
/**
 * Hash: 0xCF45DF50C7775F2A | ApiSet: undefined
 */
export function isLoadSceneActive() {
    return IsLoadSceneActive();
}
/**
 * Hash: 0x0909F71B5C070797 | ApiSet: undefined
 */
export function isLoadSceneLoaded() {
    return IsLoadSceneLoaded();
}
/**
 * ```
 * Returns whether the specified model exists in the game.
 * ```
 * Hash: 0xD6F3B6D7716CFF8E | ApiSet: undefined
 */
export function isModelInCdimage(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsModelInCdimage(model);
}
/**
 * ```
 * Returns whether the specified model represents a vehicle.
 * ```
 * Hash: 0x354F62672DE7DB0A | ApiSet: undefined
 */
export function isModelAVehicle(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsModelAVehicle(model);
}
/**
 * Hash: 0xED20CB1F5297791D | ApiSet: undefined
 */
export function isPlayerSwitchInProgress() {
    return IsPlayerSwitchInProgress();
}
/**
 * Hash: 0x274EE1B90CFA669E | ApiSet: undefined
 */
export function isModelAnObject(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsModelAnObject(model);
}
/**
 * Hash: 0x45BF3A6239A576B7 | ApiSet: undefined
 */
export function isRenderedSceneLoaded() {
    return IsRenderedSceneLoaded();
}
/**
 * Hash: 0x5C2C88512CF6DAFB | ApiSet: undefined
 */
export function isSrlLoaded() {
    return IsSrlLoaded();
}
/**
 * ```
 * Returns whether the specified model is valid
 * ```
 * Hash: 0x392C8D8E07B70EFC | ApiSet: undefined
 */
export function isModelValid(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsModelValid(model);
}
/**
 * ```
 * Returns true if IPL is streamed in (?)
 * ```
 * Hash: 0x73B40D97D7BAAD77 | ApiSet: undefined
 */
export function isPositionInsideIplStreamingExtents(iplHash, position) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    return IsPositionInsideIplStreamingExtents(iplHash, position.x, position.y, position.z);
}
/**
 * Hash: 0x387AD749E3B69B70 | ApiSet: undefined
 */
export function loadSceneStart(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7) {
    return LoadSceneStart(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7);
}
/**
 * Hash: 0x5A8B01199C3E79C3 | ApiSet: undefined
 */
export function loadSceneStop() {
    LoadSceneStop();
}
/**
 * Hash: 0x03DDBF2D73799F9E | ApiSet: undefined
 */
export function _0x03DDBF2D73799F9E(p0) {
    Citizen.invokeNative('0x03DDBF2D73799F9E', p0);
}
/**
 * Hash: 0x513F8AA5BF2F17CF | ApiSet: undefined
 */
export function loadSceneStartSphere(position, radius, p4) {
    return LoadSceneStartSphere(position.x, position.y, position.z, radius, p4);
}
/**
 * ```
 * _SET_E* or _SET_F*
 * ```
 * Hash: 0x032A14D082A9B269 | ApiSet: undefined
 */
export function _0x032A14D082A9B269(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    Citizen.invokeNative('0x032A14D082A9B269', p0);
}
/**
 * Hash: 0x071769BCB24379E5 | ApiSet: undefined
 */
export function _0x071769BCB24379E5() {
    return Citizen.invokeNative('0x071769BCB24379E5');
}
/**
 * Hash: 0x05DD384F39DE1C8C | ApiSet: undefined
 */
export function _0x05DD384F39DE1C8C(p0, p1) {
    return Citizen.invokeNative('0x05DD384F39DE1C8C', p0, p1);
}
/**
 * Hash: 0x07559B29950301FF | ApiSet: undefined
 */
export function _0x07559B29950301FF(p0, p1) {
    Citizen.invokeNative('0x07559B29950301FF', p0, p1);
}
/**
 * Hash: 0x09FBF15D73EFC900 | ApiSet: undefined
 */
export function _0x09FBF15D73EFC900() {
    Citizen.invokeNative('0x09FBF15D73EFC900');
}
/**
 * Hash: 0x27AF48C62B281341 | ApiSet: undefined
 */
export function _0x27AF48C62B281341() {
    return Citizen.invokeNative('0x27AF48C62B281341');
}
/**
 * Hash: 0x198B85CC3C7A4593 | ApiSet: undefined
 */
export function _0x198B85CC3C7A4593(p0, p1) {
    return Citizen.invokeNative('0x198B85CC3C7A4593', p0, p1);
}
/**
 * Hash: 0x2A6D1DAAB9EBB262 | ApiSet: undefined
 */
export function _0x2A6D1DAAB9EBB262(p0) {
    return Citizen.invokeNative('0x2A6D1DAAB9EBB262', p0);
}
/**
 * Hash: 0x2F4D53023F826FF0 | ApiSet: undefined
 */
export function _0x2F4D53023F826FF0() {
    return Citizen.invokeNative('0x2F4D53023F826FF0');
}
/**
 * Hash: 0x53764309C4618087 | ApiSet: undefined
 */
export function _0x53764309C4618087(p0) {
    return Citizen.invokeNative('0x53764309C4618087', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x2E24C27B112B5B12 | ApiSet: undefined
 */
export function _0x2E24C27B112B5B12(p0) {
    Citizen.invokeNative('0x2E24C27B112B5B12', p0);
}
/**
 * Hash: 0x5288B7F0690F7C1F | ApiSet: undefined
 */
export function _0x5288B7F0690F7C1F(p0) {
    return Citizen.invokeNative('0x5288B7F0690F7C1F', p0);
}
/**
 * Hash: 0x66BC28E50E85270E | ApiSet: undefined
 */
export function _0x66BC28E50E85270E(p0) {
    return Citizen.invokeNative('0x66BC28E50E85270E', p0);
}
/**
 * Hash: 0x5D5E2102B174B8D2 | ApiSet: undefined
 */
export function _0x5D5E2102B174B8D2() {
    return Citizen.invokeNative('0x5D5E2102B174B8D2');
}
/**
 * Hash: 0x7B8C2B846C05E5AD | ApiSet: undefined
 */
export function _0x7B8C2B846C05E5AD() {
    return Citizen.invokeNative('0x7B8C2B846C05E5AD');
}
/**
 * Hash: 0x62D5F0588915B277 | ApiSet: undefined
 */
export function _0x62D5F0588915B277() {
    Citizen.invokeNative('0x62D5F0588915B277');
}
/**
 * Hash: 0x6A6E79FBE8678C98 | ApiSet: undefined
 */
export function _0x6A6E79FBE8678C98() {
    Citizen.invokeNative('0x6A6E79FBE8678C98');
}
/**
 * Hash: 0x8D56BDA343D9519F | ApiSet: undefined
 */
export function _0x8D56BDA343D9519F(p0) {
    return Citizen.invokeNative('0x8D56BDA343D9519F', p0);
}
/**
 * Hash: 0x80B3E0597366ADF1 | ApiSet: undefined
 */
export function _0x80B3E0597366ADF1() {
    Citizen.invokeNative('0x80B3E0597366ADF1');
}
/**
 * Hash: 0x99F92061EFE908BA | ApiSet: undefined
 */
export function _0x99F92061EFE908BA() {
    return Citizen.invokeNative('0x99F92061EFE908BA');
}
/**
 * Hash: 0x85B8F04555AB49B8 | ApiSet: undefined
 */
export function _0x85B8F04555AB49B8(p0) {
    return Citizen.invokeNative('0x85B8F04555AB49B8', p0);
}
/**
 * Hash: 0xA0AE7653E8181725 | ApiSet: undefined
 */
export function _0xA0AE7653E8181725(p0) {
    return Citizen.invokeNative('0xA0AE7653E8181725', p0);
}
/**
 * Hash: 0x9F348DE670423460 | ApiSet: undefined
 */
export function _0x9F348DE670423460(p0) {
    Citizen.invokeNative('0x9F348DE670423460', p0);
}
/**
 * Hash: 0xAE00387E53B1E9FC | ApiSet: undefined
 */
export function _0xAE00387E53B1E9FC() {
    Citizen.invokeNative('0xAE00387E53B1E9FC');
}
/**
 * Hash: 0xAFA87A7D41EE346A | ApiSet: undefined
 */
export function _0xAFA87A7D41EE346A(p0) {
    Citizen.invokeNative('0xAFA87A7D41EE346A', p0);
}
/**
 * Hash: 0xB223249B7798EEED | ApiSet: undefined
 */
export function _0xB223249B7798EEED(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xB223249B7798EEED', p0, p1, p2, p3);
}
/**
 * ```
 * Sorts some unknown data.
 * Likely SORT_*
 * ```
 * Hash: 0xB9B9E47EDB9D63DB | ApiSet: undefined
 */
export function _0xB9B9E47EDB9D63DB() {
    Citizen.invokeNative('0xB9B9E47EDB9D63DB');
}
/**
 * Hash: 0xBE8DAA9D8D01DA6A | ApiSet: undefined
 */
export function _0xBE8DAA9D8D01DA6A(p0, p1, p2) {
    Citizen.invokeNative('0xBE8DAA9D8D01DA6A', p0, p1, p2);
}
/**
 * Hash: 0xCC61D8D6C19D9F14 | ApiSet: undefined
 */
export function _0xCC61D8D6C19D9F14(p0) {
    Citizen.invokeNative('0xCC61D8D6C19D9F14', p0);
}
/**
 * Hash: 0xD840C130D7AACFA5 | ApiSet: undefined
 */
export function _0xD840C130D7AACFA5(p0, p1, p2) {
    Citizen.invokeNative('0xD840C130D7AACFA5', p0, p1, p2);
}
/**
 * Hash: 0xD6E39DC5D46DF4AB | ApiSet: undefined
 */
export function _0xD6E39DC5D46DF4AB(p0) {
    return Citizen.invokeNative('0xD6E39DC5D46DF4AB', p0);
}
/**
 * Hash: 0xD9F2FF4AF394D926 | ApiSet: undefined
 */
export function _0xD9F2FF4AF394D926() {
    Citizen.invokeNative('0xD9F2FF4AF394D926');
}
/**
 * Hash: 0xDA7FDEFF4DE86839 | ApiSet: undefined
 */
export function _0xDA7FDEFF4DE86839() {
    return Citizen.invokeNative('0xDA7FDEFF4DE86839');
}
/**
 * Hash: 0xDABFE48BA0D457AA | ApiSet: undefined
 */
export function _0xDABFE48BA0D457AA() {
    return Citizen.invokeNative('0xDABFE48BA0D457AA');
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xDEEE1F265B7ECEF5 | ApiSet: undefined
 */
export function _0xDEEE1F265B7ECEF5() {
    Citizen.invokeNative('0xDEEE1F265B7ECEF5');
}
/**
 * Hash: 0xE5B76E5B56CD77DD | ApiSet: undefined
 */
export function _0xE5B76E5B56CD77DD() {
    return Citizen.invokeNative('0xE5B76E5B56CD77DD');
}
/**
 * Hash: 0xEF1A8A484118735E | ApiSet: undefined
 */
export function _0xEF1A8A484118735E() {
    Citizen.invokeNative('0xEF1A8A484118735E');
}
/**
 * Hash: 0xF01D21DF39554115 | ApiSet: undefined
 */
export function _0xF01D21DF39554115(p0) {
    Citizen.invokeNative('0xF01D21DF39554115', p0);
}
/**
 * Hash: 0x354837E5A5BAA5AF | ApiSet: undefined
 */
export function prefetchSrl(srl) {
    PrefetchSrl(srl);
}
/**
 * ```
 * Alias for REMOVE_ANIM_SET.
 * ```
 * Hash: 0x817FA1B1EE7CD6F0 | ApiSet: undefined
 */
export function removeClipSet(clipSet) {
    RemoveClipSet(clipSet);
}
/**
 * Hash: 0xF11D7CB962FCD747 | ApiSet: undefined
 */
export function _0xF11D7CB962FCD747(p0) {
    Citizen.invokeNative('0xF11D7CB962FCD747', p0);
}
/**
 * Hash: 0x4763145053A33D46 | ApiSet: undefined
 */
export function removeAnimDict(animDict) {
    RemoveAnimDict(animDict);
}
/**
 * Hash: 0x431E3AB760629B34 | ApiSet: undefined
 */
export function removeIplByHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    RemoveIplByHash(iplHash);
}
/**
 * Hash: 0xF20866829E1C81A2 | ApiSet: undefined
 */
export function removeNamedPtfxAsset(fxNameHash) {
    if (typeof fxNameHash === 'string')
        fxNameHash = this.getHashKey(fxNameHash);
    RemoveNamedPtfxAsset(fxNameHash);
}
/**
 * Hash: 0x5A3E5CF7B4014B96 | ApiSet: undefined
 */
export function removeIplHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    RemoveIplHash(iplHash);
}
/**
 * Hash: 0x4EDDD9E9CA5AF985 | ApiSet: undefined
 */
export function removeScenarioAsset(scenarioType) {
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    return RemoveScenarioAsset(scenarioType);
}
/**
 * Hash: 0x57A197AD83F66BBF | ApiSet: undefined
 */
export function removeMoveNetworkDef(name) {
    RemoveMoveNetworkDef(name);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x83A8D71650D1894F | ApiSet: undefined
 */
export function requestAdditionalCollisionAtCoord(position) {
    RequestAdditionalCollisionAtCoord(position.x, position.y, position.z);
}
/**
 * Hash: 0x042F9049EA419E86 | ApiSet: undefined
 */
export function removePtfxAsset() {
    RemovePtfxAsset();
}
/**
 * Hash: 0xA862A2AD321F94B4 | ApiSet: undefined
 */
export function requestAnimDict(animDict) {
    RequestAnimDict(animDict);
}
/**
 * Hash: 0xEF7611B57A820126 | ApiSet: undefined
 */
export function requestClipSet(clipSet) {
    RequestClipSet(clipSet);
}
/**
 * Hash: 0x0A3720F162A033C9 | ApiSet: undefined
 */
export function requestCollisionAtCoord(position) {
    RequestCollisionAtCoord(position.x, position.y, position.z);
}
/**
 * Hash: 0x59767C5A7A9AE6DA | ApiSet: undefined
 */
export function requestIplHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    RequestIplHash(iplHash);
}
/**
 * Hash: 0xAC37644A538F7524 | ApiSet: undefined
 */
export function requestClipSetByHash(clipSetHash) {
    if (typeof clipSetHash === 'string')
        clipSetHash = this.getHashKey(clipSetHash);
    RequestClipSetByHash(clipSetHash);
}
/**
 * Hash: 0xF1767BE37F661551 | ApiSet: undefined
 */
export function requestCollisionForModel(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    RequestCollisionForModel(model);
}
/**
 * Hash: 0x9E211A378F95C97C | ApiSet: undefined
 */
export function requestIplByHash(iplHash) {
    if (typeof iplHash === 'string')
        iplHash = this.getHashKey(iplHash);
    RequestIplByHash(iplHash);
}
/**
 * Hash: 0xA8432A14D4DC2101 | ApiSet: undefined
 */
export function requestMetadataAtCoord(position) {
    RequestMetadataAtCoord(position.x, position.y, position.z);
}
/**
 * ```
 * Request a model to be loaded into memory.
 * ```
 * Hash: 0xFA28FE3A6246FC30 | ApiSet: undefined
 */
export function requestModel(model, p1) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    RequestModel(model, p1);
}
/**
 * Hash: 0xF2B2353BBC0D4E8F | ApiSet: undefined
 */
export function requestNamedPtfxAsset(fxNameHash) {
    if (typeof fxNameHash === 'string')
        fxNameHash = this.getHashKey(fxNameHash);
    RequestNamedPtfxAsset(fxNameHash);
}
/**
 * Hash: 0x2B6529C54D29037A | ApiSet: undefined
 */
export function requestMoveNetworkDef(name) {
    RequestMoveNetworkDef(name);
}
/**
 * Hash: 0x19A6BE7D9C6884D3 | ApiSet: undefined
 */
export function requestScenarioType(scenarioType, p1, p2, p3) {
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    return RequestScenarioType(scenarioType, p1, p2, p3);
}
/**
 * ```
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 * ```
 * Hash: 0x955AEDD58F4BD309 | ApiSet: undefined
 */
export function setFocusEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetFocusEntity(_entity);
}
/**
 * Hash: 0x001FF43843028E0C | ApiSet: undefined
 */
export function requestPtfxAsset() {
    RequestPtfxAsset();
}
/**
 * Hash: 0x25F6EF88664540E2 | ApiSet: undefined
 */
export function setFocusPosAndVel(position, offsetX, offsetY, offsetZ) {
    SetFocusPosAndVel(position.x, position.y, position.z, offsetX, offsetY, offsetZ);
}
/**
 * Hash: 0x74E2261D2A66849A | ApiSet: undefined
 */
export function setGuarmaWorldhorizonActive(toggle) {
    SetGuarmaWorldhorizonActive(toggle);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x19ABCC581D28E6F9 | ApiSet: undefined
 */
export function setAllMapdataCulled(p0) {
    SetAllMapdataCulled(p0);
}
/**
 * Hash: 0x3CACC83F6FED837C | ApiSet: undefined
 */
export function setMapdatacullboxEnabled(name, toggle) {
    SetMapdatacullboxEnabled(name, toggle);
}
/**
 * Hash: 0xB3BC8250F4FE8B63 | ApiSet: undefined
 */
export function setGamePausesForStreaming(toggle) {
    SetGamePausesForStreaming(toggle);
}
/**
 * Hash: 0xB88B905AFA35CB4D | ApiSet: undefined
 */
export function setHdArea(position, radius) {
    SetHdArea(position.x, position.y, position.z, radius);
}
/**
 * ```
 * Marks the model as no longer needed.
 * ```
 * Hash: 0x4AD96EF928BD4F9A | ApiSet: undefined
 */
export function setModelAsNoLongerNeeded(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    SetModelAsNoLongerNeeded(model);
}
/**
 * Hash: 0x2F9AC754FE179D58 | ApiSet: undefined
 */
export function setPopulationBudgetMultiplier(fBudgetMultiplier) {
    SetPopulationBudgetMultiplier(fBudgetMultiplier);
}
/**
 * Hash: 0x18231AEF458BCFF2 | ApiSet: undefined
 */
export function setSrlTime(p0) {
    SetSrlTime(p0);
}
/**
 * Hash: 0xA03A6812529AD9C8 | ApiSet: undefined
 */
export function setSceneStreamingTracksCamPosThisFrame() {
    SetSceneStreamingTracksCamPosThisFrame();
}
/**
 * Hash: 0xD346248C1DCE0D76 | ApiSet: undefined
 */
export function setSrlReadaheadTimes(p0, p1, p2, p3) {
    SetSrlReadaheadTimes(p0, p1, p2, p3);
}
/**
 * Hash: 0x7C907E8A725E5FD2 | ApiSet: undefined
 */
export function setSrlLongJumpMode(p0) {
    SetSrlLongJumpMode(p0);
}
/**
 * Hash: 0x3180E991D4B8F248 | ApiSet: undefined
 */
export function analyticsPlaytimeFreemodeEnd() {
    AnalyticsPlaytimeFreemodeEnd();
}
/**
 * Hash: 0xE9F24081D84931B8 | ApiSet: undefined
 */
export function analyticsPlaytimeFreemodeStart() {
    AnalyticsPlaytimeFreemodeStart();
}
/**
 * Hash: 0x32D5898C4898CD95 | ApiSet: undefined
 */
export function clearTelemetryShopUi() {
    ClearTelemetryShopUi();
}
/**
 * Hash: 0xEC0BD8736DCAF841 | ApiSet: undefined
 */
export function _0xEC0BD8736DCAF841(toggle) {
    Citizen.invokeNative('0xEC0BD8736DCAF841', toggle);
}
/**
 * ```
 * Note: this native was added in build 1491.50
 * ```
 * ```
 * NativeDB Introduced: v1491
 * ```
 * Hash: 0x6F5BC5C4EAB42B15 | ApiSet: undefined
 */
export function _0x6F5BC5C4EAB42B15(linkID, type, contentId) {
    Citizen.invokeNative('0x6F5BC5C4EAB42B15', linkID, type, contentId);
}
/**
 * Hash: 0x52FA31DB8F3AD25D | ApiSet: undefined
 */
export function telemetryBountyTarget() {
    return TelemetryBountyTarget();
}
/**
 * Hash: 0x7581972ADF5D699A | ApiSet: undefined
 */
export function telemetryAnimalSkinned(type) {
    if (typeof type === 'string')
        type = this.getHashKey(type);
    return TelemetryAnimalSkinned(type);
}
/**
 * Hash: 0x3145044F3990D321 | ApiSet: undefined
 */
export function telemetryAmbientVignette(p0, p1, p2, p3, p4, p5, p6) {
    TelemetryAmbientVignette(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x565EAA726B2CE3B7 | ApiSet: undefined
 */
export function telemetryCampCreated(p0) {
    TelemetryCampCreated(p0);
}
/**
 * Hash: 0x217F47761376E16E | ApiSet: undefined
 */
export function telemetryCampSupplies(p0, p1, p2, p3, p4) {
    TelemetryCampSupplies(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xDF516E598D966D06 | ApiSet: undefined
 */
export function telemetryCampDonate(transactionId, p1, p2, p3, p4, slotId, p6, p7, p8) {
    if (typeof slotId === 'string')
        slotId = this.getHashKey(slotId);
    if (typeof p6 === 'string')
        p6 = this.getHashKey(p6);
    TelemetryCampDonate(transactionId, p1, p2, p3, p4, slotId, p6, p7, p8);
}
/**
 * Hash: 0xD6CB05DDAEE43AFD | ApiSet: undefined
 */
export function telemetryCollect(transactionId, p1, p2, p3, p4, p5, p6) {
    TelemetryCollect(transactionId, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x7207AD471BC9278C | ApiSet: undefined
 */
export function telemetryCharCreator(p0, p1, p2, p3, p4, p5, p6) {
    TelemetryCharCreator(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x621D719C4836292B | ApiSet: undefined
 */
export function telemetryCoupon(p0, p1, p2, p3, p4, p5) {
    TelemetryCoupon(p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * Works in MP only.
 * ```
 * Hash: 0xE692D336F8A2A97F | ApiSet: undefined
 */
export function telemetryCreateUuid() {
    return TelemetryCreateUuid();
}
/**
 * Hash: 0x78C2E029DB205A3A | ApiSet: undefined
 */
export function telemetryCraftItem(p0, p1, p2, quantity) {
    TelemetryCraftItem(p0, p1, p2, quantity);
}
/**
 * Hash: 0x40914CCF2A1AB531 | ApiSet: undefined
 */
export function telemetryCustom() {
    return TelemetryCustom();
}
/**
 * Hash: 0xE57529D23541D2DD | ApiSet: undefined
 */
export function telemetryDefensive(p0, p1, p2) {
    TelemetryDefensive(p0, p1, p2);
}
/**
 * Hash: 0xF5EAD898EF387E73 | ApiSet: undefined
 */
export function telemetryDiscoverable(p0) {
    TelemetryDiscoverable(p0);
}
/**
 * Hash: 0x2C24AF8EEEEF8A55 | ApiSet: undefined
 */
export function telemetryEmoteAddCategoryToSave(p0, p1, emote) {
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    TelemetryEmoteAddCategoryToSave(p0, p1, emote);
}
/**
 * Hash: 0x7CEF4AC79F7E7FAD | ApiSet: undefined
 */
export function telemetryFastTravel(p0, p1, p2, p3, p4) {
    TelemetryFastTravel(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x16B23D4F7A1F50D9 | ApiSet: undefined
 */
export function telemetryFavorEmote(p0, p1, p2) {
    TelemetryFavorEmote(p0, p1, p2);
}
/**
 * Hash: 0x536B6025E94AC48F | ApiSet: undefined
 */
export function telemetryGoldStore(p0, p1, p2, p3) {
    TelemetryGoldStore(p0, p1, p2, p3);
}
/**
 * Hash: 0x51EC204A6E5B5A1A | ApiSet: undefined
 */
export function telemetryGameProgress(p0, p1) {
    TelemetryGameProgress(p0, p1);
}
/**
 * Hash: 0x317D9C9560529CC2 | ApiSet: undefined
 */
export function telemetryGunLockerWeaponRemoved(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    TelemetryGunLockerWeaponRemoved(p0);
}
/**
 * Hash: 0xE6DC9B21AC7A8729 | ApiSet: undefined
 */
export function telemetryGangShares(p0, p1, p2, p3) {
    TelemetryGangShares(p0, p1, p2, p3);
}
/**
 * Hash: 0xC3ADF4880784FA9C | ApiSet: undefined
 */
export function telemetryGunLockerWeaponStored(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    TelemetryGunLockerWeaponStored(p0);
}
/**
 * Hash: 0x415FE28ED44BFF14 | ApiSet: undefined
 */
export function telemetryGunLocker() {
    TelemetryGunLocker();
}
/**
 * Hash: 0xE6B763C7F4902201 | ApiSet: undefined
 */
export function telemetryHonor(p0, p1) {
    TelemetryHonor(p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x25CC50EC1A6F3A96 | ApiSet: undefined
 */
export function telemetryHubNavigation(p0, p1, p2, p3) {
    TelemetryHubNavigation(p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x1B554723799245F4 | ApiSet: undefined
 */
export function telemetryIntroSkip(p0, p1, p2) {
    TelemetryIntroSkip(p0, p1, p2);
}
/**
 * Hash: 0xAE693EC3A178F6C2 | ApiSet: undefined
 */
export function telemetryHerbPicked(herbType) {
    if (typeof herbType === 'string')
        herbType = this.getHashKey(herbType);
    TelemetryHerbPicked(herbType);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x37AA282163B0D2C4 | ApiSet: undefined
 */
export function telemetryHubOffers(couponItem, p1) {
    TelemetryHubOffers(couponItem, p1);
}
/**
 * Hash: 0xCF63EF77B0DF0397 | ApiSet: undefined
 */
export function telemetryLoot(p0, p1, p2, p3) {
    TelemetryLoot(p0, p1, p2, p3);
}
/**
 * Hash: 0xECD67E9FA677CCCF | ApiSet: undefined
 */
export function telemetryLobbyProgression(p0, p1, p2, p3) {
    TelemetryLobbyProgression(p0, p1, p2, p3);
}
/**
 * Hash: 0xA2058154357726BB | ApiSet: undefined
 */
export function telemetryMatchOver(p0, p1, p2, p3, p4) {
    TelemetryMatchOver(p0, p1, p2, p3, p4);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x330029E121380CEB | ApiSet: undefined
 */
export function telemetryMatchNomination() {
    return TelemetryMatchNomination();
}
/**
 * Hash: 0xF620F47B4F4A78C4 | ApiSet: undefined
 */
export function telemetryMatchStarted() {
    return TelemetryMatchStarted();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x4C08D2B6D8BE17E4 | ApiSet: undefined
 */
export function telemetryMatchQueue(p0, p1, p2, p3, p4, p5, p6) {
    TelemetryMatchQueue(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x3255D4D2082C6339 | ApiSet: undefined
 */
export function telemetryMenuNavigation(p0, p1, p2, p3) {
    TelemetryMenuNavigation(p0, p1, p2, p3);
}
/**
 * Hash: 0xEF3C68F56BAD7B69 | ApiSet: undefined
 */
export function telemetryMatchVote() {
    return TelemetryMatchVote();
}
/**
 * Hash: 0x8EC7890D446BD9C1 | ApiSet: undefined
 */
export function telemetryMissionCheckpoint(p0, p1, p2) {
    TelemetryMissionCheckpoint(p0, p1, p2);
}
/**
 * ```
 * _TELEMETRY_C* - _TELEMETRY_G*
 * ```
 * Hash: 0x6571E4327390EC0B | ApiSet: undefined
 */
export function telemetryMissionFailedToLaunch(p0, p1, position, reason) {
    TelemetryMissionFailedToLaunch(p0, p1, position.x, position.y, position.z, reason);
}
/**
 * Hash: 0xEA323F5E1A4DA2F1 | ApiSet: undefined
 */
export function telemetryMissionIloOption(p0, p1) {
    TelemetryMissionIloOption(p0, p1);
}
/**
 * Hash: 0xD894437E12C17AEC | ApiSet: undefined
 */
export function telemetryMissionOver(p0, p1) {
    TelemetryMissionOver(p0, p1);
}
/**
 * Hash: 0x15B0CC1B36F1DE29 | ApiSet: undefined
 */
export function telemetryMissionStarted(p0, p1, p2, p3) {
    TelemetryMissionStarted(p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xB5013EFBB5516867 | ApiSet: undefined
 */
export function telemetryMoonshineBrew(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    TelemetryMoonshineBrew(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0xA72773C3134F9A57 | ApiSet: undefined
 */
export function telemetryNetCamp(p0, p1, p2, p3, p4, p5, p6) {
    TelemetryNetCamp(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xE26970A7AE0F28E9 | ApiSet: undefined
 */
export function telemetryNotoriety(p0, p1, p2, p3) {
    TelemetryNotoriety(p0, p1, p2, p3);
}
/**
 * Hash: 0xF37A2149BC9A8A27 | ApiSet: undefined
 */
export function telemetryParleyFeud(p0, p1, p2, p3, p4) {
    TelemetryParleyFeud(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xFF9052BC7A3B7D33 | ApiSet: undefined
 */
export function telemetryPersonalVehicleMount(p0, p1, p2, p3) {
    TelemetryPersonalVehicleMount(p0, p1, p2, p3);
}
/**
 * Hash: 0xE67AF24C5A3B6058 | ApiSet: undefined
 */
export function telemetryPersonalVehicleWagon(p0, p1, p2) {
    TelemetryPersonalVehicleWagon(p0, p1, p2);
}
/**
 * Hash: 0xED22BE4C5A399E63 | ApiSet: undefined
 */
export function telemetryPhoto(p0, p1, p2, p3) {
    TelemetryPhoto(p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x076C5843371EB889 | ApiSet: undefined
 */
export function telemetryPlayerMenuPin(p0, p1, p2, p3) {
    TelemetryPlayerMenuPin(p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x0777D65EE8A17517 | ApiSet: undefined
 */
export function telemetryPhotoCam(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    TelemetryPhotoCam(p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x8127C5AA05C5A210 | ApiSet: undefined
 */
export function telemetryPokerOver(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    TelemetryPokerOver(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x5DA4718DF897EB25 | ApiSet: undefined
 */
export function telemetryPlayerSpawned(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TelemetryPlayerSpawned(_ped);
}
/**
 * Hash: 0xCD6F8A0335D821F9 | ApiSet: undefined
 */
export function telemetryRegion(regionHash) {
    if (typeof regionHash === 'string')
        regionHash = this.getHashKey(regionHash);
    TelemetryRegion(regionHash);
}
/**
 * Hash: 0xB204BF9F30298D77 | ApiSet: undefined
 */
export function telemetryPrison(transactionId, bountyAmount, ped, completionType, jailTimeServed, jailTimeLeft, posseRole) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TelemetryPrison(transactionId, bountyAmount, _ped, completionType, jailTimeServed, jailTimeLeft, posseRole);
}
/**
 * Hash: 0xAB43D1C80B5E9500 | ApiSet: undefined
 */
export function telemetryRoleBounty(p0) {
    TelemetryRoleBounty(p0);
}
/**
 * Hash: 0x4AC38DFD286DAD14 | ApiSet: undefined
 */
export function telemetryRoleCollector(transactionId, collectible, category, p3, p4, p5, p6) {
    TelemetryRoleCollector(transactionId, collectible, category, p3, p4, p5, p6);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x6FB9EA308F302922 | ApiSet: undefined
 */
export function telemetryRoleNaturalist(transactionId, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    TelemetryRoleNaturalist(transactionId, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x99D40C5D74BC88E9 | ApiSet: undefined
 */
export function telemetryRoleMoonshiner(p0, transactionId) {
    TelemetryRoleMoonshiner(p0, transactionId);
}
/**
 * Hash: 0x32C2939564D74BFF | ApiSet: undefined
 */
export function telemetryRoleTokenTransaction(p0, p1, p2, p3, p4, p5) {
    TelemetryRoleTokenTransaction(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x476038B5A0734C10 | ApiSet: undefined
 */
export function telemetryRoleTrader(p0, transactionId) {
    TelemetryRoleTrader(p0, transactionId);
}
/**
 * ```
 * Creation of the metric is related to attribute filling, i. e. at camp fires, when the ped is resting.
 * _TELEMETRY_C* - _TELEMETRY_P*
 * ```
 * Hash: 0x7E002A36AEFCFB55 | ApiSet: undefined
 */
export function telemetryRpgGlobalCalculateAttributeCoreDelta() {
    TelemetryRpgGlobalCalculateAttributeCoreDelta();
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x61559675D23D8BD1 | ApiSet: undefined
 */
export function telemetrySample(transactionId, animal, p2, bSampled, bTranq) {
    TelemetrySample(transactionId, animal, p2, bSampled, bTranq);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xCA9E42F437625A85 | ApiSet: undefined
 */
export function telemetrySetShopForTransaction(transactionId, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    TelemetrySetShopForTransaction(transactionId, p1, p2);
}
/**
 * Hash: 0x9BEE018A63FFFAD9 | ApiSet: undefined
 */
export function telemetrySetIsFlow(toggle) {
    TelemetrySetIsFlow(toggle);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xB0B19B56697836F5 | ApiSet: undefined
 */
export function telemetryShopCutscene(p0, p1, p2, p3) {
    TelemetryShopCutscene(p0, p1, p2, p3);
}
/**
 * Hash: 0x775B2ED944E44973 | ApiSet: undefined
 */
export function telemetryShopEntry(shopType, shopRegion, region, p3, p4, p5) {
    TelemetryShopEntry(shopType, shopRegion, region, p3, p4, p5);
}
/**
 * Hash: 0xF78E669FDC202E73 | ApiSet: undefined
 */
export function telemetryShopExit(p0, p1) {
    TelemetryShopExit(p0, p1);
}
/**
 * Hash: 0x2A374E6F0075EE81 | ApiSet: undefined
 */
export function telemetryShopPurchase(p0, p1, p2, p3, p4) {
    TelemetryShopPurchase(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x9BD8A9D0A774A6F8 | ApiSet: undefined
 */
export function telemetryShopSell(p0, p1, p2, p3, centSalePrice) {
    TelemetryShopSell(p0, p1, p2, p3, centSalePrice);
}
/**
 * Hash: 0xF9F14080D80937BD | ApiSet: undefined
 */
export function telemetrySleep(p0) {
    TelemetrySleep(p0);
}
/**
 * ```
 * Returns false when transaction request is failing
 * ```
 * Hash: 0x80A02D9F948A8BCA | ApiSet: undefined
 */
export function telemetryTriggerTransactionRequest() {
    return TelemetryTriggerTransactionRequest();
}
/**
 * Hash: 0xF0D54E0651DD7E07 | ApiSet: undefined
 */
export function telemetryStartGunLockerInteraction() {
    TelemetryStartGunLockerInteraction();
}
/**
 * Hash: 0xF184B3ECE36219CF | ApiSet: undefined
 */
export function tryGetTelemetryIdFromTransactionId() {
    return TryGetTelemetryIdFromTransactionId();
}
/**
 * Hash: 0x7332461FC59EB7EC | ApiSet: undefined
 */
export function doesStreamedTextureDictExist(textureDict) {
    return DoesStreamedTextureDictExist(textureDict);
}
/**
 * Hash: 0x54D6900929CCF162 | ApiSet: undefined
 */
export function hasStreamedTextureDictLoaded(textureDict) {
    return HasStreamedTextureDictLoaded(textureDict);
}
/**
 * Hash: 0xBA0163B277C2D2D0 | ApiSet: undefined
 */
export function doesStreamedTxdExist(txdHash) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    return DoesStreamedTxdExist(txdHash);
}
/**
 * Hash: 0xBE72591D1509FFE4 | ApiSet: undefined
 */
export function hasStreamedTxdLoaded(txdHash) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    return HasStreamedTxdLoaded(txdHash);
}
/**
 * Hash: 0xDB1BD07FB464584D | ApiSet: undefined
 */
export function requestStreamedTxd(txdHash, p1) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    RequestStreamedTxd(txdHash, p1);
}
/**
 * Hash: 0xC1BA29DF5631B0F8 | ApiSet: undefined
 */
export function requestStreamedTextureDict(textureDict, p1) {
    RequestStreamedTextureDict(textureDict, p1);
}
/**
 * Hash: 0x8232F37DF762ACB2 | ApiSet: undefined
 */
export function setStreamedTxdAsNoLongerNeeded(txdHash) {
    if (typeof txdHash === 'string')
        txdHash = this.getHashKey(txdHash);
    SetStreamedTxdAsNoLongerNeeded(txdHash);
}
/**
 * Hash: 0x4ACA10A91F66F1E2 | ApiSet: undefined
 */
export function setStreamedTextureDictAsNoLongerNeeded(textureDict) {
    SetStreamedTextureDictAsNoLongerNeeded(textureDict);
}
/**
 * Hash: 0xAD7B70F7230C5A12 | ApiSet: undefined
 */
export function closeAllUiapps() {
    CloseAllUiapps();
}
/**
 * Hash: 0xE555EC27D65EDE80 | ApiSet: undefined
 */
export function canLaunchUiappByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return CanLaunchUiappByHash(appNameHash);
}
/**
 * Hash: 0x16F47D434B6086BF | ApiSet: undefined
 */
export function canLaunchUiappByHashWithEntry(appNameHash, entryHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    if (typeof entryHash === 'string')
        entryHash = this.getHashKey(entryHash);
    return CanLaunchUiappByHashWithEntry(appNameHash, entryHash);
}
/**
 * Hash: 0x12769EEB8DBD7A7B | ApiSet: undefined
 */
export function closeAllUiappsImmediate() {
    CloseAllUiappsImmediate();
}
/**
 * Hash: 0x818C6CA9B659E8EC | ApiSet: undefined
 */
export function closeUiapp(appName) {
    CloseUiapp(appName);
}
/**
 * Hash: 0x2FF10C9C3F92277E | ApiSet: undefined
 */
export function closeUiappByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    CloseUiappByHash(appNameHash);
}
/**
 * Hash: 0x04428420A248A354 | ApiSet: undefined
 */
export function closeUiappByHashImmediate(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    CloseUiappByHashImmediate(appNameHash);
}
/**
 * Hash: 0x3015635426D1B17C | ApiSet: undefined
 */
export function closeUiappImmediate(appName) {
    CloseUiappImmediate(appName);
}
/**
 * Hash: 0x96FD694FE5BE55DC | ApiSet: undefined
 */
export function getUiappCurrentActivityByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return GetUiappCurrentActivityByHash(appNameHash);
}
/**
 * Hash: 0xDB30BEC7A7A5CBD3 | ApiSet: undefined
 */
export function isAnyUiappRunning() {
    return IsAnyUiappRunning();
}
/**
 * Hash: 0xAC959AB99AAF3D9F | ApiSet: undefined
 */
export function isAnyUiappActive() {
    return IsAnyUiappActive();
}
/**
 * Hash: 0x25B7A0206BDFAC76 | ApiSet: undefined
 */
export function isUiappActiveByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return IsUiappActiveByHash(appNameHash);
}
/**
 * Hash: 0x4E511D093A86AD49 | ApiSet: undefined
 */
export function isUiappRunningByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return IsUiappRunningByHash(appNameHash);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xDE4A9B35D028979F | ApiSet: undefined
 */
export function isUiappRunning(appName) {
    return IsUiappRunning(appName);
}
/**
 * Hash: 0x7B2027BAC5C8EC89 | ApiSet: undefined
 */
export function launchUiappWithEntry(appName, entry) {
    return LaunchUiappWithEntry(appName, entry);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x42095B886D30DE66 | ApiSet: undefined
 */
export function isUiappTransitioningByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return IsUiappTransitioningByHash(appNameHash);
}
/**
 * Hash: 0xC8FC7F4E4CF4F581 | ApiSet: undefined
 */
export function launchUiappByHash(appNameHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    return LaunchUiappByHash(appNameHash);
}
/**
 * Hash: 0xC1BCF31E975B3195 | ApiSet: undefined
 */
export function launchUiappByHashWithEntry(appNameHash, entryHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    if (typeof entryHash === 'string')
        entryHash = this.getHashKey(entryHash);
    return LaunchUiappByHashWithEntry(appNameHash, entryHash);
}
/**
 * Hash: 0x7689CD255655BFD7 | ApiSet: undefined
 */
export function requestUiappTransitionByHash(appNameHash, transitionHash) {
    if (typeof appNameHash === 'string')
        appNameHash = this.getHashKey(appNameHash);
    if (typeof transitionHash === 'string')
        transitionHash = this.getHashKey(transitionHash);
    return RequestUiappTransitionByHash(appNameHash, transitionHash);
}
/**
 * ```
 * Note: you must use VAR_STRING
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x16794E044C9EFB58 | ApiSet: undefined
 */
export function bgDisplayText(text, x, y) {
    BgDisplayText(text, x, y);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xA1253A3C870B6843 | ApiSet: undefined
 */
export function bgSetTextScale(scaleX, scaleY) {
    BgSetTextScale(scaleX, scaleY);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x16FA5CE47F184F1E | ApiSet: undefined
 */
export function bgSetTextColor(red, green, blue, alpha) {
    BgSetTextColor(red, green, blue, alpha);
}
/**
 * Hash: 0xEB2ED1DC3AEC0654 | ApiSet: undefined
 */
export function addCoverBlockingVolume(volume, p1, p2, p3, p4) {
    AddCoverBlockingVolume(volume, p1, p2, p3, p4);
}
/**
 * Hash: 0x45C597097DD7CB81 | ApiSet: undefined
 */
export function addCoverBlockingArea(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9) {
    AddCoverBlockingArea(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9);
}
/**
 * Hash: 0xD5C12A75C7B9497F | ApiSet: undefined
 */
export function addCoverPoint(p0, p1, p2, p3, p4, p5, p6, p7) {
    return AddCoverPoint(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xE8F1A5B4CED3725A | ApiSet: undefined
 */
export function addFleeTargetCoords(ped, position, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    AddFleeTargetCoords(_ped, position.x, position.y, position.z, p4);
}
/**
 * Hash: 0x23083260DEC3A551 | ApiSet: undefined
 */
export function addPatrolRouteLink(node1, node2) {
    AddPatrolRouteLink(node1, node2);
}
/**
 * ```
 * Params: p2 is always -1.f in R* Scripts
 * ```
 * Hash: 0x3923EC958249657D | ApiSet: undefined
 */
export function addFleeTargetPed(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    AddFleeTargetPed(_ped, _targetPed, p2);
}
/**
 * Hash: 0x60F9A4393A21F741 | ApiSet: undefined
 */
export function assistedMovementIsRouteLoaded(route) {
    return AssistedMovementIsRouteLoaded(route);
}
/**
 * Hash: 0x8EDF950167586B7C | ApiSet: undefined
 */
export function addPatrolRouteNode(nodeId, scenarioName, position, lookPosX, lookPosY, lookPosZ, duration, p9) {
    AddPatrolRouteNode(nodeId, scenarioName, position.x, position.y, position.z, lookPosX, lookPosY, lookPosZ, duration, p9);
}
/**
 * Hash: 0x3548536485DD792B | ApiSet: undefined
 */
export function assistedMovementRemoveRoute(route) {
    AssistedMovementRemoveRoute(route);
}
/**
 * ```
 * Returns true when requested asset is loaded
 * ```
 * Hash: 0x5E5D96BE25E9DF68 | ApiSet: undefined
 */
export function areCompositeLootableEntityDefAssetsLoaded(asset) {
    if (typeof asset === 'string')
        asset = this.getHashKey(asset);
    return AreCompositeLootableEntityDefAssetsLoaded(asset);
}
/**
 * Hash: 0xD5002D78B7162E1B | ApiSet: undefined
 */
export function assistedMovementSetRouteProperties(route, props) {
    AssistedMovementSetRouteProperties(route, props);
}
/**
 * Hash: 0x8360C47380B6F351 | ApiSet: undefined
 */
export function associatePropWithScenario(scenario, entity, propName, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return AssociatePropWithScenario(scenario, _entity, propName, p3);
}
/**
 * Hash: 0xC35B5CDB2824CF69 | ApiSet: undefined
 */
export function clearDrivebyTaskUnderneathDrivingTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearDrivebyTaskUnderneathDrivingTask(_ped);
}
/**
 * Hash: 0x2D19BC4DF626CBE7 | ApiSet: undefined
 */
export function canStartItemInteraction(ped, itemHash, interactionAnimHash, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof itemHash === 'string')
        itemHash = this.getHashKey(itemHash);
    if (typeof interactionAnimHash === 'string')
        interactionAnimHash = this.getHashKey(interactionAnimHash);
    return CanStartItemInteraction(_ped, itemHash, interactionAnimHash, p3);
}
/**
 * Hash: 0xE1EF3C1216AFF2CD | ApiSet: undefined
 */
export function clearPedTasks(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedTasks(_ped, p1, p2);
}
/**
 * Hash: 0x176CECF6F920D707 | ApiSet: undefined
 */
export function clearPedSecondaryTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedSecondaryTask(_ped);
}
/**
 * Hash: 0x3841422E9C488D8C | ApiSet: undefined
 */
export function clearSequenceTask() {
    return ClearSequenceTask();
}
/**
 * Hash: 0xB043ECA801B8CBC1 | ApiSet: undefined
 */
export function closePatrolRoute() {
    ClosePatrolRoute();
}
/**
 * ```
 * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
 * resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
 * ```
 * Hash: 0xAAA34F8A7CB32098 | ApiSet: undefined
 */
export function clearPedTasksImmediately(ped, p1, resetCrouch) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedTasksImmediately(_ped, p1, resetCrouch);
}
/**
 * Hash: 0x39E72BC99E6360CB | ApiSet: undefined
 */
export function closeSequenceTask(taskSequenceId) {
    CloseSequenceTask(taskSequenceId);
}
/**
 * Hash: 0xAF8A443CCC8018DC | ApiSet: undefined
 */
export function createPatrolRoute() {
    CreatePatrolRoute();
}
/**
 * ```
 * groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
 * p7: -1 in R* Scripts
 * Returns compositeId
 * ```
 * Hash: 0x5B4BBE80AD5972DC | ApiSet: undefined
 */
export function createHerbComposites(asset, position, heading, groundSetting, p7) {
    if (typeof asset === 'string')
        asset = this.getHashKey(asset);
    return CreateHerbComposites(asset, position.x, position.y, position.z, heading, groundSetting, p7);
}
/**
 * ```
 * Returns scenario
 * ```
 * Hash: 0x794AB1379A74064D | ApiSet: undefined
 */
export function createScenarioPointHashAttachedToEntity(entity, scenarioHash, position, heading, p6, p7, p8) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    return CreateScenarioPointHashAttachedToEntity(_entity, scenarioHash, position.x, position.y, position.z, heading, p6, p7, p8);
}
/**
 * ```
 * Returns scenario
 * ```
 * Hash: 0x94B745CE41DB58A1 | ApiSet: undefined
 */
export function createScenarioPointHash(scenarioHash, position, heading, p5, p6, p7) {
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    return CreateScenarioPointHash(scenarioHash, position.x, position.y, position.z, heading, p5, p6, p7);
}
/**
 * Hash: 0x5C885E0978B6AD60 | ApiSet: undefined
 */
export function createWaypointPath(pathName, nodes, p3) {
    return CreateWaypointPath(pathName, nodes, p3);
}
/**
 * Hash: 0x7981037A96E7D174 | ApiSet: undefined
 */
export function cuffPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    CuffPed(_ped);
}
/**
 * Hash: 0x7767DD9D65E91319 | ApiSet: undefined
 */
export function deletePatrolRoute(patrolRoute) {
    DeletePatrolRoute(patrolRoute);
}
/**
 * ```
 * Params: p1 is always false except in script nb_egg_protector
 * ```
 * Hash: 0x5758B1EE0C3FD4AC | ApiSet: undefined
 */
export function deletePatchObjectsFromHerbComposites(compositeId, p1) {
    DeletePatchObjectsFromHerbComposites(compositeId, p1);
}
/**
 * Hash: 0x81948DFE4F5A0283 | ApiSet: undefined
 */
export function deleteScenarioPoint(scenario) {
    DeleteScenarioPoint(scenario);
}
/**
 * Hash: 0x6EF4E31B4D5D2DA0 | ApiSet: undefined
 */
export function disassociatePropFromScenario(scenario, propName) {
    return DisassociatePropFromScenario(scenario, propName);
}
/**
 * Hash: 0x36D188AECB26094B | ApiSet: undefined
 */
export function detachCarriablePed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    DetachCarriablePed(_ped);
}
/**
 * Hash: 0x5A59271FFADD33C1 | ApiSet: undefined
 */
export function doesScenarioExistInArea(position, radius, p4, p5, p6) {
    return DoesScenarioExistInArea(position.x, position.y, position.z, radius, p4, p5, p6);
}
/**
 * Hash: 0x76E98B52369A289C | ApiSet: undefined
 */
export function doesScenarioGroupExistHash(scenarioGroup) {
    if (typeof scenarioGroup === 'string')
        scenarioGroup = this.getHashKey(scenarioGroup);
    return DoesScenarioGroupExistHash(scenarioGroup);
}
/**
 * Hash: 0x841475AC96E794D1 | ApiSet: undefined
 */
export function doesScenarioPointExist(scenario) {
    return DoesScenarioPointExist(scenario);
}
/**
 * Hash: 0xF9034C136C9E00D3 | ApiSet: undefined
 */
export function doesScenarioGroupExist(scenarioGroup) {
    return DoesScenarioGroupExist(scenarioGroup);
}
/**
 * Hash: 0x6EEAD6AF637DA752 | ApiSet: undefined
 */
export function doesScenarioOfTypeExistInAreaHash(position, typeHash, radius, p5) {
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    return DoesScenarioOfTypeExistInAreaHash(position.x, position.y, position.z, typeHash, radius, p5);
}
/**
 * Hash: 0xEED08A3A98B847E2 | ApiSet: undefined
 */
export function endDuel(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    EndDuel(_ped, p1, p2);
}
/**
 * Hash: 0xE47DD64B9F02677D | ApiSet: undefined
 */
export function findModelForItem(item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return FindModelForItem(item);
}
/**
 * Hash: 0x534AEBA6E5ED4CAB | ApiSet: undefined
 */
export function getActiveVehicleMissionType(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetActiveVehicleMissionType(_vehicle);
}
/**
 * Hash: 0xEA31F199A73801D3 | ApiSet: undefined
 */
export function doesScenarioPointHaveProps(scenario) {
    return DoesScenarioPointHaveProps(scenario);
}
/**
 * Hash: 0x444C910A5058E568 | ApiSet: undefined
 */
export function forceScenarioGroupPriority(p0, p1) {
    ForceScenarioGroupPriority(p0, p1);
}
/**
 * ```
 * Checks if there is a cover point at position
 * ```
 * Hash: 0xA98B8E3C088E5A31 | ApiSet: undefined
 */
export function doesScriptedCoverPointExistAtCoords(p0, p1, p2, p3) {
    return DoesScriptedCoverPointExistAtCoords(p0, p1, p2, p3);
}
/**
 * Hash: 0xF533D68FF970D190 | ApiSet: undefined
 */
export function findScenarioOfTypeHash(xPos, yPos, zPos, scenarioType, distance, p5, p6) {
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    return FindScenarioOfTypeHash(xPos, yPos, zPos, scenarioType, distance, p5, p6);
}
/**
 * Hash: 0x0CCFE72B43C9CF96 | ApiSet: undefined
 */
export function getIsCarriableEntity(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetIsCarriableEntity(_entity);
}
/**
 * Hash: 0xB0760331C7AA4155 | ApiSet: undefined
 */
export function getIsTaskActive(ped, taskIndex) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetIsTaskActive(_ped, taskIndex);
}
/**
 * ```
 * Flowers, Stalks or whatever the composite has
 * ```
 * Hash: 0x96C6ED22FB742C3E | ApiSet: undefined
 */
export function getHerbCompositeNumEntities(compositeId) {
    return GetHerbCompositeNumEntities(compositeId);
}
/**
 * ```
 * item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
 * http://prntscr.com/1qtp3bz
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 * ```
 * Hash: 0x05A0100EA714DB68 | ApiSet: undefined
 */
export function getItemInteractionEntityFromPed(ped, item) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return GetItemInteractionEntityFromPed(_ped, item);
}
/**
 * Hash: 0x4687E69D258BBE41 | ApiSet: undefined
 */
export function getHogtieEscapeTimer(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetHogtieEscapeTimer(_ped);
}
/**
 * Hash: 0xCB4E8BE8A0063C5D | ApiSet: undefined
 */
export function getIsWaypointRecordingLoaded(waypointRecording) {
    return GetIsWaypointRecordingLoaded(waypointRecording);
}
/**
 * Hash: 0x8785E6E40C7A8819 | ApiSet: undefined
 */
export function getIsPedAimingInTheAir(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetIsPedAimingInTheAir(_ped);
}
/**
 * Hash: 0x804425C4BBD00883 | ApiSet: undefined
 */
export function getItemInteractionItemId(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetItemInteractionItemId(_ped);
}
/**
 * Hash: 0xBC864A70AD55E0C1 | ApiSet: undefined
 */
export function getItemInteractionPromptProgress(ped, inputContext) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof inputContext === 'string')
        inputContext = this.getHashKey(inputContext);
    return GetItemInteractionPromptProgress(_ped, inputContext);
}
/**
 * Hash: 0x6AA3DCA2C6F5EB6D | ApiSet: undefined
 */
export function getItemInteractionState(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetItemInteractionState(_ped);
}
/**
 * Hash: 0x8517D4A6CA8513ED | ApiSet: undefined
 */
export function getPedDesiredMoveBlendRatio(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedDesiredMoveBlendRatio(_ped);
}
/**
 * Hash: 0xED1F514AF4732258 | ApiSet: undefined
 */
export function getLedHorseFromPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetLedHorseFromPed(_ped);
}
/**
 * Hash: 0x5BA659955369B0E2 | ApiSet: undefined
 */
export function getPedUsingScenarioPoint(scenario) {
    return GetPedUsingScenarioPoint(scenario);
}
/**
 * Hash: 0x1948BBE561A2375A | ApiSet: undefined
 */
export function getPedIsIgnoringDeadBodies(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedIsIgnoringDeadBodies(_ped);
}
/**
 * Hash: 0xD39A2F3E7FCAFF08 | ApiSet: undefined
 */
export function getPedWaypointOverrideSpeed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWaypointOverrideSpeed(_ped);
}
/**
 * Hash: 0xE6A877C64CAF1BC5 | ApiSet: undefined
 */
export function getPedWaypointDistance(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWaypointDistance(_ped);
}
/**
 * Hash: 0xD04241BBF6D03A5E | ApiSet: undefined
 */
export function getRansackScenarioPointPedIsUsing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetRansackScenarioPointPedIsUsing(_ped);
}
/**
 * Hash: 0x2720AAA75001E094 | ApiSet: undefined
 */
export function getPedWaypointProgress(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWaypointProgress(_ped);
}
/**
 * Hash: 0x295514F198EFD0CA | ApiSet: undefined
 */
export function getPropForScenarioPoint(scenarioPoint, name) {
    return GetPropForScenarioPoint(scenarioPoint, name);
}
/**
 * ```
 * Returns m_eContainerState
 * ```
 * Hash: 0xB219612B5568E9EC | ApiSet: undefined
 */
export function getScenarioContainerOpeningState(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return GetScenarioContainerOpeningState(_entity);
}
/**
 * ```
 * Params: p1 is always true in R* Scripts
 * ```
 * Hash: 0xA8452DD321607029 | ApiSet: undefined
 */
export function getScenarioPointCoords(scenario, p1) {
    return new Vector3(GetScenarioPointCoords(scenario, p1));
}
/**
 * ```
 * Params: p1 is always true in R* Scripts
 * ```
 * Hash: 0xB93EA7184BAA85C3 | ApiSet: undefined
 */
export function getScenarioPointHeading(scenario, p1) {
    return GetScenarioPointHeading(scenario, p1);
}
/**
 * Hash: 0xDF7993356F52359A | ApiSet: undefined
 */
export function getScenarioPointPedIsUsing(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetScenarioPointPedIsUsing(_ped, p1);
}
/**
 * ```
 * Note: The current name for this native is the old name of 0x295514F198EFD0CA
 * Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
 * ```
 * Hash: 0x7467165EE97D3C68 | ApiSet: undefined
 */
export function getScenarioPointEntity(scenario) {
    return GetScenarioPointEntity(scenario);
}
/**
 * Hash: 0x2D0571BB55879DA2 | ApiSet: undefined
 */
export function getScenarioPointTypePedIsUsing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetScenarioPointTypePedIsUsing(_ped);
}
/**
 * Hash: 0x6718F40313A2B5A6 | ApiSet: undefined
 */
export function getScenarioPointRadius(scenario) {
    return GetScenarioPointRadius(scenario);
}
/**
 * Hash: 0xA92450B5AE687AAF | ApiSet: undefined
 */
export function getScenarioPointType(scenario) {
    return GetScenarioPointType(scenario);
}
/**
 * ```
 * Gets the status of a script-assigned task, and returns an int between 0-8
 * taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt
 * WAITING_TO_START_TASK = 0,
 * PERFORMING_TASK
 * DORMANT_TASK
 * VACANT_STAGE
 * GROUP_TASK_STAGE
 * ATTRACTOR_SCRIPT_TASK_STAGE
 * SECONDARY_TASK_STAGE
 * TASK_NOT_FOUND
 * FINISHED_TASK
 * ```
 * Hash: 0x77F1BEB8863288D5 | ApiSet: undefined
 */
export function getScriptTaskStatus(ped, taskHash, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof taskHash === 'string')
        taskHash = this.getHashKey(taskHash);
    return GetScriptTaskStatus(_ped, taskHash, p2);
}
/**
 * ```
 * Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
 * ```
 * Hash: 0x345EC3B7EBDE1CB5 | ApiSet: undefined
 */
export function getScenarioPointsInArea(posX, posY, posZ, radius, size) {
    return GetScenarioPointsInArea(posX, posY, posZ, radius, size);
}
/**
 * ```
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 * ```
 * Hash: 0x00A9010CFE1E3533 | ApiSet: undefined
 */
export function getSequenceProgress(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetSequenceProgress(_ped);
}
/**
 * ```
 * Fishing Research: https://pastebin.com/NmK5ZLVs
 * Only used in R* Scripts fishing_core and av_fishing_river
 * ```
 * Hash: 0xF3735ACD11ACD500 | ApiSet: undefined
 */
export function getTaskFishing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTaskFishing(_ped);
}
/**
 * Hash: 0xA710DC5D25F8B942 | ApiSet: undefined
 */
export function getScriptTaskActionTime(ped, task) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof task === 'string')
        task = this.getHashKey(task);
    return GetScriptTaskActionTime(_ped, task);
}
/**
 * Hash: 0x844CEEE428EA35B0 | ApiSet: undefined
 */
export function getTaskMoveNetworkPhaseFloat(ped, phaseName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTaskMoveNetworkPhaseFloat(_ped, phaseName);
}
/**
 * Hash: 0x594A1028FC2A3E85 | ApiSet: undefined
 */
export function getScriptedCoverPointCoords(coverpoint) {
    return new Vector3(GetScriptedCoverPointCoords(coverpoint));
}
/**
 * Hash: 0xB4F47213DF45A64C | ApiSet: undefined
 */
export function getTaskMoveNetworkEvent(ped, eventName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTaskMoveNetworkEvent(_ped, eventName);
}
/**
 * Hash: 0x3DC971EB22F73447 | ApiSet: undefined
 */
export function getVehicleWaypointPlaybackOverrideSpeed(p0) {
    return GetVehicleWaypointPlaybackOverrideSpeed(p0);
}
/**
 * ```
 * Returns hash of the underlying move network def, see move_networks.xml
 * https://alloc8or.re/rdr3/doc/misc/move_networks.txt
 * ```
 * Hash: 0xCACC2F9D994504B7 | ApiSet: undefined
 */
export function getTaskMoveNetworkId(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTaskMoveNetworkId(_ped);
}
/**
 * Hash: 0x9824CFF8FC66E159 | ApiSet: undefined
 */
export function getVehicleWaypointProgress(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleWaypointProgress(_vehicle);
}
/**
 * Hash: 0x717E4D1F2048376D | ApiSet: undefined
 */
export function getTaskMoveNetworkState(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetTaskMoveNetworkState(_ped);
}
/**
 * Hash: 0x416B62AC8B9E5BBD | ApiSet: undefined
 */
export function getVehicleWaypointTargetPoint(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleWaypointTargetPoint(_vehicle);
}
/**
 * Hash: 0xA5B769058763E497 | ApiSet: undefined
 */
export function getWaypointDistanceAlongRoute(waypointRecording, p1) {
    return GetWaypointDistanceAlongRoute(waypointRecording, p1);
}
/**
 * ```
 * Returns true while a hat is being picked up
 * _IS_A* - _IS_D*
 * ```
 * Hash: 0x11CD066F54DA0133 | ApiSet: undefined
 */
export function isHatBeingPickedUp(hatObject) {
    return IsHatBeingPickedUp(hatObject);
}
/**
 * Hash: 0x8785E6E40C7A8818 | ApiSet: undefined
 */
export function isDrivebyTaskUnderneathDrivingTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsDrivebyTaskUnderneathDrivingTask(_ped);
}
/**
 * Hash: 0xA320EF046186FA3B | ApiSet: undefined
 */
export function isMountedWeaponTaskUnderneathDrivingTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsMountedWeaponTaskUnderneathDrivingTask(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xCF9B71C0AF824036 | ApiSet: undefined
 */
export function isEmoteTaskRunning(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsEmoteTaskRunning(_ped, p1);
}
/**
 * Hash: 0xD4D8636C0199A939 | ApiSet: undefined
 */
export function isMoveBlendRatioRunning(moveBlendRatio) {
    return IsMoveBlendRatioRunning(moveBlendRatio);
}
/**
 * ```
 * Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
 * _IS_A* - _IS_D*
 * ```
 * Hash: 0x4ECCC2815CA79AE2 | ApiSet: undefined
 */
export function isHatBeingPickedUp2(hatObject) {
    return IsHatBeingPickedUp2(hatObject);
}
/**
 * Hash: 0x349CE7B56DAFD95C | ApiSet: undefined
 */
export function isMoveBlendRatioStill(moveBlendRatio) {
    return IsMoveBlendRatioStill(moveBlendRatio);
}
/**
 * Hash: 0x24A2AD74FA9814E2 | ApiSet: undefined
 */
export function isMoveBlendRatioSprinting(moveBlendRatio) {
    return IsMoveBlendRatioSprinting(moveBlendRatio);
}
/**
 * Hash: 0xF133BBBE91E1691F | ApiSet: undefined
 */
export function isMoveBlendRatioWalking(moveBlendRatio) {
    return IsMoveBlendRatioWalking(moveBlendRatio);
}
/**
 * Hash: 0xA9CC7856D52DBD25 | ApiSet: undefined
 */
export function isPedArrestingAnyPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedArrestingAnyPed(_ped);
}
/**
 * Hash: 0x74E559B3BC910685 | ApiSet: undefined
 */
export function isPedCuffed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedCuffed(_ped);
}
/**
 * Hash: 0xAA135F9482C82CC3 | ApiSet: undefined
 */
export function isPedActiveInScenario(ped, scenario) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedActiveInScenario(_ped, scenario);
}
/**
 * Hash: 0xC8B29D18022EA2B7 | ApiSet: undefined
 */
export function isPedDuelling(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedDuelling(_ped);
}
/**
 * ```
 * This function is hard-coded to always return false.
 * ```
 * Hash: 0x90A09F3A45FED688 | ApiSet: undefined
 */
export function isPedBeingArrested(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedBeingArrested(_ped);
}
/**
 * Hash: 0x0C3CB2E600C8977D | ApiSet: undefined
 */
export function isPedExitingScenario(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedExitingScenario(_ped, p1);
}
/**
 * Hash: 0x2A74E1D5F2F00EEC | ApiSet: undefined
 */
export function isPedGettingUp(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedGettingUp(_ped);
}
/**
 * ```
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 * ```
 * Hash: 0xDEB6D52126E7D640 | ApiSet: undefined
 */
export function isPedInWrithe(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInWrithe(_ped);
}
/**
 * Hash: 0xF330A5C062B29BED | ApiSet: undefined
 */
export function isPedInHitReact(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedInHitReact(_ped);
}
/**
 * Hash: 0xEFC4303DDC6E60D3 | ApiSet: undefined
 */
export function isPedLeadingHorse(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedLeadingHorse(_ped);
}
/**
 * Hash: 0xC5286FFC176F28A2 | ApiSet: undefined
 */
export function isPedRunning(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRunning(_ped);
}
/**
 * Hash: 0xEC7E480FF8BD0BED | ApiSet: undefined
 */
export function isPedRunningTaskItemInteraction(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRunningTaskItemInteraction(_ped);
}
/**
 * Hash: 0x038B1F1674F0E242 | ApiSet: undefined
 */
export function isPedRunningInspectionTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedRunningInspectionTask(_ped);
}
/**
 * Hash: 0x57E457CD2C0FC168 | ApiSet: undefined
 */
export function isPedSprinting(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedSprinting(_ped);
}
/**
 * Hash: 0x916B8E075ABC8B4E | ApiSet: undefined
 */
export function isPedScenarioReactLooking(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedScenarioReactLooking(_ped, p1);
}
/**
 * Hash: 0xAC29253EEF8F0180 | ApiSet: undefined
 */
export function isPedStill(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedStill(_ped);
}
/**
 * Hash: 0xDE4C184B2B9B071A | ApiSet: undefined
 */
export function isPedWalking(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedWalking(_ped);
}
/**
 * Hash: 0x367A09DED4E05B99 | ApiSet: undefined
 */
export function isScenarioGroupEnabled(scenarioGroup) {
    return IsScenarioGroupEnabled(scenarioGroup);
}
/**
 * Hash: 0xDCC374913DE6AAA6 | ApiSet: undefined
 */
export function isScenarioGroupEnabledHash(scenarioGroup) {
    if (typeof scenarioGroup === 'string')
        scenarioGroup = this.getHashKey(scenarioGroup);
    return IsScenarioGroupEnabledHash(scenarioGroup);
}
/**
 * Hash: 0x788756D73AC2E07C | ApiSet: undefined
 */
export function isScenarioOccupied(p0, p1, p2, p3, p4) {
    return IsScenarioOccupied(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x0CC36D4156006509 | ApiSet: undefined
 */
export function isScenarioPointActive(scenario) {
    return IsScenarioPointActive(scenario);
}
/**
 * Hash: 0x3A815DB3EA088722 | ApiSet: undefined
 */
export function isScenarioTypeEnabled(scenarioType) {
    return IsScenarioTypeEnabled(scenarioType);
}
/**
 * Hash: 0x8569C38D2FB80650 | ApiSet: undefined
 */
export function isScenarioPointFlagSet(scenario, flag) {
    return IsScenarioPointFlagSet(scenario, flag);
}
/**
 * Hash: 0x30ED88D5E0C56A37 | ApiSet: undefined
 */
export function isTaskMoveNetworkReadyForTransition(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsTaskMoveNetworkReadyForTransition(_ped);
}
/**
 * Hash: 0x921CE12C489C4C41 | ApiSet: undefined
 */
export function isTaskMoveNetworkActive(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsTaskMoveNetworkActive(_ped);
}
/**
 * Hash: 0x559A6F8C5133B4EE | ApiSet: undefined
 */
export function isTeamCarriableEntity(p0, p1) {
    return IsTeamCarriableEntity(p0, p1);
}
/**
 * Hash: 0xE03B3F2D3DC59B64 | ApiSet: undefined
 */
export function isWaypointPlaybackGoingOnForPed(ped, waypointRecording) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsWaypointPlaybackGoingOnForPed(_ped, waypointRecording);
}
/**
 * Hash: 0xF5134943EA29868C | ApiSet: undefined
 */
export function isWaypointPlaybackGoingOnForVehicle(p0, p1) {
    return IsWaypointPlaybackGoingOnForVehicle(p0, p1);
}
/**
 * Hash: 0x78B4567E18B54480 | ApiSet: undefined
 */
export function makeObjectCarriable(object) {
    MakeObjectCarriable(object);
}
/**
 * Hash: 0x67BFCED22909834D | ApiSet: undefined
 */
export function makeObjectNotCarriable(object) {
    MakeObjectNotCarriable(object);
}
/**
 * Hash: 0x0000A8ACDC2E1B6A | ApiSet: undefined
 */
export function _0x0000A8ACDC2E1B6A(p0, p1) {
    Citizen.invokeNative('0x0000A8ACDC2E1B6A', p0, p1);
}
/**
 * Hash: 0x00FFE0F85253C572 | ApiSet: undefined
 */
export function _0x00FFE0F85253C572(p0) {
    return Citizen.invokeNative('0x00FFE0F85253C572', p0);
}
/**
 * Hash: 0x01AF8A3729231A43 | ApiSet: undefined
 */
export function _0x01AF8A3729231A43(p0) {
    return Citizen.invokeNative('0x01AF8A3729231A43', p0);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x03D741CB4052E26C | ApiSet: undefined
 */
export function _0x03D741CB4052E26C(p0) {
    return Citizen.invokeNative('0x03D741CB4052E26C', p0);
}
/**
 * Hash: 0x0365000D8BF86531 | ApiSet: undefined
 */
export function _0x0365000D8BF86531(p0) {
    return Citizen.invokeNative('0x0365000D8BF86531', p0);
}
/**
 * Hash: 0x098036CAB8373D36 | ApiSet: undefined
 */
export function _0x098036CAB8373D36(p0) {
    Citizen.invokeNative('0x098036CAB8373D36', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x06ECF3925BC2ABAE | ApiSet: undefined
 */
export function _0x06ECF3925BC2ABAE(p0, p1) {
    Citizen.invokeNative('0x06ECF3925BC2ABAE', p0, p1);
}
/**
 * Hash: 0x098CAA6DBE7D8D82 | ApiSet: undefined
 */
export function _0x098CAA6DBE7D8D82(p0, p1) {
    Citizen.invokeNative('0x098CAA6DBE7D8D82', p0, p1);
}
/**
 * Hash: 0x0E184495B27BB57D | ApiSet: undefined
 */
export function _0x0E184495B27BB57D() {
    Citizen.invokeNative('0x0E184495B27BB57D');
}
/**
 * Hash: 0x0A98A362C5A19A43 | ApiSet: undefined
 */
export function _0x0A98A362C5A19A43(p0) {
    return Citizen.invokeNative('0x0A98A362C5A19A43', p0);
}
/**
 * Hash: 0x0FE797DD9F70DFA6 | ApiSet: undefined
 */
export function _0x0FE797DD9F70DFA6(p0, p1, p2, p3) {
    Citizen.invokeNative('0x0FE797DD9F70DFA6', p0, p1, p2, p3);
}
/**
 * Hash: 0x0D322AEF8878B8FE | ApiSet: undefined
 */
export function _0x0D322AEF8878B8FE(p0, p1) {
    Citizen.invokeNative('0x0D322AEF8878B8FE', p0, p1);
}
/**
 * Hash: 0x10C44F633E2D6D9E | ApiSet: undefined
 */
export function _0x10C44F633E2D6D9E(p0) {
    Citizen.invokeNative('0x10C44F633E2D6D9E', p0);
}
/**
 * Hash: 0x12990818C1D35886 | ApiSet: undefined
 */
export function _0x12990818C1D35886(p0, p1, p2) {
    Citizen.invokeNative('0x12990818C1D35886', p0, p1, p2);
}
/**
 * Hash: 0x0F4F6C4CE471259D | ApiSet: undefined
 */
export function _0x0F4F6C4CE471259D(p0, p1) {
    Citizen.invokeNative('0x0F4F6C4CE471259D', p0, p1);
}
/**
 * Hash: 0x141BC64C8D7C5529 | ApiSet: undefined
 */
export function _0x141BC64C8D7C5529(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x141BC64C8D7C5529', _vehicle);
}
/**
 * Hash: 0x10ADFDF07B7DFFBA | ApiSet: undefined
 */
export function _0x10ADFDF07B7DFFBA(p0, p1, p2) {
    return Citizen.invokeNative('0x10ADFDF07B7DFFBA', p0, p1, p2);
}
/**
 * Hash: 0x11C7CE1AE38911B5 | ApiSet: undefined
 */
export function _0x11C7CE1AE38911B5(p0) {
    return Citizen.invokeNative('0x11C7CE1AE38911B5', p0);
}
/**
 * Hash: 0x1632EB9386CDBE64 | ApiSet: undefined
 */
export function _0x1632EB9386CDBE64(p0, p1) {
    Citizen.invokeNative('0x1632EB9386CDBE64', p0, p1);
}
/**
 * Hash: 0x152664AA3188B193 | ApiSet: undefined
 */
export function _0x152664AA3188B193(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0x152664AA3188B193', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x19BC99C678FBA139 | ApiSet: undefined
 */
export function _0x19BC99C678FBA139(p0, p1, p2) {
    Citizen.invokeNative('0x19BC99C678FBA139', p0, p1, p2);
}
/**
 * Hash: 0x1A7D63CB1B0BB223 | ApiSet: undefined
 */
export function _0x1A7D63CB1B0BB223(p0) {
    Citizen.invokeNative('0x1A7D63CB1B0BB223', p0);
}
/**
 * Hash: 0x1ECF56C040FD839C | ApiSet: undefined
 */
export function _0x1ECF56C040FD839C(p0, p1) {
    Citizen.invokeNative('0x1ECF56C040FD839C', p0, p1);
}
/**
 * Hash: 0x1AC5A8AB50CFAA33 | ApiSet: undefined
 */
export function _0x1AC5A8AB50CFAA33(p0) {
    return Citizen.invokeNative('0x1AC5A8AB50CFAA33', p0);
}
/**
 * Hash: 0x1F298C7BD30D1240 | ApiSet: undefined
 */
export function _0x1F298C7BD30D1240(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x1F298C7BD30D1240', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x1ACBC313966C21F3 | ApiSet: undefined
 */
export function _0x1ACBC313966C21F3(scenario) {
    return Citizen.invokeNative('0x1ACBC313966C21F3', scenario);
}
/**
 * Hash: 0x1F7A9A9C38C13A56 | ApiSet: undefined
 */
export function _0x1F7A9A9C38C13A56(p0) {
    return Citizen.invokeNative('0x1F7A9A9C38C13A56', p0);
}
/**
 * Hash: 0x1D125814EBC517EB | ApiSet: undefined
 */
export function _0x1D125814EBC517EB(p0, p1, p2, p3) {
    Citizen.invokeNative('0x1D125814EBC517EB', p0, p1, p2, p3);
}
/**
 * Hash: 0x216343750545A486 | ApiSet: undefined
 */
export function _0x216343750545A486(p0, p1, p2) {
    Citizen.invokeNative('0x216343750545A486', p0, p1, p2);
}
/**
 * Hash: 0x2064B33F6E6B92D4 | ApiSet: undefined
 */
export function _0x2064B33F6E6B92D4(p0, p1, p2, p3) {
    Citizen.invokeNative('0x2064B33F6E6B92D4', p0, p1, p2, p3);
}
/**
 * Hash: 0x22CDBF317C40A122 | ApiSet: undefined
 */
export function _0x22CDBF317C40A122(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x22CDBF317C40A122', _ped);
}
/**
 * Hash: 0x22CD2C33ED4467A1 | ApiSet: undefined
 */
export function _0x22CD2C33ED4467A1(p0) {
    return Citizen.invokeNative('0x22CD2C33ED4467A1', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x23767D80C7EED7C6 | ApiSet: undefined
 */
export function _0x23767D80C7EED7C6(p0, p1) {
    Citizen.invokeNative('0x23767D80C7EED7C6', p0, p1);
}
/**
 * Hash: 0x2416EC2F31F75266 | ApiSet: undefined
 */
export function _0x2416EC2F31F75266(entity, targetEntity, duration, p3, p4) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    Citizen.invokeNative('0x2416EC2F31F75266', _entity, _targetEntity, duration, p3, p4);
}
/**
 * Hash: 0x244430C13BA5258E | ApiSet: undefined
 */
export function _0x244430C13BA5258E(p0, p1, p2, p3) {
    return Citizen.invokeNative('0x244430C13BA5258E', p0, p1, p2, p3);
}
/**
 * Hash: 0x2948235DB2058E99 | ApiSet: undefined
 */
export function _0x2948235DB2058E99(p0, p1) {
    Citizen.invokeNative('0x2948235DB2058E99', p0, p1);
}
/**
 * Hash: 0x28EF780BDEA8A639 | ApiSet: undefined
 */
export function _0x28EF780BDEA8A639(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x28EF780BDEA8A639', _ped, p1);
}
/**
 * Hash: 0x2A10538D0A005E81 | ApiSet: undefined
 */
export function _0x2A10538D0A005E81(p0, p1) {
    Citizen.invokeNative('0x2A10538D0A005E81', p0, p1);
}
/**
 * Hash: 0x2B8AF29A78024BD3 | ApiSet: undefined
 */
export function _0x2B8AF29A78024BD3(p0) {
    Citizen.invokeNative('0x2B8AF29A78024BD3', p0);
}
/**
 * Hash: 0x2C497BDEF897C6DF | ApiSet: undefined
 */
export function _0x2C497BDEF897C6DF(p0) {
    return Citizen.invokeNative('0x2C497BDEF897C6DF', p0);
}
/**
 * Hash: 0x2EB977293923C723 | ApiSet: undefined
 */
export function _0x2EB977293923C723(p0, p1) {
    Citizen.invokeNative('0x2EB977293923C723', p0, p1);
}
/**
 * Hash: 0x2D657B10F211C572 | ApiSet: undefined
 */
export function _0x2D657B10F211C572(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x2D657B10F211C572', _ped, p1);
}
/**
 * Hash: 0x2E1D6D87346BB7D2 | ApiSet: undefined
 */
export function _0x2E1D6D87346BB7D2(p0, p1, p2, p3) {
    Citizen.invokeNative('0x2E1D6D87346BB7D2', p0, p1, p2, p3);
}
/**
 * Hash: 0x30146C25686B7836 | ApiSet: undefined
 */
export function _0x30146C25686B7836(p0, p1) {
    return Citizen.invokeNative('0x30146C25686B7836', p0, p1);
}
/**
 * Hash: 0x30B391915538EBE2 | ApiSet: undefined
 */
export function _0x30B391915538EBE2(p0) {
    Citizen.invokeNative('0x30B391915538EBE2', p0);
}
/**
 * Hash: 0x31BB338F64D5C861 | ApiSet: undefined
 */
export function _0x31BB338F64D5C861(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x31BB338F64D5C861', _ped, p1);
}
/**
 * Hash: 0x351F74ED6177EBE7 | ApiSet: undefined
 */
export function _0x351F74ED6177EBE7() {
    return Citizen.invokeNative('0x351F74ED6177EBE7');
}
/**
 * Hash: 0x358A1A751B335A11 | ApiSet: undefined
 */
export function _0x358A1A751B335A11(p0) {
    Citizen.invokeNative('0x358A1A751B335A11', p0);
}
/**
 * Hash: 0x3ACC128510142B9D | ApiSet: undefined
 */
export function _0x3ACC128510142B9D(waypointRecording, position) {
    return Citizen.invokeNative('0x3ACC128510142B9D', waypointRecording, position.x, position.y, position.z);
}
/**
 * Hash: 0x3BBEECC5B8F35318 | ApiSet: undefined
 */
export function _0x3BBEECC5B8F35318(p0, p1) {
    Citizen.invokeNative('0x3BBEECC5B8F35318', p0, p1);
}
/**
 * Hash: 0x370F57C47F68EBCA | ApiSet: undefined
 */
export function _0x370F57C47F68EBCA(p0) {
    return Citizen.invokeNative('0x370F57C47F68EBCA', p0);
}
/**
 * Hash: 0x3FEB770D8ED9047A | ApiSet: undefined
 */
export function _0x3FEB770D8ED9047A(p0) {
    return Citizen.invokeNative('0x3FEB770D8ED9047A', p0);
}
/**
 * Hash: 0x3F8387DB1B9F31B7 | ApiSet: undefined
 */
export function _0x3F8387DB1B9F31B7(p0, p1) {
    return Citizen.invokeNative('0x3F8387DB1B9F31B7', p0, p1);
}
/**
 * Hash: 0x41323F4E0C4AE94B | ApiSet: undefined
 */
export function _0x41323F4E0C4AE94B(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0x41323F4E0C4AE94B', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * _SET_PED_*
 * ```
 * Hash: 0x41D1331AFAD5A091 | ApiSet: undefined
 */
export function _0x41D1331AFAD5A091(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x41D1331AFAD5A091', _ped, p1, p2);
}
/**
 * Hash: 0x3FFCD7BBA074CC80 | ApiSet: undefined
 */
export function _0x3FFCD7BBA074CC80(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x3FFCD7BBA074CC80', _ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x4161648394262FDF | ApiSet: undefined
 */
export function _0x4161648394262FDF(p0, p1, p2, p3) {
    Citizen.invokeNative('0x4161648394262FDF', p0, p1, p2, p3);
}
/**
 * Hash: 0x4A7D73989F52EB37 | ApiSet: undefined
 */
export function _0x4A7D73989F52EB37(p0, p1) {
    Citizen.invokeNative('0x4A7D73989F52EB37', p0, p1);
}
/**
 * Hash: 0x42CFD8FD8CC8DC69 | ApiSet: undefined
 */
export function _0x42CFD8FD8CC8DC69(p0, p1) {
    Citizen.invokeNative('0x42CFD8FD8CC8DC69', p0, p1);
}
/**
 * Hash: 0x450080DDEDB91258 | ApiSet: undefined
 */
export function _0x450080DDEDB91258(p0, p1) {
    Citizen.invokeNative('0x450080DDEDB91258', p0, p1);
}
/**
 * Hash: 0x4E806A395D43A458 | ApiSet: undefined
 */
export function _0x4E806A395D43A458(p0) {
    Citizen.invokeNative('0x4E806A395D43A458', p0);
}
/**
 * Hash: 0x4F57397388E1DFF8 | ApiSet: undefined
 */
export function _0x4F57397388E1DFF8() {
    Citizen.invokeNative('0x4F57397388E1DFF8');
}
/**
 * Hash: 0x4BA972D0E5AD8122 | ApiSet: undefined
 */
export function _0x4BA972D0E5AD8122(p0, p1) {
    Citizen.invokeNative('0x4BA972D0E5AD8122', p0, p1);
}
/**
 * Hash: 0x50AA09A0DA64E73C | ApiSet: undefined
 */
export function _0x50AA09A0DA64E73C(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0x50AA09A0DA64E73C', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * Only used in R* SP Scripts
 * Params: p4 = 1.0f - 30.0f
 * ```
 * Hash: 0x508F5053E3F6F0C4 | ApiSet: undefined
 */
export function _0x508F5053E3F6F0C4(ped, position, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x508F5053E3F6F0C4', _ped, position.x, position.y, position.z, p4);
}
/**
 * Hash: 0x517D01BF27B682D1 | ApiSet: undefined
 */
export function _0x517D01BF27B682D1(ped, entity, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x517D01BF27B682D1', _ped, _entity, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x5217B7B6DB78E1F3 | ApiSet: undefined
 */
export function _0x5217B7B6DB78E1F3(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x5217B7B6DB78E1F3', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x583AE9AF9CEE0958 | ApiSet: undefined
 */
export function _0x583AE9AF9CEE0958(vehicle, position) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return Citizen.invokeNative('0x583AE9AF9CEE0958', _vehicle, position.x, position.y, position.z);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x5952DFA38FA529FE | ApiSet: undefined
 */
export function _0x5952DFA38FA529FE() {
    return Citizen.invokeNative('0x5952DFA38FA529FE');
}
/**
 * Hash: 0x59872EA4CBD11C56 | ApiSet: undefined
 */
export function _0x59872EA4CBD11C56(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    return Citizen.invokeNative('0x59872EA4CBD11C56', p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x59AE5CA4FFB4E378 | ApiSet: undefined
 */
export function _0x59AE5CA4FFB4E378(p0, p1) {
    return Citizen.invokeNative('0x59AE5CA4FFB4E378', p0, p1);
}
/**
 * Hash: 0x5B68D0007D9C92EB | ApiSet: undefined
 */
export function _0x5B68D0007D9C92EB(p0, p1) {
    Citizen.invokeNative('0x5B68D0007D9C92EB', p0, p1);
}
/**
 * Hash: 0x59AEA4DC640814B9 | ApiSet: undefined
 */
export function _0x59AEA4DC640814B9(p0, p1) {
    Citizen.invokeNative('0x59AEA4DC640814B9', p0, p1);
}
/**
 * Hash: 0x615DC4A82E90BB48 | ApiSet: undefined
 */
export function _0x615DC4A82E90BB48(p0, p1, p2) {
    Citizen.invokeNative('0x615DC4A82E90BB48', p0, p1, p2);
}
/**
 * Hash: 0x5D9B0BAAF04CF65B | ApiSet: undefined
 */
export function _0x5D9B0BAAF04CF65B(p0, p1, p2, p3) {
    Citizen.invokeNative('0x5D9B0BAAF04CF65B', p0, p1, p2, p3);
}
/**
 * Hash: 0x640A602946A8C972 | ApiSet: undefined
 */
export function _0x640A602946A8C972(p0) {
    return Citizen.invokeNative('0x640A602946A8C972', p0);
}
/**
 * Hash: 0x5EA655F01D93667A | ApiSet: undefined
 */
export function _0x5EA655F01D93667A(p0) {
    return Citizen.invokeNative('0x5EA655F01D93667A', p0);
}
/**
 * Hash: 0x651F0530083C0E5A | ApiSet: undefined
 */
export function _0x651F0530083C0E5A(p0, p1) {
    Citizen.invokeNative('0x651F0530083C0E5A', p0, p1);
}
/**
 * Hash: 0x643FD1556F621772 | ApiSet: undefined
 */
export function _0x643FD1556F621772(p0, p1, p2) {
    return Citizen.invokeNative('0x643FD1556F621772', p0, p1, p2);
}
/**
 * Hash: 0x65D281985F2BDFC2 | ApiSet: undefined
 */
export function _0x65D281985F2BDFC2(p0, p1) {
    Citizen.invokeNative('0x65D281985F2BDFC2', p0, p1);
}
/**
 * Hash: 0x673A8779D229BA5A | ApiSet: undefined
 */
export function _0x673A8779D229BA5A(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0x673A8779D229BA5A', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x6A1AF481407BF6E9 | ApiSet: undefined
 */
export function _0x6A1AF481407BF6E9(p0) {
    Citizen.invokeNative('0x6A1AF481407BF6E9', p0);
}
/**
 * ```
 * Only used in R* SP Script beat_washed_ashore
 * `Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2`
 * ```
 * Hash: 0x678D3226CF70B9C8 | ApiSet: undefined
 */
export function _0x678D3226CF70B9C8(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x678D3226CF70B9C8', _ped, p1);
}
/**
 * Hash: 0x6AFDA2264925BD11 | ApiSet: undefined
 */
export function _0x6AFDA2264925BD11(p0) {
    Citizen.invokeNative('0x6AFDA2264925BD11', p0);
}
/**
 * Hash: 0x6AFD84AEAA3EA538 | ApiSet: undefined
 */
export function _0x6AFD84AEAA3EA538(p0) {
    return Citizen.invokeNative('0x6AFD84AEAA3EA538', p0);
}
/**
 * Hash: 0x6BA606AB3A83BC4D | ApiSet: undefined
 */
export function _0x6BA606AB3A83BC4D(p0) {
    return Citizen.invokeNative('0x6BA606AB3A83BC4D', p0);
}
/**
 * Hash: 0x6C50B9DCCCA70023 | ApiSet: undefined
 */
export function _0x6C50B9DCCCA70023(p0) {
    return Citizen.invokeNative('0x6C50B9DCCCA70023', p0);
}
/**
 * Hash: 0x6C269F673C47031E | ApiSet: undefined
 */
export function _0x6C269F673C47031E(p0) {
    return Citizen.invokeNative('0x6C269F673C47031E', p0);
}
/**
 * Hash: 0x722D6A49200174FE | ApiSet: undefined
 */
export function _0x722D6A49200174FE(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x722D6A49200174FE', p0, p1, p2, p3, p4);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x6DAC799857EF3F11 | ApiSet: undefined
 */
export function _0x6DAC799857EF3F11(p0, p1) {
    return Citizen.invokeNative('0x6DAC799857EF3F11', p0, p1);
}
/**
 * Hash: 0x748D5E0D2A1A4C61 | ApiSet: undefined
 */
export function _0x748D5E0D2A1A4C61(p0, p1, p2) {
    Citizen.invokeNative('0x748D5E0D2A1A4C61', p0, p1, p2);
}
/**
 * Hash: 0x756C7B4C43DF0422 | ApiSet: undefined
 */
export function _0x756C7B4C43DF0422(p0) {
    return Citizen.invokeNative('0x756C7B4C43DF0422', p0);
}
/**
 * Hash: 0x74F0209674864CBD | ApiSet: undefined
 */
export function _0x74F0209674864CBD() {
    return Citizen.invokeNative('0x74F0209674864CBD');
}
/**
 * Hash: 0x764DB5A48390FBAD | ApiSet: undefined
 */
export function _0x764DB5A48390FBAD(p0, p1) {
    Citizen.invokeNative('0x764DB5A48390FBAD', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x76610D12A838EBDE | ApiSet: undefined
 */
export function _0x76610D12A838EBDE(p0) {
    return Citizen.invokeNative('0x76610D12A838EBDE', p0);
}
/**
 * Hash: 0x78D8C1D4EB80C588 | ApiSet: undefined
 */
export function _0x78D8C1D4EB80C588(p0) {
    return Citizen.invokeNative('0x78D8C1D4EB80C588', p0);
}
/**
 * Hash: 0x79197F7D2BB5E73A | ApiSet: undefined
 */
export function _0x79197F7D2BB5E73A(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0x79197F7D2BB5E73A', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x7C015D8BCEC72CF4 | ApiSet: undefined
 */
export function _0x7C015D8BCEC72CF4(p0, p1) {
    Citizen.invokeNative('0x7C015D8BCEC72CF4', p0, p1);
}
/**
 * Hash: 0x7FB78B2199C10E92 | ApiSet: undefined
 */
export function _0x7FB78B2199C10E92(p0) {
    Citizen.invokeNative('0x7FB78B2199C10E92', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x7CB99FADDE73CD1B | ApiSet: undefined
 */
export function _0x7CB99FADDE73CD1B(p0) {
    return Citizen.invokeNative('0x7CB99FADDE73CD1B', p0);
}
/**
 * Hash: 0x816A3ACD265E2297 | ApiSet: undefined
 */
export function _0x816A3ACD265E2297(p0, p1) {
    Citizen.invokeNative('0x816A3ACD265E2297', p0, p1);
}
/**
 * Hash: 0x801BD27403F3CBA0 | ApiSet: undefined
 */
export function _0x801BD27403F3CBA0(p0, p1, p2, p3) {
    Citizen.invokeNative('0x801BD27403F3CBA0', p0, p1, p2, p3);
}
/**
 * Hash: 0x827A58CED9D4D5B4 | ApiSet: undefined
 */
export function _0x827A58CED9D4D5B4(p0, p1) {
    Citizen.invokeNative('0x827A58CED9D4D5B4', p0, p1);
}
/**
 * Hash: 0x849791EBBDBA0362 | ApiSet: undefined
 */
export function _0x849791EBBDBA0362(p0) {
    return Citizen.invokeNative('0x849791EBBDBA0362', p0);
}
/**
 * Hash: 0x82ED59F095056550 | ApiSet: undefined
 */
export function _0x82ED59F095056550(p0, p1) {
    Citizen.invokeNative('0x82ED59F095056550', p0, p1);
}
/**
 * Hash: 0x865732725536EE39 | ApiSet: undefined
 */
export function _0x865732725536EE39(p0) {
    return new Vector3(Citizen.invokeNative('0x865732725536EE39', p0));
}
/**
 * Hash: 0x885D19AC2B6FBFF4 | ApiSet: undefined
 */
export function _0x885D19AC2B6FBFF4(p0, p1) {
    Citizen.invokeNative('0x885D19AC2B6FBFF4', p0, p1);
}
/**
 * Hash: 0x8798CF6815B8FE0F | ApiSet: undefined
 */
export function _0x8798CF6815B8FE0F(p0, p1) {
    Citizen.invokeNative('0x8798CF6815B8FE0F', p0, p1);
}
/**
 * Hash: 0x88FD60D846D9CD63 | ApiSet: undefined
 */
export function _0x88FD60D846D9CD63(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x88FD60D846D9CD63', _ped);
}
/**
 * Hash: 0x8B1FDF63C3193EDA | ApiSet: undefined
 */
export function _0x8B1FDF63C3193EDA(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8B1FDF63C3193EDA', _ped, p1);
}
/**
 * Hash: 0x8E1DDE26D270CC5E | ApiSet: undefined
 */
export function _0x8E1DDE26D270CC5E(p0, p1) {
    Citizen.invokeNative('0x8E1DDE26D270CC5E', p0, p1);
}
/**
 * Hash: 0x8BB283A7888AD1AD | ApiSet: undefined
 */
export function _0x8BB283A7888AD1AD(p0, p1, p2) {
    Citizen.invokeNative('0x8BB283A7888AD1AD', p0, p1, p2);
}
/**
 * Hash: 0x9050DF2C53801208 | ApiSet: undefined
 */
export function _0x9050DF2C53801208(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9050DF2C53801208', _ped, p1);
}
/**
 * Hash: 0x90703A8F75EE4ABD | ApiSet: undefined
 */
export function _0x90703A8F75EE4ABD(p0, p1) {
    return Citizen.invokeNative('0x90703A8F75EE4ABD', p0, p1);
}
/**
 * Hash: 0x8F8C84363810691A | ApiSet: undefined
 */
export function _0x8F8C84363810691A(p0, p1) {
    Citizen.invokeNative('0x8F8C84363810691A', p0, p1);
}
/**
 * Hash: 0x91CB5E431F579BA1 | ApiSet: undefined
 */
export function _0x91CB5E431F579BA1(p0) {
    return new Vector3(Citizen.invokeNative('0x91CB5E431F579BA1', p0));
}
/**
 * Hash: 0x908BB14BCE85C80E | ApiSet: undefined
 */
export function _0x908BB14BCE85C80E(p0) {
    return Citizen.invokeNative('0x908BB14BCE85C80E', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x920684BE432875B1 | ApiSet: undefined
 */
export function _0x920684BE432875B1(p0) {
    return Citizen.invokeNative('0x920684BE432875B1', p0);
}
/**
 * Hash: 0x954451EA2D2120FB | ApiSet: undefined
 */
export function _0x954451EA2D2120FB(p0, p1) {
    Citizen.invokeNative('0x954451EA2D2120FB', p0, p1);
}
/**
 * Hash: 0x9420FB11B8D77948 | ApiSet: undefined
 */
export function _0x9420FB11B8D77948(p0) {
    return Citizen.invokeNative('0x9420FB11B8D77948', p0);
}
/**
 * Hash: 0x9585FF23C4B8EDE0 | ApiSet: undefined
 */
export function _0x9585FF23C4B8EDE0(p0, p1) {
    Citizen.invokeNative('0x9585FF23C4B8EDE0', p0, p1);
}
/**
 * Hash: 0x9B6A58FDB0024F12 | ApiSet: undefined
 */
export function _0x9B6A58FDB0024F12(p0, p1) {
    Citizen.invokeNative('0x9B6A58FDB0024F12', p0, p1);
}
/**
 * Hash: 0x9C8F42A5D1859DC1 | ApiSet: undefined
 */
export function _0x9C8F42A5D1859DC1(p0) {
    Citizen.invokeNative('0x9C8F42A5D1859DC1', p0);
}
/**
 * Hash: 0x9667CCE29BFA0780 | ApiSet: undefined
 */
export function _0x9667CCE29BFA0780(p0) {
    Citizen.invokeNative('0x9667CCE29BFA0780', p0);
}
/**
 * Hash: 0x9FF5F9B24E870748 | ApiSet: undefined
 */
export function _0x9FF5F9B24E870748(p0) {
    return Citizen.invokeNative('0x9FF5F9B24E870748', p0);
}
/**
 * Hash: 0x974DA3408DEC4E79 | ApiSet: undefined
 */
export function _0x974DA3408DEC4E79(p0) {
    return Citizen.invokeNative('0x974DA3408DEC4E79', p0);
}
/**
 * Hash: 0x9ADDBB9242179D56 | ApiSet: undefined
 */
export function _0x9ADDBB9242179D56(object, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x9ADDBB9242179D56', object, _ped);
}
/**
 * Hash: 0xA052608A12559BBB | ApiSet: undefined
 */
export function _0xA052608A12559BBB(p0, p1) {
    Citizen.invokeNative('0xA052608A12559BBB', p0, p1);
}
/**
 * Hash: 0x9EBD34958AB6F824 | ApiSet: undefined
 */
export function _0x9EBD34958AB6F824(p0) {
    Citizen.invokeNative('0x9EBD34958AB6F824', p0);
}
/**
 * Hash: 0xA263ADBBC8056214 | ApiSet: undefined
 */
export function _0xA263ADBBC8056214(p0, p1) {
    Citizen.invokeNative('0xA263ADBBC8056214', p0, p1);
}
/**
 * Hash: 0xA21AA2F0C2180125 | ApiSet: undefined
 */
export function _0xA21AA2F0C2180125(p0, p1) {
    Citizen.invokeNative('0xA21AA2F0C2180125', p0, p1);
}
/**
 * Hash: 0xA6A76D666A281F2D | ApiSet: undefined
 */
export function _0xA6A76D666A281F2D(p0, item) {
    if (typeof item === 'string')
        item = this.getHashKey(item);
    Citizen.invokeNative('0xA6A76D666A281F2D', p0, item);
}
/**
 * Hash: 0xA42DC7919159CCCF | ApiSet: undefined
 */
export function _0xA42DC7919159CCCF(p0) {
    Citizen.invokeNative('0xA42DC7919159CCCF', p0);
}
/**
 * ```
 * _SET_SCENARIO_*
 * ```
 * Hash: 0xA7479FB665361EDB | ApiSet: undefined
 */
export function _0xA7479FB665361EDB(p0, p1) {
    Citizen.invokeNative('0xA7479FB665361EDB', p0, p1);
}
/**
 * Hash: 0xA9E7672F8C6C6F74 | ApiSet: undefined
 */
export function _0xA9E7672F8C6C6F74(p0) {
    return Citizen.invokeNative('0xA9E7672F8C6C6F74', p0);
}
/**
 * Hash: 0xAC5045AB7F1A34FD | ApiSet: undefined
 */
export function _0xAC5045AB7F1A34FD(p0) {
    return Citizen.invokeNative('0xAC5045AB7F1A34FD', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xB2D15D3551FE4FAE | ApiSet: undefined
 */
export function _0xB2D15D3551FE4FAE(p0) {
    Citizen.invokeNative('0xB2D15D3551FE4FAE', p0);
}
/**
 * ```
 * _SET_SCENARIO_POINT_*
 * ```
 * Hash: 0xADC45010BC17AF0E | ApiSet: undefined
 */
export function _0xADC45010BC17AF0E(p0, p1) {
    Citizen.invokeNative('0xADC45010BC17AF0E', p0, p1);
}
/**
 * Hash: 0xAF2EF28CE3084505 | ApiSet: undefined
 */
export function _0xAF2EF28CE3084505(p0, p1, p2, p3) {
    Citizen.invokeNative('0xAF2EF28CE3084505', p0, p1, p2, p3);
}
/**
 * Hash: 0xB2F47A1AFDFCC595 | ApiSet: undefined
 */
export function _0xB2F47A1AFDFCC595(p0, p1) {
    Citizen.invokeNative('0xB2F47A1AFDFCC595', p0, p1);
}
/**
 * Hash: 0xB520DBDA7FCF573F | ApiSet: undefined
 */
export function _0xB520DBDA7FCF573F(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xB520DBDA7FCF573F', _ped);
}
/**
 * Hash: 0xB35370D5353995CB | ApiSet: undefined
 */
export function _0xB35370D5353995CB(ped, item, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof item === 'string')
        item = this.getHashKey(item);
    Citizen.invokeNative('0xB35370D5353995CB', _ped, item, p2);
}
/**
 * Hash: 0xB79817DB31FF72B9 | ApiSet: undefined
 */
export function _0xB79817DB31FF72B9(p0, p1) {
    Citizen.invokeNative('0xB79817DB31FF72B9', p0, p1);
}
/**
 * Hash: 0xB8E3486D107F4194 | ApiSet: undefined
 */
export function _0xB8E3486D107F4194(p0, p1) {
    Citizen.invokeNative('0xB8E3486D107F4194', p0, p1);
}
/**
 * Hash: 0xBC3F847AE2C3DC65 | ApiSet: undefined
 */
export function _0xBC3F847AE2C3DC65(p0, p1) {
    Citizen.invokeNative('0xBC3F847AE2C3DC65', p0, p1);
}
/**
 * Hash: 0xB8E213D02F37947D | ApiSet: undefined
 */
export function _0xB8E213D02F37947D(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0xB8E213D02F37947D', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xBD70108D01875299 | ApiSet: undefined
 */
export function _0xBD70108D01875299(p0) {
    return Citizen.invokeNative('0xBD70108D01875299', p0);
}
/**
 * Hash: 0xBEDBE39B5FD98FD6 | ApiSet: undefined
 */
export function _0xBEDBE39B5FD98FD6(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xBEDBE39B5FD98FD6', _ped);
}
/**
 * Hash: 0xB8F52A3F84A7CC59 | ApiSet: undefined
 */
export function _0xB8F52A3F84A7CC59(p0) {
    return Citizen.invokeNative('0xB8F52A3F84A7CC59', p0);
}
/**
 * Hash: 0xBAAB791AA72C2821 | ApiSet: undefined
 */
export function _0xBAAB791AA72C2821(p0, p1) {
    Citizen.invokeNative('0xBAAB791AA72C2821', p0, p1);
}
/**
 * Hash: 0xCE4E669400E5F8AA | ApiSet: undefined
 */
export function _0xCE4E669400E5F8AA(p0, p1, p2, p3) {
    Citizen.invokeNative('0xCE4E669400E5F8AA', p0, p1, p2, p3);
}
/**
 * Hash: 0xD508FA229F1C4900 | ApiSet: undefined
 */
export function _0xD508FA229F1C4900(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0xD508FA229F1C4900', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xBD1C3C0F271C39D3 | ApiSet: undefined
 */
export function _0xBD1C3C0F271C39D3(p0, p1) {
    Citizen.invokeNative('0xBD1C3C0F271C39D3', p0, p1);
}
/**
 * Hash: 0xD999E379265A4501 | ApiSet: undefined
 */
export function _0xD999E379265A4501(p0, p1, p2) {
    Citizen.invokeNative('0xD999E379265A4501', p0, p1, p2);
}
/**
 * Hash: 0xBEEFBB608D2AA68A | ApiSet: undefined
 */
export function _0xBEEFBB608D2AA68A(p0) {
    Citizen.invokeNative('0xBEEFBB608D2AA68A', p0);
}
/**
 * Hash: 0xC6170856E54557B2 | ApiSet: undefined
 */
export function _0xC6170856E54557B2(p0, p1, p2) {
    Citizen.invokeNative('0xC6170856E54557B2', p0, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD0ABC4EA3B5E21A0 | ApiSet: undefined
 */
export function _0xD0ABC4EA3B5E21A0(p0, p1) {
    return Citizen.invokeNative('0xD0ABC4EA3B5E21A0', p0, p1);
}
/**
 * Hash: 0xDF56A2B50C04DEA4 | ApiSet: undefined
 */
export function _0xDF56A2B50C04DEA4(p0, p1) {
    return Citizen.invokeNative('0xDF56A2B50C04DEA4', p0, p1);
}
/**
 * Hash: 0xDF94844D474F31E5 | ApiSet: undefined
 */
export function _0xDF94844D474F31E5(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xDF94844D474F31E5', _ped);
}
/**
 * Hash: 0xE01C8DC8EDD28D31 | ApiSet: undefined
 */
export function _0xE01C8DC8EDD28D31(p0, p1) {
    Citizen.invokeNative('0xE01C8DC8EDD28D31', p0, p1);
}
/**
 * Hash: 0xDE0C8B145EA466FF | ApiSet: undefined
 */
export function _0xDE0C8B145EA466FF(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xDE0C8B145EA466FF', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xE05A5D39BE6E93AF | ApiSet: undefined
 */
export function _0xE05A5D39BE6E93AF(p0) {
    Citizen.invokeNative('0xE05A5D39BE6E93AF', p0);
}
/**
 * Hash: 0xE116F6F2DA2D777E | ApiSet: undefined
 */
export function _0xE116F6F2DA2D777E(p0) {
    return new Vector3(Citizen.invokeNative('0xE116F6F2DA2D777E', p0));
}
/**
 * Hash: 0xE01F55B2896F6B37 | ApiSet: undefined
 */
export function _0xE01F55B2896F6B37(p0, p1) {
    Citizen.invokeNative('0xE01F55B2896F6B37', p0, p1);
}
/**
 * Hash: 0xE1C105E6BBA48270 | ApiSet: undefined
 */
export function _0xE1C105E6BBA48270() {
    return Citizen.invokeNative('0xE1C105E6BBA48270');
}
/**
 * Hash: 0xE2CF104ADD49D4BF | ApiSet: undefined
 */
export function _0xE2CF104ADD49D4BF(p0) {
    Citizen.invokeNative('0xE2CF104ADD49D4BF', p0);
}
/**
 * Hash: 0xE55478C5EDF70AC2 | ApiSet: undefined
 */
export function _0xE55478C5EDF70AC2(p0) {
    return Citizen.invokeNative('0xE55478C5EDF70AC2', p0);
}
/**
 * Hash: 0xE62754D09354F6CF | ApiSet: undefined
 */
export function _0xE62754D09354F6CF(p0) {
    return Citizen.invokeNative('0xE62754D09354F6CF', p0);
}
/**
 * Hash: 0xE5831AA1E2FD147C | ApiSet: undefined
 */
export function _0xE5831AA1E2FD147C(p0) {
    Citizen.invokeNative('0xE5831AA1E2FD147C', p0);
}
/**
 * Hash: 0xE69FDA40AAC3EFC0 | ApiSet: undefined
 */
export function _0xE69FDA40AAC3EFC0(p0, p1) {
    Citizen.invokeNative('0xE69FDA40AAC3EFC0', p0, p1);
}
/**
 * Hash: 0xE6A151364C600B24 | ApiSet: undefined
 */
export function _0xE6A151364C600B24(p0) {
    return Citizen.invokeNative('0xE6A151364C600B24', p0);
}
/**
 * Hash: 0xE9225354FB7437A7 | ApiSet: undefined
 */
export function _0xE9225354FB7437A7(p0, p1) {
    Citizen.invokeNative('0xE9225354FB7437A7', p0, p1);
}
/**
 * Hash: 0xE7BBC4E56B989449 | ApiSet: undefined
 */
export function _0xE7BBC4E56B989449(p0, p1, p2) {
    return Citizen.invokeNative('0xE7BBC4E56B989449', p0, p1, p2);
}
/**
 * Hash: 0xEAF87DA2BE78A15B | ApiSet: undefined
 */
export function _0xEAF87DA2BE78A15B(p0, p1) {
    Citizen.invokeNative('0xEAF87DA2BE78A15B', p0, p1);
}
/**
 * Hash: 0xE9A6400D1A0E7A55 | ApiSet: undefined
 */
export function _0xE9A6400D1A0E7A55(p0) {
    return Citizen.invokeNative('0xE9A6400D1A0E7A55', p0);
}
/**
 * Hash: 0xEB67D4E056C85A81 | ApiSet: undefined
 */
export function _0xEB67D4E056C85A81(p0) {
    return Citizen.invokeNative('0xEB67D4E056C85A81', p0);
}
/**
 * Hash: 0xEBA2081E0A5F4D17 | ApiSet: undefined
 */
export function _0xEBA2081E0A5F4D17(p0) {
    Citizen.invokeNative('0xEBA2081E0A5F4D17', p0);
}
/**
 * Hash: 0xEC516FE805D2CB2D | ApiSet: undefined
 */
export function _0xEC516FE805D2CB2D(p0) {
    Citizen.invokeNative('0xEC516FE805D2CB2D', p0);
}
/**
 * Hash: 0xEFD875C2791EBEFD | ApiSet: undefined
 */
export function _0xEFD875C2791EBEFD(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xEFD875C2791EBEFD', p0, p1, p2, p3);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0xF3C3503276F4A034 | ApiSet: undefined
 */
export function _0xF3C3503276F4A034(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xF3C3503276F4A034', _entity, p1);
}
/**
 * Hash: 0xF40A109B4B79A848 | ApiSet: undefined
 */
export function _0xF40A109B4B79A848(p0, p1, p2) {
    Citizen.invokeNative('0xF40A109B4B79A848', p0, p1, p2);
}
/**
 * Hash: 0xFA30E2254461ADEB | ApiSet: undefined
 */
export function _0xFA30E2254461ADEB(p0, p1) {
    Citizen.invokeNative('0xFA30E2254461ADEB', p0, p1);
}
/**
 * Hash: 0xF718931A82EEB898 | ApiSet: undefined
 */
export function _0xF718931A82EEB898() {
    Citizen.invokeNative('0xF718931A82EEB898');
}
/**
 * Hash: 0xF948F4356F010F11 | ApiSet: undefined
 */
export function _0xF948F4356F010F11(p0, p1, p2) {
    Citizen.invokeNative('0xF948F4356F010F11', p0, p1, p2);
}
/**
 * Hash: 0xF97F462779B31786 | ApiSet: undefined
 */
export function _0xF97F462779B31786(p0) {
    return Citizen.invokeNative('0xF97F462779B31786', p0);
}
/**
 * Hash: 0xFC7F71CF49F70B6B | ApiSet: undefined
 */
export function _0xFC7F71CF49F70B6B(p0) {
    Citizen.invokeNative('0xFC7F71CF49F70B6B', p0);
}
/**
 * Hash: 0xFDECCA06E8B81346 | ApiSet: undefined
 */
export function _0xFDECCA06E8B81346(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0xFDECCA06E8B81346', _ped);
}
/**
 * Hash: 0xFE5D28B9B7837CC1 | ApiSet: undefined
 */
export function _0xFE5D28B9B7837CC1(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xFE5D28B9B7837CC1', p0, p1, p2, p3);
}
/**
 * Hash: 0xFF8AFCA532B500D4 | ApiSet: undefined
 */
export function _0xFF8AFCA532B500D4(p0, p1) {
    Citizen.invokeNative('0xFF8AFCA532B500D4', p0, p1);
}
/**
 * Hash: 0xFF745B0346E19E2C | ApiSet: undefined
 */
export function _0xFF745B0346E19E2C(p0) {
    Citizen.invokeNative('0xFF745B0346E19E2C', p0);
}
/**
 * Hash: 0xFFB520A3E16F7B7B | ApiSet: undefined
 */
export function _0xFFB520A3E16F7B7B(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xFFB520A3E16F7B7B', _ped, p1);
}
/**
 * Hash: 0xA36BFB5EE89F3D82 | ApiSet: undefined
 */
export function openPatrolRoute(patrolRoute) {
    OpenPatrolRoute(patrolRoute);
}
/**
 * Hash: 0xE8854A4326B9E12B | ApiSet: undefined
 */
export function openSequenceTask() {
    return OpenSequenceTask();
}
/**
 * ```
 * Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
 * ```
 * Hash: 0xCE71C2F9BAA3F975 | ApiSet: undefined
 */
export function pedFishingrodHookObject(ped, object) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PedFishingrodHookObject(_ped, object);
}
/**
 * Hash: 0x1A52076D26E09004 | ApiSet: undefined
 */
export function pedFishingrodHookEntity(ped, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    PedFishingrodHookEntity(_ped, _entity);
}
/**
 * Hash: 0x295E3CCEC879CCD7 | ApiSet: undefined
 */
export function pedHasUseScenarioTask(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedHasUseScenarioTask(_ped);
}
/**
 * Hash: 0x77A1EEC547E7FCF1 | ApiSet: undefined
 */
export function playEntityScriptedAnim(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return PlayEntityScriptedAnim(_entity);
}
/**
 * Hash: 0x02EBBB3989B7E695 | ApiSet: undefined
 */
export function pedIsInScenarioBase(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return PedIsInScenarioBase(_ped);
}
/**
 * Hash: 0x541E5B41DCA45828 | ApiSet: undefined
 */
export function reactLookAtEnd(ped, exitAnimation, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ReactLookAtEnd(_ped, exitAnimation, p2);
}
/**
 * Hash: 0x748040460F8DF5DC | ApiSet: undefined
 */
export function playAnimOnRunningScenario(ped, animDict, animName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    PlayAnimOnRunningScenario(_ped, animDict, animName);
}
/**
 * Hash: 0xFF1B8B4AA1C25DC8 | ApiSet: undefined
 */
export function removeWaypointRecording(waypointRecording) {
    RemoveWaypointRecording(waypointRecording);
}
/**
 * Hash: 0xAE287C923D891715 | ApiSet: undefined
 */
export function removeCoverPoint(coverpoint) {
    RemoveCoverPoint(coverpoint);
}
/**
 * ```
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 * exitAnimation: LOOK_RETURN_GENERIC = 1,
 * LOOK_RETURN_DISMISSIVE = 2,
 * LOOK_RETURN_RELIEVED = 3
 * ```
 * Hash: 0xE7FA07624574B79A | ApiSet: undefined
 */
export function reactLookAt(ped, targetPed, lookIntensity, exitAnimation, duration, p5, targetPed2, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    const _targetPed2 = targetPed2 instanceof Ped ? targetPed2.handle() : targetPed2;
    ReactLookAt(_ped, _targetPed, lookIntensity, exitAnimation, duration, p5, _targetPed2, p7, p8);
}
/**
 * Hash: 0xDB6708C0B46F56D8 | ApiSet: undefined
 */
export function removeAllCoverBlockingAreas() {
    RemoveAllCoverBlockingAreas();
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
 * ```
 * Hash: 0x73F0D0327BFA0812 | ApiSet: undefined
 */
export function requestHerbCompositeAsset(asset) {
    if (typeof asset === 'string')
        asset = this.getHashKey(asset);
    return RequestHerbCompositeAsset(asset);
}
/**
 * Hash: 0x9EEFB62EB27B5792 | ApiSet: undefined
 */
export function requestWaypointRecording(waypointRecording) {
    RequestWaypointRecording(waypointRecording);
}
/**
 * Hash: 0xD01015C7316AE176 | ApiSet: undefined
 */
export function requestTaskMoveNetworkStateTransition(ped, name) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RequestTaskMoveNetworkStateTransition(_ped, name);
}
/**
 * Hash: 0xDD902D0349AFAD3A | ApiSet: undefined
 */
export function resetScenarioGroupsEnabled() {
    ResetScenarioGroupsEnabled();
}
/**
 * Hash: 0x0D40EE2A7F2B2D6D | ApiSet: undefined
 */
export function resetScenarioTypesEnabled() {
    ResetScenarioTypesEnabled();
}
/**
 * Hash: 0x032D49C5E359C847 | ApiSet: undefined
 */
export function setAnimRate(p0, p1, p2, p3) {
    SetAnimRate(p0, p1, p2, p3);
}
/**
 * Hash: 0x2E20878FD208A68E | ApiSet: undefined
 */
export function resetScenarioForEntity(scenario, entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    ResetScenarioForEntity(scenario, _entity);
}
/**
 * Hash: 0x5A40040BB5AE3EA2 | ApiSet: undefined
 */
export function resetScenarioScript(scenario) {
    ResetScenarioScript(scenario);
}
/**
 * Hash: 0x5C9B84BD7D31D908 | ApiSet: undefined
 */
export function setDriveTaskCruiseSpeed(driver, cruiseSpeed) {
    const _driver = driver instanceof Ped ? driver.handle() : driver;
    SetDriveTaskCruiseSpeed(_driver, cruiseSpeed);
}
/**
 * Hash: 0x87B66D77D545DB66 | ApiSet: undefined
 */
export function setAnimFilter(p0, p1, p2, p3) {
    SetAnimFilter(p0, p1, p2, p3);
}
/**
 * ```
 * Not implemented.
 * ```
 * Hash: 0x404A5AA9B9F0B746 | ApiSet: undefined
 */
export function setDriveTaskMaxCruiseSpeed(ped, maxCruiseSpeed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetDriveTaskMaxCruiseSpeed(_ped, maxCruiseSpeed);
}
/**
 * Hash: 0xE5B302114D8162EE | ApiSet: undefined
 */
export function setDrivebyTaskTarget(shootingPed, targetPed, targetVehicle, position) {
    const _shootingPed = shootingPed instanceof Ped ? shootingPed.handle() : shootingPed;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    const _targetVehicle = targetVehicle instanceof Entity ? targetVehicle.handle() : targetVehicle;
    SetDrivebyTaskTarget(_shootingPed, _targetPed, _targetVehicle, position.x, position.y, position.z);
}
/**
 * Hash: 0x295F03DC97BEEBC1 | ApiSet: undefined
 */
export function setEnableSpeedRestrainForWaypointRecordingLeader(p0, p1) {
    SetEnableSpeedRestrainForWaypointRecordingLeader(p0, p1);
}
/**
 * ```
 * clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
 * clipset can also be 0
 * ```
 * Hash: 0x1BF9D36A5EAFFBAE | ApiSet: undefined
 */
export function setEnhancedBreakFree(ped, p1, clipset) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetEnhancedBreakFree(_ped, p1, clipset);
}
/**
 * ```
 * Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
 * ```
 * Hash: 0x9B0C7FA063E67629 | ApiSet: undefined
 */
export function setFishingBait(ped, bait, withoutBuoy, instantly) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetFishingBait(_ped, bait, withoutBuoy, instantly);
}
/**
 * ```
 * Makes the ped ragdoll like when falling from a great height
 * ```
 * Hash: 0x8C825BDC7741D37C | ApiSet: undefined
 */
export function setHighFallTask(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetHighFallTask(_ped, p1, p2, p3);
}
/**
 * ```
 * Sets the time it takes for a hogtied ped to escape
 * -1.0f for ped to never escape
 * ```
 * Hash: 0xAB591AE6B48B913E | ApiSet: undefined
 */
export function setHogtieEscapeTimer(ped, time) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetHogtieEscapeTimer(_ped, time);
}
/**
 * Hash: 0x1E982AC8716912C5 | ApiSet: undefined
 */
export function setPedDesiredMoveBlendRatio(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDesiredMoveBlendRatio(_ped, p1);
}
/**
 * Hash: 0x34C0010188D7C54A | ApiSet: undefined
 */
export function setPedClearAimingInTheAir(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedClearAimingInTheAir(_ped, p1);
}
/**
 * Hash: 0x4455517B28441E60 | ApiSet: undefined
 */
export function setPedPathAvoidFire(ped, avoidFire) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathAvoidFire(_ped, avoidFire);
}
/**
 * Hash: 0x013A7BA5015C1372 | ApiSet: undefined
 */
export function setPedIgnoreDeadBodies(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedIgnoreDeadBodies(_ped, toggle);
}
/**
 * Hash: 0xE361C5C71C431A4F | ApiSet: undefined
 */
export function setPedPathCanDropFromHeight(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathCanDropFromHeight(_ped, toggle);
}
/**
 * Hash: 0x77A5B103C87F476E | ApiSet: undefined
 */
export function setPedPathCanUseLadders(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathCanUseLadders(_ped, toggle);
}
/**
 * Hash: 0x88E32DB8C1A4AA4B | ApiSet: undefined
 */
export function setPedPathClimbCostModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathClimbCostModifier(_ped, modifier);
}
/**
 * Hash: 0x8E06A6FE76C9EFF4 | ApiSet: undefined
 */
export function setPedPathCanUseClimbovers(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathCanUseClimbovers(_ped, toggle);
}
/**
 * Hash: 0xE8C296B75EACC357 | ApiSet: undefined
 */
export function setPedPathDeepSnowCostModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathDeepSnowCostModifier(_ped, modifier);
}
/**
 * Hash: 0x3AD8EFF9703BE657 | ApiSet: undefined
 */
export function setPedPathFoliageCostModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathFoliageCostModifier(_ped, modifier);
}
/**
 * ```
 * _SET_PED_PATH_P*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x70F7A1EAB1AE3AA8 | ApiSet: undefined
 */
export function setPedPathLadderCostModifier(ped, modifier) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathLadderCostModifier(_ped, modifier);
}
/**
 * Hash: 0x9DE63896B176EA94 | ApiSet: undefined
 */
export function setPedPathMayEnterDeepWater(ped, mayEnterDeepWater) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathMayEnterDeepWater(_ped, mayEnterDeepWater);
}
/**
 * Hash: 0xF35425A4204367EC | ApiSet: undefined
 */
export function setPedPathMayEnterWater(ped, mayEnterWater) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathMayEnterWater(_ped, mayEnterWater);
}
/**
 * Hash: 0x38FE1EC73743793C | ApiSet: undefined
 */
export function setPedPathPreferToAvoidWater(ped, avoidWater, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedPathPreferToAvoidWater(_ped, avoidWater, p2);
}
/**
 * ```
 * Opens/closes containers: ChestDugUp
 * ```
 * Hash: 0x188F8071F244B9B8 | ApiSet: undefined
 */
export function setScenarioContainerOpeningState(entity, open) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    SetScenarioContainerOpeningState(_entity, open);
}
/**
 * Hash: 0x9925EDDB6EAB88CD | ApiSet: undefined
 */
export function setScenarioGroupEnabledHash(scenarioGroup, toggle) {
    if (typeof scenarioGroup === 'string')
        scenarioGroup = this.getHashKey(scenarioGroup);
    SetScenarioGroupEnabledHash(scenarioGroup, toggle);
}
/**
 * Hash: 0xED98E10B0AFCE4B4 | ApiSet: undefined
 */
export function setPedWaypointRouteOffset(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPedWaypointRouteOffset(_ped, p1, p2, p3);
}
/**
 * Hash: 0x2056AB38DF06825C | ApiSet: undefined
 */
export function setScenarioPointCoords(scenario, xPos, yPos, zPos, p4) {
    SetScenarioPointCoords(scenario, xPos, yPos, zPos, p4);
}
/**
 * Hash: 0x02C8E5B49848664E | ApiSet: undefined
 */
export function setScenarioGroupEnabled(scenarioGroup, toggle) {
    SetScenarioGroupEnabled(scenarioGroup, toggle);
}
/**
 * Hash: 0xEEE4829304F93EEE | ApiSet: undefined
 */
export function setScenarioPointActive(scenario, active) {
    SetScenarioPointActive(scenario, active);
}
/**
 * ```
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
 * ```
 * Hash: 0x5AF19B6CC2115D34 | ApiSet: undefined
 */
export function setScenarioPointFlag(scenario, flag, value) {
    SetScenarioPointFlag(scenario, flag, value);
}
/**
 * Hash: 0xD3A0DA8F91612C6E | ApiSet: undefined
 */
export function setScenarioPointHeading(scenario, heading, p2) {
    SetScenarioPointHeading(scenario, heading, p2);
}
/**
 * Hash: 0xEB47EC4E34FB7EE1 | ApiSet: undefined
 */
export function setScenarioTypeEnabled(scenarioType, toggle) {
    SetScenarioTypeEnabled(scenarioType, toggle);
}
/**
 * Hash: 0xC47D9080A9A8856A | ApiSet: undefined
 */
export function setScenarioPointRadius(scenario, radius) {
    SetScenarioPointRadius(scenario, radius);
}
/**
 * Hash: 0xD00E50E673802D71 | ApiSet: undefined
 */
export function setScenarioTypeEnabledHash(scenarioType, toggle) {
    if (typeof scenarioType === 'string')
        scenarioType = this.getHashKey(scenarioType);
    SetScenarioTypeEnabledHash(scenarioType, toggle);
}
/**
 * ```
 * repeatMode: 0 = REPEAT_NOT; 1 = REPEAT_FOREVER
 * ```
 * Hash: 0x58C70CF3A41E4AE7 | ApiSet: undefined
 */
export function setSequenceToRepeat(taskSequenceId, repeatMode) {
    SetSequenceToRepeat(taskSequenceId, repeatMode);
}
/**
 * Hash: 0xB0A6CFD2C69C1088 | ApiSet: undefined
 */
export function setTaskMoveNetworkSignalBool(ped, signalName, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTaskMoveNetworkSignalBool(_ped, signalName, value);
}
/**
 * ```
 * Only used in R* Scripts fishing_core and av_fishing_river
 * ```
 * Hash: 0xF3735ACD11ACD501 | ApiSet: undefined
 */
export function setTaskFishing(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetTaskFishing(_ped);
}
/**
 * Hash: 0x099D4A855D53B03B | ApiSet: undefined
 */
export function setTaskMoveNetworkSignalFloat2(ped, signalName, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTaskMoveNetworkSignalFloat2(_ped, signalName, value);
}
/**
 * Hash: 0xD5BB4025AE449A4E | ApiSet: undefined
 */
export function setTaskMoveNetworkSignalFloat(ped, signalName, value) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTaskMoveNetworkSignalFloat(_ped, signalName, value);
}
/**
 * Hash: 0x4662BFE01938D98D | ApiSet: undefined
 */
export function setTaskMoveNetworkSignalVector(ped, signalName, position) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetTaskMoveNetworkSignalVector(_ped, signalName, position.x, position.y, position.z);
}
/**
 * Hash: 0x545BF19F86E80F11 | ApiSet: undefined
 */
export function setTeamCarriableEntity(p0, p1, p2) {
    SetTeamCarriableEntity(p0, p1, p2);
}
/**
 * Hash: 0xB5C51DD544F14F58 | ApiSet: undefined
 */
export function setUpSpeedRestrainInformationForPlayerFollower(p0, p1, p2, p3, p4, p5, p6, p7, p8) {
    SetUpSpeedRestrainInformationForPlayerFollower(p0, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * ```
 * Params: p3 = 0, 1; p5 = 0.0f, -1.0f
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 * ```
 * Hash: 0xAE72E7DF013AAA61 | ApiSet: undefined
 */
export function startTaskItemInteraction(ped, itemHash, interactionAnimHash, p3, flag, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof itemHash === 'string')
        itemHash = this.getHashKey(itemHash);
    if (typeof interactionAnimHash === 'string')
        interactionAnimHash = this.getHashKey(interactionAnimHash);
    StartTaskItemInteraction(_ped, itemHash, interactionAnimHash, p3, flag, p5);
}
/**
 * Hash: 0xEE08C992D238C5D1 | ApiSet: undefined
 */
export function stopAnimPlayback(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopAnimPlayback(_ped, p1, p2);
}
/**
 * ```
 * Makes the specified ped achieve the specified heading.
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
 * ```
 * Hash: 0x93B93A37987F1F3D | ApiSet: undefined
 */
export function taskAchieveHeading(ped, heading, timeout) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAchieveHeading(_ped, heading, timeout);
}
/**
 * Hash: 0x97FF36A1D40EA00A | ApiSet: undefined
 */
export function stopAnimTask(ped, animDictionary, animationName, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    StopAnimTask(_ped, animDictionary, animationName, p3);
}
/**
 * Hash: 0xCF7569BD0FB480A0 | ApiSet: undefined
 */
export function taskAimAtEntity(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAimAtEntity(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x6671F3EEC681BDA1 | ApiSet: undefined
 */
export function taskAimGunAtCoord(ped, position, time, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAimGunAtCoord(_ped, position.x, position.y, position.z, time, p5, p6);
}
/**
 * Hash: 0x4AF1D73861212F52 | ApiSet: undefined
 */
export function taskAimAtCoord(ped, p1, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAimAtCoord(_ped, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x4B39D8F9D0FE7749 | ApiSet: undefined
 */
export function taskAmbientAnimalHunt(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAmbientAnimalHunt(_ped, p1, p2);
}
/**
 * ```
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 * ```
 * Hash: 0x9B53BB6E8943AF53 | ApiSet: undefined
 */
export function taskAimGunAtEntity(ped, targetEntity, duration, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    TaskAimGunAtEntity(_ped, _targetEntity, duration, p3, p4);
}
/**
 * Hash: 0x37C13863ABA1B4A3 | ApiSet: undefined
 */
export function taskAmbientAnimalStalk(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAmbientAnimalStalk(_ped, p1, p2);
}
/**
 * Hash: 0x979D93372FC8C565 | ApiSet: undefined
 */
export function taskAnimalAlerted(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAnimalAlerted(_ped, p1, p2);
}
/**
 * Hash: 0x30A768C30D385EC5 | ApiSet: undefined
 */
export function taskAnimalBleedOut(ped, killer, p2, weaponHash, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _killer = killer instanceof Ped ? killer.handle() : killer;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    TaskAnimalBleedOut(_ped, _killer, p2, weaponHash, p4, p5);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
 * ```
 * Hash: 0xCD181A959CFDD7F4 | ApiSet: undefined
 */
export function taskAnimalInteraction(ped, targetPed, interactionType, interactionModel, skipIdleAnimationClip) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    if (typeof interactionType === 'string')
        interactionType = this.getHashKey(interactionType);
    if (typeof interactionModel === 'string')
        interactionModel = this.getHashKey(interactionModel);
    TaskAnimalInteraction(_ped, _targetPed, interactionType, interactionModel, skipIdleAnimationClip);
}
/**
 * Hash: 0x8C038A39C4A4B6D6 | ApiSet: undefined
 */
export function taskAnimalWrithe(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAnimalWrithe(_ped, p1, p2);
}
/**
 * Hash: 0xA899B61C66F09134 | ApiSet: undefined
 */
export function taskAnimalFlee(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskAnimalFlee(_ped, _targetPed, p2);
}
/**
 * Hash: 0x83BFC1F836B2F3F2 | ApiSet: undefined
 */
export function taskBark(ped, barkAtTarget, mood) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _barkAtTarget = barkAtTarget instanceof Ped ? barkAtTarget.handle() : barkAtTarget;
    if (typeof mood === 'string')
        mood = this.getHashKey(mood);
    TaskBark(_ped, _barkAtTarget, mood);
}
/**
 * Hash: 0x21FDF9A25CFE1CE5 | ApiSet: undefined
 */
export function taskAnimalUnalerted(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskAnimalUnalerted(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0xF3B9A78A178572B1 | ApiSet: undefined
 */
export function taskArrestPed(ped, target) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Ped ? target.handle() : target;
    TaskArrestPed(_ped, _target);
}
/**
 * Hash: 0xE53D17AD837CBF7C | ApiSet: undefined
 */
export function taskBoardVehicle(ped, vehicle, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskBoardVehicle(_ped, _vehicle, p2, p3, p4, p5);
}
/**
 * Hash: 0xE41A09C8DDFF7AA4 | ApiSet: undefined
 */
export function taskBoardVehicle2(ped, p1, p2, p3, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskBoardVehicle2(_ped, p1, p2, p3, flags);
}
/**
 * Hash: 0x15C86013127CE63F | ApiSet: undefined
 */
export function taskBoatMission(pedDriver, boat, p2, p3, position, p7, maxSpeed, drivingStyle, p10, p11) {
    const _pedDriver = pedDriver instanceof Ped ? pedDriver.handle() : pedDriver;
    const _boat = boat instanceof Entity ? boat.handle() : boat;
    TaskBoatMission(_pedDriver, _boat, p2, p3, position.x, position.y, position.z, p7, maxSpeed, drivingStyle, p10, p11);
}
/**
 * ```
 * carriableSlot:
 * 7 > Back of a horse
 * 6 > Right side of a horse
 * 5 > Left side of a horse
 * flags:
 * 512: enables the prompt being the name of the item when using a generic item
 * ```
 * Hash: 0xF0B4F759F35CC7F5 | ApiSet: undefined
 */
export function taskCarriable(entity, carryConfig, carrier, carriableSlot, flags) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _carrier = carrier instanceof Ped ? carrier.handle() : carrier;
    if (typeof carryConfig === 'string')
        carryConfig = this.getHashKey(carryConfig);
    TaskCarriable(_entity, carryConfig, _carrier, carriableSlot, flags);
}
/**
 * Hash: 0xBB28D1BC9EA8A6A5 | ApiSet: undefined
 */
export function taskBreakVehicleDoorLock(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskBreakVehicleDoorLock(_ped, _vehicle);
}
/**
 * Hash: 0x0F804F1DB19B9689 | ApiSet: undefined
 */
export function taskClearLookAt(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskClearLookAt(_ped);
}
/**
 * Hash: 0x95A6C46A31D1917D | ApiSet: undefined
 */
export function taskClearDefensiveArea(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskClearDefensiveArea(_ped);
}
/**
 * ```
 * Climbs or vaults the nearest thing.
 * ```
 * Hash: 0x89D9FCC2435112F1 | ApiSet: undefined
 */
export function taskClimb(ped, unused) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskClimb(_ped, unused);
}
/**
 * Hash: 0xB6C987F9285A3814 | ApiSet: undefined
 */
export function taskClimbLadder(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskClimbLadder(_ped, p1, p2, p3);
}
/**
 * Hash: 0xDF1D85BCAF60D537 | ApiSet: undefined
 */
export function taskClimb2(ped, heading) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskClimb2(_ped, heading);
}
/**
 * Hash: 0xEE3AA414CF99F368 | ApiSet: undefined
 */
export function taskCombatAnimalChargePed(ped, targetPed, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskCombatAnimalChargePed(_ped, _targetPed, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xF960F3D57B660E96 | ApiSet: undefined
 */
export function taskCombatAnimalWarn(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatAnimalWarn(_ped, p1, p2);
}
/**
 * Hash: 0x8182B561A29BD597 | ApiSet: undefined
 */
export function taskCombatHatedTargets(ped, radius) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatHatedTargets(_ped, radius);
}
/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 * ```
 * Hash: 0x7BF835BB9E2698C8 | ApiSet: undefined
 */
export function taskCombatHatedTargetsAroundPed(ped, radius, flags, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatHatedTargetsAroundPed(_ped, radius, flags, p3);
}
/**
 * Hash: 0x2BBA30B854534A0C | ApiSet: undefined
 */
export function taskCombatHatedTargetsAroundPedTimed(ped, radius, time, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatHatedTargetsAroundPedTimed(_ped, radius, time, flags);
}
/**
 * Hash: 0xB5BC69D9C4060BC3 | ApiSet: undefined
 */
export function taskCombatHatedTargetsNoLosTest(ped, radius) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatHatedTargetsNoLosTest(_ped, radius);
}
/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 * ```
 * Hash: 0x4CF5F55DAC3280A0 | ApiSet: undefined
 */
export function taskCombatHatedTargetsInArea(ped, position, radius, flags, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCombatHatedTargetsInArea(_ped, position.x, position.y, position.z, radius, flags, p6);
}
/**
 * Hash: 0x944F30DCB7096BDE | ApiSet: undefined
 */
export function taskCombatPedTimed(ped, targetPed, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskCombatPedTimed(_ped, _targetPed, p2, p3);
}
/**
 * Hash: 0xF166E48407BAC484 | ApiSet: undefined
 */
export function taskCombatPed(ped, targetPed, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskCombatPed(_ped, _targetPed, p2, p3);
}
/**
 * Hash: 0x3A2A2071DF5CC569 | ApiSet: undefined
 */
export function taskConfront(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return TaskConfront(_ped, _targetPed, p2);
}
/**
 * Hash: 0xC624414FA748B9BA | ApiSet: undefined
 */
export function taskCombatPed3(p0, p1, p2, p3, p4, p5) {
    TaskCombatPed3(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x3EB1FE9E8E908E15 | ApiSet: undefined
 */
export function taskCower(ped, duration, pedToCowerFrom, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _pedToCowerFrom = pedToCowerFrom instanceof Ped ? pedToCowerFrom.handle() : pedToCowerFrom;
    TaskCower(_ped, duration, _pedToCowerFrom, p3);
}
/**
 * Hash: 0x81D16C4FF3A77ADF | ApiSet: undefined
 */
export function taskCutFreeHogtiedTargetPed(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskCutFreeHogtiedTargetPed(_ped, _targetPed);
}
/**
 * Hash: 0xE017CF6E2527FE4F | ApiSet: undefined
 */
export function taskCompanionAmbient(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskCompanionAmbient(_ped, p1);
}
/**
 * ```
 * flags: See TASK_ENTER_VEHICLE
 * ```
 * Hash: 0x0A11F3BDEC03ED5F | ApiSet: undefined
 */
export function taskDisembarkNearestTrainCarriage(ped, p1, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskDisembarkNearestTrainCarriage(_ped, p1, flags);
}
/**
 * Hash: 0x525421A507216084 | ApiSet: undefined
 */
export function taskCutFreeHogtiedTargetPed2(ped, targetPed, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskCutFreeHogtiedTargetPed2(_ped, _targetPed, p2);
}
/**
 * ```
 * Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
 * flags: See TASK_ENTER_VEHICLE
 * ```
 * Hash: 0x48E92D3DDE23C23A | ApiSet: undefined
 */
export function taskDismountAnimal(rider, taskFlag, p2, p3, p4, targetPed) {
    const _rider = rider instanceof Ped ? rider.handle() : rider;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskDismountAnimal(_rider, taskFlag, p2, p3, p4, _targetPed);
}
/**
 * Hash: 0xA7C6854BB5A4192A | ApiSet: undefined
 */
export function taskDisembarkVehicle(p0, vehicle, p2, p3, p4, p5) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskDisembarkVehicle(p0, _vehicle, p2, p3, p4, p5);
}
/**
 * ```
 * Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
 * ```
 * Hash: 0x5D5B0D5BC3626E5A | ApiSet: undefined
 */
export function taskDuel(ped, p1, p2, entity, p4, p5, vPosOpponentX, vPosOpponentY, vPosOpponentZ, fOpponentHead, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskDuel(_ped, p1, p2, _entity, p4, p5, vPosOpponentX, vPosOpponentY, vPosOpponentZ, fOpponentHead, p10);
}
/**
 * Hash: 0x2F8AF0E82773A171 | ApiSet: undefined
 */
export function taskDriveBy(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern) {
    const _driverPed = driverPed instanceof Ped ? driverPed.handle() : driverPed;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    const _targetVehicle = targetVehicle instanceof Entity ? targetVehicle.handle() : targetVehicle;
    if (typeof firingPattern === 'string')
        firingPattern = this.getHashKey(firingPattern);
    TaskDriveBy(_driverPed, _targetPed, _targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern);
}
/**
 * Hash: 0x17CA98707B15926A | ApiSet: undefined
 */
export function taskDumpCarriableFromParent(ped, ped2, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskDumpCarriableFromParent(_ped, _ped2, _entity);
}
/**
 * Hash: 0xA14B5FBF986BAC23 | ApiSet: undefined
 */
export function taskDuck(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskDuck(_ped, p1);
}
/**
 * Hash: 0xBD7949BD07299672 | ApiSet: undefined
 */
export function taskEat(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskEat(_ped, p1, p2);
}
/**
 * Hash: 0xBDFEEB7600BCD938 | ApiSet: undefined
 */
export function taskEmoteOutro(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskEmoteOutro(_ped);
}
/**
 * ```
 * flags:
 * MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
 * DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
 * SKIP_NAVIGATION = (1 << 2),
 * TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
 * FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
 * ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
 * ```
 * Hash: 0xC2329B0206426644 | ApiSet: undefined
 */
export function taskEnterAnimScene(ped, animScene, entityName, playbackListName, enterSpeed, bAutoStart, flag, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskEnterAnimScene(_ped, animScene, entityName, playbackListName, enterSpeed, bAutoStart, flag, p7, p8);
}
/**
 * ```
 * _A*
 * ```
 * Hash: 0xAA0AF6025160243A | ApiSet: undefined
 */
export function taskEquipHat(hatObject, ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskEquipHat(hatObject, _ped);
}
/**
 * ```
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
 * ```
 * Hash: 0xC20E50AA46D09CA8 | ApiSet: undefined
 */
export function taskEnterVehicle(ped, vehicle, timeout, seat, speed, flag, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskEnterVehicle(_ped, _vehicle, timeout, seat, speed, flag, p6);
}
/**
 * Hash: 0x7F93691AB4B92272 | ApiSet: undefined
 */
export function taskEveryoneLeaveVehicle(p0, p1) {
    TaskEveryoneLeaveVehicle(p0, p1);
}
/**
 * ```
 * `Params: p2 is returned by BUILTIN::SHIFT_LEFT`
 * ```
 * Hash: 0x5F22926E1BCE9B08 | ApiSet: undefined
 */
export function taskEvasiveAnim(ped1, ped2, p2) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    TaskEvasiveAnim(_ped1, _ped2, p2);
}
/**
 * ```
 * Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
 * A maximum of 8 points can be added.
 * ```
 * Hash: 0x1E7889778264843A | ApiSet: undefined
 */
export function taskExtendRoute(position) {
    TaskExtendRoute(position.x, position.y, position.z);
}
/**
 * Hash: 0x6F1C49F275BD25B3 | ApiSet: undefined
 */
export function taskEveryoneLeaveVehicleInOrder(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskEveryoneLeaveVehicleInOrder(_vehicle, p1);
}
/**
 * ```
 * fleeType: see TASK_FLEE_COORD
 * ```
 * Hash: 0x6879FF208ED87F2A | ApiSet: undefined
 */
export function taskFleeFromCoord(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
    TaskFleeFromCoord(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
}
/**
 * ```
 * Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
 * fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
 * ```
 * Hash: 0x58428248BF4B64E4 | ApiSet: undefined
 */
export function taskFleeCoord(ped, position, fleeStyle, p5, p6, duration, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFleeCoord(_ped, position.x, position.y, position.z, fleeStyle, p5, p6, duration, p8);
}
/**
 * Hash: 0x390E0B697D25EAF5 | ApiSet: undefined
 */
export function taskFleeCoordVia(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
    TaskFleeCoordVia(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
}
/**
 * ```
 * Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
 * fleeStyle: see TASK_FLEE_COORD
 * ```
 * Hash: 0xFD45175A6DFD7CE9 | ApiSet: undefined
 */
export function taskFleePed(ped, fleeFromTarget, fleeStyle, flag, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _fleeFromTarget = fleeFromTarget instanceof Ped ? fleeFromTarget.handle() : fleeFromTarget;
    TaskFleePed(_ped, _fleeFromTarget, fleeStyle, flag, p4, p5, p6);
}
/**
 * ```
 * fleeType: see TASK_FLEE_COORD
 * ```
 * Hash: 0x7B74D8EEDE9B5727 | ApiSet: undefined
 */
export function taskFleeFromPed(ped, fleeFromTarget, position, distance, p6, p7, p8, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _fleeFromTarget = fleeFromTarget instanceof Ped ? fleeFromTarget.handle() : fleeFromTarget;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskFleeFromPed(_ped, _fleeFromTarget, position.x, position.y, position.z, distance, p6, p7, p8, _targetPed);
}
/**
 * ```
 * Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
 * ```
 * Hash: 0x841142A1376E9006 | ApiSet: undefined
 */
export function taskFlushRoute() {
    TaskFlushRoute();
}
/**
 * Hash: 0xD6CFC2D59DA72042 | ApiSet: undefined
 */
export function taskFlyToCoord(ped, travelMbr, position, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFlyToCoord(_ped, travelMbr, position.x, position.y, position.z, p5, p6);
}
/**
 * Hash: 0x5802E0F910E4CF1D | ApiSet: undefined
 */
export function taskFleePedVia(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    TaskFleePedVia(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0xE86A537B5A3C297C | ApiSet: undefined
 */
export function taskFlyAway(ped, fleeFromTarget) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _fleeFromTarget = fleeFromTarget instanceof Ped ? fleeFromTarget.handle() : fleeFromTarget;
    TaskFlyAway(_ped, _fleeFromTarget);
}
/**
 * Hash: 0x72997893BFB8ECCC | ApiSet: undefined
 */
export function taskFlyingCircle(ped, p1, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFlyingCircle(_ped, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x489FFCCCE7392B55 | ApiSet: undefined
 */
export function taskFollowAndConverseWithPed(ped, targetPed, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskFollowAndConverseWithPed(_ped, _targetPed, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x4D2B787BAE9AB760 | ApiSet: undefined
 */
export function taskFollowEntityAlongWaypointRecordingAtOffset(ped0, ped1, waypointRecording, p3, p4, p5, p6, p7, p8) {
    const _ped0 = ped0 instanceof Ped ? ped0.handle() : ped0;
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    TaskFollowEntityAlongWaypointRecordingAtOffset(_ped0, _ped1, waypointRecording, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x2D532EAA142CF83F | ApiSet: undefined
 */
export function taskFollowEntityWhileAimingAtEntity(ped, p1, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowEntityWhileAimingAtEntity(_ped, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * If no timeout, set timeout to -1.
 * ```
 * Hash: 0x15D3A79D4E44B913 | ApiSet: undefined
 */
export function taskFollowNavMeshToCoord(ped, position, speedMultiplier, timeout, stoppingRange, flags, heading) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowNavMeshToCoord(_ped, position.x, position.y, position.z, speedMultiplier, timeout, stoppingRange, flags, heading);
}
/**
 * Hash: 0x1B1475414E70DD8E | ApiSet: undefined
 */
export function taskFollowPavementToCoord(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskFollowPavementToCoord(_ped);
}
/**
 * Hash: 0x17F58B88D085DBAC | ApiSet: undefined
 */
export function taskFollowNavMeshToCoordAdvanced(ped, position, speedMultiplier, timeout, stoppingRange, flags, p8, p9, p10, entity, unk) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskFollowNavMeshToCoordAdvanced(_ped, position.x, position.y, position.z, speedMultiplier, timeout, stoppingRange, flags, p8, p9, p10, _entity, unk);
}
/**
 * Hash: 0x2E3676282C18A692 | ApiSet: undefined
 */
export function taskFollowToOffsetOfCoord(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowToOffsetOfCoord(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0x0E14C5550DC3CD1D | ApiSet: undefined
 */
export function taskFollowPointRoute(ped, p1, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowPointRoute(_ped, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x304AE42E357B8C7E | ApiSet: undefined
 */
export function taskFollowToOffsetOfEntity(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing, p9, walkOnly, p11, p12, p13) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskFollowToOffsetOfEntity(_ped, _entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing, p9, walkOnly, p11, p12, p13);
}
/**
 * Hash: 0x0759591819534F7B | ApiSet: undefined
 */
export function taskFollowWaypointRecording(ped, waypointRecording, p2, flag, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowWaypointRecording(_ped, waypointRecording, p2, flag, p4, p5, p6, p7);
}
/**
 * Hash: 0x0CFC13EBC19BCA52 | ApiSet: undefined
 */
export function taskFollowWaypointRecordingAdvanced(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowWaypointRecordingAdvanced(_ped, p1);
}
/**
 * Hash: 0xBE9B0520BD7C445B | ApiSet: undefined
 */
export function taskFollowWaypointRecordingAtOffset(ped, waypointRecording, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskFollowWaypointRecordingAtOffset(_ped, waypointRecording, p2, p3, p4, p5, p6);
}
/**
 * ```
 * motionStateHash: see FORCE_PED_MOTION_STATE
 * ```
 * Hash: 0x4F056E1AFFEF17AB | ApiSet: undefined
 */
export function taskForceMotionState(ped, motionStateHash, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof motionStateHash === 'string')
        motionStateHash = this.getHashKey(motionStateHash);
    TaskForceMotionState(_ped, motionStateHash, p2);
}
/**
 * Hash: 0x61E360B7E040D12E | ApiSet: undefined
 */
export function taskGoStraightToCoordRelativeToEntity(ped, p1, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoStraightToCoordRelativeToEntity(_ped, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xD76B57B44F1E6F8B | ApiSet: undefined
 */
export function taskGoStraightToCoord(ped, position, moveBlendSpeedY, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoStraightToCoord(_ped, position.x, position.y, position.z, moveBlendSpeedY, p5, p6, p7, p8);
}
/**
 * Hash: 0x5BC448CB78FA3E88 | ApiSet: undefined
 */
export function taskGoToCoordAnyMeans(ped, position, speed, entity, p6, walkingStyle, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskGoToCoordAnyMeans(_ped, position.x, position.y, position.z, speed, _entity, p6, walkingStyle, p8);
}
/**
 * Hash: 0xA55547801EB331FC | ApiSet: undefined
 */
export function taskGoToCoordAndAimAtHatedEntitiesNearCoord(ped, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof firingPattern === 'string')
        firingPattern = this.getHashKey(firingPattern);
    TaskGoToCoordAndAimAtHatedEntitiesNearCoord(_ped, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern);
}
/**
 * Hash: 0x1DD45F9ECFDB1BC9 | ApiSet: undefined
 */
export function taskGoToCoordAnyMeansExtraParams(ped, position, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordAnyMeansExtraParams(_ped, position.x, position.y, position.z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12);
}
/**
 * Hash: 0x87BD711FC31EA273 | ApiSet: undefined
 */
export function taskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0xB8ECD61F531A7B02 | ApiSet: undefined
 */
export function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0x11315AB3385B8AC0 | ApiSet: undefined
 */
export function taskGoToCoordWhileAimingAtCoord(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordWhileAimingAtCoord(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
}
/**
 * Hash: 0x639C0425A0B4E77E | ApiSet: undefined
 */
export function taskGoToCoordWhileAimingAtCoordUsingCombatStyle(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordWhileAimingAtCoordUsingCombatStyle(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
}
/**
 * Hash: 0x78426D0982D083C9 | ApiSet: undefined
 */
export function taskGoToCoordWhileAimingAtEntityUsingCombatStyle(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToCoordWhileAimingAtEntityUsingCombatStyle(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0xB2A16444EAD9AE47 | ApiSet: undefined
 */
export function taskGoToCoordWhileAimingAtEntity(ped1, position, ped2, p5, p6, p7, p8, p9, p10, p11, firingPattern, p13, p14) {
    const _ped1 = ped1 instanceof Ped ? ped1.handle() : ped1;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    if (typeof firingPattern === 'string')
        firingPattern = this.getHashKey(firingPattern);
    TaskGoToCoordWhileAimingAtEntity(_ped1, position.x, position.y, position.z, _ped2, p5, p6, p7, p8, p9, p10, p11, firingPattern, p13, p14);
}
/**
 * ```
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 * ```
 * Hash: 0x97465886D35210E9 | ApiSet: undefined
 */
export function taskGoToEntityWhileAimingAtEntity(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToEntityWhileAimingAtEntity(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * enum eWhistleType
 * {
 * WHISTLE_MAIN,
 * WHISTLE_SECONDARY,
 * WHISTLE_DOUBLE,
 * WHISTLE_URGENT,
 * WHISTLE_LONG
 * };
 * ```
 * Hash: 0xBAD6545608CECA6E | ApiSet: undefined
 */
export function taskGoToWhistle(ped, p1, whistleType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _p1 = p1 instanceof Ped ? p1.handle() : p1;
    TaskGoToWhistle(_ped, _p1, whistleType);
}
/**
 * Hash: 0x6A071245EB0D1882 | ApiSet: undefined
 */
export function taskGoToEntity(ped, target, duration, distance, speed, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Entity ? target.handle() : target;
    TaskGoToEntity(_ped, _target, duration, distance, speed, p5, p6);
}
/**
 * Hash: 0xCEF0117C233026AD | ApiSet: undefined
 */
export function taskGoToEntityWhileAimingAtEntityUsingCombatStyle(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGoToEntityWhileAimingAtEntityUsingCombatStyle(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * ```
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 * ```
 * Hash: 0xA9DA48FAB8A76C12 | ApiSet: undefined
 */
export function taskGotoEntityAiming(ped, target, distanceToStopAt, StartAimingDist) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Entity ? target.handle() : target;
    TaskGotoEntityAiming(_ped, _target, distanceToStopAt, StartAimingDist);
}
/**
 * Hash: 0xE39B4FF4FDEBDE27 | ApiSet: undefined
 */
export function taskGotoEntityOffset(ped, entity, p2, position, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskGotoEntityOffset(_ped, _entity, p2, position.x, position.y, position.z, duration);
}
/**
 * Hash: 0x901BD69984400F62 | ApiSet: undefined
 */
export function taskGotoEntityOffsetXyAiming(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGotoEntityOffsetXyAiming(_ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x338E7EF52B6095A9 | ApiSet: undefined
 */
export function taskGotoEntityOffsetXy(ped, entity, duration, targetRadius, xOffset, yOffset, moveBlendRatio, offsetFlags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskGotoEntityOffsetXy(_ped, _entity, duration, targetRadius, xOffset, yOffset, moveBlendRatio, offsetFlags);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xFA6DA9D151769392 | ApiSet: undefined
 */
export function taskGotoEntityOffsetXyz(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGotoEntityOffsetXyz(_ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x41B0832CA96B5351 | ApiSet: undefined
 */
export function taskGotoEntityOffsetXyzAiming(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGotoEntityOffsetXyzAiming(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * ```
 * grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
 * ```
 * Hash: 0x779A2FFACEFAEA7B | ApiSet: undefined
 */
export function taskGrapple(ped, targetPed, grappleStyle, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    if (typeof grappleStyle === 'string')
        grappleStyle = this.getHashKey(grappleStyle);
    return TaskGrapple(_ped, _targetPed, grappleStyle, p3, p4, p5, p6);
}
/**
 * Hash: 0xD2A207EEBDF9889B | ApiSet: undefined
 */
export function taskGuardAssignedDefensiveArea(ped, p1, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGuardAssignedDefensiveArea(_ped, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xB9FB242EACCAF30F | ApiSet: undefined
 */
export function taskGuard(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGuard(_ped, p1, p2);
}
/**
 * Hash: 0x4A58A47A72E3FCB4 | ApiSet: undefined
 */
export function taskGuardCurrentPosition(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGuardCurrentPosition(_ped, p1, p2, p3);
}
/**
 * Hash: 0x1FC9B33976BACD6C | ApiSet: undefined
 */
export function taskGuardAssignedDefensiveArea2(ped, p1, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskGuardAssignedDefensiveArea2(_ped, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * flags: 0 = HANDS_UP_NOTHING; 1 = HANDS_UP_STRAIGHT_TO_LOOP
 * ```
 * Hash: 0xF2EAB31979A7F910 | ApiSet: undefined
 */
export function taskHandsUp(ped, duration, facingPed, timeToFacePed, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _facingPed = facingPed instanceof Ped ? facingPed.handle() : facingPed;
    TaskHandsUp(_ped, duration, _facingPed, timeToFacePed, flags);
}
/**
 * Hash: 0x9030AD4B6207BFE8 | ApiSet: undefined
 */
export function taskHitchAnimal(ped, scenarioPoint, flag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskHitchAnimal(_ped, scenarioPoint, flag);
}
/**
 * Hash: 0x27829AFD3E03AC1A | ApiSet: undefined
 */
export function taskHogtieTargetPed(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskHogtieTargetPed(_ped, _targetPed);
}
/**
 * Hash: 0x6AFD8FE0D723328F | ApiSet: undefined
 */
export function taskHogtieable(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskHogtieable(_ped);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
 * Params: p2, p3 are set to 0 in R* Scripts
 * ```
 * Hash: 0xA09CFD29100F06C3 | ApiSet: undefined
 */
export function taskHorseAction(ped, action, targetPed, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskHorseAction(_ped, action, _targetPed, p3);
}
/**
 * Hash: 0x648B75D44930D6BD | ApiSet: undefined
 */
export function taskIntimidated(p0, p1, p2, p3, p4) {
    return TaskIntimidated(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x933ACC1A1771A288 | ApiSet: undefined
 */
export function taskIntimidated2(victim, attacker, p2, p3, p4, everyFrame, p6, p7, flag) {
    const _victim = victim instanceof Ped ? victim.handle() : victim;
    const _attacker = attacker instanceof Ped ? attacker.handle() : attacker;
    return TaskIntimidated2(_victim, _attacker, p2, p3, p4, everyFrame, p6, p7, flag);
}
/**
 * Hash: 0x5C8514540D27FBFB | ApiSet: undefined
 */
export function taskInvestigate(ped, p1, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskInvestigate(_ped, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x0AE4086104E067B1 | ApiSet: undefined
 */
export function taskJump(ped, unused) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskJump(_ped, unused);
}
/**
 * Hash: 0x72F52AA2D2B172CC | ApiSet: undefined
 */
export function taskItemInteraction2(ped, propNameGxt, prop, propId, itemInteractionState, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof propNameGxt === 'string')
        propNameGxt = this.getHashKey(propNameGxt);
    if (typeof propId === 'string')
        propId = this.getHashKey(propId);
    if (typeof itemInteractionState === 'string')
        itemInteractionState = this.getHashKey(itemInteractionState);
    TaskItemInteraction2(_ped, propNameGxt, prop, propId, itemInteractionState, p5, p6, p7);
}
/**
 * Hash: 0x91083103137D7254 | ApiSet: undefined
 */
export function taskJump2(ped, position, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskJump2(_ped, position.x, position.y, position.z, _entity);
}
/**
 * ```
 * Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
 * ```
 * Hash: 0xD61D5E1AD9876DEB | ApiSet: undefined
 */
export function taskItemInteraction3(ped, item, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof item === 'string')
        item = this.getHashKey(item);
    return TaskItemInteraction3(_ped, item, p3, p4, p5, p6);
}
/**
 * Hash: 0x42AC6401ABB8C7E5 | ApiSet: undefined
 */
export function taskKnockedOutAndHogtied(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskKnockedOutAndHogtied(_ped, p1, p2);
}
/**
 * Hash: 0xC716EB2BD16370A3 | ApiSet: undefined
 */
export function taskLassoPed(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskLassoPed(_ped, _targetPed);
}
/**
 * Hash: 0xF90427F00A495A28 | ApiSet: undefined
 */
export function taskKnockedOut(ped, p1, permanently) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskKnockedOut(_ped, p1, permanently);
}
/**
 * ```
 * flags: See TASK_ENTER_VEHICLE
 * ```
 * Hash: 0xD3DBCE61A490BE02 | ApiSet: undefined
 */
export function taskLeaveVehicle(ped, vehicle, flags, unkPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _unkPed = unkPed instanceof Ped ? unkPed.handle() : unkPed;
    TaskLeaveVehicle(_ped, _vehicle, flags, _unkPed);
}
/**
 * Hash: 0x6FA46612594F7973 | ApiSet: undefined
 */
export function taskLookAtCoord(ped, position, duration, flags, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskLookAtCoord(_ped, position.x, position.y, position.z, duration, flags, p6, p7);
}
/**
 * ```
 * param3: duration in ms, use -1 to look forever
 * param4: using 2048 is fine
 * param5: using 3 is fine
 * ```
 * Hash: 0x69F4BE8C8CC4796C | ApiSet: undefined
 */
export function taskLookAtEntity(ped, lookAtTarget, duration, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _lookAtTarget = lookAtTarget instanceof Entity ? lookAtTarget.handle() : lookAtTarget;
    TaskLookAtEntity(_ped, _lookAtTarget, duration, p3, p4, p5);
}
/**
 * Hash: 0xAA19711D33C6708C | ApiSet: undefined
 */
export function taskLeadAndConverse(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskLeadAndConverse(_ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x9A7A4A54596FE09D | ApiSet: undefined
 */
export function taskLeadHorse(ped, horse) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    TaskLeadHorse(_ped, _horse);
}
/**
 * ```
 * flags: See TASK_ENTER_VEHICLE
 * ```
 * Hash: 0x504D54DF3F6F2247 | ApiSet: undefined
 */
export function taskLeaveAnyVehicle(ped, p1, taskFlag) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskLeaveAnyVehicle(_ped, p1, taskFlag);
}
/**
 * ```
 * Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
 * ```
 * Hash: 0x482C99D0B38D1B0A | ApiSet: undefined
 */
export function taskMelee(ped, targetPed, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    return TaskMelee(_ped, _targetPed, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x48FAE038401A2888 | ApiSet: undefined
 */
export function taskLootEntity(ped, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskLootEntity(_ped, _entity);
}
/**
 * Hash: 0xCF1501CBC4059412 | ApiSet: undefined
 */
export function taskLootNearestEntity(ped, position, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskLootNearestEntity(_ped, position.x, position.y, position.z, p4, p5);
}
/**
 * ```
 * timer: in ms, if it reaches 0 it will auto warp the ped on the horse
 * mountStyle: See TASK_ENTER_VEHICLE
 * Flags will still apply to mountStyle
 * ```
 * Hash: 0x92DB0739813C5186 | ApiSet: undefined
 */
export function taskMountAnimal(ped, mount, timer, seatIndex, pedSpeed, mountStyle, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    TaskMountAnimal(_ped, _mount, timer, seatIndex, pedSpeed, mountStyle, p6, p7);
}
/**
 * Hash: 0x8AA1593AEC087A29 | ApiSet: undefined
 */
export function taskMoveInTraffic(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveInTraffic(_ped, p1, p2, p3);
}
/**
 * Hash: 0x4AA5AA97C65E4A2F | ApiSet: undefined
 */
export function taskMoveBeInFormation(ped, p1, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveBeInFormation(_ped, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
 * ```
 * Hash: 0x79482C12482A860D | ApiSet: undefined
 */
export function taskMoveFollowRoadUsingNavmesh(ped, moveBlendRatio, position, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveFollowRoadUsingNavmesh(_ped, moveBlendRatio, position.x, position.y, position.z, p5);
}
/**
 * Hash: 0xDCA3A13F7A45338B | ApiSet: undefined
 */
export function taskMoveInTrafficToDestination(ped, p1, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveInTrafficToDestination(_ped, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x13DED0BC45600FE1 | ApiSet: undefined
 */
export function taskMoveInTrafficAwayFromEntity(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveInTrafficAwayFromEntity(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x7B6A04F98BBAFB2C | ApiSet: undefined
 */
export function taskMoveNetworkAdvancedByNameWithInitParams(ped, moveNetworkDefName, xPos, yPos, zPos, xRot, yRot, zRot, p9, p10, p11, p12, flag, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskMoveNetworkAdvancedByNameWithInitParams(_ped, moveNetworkDefName, xPos, yPos, zPos, xRot, yRot, zRot, p9, p10, p11, p12, flag, p14);
}
/**
 * Hash: 0xF92171093BCABED4 | ApiSet: undefined
 */
export function taskMoveNetworkAdvancedByNameWithInitParamsAttached(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveNetworkAdvancedByNameWithInitParamsAttached(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17);
}
/**
 * Hash: 0xBDA5DF49D080FE4E | ApiSet: undefined
 */
export function taskPatrol(ped, patrolRoute, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPatrol(_ped, patrolRoute, p2, p3, p4);
}
/**
 * Hash: 0x2D537BA194896636 | ApiSet: undefined
 */
export function taskMoveNetworkByName(ped, task, multiplier, p3, animDict, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskMoveNetworkByName(_ped, task, multiplier, p3, animDict, flags);
}
/**
 * Hash: 0x139805C2A67C4795 | ApiSet: undefined
 */
export function taskMoveNetworkByNameWithInitParams(ped, moveNetworkDefName, p3, p4, animDict, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskMoveNetworkByNameWithInitParams(_ped, moveNetworkDefName, p3, p4, animDict, flags);
}
/**
 * Hash: 0x964B06C88E4C86DB | ApiSet: undefined
 */
export function taskPatrol2(p0, p1, p2, p3, p4, p5, p6, p7) {
    TaskPatrol2(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0x5ABA3986D90D8A3B | ApiSet: undefined
 */
export function taskPerformSequence(ped, taskSequenceId) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPerformSequence(_ped, taskSequenceId);
}
/**
 * ```
 * This tasks the ped to do nothing for the specified amount of milliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 * ```
 * Hash: 0xE73A266DB0CA9042 | ApiSet: undefined
 */
export function taskPause(ped, ms) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPause(_ped, ms);
}
/**
 * Hash: 0x89221B16730234F0 | ApiSet: undefined
 */
export function taskPerformSequenceFromProgress(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPerformSequenceFromProgress(_ped, p1, p2, p3);
}
/**
 * Hash: 0xD04FE6765D990A06 | ApiSet: undefined
 */
export function taskPedSlideToCoord(ped, position, heading, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPedSlideToCoord(_ped, position.x, position.y, position.z, heading, p5);
}
/**
 * Hash: 0x4FC0AF869D6E309D | ApiSet: undefined
 */
export function taskPerformSequence2(p0, p1, p2, p3) {
    TaskPerformSequence2(p0, p1, p2, p3);
}
/**
 * Hash: 0x55B0ECFD98596624 | ApiSet: undefined
 */
export function taskPickUpWeapon(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPickUpWeapon(_ped, p1);
}
/**
 * Hash: 0x4391700CBD89C3D8 | ApiSet: undefined
 */
export function taskPersistentCharacter(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPersistentCharacter(_ped);
}
/**
 * Hash: 0x502EC17B1BED4BFA | ApiSet: undefined
 */
export function taskPickupCarriableEntity(ped, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskPickupCarriableEntity(_ped, _entity);
}
/**
 * Hash: 0xC7F0B43DCDC57E3D | ApiSet: undefined
 */
export function taskPlaceCarriedEntityAtCoord(ped, entity, position, p5, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskPlaceCarriedEntityAtCoord(_ped, _entity, position.x, position.y, position.z, p5, flags);
}
/**
 * Hash: 0x6D3D87C57B3D52C7 | ApiSet: undefined
 */
export function taskPlaceCarriedEntityOnMount(ped, entity, mount, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    TaskPlaceCarriedEntityOnMount(_ped, _entity, _mount, p3);
}
/**
 * Hash: 0x965FEC691D55E9BF | ApiSet: undefined
 */
export function taskPlantBomb(ped, position, heading) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPlantBomb(_ped, position.x, position.y, position.z, heading);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
 * ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags
 * ```
 * Hash: 0xEA47FE3719165B94 | ApiSet: undefined
 */
export function taskPlayAnim(ped, animDict, animName, speed, speedMultiplier, duration, flags, playbackRate, p8, ikFlags, p10, taskFilter, p12) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPlayAnim(_ped, animDict, animName, speed, speedMultiplier, duration, flags, playbackRate, p8, ikFlags, p10, taskFilter, p12);
}
/**
 * ```
 * Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
 * ```
 * Hash: 0x884E3436CC1F41DD | ApiSet: undefined
 */
export function taskPlayEmote(ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    TaskPlayEmote(_ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
 * emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
 * enum eEmoteType
 * {
 * EMOTE_TYPE_INVALID = -1,
 * EMOTE_TYPE_REACT,
 * EMOTE_TYPE_ACTION,
 * EMOTE_TYPE_TAUNT,
 * EMOTE_TYPE_GREET,
 * EMOTE_TYPE_TWIRL_GUN,
 * EMOTE_TYPE_DANCE_FLOOR
 * };
 * enum eEmotePlaybackMode
 * {
 * EMOTE_PM_INVALID = -1,
 * EMOTE_PM_UPPERBODY,
 * EMOTE_PM_UPPERBODY_LOOP,
 * EMOTE_PM_FULLBODY,
 * };
 * ```
 * Hash: 0xB31A277C1AC7B7FF | ApiSet: undefined
 */
export function taskPlayEmoteWithHash(ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    TaskPlayEmoteWithHash(_ped, emoteType, playbackMode, emote, isSecondaryTask, canBreakOut, disableEarlyOutAnimTag, ignoreInvalidMainTask, destroyProps);
}
/**
 * ```
 * flags: see TASK_PLAY_ANIM
 * ikFlags: see TASK_PLAY_ANIM
 * ```
 * Hash: 0x83CDB10EA29B370B | ApiSet: undefined
 */
export function taskPlayAnimAdvanced(ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, speed, speedMultiplier, duration, flags, p13, p14, p15, p16) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPlayAnimAdvanced(_ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, speed, speedMultiplier, duration, flags, p13, p14, p15, p16);
}
/**
 * Hash: 0x4172393E6BE1FECE | ApiSet: undefined
 */
export function taskPutPedDirectlyIntoCover(ped, position, timeout, p5, p6, p7, p8, coverpoint, p10, p11, p12) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPutPedDirectlyIntoCover(_ped, position.x, position.y, position.z, timeout, p5, p6, p7, p8, coverpoint, p10, p11, p12);
}
/**
 * Hash: 0xAD67214236AB1CFE | ApiSet: undefined
 */
export function taskPlayUpperAnimFacingEntity(ped, animDict, animName, entity, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskPlayUpperAnimFacingEntity(_ped, animDict, animName, _entity, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0xDF8A5855B9F9A97B | ApiSet: undefined
 */
export function taskPutPedDirectlyIntoCoverFromCoords(ped, position, fromX, fromY, fromZ, timeout, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskPutPedDirectlyIntoCoverFromCoords(_ped, position.x, position.y, position.z, fromX, fromY, fromZ, timeout, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17);
}
/**
 * Hash: 0x87BE56724650408E | ApiSet: undefined
 */
export function taskPolice(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskPolice(_ped, p1);
}
/**
 * ```
 * grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
 * ```
 * Hash: 0xA05F3F20889D7A5B | ApiSet: undefined
 */
export function taskPutPedDirectlyIntoGrapple(ped, grappleTarget, grappleStyle, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _grappleTarget = grappleTarget instanceof Ped ? grappleTarget.handle() : grappleTarget;
    if (typeof grappleStyle === 'string')
        grappleStyle = this.getHashKey(grappleStyle);
    TaskPutPedDirectlyIntoGrapple(_ped, _grappleTarget, grappleStyle, p3, p4, p5, p6);
}
/**
 * ```
 * Makes a ped react to an entity.
 * Params: reactingTo Entity can be 0, p8 is always 4
 * ```
 * Hash: 0xC4C32C31920E1B70 | ApiSet: undefined
 */
export function taskReact(ped, reactingTo, position, reactionName, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _reactingTo = reactingTo instanceof Entity ? reactingTo.handle() : reactingTo;
    TaskReact(_ped, _reactingTo, position.x, position.y, position.z, reactionName, p6, p7, p8);
}
/**
 * Hash: 0x356088527D9EBAAD | ApiSet: undefined
 */
export function taskReviveTarget(ped, reviver, tool) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _reviver = reviver instanceof Ped ? reviver.handle() : reviver;
    if (typeof tool === 'string')
        tool = this.getHashKey(tool);
    TaskReviveTarget(_ped, _reviver, tool);
}
/**
 * ```
 * meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
 * ```
 * Hash: 0x1C6CD14A876FFE39 | ApiSet: undefined
 */
export function taskPutPedDirectlyIntoMelee(ped, meleeTarget, meleeStyle, p3, animBlendRatio, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _meleeTarget = meleeTarget instanceof Ped ? meleeTarget.handle() : meleeTarget;
    if (typeof meleeStyle === 'string')
        meleeStyle = this.getHashKey(meleeStyle);
    TaskPutPedDirectlyIntoMelee(_ped, _meleeTarget, meleeStyle, p3, animBlendRatio, p5, p6);
}
/**
 * Hash: 0x62D2916F56B9CD2D | ApiSet: undefined
 */
export function taskReloadWeapon(ped, unused) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskReloadWeapon(_ped, unused);
}
/**
 * Hash: 0x37FB1C870E2EC2C6 | ApiSet: undefined
 */
export function taskRideTrain(ped, train, scenarioPoint, scenarioHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _train = train instanceof Entity ? train.handle() : train;
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    TaskRideTrain(_ped, _train, scenarioPoint, scenarioHash);
}
/**
 * Hash: 0x126EF75F1E17ABE5 | ApiSet: undefined
 */
export function taskScriptedAnimation(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskScriptedAnimation(_ped);
}
/**
 * Hash: 0x7BB967F85D8CCBDB | ApiSet: undefined
 */
export function taskRobPed(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskRobPed(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x84D32B3BEC531324 | ApiSet: undefined
 */
export function taskSeekCoverFromPed(ped, fromPed, duration, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _fromPed = fromPed instanceof Ped ? fromPed.handle() : fromPed;
    TaskSeekCoverFromPed(_ped, _fromPed, duration, p3, p4, p5);
}
/**
 * Hash: 0x8D7F2A63688C20A4 | ApiSet: undefined
 */
export function taskSeekClearLosToEntity(ped, entity, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskSeekClearLosToEntity(_ped, _entity, p2, p3, p4);
}
/**
 * Hash: 0x75AC2B60386D89F2 | ApiSet: undefined
 */
export function taskSeekCoverFromPos(ped, position, duration, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSeekCoverFromPos(_ped, position.x, position.y, position.z, duration, p5, p6, p7);
}
/**
 * Hash: 0x39246A6958EF072C | ApiSet: undefined
 */
export function taskSeekCoverToCoords(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSeekCoverToCoords(_ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0xD43D95C7A869447F | ApiSet: undefined
 */
export function taskSeekCoverToCoverPoint(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSeekCoverToCoverPoint(_ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * Hash: 0x90D2156198831D69 | ApiSet: undefined
 */
export function taskSetBlockingOfNonTemporaryEvents(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSetBlockingOfNonTemporaryEvents(_ped, toggle);
}
/**
 * Hash: 0x933C06518B52A9A4 | ApiSet: undefined
 */
export function taskSetSphereDefensiveArea(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSetSphereDefensiveArea(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x17293C633C8AC019 | ApiSet: undefined
 */
export function taskSetCrouchMovement(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSetCrouchMovement(_ped, p1, p2, p3);
}
/**
 * Hash: 0x452419CBD838065B | ApiSet: undefined
 */
export function taskShockingEventReact(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskShockingEventReact(_ped, p1, p2);
}
/**
 * Hash: 0x4C3FA937B44A90FA | ApiSet: undefined
 */
export function taskSetStealthMovement(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSetStealthMovement(_ped, p1, p2, p3);
}
/**
 * Hash: 0x08DA95E8298AE772 | ApiSet: undefined
 */
export function taskShootAtEntity(entity, targetEntity, duration, firingPattern, affectCockedState) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    if (typeof firingPattern === 'string')
        firingPattern = this.getHashKey(firingPattern);
    TaskShootAtEntity(_entity, _targetEntity, duration, firingPattern, affectCockedState);
}
/**
 * Hash: 0x46A6CC01E0826106 | ApiSet: undefined
 */
export function taskShootAtCoord(ped, position, duration, firingPattern, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof firingPattern === 'string')
        firingPattern = this.getHashKey(firingPattern);
    TaskShootAtCoord(_ped, position.x, position.y, position.z, duration, firingPattern, p6);
}
/**
 * Hash: 0x08AA95E8298AE772 | ApiSet: undefined
 */
export function taskShootWithWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return TaskShootWithWeapon(_ped);
}
/**
 * ```
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 * ```
 * Hash: 0x7AA80209BDA643EB | ApiSet: undefined
 */
export function taskShuffleToNextVehicleSeat(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskShuffleToNextVehicleSeat(_ped, _vehicle);
}
/**
 * ```
 * Makes a ped run away from another ped (fleeFromTarget)
 * fleeDistance = ped will flee this distance
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 * fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
 * fleeSpeed = mostly 3f, rarely 1f in R* Scripts
 * ```
 * Hash: 0x22B0D0E37CCB840D | ApiSet: undefined
 */
export function taskSmartFleePed(ped, fleeFromTarget, fleeDistance, fleeTime, fleeType, fleeSpeed, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _fleeFromTarget = fleeFromTarget instanceof Ped ? fleeFromTarget.handle() : fleeFromTarget;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    TaskSmartFleePed(_ped, _fleeFromTarget, fleeDistance, fleeTime, fleeType, fleeSpeed, _targetPed);
}
/**
 * ```
 * Makes the specified ped flee the specified distance from the specified position.
 * fleeType: see TASK_FLEE_COORD
 * ```
 * Hash: 0x94587F17E9C365D5 | ApiSet: undefined
 */
export function taskSmartFleeCoord(ped, position, distance, time, fleeType, fleeSpeed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSmartFleeCoord(_ped, position.x, position.y, position.z, distance, time, fleeType, fleeSpeed);
}
/**
 * Hash: 0xAE032F8BBA959E90 | ApiSet: undefined
 */
export function taskStandGuard(ped, position, heading, scenarioName) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskStandGuard(_ped, position.x, position.y, position.z, heading, scenarioName);
}
/**
 * ```
 * Makes the specified ped stand still for (time) milliseconds.
 * ```
 * Hash: 0x919BE13EED931959 | ApiSet: undefined
 */
export function taskStandStill(ped, time) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskStandStill(_ped, time);
}
/**
 * Hash: 0x4D1F61FC34AF3CD1 | ApiSet: undefined
 */
export function taskStartScenarioAtPosition(ped, scenarioHash, position, heading, duration, sittingScenario, teleport, p9, p10, p11) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    TaskStartScenarioAtPosition(_ped, scenarioHash, position.x, position.y, position.z, heading, duration, sittingScenario, teleport, p9, p10, p11);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 * Params: duration in milliseconds
 * conditionalHash (optionally):
 * 0 = play random conditional anim.
 * Every conditional anim has requirements to play it.
 * If requirements are not met, ped plays random allowed conditional anim or can be stuck.
 * For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
 * ```
 * Hash: 0x524B54361229154F | ApiSet: undefined
 */
export function taskStartScenarioInPlaceHash(ped, scenarioHash, duration, playEnterAnim, conditionalHash, heading, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof scenarioHash === 'string')
        scenarioHash = this.getHashKey(scenarioHash);
    if (typeof conditionalHash === 'string')
        conditionalHash = this.getHashKey(conditionalHash);
    TaskStartScenarioInPlaceHash(_ped, scenarioHash, duration, playEnterAnim, conditionalHash, heading, p6);
}
/**
 * ```
 * Takes scenario point handle instead of hash
 * ```
 * Hash: 0xA917E39F2CEFD215 | ApiSet: undefined
 */
export function taskStartScenarioInPlace2(ped, p1, p2, p3, p4, p5, p6) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskStartScenarioInPlace2(_ped, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xED27560703F37258 | ApiSet: undefined
 */
export function taskStopLeadingHorse(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskStopLeadingHorse(_ped);
}
/**
 * ```
 * Makes the ped run to take cover
 * ```
 * Hash: 0xE5DA8615A6180789 | ApiSet: undefined
 */
export function taskStayInCover(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskStayInCover(_ped);
}
/**
 * ```
 * Baits: see 0x9B0C7FA063E67629
 * ```
 * Hash: 0x2C28AC30A72722DA | ApiSet: undefined
 */
export function taskSwapFishingBait(ped, bait, withoutBuoy) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSwapFishingBait(_ped, bait, withoutBuoy);
}
/**
 * Hash: 0xA21C51255B205245 | ApiSet: undefined
 */
export function taskSwapWeapon(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskSwapWeapon(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x7285951DBF6B5A51 | ApiSet: undefined
 */
export function taskThrowProjectile(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskThrowProjectile(_ped, p1, p2, p3);
}
/**
 * ```
 * duration in milliseconds
 * ```
 * Hash: 0x1DDA930A0AC38571 | ApiSet: undefined
 */
export function taskTurnPedToFaceCoord(ped, position, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskTurnPedToFaceCoord(_ped, position.x, position.y, position.z, duration);
}
/**
 * Hash: 0x7282356DFF6B5A51 | ApiSet: undefined
 */
export function taskThrowProjectile2(p0, p1, p2, p3) {
    TaskThrowProjectile2(p0, p1, p2, p3);
}
/**
 * Hash: 0x84179419DBDD36F2 | ApiSet: undefined
 */
export function taskTurnToFaceClosestPed(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskTurnToFaceClosestPed(_ped, p1, p2, p3);
}
/**
 * ```
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 * ```
 * Hash: 0x5AD23D40115353AC | ApiSet: undefined
 */
export function taskTurnPedToFaceEntity(ped, targetEntity, duration, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetEntity = targetEntity instanceof Entity ? targetEntity.handle() : targetEntity;
    TaskTurnPedToFaceEntity(_ped, _targetEntity, duration, p3, p4, p5);
}
/**
 * Hash: 0x97A28E63F0BA5631 | ApiSet: undefined
 */
export function taskUseNearestScenarioChainToCoordWarp(ped, position, distance, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseNearestScenarioChainToCoordWarp(_ped, position.x, position.y, position.z, distance, p5, p6, p7, p8);
}
/**
 * Hash: 0x9FDA1B3D7E7028B3 | ApiSet: undefined
 */
export function taskUseNearestScenarioChainToCoord(ped, position, distance, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseNearestScenarioChainToCoord(_ped, position.x, position.y, position.z, distance, p5, p6, p7, p8);
}
/**
 * Hash: 0x322BFDEA666E2B0E | ApiSet: undefined
 */
export function taskUseNearestScenarioToCoord(ped, position, distance, duration, p6, p7, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseNearestScenarioToCoord(_ped, position.x, position.y, position.z, distance, duration, p6, p7, p8, p9);
}
/**
 * Hash: 0x58E2E0F23F6B76C3 | ApiSet: undefined
 */
export function taskUseNearestScenarioToCoordWarp(ped, position, distance, duration, p6, p7, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseNearestScenarioToCoordWarp(_ped, position.x, position.y, position.z, distance, duration, p6, p7, p8, p9);
}
/**
 * Hash: 0x14747F4A5971DE4E | ApiSet: undefined
 */
export function taskUseRandomScenarioInGroup(ped, p1, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseRandomScenarioInGroup(_ped, p1, p2, p3, p4);
}
/**
 * Hash: 0x3774B03456DD6106 | ApiSet: undefined
 */
export function taskUseNearestTrainScenarioToCoordWarp(ped, position, distance) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskUseNearestTrainScenarioToCoordWarp(_ped, position.x, position.y, position.z, distance);
}
/**
 * Hash: 0xCCDAE6324B6A821C | ApiSet: undefined
 */
export function taskUseScenarioPoint(ped, scenario, conditionalAnim, p3, p4, p5, p6, p7, p8, p9) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p6 === 'string')
        p6 = this.getHashKey(p6);
    TaskUseScenarioPoint(_ped, scenario, conditionalAnim, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x447C1E9EF844BC0F | ApiSet: undefined
 */
export function taskVehicleAimAtCoord(ped, position) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskVehicleAimAtCoord(_ped, position.x, position.y, position.z);
}
/**
 * Hash: 0x0F6641449DD86FBE | ApiSet: undefined
 */
export function taskUseScenarioPoint2(ped, ped2, p2, p3, p4, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _ped2 = ped2 instanceof Ped ? ped2.handle() : ped2;
    if (typeof p5 === 'string')
        p5 = this.getHashKey(p5);
    TaskUseScenarioPoint2(_ped, _ped2, p2, p3, p4, p5, p6, p7);
}
/**
 * ```
 * flag: 524419 and 0 in shop_horse_shop R* Script
 * ```
 * Hash: 0x089FF2FB965F0A29 | ApiSet: undefined
 */
export function taskVehicleDriveStraightToPoint(driver, vehicle, position, p5, p6, flag) {
    const _driver = driver instanceof Ped ? driver.handle() : driver;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleDriveStraightToPoint(_driver, _vehicle, position.x, position.y, position.z, p5, p6, flag);
}
/**
 * ```
 * stopRange: how close vehicle will get to destination before stopping, default 4.0
 * straightLineDist: distance at which AI switches to heading for target directly instead of following nodes, default -1
 * ```
 * Hash: 0xE2A2AA2F659D77A7 | ApiSet: undefined
 */
export function taskVehicleDriveToCoord(ped, vehicle, position, speed, style, vehicleModel, drivingMode, stopRange, straightLineDist) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof vehicleModel === 'string')
        vehicleModel = this.getHashKey(vehicleModel);
    TaskVehicleDriveToCoord(_ped, _vehicle, position.x, position.y, position.z, speed, style, vehicleModel, drivingMode, stopRange, straightLineDist);
}
/**
 * Hash: 0xE41885592B08B097 | ApiSet: undefined
 */
export function taskVehicleAimAtPed(ped, target) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Ped ? target.handle() : target;
    TaskVehicleAimAtPed(_ped, _target);
}
/**
 * Hash: 0xF0108F01FB105DA2 | ApiSet: undefined
 */
export function taskVehicleDriveToCoord2(ped, p1, p2, p3, p4, p5, p6, p7, p8) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskVehicleDriveToCoord2(_ped, p1, p2, p3, p4, p5, p6, p7, p8);
}
/**
 * ```
 * Tasks vehicle towards owner
 * ```
 * Hash: 0x391073B9D3CCE2BA | ApiSet: undefined
 */
export function taskVehicleDriveToDestination2(vehicle, position, speed, p5, p6, p7, p8) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleDriveToDestination2(_vehicle, position.x, position.y, position.z, speed, p5, p6, p7, p8);
}
/**
 * Hash: 0x480142959D337D00 | ApiSet: undefined
 */
export function taskVehicleDriveWander(ped, vehicle, speed, drivingStyle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleDriveWander(_ped, _vehicle, speed, drivingStyle);
}
/**
 * ```
 * flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
 * p7 = 6 or 3
 * p8 = x coordinate
 * p9 - 8.f
 * p10 = false
 * ```
 * Hash: 0x7F241A0D14354583 | ApiSet: undefined
 */
export function taskVehicleDriveToDestination(driver, vehicle, position, speed, drivingFlags, p7, stoppingRange1, stoppingRange2, p10) {
    const _driver = driver instanceof Ped ? driver.handle() : driver;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleDriveToDestination(_driver, _vehicle, position.x, position.y, position.z, speed, drivingFlags, p7, stoppingRange1, stoppingRange2, p10);
}
/**
 * ```
 * Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
 * ```
 * Hash: 0x6524A8981E8BE7C9 | ApiSet: undefined
 */
export function taskVehicleDriveToPoint2(vehicle, position, p4, p5, p6) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleDriveToPoint2(_vehicle, position.x, position.y, position.z, p4, p5, p6);
}
/**
 * Hash: 0x3123FAA6DB1CF7ED | ApiSet: undefined
 */
export function taskVehicleFollowWaypointRecording(ped, vehicle, waypointRecording, drivingMode, p4, eWaypoint, flag, p7, p8, stoppingDist, p10) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleFollowWaypointRecording(_ped, _vehicle, waypointRecording, drivingMode, p4, eWaypoint, flag, p7, p8, stoppingDist, p10);
}
/**
 * Hash: 0x041D17A9E221AE30 | ApiSet: undefined
 */
export function taskVehicleFollowWaypointRecording2(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    TaskVehicleFollowWaypointRecording2(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x0FA6E4B75F302400 | ApiSet: undefined
 */
export function taskVehicleEscort(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _targetVehicle = targetVehicle instanceof Entity ? targetVehicle.handle() : targetVehicle;
    TaskVehicleEscort(_ped, _vehicle, _targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance);
}
/**
 * ```
 * Vehicle Auto Drive (?)
 * p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
 * Speed: usually 8f
 * Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
 * ```
 * Hash: 0x55CD5FDDD4335C1E | ApiSet: undefined
 */
export function taskVehicleFleeOnCleanup(vehicle, p1, p2, p3, speed, type) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof type === 'string')
        type = this.getHashKey(type);
    TaskVehicleFleeOnCleanup(_vehicle, p1, p2, p3, speed, type);
}
/**
 * Hash: 0x659427E0EF36BCDE | ApiSet: undefined
 */
export function taskVehicleMission(driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic) {
    const _driver = driver instanceof Ped ? driver.handle() : driver;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _vehicleTarget = vehicleTarget instanceof Entity ? vehicleTarget.handle() : vehicleTarget;
    TaskVehicleMission(_driver, _vehicle, _vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic);
}
/**
 * Hash: 0x195AEEB13CEFE2EE | ApiSet: undefined
 */
export function taskVehicleGotoNavmesh(ped, vehicle, position, speed, behaviorFlag, stoppingRange) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleGotoNavmesh(_ped, _vehicle, position.x, position.y, position.z, speed, behaviorFlag, stoppingRange);
}
/**
 * ```
 * See TASK_VEHICLE_MISSION
 * ```
 * Hash: 0x9454528DF15D657A | ApiSet: undefined
 */
export function taskVehicleMissionPedTarget(ped, vehicle, pedTarget, mode, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _pedTarget = pedTarget instanceof Ped ? pedTarget.handle() : pedTarget;
    TaskVehicleMissionPedTarget(_ped, _vehicle, _pedTarget, mode, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic);
}
/**
 * Hash: 0x5190796ED39C9B6D | ApiSet: undefined
 */
export function taskVehicleShootAtCoord(ped, position, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskVehicleShootAtCoord(_ped, position.x, position.y, position.z, p4);
}
/**
 * Hash: 0x10AB107B887214D8 | ApiSet: undefined
 */
export function taskVehicleShootAtPed(ped, target, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _target = target instanceof Ped ? target.handle() : target;
    TaskVehicleShootAtPed(_ped, _target, p2);
}
/**
 * Hash: 0x04ACFAC71E6858F9 | ApiSet: undefined
 */
export function taskWalkAway(ped, entity) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    TaskWalkAway(_ped, _entity);
}
/**
 * ```
 * Documentation from GTA V, might be the same in RDR:
 * '1 - brake
 * '3 - brake + reverse
 * '4 - turn left 90 + braking
 * '5 - turn right 90 + braking
 * '6 - brake strong (handbrake?) until time ends
 * '7 - turn left + accelerate
 * '7 - turn right + accelerate
 * '9 - weak acceleration
 * '10 - turn left + restore wheel pos to center in the end
 * '11 - turn right + restore wheel pos to center in the end
 * '13 - turn left + go reverse
 * '14 - turn left + go reverse
 * '16 - crash the game after like 2 seconds :)
 * '17 - keep actual state, game crashed after few tries
 * '18 - game crash
 * '19 - strong brake + turn left/right
 * '20 - weak brake + turn left then turn right
 * '21 - weak brake + turn right then turn left
 * '22 - brake + reverse
 * '23 - accelerate fast
 * '24 - brake
 * '25 - brake turning left then when almost stopping it turns left more
 * '26 - brake turning right then when almost stopping it turns right more
 * '27 - brake until car stop or until time ends
 * '28 - brake + strong reverse acceleration
 * '30 - performs a burnout (brake until stop + brake and accelerate)
 * '31 - accelerate + handbrake
 * '32 - accelerate very strong
 * Seems to be this:
 * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
 * ```
 * Hash: 0xC429DCEEB339E129 | ApiSet: undefined
 */
export function taskVehicleTempAction(driver, vehicle, action, time) {
    const _driver = driver instanceof Ped ? driver.handle() : driver;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskVehicleTempAction(_driver, _vehicle, action, time);
}
/**
 * Hash: 0x8AC76D1408731732 | ApiSet: undefined
 */
export function taskWanderAndConverseWithPed(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWanderAndConverseWithPed(_ped, p1, p2, p3);
}
/**
 * Hash: 0xE054346CA3A0F315 | ApiSet: undefined
 */
export function taskWanderInArea(ped, position, radius, p5, p6, p7) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWanderInArea(_ped, position.x, position.y, position.z, radius, p5, p6, p7);
}
/**
 * ```
 * Makes ped walk around the area.
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
 * ```
 * Hash: 0xBB9CE077274F6A1B | ApiSet: undefined
 */
export function taskWanderStandard(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWanderStandard(_ped, p1, p2);
}
/**
 * Hash: 0x9FDA168777B28424 | ApiSet: undefined
 */
export function taskWanderInVolume(ped, volume, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWanderInVolume(_ped, volume, p2, p3, p4);
}
/**
 * Hash: 0x527EA3DB8BC7F03B | ApiSet: undefined
 */
export function taskWanderSwim(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWanderSwim(_ped, p1);
}
/**
 * Hash: 0x9A7D091411C5F684 | ApiSet: undefined
 */
export function taskWarpPedIntoVehicle(ped, vehicle, seat) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TaskWarpPedIntoVehicle(_ped, _vehicle, seat);
}
/**
 * Hash: 0x7157B82D60E4BC46 | ApiSet: undefined
 */
export function taskWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    TaskWeapon(_ped);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
 * p2: UNSPECIFIED
 * ```
 * Hash: 0xD6401A1B2F63BED6 | ApiSet: undefined
 */
export function taskWhistleAnim(ped, audPedWhistleType, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof audPedWhistleType === 'string')
        audPedWhistleType = this.getHashKey(audPedWhistleType);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    TaskWhistleAnim(_ped, audPedWhistleType, p2);
}
/**
 * Hash: 0x67406F2C8F87FC4F | ApiSet: undefined
 */
export function uncuffPed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    UncuffPed(_ped);
}
/**
 * ```
 * getupSetHash: see nm_blend_out_sets.meta
 * ```
 * Hash: 0x79559BAD83CCD038 | ApiSet: undefined
 */
export function unhogtiePed(ped, flags, getupSetHash, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof getupSetHash === 'string')
        getupSetHash = this.getHashKey(getupSetHash);
    UnhogtiePed(_ped, flags, getupSetHash, p3, p4, p5);
}
/**
 * Hash: 0x5A353B8E6B1095B5 | ApiSet: undefined
 */
export function useWaypointRecordingAsAssistedMovementRoute(waypointRecording, p1, p2, p3, p4) {
    UseWaypointRecordingAsAssistedMovementRoute(waypointRecording, p1, p2, p3, p4);
}
/**
 * Hash: 0xA98FCAFD7893C834 | ApiSet: undefined
 */
export function updateTaskHandsUpDuration(ped, duration) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    UpdateTaskHandsUpDuration(_ped, duration);
}
/**
 * Hash: 0x8A4E6AC373666BC5 | ApiSet: undefined
 */
export function vehicleWaypointPlaybackPause(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    VehicleWaypointPlaybackPause(_vehicle);
}
/**
 * Hash: 0x4D6D30AB18B0B089 | ApiSet: undefined
 */
export function vehicleWaypointPlaybackGetIsPaused(p0) {
    return VehicleWaypointPlaybackGetIsPaused(p0);
}
/**
 * Hash: 0x121F0593E0A431D7 | ApiSet: undefined
 */
export function vehicleWaypointPlaybackOverrideSpeed(vehicle, speed) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    VehicleWaypointPlaybackOverrideSpeed(_vehicle, speed);
}
/**
 * Hash: 0xDC04FCAA7839D492 | ApiSet: undefined
 */
export function vehicleWaypointPlaybackResume(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    VehicleWaypointPlaybackResume(_vehicle);
}
/**
 * Hash: 0x5CEB25A7D2848963 | ApiSet: undefined
 */
export function vehicleWaypointPlaybackUseDefaultSpeed(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    VehicleWaypointPlaybackUseDefaultSpeed(_vehicle);
}
/**
 * Hash: 0xD73A5D1F0325C71C | ApiSet: undefined
 */
export function waypointPlaybackGetIsAiming(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return WaypointPlaybackGetIsAiming(_ped);
}
/**
 * Hash: 0x701375A7D43F01CB | ApiSet: undefined
 */
export function waypointPlaybackGetIsPaused(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return WaypointPlaybackGetIsPaused(_ped);
}
/**
 * Hash: 0xA5B94DF8AF058F46 | ApiSet: undefined
 */
export function waypointPlaybackGetIsShooting(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return WaypointPlaybackGetIsShooting(_ped);
}
/**
 * Hash: 0x0F342546AA06FED5 | ApiSet: undefined
 */
export function waypointPlaybackPause(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    WaypointPlaybackPause(_ped, p1, p2, p3);
}
/**
 * Hash: 0x8968400D900ED8B3 | ApiSet: undefined
 */
export function waypointPlaybackStartAimingAtCoord(p0, p1, p2, p3, p4, p5) {
    WaypointPlaybackStartAimingAtCoord(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x7D7D2B47FA788E85 | ApiSet: undefined
 */
export function waypointPlaybackOverrideSpeed(ped, speed, p2, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    WaypointPlaybackOverrideSpeed(_ped, speed, p2, p3, p4);
}
/**
 * Hash: 0x244F70C84C547D2D | ApiSet: undefined
 */
export function waypointPlaybackResume(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    WaypointPlaybackResume(_ped, p1, p2, p3);
}
/**
 * Hash: 0x20E330937C399D29 | ApiSet: undefined
 */
export function waypointPlaybackStartAimingAtPed(p0, p1, p2, p3) {
    WaypointPlaybackStartAimingAtPed(p0, p1, p2, p3);
}
/**
 * Hash: 0x4F158205E0C74385 | ApiSet: undefined
 */
export function waypointPlaybackStartAimingAtEntity(p0, p1, p2, p3) {
    WaypointPlaybackStartAimingAtEntity(p0, p1, p2, p3);
}
/**
 * Hash: 0x057A25CFCC9DB671 | ApiSet: undefined
 */
export function waypointPlaybackStartShootingAtCoord(p0, p1, p2, p3, p4, p5, p6) {
    WaypointPlaybackStartShootingAtCoord(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x4AF458F71C1196D2 | ApiSet: undefined
 */
export function waypointPlaybackStartShootingAtEntity(p0, p1, p2, p3, p4) {
    WaypointPlaybackStartShootingAtEntity(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x47EFA040EBB8E2EA | ApiSet: undefined
 */
export function waypointPlaybackStopAimingOrShooting(p0) {
    WaypointPlaybackStopAimingOrShooting(p0);
}
/**
 * Hash: 0xE70BA7B90F8390DC | ApiSet: undefined
 */
export function waypointPlaybackStartShootingAtPed(p0, p1, p2, p3, p4) {
    WaypointPlaybackStartShootingAtPed(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x2FB897405C90B361 | ApiSet: undefined
 */
export function waypointRecordingGetCoord(waypointRecording, point) {
    const result = WaypointRecordingGetCoord(waypointRecording, point);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * Hash: 0x6599D834B12D0800 | ApiSet: undefined
 */
export function waypointPlaybackUseDefaultSpeed(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    WaypointPlaybackUseDefaultSpeed(_ped);
}
/**
 * Hash: 0xB629A298081F876F | ApiSet: undefined
 */
export function waypointRecordingGetClosestWaypoint(waypointRecording, position) {
    return WaypointRecordingGetClosestWaypoint(waypointRecording, position.x, position.y, position.z);
}
/**
 * Hash: 0x5343532C01A07234 | ApiSet: undefined
 */
export function waypointRecordingGetNumPoints(waypointRecording) {
    return WaypointRecordingGetNumPoints(waypointRecording);
}
/**
 * Hash: 0x005622AEBC33ACA9 | ApiSet: undefined
 */
export function waypointRecordingGetSpeedAtPoint(waypointRecording, point) {
    return WaypointRecordingGetSpeedAtPoint(waypointRecording, point);
}
/**
 * ```
 * eventData:
 * struct UI_SCRIPT_EVENT
 * {
 * alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
 * alignas(8) int intParam;
 * alignas(8) Hash hashParam;
 * alignas(8) Hash datastoreParam;
 * };
 * ```
 * Hash: 0xE24E957294241444 | ApiSet: undefined
 */
export function eventsUiGetMessage(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return EventsUiGetMessage(hash);
}
/**
 * Hash: 0x67ED5A7963F2F722 | ApiSet: undefined
 */
export function eventsUiIsPending(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return EventsUiIsPending(hash);
}
/**
 * Hash: 0x8E8A2369F48EC839 | ApiSet: undefined
 */
export function eventsUiPopMessage(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    EventsUiPopMessage(hash);
}
/**
 * ```
 * eventData: see EVENTS_UI_GET_MESSAGE
 * ```
 * Hash: 0x90237103F27F7937 | ApiSet: undefined
 */
export function eventsUiPeekMessage(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return EventsUiPeekMessage(hash);
}
/**
 * ```
 * Only used in R* SP Script beat_animal_attack
 * Returns feedMessage
 * ```
 * Hash: 0x0FD07141AD048AAE | ApiSet: undefined
 */
export function _0x0FD07141AD048AAE(p1) {
    return Citizen.invokeNative('0x0FD07141AD048AAE', p1);
}
/**
 * ```
 * Only used in R* SP Scripts
 * ```
 * Hash: 0x18D6869FBFFEC0F8 | ApiSet: undefined
 */
export function _0x18D6869FBFFEC0F8(p2, p3) {
    return Citizen.invokeNative('0x18D6869FBFFEC0F8', p2, p3);
}
/**
 * Hash: 0x6D85126F6CCF02C9 | ApiSet: undefined
 */
export function _0x6D85126F6CCF02C9(feedChannel, p1, p2) {
    Citizen.invokeNative('0x6D85126F6CCF02C9', feedChannel, p1, p2);
}
/**
 * ```
 * Returns feedMessage
 * ```
 * Hash: 0x4E88A65968A55C78 | ApiSet: undefined
 */
export function _0x4E88A65968A55C78(p1) {
    return Citizen.invokeNative('0x4E88A65968A55C78', p1);
}
/**
 * Hash: 0xB7223B91CD6B7E07 | ApiSet: undefined
 */
export function _0xB7223B91CD6B7E07(feedChannel) {
    return Citizen.invokeNative('0xB7223B91CD6B7E07', feedChannel);
}
/**
 * ```
 * feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
 * ```
 * Hash: 0xDD1232B332CBB9E7 | ApiSet: undefined
 */
export function uiFeedClearChannel(feedChannel, p1, p2) {
    UiFeedClearChannel(feedChannel, p1, p2);
}
/**
 * Hash: 0xAFF5BE9BA496CE40 | ApiSet: undefined
 */
export function _0xAFF5BE9BA496CE40(p2, p3, collectableCategory) {
    if (typeof collectableCategory === 'string')
        collectableCategory = this.getHashKey(collectableCategory);
    return Citizen.invokeNative('0xAFF5BE9BA496CE40', p2, p3, collectableCategory);
}
/**
 * ```
 * feedChannel: see UI_FEED_CLEAR_CHANNEL
 * Returns feedMessage
 * ```
 * Hash: 0xC17F69E1418CD11F | ApiSet: undefined
 */
export function uiFeedGetCurrentMessage(feedChannel) {
    return UiFeedGetCurrentMessage(feedChannel);
}
/**
 * ```
 * Hides Toast Notifications
 * ```
 * Hash: 0x6035E8FBCA32AC5E | ApiSet: undefined
 */
export function uiFeedClearAllChannels() {
    UiFeedClearAllChannels();
}
/**
 * ```
 * Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
 * ```
 * Hash: 0xB2920B9760F0F36B | ApiSet: undefined
 */
export function uiFeedPostFeedTicker(p2) {
    return UiFeedPostFeedTicker(p2);
}
/**
 * ```
 * Clears help text
 * ```
 * Hash: 0x2F901291EF177B02 | ApiSet: undefined
 */
export function uiFeedClearHelpTextFeed(feedMessage, p1) {
    UiFeedClearHelpTextFeed(feedMessage, p1);
}
/**
 * ```
 * Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
 * ```
 * Hash: 0x59FA676177DBE4C9 | ApiSet: undefined
 */
export function uiFeedGetMessageState(feedMessage) {
    return UiFeedGetMessageState(feedMessage);
}
/**
 * ```
 * Example : https://pastebin.com/GvdBp8Dh
 * ```
 * Hash: 0x049D5C615BD38BAD | ApiSet: undefined
 */
export function uiFeedPostHelpText(p2) {
    return UiFeedPostHelpText(p2);
}
/**
 * Hash: 0x2024F4F333095FB1 | ApiSet: undefined
 */
export function uiFeedPostMissionName(p2) {
    return UiFeedPostMissionName(p2);
}
/**
 * Hash: 0x8D1249BD28791878 | ApiSet: undefined
 */
export function uiFeedPostGameUpdateShard(p2) {
    return UiFeedPostGameUpdateShard(p2);
}
/**
 * Hash: 0x860DDFE97CC94DF0 | ApiSet: undefined
 */
export function uiFeedPostOneTextShard(p2) {
    return UiFeedPostOneTextShard(p2);
}
/**
 * ```
 * Example : https://pastebin.com/h1YzycuR
 * ```
 * Hash: 0xD05590C1AB38F068 | ApiSet: undefined
 */
export function uiFeedPostLocationShard(p2, p3) {
    return UiFeedPostLocationShard(p2, p3);
}
/**
 * ```
 * Example : https://pastebin.com/13tuRa63
 * ```
 * Hash: 0xCEDBF17EFCC0E4A4 | ApiSet: undefined
 */
export function uiFeedPostObjective(p2) {
    return UiFeedPostObjective(p2);
}
/**
 * Hash: 0x3F9FDDBA79117C69 | ApiSet: undefined
 */
export function uiFeedPostRankupToast(p2, p3) {
    return UiFeedPostRankupToast(p2, p3);
}
/**
 * ```
 * Example : https://pastebin.com/YZMBkAmW
 * ```
 * Hash: 0x26E87218390E6729 | ApiSet: undefined
 */
export function uiFeedPostSampleToast(p2, p3) {
    return UiFeedPostSampleToast(p2, p3);
}
/**
 * Hash: 0x893128CDB4B81FBB | ApiSet: undefined
 */
export function uiFeedPostReticleMessage(p2) {
    return UiFeedPostReticleMessage(p2);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x38838A646FB30AAE | ApiSet: undefined
 */
export function uiFeedPostSampleToastWithAppLink(p2, p3, p4) {
    return UiFeedPostSampleToastWithAppLink(p2, p3, p4);
}
/**
 * ```
 * Example : https://pastebin.com/kAtEMQTD
 * ```
 * Hash: 0xC927890AA64E9661 | ApiSet: undefined
 */
export function uiFeedPostSampleNotification(p2, p3) {
    return UiFeedPostSampleNotification(p2, p3);
}
/**
 * Hash: 0x02BCC0FE9EBA3529 | ApiSet: undefined
 */
export function uiFeedPostThreeTextShard(p2, p3, p4) {
    return UiFeedPostThreeTextShard(p2, p3, p4);
}
/**
 * Hash: 0xB249EBCB30DD88E0 | ApiSet: undefined
 */
export function uiFeedPostSampleToastRight(p2) {
    return UiFeedPostSampleToastRight(p2);
}
/**
 * Hash: 0xA6F4216AB10EB08E | ApiSet: undefined
 */
export function uiFeedPostTwoTextShard(p2, p3) {
    return UiFeedPostTwoTextShard(p2, p3);
}
/**
 * Hash: 0xC48152BC6B3E821C | ApiSet: undefined
 */
export function uiFeedPostVoiceChatFeed(p2) {
    return UiFeedPostVoiceChatFeed(p2);
}
/**
 * Hash: 0x2A4765812202E671 | ApiSet: undefined
 */
export function _0x2A4765812202E671() {
    return Citizen.invokeNative('0x2A4765812202E671');
}
/**
 * Hash: 0x763637F9B838B0A7 | ApiSet: undefined
 */
export function _0x763637F9B838B0A7(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x763637F9B838B0A7', p0, p1, p2);
}
/**
 * Hash: 0xA20398536B7F1134 | ApiSet: undefined
 */
export function _0xA20398536B7F1134(p0, p1, p2, p3, p4, p5) {
    Citizen.invokeNative('0xA20398536B7F1134', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xA49D6D503E3EA847 | ApiSet: undefined
 */
export function _0xA49D6D503E3EA847(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0xA49D6D503E3EA847', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x69D5479982355D8F | ApiSet: undefined
 */
export function uilogAddEntryHash(p0, p1, position, p5, p6, p7) {
    if (typeof p5 === 'string')
        p5 = this.getHashKey(p5);
    if (typeof p6 === 'string')
        p6 = this.getHashKey(p6);
    UilogAddEntryHash(p0, p1, position.x, position.y, position.z, p5, p6, p7);
}
/**
 * Hash: 0xDA0A30153FCC0FFD | ApiSet: undefined
 */
export function _0xDA0A30153FCC0FFD() {
    Citizen.invokeNative('0xDA0A30153FCC0FFD');
}
/**
 * Hash: 0x49C63FDF69744A27 | ApiSet: undefined
 */
export function uilogAddItemToTaskList(p0, p1, p2, p3, p4, p5, p6, p7) {
    UilogAddItemToTaskList(p0, p1, p2, p3, p4, p5, p6, p7);
}
/**
 * Hash: 0xB43163388484CC87 | ApiSet: undefined
 */
export function uilogAddOrUpdateObjective(p0, p1, p2, p3, p4, p5, p6) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p2 === 'string')
        p2 = this.getHashKey(p2);
    UilogAddOrUpdateObjective(p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x60C59968E8E87E6B | ApiSet: undefined
 */
export function uilogAddTotalTakeEntry(p0, p1, p2, p3, p4) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof p4 === 'string')
        p4 = this.getHashKey(p4);
    UilogAddTotalTakeEntry(p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xB95B4EA6B1EDF035 | ApiSet: undefined
 */
export function uilogClearAllEntries() {
    UilogClearAllEntries();
}
/**
 * Hash: 0xDFF0D417277B41F8 | ApiSet: undefined
 */
export function uilogClearCachedObjective() {
    UilogClearCachedObjective();
}
/**
 * Hash: 0xA3108D6981A5CADB | ApiSet: undefined
 */
export function uilogClearHasDisplayedCachedObjective() {
    UilogClearHasDisplayedCachedObjective();
}
/**
 * Hash: 0x15A4461BEB788096 | ApiSet: undefined
 */
export function uilogGetCachedObjective() {
    return UilogGetCachedObjective();
}
/**
 * Hash: 0xCC48FFBB45B54F71 | ApiSet: undefined
 */
export function uilogHasDisplayedCachedObjective() {
    return UilogHasDisplayedCachedObjective();
}
/**
 * Hash: 0xB8188CCF52202475 | ApiSet: undefined
 */
export function uilogIsEntryRegistered(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return UilogIsEntryRegistered(p0, p1);
}
/**
 * Hash: 0x3920574CF0A2B7B6 | ApiSet: undefined
 */
export function uilogMarkAllEntriesAvailability(p0, p1) {
    UilogMarkAllEntriesAvailability(p0, p1);
}
/**
 * Hash: 0x13E8D7DD08543482 | ApiSet: undefined
 */
export function uilogMarkEntryAvailability(p0, p1, p2, p3) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    UilogMarkEntryAvailability(p0, p1, p2, p3);
}
/**
 * Hash: 0xDE31D66D1E54C471 | ApiSet: undefined
 */
export function uilogMarkMissionCompleted(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    UilogMarkMissionCompleted(p0);
}
/**
 * Hash: 0x49E58FE6EF40B987 | ApiSet: undefined
 */
export function uilogPostNotification() {
    return UilogPostNotification();
}
/**
 * Hash: 0xE9990552DEC71600 | ApiSet: undefined
 */
export function uilogPrintCachedObjective() {
    UilogPrintCachedObjective();
}
/**
 * Hash: 0xD594A19BE09A75C6 | ApiSet: undefined
 */
export function uilogRemoveEntry(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    UilogRemoveEntry(p0, p1);
}
/**
 * Hash: 0xFA233F8FE190514C | ApiSet: undefined
 */
export function uilogSetCachedObjective(p0) {
    UilogSetCachedObjective(p0);
}
/**
 * Hash: 0x6965469934958D8F | ApiSet: undefined
 */
export function uilogSetEntryIconTexture(p0, p1, icon, iconDictionary) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof icon === 'string')
        icon = this.getHashKey(icon);
    if (typeof iconDictionary === 'string')
        iconDictionary = this.getHashKey(iconDictionary);
    UilogSetEntryIconTexture(p0, p1, icon, iconDictionary);
}
/**
 * Hash: 0xA31013798FADCADC | ApiSet: undefined
 */
export function uilogSetDisplayCompletionRating(logEntryType, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    UilogSetDisplayCompletionRating(logEntryType, p1, p2);
}
/**
 * Hash: 0xA3108D6981A5CADC | ApiSet: undefined
 */
export function uilogSetHasDisplayedCachedObjective() {
    UilogSetHasDisplayedCachedObjective();
}
/**
 * Hash: 0x69684D9936958D8F | ApiSet: undefined
 */
export function uilogSetEntryBriefTexture(p0, p1, texture, textureDictionary) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    if (typeof texture === 'string')
        texture = this.getHashKey(texture);
    if (typeof textureDictionary === 'string')
        textureDictionary = this.getHashKey(textureDictionary);
    UilogSetEntryBriefTexture(p0, p1, texture, textureDictionary);
}
/**
 * Hash: 0xD106B211EF1B8F04 | ApiSet: undefined
 */
export function uilogSetTotalTakeSummary(p0, p1) {
    UilogSetTotalTakeSummary(p0, p1);
}
/**
 * Hash: 0x72A5CD214B342568 | ApiSet: undefined
 */
export function uilogSetEntryPinned(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    UilogSetEntryPinned(p0, p1, p2);
}
/**
 * Hash: 0x136A027CF37B0A4F | ApiSet: undefined
 */
export function uilogSetPendingDetailsId(p0, p1) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    return UilogSetPendingDetailsId(p0, p1);
}
/**
 * Hash: 0x80D6524190258C3E | ApiSet: undefined
 */
export function uilogUpdateEntrySubheader(p0, p1, p2) {
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    UilogUpdateEntrySubheader(p0, p1, p2);
}
/**
 * Hash: 0xF7C180F57F85D0B8 | ApiSet: undefined
 */
export function uiStateMachineCanRequestTransition(p0) {
    return UiStateMachineCanRequestTransition(p0);
}
/**
 * Hash: 0x4C6F2C4B7A03A266 | ApiSet: undefined
 */
export function uiStateMachineCreate(p0, p1) {
    return UiStateMachineCreate(p0, p1);
}
/**
 * Hash: 0x2738D68D2B4E09E7 | ApiSet: undefined
 */
export function uiStateMachineDestroyAndClear() {
    return UiStateMachineDestroyAndClear();
}
/**
 * Hash: 0x11E73195E735B25B | ApiSet: undefined
 */
export function uiStateMachineIsExited(p0) {
    if (typeof p0 === 'string')
        p0 = this.getHashKey(p0);
    return UiStateMachineIsExited(p0);
}
/**
 * Hash: 0x4EB122210A90E2D8 | ApiSet: undefined
 */
export function uiStateMachineDestroy(p0) {
    UiStateMachineDestroy(p0);
}
/**
 * Hash: 0x7EA9C3547E80350E | ApiSet: undefined
 */
export function uiStateMachineRequestTransition(p0, p1) {
    return UiStateMachineRequestTransition(p0, p1);
}
/**
 * Hash: 0x10A93C057B6BD944 | ApiSet: undefined
 */
export function uiflowblockIsLoaded(p0) {
    return UiflowblockIsLoaded(p0);
}
/**
 * Hash: 0x5D15569C0FEBF757 | ApiSet: undefined
 */
export function uiStateMachineExists(p0) {
    return UiStateMachineExists(p0);
}
/**
 * Hash: 0x6B9FE4F0BA521A19 | ApiSet: undefined
 */
export function uiStateMachineRequestExit(p0, p1) {
    UiStateMachineRequestExit(p0, p1);
}
/**
 * Hash: 0xF320A77DD5F781DF | ApiSet: undefined
 */
export function uiflowblockRelease(p0) {
    UiflowblockRelease(p0);
}
/**
 * Hash: 0x3B7519720C9DCB45 | ApiSet: undefined
 */
export function uiflowblockEnter(p0, p1) {
    return UiflowblockEnter(p0, p1);
}
/**
 * Hash: 0xC0081B34E395CE48 | ApiSet: undefined
 */
export function uiflowblockRequest(p0) {
    return UiflowblockRequest(p0);
}
/**
 * Hash: 0x3138582E0A13BFAB | ApiSet: undefined
 */
export function uipinningGetTooltipText(hash) {
    if (typeof hash === 'string')
        hash = this.getHashKey(hash);
    return UipinningGetTooltipText(hash);
}
/**
 * ```
 * Example: https://pastebin.com/JygJShNU
 * ```
 * Hash: 0x815C4065AE6E6071 | ApiSet: undefined
 */
export function uiStickyFeedCreateDeathFailMessage(p2) {
    return UiStickyFeedCreateDeathFailMessage(p2);
}
/**
 * Hash: 0x00A15B94CBA4F76F | ApiSet: undefined
 */
export function uiStickyFeedClearMessage(msgId) {
    UiStickyFeedClearMessage(msgId);
}
/**
 * ```
 * Example: https://pastebin.com/EJD7ytnz
 * ```
 * Hash: 0x9F2CC2439A04E7BA | ApiSet: undefined
 */
export function uiStickyFeedCreateErrorMessage(p2) {
    return UiStickyFeedCreateErrorMessage(p2);
}
/**
 * ```
 * Example: https://pastebin.com/6mLtee2S
 * ```
 * Hash: 0x339E16B41780FC35 | ApiSet: undefined
 */
export function uiStickyFeedCreateWarningMessage(p2) {
    return UiStickyFeedCreateWarningMessage(p2);
}
/**
 * ```
 * Returns state of sticky feed message, see 0x59FA676177DBE4C9
 * ```
 * Hash: 0x07954320D77F6A3D | ApiSet: undefined
 */
export function uiStickyFeedGetMessageState(msgId) {
    return UiStickyFeedGetMessageState(msgId);
}
/**
 * Hash: 0xF8806EC3FF840FDC | ApiSet: undefined
 */
export function uiStickyFeedIsAlertScreenActive() {
    return UiStickyFeedIsAlertScreenActive();
}
/**
 * ```
 * Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
 * Example: https://pastebin.com/nDrJyWq2
 * ```
 * Hash: 0xBC6F454E310124DA | ApiSet: undefined
 */
export function uiStickyFeedUpdateMessage(msgId, p2) {
    return UiStickyFeedUpdateMessage(msgId, p2);
}
/**
 * ```
 * stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
 * ```
 * Hash: 0xC5C395C60B542A3C | ApiSet: undefined
 */
export function uiStickyFeedIsChannelActive(stickyFeedChannel) {
    return UiStickyFeedIsChannelActive(stickyFeedChannel);
}
/**
 * ```
 * enum eRpgIcons
 * {
 * ICON_STAMINA,
 * ICON_STAMINA_CORE,
 * ICON_DEADEYE,
 * ICON_DEADEYE_CORE,
 * ICON_HEALTH,
 * ICON_HEALTH_CORE,
 * ICON_HORSE_HEALTH,
 * ICON_HORSE_HEALTH_CORE,
 * ICON_HORSE_STAMINA,
 * ICON_HORSE_STAMINA_CORE,
 * ICON_HORSE_COURAGE,
 * ICON_HORSE_COURAGE_CORE
 * };
 * enum eRpgIconVisibility
 * {
 * ICON_VISIBILITY_WAIT_TO_HIDE,
 * ICON_VISIBILITY_ALWAYS_SHOW,
 * ICON_VISIBILITY_ALWAYS_HIDE,
 * ICON_VISIBILITY_ALWAYS_BLINK
 * };
 * ```
 * Hash: 0xC116E6DF68DCE667 | ApiSet: undefined
 */
export function uitutorialSetRpgIconVisibility(rpgIcon, visibility) {
    UitutorialSetRpgIconVisibility(rpgIcon, visibility);
}
/**
 * Hash: 0x2CC24A2A7A1489C4 | ApiSet: undefined
 */
export function uitutorialGetIsThreatIndicatorCapableRadarShown() {
    return UitutorialGetIsThreatIndicatorCapableRadarShown();
}
/**
 * Hash: 0xFC2E0A5E9ED4E1B4 | ApiSet: undefined
 */
export function uitutorialGetIsThreatIndicatorOn() {
    return UitutorialGetIsThreatIndicatorOn();
}
/**
 * Hash: 0x66BF197E066050DE | ApiSet: undefined
 */
export function unlockIsLootable(unlockHash) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockIsLootable(unlockHash);
}
/**
 * Hash: 0x7C1C2062CFAD06FE | ApiSet: undefined
 */
export function unlockGetItemRoleUnlockInfo(unlockHash) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockGetItemRoleUnlockInfo(unlockHash);
}
/**
 * Hash: 0x644166BA7AA49DEA | ApiSet: undefined
 */
export function unlockIsNew(unlockHash) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockIsNew(unlockHash);
}
/**
 * Hash: 0xC4B660C7B6040E75 | ApiSet: undefined
 */
export function unlockIsUnlocked(unlockHash) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockIsUnlocked(unlockHash);
}
/**
 * Hash: 0x6B6369647F26F09F | ApiSet: undefined
 */
export function unlockIsUnlockFlagSet(unlockHash, flag) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockIsUnlockFlagSet(unlockHash, flag);
}
/**
 * Hash: 0x8588A14B75AF096B | ApiSet: undefined
 */
export function unlockIsVisible(unlockHash) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    return UnlockIsVisible(unlockHash);
}
/**
 * Hash: 0xA6D79C7AEF870A99 | ApiSet: undefined
 */
export function unlockSetNew(unlockHash, toggle) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    UnlockSetNew(unlockHash, toggle);
}
/**
 * Hash: 0x1B7C5ADA8A6910A0 | ApiSet: undefined
 */
export function unlockSetUnlocked(unlockHash, toggle) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    UnlockSetUnlocked(unlockHash, toggle);
}
/**
 * Hash: 0x46B901A8ECDB5A61 | ApiSet: undefined
 */
export function unlockSetVisible(unlockHash, toggle) {
    if (typeof unlockHash === 'string')
        unlockHash = this.getHashKey(unlockHash);
    UnlockSetVisible(unlockHash, toggle);
}
/**
 * Hash: 0x4C221BAC54D735C3 | ApiSet: undefined
 */
export function addRoadNodeSpeedZone(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    return AddRoadNodeSpeedZone(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x316CDB5B6E8F4110 | ApiSet: undefined
 */
export function attachDraftVehicleHarnessPed(mount, draft, harnessId) {
    const _mount = mount instanceof Ped ? mount.handle() : mount;
    const _draft = draft instanceof Entity ? draft.handle() : draft;
    return AttachDraftVehicleHarnessPed(_mount, _draft, harnessId);
}
/**
 * Hash: 0x41503629D1139ABC | ApiSet: undefined
 */
export function addTrainTemporaryStop(train, trackIndex, position) {
    const _train = train instanceof Entity ? train.handle() : train;
    AddTrainTemporaryStop(_train, trackIndex, position.x, position.y, position.z);
}
/**
 * ```
 * Returns false if every seat is occupied.
 * ```
 * Hash: 0xA0A424505A1B6429 | ApiSet: undefined
 */
export function areAnyVehicleSeatsFree(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return AreAnyVehicleSeatsFree(_vehicle);
}
/**
 * ```
 * Params: destroyingForce is usually 100f in R* Scripts
 * Similar to 0xD4F5EFB55769D272, _A*
 * ```
 * Hash: 0xC372B6A88F6E4AD8 | ApiSet: undefined
 */
export function breakOffDraftWheel(vehicle, wheelIndex, destroyingForce) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    BreakOffDraftWheel(_vehicle, wheelIndex, destroyingForce);
}
/**
 * Hash: 0xC075176CFB8B4128 | ApiSet: undefined
 */
export function canAnchorBoatHere(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return CanAnchorBoatHere(_vehicle);
}
/**
 * ```
 * wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
 * ```
 * Hash: 0xD4F5EFB55769D272 | ApiSet: undefined
 */
export function breakOffVehicleWheel(vehicle, wheelIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return BreakOffVehicleWheel(_vehicle, wheelIndex);
}
/**
 * Hash: 0x0EFC5DC62E67609B | ApiSet: undefined
 */
export function clearLastDrivenVehicle() {
    ClearLastDrivenVehicle();
}
/**
 * ```
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 * ```
 * Hash: 0xDBC28A8C683CD80B | ApiSet: undefined
 */
export function copyVehicleDamages(sourceVehicle, targetVehicle) {
    const _sourceVehicle = sourceVehicle instanceof Entity ? sourceVehicle.handle() : sourceVehicle;
    const _targetVehicle = targetVehicle instanceof Entity ? targetVehicle.handle() : targetVehicle;
    CopyVehicleDamages(_sourceVehicle, _targetVehicle);
}
/**
 * ```
 * This native makes the vehicle stop immediately
 * distance defines how far it will travel until stopping.
 * ```
 * Hash: 0x260BE8F09E326A20 | ApiSet: undefined
 */
export function bringVehicleToHalt(vehicle, distance, duration, unknown) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    BringVehicleToHalt(_vehicle, distance, duration, unknown);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0xF8B2D32A2231FD24 | ApiSet: undefined
 */
export function canShuffleSeat(vehicle, seatIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return CanShuffleSeat(_vehicle, seatIndex);
}
/**
 * ```
 * Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
 * ```
 * Hash: 0x214651FB1DFEBA89 | ApiSet: undefined
 */
export function createDraftVehicle(modelHash, position, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, draftAnimalPopGroup, p9) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    if (typeof draftAnimalPopGroup === 'string')
        draftAnimalPopGroup = this.getHashKey(draftAnimalPopGroup);
    return CreateDraftVehicle(modelHash, position.x, position.y, position.z, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, draftAnimalPopGroup, p9);
}
/**
 * Hash: 0xAF35D0D2583051B0 | ApiSet: undefined
 */
export function createVehicle(modelHash, position, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, p8) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return CreateVehicle(modelHash, position.x, position.y, position.z, heading, isNetwork, bScriptHostVeh, bDontAutoCreateDraftAnimals, p8);
}
/**
 * ```
 * configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
 * For more information, see trainconfigs.ymt
 * To make the train AI controlled, set conductor to true and set the speed once.
 * ```
 * Hash: 0xC239DBD9A57D2A71 | ApiSet: undefined
 */
export function createMissionTrain(configHash, position, direction, passengers, p6, conductor) {
    if (typeof configHash === 'string')
        configHash = this.getHashKey(configHash);
    return CreateMissionTrain(configHash, position.x, position.y, position.z, direction, passengers, p6, conductor);
}
/**
 * Hash: 0x0D3630FB07E8B570 | ApiSet: undefined
 */
export function deleteMissionTrain(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    DeleteMissionTrain(_vehicle);
}
/**
 * Hash: 0xA3120A1385F17FF7 | ApiSet: undefined
 */
export function deleteAllTrains() {
    DeleteAllTrains();
}
/**
 * ```
 * Spawn without lanterns set
 * ```
 * Hash: 0xE1A83D4A3B5D7938 | ApiSet: undefined
 */
export function deleteVehicleLanterns(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return DeleteVehicleLanterns(_vehicle);
}
/**
 * ```
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0xE20A909D8C4A70F8 | ApiSet: undefined
 */
export function deleteVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    DeleteVehicle(_vehicle);
}
/**
 * Hash: 0xB36D3EC70963BE60 | ApiSet: undefined
 */
export function detachDraftVehicleHarnessPed(draft, ped) {
    const _draft = draft instanceof Entity ? draft.handle() : draft;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return DetachDraftVehicleHarnessPed(_draft, _ped);
}
/**
 * Hash: 0x4402960666000E62 | ApiSet: undefined
 */
export function detachDraftVehicleHarnessFromIndex(draft, harnessId) {
    const _draft = draft instanceof Entity ? draft.handle() : draft;
    return DetachDraftVehicleHarnessFromIndex(_draft, harnessId);
}
/**
 * ```
 * Only used in train_robbery4 R* Script
 * _C* - _DEL*
 * ```
 * Hash: 0x54CBDD6E1B4CB4DF | ApiSet: undefined
 */
export function detachWagonEntityFromTrain(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    DetachWagonEntityFromTrain(_entity);
}
/**
 * Hash: 0x94B1E71B144356A5 | ApiSet: undefined
 */
export function disableVehicleWeapon(disabled, weaponHash, vehicle, owner) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _owner = owner instanceof Ped ? owner.handle() : owner;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    DisableVehicleWeapon(disabled, weaponHash, _vehicle, _owner);
}
/**
 * Hash: 0xAF5E7E9A7620FFB5 | ApiSet: undefined
 */
export function doesExtraExist(vehicle, extraId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return DoesExtraExist(_vehicle, extraId);
}
/**
 * Hash: 0xC29996A337BDD099 | ApiSet: undefined
 */
export function doesTrainExistOnTrack(trackIndex) {
    return DoesTrainExistOnTrack(trackIndex);
}
/**
 * ```
 * Explodes a selected vehicle.
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 * ```
 * Hash: 0x75DCED9EEC5769D7 | ApiSet: undefined
 */
export function explodeVehicle(vehicle, isAudible, isInvisible, p3, p4) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ExplodeVehicle(_vehicle, isAudible, isInvisible, p3, p4);
}
/**
 * ```
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 * ```
 * Hash: 0x59ECA796021B0539 | ApiSet: undefined
 */
export function forcePlaybackRecordedVehicleUpdate(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ForcePlaybackRecordedVehicleUpdate(_vehicle, p1);
}
/**
 * Hash: 0x35DC1877312FBA0F | ApiSet: undefined
 */
export function fadeAndDestroyVehicle() {
    return FadeAndDestroyVehicle();
}
/**
 * Hash: 0x35D302397E524939 | ApiSet: undefined
 */
export function getCheckpointTrainSpawnLocation(trackIndex, position, distance, direction) {
    return new Vector3(GetCheckpointTrainSpawnLocation(trackIndex, position.x, position.y, position.z, distance, direction));
}
/**
 * Hash: 0x58F2244C1286D09A | ApiSet: undefined
 */
export function getBreakableVehicleLockObject(vehicle, index) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetBreakableVehicleLockObject(_vehicle, index);
}
/**
 * Hash: 0xE015CF1F2C0959D8 | ApiSet: undefined
 */
export function getBreakableVehicleLocksState(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetBreakableVehicleLocksState(_vehicle);
}
/**
 * Hash: 0x52F45D033645181B | ApiSet: undefined
 */
export function getClosestVehicle(position, radius, modelHash, flags) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetClosestVehicle(position.x, position.y, position.z, radius, modelHash, flags);
}
/**
 * ```
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 * ```
 * Hash: 0x86FA6D8B48667D75 | ApiSet: undefined
 */
export function getCurrentStationForTrain(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetCurrentStationForTrain(_train);
}
/**
 * ```
 * Returns p0 for 0xBA958F68031DDBFC (trackIndex)
 * ```
 * Hash: 0xAF787E081AC4A8EE | ApiSet: undefined
 */
export function getCurrentTrackForTrain(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetCurrentTrackForTrain(_train);
}
/**
 * ```
 * `Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.`
 * ```
 * Hash: 0xC6D7DDC843176701 | ApiSet: undefined
 */
export function getDraftVehicleDesiredSpeed(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetDraftVehicleDesiredSpeed(_vehicle);
}
/**
 * Hash: 0xA19447D83294E29F | ApiSet: undefined
 */
export function getDraftAnimalCount(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetDraftAnimalCount(_vehicle);
}
/**
 * Hash: 0x2963B5C1637E8A27 | ApiSet: undefined
 */
export function getDriverOfVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetDriverOfVehicle(_vehicle);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0x74583B19FEEAFDA7 | ApiSet: undefined
 */
export function getLastPedInVehicleSeat(vehicle, seatIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetLastPedInVehicleSeat(_vehicle, seatIndex);
}
/**
 * Hash: 0xA94F3E0AB9695E19 | ApiSet: undefined
 */
export function getLastDrivenVehicle() {
    return GetLastDrivenVehicle();
}
/**
 * Hash: 0x6DE03BCC15E81710 | ApiSet: undefined
 */
export function getNearestTrainTrackPosition(position) {
    return new Vector3(GetNearestTrainTrackPosition(position.x, position.y, position.z));
}
/**
 * Hash: 0x2FA86833E3617E2D | ApiSet: undefined
 */
export function getNumBreakableVehicleLockObjects(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetNumBreakableVehicleLockObjects(_vehicle);
}
/**
 * ```
 * Returns amount for CAN_REGISTER_MISSION_VEHICLES
 * ```
 * Hash: 0x635423D55CA84FC8 | ApiSet: undefined
 */
export function getNumCarsFromTrainConfig(trainConfig) {
    if (typeof trainConfig === 'string')
        trainConfig = this.getHashKey(trainConfig);
    return GetNumCarsFromTrainConfig(trainConfig);
}
/**
 * ```
 * Returns number of horses a wagon can have
 * ```
 * Hash: 0x5B1A26BB18E7D451 | ApiSet: undefined
 */
export function getNumDraftVehicleHarnessPed(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetNumDraftVehicleHarnessPed(modelHash);
}
/**
 * ```
 * enum eDraftHarness
 * {
 * DRAFT_HARNESS_LR,
 * DRAFT_HARNESS_RR,
 * DRAFT_HARNESS_LM,
 * DRAFT_HARNESS_RM,
 * DRAFT_HARNESS_LF,
 * DRAFT_HARNESS_RF,
 * DRAFT_HARNESS_COUNT
 * };
 * ```
 * Hash: 0xA8BA0BAE0173457B | ApiSet: undefined
 */
export function getPedInDraftHarness(vehicle, harnessId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetPedInDraftHarness(_vehicle, harnessId);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0xBB40DD2270B65366 | ApiSet: undefined
 */
export function getPedInVehicleSeat(vehicle, seatIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetPedInVehicleSeat(_vehicle, seatIndex);
}
/**
 * ```
 * Returns Coords of vStation
 * p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
 * _GET_P* - _GET_T*
 * ```
 * Hash: 0xBA958F68031DDBFC | ApiSet: undefined
 */
export function getStationCoordsFromTrainStationData(trackIndex, stationIndex) {
    return new Vector3(GetStationCoordsFromTrainStationData(trackIndex, stationIndex));
}
/**
 * ```
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 * See REQUEST_VEHICLE_RECORDING
 * ```
 * Hash: 0x1A00961A1BE94E5E | ApiSet: undefined
 */
export function getPositionOfVehicleRecordingAtTime(recording, time, script) {
    return new Vector3(GetPositionOfVehicleRecordingAtTime(recording, time, script));
}
/**
 * Hash: 0x233B51C7913FA031 | ApiSet: undefined
 */
export function getTimePositionInRecording(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetTimePositionInRecording(_vehicle);
}
/**
 * ```
 * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
 * See REQUEST_VEHICLE_RECORDING
 * ```
 * Hash: 0x61787DD28B8CC0D5 | ApiSet: undefined
 */
export function getRotationOfVehicleRecordingAtTime(recording, time, script) {
    return new Vector3(GetRotationOfVehicleRecordingAtTime(recording, time, script));
}
/**
 * ```
 * Returns trackIndex
 * _E* - _F*
 * ```
 * Hash: 0x85D39F5E3B6D7EB0 | ApiSet: undefined
 */
export function getTrackIndexFromCoords(position) {
    return GetTrackIndexFromCoords(position.x, position.y, position.z);
}
/**
 * Hash: 0x865FEC2FA899F29C | ApiSet: undefined
 */
export function getTrackIndexOfTrain(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrackIndexOfTrain(_train);
}
/**
 * ```
 * Returns handles of boat paddles entities.
 * ```
 * Hash: 0xA6E210FB4283B767 | ApiSet: undefined
 */
export function getRowingOars(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetRowingOars(_vehicle);
}
/**
 * ```
 * Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
 * ```
 * Hash: 0x671A07C9A1CD50A5 | ApiSet: undefined
 */
export function getTrainCar(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrainCar(_train);
}
/**
 * Hash: 0x3C9628A811CBD724 | ApiSet: undefined
 */
export function getTrainDirection(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrainDirection(_train);
}
/**
 * Hash: 0xD0FB093A4CDB932C | ApiSet: undefined
 */
export function getTrainCarriage(train, trailerNumber) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrainCarriage(_train, trailerNumber);
}
/**
 * ```
 * Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
 * _C* (O, P, Q, R)
 * ```
 * Hash: 0x60B7D1DCC312697D | ApiSet: undefined
 */
export function getTrainCarriageTrailerNumber(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrainCarriageTrailerNumber(_train);
}
/**
 * ```
 * https://i.imgur.com/1rHibjW.jpg
 * ```
 * Hash: 0x67995318F5FAA496 | ApiSet: undefined
 */
export function getTrainDirectionFromIndex(trackIndex) {
    return GetTrainDirectionFromIndex(trackIndex);
}
/**
 * ```
 * Returns modelHash
 * ```
 * Hash: 0x8DF5F6A19F99F0D5 | ApiSet: undefined
 */
export function getTrainModelFromTrainConfigByCarIndex(trainConfig, trainCarIndex) {
    if (typeof trainConfig === 'string')
        trainConfig = this.getHashKey(trainConfig);
    return GetTrainModelFromTrainConfigByCarIndex(trainConfig, trainCarIndex);
}
/**
 * Hash: 0x1E8A921112891651 | ApiSet: undefined
 */
export function getTrainPositionOnTrack(trackIndex) {
    return new Vector3(GetTrainPositionOnTrack(trackIndex));
}
/**
 * ```
 * Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
 * ```
 * Hash: 0x86AFC343CF7F0B34 | ApiSet: undefined
 */
export function getTrainTrackJunctionAtCoords(trainTrack, position) {
    if (typeof trainTrack === 'string')
        trainTrack = this.getHashKey(trainTrack);
    return GetTrainTrackJunctionAtCoords(trainTrack, position.x, position.y, position.z);
}
/**
 * ```
 * Returns trackIndex
 * ```
 * Hash: 0x45853F4E17D847D5 | ApiSet: undefined
 */
export function getTrainTrackFromTrainVehicle(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return GetTrainTrackFromTrainVehicle(_train);
}
/**
 * ```
 * Returns train
 * ```
 * Hash: 0x6E585A616ABB8401 | ApiSet: undefined
 */
export function getTrainVehicleFromTrackIndex(trackIndex) {
    return GetTrainVehicleFromTrackIndex(trackIndex);
}
/**
 * Hash: 0xC867FD144F2469D3 | ApiSet: undefined
 */
export function getVehicleDoorLockStatus(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleDoorLockStatus(_vehicle);
}
/**
 * Hash: 0xFA2CDDFEB8BC898B | ApiSet: undefined
 */
export function getVehicleDoorsLockedForPlayer(vehicle, player) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _player = player instanceof Entity ? player.remoteId() : player;
    return GetVehicleDoorsLockedForPlayer(_vehicle, _player);
}
/**
 * ```
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 * ```
 * Hash: 0x42113B857E33C16E | ApiSet: undefined
 */
export function getVehicleBodyHealth(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleBodyHealth(_vehicle);
}
/**
 * Hash: 0xDD1E1393D966D39A | ApiSet: undefined
 */
export function getVehicleDoorsLockedForTeam(vehicle, team) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleDoorsLockedForTeam(_vehicle, team);
}
/**
 * Hash: 0xFE52F34491529F0B | ApiSet: undefined
 */
export function getVehicleEstimatedMaxSpeed(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleEstimatedMaxSpeed(_vehicle);
}
/**
 * Hash: 0x9A578736FF3A17C3 | ApiSet: undefined
 */
export function getVehicleModelNumberOfSeats(modelHash) {
    if (typeof modelHash === 'string')
        modelHash = this.getHashKey(modelHash);
    return GetVehicleModelNumberOfSeats(modelHash);
}
/**
 * ```
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 * ```
 * Hash: 0x90DBFFAC43B22081 | ApiSet: undefined
 */
export function getVehicleEngineHealth(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleEngineHealth(_vehicle);
}
/**
 * ```
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
 * ```
 * Hash: 0x59F3F16577CD79B2 | ApiSet: undefined
 */
export function getVehicleNumberOfPassengers(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleNumberOfPassengers(_vehicle);
}
/**
 * Hash: 0xD798DF5DB67B1659 | ApiSet: undefined
 */
export function getVehicleIsPropSetApplied(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleIsPropSetApplied(_vehicle);
}
/**
 * Hash: 0xBB765B8FD49A796C | ApiSet: undefined
 */
export function getVehicleLivery(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleLivery(_vehicle);
}
/**
 * Hash: 0xA9C55F1C15E62E06 | ApiSet: undefined
 */
export function getVehicleMaxNumberOfPassengers(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleMaxNumberOfPassengers(_vehicle);
}
/**
 * Hash: 0xB729679356A889AE | ApiSet: undefined
 */
export function getVehicleOwner(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleOwner(_vehicle);
}
/**
 * ```
 * 1000 is max health
 * ```
 * Hash: 0x1E5A9B356D5098BE | ApiSet: undefined
 */
export function getVehiclePetrolTankHealth(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehiclePetrolTankHealth(_vehicle);
}
/**
 * ```
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 * ```
 * Hash: 0xCF867A239EC30741 | ApiSet: undefined
 */
export function getVehicleTrailerVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleTrailerVehicle(_vehicle);
}
/**
 * Hash: 0xA44D65E6C624526F | ApiSet: undefined
 */
export function getVehicleTint(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleTint(_vehicle);
}
/**
 * Hash: 0xFF5791B7639C2A46 | ApiSet: undefined
 */
export function getVehicleTurretSeat(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return GetVehicleTurretSeat(_vehicle);
}
/**
 * Hash: 0x2701D01D5E18FC31 | ApiSet: undefined
 */
export function hasInstantFillVehiclePopulationFinished() {
    return HasInstantFillVehiclePopulationFinished();
}
/**
 * Hash: 0xBD3C4A2ED509205E | ApiSet: undefined
 */
export function hasTrainLoaded(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return HasTrainLoaded(_train);
}
/**
 * Hash: 0xB935F3154BC913C8 | ApiSet: undefined
 */
export function hasVehicleAssetLoaded(vehicleAsset) {
    if (typeof vehicleAsset === 'string')
        vehicleAsset = this.getHashKey(vehicleAsset);
    return HasVehicleAssetLoaded(vehicleAsset);
}
/**
 * ```
 * See REQUEST_VEHICLE_RECORDING
 * ```
 * Hash: 0xBA9325BE372AB6EA | ApiSet: undefined
 */
export function hasVehicleRecordingBeenLoaded(recording, script) {
    return HasVehicleRecordingBeenLoaded(recording, script);
}
/**
 * Hash: 0x201B8ED4FF7FE9F5 | ApiSet: undefined
 */
export function hideHorseReins(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    HideHorseReins(_vehicle);
}
/**
 * Hash: 0x1FF00DB43026B12F | ApiSet: undefined
 */
export function instantlyFillVehiclePopulation() {
    InstantlyFillVehiclePopulation();
}
/**
 * Hash: 0x5698BA4FD04D39C4 | ApiSet: undefined
 */
export function isAnyVehicleNearPoint(position, radius) {
    return IsAnyVehicleNearPoint(position.x, position.y, position.z, radius);
}
/**
 * Hash: 0x30D86B2B7622D0EB | ApiSet: undefined
 */
export function isBoatGrounded(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsBoatGrounded(_vehicle);
}
/**
 * Hash: 0xEA44E97849E9F3DD | ApiSet: undefined
 */
export function isDraftVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsDraftVehicle(_vehicle);
}
/**
 * Hash: 0x80DDCCB2F4A3EB57 | ApiSet: undefined
 */
export function isEntryPointForSeatClear(ped, vehicle, seatIndex, side, onEnter) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsEntryPointForSeatClear(_ped, _vehicle, seatIndex, side, onEnter);
}
/**
 * Hash: 0xB213D2A560B2E48B | ApiSet: undefined
 */
export function isPedExclusiveDriverOfVehicle(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPedExclusiveDriverOfVehicle(_ped, _vehicle);
}
/**
 * Hash: 0x5A7472606EC5B7C1 | ApiSet: undefined
 */
export function isPlaybackUsingAiGoingOnForVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPlaybackUsingAiGoingOnForVehicle(_vehicle);
}
/**
 * Hash: 0x02774B3A9034278F | ApiSet: undefined
 */
export function isPlaybackGoingOnForVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsPlaybackGoingOnForVehicle(_vehicle);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * ```
 * Hash: 0x7892685BF6D9775E | ApiSet: undefined
 */
export function isSeatWarpOnly(vehicle, seatIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsSeatWarpOnly(_vehicle, seatIndex);
}
/**
 * Hash: 0x799CFC7C5B743B15 | ApiSet: undefined
 */
export function isThisModelABoat(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsThisModelABoat(model);
}
/**
 * Hash: 0xB9D5BDDA88E1BB66 | ApiSet: undefined
 */
export function isThisModelADraftVehicle(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsThisModelADraftVehicle(model);
}
/**
 * Hash: 0xFC08C8F8C1EDF174 | ApiSet: undefined
 */
export function isThisModelATrain(model) {
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsThisModelATrain(model);
}
/**
 * Hash: 0xE887BD31D97793F6 | ApiSet: undefined
 */
export function isTrainWaitingAtStation(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return IsTrainWaitingAtStation(_train);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0xE979BB5602AD3402 | ApiSet: undefined
 */
export function isVehicleDoorBroken(vehicle, doorId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleDoorBroken(_vehicle, doorId);
}
/**
 * ```
 * Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
 * ```
 * Hash: 0x404527BC03DA0E6C | ApiSet: undefined
 */
export function isVehicleBroughtToHalt(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleBroughtToHalt(_vehicle);
}
/**
 * Hash: 0xB86D29B10F627379 | ApiSet: undefined
 */
export function isVehicleDriveable(vehicle, p1, p2) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleDriveable(_vehicle, p1, p2);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0x7AE191143C7A9107 | ApiSet: undefined
 */
export function isVehicleDoorFullyOpen(vehicle, doorId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleDoorFullyOpen(_vehicle, doorId);
}
/**
 * Hash: 0x3F5029A8FC060C48 | ApiSet: undefined
 */
export function isVehicleInBurnout(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleInBurnout(_vehicle);
}
/**
 * Hash: 0xFA9A55D9C4351625 | ApiSet: undefined
 */
export function isVehicleExtraTurnedOn(vehicle, extraId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleExtraTurnedOn(_vehicle, extraId);
}
/**
 * Hash: 0x0045A54EC7A22455 | ApiSet: undefined
 */
export function isVehicleModel(vehicle, model) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof model === 'string')
        model = this.getHashKey(model);
    return IsVehicleModel(_vehicle, model);
}
/**
 * Hash: 0x0E3BF7ED4169EC43 | ApiSet: undefined
 */
export function isVehicleOnFire(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleOnFire(_vehicle);
}
/**
 * Hash: 0x5136B284B67B35C7 | ApiSet: undefined
 */
export function isVehicleFadingOut(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleFadingOut(_vehicle);
}
/**
 * Hash: 0x0D5D119529654EE0 | ApiSet: undefined
 */
export function isVehicleOnAllWheels(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleOnAllWheels(_vehicle);
}
/**
 * ```
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
 * ```
 * Hash: 0xE052C1B1CAA4ECE4 | ApiSet: undefined
 */
export function isVehicleSeatFree(vehicle, seatIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleSeatFree(_vehicle, seatIndex);
}
/**
 * ```
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 * ```
 * Hash: 0x78C3311A73135241 | ApiSet: undefined
 */
export function isVehicleStopped(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleStopped(_vehicle);
}
/**
 * Hash: 0xCB2CA620C48BC875 | ApiSet: undefined
 */
export function isVehicleWheelDestroyed(vehicle, wheel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleWheelDestroyed(_vehicle, wheel);
}
/**
 * ```
 * VEH_STUCK_ON_ROOF = 0,
 * VEH_STUCK_ON_SIDE,
 * VEH_STUCK_HUNG_UP,
 * VEH_STUCK_JAMMED
 * ```
 * Hash: 0x1ABA9753939503C5 | ApiSet: undefined
 */
export function isVehicleStuckTimerUp(vehicle, stuckType, ms) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleStuckTimerUp(_vehicle, stuckType, ms);
}
/**
 * ```
 * Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
 * ```
 * Hash: 0x424910CD5DE8C246 | ApiSet: undefined
 */
export function isVehicleVisible(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleVisible(_vehicle);
}
/**
 * Hash: 0x35AD938C74CACD6A | ApiSet: undefined
 */
export function modifyVehicleTopSpeed(vehicle, value) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ModifyVehicleTopSpeed(_vehicle, value);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x0E7910A63E05B12C | ApiSet: undefined
 */
export function isVehicleWindowIntact(vehicle, windowIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleWindowIntact(_vehicle, windowIndex);
}
/**
 * Hash: 0x1EF36558FBDE2DAA | ApiSet: undefined
 */
export function lockDoorsWhenNoLongerNeeded(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    LockDoorsWhenNoLongerNeeded(_vehicle);
}
/**
 * Hash: 0xDDBEA5506C848227 | ApiSet: undefined
 */
export function isVehicleWrecked(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return IsVehicleWrecked(_vehicle);
}
/**
 * Hash: 0x0355FE37240E2C77 | ApiSet: undefined
 */
export function _0x0355FE37240E2C77(p0, p1) {
    Citizen.invokeNative('0x0355FE37240E2C77', p0, p1);
}
/**
 * ```
 * Takes value returned from 0x45853F4E17D847D5
 * ```
 * Hash: 0x0516FAE561276EFC | ApiSet: undefined
 */
export function _0x0516FAE561276EFC(trackIndex) {
    return Citizen.invokeNative('0x0516FAE561276EFC', trackIndex);
}
/**
 * ```
 * Only used in SP Scripts.
 * Related to Vehicle Speed.
 * ```
 * Hash: 0x012701ED938B85DE | ApiSet: undefined
 */
export function _0x012701ED938B85DE(p0, p1) {
    Citizen.invokeNative('0x012701ED938B85DE', p0, p1);
}
/**
 * ```
 * _SET_VEHICLE_*
 * ```
 * Hash: 0x04F0579DBDD32F34 | ApiSet: undefined
 */
export function _0x04F0579DBDD32F34(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x04F0579DBDD32F34', _vehicle);
}
/**
 * ```
 * _SET_TRAIN_*
 * ```
 * Hash: 0x06A09A6E0C6D2A84 | ApiSet: undefined
 */
export function _0x06A09A6E0C6D2A84(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0x06A09A6E0C6D2A84', _train, p1);
}
/**
 * ```
 * _SET_VEHICLE_S*
 * ```
 * Hash: 0x0794199B25E499E1 | ApiSet: undefined
 */
export function _0x0794199B25E499E1(wagon, p1) {
    const _wagon = wagon instanceof Entity ? wagon.handle() : wagon;
    Citizen.invokeNative('0x0794199B25E499E1', _wagon, p1);
}
/**
 * ```
 * _RESET_VEHICLE_*
 * ```
 * Hash: 0x09034479E6E3E269 | ApiSet: undefined
 */
export function _0x09034479E6E3E269(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return Citizen.invokeNative('0x09034479E6E3E269', _train);
}
/**
 * Hash: 0x07E2E21E799080A0 | ApiSet: undefined
 */
export function _0x07E2E21E799080A0(p0, p1) {
    Citizen.invokeNative('0x07E2E21E799080A0', p0, p1);
}
/**
 * Hash: 0x0CD7914D17A970AB | ApiSet: undefined
 */
export function _0x0CD7914D17A970AB(p0, p1) {
    Citizen.invokeNative('0x0CD7914D17A970AB', p0, p1);
}
/**
 * Hash: 0x0BA4250D20007C2E | ApiSet: undefined
 */
export function _0x0BA4250D20007C2E(p0) {
    return Citizen.invokeNative('0x0BA4250D20007C2E', p0);
}
/**
 * Hash: 0x0D5FDF0D36FA10CD | ApiSet: undefined
 */
export function _0x0D5FDF0D36FA10CD(trackIndex) {
    Citizen.invokeNative('0x0D5FDF0D36FA10CD', trackIndex);
}
/**
 * Hash: 0x0E558D3A49D759D6 | ApiSet: undefined
 */
export function _0x0E558D3A49D759D6(p0, p1) {
    return Citizen.invokeNative('0x0E558D3A49D759D6', p0, p1);
}
/**
 * Hash: 0x0F7F603BDE08C4D3 | ApiSet: undefined
 */
export function _0x0F7F603BDE08C4D3(p0) {
    Citizen.invokeNative('0x0F7F603BDE08C4D3', p0);
}
/**
 * Hash: 0x0FDDEE66E3465726 | ApiSet: undefined
 */
export function _0x0FDDEE66E3465726(p0) {
    return Citizen.invokeNative('0x0FDDEE66E3465726', p0);
}
/**
 * Hash: 0x104D9A7B1C0D0783 | ApiSet: undefined
 */
export function _0x104D9A7B1C0D0783(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x104D9A7B1C0D0783', _vehicle, p1);
}
/**
 * Hash: 0x1121B07088ED3013 | ApiSet: undefined
 */
export function _0x1121B07088ED3013(p0) {
    return Citizen.invokeNative('0x1121B07088ED3013', p0);
}
/**
 * ```
 * Params: coords = GET_ENTITY_VELOCITY
 * _SET_VELOCITY*
 * ```
 * Hash: 0x12F6C6ED3EFF42DE | ApiSet: undefined
 */
export function _0x12F6C6ED3EFF42DE(vehicle, position) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x12F6C6ED3EFF42DE', _vehicle, position.x, position.y, position.z);
}
/**
 * ```
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 * _GET_N* (NEAREST_STATION_FOR_TRAIN?)
 * ```
 * Hash: 0x1180A2974D251B7B | ApiSet: undefined
 */
export function _0x1180A2974D251B7B(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return Citizen.invokeNative('0x1180A2974D251B7B', _train);
}
/**
 * Hash: 0x13EB275BF81636D1 | ApiSet: undefined
 */
export function _0x13EB275BF81636D1(p0, p1) {
    Citizen.invokeNative('0x13EB275BF81636D1', p0, p1);
}
/**
 * Hash: 0x13C190302369308B | ApiSet: undefined
 */
export function _0x13C190302369308B(p0) {
    return Citizen.invokeNative('0x13C190302369308B', p0);
}
/**
 * Hash: 0x14DA8C4BC2CCD90A | ApiSet: undefined
 */
export function _0x14DA8C4BC2CCD90A(p0) {
    return Citizen.invokeNative('0x14DA8C4BC2CCD90A', p0);
}
/**
 * Hash: 0x15206E88FF7617DF | ApiSet: undefined
 */
export function _0x15206E88FF7617DF(trackIndex, p1) {
    Citizen.invokeNative('0x15206E88FF7617DF', trackIndex, p1);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x15CC8C33D7FFCC4A | ApiSet: undefined
 */
export function _0x15CC8C33D7FFCC4A(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x15CC8C33D7FFCC4A', _vehicle, p1);
}
/**
 * Hash: 0x16B86A49E072AA85 | ApiSet: undefined
 */
export function _0x16B86A49E072AA85() {
    Citizen.invokeNative('0x16B86A49E072AA85');
}
/**
 * Hash: 0x160C1B5AB48AB87C | ApiSet: undefined
 */
export function _0x160C1B5AB48AB87C(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0x160C1B5AB48AB87C', _train, p1);
}
/**
 * Hash: 0x172E9DD35858DCD7 | ApiSet: undefined
 */
export function _0x172E9DD35858DCD7(p0) {
    Citizen.invokeNative('0x172E9DD35858DCD7', p0);
}
/**
 * Hash: 0x165BE2001E5E4B75 | ApiSet: undefined
 */
export function _0x165BE2001E5E4B75(p0) {
    Citizen.invokeNative('0x165BE2001E5E4B75', p0);
}
/**
 * Hash: 0x1BFBAFCC6760FF02 | ApiSet: undefined
 */
export function _0x1BFBAFCC6760FF02(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0x1BFBAFCC6760FF02', _train, p1);
}
/**
 * ```
 * _ARE_ANY_VEHICLE_(WHEELS_DESTROYED?)*
 * ```
 * Hash: 0x18714953CCED17D3 | ApiSet: undefined
 */
export function _0x18714953CCED17D3(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return Citizen.invokeNative('0x18714953CCED17D3', _vehicle);
}
/**
 * Hash: 0x1A861F899EBBE17C | ApiSet: undefined
 */
export function _0x1A861F899EBBE17C(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0x1A861F899EBBE17C', _train, p1);
}
/**
 * Hash: 0x2200AB13CBD10F4E | ApiSet: undefined
 */
export function _0x2200AB13CBD10F4E(vehicle, position, p4, p5) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x2200AB13CBD10F4E', _vehicle, position.x, position.y, position.z, p4, p5);
}
/**
 * Hash: 0x23F66C36F8E5EAAB | ApiSet: undefined
 */
export function _0x23F66C36F8E5EAAB(p0, p1) {
    Citizen.invokeNative('0x23F66C36F8E5EAAB', p0, p1);
}
/**
 * Hash: 0x2045429505158D1A | ApiSet: undefined
 */
export function _0x2045429505158D1A(p0) {
    return Citizen.invokeNative('0x2045429505158D1A', p0);
}
/**
 * Hash: 0x27E3F2B57209FA54 | ApiSet: undefined
 */
export function _0x27E3F2B57209FA54(p0, p1) {
    Citizen.invokeNative('0x27E3F2B57209FA54', p0, p1);
}
/**
 * Hash: 0x288CBB414C3C2FBB | ApiSet: undefined
 */
export function _0x288CBB414C3C2FBB(p0) {
    return Citizen.invokeNative('0x288CBB414C3C2FBB', p0);
}
/**
 * Hash: 0x2A7413168F6CD5A8 | ApiSet: undefined
 */
export function _0x2A7413168F6CD5A8() {
    Citizen.invokeNative('0x2A7413168F6CD5A8');
}
/**
 * Hash: 0x2C46D2A591D8C322 | ApiSet: undefined
 */
export function _0x2C46D2A591D8C322(p0, p1, p2) {
    return Citizen.invokeNative('0x2C46D2A591D8C322', p0, p1, p2);
}
/**
 * Hash: 0x2BB2B5BCF0DF8008 | ApiSet: undefined
 */
export function _0x2BB2B5BCF0DF8008(p0, p1) {
    Citizen.invokeNative('0x2BB2B5BCF0DF8008', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x3137EDC899E6DAE4 | ApiSet: undefined
 */
export function _0x3137EDC899E6DAE4(p0, p1) {
    Citizen.invokeNative('0x3137EDC899E6DAE4', p0, p1);
}
/**
 * Hash: 0x3053064F909B5F42 | ApiSet: undefined
 */
export function _0x3053064F909B5F42(p0, p1) {
    Citizen.invokeNative('0x3053064F909B5F42', p0, p1);
}
/**
 * ```
 * Returns trackIndex
 * ```
 * Hash: 0x331CBD247FC5DAA8 | ApiSet: undefined
 */
export function _0x331CBD247FC5DAA8(configHash, position, direction, p5) {
    if (typeof configHash === 'string')
        configHash = this.getHashKey(configHash);
    return Citizen.invokeNative('0x331CBD247FC5DAA8', configHash, position.x, position.y, position.z, direction, p5);
}
/**
 * Hash: 0x37D238BE69F7378A | ApiSet: undefined
 */
export function _0x37D238BE69F7378A(trackIndex) {
    return Citizen.invokeNative('0x37D238BE69F7378A', trackIndex);
}
/**
 * ```
 * Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
 * ```
 * Hash: 0x3ABFA128F5BF5A70 | ApiSet: undefined
 */
export function _0x3ABFA128F5BF5A70(trainTrack, junctionIndex, enabled) {
    if (typeof trainTrack === 'string')
        trainTrack = this.getHashKey(trainTrack);
    Citizen.invokeNative('0x3ABFA128F5BF5A70', trainTrack, junctionIndex, enabled);
}
/**
 * Hash: 0x34BCF6209B9668A7 | ApiSet: undefined
 */
export function _0x34BCF6209B9668A7(trackIndex, p1) {
    Citizen.invokeNative('0x34BCF6209B9668A7', trackIndex, p1);
}
/**
 * Hash: 0x41365DB586CD9E8E | ApiSet: undefined
 */
export function _0x41365DB586CD9E8E(trackIndex, p1) {
    Citizen.invokeNative('0x41365DB586CD9E8E', trackIndex, p1);
}
/**
 * Hash: 0x38E7DD70A242D5CB | ApiSet: undefined
 */
export function _0x38E7DD70A242D5CB(trackIndex, p1) {
    Citizen.invokeNative('0x38E7DD70A242D5CB', trackIndex, p1);
}
/**
 * Hash: 0x42404D57D621601A | ApiSet: undefined
 */
export function _0x42404D57D621601A(p0) {
    return Citizen.invokeNative('0x42404D57D621601A', p0);
}
/**
 * Hash: 0x427C919E9809E370 | ApiSet: undefined
 */
export function _0x427C919E9809E370(trackIndex, p1) {
    Citizen.invokeNative('0x427C919E9809E370', trackIndex, p1);
}
/**
 * Hash: 0x3D86997A86FEEF0D | ApiSet: undefined
 */
export function _0x3D86997A86FEEF0D(p0, p1) {
    Citizen.invokeNative('0x3D86997A86FEEF0D', p0, p1);
}
/**
 * ```
 * _H*
 * ```
 * Hash: 0x41F0B254DDF71473 | ApiSet: undefined
 */
export function _0x41F0B254DDF71473(wagon) {
    const _wagon = wagon instanceof Entity ? wagon.handle() : wagon;
    Citizen.invokeNative('0x41F0B254DDF71473', _wagon);
}
/**
 * Hash: 0x485B05EF05B9AEE9 | ApiSet: undefined
 */
export function _0x485B05EF05B9AEE9(p0, p1) {
    Citizen.invokeNative('0x485B05EF05B9AEE9', p0, p1);
}
/**
 * ```
 * Params: p1 usually true in R* Scripts
 * _SET_DRAFT_VEHICLE_*
 * ```
 * Hash: 0x4C60C333F9CCA2B6 | ApiSet: undefined
 */
export function _0x4C60C333F9CCA2B6(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x4C60C333F9CCA2B6', _vehicle, p1);
}
/**
 * Hash: 0x4C05B42A8D937796 | ApiSet: undefined
 */
export function _0x4C05B42A8D937796() {
    Citizen.invokeNative('0x4C05B42A8D937796');
}
/**
 * Hash: 0x51C7694E140FAE43 | ApiSet: undefined
 */
export function _0x51C7694E140FAE43(p0) {
    return Citizen.invokeNative('0x51C7694E140FAE43', p0);
}
/**
 * Hash: 0x5AADC7BBBB1BCEEB | ApiSet: undefined
 */
export function _0x5AADC7BBBB1BCEEB(p0, p1, p2, p3, p4) {
    Citizen.invokeNative('0x5AADC7BBBB1BCEEB', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x63509DDF102E08E8 | ApiSet: undefined
 */
export function _0x63509DDF102E08E8(trackIndex, p1) {
    Citizen.invokeNative('0x63509DDF102E08E8', trackIndex, p1);
}
/**
 * Hash: 0x615B3B8E73634509 | ApiSet: undefined
 */
export function _0x615B3B8E73634509(trackIndex, p1) {
    Citizen.invokeNative('0x615B3B8E73634509', trackIndex, p1);
}
/**
 * ```
 * Only used in R* Script beat_train_holdup: p1 = 1
 * ```
 * Hash: 0x6355602C02EDC6DF | ApiSet: undefined
 */
export function _0x6355602C02EDC6DF(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x6355602C02EDC6DF', _entity, p1);
}
/**
 * Hash: 0x6703872EC09BC158 | ApiSet: undefined
 */
export function _0x6703872EC09BC158(p0, p1) {
    Citizen.invokeNative('0x6703872EC09BC158', p0, p1);
}
/**
 * Hash: 0x68830738A6BFB370 | ApiSet: undefined
 */
export function _0x68830738A6BFB370(p0, p1) {
    Citizen.invokeNative('0x68830738A6BFB370', p0, p1);
}
/**
 * Hash: 0x6B53F4B811E583D2 | ApiSet: undefined
 */
export function _0x6B53F4B811E583D2(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x6B53F4B811E583D2', _vehicle, toggle);
}
/**
 * ```
 * _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
 * ```
 * Hash: 0x6DE072AC8A95FFC1 | ApiSet: undefined
 */
export function _0x6DE072AC8A95FFC1(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x6DE072AC8A95FFC1', _vehicle, p1);
}
/**
 * Hash: 0x703D4FB366DA4452 | ApiSet: undefined
 */
export function _0x703D4FB366DA4452(p0, p1) {
    Citizen.invokeNative('0x703D4FB366DA4452', p0, p1);
}
/**
 * Hash: 0x6835AFEA10E186F4 | ApiSet: undefined
 */
export function _0x6835AFEA10E186F4(p0, p1) {
    Citizen.invokeNative('0x6835AFEA10E186F4', p0, p1);
}
/**
 * Hash: 0x697DF68F3A761A50 | ApiSet: undefined
 */
export function _0x697DF68F3A761A50(p0) {
    Citizen.invokeNative('0x697DF68F3A761A50', p0);
}
/**
 * Hash: 0x718EB706B6E998A0 | ApiSet: undefined
 */
export function _0x718EB706B6E998A0(trackIndex) {
    Citizen.invokeNative('0x718EB706B6E998A0', trackIndex);
}
/**
 * ```
 * _SET_VEHICLE_WHEELS_*
 * ```
 * Hash: 0x73118A3EE9C9B6DB | ApiSet: undefined
 */
export function _0x73118A3EE9C9B6DB(wagon, p1, p2) {
    const _wagon = wagon instanceof Entity ? wagon.handle() : wagon;
    Citizen.invokeNative('0x73118A3EE9C9B6DB', _wagon, p1, p2);
}
/**
 * Hash: 0x6B34BE961F639E21 | ApiSet: undefined
 */
export function _0x6B34BE961F639E21(trackIndex, p1) {
    Citizen.invokeNative('0x6B34BE961F639E21', trackIndex, p1);
}
/**
 * Hash: 0x750D42C013F64AE7 | ApiSet: undefined
 */
export function _0x750D42C013F64AE7(p0, p1) {
    Citizen.invokeNative('0x750D42C013F64AE7', p0, p1);
}
/**
 * ```
 * Returns trackIndex
 * ```
 * Hash: 0x6C87F49BFA181DB5 | ApiSet: undefined
 */
export function _0x6C87F49BFA181DB5(position) {
    return Citizen.invokeNative('0x6C87F49BFA181DB5', position.x, position.y, position.z);
}
/**
 * Hash: 0x6EA1273D525427F4 | ApiSet: undefined
 */
export function _0x6EA1273D525427F4(p0, p1, p2) {
    Citizen.invokeNative('0x6EA1273D525427F4', p0, p1, p2);
}
/**
 * ```
 * Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
 * ```
 * Hash: 0x762FDC4C19E5A981 | ApiSet: undefined
 */
export function _0x762FDC4C19E5A981(trainCarriage, p1) {
    const _trainCarriage = trainCarriage instanceof Entity ? trainCarriage.handle() : trainCarriage;
    Citizen.invokeNative('0x762FDC4C19E5A981', _trainCarriage, p1);
}
/**
 * Hash: 0x6FD7BDF10304363A | ApiSet: undefined
 */
export function _0x6FD7BDF10304363A(p0, p1) {
    Citizen.invokeNative('0x6FD7BDF10304363A', p0, p1);
}
/**
 * Hash: 0x7408B5C66BA31ADB | ApiSet: undefined
 */
export function _0x7408B5C66BA31ADB(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
    Citizen.invokeNative('0x7408B5C66BA31ADB', p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
}
/**
 * Hash: 0x785639D89F8451AB | ApiSet: undefined
 */
export function _0x785639D89F8451AB(p0, p1) {
    return new Vector3(Citizen.invokeNative('0x785639D89F8451AB', p0, p1));
}
/**
 * Hash: 0x850CE59DEC2028F3 | ApiSet: undefined
 */
export function _0x850CE59DEC2028F3(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x850CE59DEC2028F3', _vehicle, p1);
}
/**
 * Hash: 0x873AAF600CC36DAC | ApiSet: undefined
 */
export function _0x873AAF600CC36DAC(p0) {
    Citizen.invokeNative('0x873AAF600CC36DAC', p0);
}
/**
 * Hash: 0x7840576C50A13DBA | ApiSet: undefined
 */
export function _0x7840576C50A13DBA(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0x7840576C50A13DBA', _train, p1);
}
/**
 * Hash: 0x877EA24EB1614495 | ApiSet: undefined
 */
export function _0x877EA24EB1614495(p0, p1, p2) {
    return Citizen.invokeNative('0x877EA24EB1614495', p0, p1, p2);
}
/**
 * Hash: 0x7BE0746539DEF0C8 | ApiSet: undefined
 */
export function _0x7BE0746539DEF0C8(p0, p1) {
    return Citizen.invokeNative('0x7BE0746539DEF0C8', p0, p1);
}
/**
 * Hash: 0x8379E05871AD24E0 | ApiSet: undefined
 */
export function _0x8379E05871AD24E0() {
    Citizen.invokeNative('0x8379E05871AD24E0');
}
/**
 * Hash: 0x87B974E54C71BA7B | ApiSet: undefined
 */
export function _0x87B974E54C71BA7B(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x87B974E54C71BA7B', _vehicle, p1);
}
/**
 * Hash: 0x8DECD262602548B9 | ApiSet: undefined
 */
export function _0x8DECD262602548B9(p0, p1) {
    Citizen.invokeNative('0x8DECD262602548B9', p0, p1);
}
/**
 * Hash: 0x8878FF3EEE2868A9 | ApiSet: undefined
 */
export function _0x8878FF3EEE2868A9(p0, p1) {
    Citizen.invokeNative('0x8878FF3EEE2868A9', p0, p1);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x9868C0D0134855F7 | ApiSet: undefined
 */
export function _0x9868C0D0134855F7(p0) {
    Citizen.invokeNative('0x9868C0D0134855F7', p0);
}
/**
 * Hash: 0x98A7598C579EE871 | ApiSet: undefined
 */
export function _0x98A7598C579EE871(p0, p1, p2) {
    Citizen.invokeNative('0x98A7598C579EE871', p0, p1, p2);
}
/**
 * Hash: 0x9D12796EF4BF9EA9 | ApiSet: undefined
 */
export function _0x9D12796EF4BF9EA9(p0) {
    Citizen.invokeNative('0x9D12796EF4BF9EA9', p0);
}
/**
 * ```
 * _GET_P - _GET_T*
 * ```
 * Hash: 0x9CC94A948EAF5372 | ApiSet: undefined
 */
export function _0x9CC94A948EAF5372(trackIndex, stationIndex) {
    return Citizen.invokeNative('0x9CC94A948EAF5372', trackIndex, stationIndex);
}
/**
 * Hash: 0xA13028E22564A1BD | ApiSet: undefined
 */
export function _0xA13028E22564A1BD(p0, p1) {
    Citizen.invokeNative('0xA13028E22564A1BD', p0, p1);
}
/**
 * ```
 * Forcing high LOD buoyancy for vehicle: p1 = false
 * _SET_A*
 * ```
 * Hash: 0x9E8711C81AA17876 | ApiSet: undefined
 */
export function _0x9E8711C81AA17876(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x9E8711C81AA17876', _vehicle, p1);
}
/**
 * Hash: 0xA230A5DDE12ED374 | ApiSet: undefined
 */
export function _0xA230A5DDE12ED374(p0) {
    Citizen.invokeNative('0xA230A5DDE12ED374', p0);
}
/**
 * Hash: 0xA7966807953A18EE | ApiSet: undefined
 */
export function _0xA7966807953A18EE(trackIndex, p1) {
    Citizen.invokeNative('0xA7966807953A18EE', trackIndex, p1);
}
/**
 * Hash: 0xA72B1BF3857B94D7 | ApiSet: undefined
 */
export function _0xA72B1BF3857B94D7(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0xA72B1BF3857B94D7', _train, p1);
}
/**
 * Hash: 0xA9E185D498B9AC67 | ApiSet: undefined
 */
export function _0xA9E185D498B9AC67(p0, p1) {
    return Citizen.invokeNative('0xA9E185D498B9AC67', p0, p1);
}
/**
 * ```
 * _SET_TRAIN_*
 * ```
 * Hash: 0xAE7E66A61E7C17A5 | ApiSet: undefined
 */
export function _0xAE7E66A61E7C17A5(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0xAE7E66A61E7C17A5', _train, p1);
}
/**
 * Hash: 0xB42C87521D1BDD2F | ApiSet: undefined
 */
export function _0xB42C87521D1BDD2F(vehicle, position) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xB42C87521D1BDD2F', _vehicle, position.x, position.y, position.z);
}
/**
 * Hash: 0xB4241AD8F5AEE9ED | ApiSet: undefined
 */
export function _0xB4241AD8F5AEE9ED(trackIndex) {
    return Citizen.invokeNative('0xB4241AD8F5AEE9ED', trackIndex);
}
/**
 * Hash: 0xB961DD799A837BD7 | ApiSet: undefined
 */
export function _0xB961DD799A837BD7() {
    Citizen.invokeNative('0xB961DD799A837BD7');
}
/**
 * Hash: 0xC2E62678D602853C | ApiSet: undefined
 */
export function _0xC2E62678D602853C(p0, p1, p2, p3, p4, p5, p6) {
    Citizen.invokeNative('0xC2E62678D602853C', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * ```
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 * ```
 * Hash: 0xC325A6BAA62CF8A2 | ApiSet: undefined
 */
export function _0xC325A6BAA62CF8A2(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xC325A6BAA62CF8A2', _vehicle, p1);
}
/**
 * Hash: 0xC351394B932A6A50 | ApiSet: undefined
 */
export function _0xC351394B932A6A50(p0) {
    Citizen.invokeNative('0xC351394B932A6A50', p0);
}
/**
 * Hash: 0xC399CC89FBA05DA0 | ApiSet: undefined
 */
export function _0xC399CC89FBA05DA0(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xC399CC89FBA05DA0', _vehicle, p1);
}
/**
 * ```
 * _SET_DRAFT_VEHICLE_(STOP?)*
 * ```
 * Hash: 0xC4A2C11FC0D41916 | ApiSet: undefined
 */
export function _0xC4A2C11FC0D41916(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xC4A2C11FC0D41916', _vehicle, p1);
}
/**
 * Hash: 0xCACAB2B123BBDBD6 | ApiSet: undefined
 */
export function _0xCACAB2B123BBDBD6(p0, p1, p2) {
    return Citizen.invokeNative('0xCACAB2B123BBDBD6', p0, p1, p2);
}
/**
 * Hash: 0xCBC7B6F9A56B79F6 | ApiSet: undefined
 */
export function _0xCBC7B6F9A56B79F6(p0, p1) {
    Citizen.invokeNative('0xCBC7B6F9A56B79F6', p0, p1);
}
/**
 * Hash: 0xCEB1F1EED484A5B4 | ApiSet: undefined
 */
export function _0xCEB1F1EED484A5B4(p0, p1) {
    Citizen.invokeNative('0xCEB1F1EED484A5B4', p0, p1);
}
/**
 * Hash: 0xCAFF2C9747103C02 | ApiSet: undefined
 */
export function _0xCAFF2C9747103C02(p0, p1, p2) {
    return Citizen.invokeNative('0xCAFF2C9747103C02', p0, p1, p2);
}
/**
 * ```
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 * ```
 * Hash: 0xCBF88256E44D5D39 | ApiSet: undefined
 */
export function _0xCBF88256E44D5D39(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xCBF88256E44D5D39', _vehicle, p1);
}
/**
 * Hash: 0xCF9DA72002FC16BF | ApiSet: undefined
 */
export function _0xCF9DA72002FC16BF(p0, p1, p2) {
    Citizen.invokeNative('0xCF9DA72002FC16BF', p0, p1, p2);
}
/**
 * Hash: 0xD0AABE5B9F8FA589 | ApiSet: undefined
 */
export function _0xD0AABE5B9F8FA589(trackIndex, p1) {
    Citizen.invokeNative('0xD0AABE5B9F8FA589', trackIndex, p1);
}
/**
 * Hash: 0xCF342503CA4C8DF1 | ApiSet: undefined
 */
export function _0xCF342503CA4C8DF1(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xCF342503CA4C8DF1', _vehicle, p1);
}
/**
 * Hash: 0xD0116DF21E6C7B36 | ApiSet: undefined
 */
export function _0xD0116DF21E6C7B36(p0, p1) {
    return Citizen.invokeNative('0xD0116DF21E6C7B36', p0, p1);
}
/**
 * Hash: 0xD0BA1853D76683C8 | ApiSet: undefined
 */
export function _0xD0BA1853D76683C8(trackIndex, position, p4) {
    Citizen.invokeNative('0xD0BA1853D76683C8', trackIndex, position.x, position.y, position.z, p4);
}
/**
 * Hash: 0xD1EFA8D68BF5D63D | ApiSet: undefined
 */
export function _0xD1EFA8D68BF5D63D(p0, p1, p2, p3) {
    Citizen.invokeNative('0xD1EFA8D68BF5D63D', p0, p1, p2, p3);
}
/**
 * Hash: 0xD1DF5E54F4ACBE1A | ApiSet: undefined
 */
export function _0xD1DF5E54F4ACBE1A(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0xD1DF5E54F4ACBE1A', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0xD21A3D421E7F09F7 | ApiSet: undefined
 */
export function _0xD21A3D421E7F09F7(p0, p1) {
    Citizen.invokeNative('0xD21A3D421E7F09F7', p0, p1);
}
/**
 * Hash: 0xD4907EF4334C7602 | ApiSet: undefined
 */
export function _0xD4907EF4334C7602(p0, p1) {
    Citizen.invokeNative('0xD4907EF4334C7602', p0, p1);
}
/**
 * Hash: 0xD826690B5CF3BEFF | ApiSet: undefined
 */
export function _0xD826690B5CF3BEFF(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xD826690B5CF3BEFF', _vehicle, p1);
}
/**
 * Hash: 0xDC0556D0F484ECAA | ApiSet: undefined
 */
export function _0xDC0556D0F484ECAA(p0) {
    Citizen.invokeNative('0xDC0556D0F484ECAA', p0);
}
/**
 * Hash: 0xD9BF3ED8EFB67EA3 | ApiSet: undefined
 */
export function _0xD9BF3ED8EFB67EA3(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0xD9BF3ED8EFB67EA3', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0xDC69F6913CCA0B99 | ApiSet: undefined
 */
export function _0xDC69F6913CCA0B99(p0, p1) {
    Citizen.invokeNative('0xDC69F6913CCA0B99', p0, p1);
}
/**
 * Hash: 0xDE8C5B9F65017FA1 | ApiSet: undefined
 */
export function _0xDE8C5B9F65017FA1(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    return Citizen.invokeNative('0xDE8C5B9F65017FA1', _train);
}
/**
 * Hash: 0xE12F5ED49F44D40D | ApiSet: undefined
 */
export function _0xE12F5ED49F44D40D(p0) {
    Citizen.invokeNative('0xE12F5ED49F44D40D', p0);
}
/**
 * Hash: 0xDD100CE1EBBF37E3 | ApiSet: undefined
 */
export function _0xDD100CE1EBBF37E3(p0, p1) {
    Citizen.invokeNative('0xDD100CE1EBBF37E3', p0, p1);
}
/**
 * Hash: 0xE6BD7DD3FD474415 | ApiSet: undefined
 */
export function _0xE6BD7DD3FD474415(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0xE6BD7DD3FD474415', _train, p1);
}
/**
 * Hash: 0xE682002DB1F30669 | ApiSet: undefined
 */
export function _0xE682002DB1F30669(p0) {
    Citizen.invokeNative('0xE682002DB1F30669', p0);
}
/**
 * Hash: 0xE777DDF3E78397E8 | ApiSet: undefined
 */
export function _0xE777DDF3E78397E8(p0) {
    return Citizen.invokeNative('0xE777DDF3E78397E8', p0);
}
/**
 * ```
 * Only used in R* SP Script rcm_abigail31: p1 = 5
 * _GET_VEHICLE_T* - _GET_VO*
 * ```
 * Hash: 0xE1C0F8781BF130C2 | ApiSet: undefined
 */
export function _0xE1C0F8781BF130C2(wagon, p1) {
    const _wagon = wagon instanceof Entity ? wagon.handle() : wagon;
    return Citizen.invokeNative('0xE1C0F8781BF130C2', _wagon, p1);
}
/**
 * Hash: 0xE78993FF9022C064 | ApiSet: undefined
 */
export function _0xE78993FF9022C064(p0) {
    Citizen.invokeNative('0xE78993FF9022C064', p0);
}
/**
 * ```
 * _IS_* (related to CREATE_MISSION_TRAIN)
 * ```
 * Hash: 0xF05DFAF1ADFEF2CD | ApiSet: undefined
 */
export function _0xF05DFAF1ADFEF2CD(trainConfig, position, direction, p5) {
    if (typeof trainConfig === 'string')
        trainConfig = this.getHashKey(trainConfig);
    return Citizen.invokeNative('0xF05DFAF1ADFEF2CD', trainConfig, position.x, position.y, position.z, direction, p5);
}
/**
 * Hash: 0xF57DB8E83DCD8349 | ApiSet: undefined
 */
export function _0xF57DB8E83DCD8349(p0) {
    return Citizen.invokeNative('0xF57DB8E83DCD8349', p0);
}
/**
 * ```
 * _SET_TRAIN_*
 * ```
 * Hash: 0xEF28A614B4B264B8 | ApiSet: undefined
 */
export function _0xEF28A614B4B264B8(train, p1) {
    const _train = train instanceof Entity ? train.handle() : train;
    Citizen.invokeNative('0xEF28A614B4B264B8', _train, p1);
}
/**
 * Hash: 0xF5EA41C1408695FB | ApiSet: undefined
 */
export function _0xF5EA41C1408695FB(p0, p1, p2, p3) {
    return Citizen.invokeNative('0xF5EA41C1408695FB', p0, p1, p2, p3);
}
/**
 * Hash: 0xF8F7DA13CFBD4532 | ApiSet: undefined
 */
export function _0xF8F7DA13CFBD4532(trackIndex, p1) {
    Citizen.invokeNative('0xF8F7DA13CFBD4532', trackIndex, p1);
}
/**
 * Hash: 0xF6E3D38869D0F7AD | ApiSet: undefined
 */
export function _0xF6E3D38869D0F7AD(p0) {
    Citizen.invokeNative('0xF6E3D38869D0F7AD', p0);
}
/**
 * ```
 * _SET_DRAFT_VEHICLE_*
 * ```
 * Hash: 0xFC4F15A7DDDC47B1 | ApiSet: undefined
 */
export function _0xFC4F15A7DDDC47B1(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0xFC4F15A7DDDC47B1', _vehicle, p1);
}
/**
 * Hash: 0xFF2B1F59FB892F14 | ApiSet: undefined
 */
export function _0xFF2B1F59FB892F14(p0) {
    Citizen.invokeNative('0xFF2B1F59FB892F14', p0);
}
/**
 * Hash: 0xFFFE15B433300B8C | ApiSet: undefined
 */
export function _0xFFFE15B433300B8C(p0, p1, p2) {
    Citizen.invokeNative('0xFFFE15B433300B8C', p0, p1, p2);
}
/**
 * Hash: 0xFE9AB3354ACE6C9C | ApiSet: undefined
 */
export function removeRoadNodeSpeedZone(speedzone) {
    return RemoveRoadNodeSpeedZone(speedzone);
}
/**
 * Hash: 0x888A4E675B38F5AD | ApiSet: undefined
 */
export function removeVehicleAsset(vehicleAsset) {
    if (typeof vehicleAsset === 'string')
        vehicleAsset = this.getHashKey(vehicleAsset);
    RemoveVehicleAsset(vehicleAsset);
}
/**
 * ```
 * See REQUEST_VEHICLE_RECORDING
 * ```
 * Hash: 0x139E35755418F6AA | ApiSet: undefined
 */
export function removeVehicleRecording(p0) {
    return RemoveVehicleRecording(p0);
}
/**
 * Hash: 0x81A15811460FAB3A | ApiSet: undefined
 */
export function requestVehicleAsset(vehicleHash, vehicleAsset) {
    if (typeof vehicleHash === 'string')
        vehicleHash = this.getHashKey(vehicleHash);
    RequestVehicleAsset(vehicleHash, vehicleAsset);
}
/**
 * ```
 * windowIndex:
 * 0 = Front Right Window
 * 1 = Front Left Window
 * 2 = Back Right Window
 * 3 = Back Left Window
 * ```
 * Hash: 0x745F15A215F2DDF1 | ApiSet: undefined
 */
export function removeVehicleWindow(vehicle, windowIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    RemoveVehicleWindow(_vehicle, windowIndex);
}
/**
 * Hash: 0xC619A44639BC0CB4 | ApiSet: undefined
 */
export function removeVehiclesFromGeneratorsInArea(p0, p1, p2, p3, p4, p5) {
    RemoveVehiclesFromGeneratorsInArea(p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0x84B81EF78BD22357 | ApiSet: undefined
 */
export function requestVehicleHighDetailModel(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    RequestVehicleHighDetailModel(_vehicle);
}
/**
 * ```
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
 * (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 * ```
 * Hash: 0xC474CF16EDA45DC9 | ApiSet: undefined
 */
export function requestVehicleRecording(recording, script) {
    RequestVehicleRecording(recording, script);
}
/**
 * Hash: 0x138398153824E332 | ApiSet: undefined
 */
export function setAllJunctionsCleared() {
    SetAllJunctionsCleared();
}
/**
 * Hash: 0x3D596E6E88A02C24 | ApiSet: undefined
 */
export function setAllVehicleGeneratorsActive() {
    SetAllVehicleGeneratorsActive();
}
/**
 * Hash: 0x23298B468F7D88B6 | ApiSet: undefined
 */
export function resetVehicleStuckTimer(vehicle, nullAttributes) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ResetVehicleStuckTimer(_vehicle, nullAttributes);
}
/**
 * Hash: 0x8D3230A0ED7DE39F | ApiSet: undefined
 */
export function setAllowVehicleExplodesOnContact(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetAllowVehicleExplodesOnContact(_vehicle, p1);
}
/**
 * Hash: 0xBBB134FB9D50C0CC | ApiSet: undefined
 */
export function setAllVehicleGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, p6, p7) {
    SetAllVehicleGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, p6, p7);
}
/**
 * Hash: 0x424FFCB9F0D2D4B5 | ApiSet: undefined
 */
export function setAllVehicleGeneratorsDisabledForVolume(volume, toggle) {
    SetAllVehicleGeneratorsDisabledForVolume(volume, toggle);
}
/**
 * ```
 * Params: 1.0f will make balloon hover
 * ```
 * Hash: 0x7C9E45A4CED2E8DA | ApiSet: undefined
 */
export function setBalloonHoverState(balloon, p1) {
    const _balloon = balloon instanceof Entity ? balloon.handle() : balloon;
    SetBalloonHoverState(_balloon, p1);
}
/**
 * ```
 * Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
 * Screenshot: https://imgur.com/a/nsomtiv
 * ```
 * Hash: 0x31F343383F19C987 | ApiSet: undefined
 */
export function setBatchTarpHeight(vehicle, height, immediately) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBatchTarpHeight(_vehicle, height, immediately);
}
/**
 * Hash: 0xAEAB044F05B92659 | ApiSet: undefined
 */
export function setBoatAnchor(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBoatAnchor(_vehicle, toggle);
}
/**
 * ```
 * Value: mostly 99999.9f
 * ```
 * Hash: 0xE3261532550D6A9F | ApiSet: undefined
 */
export function setBoatLowLodAnchorDistance(vehicle, value) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBoatLowLodAnchorDistance(_vehicle, value);
}
/**
 * Hash: 0x286771F3059A37A7 | ApiSet: undefined
 */
export function setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle, p1, p2) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBoatRemainsAnchoredWhilePlayerIsDriver(_vehicle, p1, p2);
}
/**
 * Hash: 0x62A6D317A011EA1D | ApiSet: undefined
 */
export function setBoatSinksWhenWrecked(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBoatSinksWhenWrecked(_vehicle, toggle);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xD4288603E8766FF7 | ApiSet: undefined
 */
export function setDisableRandomTrainsThisFrame(toggle) {
    SetDisableRandomTrainsThisFrame(toggle);
}
/**
 * Hash: 0xBC4735F48CD983EF | ApiSet: undefined
 */
export function setBreakableVehicleLocksUnbreakable(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetBreakableVehicleLocksUnbreakable(_vehicle, toggle);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x1716D787D9B94202 | ApiSet: undefined
 */
export function setDisableSuperdummy(vehicle, disable) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDisableSuperdummy(_vehicle, disable);
}
/**
 * Hash: 0x5795FBE7A2001C14 | ApiSet: undefined
 */
export function setDisableVehiclePetrolTankDamage(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDisableVehiclePetrolTankDamage(_vehicle, toggle);
}
/**
 * Hash: 0xD146EE5F2B06B95E | ApiSet: undefined
 */
export function setDisableVehicleEngineFires(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDisableVehicleEngineFires(_vehicle, p1);
}
/**
 * Hash: 0xB70986AB19B04AFF | ApiSet: undefined
 */
export function setDisableVehiclePetrolTankFires(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDisableVehiclePetrolTankFires(_vehicle, toggle);
}
/**
 * Hash: 0x63DC1F22C903B709 | ApiSet: undefined
 */
export function setDontAllowPlayerToEnterVehicleIfLockedForPlayer(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDontAllowPlayerToEnterVehicleIfLockedForPlayer(_vehicle, p1);
}
/**
 * Hash: 0x87344305778E5415 | ApiSet: undefined
 */
export function setDraftVehicleAllowDraftAnimalAutoCreation(vehicle, allow) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDraftVehicleAllowDraftAnimalAutoCreation(_vehicle, allow);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0x081FB9D6422F804C | ApiSet: undefined
 */
export function setDoorAllowedToBeBrokenOff(vehicle, doorId, isBreakable) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDoorAllowedToBeBrokenOff(_vehicle, doorId, isBreakable);
}
/**
 * Hash: 0x8C6D9A399126C194 | ApiSet: undefined
 */
export function setDraftAnimalRandomSeed(vehicle, seed) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDraftAnimalRandomSeed(_vehicle, seed);
}
/**
 * Hash: 0x73F1E4F6DF26FE30 | ApiSet: undefined
 */
export function setEnableVehicleSlipstreaming(p0) {
    SetEnableVehicleSlipstreaming(p0);
}
/**
 * Hash: 0x6090A031C69F384E | ApiSet: undefined
 */
export function setDraftVehicleAnimalsCanDetach(draft, canDetach) {
    const _draft = draft instanceof Entity ? draft.handle() : draft;
    SetDraftVehicleAnimalsCanDetach(_draft, canDetach);
}
/**
 * Hash: 0x226C6A4E3346D288 | ApiSet: undefined
 */
export function setDraftVehicleYokeCanBreak(draft, canBreak) {
    const _draft = draft instanceof Entity ? draft.handle() : draft;
    SetDraftVehicleYokeCanBreak(_draft, canBreak);
}
/**
 * ```
 * Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
 * ```
 * Hash: 0xF489F94BFEE12BB0 | ApiSet: undefined
 */
export function setForceCoachRobberyLoot(vehicle, coachrobberyLoot) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof coachrobberyLoot === 'string')
        coachrobberyLoot = this.getHashKey(coachrobberyLoot);
    SetForceCoachRobberyLoot(_vehicle, coachrobberyLoot);
}
/**
 * Hash: 0x0C3F0F7F92CA847C | ApiSet: undefined
 */
export function setDraftVehicleDesiredSpeed(vehicle, speed) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetDraftVehicleDesiredSpeed(_vehicle, speed);
}
/**
 * Hash: 0x373CB1283308BD7B | ApiSet: undefined
 */
export function setForceHdVehicle(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetForceHdVehicle(_vehicle, toggle);
}
/**
 * Hash: 0x1098CDA477890165 | ApiSet: undefined
 */
export function setForceHighLodVehicle(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetForceHighLodVehicle(_vehicle, p1);
}
/**
 * Hash: 0xF5FFB08976911B50 | ApiSet: undefined
 */
export function setHorseTrafficGroupingDistribution(p0, p1, p2, p3) {
    SetHorseTrafficGroupingDistribution(p0, p1, p2, p3);
}
/**
 * ```
 * Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
 * ```
 * Hash: 0x75B49ACD73617437 | ApiSet: undefined
 */
export function setForceLowLodAnchorMode(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetForceLowLodAnchorMode(_vehicle, p1);
}
/**
 * Hash: 0x7632755962AB9922 | ApiSet: undefined
 */
export function setMissionTrainCoords(train, position) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetMissionTrainCoords(_train, position.x, position.y, position.z);
}
/**
 * Hash: 0x7F8E2B131E1DCA6C | ApiSet: undefined
 */
export function setForceVehicleEngineDamageByBullet(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetForceVehicleEngineDamageByBullet(_vehicle, toggle);
}
/**
 * ```
 * Notice: BOOL p4 was wrongly named takePassengers (?)
 * Can be used to rotate the train by setting the BOOL direction
 * ```
 * Hash: 0xC9EA26893C9E4024 | ApiSet: undefined
 */
export function setMissionTrainWarpToCoords(train, position, direction) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetMissionTrainWarpToCoords(_train, position.x, position.y, position.z, direction);
}
/**
 * ```
 * flags = 0: DEFAULT; 1: KEEP_OLD_SPEED
 * ```
 * Hash: 0xBBE7648349B49BE8 | ApiSet: undefined
 */
export function setMissionTrainAsNoLongerNeeded(flags) {
    return SetMissionTrainAsNoLongerNeeded(flags);
}
/**
 * Hash: 0xFEDFA97638D61D4A | ApiSet: undefined
 */
export function setParkedVehicleDensityMultiplierThisFrame(multiplier) {
    SetParkedVehicleDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0xD78084EED4CD94C6 | ApiSet: undefined
 */
export function setPlaybackSpeed(vehicle, speed) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetPlaybackSpeed(_vehicle, speed);
}
/**
 * Hash: 0x838C216C2B05A009 | ApiSet: undefined
 */
export function setPedOwnsVehicle(ped, vehicle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetPedOwnsVehicle(_ped, _vehicle);
}
/**
 * Hash: 0xF44D446D4E36DB87 | ApiSet: undefined
 */
export function setRandomBoats(toggle) {
    SetRandomBoats(toggle);
}
/**
 * Hash: 0x1F91D44490E1EA0C | ApiSet: undefined
 */
export function setRandomVehicleDensityMultiplierThisFrame(multiplier) {
    SetRandomVehicleDensityMultiplierThisFrame(multiplier);
}
/**
 * Hash: 0x01021EB2E96B793C | ApiSet: undefined
 */
export function setTrainCruiseSpeed(train, speed) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainCruiseSpeed(_train, speed);
}
/**
 * ```
 * Restarts the train
 * ```
 * Hash: 0x787E43477746876F | ApiSet: undefined
 */
export function setTrainLeaveStation(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainLeaveStation(_train);
}
/**
 * Hash: 0x1156C6EE7E82A98A | ApiSet: undefined
 */
export function setRandomTrains(toggle) {
    SetRandomTrains(toggle);
}
/**
 * Hash: 0x3660BCAB3A6BB734 | ApiSet: undefined
 */
export function setTrainHalt(train) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainHalt(_train);
}
/**
 * Hash: 0xDFBA6BBFF7CCAFBB | ApiSet: undefined
 */
export function setTrainSpeed(train, speed) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainSpeed(_train, speed);
}
/**
 * ```
 * Maximum possible speed is 30.0 (108 km/h)
 * ```
 * Hash: 0x9F29999DFDF2AEB8 | ApiSet: undefined
 */
export function setTrainMaxSpeed(train, speed) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainMaxSpeed(_train, speed);
}
/**
 * Hash: 0x8EC47DD4300BF063 | ApiSet: undefined
 */
export function setTrainOffsetFromStation(train, offset) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainOffsetFromStation(_train, offset);
}
/**
 * Hash: 0x4182C037AA1F0091 | ApiSet: undefined
 */
export function setTrainStopsForStations(train, toggle) {
    const _train = train instanceof Entity ? train.handle() : train;
    SetTrainStopsForStations(_train, toggle);
}
/**
 * ```
 * trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
 * ```
 * Hash: 0xE6C5E2125EB210C1 | ApiSet: undefined
 */
export function setTrainTrackJunctionSwitch(trainTrack, junctionIndex, enabled) {
    if (typeof trainTrack === 'string')
        trainTrack = this.getHashKey(trainTrack);
    SetTrainTrackJunctionSwitch(trainTrack, junctionIndex, enabled);
}
/**
 * ```
 * Makes the vehicle accept no passengers.
 * ```
 * Hash: 0xECB9E9BC887E8060 | ApiSet: undefined
 */
export function setVehicleAllowNoPassengersLockon(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleAllowNoPassengersLockon(_vehicle, toggle);
}
/**
 * Hash: 0x501354951CD942DE | ApiSet: undefined
 */
export function setVehicleAutomaticallyAttaches(vehicle, p1, p2) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return SetVehicleAutomaticallyAttaches(_vehicle, p1, p2);
}
/**
 * ```
 * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
 * ```
 * Hash: 0x0893DAFBFA67110E | ApiSet: undefined
 */
export function setVehicleAiCanUseExclusiveSeats(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleAiCanUseExclusiveSeats(_vehicle, toggle);
}
/**
 * Hash: 0x1240E8596A8308B9 | ApiSet: undefined
 */
export function setVehicleAllowHomingMissleLockon(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleAllowHomingMissleLockon(_vehicle, toggle);
}
/**
 * Hash: 0xCEC4CA2CAB8FA98C | ApiSet: undefined
 */
export function setVehicleBrokenPartsDontAffectAiHandling(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleBrokenPartsDontAffectAiHandling(_vehicle, p1);
}
/**
 * Hash: 0x55CCAAE4F28C67A0 | ApiSet: undefined
 */
export function setVehicleBodyHealth(vehicle, value) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleBodyHealth(_vehicle, value);
}
/**
 * Hash: 0xC5ED9D59B4646611 | ApiSet: undefined
 */
export function setVehicleCanBreak(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleCanBreak(_vehicle, toggle);
}
/**
 * Hash: 0x05254BA0B44ADC16 | ApiSet: undefined
 */
export function setVehicleCanBeTargetted(vehicle, state) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleCanBeTargetted(_vehicle, state);
}
/**
 * Hash: 0x4BF8131AE811541C | ApiSet: undefined
 */
export function setVehicleCanBeVisiblyDamaged(vehicle, state) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleCanBeVisiblyDamaged(_vehicle, state);
}
/**
 * Hash: 0xE42952510F84AFDB | ApiSet: undefined
 */
export function setVehicleCanBeUsedByFleeingPeds(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleCanBeUsedByFleeingPeds(_vehicle, toggle);
}
/**
 * Hash: 0x8E5DA070BAD3279E | ApiSet: undefined
 */
export function setVehicleDeterioration(vehicle, amount, p2, p3) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDeterioration(_vehicle, amount, p2, p3);
}
/**
 * Hash: 0x065D03A9D6B2C6B5 | ApiSet: undefined
 */
export function setVehicleCanEjectPassengersIfLocked(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleCanEjectPassengersIfLocked(_vehicle, p1);
}
/**
 * ```
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 * Radius of effect damage applied in a sphere at impact location
 * ```
 * Hash: 0x1D7678F81452BB41 | ApiSet: undefined
 */
export function setVehicleDamage(vehicle, xOffset, yOffset, zOffset, damage, radius, p6) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDamage(_vehicle, xOffset, yOffset, zOffset, damage, radius, p6);
}
/**
 * Hash: 0x758C3460EE915D0A | ApiSet: undefined
 */
export function setVehicleDirtLevel(vehicle, dirtLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDirtLevel(_vehicle, dirtLevel);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0x9666CF20A1C6D780 | ApiSet: undefined
 */
export function setVehicleDoorBroken(vehicle, doorId, deleteDoor) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorBroken(_vehicle, doorId, deleteDoor);
}
/**
 * Hash: 0x606374EBFC27B133 | ApiSet: undefined
 */
export function setVehicleDensityMultiplierThisFrame(multiplier) {
    SetVehicleDensityMultiplierThisFrame(multiplier);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0xD57F10EBBA814ECF | ApiSet: undefined
 */
export function setVehicleDoorControl(vehicle, doorId, speed, angle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorControl(_vehicle, doorId, speed, angle);
}
/**
 * ```
 * dirtLevel: 0.0 - 1.0
 * ```
 * Hash: 0xBAE0EEDF93F05EAA | ApiSet: undefined
 */
export function setVehicleDirtLevel2(vehicle, dirtLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDirtLevel2(_vehicle, dirtLevel);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0x06F8A202EB312A3C | ApiSet: undefined
 */
export function setVehicleDoorLatched(vehicle, doorId, p2, p3, p4) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorLatched(_vehicle, doorId, p2, p3, p4);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * Can also be used on trains and its wagons
 * ```
 * Hash: 0x550CE392A4672412 | ApiSet: undefined
 */
export function setVehicleDoorOpen(vehicle, doorId, loose, openInstantly) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorOpen(_vehicle, doorId, loose, openInstantly);
}
/**
 * Hash: 0x2381977DA948F8DC | ApiSet: undefined
 */
export function setVehicleDoorsLockedForAllPlayers(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorsLockedForAllPlayers(_vehicle, toggle);
}
/**
 * Hash: 0x359A8EA1FB8D6F0F | ApiSet: undefined
 */
export function setVehicleDoorsLockedForPlayer(vehicle, player, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _player = player instanceof Entity ? player.remoteId() : player;
    SetVehicleDoorsLockedForPlayer(_vehicle, _player, toggle);
}
/**
 * ```
 * doorId: enum eDoorId
 * {
 * VEH_EXT_DOOR_INVALID_ID = -1,
 * VEH_EXT_DOOR_DSIDE_F,
 * VEH_EXT_DOOR_DSIDE_M,
 * VEH_EXT_DOOR_DSIDE_M1,
 * VEH_EXT_DOOR_DSIDE_M2,
 * VEH_EXT_DOOR_DSIDE_R,
 * VEH_EXT_DOOR_PSIDE_F,
 * VEH_EXT_DOOR_PSIDE_M,
 * VEH_EXT_DOOR_PSIDE_M1,
 * VEH_EXT_DOOR_PSIDE_M2,
 * VEH_EXT_DOOR_PSIDE_R,
 * VEH_EXT_BONNET,
 * VEH_EXT_BOOT
 * };
 * ```
 * Hash: 0x6A3C24B91FD0EA09 | ApiSet: undefined
 */
export function setVehicleDoorShut(vehicle, doorId, closeInstantly) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorShut(_vehicle, doorId, closeInstantly);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x362CEDD2A41E0747 | ApiSet: undefined
 */
export function setVehicleDoorsToOpenAtAnyDistance(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorsToOpenAtAnyDistance(_vehicle, toggle);
}
/**
 * Hash: 0x96F78A6A075D55D9 | ApiSet: undefined
 */
export function setVehicleDoorsLocked(vehicle, doorLockStatus) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorsLocked(_vehicle, doorLockStatus);
}
/**
 * Hash: 0xE712BC978770F105 | ApiSet: undefined
 */
export function setVehicleDoorsLockedForTeam(vehicle, team, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorsLockedForTeam(_vehicle, team, toggle);
}
/**
 * Hash: 0x48E4C137A71C2688 | ApiSet: undefined
 */
export function setVehicleEngineCanDegrade(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleEngineCanDegrade(_vehicle, toggle);
}
/**
 * ```
 * Closes all doors of a vehicle:
 * ```
 * Hash: 0xA4FFCD645B11F25A | ApiSet: undefined
 */
export function setVehicleDoorsShut(vehicle, closeInstantly) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleDoorsShut(_vehicle, closeInstantly);
}
/**
 * ```
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 * -------------------------
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 * ```
 * Hash: 0x8BDC5B998B4654EF | ApiSet: undefined
 */
export function setVehicleEngineHealth(vehicle, health) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleEngineHealth(_vehicle, health);
}
/**
 * ```
 * Starts or stops the engine on the specified vehicle.
 * vehicle: The vehicle to start or stop the engine on.
 * value: true to turn the vehicle on; false to turn it off.
 * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
 * ```
 * Hash: 0xB64CFA14CB9A2E78 | ApiSet: undefined
 */
export function setVehicleEngineOn(vehicle, value, instantly) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleEngineOn(_vehicle, value, instantly);
}
/**
 * ```
 * index: 0 - 1
 * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
 * ```
 * Hash: 0xC6B9BF123B9463B6 | ApiSet: undefined
 */
export function setVehicleExclusiveDriver(vehicle, ped, index) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetVehicleExclusiveDriver(_vehicle, _ped, index);
}
/**
 * ```
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 * ```
 * Hash: 0xA402939C6761E1A3 | ApiSet: undefined
 */
export function setVehicleExplodesOnHighExplosionDamage(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleExplodesOnHighExplosionDamage(_vehicle, toggle);
}
/**
 * ```
 * This fixes a vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 * ```
 * Hash: 0x79811282A9D1AE56 | ApiSet: undefined
 */
export function setVehicleFixed(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleFixed(_vehicle);
}
/**
 * Hash: 0xF9F92AF49F12F6E7 | ApiSet: undefined
 */
export function setVehicleForwardSpeed(vehicle, speed) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleForwardSpeed(_vehicle, speed);
}
/**
 * ```
 * Note: only some vehicle have extras
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
 * ```
 * Hash: 0xBB6F89150BC9D16B | ApiSet: undefined
 */
export function setVehicleExtra(vehicle, extraId, disable) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleExtra(_vehicle, extraId, disable);
}
/**
 * Hash: 0x91BE51AEC4E99710 | ApiSet: undefined
 */
export function setVehicleHandbrake(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleHandbrake(_vehicle, toggle);
}
/**
 * Hash: 0xBB5A3FA8ED3979C5 | ApiSet: undefined
 */
export function setVehicleHasBeenOwnedByPlayer(vehicle, owned) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleHasBeenOwnedByPlayer(_vehicle, owned);
}
/**
 * Hash: 0xC903855E028A05F2 | ApiSet: undefined
 */
export function setVehicleHasUnbreakableLights(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleHasUnbreakableLights(_vehicle, p1);
}
/**
 * ```
 * if true, axles won't bend.
 * ```
 * Hash: 0x252253C8A45AA1FC | ApiSet: undefined
 */
export function setVehicleHasStrongAxles(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleHasStrongAxles(_vehicle, toggle);
}
/**
 * ```
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * ```
 * Hash: 0xA9F1D75195CC40F6 | ApiSet: undefined
 */
export function setVehicleIndividualDoorsLocked(vehicle, doorId, doorLockStatus) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleIndividualDoorsLocked(_vehicle, doorId, doorLockStatus);
}
/**
 * Hash: 0xC1842F40FD501DA2 | ApiSet: undefined
 */
export function setVehicleInfluencesWantedLevel(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleInfluencesWantedLevel(_vehicle, toggle);
}
/**
 * Hash: 0x4EA71B4C9DB3C3F1 | ApiSet: undefined
 */
export function setVehicleInactiveDuringPlayback(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleInactiveDuringPlayback(_vehicle, toggle);
}
/**
 * Hash: 0xCE1531927AD6C9F8 | ApiSet: undefined
 */
export function setVehicleIsInHurry(vehicle, enabled) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleIsInHurry(_vehicle, enabled);
}
/**
 * ```
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 * ```
 * Hash: 0x54800D386C5825E5 | ApiSet: undefined
 */
export function setVehicleIsConsideredByPlayer(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleIsConsideredByPlayer(_vehicle, toggle);
}
/**
 * Hash: 0x6C32FC81DFF25C9A | ApiSet: undefined
 */
export function setVehicleIsStolen(vehicle, isStolen) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleIsStolen(_vehicle, isStolen);
}
/**
 * Hash: 0x1549BA7FE83A2383 | ApiSet: undefined
 */
export function setVehicleKeepEngineOnWhenAbandoned(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleKeepEngineOnWhenAbandoned(_vehicle, toggle);
}
/**
 * ```
 * Sets the vehicle's lights state.
 * ```
 * Hash: 0x629F0A0E952CAE7D | ApiSet: undefined
 */
export function setVehicleLights(vehicle, state) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleLights(_vehicle, state);
}
/**
 * ```
 * Ranges from -1 to 2? (internal type is int8)
 * https://imgur.com/a/bPzHcft
 * ```
 * Hash: 0x3FA7D7D1E0EA809E | ApiSet: undefined
 */
export function setVehicleLodLevel(vehicle, lodLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleLodLevel(_vehicle, lodLevel);
}
/**
 * Hash: 0x5F5E2B1B9EAECC0F | ApiSet: undefined
 */
export function setVehicleLodMultiplier(vehicle, multiplier) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleLodMultiplier(_vehicle, multiplier);
}
/**
 * ```
 * _SET_VEHICLE_LI*
 * ```
 * Hash: 0x8F75941C86EEBFCA | ApiSet: undefined
 */
export function setVehicleLimitSpeedWhenPlayerInactive(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleLimitSpeedWhenPlayerInactive(_vehicle, p1);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
 * ```
 * Hash: 0xF89D82A0582E46ED | ApiSet: undefined
 */
export function setVehicleLivery(vehicle, liveryIndex) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleLivery(_vehicle, liveryIndex);
}
/**
 * ```
 * mudLevel: 0.0 - 1.0
 * ```
 * Hash: 0x4D15E49764CB328A | ApiSet: undefined
 */
export function setVehicleMudLevel(vehicle, mudLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleMudLevel(_vehicle, mudLevel);
}
/**
 * Hash: 0x7549B9E841940695 | ApiSet: undefined
 */
export function setVehicleMayBeUsedByGotoPointAnyMeans(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleMayBeUsedByGotoPointAnyMeans(_vehicle, p1);
}
/**
 * Hash: 0x09C970AE59ABF6B2 | ApiSet: undefined
 */
export function setVehicleNotStealableAmbiently(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleNotStealableAmbiently(_vehicle, p1);
}
/**
 * Hash: 0x7263332501E07F52 | ApiSet: undefined
 */
export function setVehicleOnGroundProperly(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return SetVehicleOnGroundProperly(_vehicle, p1);
}
/**
 * Hash: 0x652712478F1721F4 | ApiSet: undefined
 */
export function setVehicleProvidesCover(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleProvidesCover(_vehicle, toggle);
}
/**
 * ```
 * 1000 is max health
 * ```
 * Hash: 0x6AB2918EE3BEC94C | ApiSet: undefined
 */
export function setVehiclePetrolTankHealth(vehicle, health) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehiclePetrolTankHealth(_vehicle, health);
}
/**
 * Hash: 0x33992A808DF1C1BA | ApiSet: undefined
 */
export function setVehicleRespectsLocksWhenHasDriver(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleRespectsLocksWhenHasDriver(_vehicle, p1);
}
/**
 * Hash: 0xB79BE78C665B3E6D | ApiSet: undefined
 */
export function setVehicleShootAtTarget(p0, p1, p2, p3, p4, p5) {
    SetVehicleShootAtTarget(p0, p1, p2, p3, p4, p5);
}
/**
 * ```
 * snowLevel: 0.0 - 1.0
 * ```
 * Hash: 0x6F73EFAB11651D7F | ApiSet: undefined
 */
export function setVehicleSnowLevel(vehicle, snowLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleSnowLevel(_vehicle, snowLevel);
}
/**
 * Hash: 0x23A3AB86E0807721 | ApiSet: undefined
 */
export function setVehicleStaysFrozenWhenCleanedUp(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleStaysFrozenWhenCleanedUp(_vehicle, toggle);
}
/**
 * Hash: 0xC84E138448507567 | ApiSet: undefined
 */
export function setVehicleStopInstantlyWhenPlayerInactive(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleStopInstantlyWhenPlayerInactive(_vehicle, p1);
}
/**
 * ```
 * Locks the vehicle's steering to the desired angle, explained below.
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 * ```
 * Hash: 0x84DAAE11E9EE4FC3 | ApiSet: undefined
 */
export function setVehicleSteerBias(vehicle, value) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleSteerBias(_vehicle, value);
}
/**
 * ```
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 * ```
 * Hash: 0xAB315515C9F8803D | ApiSet: undefined
 */
export function setVehicleStrong(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleStrong(_vehicle, toggle);
}
/**
 * Hash: 0x6E884BAB713A2A94 | ApiSet: undefined
 */
export function setVehicleUndriveable(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleUndriveable(_vehicle, toggle);
}
/**
 * ```
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
 * ```
 * Hash: 0x8268B098F6FCA4E2 | ApiSet: undefined
 */
export function setVehicleTint(vehicle, tintId) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleTint(_vehicle, tintId);
}
/**
 * ```
 * Allows you to toggle bulletproof tires.
 * ```
 * Hash: 0xEBD0A4E935106FE5 | ApiSet: undefined
 */
export function setVehicleTyresCanBurst(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleTyresCanBurst(_vehicle, toggle);
}
/**
 * Hash: 0xC462C79379ABBCB1 | ApiSet: undefined
 */
export function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle, toggle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleWheelsCanBreakOffWhenBlowUp(_vehicle, toggle);
}
/**
 * ```
 * wetLevel: 0.0 - 1.0
 * ```
 * Hash: 0x5AABB09F6FBD1F87 | ApiSet: undefined
 */
export function setVehicleWetLevel(vehicle, wetLevel) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleWetLevel(_vehicle, wetLevel);
}
/**
 * Hash: 0x41CDA90EE3450921 | ApiSet: undefined
 */
export function showHorseReins(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    ShowHorseReins(_vehicle);
}
/**
 * Hash: 0x839137C40275FB77 | ApiSet: undefined
 */
export function setVehicleWheelsCanBreak(vehicle, enabled) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleWheelsCanBreak(_vehicle, enabled);
}
/**
 * ```
 * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
 * See REQUEST_VEHICLE_RECORDING
 * ```
 * Hash: 0x4932B84E3276508E | ApiSet: undefined
 */
export function startPlaybackRecordedVehicle(vehicle, recording, script, p3) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    StartPlaybackRecordedVehicle(_vehicle, recording, script, p3);
}
/**
 * Hash: 0x7C06330BFDDA182E | ApiSet: undefined
 */
export function stopBringingVehicleToHalt(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    StopBringingVehicleToHalt(_vehicle);
}
/**
 * ```
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 * ```
 * Hash: 0x5F5E6379C59EFC56 | ApiSet: undefined
 */
export function skipTimeInPlaybackRecordedVehicle(vehicle, time) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SkipTimeInPlaybackRecordedVehicle(_vehicle, time);
}
/**
 * Hash: 0x1F3969B140DEE157 | ApiSet: undefined
 */
export function trackVehicleVisibility(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    TrackVehicleVisibility(_vehicle);
}
/**
 * ```
 * Sounds the horn for the specified vehicle.
 * vehicle: The vehicle to activate the horn for.
 * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
 * duration: The duration to sound the horn, in milliseconds.
 * Note: If a player is in the vehicle, it will only sound briefly.
 * ```
 * Hash: 0xB4E3BFC39CA16057 | ApiSet: undefined
 */
export function startVehicleHorn(vehicle, duration, mode, forever) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof mode === 'string')
        mode = this.getHashKey(mode);
    StartVehicleHorn(_vehicle, duration, mode, forever);
}
/**
 * Hash: 0xBF9B4D6267E8C26D | ApiSet: undefined
 */
export function stopPlaybackRecordedVehicle(vehicle) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    StopPlaybackRecordedVehicle(_vehicle);
}
/**
 * ```
 * whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
 * p2 = true seems to mute the sound
 * ```
 * Hash: 0xCFE122EC635CC2B2 | ApiSet: undefined
 */
export function triggerTrainWhistle(train, whistleSequence, p2, p3) {
    const _train = train instanceof Entity ? train.handle() : train;
    TriggerTrainWhistle(_train, whistleSequence, p2, p3);
}
/**
 * Hash: 0x08797A8C03868CB8 | ApiSet: undefined
 */
export function _0x08797A8C03868CB8(threshold) {
    Citizen.invokeNative('0x08797A8C03868CB8', threshold);
}
/**
 * Hash: 0x1FBF7F5BA7E4BE3A | ApiSet: undefined
 */
export function _0x1FBF7F5BA7E4BE3A(p0) {
    Citizen.invokeNative('0x1FBF7F5BA7E4BE3A', p0);
}
/**
 * Hash: 0x356135B9B10A2A82 | ApiSet: undefined
 */
export function _0x356135B9B10A2A82() {
    return Citizen.invokeNative('0x356135B9B10A2A82');
}
/**
 * Hash: 0x49623BCFC3A3D829 | ApiSet: undefined
 */
export function _0x49623BCFC3A3D829(player, muted) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x49623BCFC3A3D829', _player, muted);
}
/**
 * Hash: 0x0DED260A1958A82E | ApiSet: undefined
 */
export function _0x0DED260A1958A82E(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x0DED260A1958A82E', _player);
}
/**
 * Hash: 0x58125B691F6827D5 | ApiSet: undefined
 */
export function _0x58125B691F6827D5(proximity) {
    Citizen.invokeNative('0x58125B691F6827D5', proximity);
}
/**
 * Hash: 0x1C38C3577901AF1F | ApiSet: undefined
 */
export function _0x1C38C3577901AF1F() {
    Citizen.invokeNative('0x1C38C3577901AF1F');
}
/**
 * Hash: 0x2F82CAB262C8AE26 | ApiSet: undefined
 */
export function _0x2F82CAB262C8AE26(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x2F82CAB262C8AE26', _player);
}
/**
 * ```
 * Params: p1 = 2; p2 = 3 in R* Script net_main_offline
 * ```
 * Hash: 0x4791899615D70FA2 | ApiSet: undefined
 */
export function _0x4791899615D70FA2(player, p1, p2) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0x4791899615D70FA2', _player, p1, p2);
}
/**
 * Hash: 0x5CA7FB7D6DE49DCC | ApiSet: undefined
 */
export function _0x5CA7FB7D6DE49DCC(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x5CA7FB7D6DE49DCC', _player);
}
/**
 * Hash: 0x79F478FF5F9F4F05 | ApiSet: undefined
 */
export function _0x79F478FF5F9F4F05(enabled) {
    Citizen.invokeNative('0x79F478FF5F9F4F05', enabled);
}
/**
 * ```
 * Returns p2 value of 0x4791899615D70FA2
 * ```
 * Hash: 0x767931C727DF2ED7 | ApiSet: undefined
 */
export function _0x767931C727DF2ED7(player, p1) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x767931C727DF2ED7', _player, p1);
}
/**
 * Hash: 0x8E462DB1EAA9C47C | ApiSet: undefined
 */
export function _0x8E462DB1EAA9C47C(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x8E462DB1EAA9C47C', _player);
}
/**
 * Hash: 0x919AF2D93E9AA89D | ApiSet: undefined
 */
export function _0x919AF2D93E9AA89D(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0x919AF2D93E9AA89D', _player);
}
/**
 * Hash: 0xB3E8841F6BDAF83E | ApiSet: undefined
 */
export function _0xB3E8841F6BDAF83E() {
    Citizen.invokeNative('0xB3E8841F6BDAF83E');
}
/**
 * Hash: 0xAA35FD9ABAB490A3 | ApiSet: undefined
 */
export function _0xAA35FD9ABAB490A3(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xAA35FD9ABAB490A3', _player);
}
/**
 * Hash: 0xB779F4FA19269AEC | ApiSet: undefined
 */
export function _0xB779F4FA19269AEC(flag) {
    Citizen.invokeNative('0xB779F4FA19269AEC', flag);
}
/**
 * Hash: 0xB6E79850B759A30E | ApiSet: undefined
 */
export function _0xB6E79850B759A30E(teamId, allow) {
    Citizen.invokeNative('0xB6E79850B759A30E', teamId, allow);
}
/**
 * Hash: 0xDB622ECD3DCBE078 | ApiSet: undefined
 */
export function _0xDB622ECD3DCBE078(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xDB622ECD3DCBE078', _player);
}
/**
 * Hash: 0xCCF71FCFA0070B1A | ApiSet: undefined
 */
export function _0xCCF71FCFA0070B1A() {
    return Citizen.invokeNative('0xCCF71FCFA0070B1A');
}
/**
 * Hash: 0xDC9B361CB7776673 | ApiSet: undefined
 */
export function _0xDC9B361CB7776673(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xDC9B361CB7776673', _player);
}
/**
 * Hash: 0xEC8703E4536A9952 | ApiSet: undefined
 */
export function _0xEC8703E4536A9952() {
    Citizen.invokeNative('0xEC8703E4536A9952');
}
/**
 * Hash: 0xEF6F2A35FAAF2ED7 | ApiSet: undefined
 */
export function _0xEF6F2A35FAAF2ED7(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    return Citizen.invokeNative('0xEF6F2A35FAAF2ED7', _player);
}
/**
 * Hash: 0xF8938CF3984092A5 | ApiSet: undefined
 */
export function _0xF8938CF3984092A5(player) {
    const _player = player instanceof Entity ? player.remoteId() : player;
    Citizen.invokeNative('0xF8938CF3984092A5', _player);
}
/**
 * ```
 * _ADD_R* - _ADD_V(OLUME?)*
 * ```
 * Hash: 0x6E0D3C3F828DA773 | ApiSet: undefined
 */
export function addBoundsToAggregateVolume(volume, aggregate) {
    AddBoundsToAggregateVolume(volume, aggregate);
}
/**
 * Hash: 0xBCE668AAF83608BE | ApiSet: undefined
 */
export function addCylinderVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    AddCylinderVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x58D3803FA639A3BB | ApiSet: undefined
 */
export function addEntryVolumeLock() {
    return AddEntryVolumeLock();
}
/**
 * Hash: 0x39816F6F94F385AD | ApiSet: undefined
 */
export function addBoxVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    AddBoxVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x5B7D7BF36D2DE18B | ApiSet: undefined
 */
export function addSphereVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
    AddSphereVolumeToVolumeAggregate(aggregate, p1, p2, p3, p4, p5, p6, p7, p8, p9);
}
/**
 * Hash: 0x12FCAA23F2320422 | ApiSet: undefined
 */
export function addVolumeToVolumeAggregate(aggregate, typeHash, position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    if (typeof typeHash === 'string')
        typeHash = this.getHashKey(typeHash);
    AddVolumeToVolumeAggregate(aggregate, typeHash, position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * Hash: 0xBBE768E3AE76E07C | ApiSet: undefined
 */
export function createSpeedVolume(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
    return CreateSpeedVolume(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
}
/**
 * Hash: 0x0EB78C2B156635B1 | ApiSet: undefined
 */
export function createAntiGriefVolume(volumeType, position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    if (typeof volumeType === 'string')
        volumeType = this.getHashKey(volumeType);
    return CreateAntiGriefVolume(volumeType, position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * Hash: 0x59F6F5C1D129F106 | ApiSet: undefined
 */
export function createVolumeAggregate() {
    return CreateVolumeAggregate();
}
/**
 * Hash: 0x5D580DE6398BB162 | ApiSet: undefined
 */
export function createVolumeAggregateWithCustomName(name) {
    return CreateVolumeAggregateWithCustomName(name);
}
/**
 * Hash: 0xDF85637F22706891 | ApiSet: undefined
 */
export function createVolumeBox(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    return CreateVolumeBox(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * Hash: 0xF68485C7495D848E | ApiSet: undefined
 */
export function createVolumeBoxWithCustomName(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
    return CreateVolumeBoxWithCustomName(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name);
}
/**
 * Hash: 0x502022FA1AF9DC86 | ApiSet: undefined
 */
export function createVolumeByHash(volumeType, position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    if (typeof volumeType === 'string')
        volumeType = this.getHashKey(volumeType);
    return CreateVolumeByHash(volumeType, position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * Hash: 0x1F85E4AC774A201E | ApiSet: undefined
 */
export function createVolumeByHashWithCustomName(volumeType, position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
    if (typeof volumeType === 'string')
        volumeType = this.getHashKey(volumeType);
    return CreateVolumeByHashWithCustomName(volumeType, position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name);
}
/**
 * Hash: 0xDF1E350EDDF06E59 | ApiSet: undefined
 */
export function createVolumeCylinderWithCustomName(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
    return CreateVolumeCylinderWithCustomName(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name);
}
/**
 * Hash: 0x0522D4774B82E3E6 | ApiSet: undefined
 */
export function createVolumeCylinder(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    return CreateVolumeCylinder(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * ```
 * Params: p5 is always 0
 * ```
 * Hash: 0x00BBF7CEAE8C666A | ApiSet: undefined
 */
export function createVolumeLock(position, radius, flag, p5) {
    return CreateVolumeLock(position.x, position.y, position.z, radius, flag, p5);
}
/**
 * Hash: 0xB3FB80A32BAE3065 | ApiSet: undefined
 */
export function createVolumeSphere(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ) {
    return CreateVolumeSphere(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ);
}
/**
 * ```
 * Params: p3 is always 0
 * ```
 * Hash: 0xF383E96C4904DF0C | ApiSet: undefined
 */
export function createVolumeLockAttachedToEntity(entity, radius, flag, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    return CreateVolumeLockAttachedToEntity(_entity, radius, flag, p3);
}
/**
 * Hash: 0x43F867EF5C463A53 | ApiSet: undefined
 */
export function deleteVolume(volume) {
    DeleteVolume(volume);
}
/**
 * Hash: 0x10157BC3247FF3BA | ApiSet: undefined
 */
export function createVolumeSphereWithCustomName(position, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name) {
    return CreateVolumeSphereWithCustomName(position.x, position.y, position.z, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, name);
}
/**
 * Hash: 0x397769175A7DBB30 | ApiSet: undefined
 */
export function doesVolumeCollideWithAnyVolumeLock(position, radius, p4, p5, p6) {
    return DoesVolumeCollideWithAnyVolumeLock(position.x, position.y, position.z, radius, p4, p5, p6);
}
/**
 * Hash: 0xFD0E389CD44434B6 | ApiSet: undefined
 */
export function createWalkAndTalkVolume(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12) {
    return CreateWalkAndTalkVolume(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12);
}
/**
 * Hash: 0x92A78D0BEDB332A3 | ApiSet: undefined
 */
export function doesVolumeExist(volume) {
    return DoesVolumeExist(volume);
}
/**
 * Hash: 0x77A6E4AD0C496F81 | ApiSet: undefined
 */
export function findVolumeLockRequestIdWithArgs() {
    return FindVolumeLockRequestIdWithArgs();
}
/**
 * Hash: 0x5737199AF2DC609F | ApiSet: undefined
 */
export function getVolumeBounds(volume) {
    const result = GetVolumeBounds(volume);
    return [result[0], new Vector3(result[1], result[2], result[3]), new Vector3(result[2], result[3], result[4])];
}
/**
 * Hash: 0xF70F00013A62F866 | ApiSet: undefined
 */
export function getVolumeCoords(volume) {
    return new Vector3(GetVolumeCoords(volume));
}
/**
 * ```
 * enum eVolumeLockRequestStatus
 * {
 * VOLUME_LOCK_REQUEST_STATUS_INVALID,
 * VOLUME_LOCK_REQUEST_STATUS_READY,
 * VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
 * VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
 * VOLUME_LOCK_REQUEST_STATUS_FAILED
 * };
 * ```
 * Hash: 0xB33A604345F58202 | ApiSet: undefined
 */
export function getVolumeLockRequestStatus(volLockRequestId) {
    return GetVolumeLockRequestStatus(volLockRequestId);
}
/**
 * ```
 * Returns relationshipGroup Hash
 * ```
 * Hash: 0x666C2F53ABEFC952 | ApiSet: undefined
 */
export function getVolumeRelationship(volume) {
    return GetVolumeRelationship(volume);
}
/**
 * Hash: 0x18675BC914891122 | ApiSet: undefined
 */
export function getVolumeRotation(volume) {
    return new Vector3(GetVolumeRotation(volume));
}
/**
 * Hash: 0x3E2A25B2416DD67E | ApiSet: undefined
 */
export function getVolumeScale(volume) {
    return new Vector3(GetVolumeScale(volume));
}
/**
 * Hash: 0xFEFF01B5725BCD22 | ApiSet: undefined
 */
export function isAggregateVolume(volume) {
    return IsAggregateVolume(volume);
}
/**
 * Hash: 0xF256A75210C5C0EB | ApiSet: undefined
 */
export function isPointInVolume(volume, position) {
    return IsPointInVolume(volume, position.x, position.y, position.z);
}
/**
 * Hash: 0x769BB7626B8CDB06 | ApiSet: undefined
 */
export function isPointNearVolumeLockCenter(position, radius, p4, p5, flags) {
    return IsPointNearVolumeLockCenter(position.x, position.y, position.z, radius, p4, p5, flags);
}
/**
 * Hash: 0xF6A8A652A6B186CD | ApiSet: undefined
 */
export function isVolumeLockRequestValid2(volLockRequestId) {
    return IsVolumeLockRequestValid2(volLockRequestId);
}
/**
 * Hash: 0xA4A4359320345B34 | ApiSet: undefined
 */
export function isVolumeLockRequestValid(volLockRequestId) {
    return IsVolumeLockRequestValid(volLockRequestId);
}
/**
 * Hash: 0xEC43C2FFB70E3F30 | ApiSet: undefined
 */
export function modifyVolumeLockLocation(volLock, position) {
    ModifyVolumeLockLocation(volLock, position.x, position.y, position.z);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x128FC3A893BF853A | ApiSet: undefined
 */
export function _0x128FC3A893BF853A(p0) {
    Citizen.invokeNative('0x128FC3A893BF853A', p0);
}
/**
 * Hash: 0x2B32B11520626229 | ApiSet: undefined
 */
export function _0x2B32B11520626229(p0, p1, p2, p3, p4) {
    return Citizen.invokeNative('0x2B32B11520626229', p0, p1, p2, p3, p4);
}
/**
 * Hash: 0x3EFABB21E14A6BD1 | ApiSet: undefined
 */
export function _0x3EFABB21E14A6BD1(p0, p1, p2) {
    Citizen.invokeNative('0x3EFABB21E14A6BD1', p0, p1, p2);
}
/**
 * Hash: 0x351D71B8B72B858B | ApiSet: undefined
 */
export function _0x351D71B8B72B858B(p0) {
    return Citizen.invokeNative('0x351D71B8B72B858B', p0);
}
/**
 * Hash: 0x51E52C9687FCDEEC | ApiSet: undefined
 */
export function _0x51E52C9687FCDEEC(p0, p1, p2, p3, p4, p5, p6) {
    return Citizen.invokeNative('0x51E52C9687FCDEEC', p0, p1, p2, p3, p4, p5, p6);
}
/**
 * Hash: 0x40F769D31A00D5A0 | ApiSet: undefined
 */
export function _0x40F769D31A00D5A0(p0, p1) {
    return Citizen.invokeNative('0x40F769D31A00D5A0', p0, p1);
}
/**
 * Hash: 0x4A8FEFC43FD8AC9B | ApiSet: undefined
 */
export function _0x4A8FEFC43FD8AC9B(p0, p1, p2) {
    Citizen.invokeNative('0x4A8FEFC43FD8AC9B', p0, p1, p2);
}
/**
 * Hash: 0x52572B331E693AED | ApiSet: undefined
 */
export function _0x52572B331E693AED(p0, p1, p2) {
    Citizen.invokeNative('0x52572B331E693AED', p0, p1, p2);
}
/**
 * Hash: 0x53D05D60E5F5B40C | ApiSet: undefined
 */
export function _0x53D05D60E5F5B40C(p0, p1, p2, p3) {
    Citizen.invokeNative('0x53D05D60E5F5B40C', p0, p1, p2, p3);
}
/**
 * Hash: 0x695DAC2DB928F308 | ApiSet: undefined
 */
export function _0x695DAC2DB928F308(p0, p1) {
    Citizen.invokeNative('0x695DAC2DB928F308', p0, p1);
}
/**
 * Hash: 0x6D5F9E69BA1BE783 | ApiSet: undefined
 */
export function _0x6D5F9E69BA1BE783(p0) {
    Citizen.invokeNative('0x6D5F9E69BA1BE783', p0);
}
/**
 * Hash: 0x7FD78DFD0C5D7B9B | ApiSet: undefined
 */
export function _0x7FD78DFD0C5D7B9B(p0) {
    return Citizen.invokeNative('0x7FD78DFD0C5D7B9B', p0);
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0x748C5F51A18CB8F0 | ApiSet: undefined
 */
export function _0x748C5F51A18CB8F0(p0) {
    Citizen.invokeNative('0x748C5F51A18CB8F0', p0);
}
/**
 * Hash: 0x998202B206872672 | ApiSet: undefined
 */
export function _0x998202B206872672(p0) {
    Citizen.invokeNative('0x998202B206872672', p0);
}
/**
 * Hash: 0x870E9981ED27C815 | ApiSet: undefined
 */
export function _0x870E9981ED27C815(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0x870E9981ED27C815', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xAC355980681A7F89 | ApiSet: undefined
 */
export function _0xAC355980681A7F89(p0) {
    Citizen.invokeNative('0xAC355980681A7F89', p0);
}
/**
 * Hash: 0xAA9EE2AAFC717623 | ApiSet: undefined
 */
export function _0xAA9EE2AAFC717623(p0, p1, p2, p3, p4, p5) {
    return Citizen.invokeNative('0xAA9EE2AAFC717623', p0, p1, p2, p3, p4, p5);
}
/**
 * Hash: 0xB440F4E35393FC39 | ApiSet: undefined
 */
export function _0xB440F4E35393FC39(volume, p1) {
    Citizen.invokeNative('0xB440F4E35393FC39', volume, p1);
}
/**
 * Hash: 0xB469CFD9E065EB99 | ApiSet: undefined
 */
export function _0xB469CFD9E065EB99(p0, p1) {
    Citizen.invokeNative('0xB469CFD9E065EB99', p0, p1);
}
/**
 * Hash: 0xC4019CF9AE8E931A | ApiSet: undefined
 */
export function _0xC4019CF9AE8E931A(volLockRequestId) {
    return new Vector3(Citizen.invokeNative('0xC4019CF9AE8E931A', volLockRequestId));
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xC61E2FD926DBB406 | ApiSet: undefined
 */
export function _0xC61E2FD926DBB406() {
    Citizen.invokeNative('0xC61E2FD926DBB406');
}
/**
 * Hash: 0xD460135C98940274 | ApiSet: undefined
 */
export function _0xD460135C98940274(volume, p1) {
    Citizen.invokeNative('0xD460135C98940274', volume, p1);
}
/**
 * Hash: 0xD882C5B3991575B7 | ApiSet: undefined
 */
export function _0xD882C5B3991575B7(p0, p1, p2, p3, p4) {
    return new Vector3(Citizen.invokeNative('0xD882C5B3991575B7', p0, p1, p2, p3, p4));
}
/**
 * Hash: 0xCA5C90D40665D5CE | ApiSet: undefined
 */
export function _0xCA5C90D40665D5CE(p0, p1) {
    return Citizen.invokeNative('0xCA5C90D40665D5CE', p0, p1);
}
/**
 * Hash: 0xEBA87B9273835CF3 | ApiSet: undefined
 */
export function _0xEBA87B9273835CF3(p0, p1) {
    Citizen.invokeNative('0xEBA87B9273835CF3', p0, p1);
}
/**
 * Hash: 0xD4FA73FE628FEC63 | ApiSet: undefined
 */
export function _0xD4FA73FE628FEC63(p0, p1) {
    Citizen.invokeNative('0xD4FA73FE628FEC63', p0, p1);
}
/**
 * Hash: 0xF3A2FBA5985C8CD5 | ApiSet: undefined
 */
export function _0xF3A2FBA5985C8CD5(p0, p1, p2, p3) {
    Citizen.invokeNative('0xF3A2FBA5985C8CD5', p0, p1, p2, p3);
}
/**
 * Hash: 0xD52DF30355EA7C8E | ApiSet: undefined
 */
export function _0xD52DF30355EA7C8E(p0, p1, p2) {
    Citizen.invokeNative('0xD52DF30355EA7C8E', p0, p1, p2);
}
/**
 * Hash: 0xEE1D6FF54CAF7714 | ApiSet: undefined
 */
export function _0xEE1D6FF54CAF7714(p0, p1) {
    return Citizen.invokeNative('0xEE1D6FF54CAF7714', p0, p1);
}
/**
 * Hash: 0xF6F5447D418DAA82 | ApiSet: undefined
 */
export function _0xF6F5447D418DAA82(p0) {
    return Citizen.invokeNative('0xF6F5447D418DAA82', p0);
}
/**
 * Hash: 0xFDFECC6EE4491E11 | ApiSet: undefined
 */
export function releaseLockVolume(volLockRequestId) {
    ReleaseLockVolume(volLockRequestId);
}
/**
 * Hash: 0xF6CE6F9C3897804E | ApiSet: undefined
 */
export function _0xF6CE6F9C3897804E(p0) {
    return Citizen.invokeNative('0xF6CE6F9C3897804E', p0);
}
/**
 * Hash: 0x183C0B6CFEFFCAE4 | ApiSet: undefined
 */
export function requestVolumeLockWithArgs() {
    return RequestVolumeLockWithArgs();
}
/**
 * ```
 * nullsub, doesn't do anything
 * ```
 * Hash: 0xFA15C9A320E707B0 | ApiSet: undefined
 */
export function _0xFA15C9A320E707B0() {
    Citizen.invokeNative('0xFA15C9A320E707B0');
}
/**
 * Hash: 0xF14BCEF290F869E1 | ApiSet: undefined
 */
export function requestVolumeLock(position, radius, p4, p5) {
    return RequestVolumeLock(position.x, position.y, position.z, radius, p4, p5);
}
/**
 * Hash: 0x5B23DFF8E0948BB2 | ApiSet: undefined
 */
export function setAntiGriefVolumeBlocksPlayer(volume, toggle) {
    SetAntiGriefVolumeBlocksPlayer(volume, toggle);
}
/**
 * ```
 * _REMOVE_E* - _REMOVE_R*
 * ```
 * Hash: 0xF92FA8890DECECF6 | ApiSet: undefined
 */
export function removeBoundsFromAggregateVolume(volume, aggregate) {
    RemoveBoundsFromAggregateVolume(volume, aggregate);
}
/**
 * Hash: 0xBE551C2CC421185D | ApiSet: undefined
 */
export function setAntiGriefVolumeBlocksHorse(volume, toggle) {
    SetAntiGriefVolumeBlocksHorse(volume, toggle);
}
/**
 * Hash: 0x541B8576615C33DE | ApiSet: undefined
 */
export function setVolumeCoords(volume, posX, posY, posZ) {
    return SetVolumeCoords(volume, posX, posY, posZ);
}
/**
 * Hash: 0xE2BE6FFA4A13CBB0 | ApiSet: undefined
 */
export function setVolumeOwnerPersistentCharacter(volume, persChar, p2) {
    SetVolumeOwnerPersistentCharacter(volume, persChar, p2);
}
/**
 * Hash: 0xFD010A2154B40676 | ApiSet: undefined
 */
export function setVolumeRelationship(volume, relationshipGroup) {
    if (typeof relationshipGroup === 'string')
        relationshipGroup = this.getHashKey(relationshipGroup);
    SetVolumeRelationship(volume, relationshipGroup);
}
/**
 * Hash: 0xA07CF1B21B56F041 | ApiSet: undefined
 */
export function setVolumeRotation(volume, rotX, rotY, rotZ) {
    return SetVolumeRotation(volume, rotX, rotY, rotZ);
}
/**
 * Hash: 0xA46E98BDC407E23D | ApiSet: undefined
 */
export function setVolumeScale(volume, scaleX, scaleY, scaleZ) {
    return SetVolumeScale(volume, scaleX, scaleY, scaleZ);
}
/**
 * ```
 * Must be called every frame to take full effect.
 * ```
 * Hash: 0x754616EC6965D1FB | ApiSet: undefined
 */
export function disableWaterLookup() {
    DisableWaterLookup();
}
/**
 * ```
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
 * ```
 * Hash: 0xFCA8B23F28813F69 | ApiSet: undefined
 */
export function getWaterHeight(position) {
    return GetWaterHeight(position.x, position.y, position.z);
}
/**
 * Hash: 0x754616EC6965D1BF | ApiSet: undefined
 */
export function enableWaterLookup() {
    EnableWaterLookup();
}
/**
 * Hash: 0x189739A7631C1867 | ApiSet: undefined
 */
export function getWorldWaterType() {
    return GetWorldWaterType();
}
/**
 * Hash: 0xDCF3690AA262C03F | ApiSet: undefined
 */
export function getWaterHeightNoWaves(position) {
    return GetWaterHeightNoWaves(position.x, position.y, position.z);
}
/**
 * ```
 * Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
 * _REMOVE_*
 * ```
 * Hash: 0x09A1C7DFDCE54FBC | ApiSet: undefined
 */
export function _0x09A1C7DFDCE54FBC(p0) {
    Citizen.invokeNative('0x09A1C7DFDCE54FBC', p0);
}
/**
 * ```
 * Only used in native_son1 R* Script: p1 = 1
 * ```
 * Hash: 0x0DCEC6A92E497E17 | ApiSet: undefined
 */
export function _0x0DCEC6A92E497E17(entity, p1) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0x0DCEC6A92E497E17', _entity, p1);
}
/**
 * ```
 * Only used in fishing_core R* Script
 * ```
 * Hash: 0xA33F5069B0CB89B8 | ApiSet: undefined
 */
export function _0xA33F5069B0CB89B8() {
    Citizen.invokeNative('0xA33F5069B0CB89B8');
}
/**
 * ```
 * Only used in fussar1 / train_robbery2 R* Script
 * ```
 * Hash: 0xE8126623008372AA | ApiSet: undefined
 */
export function _0xE8126623008372AA() {
    Citizen.invokeNative('0xE8126623008372AA');
}
/**
 * ```
 * Used in bounty1, fanale3, sean1 R* Scripts
 * ```
 * Hash: 0xB34A6009A0DB80B8 | ApiSet: undefined
 */
export function _0xB34A6009A0DB80B8(entity) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    Citizen.invokeNative('0xB34A6009A0DB80B8', _entity);
}
/**
 * ```
 * Only used in fishing_core R* Script
 * ```
 * Hash: 0xF0FBF193F1F5C0EA | ApiSet: undefined
 */
export function _0xF0FBF193F1F5C0EA(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF0FBF193F1F5C0EA', _ped);
}
/**
 * ```
 * Only used in rcm_crackpot1 R* Script: p0 = 0
 * ```
 * Hash: 0x4BEF8DD75AF6C71C | ApiSet: undefined
 */
export function removeExtraCalmingQuad(index) {
    RemoveExtraCalmingQuad(index);
}
/**
 * ```
 * Only used in guama1 / guama3 R* Script
 * _REQUEST_* or _RESET_*
 * ```
 * Hash: 0xC63540AEF8384769 | ApiSet: undefined
 */
export function resetGuarmaWaterState() {
    ResetGuarmaWaterState();
}
/**
 * ```
 * Only used in R* Script guama1
 * ```
 * Hash: 0xC63540AEF8384732 | ApiSet: undefined
 */
export function setOceanGuarmaWaterQuadrant(wavesHeight, p1, p2, p3, p4, p5, p6, wavesStrength, p8) {
    SetOceanGuarmaWaterQuadrant(wavesHeight, p1, p2, p3, p4, p5, p6, wavesStrength, p8);
}
/**
 * ```
 * 0 = World
 * 1 = Guarma
 * ```
 * Hash: 0xE8770EE02AEE45C2 | ApiSet: undefined
 */
export function setWorldWaterType(waterType) {
    SetWorldWaterType(waterType);
}
/**
 * ```
 * enum eScriptWaterTestResult
 * {
 * SCRIPT_WATER_TEST_RESULT_NONE,
 * SCRIPT_WATER_TEST_RESULT_WATER,
 * SCRIPT_WATER_TEST_RESULT_BLOCKED,
 * };
 * ```
 * Hash: 0x8974647ED222EA5F | ApiSet: undefined
 */
export function testProbeAgainstAllWater(x1, y1, z1, x2, y2, z2, flags) {
    const result = TestProbeAgainstAllWater(x1, y1, z1, x2, y2, z2, flags);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
 * See TEST_PROBE_AGAINST_ALL_WATER.
 * ```
 * Hash: 0x2B3451FA1E3142E2 | ApiSet: undefined
 */
export function testVerticalProbeAgainstAllWater(position, flags) {
    return TestVerticalProbeAgainstAllWater(position.x, position.y, position.z, flags);
}
/**
 * ```
 * addReason:
 * enum eAddItemReason : Hash
 * {
 * ADD_REASON_AWARDS = 0xB784AD1E,
 * ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
 * ADD_REASON_DEBUG = 0x5C05C64D,
 * ADD_REASON_DEFAULT = 0x2CD419DC,
 * ADD_REASON_GET_INVENTORY = 0xD8188685,
 * ADD_REASON_INCENTIVE = 0x8ADC2E95,
 * ADD_REASON_LOADOUT = 0xCA3454E6,
 * ADD_REASON_LOAD_SAVEGAME = 0x56212906,
 * ADD_REASON_LOOTED = 0xCA806A55,
 * ADD_REASON_MELEE = 0x7B9BDCE7,
 * ADD_REASON_MP_MISSION = 0xEC0E0194,
 * ADD_REASON_NOTIFICATION = 0xC56292D2,
 * ADD_REASON_PICKUP = 0x1A770E22,
 * ADD_REASON_PURCHASED = 0x4A6726C9,
 * ADD_REASON_SET_AMOUNT = 0x4504731E,
 * ADD_REASON_SYNCING = 0x8D4B4FF4,
 * ADD_REASON_USE_FAILED = 0xD385B670
 * };
 * ```
 * Hash: 0xB190BCA3F4042F95 | ApiSet: undefined
 */
export function addAmmoToPed(ped, weaponHash, amount, addReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    AddAmmoToPed(_ped, weaponHash, amount, addReason);
}
/**
 * ```
 * addReason: see _ADD_AMMO_TO_PED
 * ```
 * Hash: 0x106A811C6D3035F3 | ApiSet: undefined
 */
export function addAmmoToPedByType(ped, ammoType, amount, addReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoType === 'string')
        ammoType = this.getHashKey(ammoType);
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    AddAmmoToPedByType(_ped, ammoType, amount, addReason);
}
/**
 * Hash: 0xAA5A52204E077883 | ApiSet: undefined
 */
export function disableAmmoTypeForPed(ped, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    DisableAmmoTypeForPed(_ped, ammoHash);
}
/**
 * Hash: 0x087D8F4BC65F68E4 | ApiSet: undefined
 */
export function clearPedLastWeaponDamage(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    ClearPedLastWeaponDamage(_ped);
}
/**
 * Hash: 0x9888652B8BA77F73 | ApiSet: undefined
 */
export function createWeaponObject(weaponHash, ammoCount, position, showWorldModel, scale) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return CreateWeaponObject(weaponHash, ammoCount, position.x, position.y, position.z, showWorldModel, scale);
}
/**
 * Hash: 0xF0D728EEA3C99775 | ApiSet: undefined
 */
export function disableAmmoTypeForPedWeapon(ped, weaponHash, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    DisableAmmoTypeForPedWeapon(_ped, weaponHash, ammoHash);
}
/**
 * Hash: 0x23FB9FACA28779C1 | ApiSet: undefined
 */
export function enableAmmoTypeForPedWeapon(ped, weaponHash, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    EnableAmmoTypeForPedWeapon(_ped, weaponHash, ammoHash);
}
/**
 * Hash: 0x3B7B7908B7ADFB4B | ApiSet: undefined
 */
export function enableAmmoTypeForPed(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    EnableAmmoTypeForPed(_ped, weaponHash);
}
/**
 * Hash: 0xC395355843BE134B | ApiSet: undefined
 */
export function enableWeaponRestore(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return EnableWeaponRestore(_ped);
}
/**
 * Hash: 0x918990BD9CE08582 | ApiSet: undefined
 */
export function getAllowDualWield(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAllowDualWield(_ped);
}
/**
 * Hash: 0x2E1202248937775C | ApiSet: undefined
 */
export function getAmmoInClip(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetAmmoInClip(_ped, weaponHash);
}
/**
 * Hash: 0x015A522136D7F951 | ApiSet: undefined
 */
export function getAmmoInPedWeapon(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetAmmoInPedWeapon(_ped, weaponHash);
}
/**
 * Hash: 0x678F00858980F516 | ApiSet: undefined
 */
export function getAmmoInClipByInventoryUid(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetAmmoInClipByInventoryUid(_ped);
}
/**
 * Hash: 0xF52BD94B47CCF736 | ApiSet: undefined
 */
export function getBestPedShortarmGuid(ped, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetBestPedShortarmGuid(_ped, p2, p3);
}
/**
 * Hash: 0x5C2EA6C44F515F34 | ApiSet: undefined
 */
export function getAmmoTypeForWeapon(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetAmmoTypeForWeapon(weaponHash);
}
/**
 * ```
 * If near your horse when called, weapons stored on your horse will be considered
 * Returns weaponHash
 * ```
 * Hash: 0x9F67929D98E7C6E8 | ApiSet: undefined
 */
export function getBestPedWeaponInGroup(ped, weaponGroup, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponGroup === 'string')
        weaponGroup = this.getHashKey(weaponGroup);
    return GetBestPedWeaponInGroup(_ped, weaponGroup, p2, p3);
}
/**
 * Hash: 0x8483E98E8B888AE2 | ApiSet: undefined
 */
export function getBestPedWeapon(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetBestPedWeapon(_ped, p1, p2);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x7B98500614C8E8B8 | ApiSet: undefined
 */
export function getBestPedWeaponInInventory(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetBestPedWeaponInInventory(_ped, p1);
}
/**
 * Hash: 0x6554ECCE226F2A2A | ApiSet: undefined
 */
export function getCanTwirlWeapon(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetCanTwirlWeapon(weaponHash);
}
/**
 * ```
 * Returns ammoHash
 * ```
 * Hash: 0xAF9D167A5656D6A6 | ApiSet: undefined
 */
export function getCurrentAmmoTypeFromGuid(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentAmmoTypeFromGuid(_ped);
}
/**
 * ```
 * _GET_BEST_* - _GET_CLOSEST_*
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xCD356B42C57BFE01 | ApiSet: undefined
 */
export function getCorrectKitEmoteTwirlGun(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCorrectKitEmoteTwirlGun(_ped);
}
/**
 * Hash: 0x1017582BCD3832DC | ApiSet: undefined
 */
export function getCurrentPedVehicleWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentPedVehicleWeapon(_ped);
}
/**
 * ```
 * attachPoint: see SET_CURRENT_PED_WEAPON
 * ```
 * Hash: 0x3A87E44BB9A01D54 | ApiSet: undefined
 */
export function getCurrentPedWeapon(ped, p2, attachPoint, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentPedWeapon(_ped, p2, attachPoint, p4);
}
/**
 * ```
 * Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
 * ```
 * Hash: 0x7E7B19A4355FEE13 | ApiSet: undefined
 */
export function getCurrentPedWeaponAmmoType(ped, weaponObject) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentPedWeaponAmmoType(_ped, weaponObject);
}
/**
 * ```
 * Returns weaponCollection Hash
 * Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
 * ```
 * Hash: 0xD42514C182121C23 | ApiSet: undefined
 */
export function getDefaultPedWeaponCollection(pedModel) {
    if (typeof pedModel === 'string')
        pedModel = this.getHashKey(pedModel);
    return GetDefaultPedWeaponCollection(pedModel);
}
/**
 * ```
 * Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
 * ```
 * Hash: 0x3B390A939AF0B5FC | ApiSet: undefined
 */
export function getCurrentPedWeaponEntityIndex(ped, attachPoint) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetCurrentPedWeaponEntityIndex(_ped, attachPoint);
}
/**
 * ```
 * Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
 * Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
 * ```
 * Hash: 0x08FF1099ED2E6E21 | ApiSet: undefined
 */
export function getDefaultUnarmedWeaponHash(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetDefaultUnarmedWeaponHash(_ped);
}
/**
 * Hash: 0xDC16122C7A20C933 | ApiSet: undefined
 */
export function getMaxAmmo(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetMaxAmmo(_ped, weaponHash);
}
/**
 * Hash: 0x79B1A6E780266DB0 | ApiSet: undefined
 */
export function getMaxLockonDistanceOfCurrentPedWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetMaxLockonDistanceOfCurrentPedWeapon(_ped);
}
/**
 * Hash: 0x39D22031557946C1 | ApiSet: undefined
 */
export function getPedAmmoByType(ped, ammoType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoType === 'string')
        ammoType = this.getHashKey(ammoType);
    return GetPedAmmoByType(_ped, ammoType);
}
/**
 * Hash: 0xC71FE230A513C30F | ApiSet: undefined
 */
export function getPedBackupWeapon(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedBackupWeapon(_ped, p1);
}
/**
 * Hash: 0xA38DCFFCEA8962FA | ApiSet: undefined
 */
export function getMaxAmmoInClip(ped, weaponHash, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetMaxAmmoInClip(_ped, weaponHash, p2);
}
/**
 * ```
 * Returns emote Hash
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x2C4FEC3D0EFA9FC0 | ApiSet: undefined
 */
export function getPedGunSpinningEquippedKitEmoteTwirl(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGunSpinningEquippedKitEmoteTwirl(_ped);
}
/**
 * Hash: 0x6C4D0409BA1A2BC2 | ApiSet: undefined
 */
export function getPedLastWeaponImpactCoord(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const result = GetPedLastWeaponImpactCoord(_ped);
    return new Vector3(result[1], result[2], result[3]);
}
/**
 * ```
 * Returns the current ammo type of the specified ped's specified weapon.
 * ```
 * Hash: 0x7FEAD38B326B9F74 | ApiSet: undefined
 */
export function getPedAmmoTypeFromWeapon(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetPedAmmoTypeFromWeapon(_ped, weaponHash);
}
/**
 * ```
 * Returns eCurrentHeldWeapon
 * _GET_R* - _GET_T*
 * ```
 * Hash: 0x8425C5F057012DAB | ApiSet: undefined
 */
export function getPedCurrentHeldWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedCurrentHeldWeapon(_ped);
}
/**
 * ```
 * Returns iSpinHash / iVariationSpin
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xF3B1620B920D1708 | ApiSet: undefined
 */
export function getPedGunSpinningHashFromWeaponEmoteVariation(ped, weaponEmoteVariation) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedGunSpinningHashFromWeaponEmoteVariation(_ped, weaponEmoteVariation);
}
/**
 * ```
 * _GET_M* - _GET_PED_A*
 * ```
 * Hash: 0x6CA484C9A7377E4F | ApiSet: undefined
 */
export function getPedWeaponObject(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWeaponObject(_ped, p1);
}
/**
 * Hash: 0x90EB1CB189923587 | ApiSet: undefined
 */
export function getPedHogtieWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedHogtieWeapon(_ped);
}
/**
 * Hash: 0xDA37A053C1522F5D | ApiSet: undefined
 */
export function getPedWorstWeapon(ped, p1, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWorstWeapon(_ped, p1, p2, p3);
}
/**
 * Hash: 0x6929E22158E52265 | ApiSet: undefined
 */
export function getPedWeaponGuidAtAttachPoint(ped, attachPoint) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPedWeaponGuidAtAttachPoint(_ped, attachPoint);
}
/**
 * ```
 * Outputs cached guids
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xB7E52A058B07C7E2 | ApiSet: undefined
 */
export function getPlayerPedQuickSwapWeaponByGuid(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetPlayerPedQuickSwapWeaponByGuid(_ped);
}
/**
 * ```
 * slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
 * ```
 * Hash: 0xDBC4B552B2AE9A83 | ApiSet: undefined
 */
export function getPedWeaponInSlot(ped, slotHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof slotHash === 'string')
        slotHash = this.getHashKey(slotHash);
    return GetPedWeaponInSlot(_ped, slotHash);
}
/**
 * Hash: 0x59DE03442B6C9598 | ApiSet: undefined
 */
export function getWeaponComponentTypeModel(componentHash) {
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    return GetWeaponComponentTypeModel(componentHash);
}
/**
 * ```
 * Returns WeaponAttachPoint
 * ```
 * Hash: 0xCAD4FE9398820D24 | ApiSet: undefined
 */
export function getWeaponAttachPoint(ped, attachPoint) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetWeaponAttachPoint(_ped, attachPoint);
}
/**
 * ```
 * Related to weapon visual damage, not actual damage.
 * ```
 * Hash: 0x904103D5D2333977 | ApiSet: undefined
 */
export function getWeaponDamage(weaponObject) {
    return GetWeaponDamage(weaponObject);
}
/**
 * Hash: 0x810E8AE9AFEA7E54 | ApiSet: undefined
 */
export function getWeaponDirt(weaponObject) {
    return GetWeaponDirt(weaponObject);
}
/**
 * Hash: 0xD3750CCC00635FC2 | ApiSet: undefined
 */
export function getWeaponClipSize(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponClipSize(weaponHash);
}
/**
 * ```
 * 0.0: good condition, 1.0: poor condition
 * ```
 * Hash: 0x0D78E1097F89E637 | ApiSet: undefined
 */
export function getWeaponDegradation(weaponObject) {
    return GetWeaponDegradation(weaponObject);
}
/**
 * ```
 * Returns weaponEmoteVariation
 * WEAPON_EMOTE_VARIATION_INVALID = -2,
 * WEAPON_EMOTE_VARIATION_BASE,
 * WEAPON_EMOTE_VARIATION_A,
 * WEAPON_EMOTE_VARIATION_B,
 * WEAPON_EMOTE_VARIATION_C,
 * WEAPON_EMOTE_VARIATION_D,
 * WEAPON_EMOTE_VARIATION_PREVIEW,
 * WEAPON_EMOTE_NUM_VARIATIONS
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x86147D05FA831D3A | ApiSet: undefined
 */
export function getWeaponEmoteVariation(ped, variation) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetWeaponEmoteVariation(_ped, variation);
}
/**
 * ```
 * Returns iSpinHash
 * ```
 * Hash: 0xF4601C1203B1A78D | ApiSet: undefined
 */
export function getWeaponGunSpinningWeaponEmoteTrickTypeHash(emote, weaponEmoteTrickType) {
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    return GetWeaponGunSpinningWeaponEmoteTrickTypeHash(emote, weaponEmoteTrickType);
}
/**
 * ```
 * Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
 * ```
 * Hash: 0x89CF5FF3D363311E | ApiSet: undefined
 */
export function getWeaponName(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponName(weaponHash);
}
/**
 * ```
 * Detaches the weapon from the ped and actually removes the ped's weapon
 * ```
 * Hash: 0xC6A6789BB405D11C | ApiSet: undefined
 */
export function getWeaponObjectFromPed(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GetWeaponObjectFromPed(_ped, p1);
}
/**
 * Hash: 0x7A56D66C78D8EF8E | ApiSet: undefined
 */
export function getWeaponNameWithPermanentDegradation(weaponHash, permanentDegradationLevel) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponNameWithPermanentDegradation(weaponHash, permanentDegradationLevel);
}
/**
 * ```
 * Related to rust of weapons
 * ```
 * Hash: 0xD56E5F336C675EFA | ApiSet: undefined
 */
export function getWeaponPermanentDegradation(weaponObject) {
    return GetWeaponPermanentDegradation(weaponObject);
}
/**
 * Hash: 0x6D3AC61694A791C5 | ApiSet: undefined
 */
export function getWeaponName2(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponName2(weaponHash);
}
/**
 * Hash: 0x22084CA699219624 | ApiSet: undefined
 */
export function getWeaponScale(weaponObject) {
    return GetWeaponScale(weaponObject);
}
/**
 * Hash: 0x8EC44AE8DECFF841 | ApiSet: undefined
 */
export function getWeaponStatId(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponStatId(weaponHash);
}
/**
 * Hash: 0x4BF66F8878F67663 | ApiSet: undefined
 */
export function getWeaponSoot(weaponObject) {
    return GetWeaponSoot(weaponObject);
}
/**
 * Hash: 0x7AA043F6C41D151E | ApiSet: undefined
 */
export function getWeaponTypeFromAmmoType(ammoType) {
    if (typeof ammoType === 'string')
        ammoType = this.getHashKey(ammoType);
    return GetWeaponTypeFromAmmoType(ammoType);
}
/**
 * ```
 * Gets the model hash from the weapon hash.
 * ```
 * Hash: 0xF70825EB340E7D15 | ApiSet: undefined
 */
export function getWeapontypeModel(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeapontypeModel(weaponHash);
}
/**
 * Hash: 0x865F36299079FB75 | ApiSet: undefined
 */
export function getWeaponUnlock(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeaponUnlock(weaponHash);
}
/**
 * Hash: 0xEDCA14CA5199FF25 | ApiSet: undefined
 */
export function getWeapontypeGroup(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeapontypeGroup(weaponHash);
}
/**
 * ```
 * Returns hash where WEAPON_ is replaced with SLOT_
 * ```
 * Hash: 0x46F032B8DDF46CDE | ApiSet: undefined
 */
export function getWeapontypeSlot(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return GetWeapontypeSlot(weaponHash);
}
/**
 * ```
 * addReason: see _ADD_AMMO_TO_PED
 * ```
 * Hash: 0xB282DC6EBD803C75 | ApiSet: undefined
 */
export function giveDelayedWeaponToPed(ped, weaponHash, ammoCount, p3, addReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    GiveDelayedWeaponToPed(_ped, weaponHash, ammoCount, p3, addReason);
}
/**
 * Hash: 0x899A04AFCC725D04 | ApiSet: undefined
 */
export function giveWeaponCollectionToPed(ped, weaponCollection) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponCollection === 'string')
        weaponCollection = this.getHashKey(weaponCollection);
    GiveWeaponCollectionToPed(_ped, weaponCollection);
}
/**
 * Hash: 0x1A47699E8D533E8F | ApiSet: undefined
 */
export function giveWeaponComponentToWeaponObject(ped, componentHash, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    return GiveWeaponComponentToWeaponObject(_ped, componentHash, p3);
}
/**
 * ```
 * entity can be a ped or weapon object.
 * ```
 * Hash: 0x74C9090FDD1BB48E | ApiSet: undefined
 */
export function giveWeaponComponentToEntity(entity, componentHash, weaponHash, p3) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    GiveWeaponComponentToEntity(_entity, componentHash, weaponHash, p3);
}
/**
 * ```
 * Gives the ped the weapon.
 * List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
 * Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
 * attachPoint: see SET_CURRENT_PED_WEAPON
 * addReason: see _ADD_AMMO_TO_PED
 * permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
 * ```
 * Hash: 0x5E3BDDBCB83F3D84 | ApiSet: undefined
 */
export function giveWeaponToPed(ped, weaponHash, ammoCount, bForceInHand, bForceInHolster, attachPoint, bAllowMultipleCopies, p7, p8, addReason, bIgnoreUnlocks, permanentDegradation, p12) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof addReason === 'string')
        addReason = this.getHashKey(addReason);
    return GiveWeaponToPed(_ped, weaponHash, ammoCount, bForceInHand, bForceInHolster, attachPoint, bAllowMultipleCopies, p7, p8, addReason, bIgnoreUnlocks, permanentDegradation, p12);
}
/**
 * Hash: 0xBE7E42B07FD317AC | ApiSet: undefined
 */
export function giveWeaponToPedWithOptions(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return GiveWeaponToPedWithOptions(_ped);
}
/**
 * Hash: 0x9E2D5D6BC97A5F1E | ApiSet: undefined
 */
export function hasEntityBeenDamagedByWeaponRecently(entity, weaponHash, ms) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return HasEntityBeenDamagedByWeaponRecently(_entity, weaponHash, ms);
}
/**
 * Hash: 0xDCF06D0CDFF68424 | ApiSet: undefined
 */
export function hasEntityBeenDamagedByWeapon(entity, weaponName, weaponType) {
    const _entity = entity instanceof Entity ? entity.handle() : entity;
    if (typeof weaponName === 'string')
        weaponName = this.getHashKey(weaponName);
    return HasEntityBeenDamagedByWeapon(_entity, weaponName, weaponType);
}
/**
 * Hash: 0xBBC67A6F965C688A | ApiSet: undefined
 */
export function hasPedGotWeaponComponent(ped, componentHash, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return HasPedGotWeaponComponent(_ped, componentHash, weaponHash);
}
/**
 * Hash: 0x8DECB02F88F428BC | ApiSet: undefined
 */
export function hasPedGotWeapon(ped, weaponHash, p2, p3) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return HasPedGotWeapon(_ped, weaponHash, p2, p3);
}
/**
 * Hash: 0x76A18844E743BF91 | ApiSet: undefined
 */
export function hasWeaponGotWeaponComponent(weapon, addonHash) {
    if (typeof addonHash === 'string')
        addonHash = this.getHashKey(addonHash);
    return HasWeaponGotWeaponComponent(weapon, addonHash);
}
/**
 * Hash: 0xFF07CF465F48B830 | ApiSet: undefined
 */
export function hasWeaponAssetLoaded(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return HasWeaponAssetLoaded(weaponHash);
}
/**
 * ```
 * Hides the ped's weapon during a cutscene.
 * ```
 * Hash: 0x6F6981D2253C208F | ApiSet: undefined
 */
export function hidePedWeaponForScriptedCutscene(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    HidePedWeaponForScriptedCutscene(_ped, toggle);
}
/**
 * ```
 * Unequip current weapon and set current weapon to WEAPON_UNARMED.
 * p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
 * immediately: if true it will instantly switch to unarmed
 * ```
 * Hash: 0xFCCC886EDE3C63EC | ApiSet: undefined
 */
export function hidePedWeapons(ped, p0, immediately) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    HidePedWeapons(_ped, p0, immediately);
}
/**
 * Hash: 0x94A3C1B804D291EC | ApiSet: undefined
 */
export function holsterPedWeapons(ped, p1, p2, p3, immediately) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    HolsterPedWeapons(_ped, p1, p2, p3, immediately);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xD2866CBA797E872E | ApiSet: undefined
 */
export function isAmmoSilent(ammoHash) {
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return IsAmmoSilent(ammoHash);
}
/**
 * Hash: 0x7EFACC589B98C488 | ApiSet: undefined
 */
export function isAmmoSilent2(ammoHash) {
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return IsAmmoSilent2(ammoHash);
}
/**
 * Hash: 0x1F7977C9101F807F | ApiSet: undefined
 */
export function isAmmoValid(ammoHash) {
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return IsAmmoValid(ammoHash);
}
/**
 * Hash: 0xC570B881754DF609 | ApiSet: undefined
 */
export function isAmmoTypeValidForWeapon(weaponHash, ammoHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return IsAmmoTypeValidForWeapon(weaponHash, ammoHash);
}
/**
 * Hash: 0xCB690F680A3EA971 | ApiSet: undefined
 */
export function isPedArmed(ped, flags) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedArmed(_ped, flags);
}
/**
 * Hash: 0xB80CA294F2F26749 | ApiSet: undefined
 */
export function isPedWeaponReadyToShoot(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedWeaponReadyToShoot(_ped);
}
/**
 * Hash: 0xF29A186ED428B552 | ApiSet: undefined
 */
export function isPedCarryingWeapon(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsPedCarryingWeapon(_ped, weaponHash);
}
/**
 * Hash: 0xBDD9C235D8D1052E | ApiSet: undefined
 */
export function isPedCurrentWeaponHolstered(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsPedCurrentWeaponHolstered(_ped);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x8D50F43298AB9545 | ApiSet: undefined
 */
export function isTargetPedConstrainedByPedUsingBolas(ped, targetPed) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    const _targetPed = targetPed instanceof Ped ? targetPed.handle() : targetPed;
    return IsTargetPedConstrainedByPedUsingBolas(_ped, _targetPed);
}
/**
 * Hash: 0xC853230E76A152DF | ApiSet: undefined
 */
export function isWeaponBinoculars(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponBinoculars(weaponHash);
}
/**
 * ```
 * `Returns true if CWeaponInfoFlags::Flags::Gun is set.`
 * ```
 * Hash: 0x705BE297EEBDB95D | ApiSet: undefined
 */
export function isWeaponAGun(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponAGun(weaponHash);
}
/**
 * Hash: 0xC4DEC3CA8C365A5D | ApiSet: undefined
 */
export function isWeaponBow(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponBow(weaponHash);
}
/**
 * ```
 * Returns true if the ped is currently holstering or unholstering a weapon
 * ```
 * Hash: 0x2387D6E9C6B478AA | ApiSet: undefined
 */
export function isWeaponHolsterStateChanging(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return IsWeaponHolsterStateChanging(_ped);
}
/**
 * ```
 * Returns true when the weapon passed is either a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 * ```
 * Hash: 0x6ABAD7B0A854F8FB | ApiSet: undefined
 */
export function isWeaponKit(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponKit(weaponHash);
}
/**
 * ```
 * Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 * ```
 * Hash: 0x49E40483948AF062 | ApiSet: undefined
 */
export function isWeaponKit2(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponKit2(weaponHash);
}
/**
 * Hash: 0x79407D33328286C6 | ApiSet: undefined
 */
export function isWeaponLantern(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponLantern(weaponHash);
}
/**
 * Hash: 0x792E3EF76C911959 | ApiSet: undefined
 */
export function isWeaponKnife(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponKnife(weaponHash);
}
/**
 * Hash: 0x6E4E1A82081EABED | ApiSet: undefined
 */
export function isWeaponLasso(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponLasso(weaponHash);
}
/**
 * Hash: 0x959383DCD42040DA | ApiSet: undefined
 */
export function isWeaponMeleeWeapon(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponMeleeWeapon(weaponHash);
}
/**
 * Hash: 0xDDC64F5E31EEDAB6 | ApiSet: undefined
 */
export function isWeaponPistol(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponPistol(weaponHash);
}
/**
 * Hash: 0xD955FEE4B87AFA07 | ApiSet: undefined
 */
export function isWeaponOneHanded(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponOneHanded(weaponHash);
}
/**
 * Hash: 0xDDB2578E95EF7138 | ApiSet: undefined
 */
export function isWeaponRepeater(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponRepeater(weaponHash);
}
/**
 * Hash: 0xC212F1D05A8232BB | ApiSet: undefined
 */
export function isWeaponRevolver(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponRevolver(weaponHash);
}
/**
 * Hash: 0x0A82317B7EBFC420 | ApiSet: undefined
 */
export function isWeaponRifle(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponRifle(weaponHash);
}
/**
 * Hash: 0xC75386174ECE95D5 | ApiSet: undefined
 */
export function isWeaponShotgun(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponShotgun(weaponHash);
}
/**
 * Hash: 0x6AD66548840472E5 | ApiSet: undefined
 */
export function isWeaponSniper(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponSniper(weaponHash);
}
/**
 * Hash: 0x5809DBCA0A37C82B | ApiSet: undefined
 */
export function isWeaponSilent(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponSilent(weaponHash);
}
/**
 * Hash: 0x30E7C16B12DA8211 | ApiSet: undefined
 */
export function isWeaponThrowable(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponThrowable(weaponHash);
}
/**
 * Hash: 0x506F1DE1BFC75304 | ApiSet: undefined
 */
export function isWeaponTorch(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponTorch(weaponHash);
}
/**
 * Hash: 0x937C71165CF334B3 | ApiSet: undefined
 */
export function isWeaponValid(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponValid(weaponHash);
}
/**
 * Hash: 0x0556E9D2ECF39D01 | ApiSet: undefined
 */
export function isWeaponTwoHanded(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return IsWeaponTwoHanded(weaponHash);
}
/**
 * Hash: 0xCEF4C65DE502D367 | ApiSet: undefined
 */
export function makePedDropWeapon(ped, p1, attachPoint, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return MakePedDropWeapon(_ped, p1, attachPoint, p3, p4);
}
/**
 * Hash: 0xDA5D3F2C6DD5B5D4 | ApiSet: undefined
 */
export function listenProjectileHitEvents(listen) {
    ListenProjectileHitEvents(listen);
}
/**
 * Hash: 0x79E1E511FF7EFB13 | ApiSet: undefined
 */
export function makePedReload(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return MakePedReload(_ped);
}
/**
 * Hash: 0x000FA7A4A8443AF7 | ApiSet: undefined
 */
export function _0x000FA7A4A8443AF7(p0) {
    Citizen.invokeNative('0x000FA7A4A8443AF7', p0);
}
/**
 * ```
 * _GET_D* - _GET_L*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x0DE0944ECCB3DF5D | ApiSet: undefined
 */
export function _0x0DE0944ECCB3DF5D(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x0DE0944ECCB3DF5D', _ped);
}
/**
 * ```
 * Seems to return true if the passed weapon is some sort of non-lethal melee weapon.
 * Weapon must currently be held/equipped by the ped.
 * ```
 * Hash: 0x07E1C35F0078C3F9 | ApiSet: undefined
 */
export function _0x07E1C35F0078C3F9(ped, weapon) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weapon === 'string')
        weapon = this.getHashKey(weapon);
    return Citizen.invokeNative('0x07E1C35F0078C3F9', _ped, weapon);
}
/**
 * ```
 * Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
 * _A* or _B*
 * ```
 * Hash: 0x14FF0C2545527F9B | ApiSet: undefined
 */
export function _0x14FF0C2545527F9B(horse, weaponHash, ped) {
    const _horse = horse instanceof Ped ? horse.handle() : horse;
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    Citizen.invokeNative('0x14FF0C2545527F9B', _horse, weaponHash, _ped);
}
/**
 * Hash: 0x23BF601A42F329A0 | ApiSet: undefined
 */
export function _0x23BF601A42F329A0(p0) {
    return Citizen.invokeNative('0x23BF601A42F329A0', p0);
}
/**
 * Hash: 0x16D9841A85FA627E | ApiSet: undefined
 */
export function _0x16D9841A85FA627E(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x16D9841A85FA627E', _ped, toggle);
}
/**
 * Hash: 0x3799EFCC3C8CD5E1 | ApiSet: undefined
 */
export function _0x3799EFCC3C8CD5E1(p0) {
    return Citizen.invokeNative('0x3799EFCC3C8CD5E1', p0);
}
/**
 * Hash: 0x183CE355115B6E75 | ApiSet: undefined
 */
export function _0x183CE355115B6E75(p0, p1) {
    Citizen.invokeNative('0x183CE355115B6E75', p0, p1);
}
/**
 * Hash: 0x404514D231DB27A0 | ApiSet: undefined
 */
export function _0x404514D231DB27A0(p0, p1) {
    Citizen.invokeNative('0x404514D231DB27A0', p0, p1);
}
/**
 * ```
 * _SET_A* - _SET_B*
 * ```
 * Hash: 0x2EBF70E1D8C06683 | ApiSet: undefined
 */
export function _0x2EBF70E1D8C06683(ped, p1) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof p1 === 'string')
        p1 = this.getHashKey(p1);
    Citizen.invokeNative('0x2EBF70E1D8C06683', _ped, p1);
}
/**
 * Hash: 0x431240A58484D5D0 | ApiSet: undefined
 */
export function _0x431240A58484D5D0(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x431240A58484D5D0', _ped, toggle);
}
/**
 * Hash: 0x44C8F4908F1B2622 | ApiSet: undefined
 */
export function _0x44C8F4908F1B2622(ped, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return Citizen.invokeNative('0x44C8F4908F1B2622', _ped, ammoHash);
}
/**
 * ```
 * NativeDB Introduced: v1436
 * ```
 * Hash: 0x457B16951AD77C1B | ApiSet: undefined
 */
export function _0x457B16951AD77C1B(p0) {
    Citizen.invokeNative('0x457B16951AD77C1B', p0);
}
/**
 * Hash: 0x45E57FDD531C9477 | ApiSet: undefined
 */
export function _0x45E57FDD531C9477(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x45E57FDD531C9477', _ped, toggle);
}
/**
 * Hash: 0x4820A6939D7CEF28 | ApiSet: undefined
 */
export function _0x4820A6939D7CEF28(p0, p1) {
    Citizen.invokeNative('0x4820A6939D7CEF28', p0, p1);
}
/**
 * ```
 * _GET_NUM_*
 * ```
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x46D42883E873C1D7 | ApiSet: undefined
 */
export function _0x46D42883E873C1D7(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return Citizen.invokeNative('0x46D42883E873C1D7', _ped);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0x486C96A0DCD2BC92 | ApiSet: undefined
 */
export function _0x486C96A0DCD2BC92(p0, p1) {
    return Citizen.invokeNative('0x486C96A0DCD2BC92', p0, p1);
}
/**
 * Hash: 0x4823F13A21F51964 | ApiSet: undefined
 */
export function _0x4823F13A21F51964(p0, p1) {
    return Citizen.invokeNative('0x4823F13A21F51964', p0, p1);
}
/**
 * Hash: 0x5A695BD328586B44 | ApiSet: undefined
 */
export function _0x5A695BD328586B44(p0, p1) {
    return Citizen.invokeNative('0x5A695BD328586B44', p0, p1);
}
/**
 * ```
 * Only used in R* Script fme_escaped_convicts, p0 = 0
 * ```
 * Hash: 0x63B83A526329AFBC | ApiSet: undefined
 */
export function _0x63B83A526329AFBC(p0) {
    Citizen.invokeNative('0x63B83A526329AFBC', p0);
}
/**
 * Hash: 0x495A04CAEC263AF8 | ApiSet: undefined
 */
export function _0x495A04CAEC263AF8(p0, p1) {
    return Citizen.invokeNative('0x495A04CAEC263AF8', p0, p1);
}
/**
 * Hash: 0x58425FCA3D3A2D15 | ApiSet: undefined
 */
export function _0x58425FCA3D3A2D15(p0) {
    return Citizen.invokeNative('0x58425FCA3D3A2D15', p0);
}
/**
 * Hash: 0x641351E9AD103890 | ApiSet: undefined
 */
export function _0x641351E9AD103890(p0, p1) {
    Citizen.invokeNative('0x641351E9AD103890', p0, p1);
}
/**
 * Hash: 0x5B235F24472F2C3B | ApiSet: undefined
 */
export function _0x5B235F24472F2C3B(p0, p1) {
    return Citizen.invokeNative('0x5B235F24472F2C3B', p0, p1);
}
/**
 * Hash: 0x74C2365FDD1BB48F | ApiSet: undefined
 */
export function _0x74C2365FDD1BB48F(p0, p1) {
    Citizen.invokeNative('0x74C2365FDD1BB48F', p0, p1);
}
/**
 * Hash: 0x74C8000FDD1BB222 | ApiSet: undefined
 */
export function _0x74C8000FDD1BB222(p0, p1) {
    return Citizen.invokeNative('0x74C8000FDD1BB222', p0, p1);
}
/**
 * Hash: 0x74C9080FDD1BB48F | ApiSet: undefined
 */
export function _0x74C9080FDD1BB48F(p0, p1) {
    Citizen.invokeNative('0x74C9080FDD1BB48F', p0, p1);
}
/**
 * ```
 * Returns attachPoint
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x65DC4AC5B96614CB | ApiSet: undefined
 */
export function _0x65DC4AC5B96614CB(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return Citizen.invokeNative('0x65DC4AC5B96614CB', weaponHash);
}
/**
 * Hash: 0x74C8000FDD1BB111 | ApiSet: undefined
 */
export function _0x74C8000FDD1BB111(p0, p1) {
    return Citizen.invokeNative('0x74C8000FDD1BB111', p0, p1);
}
/**
 * Hash: 0x74C9080FDD1BB48E | ApiSet: undefined
 */
export function _0x74C9080FDD1BB48E(p0, p1) {
    Citizen.invokeNative('0x74C9080FDD1BB48E', p0, p1);
}
/**
 * Hash: 0x80BB243789008A82 | ApiSet: undefined
 */
export function _0x80BB243789008A82(p0, p1) {
    return Citizen.invokeNative('0x80BB243789008A82', p0, p1);
}
/**
 * Hash: 0x74C90AAACC1DD48F | ApiSet: undefined
 */
export function _0x74C90AAACC1DD48F(p0) {
    Citizen.invokeNative('0x74C90AAACC1DD48F', p0);
}
/**
 * ```
 * Only used in R* SP Script guama3
 * ```
 * Hash: 0x9409C62504A8F9E9 | ApiSet: undefined
 */
export function _0x9409C62504A8F9E9(vehicle, p1) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    Citizen.invokeNative('0x9409C62504A8F9E9', _vehicle, p1);
}
/**
 * ```
 * Only used in R* SP Scripts native_son2, native_son3 and smuggler2
 * Params: p2 = -1
 * ```
 * Hash: 0x8A779706DA5CA3DD | ApiSet: undefined
 */
export function _0x8A779706DA5CA3DD(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0x8A779706DA5CA3DD', _ped, p1, p2);
}
/**
 * ```
 * Returns weaponHash
 * ```
 * Hash: 0x9EEFD670F10656D7 | ApiSet: undefined
 */
export function _0x9EEFD670F10656D7(weaponCollection, weaponGroup) {
    if (typeof weaponCollection === 'string')
        weaponCollection = this.getHashKey(weaponCollection);
    if (typeof weaponGroup === 'string')
        weaponGroup = this.getHashKey(weaponGroup);
    return Citizen.invokeNative('0x9EEFD670F10656D7', weaponCollection, weaponGroup);
}
/**
 * Hash: 0x95CA12E2C68043E5 | ApiSet: undefined
 */
export function _0x95CA12E2C68043E5(p0, p1) {
    return Citizen.invokeNative('0x95CA12E2C68043E5', p0, p1);
}
/**
 * Hash: 0x9F0E1892C7F228A8 | ApiSet: undefined
 */
export function _0x9F0E1892C7F228A8(p0) {
    return Citizen.invokeNative('0x9F0E1892C7F228A8', p0);
}
/**
 * Hash: 0x9CCA3131E6B53C68 | ApiSet: undefined
 */
export function _0x9CCA3131E6B53C68(p0, p1, p2) {
    return Citizen.invokeNative('0x9CCA3131E6B53C68', p0, p1, p2);
}
/**
 * Hash: 0xA769D753922B031B | ApiSet: undefined
 */
export function _0xA769D753922B031B(p0, p1, p2) {
    Citizen.invokeNative('0xA769D753922B031B', p0, p1, p2);
}
/**
 * Hash: 0xAFFD0CCF31F469B8 | ApiSet: undefined
 */
export function _0xAFFD0CCF31F469B8(p0) {
    return Citizen.invokeNative('0xAFFD0CCF31F469B8', p0);
}
/**
 * Hash: 0xA2091482ED42EF85 | ApiSet: undefined
 */
export function _0xA2091482ED42EF85(p0, p1) {
    return Citizen.invokeNative('0xA2091482ED42EF85', p0, p1);
}
/**
 * Hash: 0xB0FB9B196A3D13F0 | ApiSet: undefined
 */
export function _0xB0FB9B196A3D13F0(p0, p1, p2) {
    Citizen.invokeNative('0xB0FB9B196A3D13F0', p0, p1, p2);
}
/**
 * Hash: 0xA3716A77DCF17424 | ApiSet: undefined
 */
export function _0xA3716A77DCF17424(p0, p1, p2) {
    Citizen.invokeNative('0xA3716A77DCF17424', p0, p1, p2);
}
/**
 * Hash: 0xABC18A28BAD4B46F | ApiSet: undefined
 */
export function _0xABC18A28BAD4B46F(p0, p1) {
    return Citizen.invokeNative('0xABC18A28BAD4B46F', p0, p1);
}
/**
 * Hash: 0xC5899C4CD2E2495D | ApiSet: undefined
 */
export function _0xC5899C4CD2E2495D(p0) {
    Citizen.invokeNative('0xC5899C4CD2E2495D', p0);
}
/**
 * Hash: 0xB832F1A686B9B810 | ApiSet: undefined
 */
export function _0xB832F1A686B9B810(p0, p1, p2) {
    Citizen.invokeNative('0xB832F1A686B9B810', p0, p1, p2);
}
/**
 * Hash: 0xD2209866B0CB72EA | ApiSet: undefined
 */
export function _0xD2209866B0CB72EA(p0, p1) {
    return Citizen.invokeNative('0xD2209866B0CB72EA', p0, p1);
}
/**
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0xBC9444F2FF94A9C0 | ApiSet: undefined
 */
export function _0xBC9444F2FF94A9C0(p0) {
    return Citizen.invokeNative('0xBC9444F2FF94A9C0', p0);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xD4C6E24D955FF061 | ApiSet: undefined
 */
export function _0xD4C6E24D955FF061(p0) {
    Citizen.invokeNative('0xD4C6E24D955FF061', p0);
}
/**
 * Hash: 0xBFCA7AFABF9D7967 | ApiSet: undefined
 */
export function _0xBFCA7AFABF9D7967(p0, p1) {
    return Citizen.invokeNative('0xBFCA7AFABF9D7967', p0, p1);
}
/**
 * Hash: 0xD63B4BA3A02A99E0 | ApiSet: undefined
 */
export function _0xD63B4BA3A02A99E0(p0, p1) {
    Citizen.invokeNative('0xD63B4BA3A02A99E0', p0, p1);
}
/**
 * Hash: 0xEA522F991E120D45 | ApiSet: undefined
 */
export function _0xEA522F991E120D45(p0) {
    return Citizen.invokeNative('0xEA522F991E120D45', p0);
}
/**
 * Hash: 0xD53846B9C931C181 | ApiSet: undefined
 */
export function _0xD53846B9C931C181(p0, p1, p2) {
    Citizen.invokeNative('0xD53846B9C931C181', p0, p1, p2);
}
/**
 * Hash: 0xECBB26529A737EF6 | ApiSet: undefined
 */
export function _0xECBB26529A737EF6(p0) {
    Citizen.invokeNative('0xECBB26529A737EF6', p0);
}
/**
 * Hash: 0xE9B3FEC825668291 | ApiSet: undefined
 */
export function _0xE9B3FEC825668291(p0, p1, p2) {
    Citizen.invokeNative('0xE9B3FEC825668291', p0, p1, p2);
}
/**
 * Hash: 0xEC97101A8F311282 | ApiSet: undefined
 */
export function _0xEC97101A8F311282(p0) {
    return Citizen.invokeNative('0xEC97101A8F311282', p0);
}
/**
 * Hash: 0xF08D8FEB455F2C8C | ApiSet: undefined
 */
export function _0xF08D8FEB455F2C8C(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    Citizen.invokeNative('0xF08D8FEB455F2C8C', _ped, toggle);
}
/**
 * Hash: 0xF252A85B8F3F8C58 | ApiSet: undefined
 */
export function _0xF252A85B8F3F8C58(weaponCollection, dualwieldVariant) {
    if (typeof weaponCollection === 'string')
        weaponCollection = this.getHashKey(weaponCollection);
    if (typeof dualwieldVariant === 'string')
        dualwieldVariant = this.getHashKey(dualwieldVariant);
    return Citizen.invokeNative('0xF252A85B8F3F8C58', weaponCollection, dualwieldVariant);
}
/**
 * Hash: 0xF2F585411E748B9C | ApiSet: undefined
 */
export function _0xF2F585411E748B9C(p0, p1) {
    return Citizen.invokeNative('0xF2F585411E748B9C', p0, p1);
}
/**
 * ```
 * Returns weaponHash
 * ```
 * Hash: 0xF8204EF17410BF43 | ApiSet: undefined
 */
export function _0xF8204EF17410BF43(weaponGroupHash, p1, p2, p3) {
    if (typeof weaponGroupHash === 'string')
        weaponGroupHash = this.getHashKey(weaponGroupHash);
    return Citizen.invokeNative('0xF8204EF17410BF43', weaponGroupHash, p1, p2, p3);
}
/**
 * Hash: 0xFDCEDFB0577A390D | ApiSet: undefined
 */
export function _0xFDCEDFB0577A390D(p0, p1) {
    return Citizen.invokeNative('0xFDCEDFB0577A390D', p0, p1);
}
/**
 * Hash: 0xDF4A3404D022ADDE | ApiSet: undefined
 */
export function refillAmmoInClip(ped, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RefillAmmoInClip(_ped, p2);
}
/**
 * Hash: 0x0A2AB7B7ABC055F4 | ApiSet: undefined
 */
export function refillAmmoInCurrentPedWeapon(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return RefillAmmoInCurrentPedWeapon(_ped);
}
/**
 * Hash: 0x1B83C0DEEBCBB214 | ApiSet: undefined
 */
export function removeAllPedAmmo(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemoveAllPedAmmo(_ped);
}
/**
 * ```
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 * removeReason: see REMOVE_WEAPON_FROM_PED
 * ```
 * Hash: 0xF4823C813CB8277D | ApiSet: undefined
 */
export function removeAmmoFromPed(ped, weaponHash, amount, removeReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    RemoveAmmoFromPed(_ped, weaponHash, amount, removeReason);
}
/**
 * Hash: 0xC3896D03E2852236 | ApiSet: undefined
 */
export function removeWeaponAsset(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    RemoveWeaponAsset(weaponHash);
}
/**
 * Hash: 0xF25DF915FA38C5F3 | ApiSet: undefined
 */
export function removeAllPedWeapons(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    RemoveAllPedWeapons(_ped, p1, p2);
}
/**
 * Hash: 0xF7D82B0D66777611 | ApiSet: undefined
 */
export function removeWeaponComponentFromWeaponObject(weaponObject, component) {
    if (typeof component === 'string')
        component = this.getHashKey(component);
    RemoveWeaponComponentFromWeaponObject(weaponObject, component);
}
/**
 * ```
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 * removeReason: see REMOVE_WEAPON_FROM_PED
 * ```
 * Hash: 0xB6CFEC32E3742779 | ApiSet: undefined
 */
export function removeAmmoFromPedByType(ped, ammoHash, amount, removeReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    RemoveAmmoFromPedByType(_ped, ammoHash, amount, removeReason);
}
/**
 * Hash: 0x19F70C4D80494FF8 | ApiSet: undefined
 */
export function removeWeaponComponentFromPed(ped, componentHash, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof componentHash === 'string')
        componentHash = this.getHashKey(componentHash);
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    RemoveWeaponComponentFromPed(_ped, componentHash, weaponHash);
}
/**
 * Hash: 0x72D4CB5DB927009C | ApiSet: undefined
 */
export function requestWeaponAsset(weaponHash, p1, p2) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    RequestWeaponAsset(weaponHash, p1, p2);
}
/**
 * ```
 * removeReason:
 * enum eRemoveItemReason : Hash
 * {
 * REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
 * REMOVE_REASON_COALESCE = 0x2ABE393E,
 * REMOVE_REASON_DEBUG = 0xA07362E6,
 * REMOVE_REASON_DEFAULT = 0xF77DE93D,
 * REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
 * REMOVE_REASON_DROPPED = 0xEC7FB5D5,
 * REMOVE_REASON_DUPLICATE = 0x19047132,
 * REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
 * REMOVE_REASON_GIVEN = 0xAD5377D4,
 * REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
 * REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
 * REMOVE_REASON_LOADOUT = 0x1B94E3BA,
 * REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
 * REMOVE_REASON_SOLD = 0x76C4B482,
 * REMOVE_REASON_USED = 0x2188E0A3,
 * REMOVE_REASON_USE_FAILED = 0x671F9EAD
 * };
 * ```
 * Hash: 0x4899CB088EDF59B8 | ApiSet: undefined
 */
export function removeWeaponFromPed(ped, weaponHash, p2, removeReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    RemoveWeaponFromPed(_ped, weaponHash, p2, removeReason);
}
/**
 * ```
 * emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
 * ```
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0xCBCFFF805F1B4596 | ApiSet: undefined
 */
export function setActiveGunSpinningEquipKitEmoteTwirl(ped, emote) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof emote === 'string')
        emote = this.getHashKey(emote);
    SetActiveGunSpinningEquipKitEmoteTwirl(_ped, emote);
}
/**
 * ```
 * spinHash can be -1, 0 to disable
 * ```
 * Hash: 0x01F661BB9C71B465 | ApiSet: undefined
 */
export function setActiveGunSpinningKitEmoteTwirl(ped, weaponEmoteTrickType, spin) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof spin === 'string')
        spin = this.getHashKey(spin);
    SetActiveGunSpinningKitEmoteTwirl(_ped, weaponEmoteTrickType, spin);
}
/**
 * ```
 * NativeDB Introduced: v1311
 * ```
 * Hash: 0x51C3B71591811485 | ApiSet: undefined
 */
export function removeWeaponFromPedByGuid(ped, removeReason) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof removeReason === 'string')
        removeReason = this.getHashKey(removeReason);
    return RemoveWeaponFromPedByGuid(_ped, removeReason);
}
/**
 * ```
 * Appears to just send specified weapon to your horse holster without having to be close
 * However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
 * ```
 * Hash: 0xE9BD19F8121ADE3E | ApiSet: undefined
 */
export function sendWeaponToInventory(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SendWeaponToInventory(_ped, weaponHash);
}
/**
 * Hash: 0x78030C7867D8B9B6 | ApiSet: undefined
 */
export function setAllowAnyWeaponDrop(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAllowAnyWeaponDrop(_ped, toggle);
}
/**
 * Hash: 0x83B8D50EB9446BBA | ApiSet: undefined
 */
export function setAllowDualWield(ped, allow) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetAllowDualWield(_ped, allow);
}
/**
 * Hash: 0xDCD2A934D65CB497 | ApiSet: undefined
 */
export function setAmmoInClip(ped, weaponHash, ammo) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return SetAmmoInClip(_ped, weaponHash, ammo);
}
/**
 * ```
 * turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
 * ```
 * Hash: 0xBDDA0C290C228159 | ApiSet: undefined
 */
export function setAmmoInTurret(vehicle, turretHash, ammo) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    if (typeof turretHash === 'string')
        turretHash = this.getHashKey(turretHash);
    SetAmmoInTurret(_vehicle, turretHash, ammo);
}
/**
 * Hash: 0xCC9C4393523833E2 | ApiSet: undefined
 */
export function setAmmoTypeForPedWeapon(ped, weaponHash, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    SetAmmoTypeForPedWeapon(_ped, weaponHash, ammoHash);
}
/**
 * Hash: 0xEBE46B501BC3FBCF | ApiSet: undefined
 */
export function setAmmoTypeForPedWeaponInventory(ped, ammoHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoHash === 'string')
        ammoHash = this.getHashKey(ammoHash);
    return SetAmmoTypeForPedWeaponInventory(_ped, ammoHash);
}
/**
 * Hash: 0x75C55983C2C39DAA | ApiSet: undefined
 */
export function setCurrentPedVehicleWeapon(ped, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return SetCurrentPedVehicleWeapon(_ped, weaponHash);
}
/**
 * ```
 * attachPoint:
 * enum eWeaponAttachPoint
 * {
 * WEAPON_ATTACH_POINT_INVALID = -1,
 * WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
 * WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
 * WEAPON_ATTACH_POINT_PISTOL_R = 2,
 * MAX_HAND_WEAPON_ATTACH_POINTS = 2,
 * WEAPON_ATTACH_POINT_PISTOL_L = 3,
 * WEAPON_ATTACH_POINT_KNIFE = 4,
 * WEAPON_ATTACH_POINT_LASSO = 5,
 * WEAPON_ATTACH_POINT_THROWER = 6,
 * WEAPON_ATTACH_POINT_BOW = 7,
 * WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
 * WEAPON_ATTACH_POINT_RIFLE = 9,
 * WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
 * WEAPON_ATTACH_POINT_LANTERN = 11,
 * WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
 * WEAPON_ATTACH_POINT_MELEE = 13,
 * MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
 * WEAPON_ATTACH_POINT_HIP = 14,
 * WEAPON_ATTACH_POINT_BOOT = 15,
 * WEAPON_ATTACH_POINT_BACK = 16,
 * WEAPON_ATTACH_POINT_FRONT = 17,
 * WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
 * WEAPON_ATTACH_POINT_LEFTBREAST = 19,
 * WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
 * WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
 * WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
 * WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
 * WEAPON_ATTACH_POINT_SATCHEL = 24,
 * WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
 * WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
 * WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
 * WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
 * MAX_WEAPON_ATTACH_POINTS = 29
 * };
 * ```
 * Hash: 0xADF692B254977C0C | ApiSet: undefined
 */
export function setCurrentPedWeapon(ped, weaponHash, equipNow, attachPoint, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SetCurrentPedWeapon(_ped, weaponHash, equipNow, attachPoint, p4, p5);
}
/**
 * ```
 * Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
 * ```
 * Hash: 0x12FB95FE3D579238 | ApiSet: undefined
 */
export function setCurrentPedWeaponByGuid(ped, p2, p3, p4, p5) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetCurrentPedWeaponByGuid(_ped, p2, p3, p4, p5);
}
/**
 * Hash: 0x5230D3F6EE56CFE6 | ApiSet: undefined
 */
export function setForceCurrentWeaponIntoCockedState(ped, attachPoint) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetForceCurrentWeaponIntoCockedState(_ped, attachPoint);
}
/**
 * Hash: 0x739B9C6D0E7F7F93 | ApiSet: undefined
 */
export function setInstantlyEquipWeaponPickups(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetInstantlyEquipWeaponPickups(_ped, toggle);
}
/**
 * Hash: 0xBE711B14A159E84F | ApiSet: undefined
 */
export function setForceAutoEquip(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetForceAutoEquip(_ped, toggle);
}
/**
 * Hash: 0x4F806A6CFED89468 | ApiSet: undefined
 */
export function setPedAllWeaponsVisibility(ped, visible) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAllWeaponsVisibility(_ped, visible);
}
/**
 * ```
 * _STOP_* - _TEST_*
 * ```
 * ```
 * NativeDB Introduced: v1355
 * ```
 * Hash: 0x408CF580C5E96D49 | ApiSet: undefined
 */
export function setGunSpinningInventorySlotIdActivate(ped, emoteType) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetGunSpinningInventorySlotIdActivate(_ped, emoteType);
}
/**
 * Hash: 0x5FD1E1F011E76D7E | ApiSet: undefined
 */
export function setPedAmmoByType(ped, ammoType, ammo) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof ammoType === 'string')
        ammoType = this.getHashKey(ammoType);
    SetPedAmmoByType(_ped, ammoType, ammo);
}
/**
 * Hash: 0x14E56BC5B5DB6A19 | ApiSet: undefined
 */
export function setPedAmmo(ped, weaponHash, ammo) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SetPedAmmo(_ped, weaponHash, ammo);
}
/**
 * Hash: 0x208A1888007FC0E6 | ApiSet: undefined
 */
export function setPedDropsInventoryWeapon(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SetPedDropsInventoryWeapon(_ped, weaponHash, xOffset, yOffset, zOffset, ammoCount);
}
/**
 * Hash: 0xA4EFEF9440A5B0EF | ApiSet: undefined
 */
export function setPedAmmoToDrop(ped, p1, p2) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedAmmoToDrop(_ped, p1, p2);
}
/**
 * Hash: 0x476AE72C1D19D1A8 | ApiSet: undefined
 */
export function setPedDropsWeaponsWhenDead(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedDropsWeaponsWhenDead(_ped, toggle);
}
/**
 * Hash: 0x3EDCB0505123623B | ApiSet: undefined
 */
export function setPedInfiniteAmmo(ped, toggle, weaponHash) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    SetPedInfiniteAmmo(_ped, toggle, weaponHash);
}
/**
 * ```
 * attachPoint: see SET_CURRENT_PED_WEAPON
 * ```
 * Hash: 0x67E21ACC5C0C970C | ApiSet: undefined
 */
export function setPedWeaponAttachPointVisibility(ped, attachPoint, visible) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedWeaponAttachPointVisibility(_ped, attachPoint, visible);
}
/**
 * Hash: 0x0725A4CCFDED9A70 | ApiSet: undefined
 */
export function setPedCurrentWeaponVisible(ped, visible, deselectWeapon, p3, p4) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedCurrentWeaponVisible(_ped, visible, deselectWeapon, p3, p4);
}
/**
 * ```
 * NativeDB Introduced: v1232
 * ```
 * Hash: 0xEC1F85DA51D3D6C4 | ApiSet: undefined
 */
export function setPlayerPedQuickSwapWeaponByGuid(ped) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    return SetPlayerPedQuickSwapWeaponByGuid(_ped);
}
/**
 * Hash: 0xFBAA1E06B6BCA741 | ApiSet: undefined
 */
export function setPedInfiniteAmmoClip(ped, toggle) {
    const _ped = ped instanceof Ped ? ped.handle() : ped;
    SetPedInfiniteAmmoClip(_ped, toggle);
}
/**
 * Hash: 0x194D877FC5597B7D | ApiSet: undefined
 */
export function setVehicleWeaponHeading(vehicle, seatIndex, heading, p3) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleWeaponHeading(_vehicle, seatIndex, heading, p3);
}
/**
 * Hash: 0x56CB3B4305A4F7CE | ApiSet: undefined
 */
export function setVehicleWeaponHeadingLimits(vehicle, p1, minHeading, maxHeading) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    SetVehicleWeaponHeadingLimits(_vehicle, p1, minHeading, maxHeading);
}
/**
 * Hash: 0xBF5987E1CDE63501 | ApiSet: undefined
 */
export function setVehicleWeaponHeadingLimits2(vehicle, p1, minHeading, maxHeading) {
    const _vehicle = vehicle instanceof Entity ? vehicle.handle() : vehicle;
    return SetVehicleWeaponHeadingLimits2(_vehicle, p1, minHeading, maxHeading);
}
/**
 * ```
 * Related to weapon visual damage, not actual damage.
 * ```
 * Hash: 0xE22060121602493B | ApiSet: undefined
 */
export function setWeaponDamage(weaponObject, level, p2) {
    SetWeaponDamage(weaponObject, level, p2);
}
/**
 * Hash: 0x812CE61DEBCAB948 | ApiSet: undefined
 */
export function setWeaponDirt(weaponObject, level, p2) {
    SetWeaponDirt(weaponObject, level, p2);
}
/**
 * Hash: 0xA7A57E89E965D839 | ApiSet: undefined
 */
export function setWeaponDegradation(weaponObject, level) {
    SetWeaponDegradation(weaponObject, level);
}
/**
 * Hash: 0xC3544AD0522E69B4 | ApiSet: undefined
 */
export function setWeaponScale(weaponObject, scale) {
    SetWeaponScale(weaponObject, scale);
}
/**
 * ```
 * every other level will have the max value of (brokeLevel - threshold)
 * ```
 * Hash: 0xD4071EFC83794B2F | ApiSet: undefined
 */
export function setWeaponLevelThreshold(weaponObject, threshold) {
    SetWeaponLevelThreshold(weaponObject, threshold);
}
/**
 * Hash: 0x2C83212A7AA51D3D | ApiSet: undefined
 */
export function shouldWeaponBeDiscardedWhenSwapped(weaponHash) {
    if (typeof weaponHash === 'string')
        weaponHash = this.getHashKey(weaponHash);
    return ShouldWeaponBeDiscardedWhenSwapped(weaponHash);
}
/**
 * Hash: 0xA9EF4AD10BDDDB57 | ApiSet: undefined
 */
export function setWeaponSoot(weaponObject, level, p2) {
    SetWeaponSoot(weaponObject, level, p2);
}
/**
 * ```
 * Returns name hash, see common:/data/levels/rdr3/mapzones.meta
 * type (-1 matches any type):
 * class CMapZone
 * {
 * public:
 * enum class Type
 * {
 * STATE,
 * TOWN,
 * LAKE,
 * RIVER,
 * OIL_SPILL,
 * SWAMP,
 * OCEAN,
 * CREEK,
 * POND,
 * GLACIER,
 * DISTRICT,
 * TEXT_PRINTED,
 * TEXT_WRITTEN
 * };
 * };
 * https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
 * ```
 * Hash: 0x43AD8FC02B429D33 | ApiSet: undefined
 */
export function getMapZoneAtCoords(position, type) {
    return GetMapZoneAtCoords(position.x, position.y, position.z, type);
}
/**
 * ```
 * Returns the zone's name hash if its type matches one of the following:
 * - LAKE
 * - RIVER
 * - OIL_SPILL
 * - SWAMP
 * - OCEAN
 * - CREEK
 * - POND
 * - GLACIER
 * ```
 * Hash: 0x5BA7A68A346A5A91 | ApiSet: undefined
 */
export function getWaterMapZoneAtCoords(position) {
    return GetWaterMapZoneAtCoords(position.x, position.y, position.z);
}
export * from "@risinglife/redm-shared";
