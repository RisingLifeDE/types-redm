import { Vector3, Entity, Ped, Player, Vehicle, Object } from '@risinglife/redm-shared';
export declare namespace aicoverpoint {
    /**
     * No comment provided
     *
     * Hash: 0x4972A022AE6DAFA1 | Since: 1207
     */
    function taskEnterCover(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BC4A6D92D140112 | Since: 1207
     */
    function taskExitCover(ped: number | Ped): void;
    /**
     * weaponHash can also be -1
     *
     * Hash: 0x140B3CB1D424A945 | Since: 1207
     */
    function _0x140B3CB1D424A945(ped: number | Ped, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C7A9C2C953128FE | Since: 1207
     */
    function _0x3C7A9C2C953128FE(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x53E4D0C079CA6855 | Since: 1207
     */
    function _0x53E4D0C079CA6855(handle: number): number;
    /**
     * coverLayer: see levels_0/levels/rdr3/coverlayers
     *
     * Hash: 0x64340DC208D671D5 | Since: 1207
     */
    function _0x64340DC208D671D5(coverLayer: string): void;
    /**
     * args: f_0 = Volume Handle
     * f_1 = integer (?) (only the number 1 is ever used here, or is not used at all)
     * f_2 = integer (-1 to 32 in R* Scripts)
     *
     * Hash: 0x733077295AB51304 | Since: 1207
     */
    function addCoverBlockingArea(args: any): void;
    /**
     * coverLayer: see levels_0/levels/rdr3/coverlayers
     *
     * Hash: 0x7A1FDCF35EAA140F | Since: 1207
     */
    function _0x7A1FDCF35EAA140F(coverLayer: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x957D7E750216D74B | Since: 1207
     */
    function _0x957D7E750216D74B(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xEBA51A294C73292E | Since: 1207
     */
    function _0xEBA51A294C73292E(args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x975BD6351648935F | Since: 1207
     */
    function addScriptedCoverPoint(data: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x8CBE916CFC64AD5C | Since: 1207
     */
    function areLoadCoverAnimsLoaded(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC276FE69DDA22BAD | Since: 1207
     */
    function doesCoverPointExist(handle: number): boolean;
    /**
     * 1 = In cover while crouched
     * 2 = In cover while standing
     * 3 = Not in cover
     *
     * Hash: 0x5F5B1B7E8E8F94C6 | Since: 1207
     */
    function getCoverPointStateFromPed(ped: number | Ped): number;
    /**
     * Makes ped flinch (if in cover) like they have been shot at
     *
     * Hash: 0x2A31D13C5F021D0D | Since: 1207
     */
    function requestFlinchCoverAnim(ped: number | Ped): void;
    /**
     * Stops running cover anims and releases them
     * _STOP_RENDERING_* - _STOP_SCRIPTED*
     *
     * Hash: 0x1A7A802B2301EDC0 | Since: 1207
     */
    function stopRunningCoverAnims(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x89783FDDF079C88D | Since: 1207
     */
    function taskAiSeekCoverToCoverPoint(args: any): void;
}
export declare namespace aitransport {
    /**
     * flagId: see SET_TRANSPORT_CONFIG_FLAG
     *
     * Hash: 0xF382C92CCC1CCDBC | Since: 1207
     */
    function getTransportConfigFlag(transportEntity: number | Entity, flagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x619E63980BFC0096 | Since: 1207
     */
    function isPedEnteringTransport(ped: number | Ped, transportEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x660639BC60157048 | Since: 1207
     */
    function isPedExitingTransport(ped: number | Ped, transportEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8886D83A430537FD | Since: 1207
     */
    function setPedOffTransportSeat(ped: number | Ped, flags: number): void;
    /**
     * seat: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0xE588B5A8A005CB5E | Since: 1207
     */
    function setPedOnTransportSeat(ped: number | Ped, transportEntity: number | Entity, seat: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD0660C997DE94FD | Since: 1207
     */
    function setTransportAccessibleSeatFlags(transportEntity: number | Entity, flags: number): void;
    /**
     * flagId:
     * enum eTransportConfigFlags
     * {
     * TCF_NotConsideredForEntryByLocalPlayer,
     * TCF_0xB78D6624,
     * TCF_0xA9700425,
     * TCF_0x8D7E4641,
     * TCF_0xF24BAA1F,
     * TCF_0x63B77935,
     * TCF_NotConsideredForEntryByAllPlayers,
     * TCF_0xD17A2AFD,
     * TCF_0xD4E4FDD5,
     * TCF_0x8227C929,
     * TCF_0x812C1070,
     * TCF_0x0E1AB26F,
     * TCF_0xBF4EC863,
     * TCF_0x75660C36,
     * TCF_0xA2539E20,
     * TCF_0x9162C633,
     * TCF_DisableHonorModifiers,
     * TCF_0xF9E71CB6,
     * TCF_0x933ECD3F,
     * TCF_0x18513A34
     * };
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
     *
     * Hash: 0xBA8818212633500A | Since: 1207
     */
    function setTransportConfigFlag(transportEntity: number | Entity, flagId: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAEE3ADD08829CB6F | Since: 1207
     */
    function taskEnterTransport(args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xC273A5B8488F7838 | Since: 1207
     */
    function taskExitTransport(args: any): void;
    /**
     * _SET_TRANSPORT_*
     *
     * Hash: 0x4248AB2EEB3C75AD | Since: 1207
     */
    function _0x4248AB2EEB3C75AD(transportEntity: number | Entity, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B6C9A43F7D9109B | Since: 1207
     */
    function _0x4B6C9A43F7D9109B(): void;
    /**
     * _CLEAR_A*
     *
     * Hash: 0x5639FBEA922788DA | Since: 1207
     */
    function _0x5639FBEA922788DA(transportEntity: number | Entity): void;
    /**
     * _SET_TRANSPORT_*
     *
     * Hash: 0x8C8371EDFAF014A0 | Since: 1207
     */
    function _0x8C8371EDFAF014A0(ped: number | Ped): void;
    /**
     * _SET_TRANSPORT_*
     *
     * Hash: 0xF8C20282B237E3F7 | Since: 1207
     */
    function _0xF8C20282B237E3F7(ped: number | Ped): void;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0xFFEC4B0A1A3ED515 | Since: 1207
     */
    function getPedInTransportSeat(transportEntity: number | Entity, seatIndex: number): number;
    /**
     * See _SET_TRANSPORT_USAGE_FLAGS
     *
     * Hash: 0xE195C5A82156321D | Since: 1207
     */
    function getTransportUsageFlags(transportEntity: number | Entity, flags: number): any;
    /**
     * Checks if ped is placed on target transportEntity
     *
     * Hash: 0x159EF5B6EDCE00E8 | Since: 1207
     */
    function isPedOnTransportEntity(ped: number | Ped, transportEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC44F405A6B98D03 | Since: 1207
     */
    function isPedOnTransportSeat(ped: number | Ped): boolean;
    /**
     * Called together with IS_VEHICLE_SEAT_FREE
     *
     * Hash: 0x43FF27FC1829C202 | Since: 1207
     */
    function isTransportSeatFree(transportEntity: number | Entity, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E2E06023D07631E | Since: 1207
     */
    function isTransportSeatOccupied(transportEntity: number | Entity, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67F7CEAC2391E114 | Since: 1207
     */
    function setAiCanUseTransport(transportEntity: number | Entity, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7079F4C72896756 | Since: 1207
     */
    function setPedUseTransportSeatPreference(ped: number | Ped, transportEntity: number | Entity, preferenceSlot: number, seatIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x13F138225C202F66 | Since: 1207
     */
    function setTransportPrioritySeat(transportEntity: number | Entity, seatIndex: number): void;
    /**
     * enum eTransportUsageFlags
     * {
     * TUF_INVALID = 0,
     * TUF_ALLOW_DRIVER_ME = (1 << 0),
     * TUF_ALLOW_DRIVER_GANG = (1 << 1),
     * TUF_ALLOW_DRIVER_CREW = (1 << 2),
     * TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
     * TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
     * TUF_ALLOW_PASSENGER_ME = (1 << 5),
     * TUF_ALLOW_PASSENGER_GANG = (1 << 6),
     * TUF_ALLOW_PASSENGER_CREW = (1 << 7),
     * TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
     * TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
     * TUF_ALLOW_ACCESS_AI = (1 << 10)
     * };
     *
     * Hash: 0xE2487779957FE897 | Since: 1207
     */
    function setTransportUsageFlags(transportEntity: number | Entity, flags: number): void;
}
export declare namespace animscene {
    /**
     * No comment provided
     *
     * Hash: 0x718CF1328D20C2B3 | Since: 1207
     */
    function abortAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC418495DBA327A1 | Since: 1207
     */
    function attachAnimSceneToEntity(animScene: any, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C0B105C3F30B88D | Since: 1207
     */
    function attachAnimSceneToEntityPreservingLocation(animScene: any, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B70811D3BF75DB9 | Since: 1207
     */
    function blockAnimSceneFadingNextFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x661B8683611B9B97 | Since: 1207
     */
    function checkOwnershipOfAnimScene(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x73616E64696C616E | Since: 1207
     */
    function couldAnimSceneEntityReachExitNextFrame(animScene: any, entityName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6843A1AA3A336DFF | Since: 1207
     */
    function detachAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2507C4948C83D2E | Since: 1207
     */
    function detachAnimScenePreservingLocation(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x25557E324489393C | Since: 1207
     */
    function doesAnimSceneExist(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA41351EA2A18A0AD | Since: 1207
     */
    function fadeAnimSceneAudioIn(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x323E3AD772BA5D57 | Since: 1207
     */
    function fadeAnimSceneAudioOut(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x07A6F6447ECA9B64 | Since: 1207
     */
    function getAnimSceneBool(animScene: any, name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4822A65D5AF64E69 | Since: 1207
     */
    function getAnimSceneCurrentActiveCameraCount(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x8398438D8F14F56D | Since: 1207
     */
    function getAnimSceneEntityLocationData(animScene: any, entityName: string, matrix: Vector3, playbackListName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCC24CB07F60B496E | Since: 1207
     */
    function getAnimSceneFloat(animScene: any, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B7277484CC095FD | Since: 1207
     */
    function getAnimSceneInt(animScene: any, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xADF1D53F3B1FE0A7 | Since: 1207
     */
    function getAnimSceneOrigin(animScene: any, position: Vector3, rotation: Vector3, order: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FBC3F51BF12DFBF | Since: 1207
     */
    function getAnimScenePhase(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xF94692EB9DC15D74 | Since: 1207
     */
    function hasAnimSceneExited(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB89FCFF19DAFFF28 | Since: 1207
     */
    function hasEntityExitedAnimScene(animScene: any, entityName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCDC5512A407CF08D | Since: 1207
     */
    function isAnimSceneExitingThisFrame(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD8254CB2C586412B | Since: 1207
     */
    function isAnimSceneFinished(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D81E7824B7753F7 | Since: 1207
     */
    function isAnimSceneInSection(animScene: any, sectionName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x477122B8D05E7968 | Since: 1207
     */
    function isAnimSceneLoaded(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95531A4A20CCE7BC | Since: 1207
     */
    function isAnimSceneMetadataLoaded(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCBFC7725DE6CE2E0 | Since: 1207
     */
    function isAnimSceneRunning(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x005E6F28DD7ED58D | Since: 1207
     */
    function isEntityExitingAnimSceneThisFrame(animScene: any, entityName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3AB6C7B0BB0DF4B1 | Since: 1207
     */
    function isEntityPlayingAnimScene(entity: number | Entity, animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF068580194D9DC7 | Since: 1207
     */
    function loadAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BF96692C67F3E53 | Since: 1207
     */
    function removeAnimSceneEntity(animScene: any, entityName: string, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF7B5144E25CD3FE | Since: 1207
     */
    function requestAnimScenePlayList(animScene: any, playlistName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8FDF221F13537936 | Since: 1207
     */
    function resetAnimScene(animScene: any, playbackListName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E1BA705F63C1925 | Since: 1207
     */
    function resumeAnimSceneFromLastCheckpoint(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x519E96C2C68B404B | Since: 1207
     */
    function setAnimSceneBool(animScene: any, name: string, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B720AD451CA2AB3 | Since: 1207
     */
    function setAnimSceneEntity(animScene: any, entityName: string, entity: number | Entity, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BC5104E68CBEFE8 | Since: 1207
     */
    function setAnimSceneFloat(animScene: any, name: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A379D2166CF5B92 | Since: 1207
     */
    function setAnimSceneInt(animScene: any, name: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x020894BF17A02EF2 | Since: 1207
     */
    function setAnimSceneOrigin(animScene: any, pos: Vector3, rot: Vector3, order: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6824B7D24DC0CE0 | Since: 1207
     */
    function setAnimScenePaused(animScene: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB5E7CAB074D6B84 | Since: 1207
     */
    function setAnimScenePlaybackList(animScene: any, playbackListName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x15598CFB25F3DC7E | Since: 1207
     */
    function setAnimScenePlayList(animScene: any, playlistName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x75820B801CFF262A | Since: 1207
     */
    function setAnimSceneRate(animScene: any, rate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF4D94AF761768700 | Since: 1207
     */
    function startAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7A4C571E572D237 | Since: 1207
     */
    function takeOwnershipOfAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B85B3CF9197AEDF | Since: 1207
     */
    function triggerAnimSceneSkip(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF324E9550A394D5 | Since: 1207
     */
    function wasAnimSceneSkipped(animScene: any): boolean;
    /**
     * Used in SP R* Scripts only
     * Params: p1 = 2B-LowHonor, 2A-HighHonor
     *
     * Hash: 0x1407F5115FB9583E | Since: 1207
     */
    function _0x1407F5115FB9583E(animScene: any): boolean;
    /**
     * Used in braithwaites2 SP R* Scripts only
     * _A*
     *
     * Hash: 0x1AD896BF43619551 | Since: 1207
     */
    function _0x1AD896BF43619551(): void;
    /**
     * Used in SP R* Scripts only
     * _IS_ANIM_SCENE_P*
     *
     * Hash: 0x1C5D33A4293E6DDE | Since: 1207
     */
    function _0x1C5D33A4293E6DDE(animScene: any, phaseName: string): boolean;
    /**
     * Used in SP R* Scripts only
     * _IS_PED_* - _IS_SC*
     *
     * Hash: 0x2DB524750DC41ED4 | Since: 1207
     */
    function _0x2DB524750DC41ED4(): boolean;
    /**
     * p2: MINIGAME_GET_SECONDARY_VOICE_STRING
     * _SET_*
     *
     * Hash: 0x3641FCD53E59B335 | Since: 1207
     */
    function _0x3641FCD53E59B335(mgmHandle: number, ped: number | Ped, secondaryVoiceString: string): void;
    /**
     * Used in SP R* Scripts only
     * _IS_*
     *
     * Hash: 0x3B393716C3FD8237 | Since: 1207
     */
    function _0x3B393716C3FD8237(ped: number | Ped): boolean;
    /**
     * Used in Script Function CUTSCENE_MANAGE_SKIP
     * _CHECK_* (?)
     *
     * Hash: 0x4B85B3CF91972222 | Since: 1207
     */
    function _0x4B85B3CF91972222(animScene: any): boolean;
    /**
     * Used in SP R* Scripts only
     * _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
     *
     * Hash: 0x5D7BFDA2290B4E39 | Since: 1207
     */
    function _0x5D7BFDA2290B4E39(): boolean;
    /**
     * Only used in tg_p R* Script
     * Returns true when mgm event success
     * _PREPARE_* - _REGISTER_*
     *
     * Hash: 0x61B2AAEF645DDAF0 | Since: 1207
     */
    function _0x61B2AAEF645DDAF0(mgmEventHandle: number, seatId: number): boolean;
    /**
     * Used in SP R* Scripts only
     * _CO* - _CR*
     *
     * Hash: 0x73616E64696C132E | Since: 1207
     */
    function _0x73616E64696C132E(animScene: any): boolean;
    /**
     * Used in SP R* Scripts only
     * _IS_ANIM_SCENE_*
     *
     * Hash: 0x9AAE3C1148A09BCA | Since: 1207
     */
    function _0x9AAE3C1148A09BCA(animScene: any): boolean;
    /**
     * Used in SP R* Scripts only
     * _WAS_ANIM_SCENE_*
     *
     * Hash: 0xA96619FE85159ED2 | Since: 1207
     */
    function _0xA96619FE85159ED2(animScene: any): boolean;
    /**
     * _UNLOAD_* - _WAS_ANIM_SCENE_*
     *
     * Hash: 0xAE6DE22DE0ED4554 | Since: 1207
     */
    function _0xAE6DE22DE0ED4554(mgmHandle: number, ped: number | Ped): void;
    /**
     * _PREPARE_* - _REGISTER_*
     *
     * Hash: 0xB1A196BAFE650402 | Since: 1207
     */
    function _0xB1A196BAFE650402(mgmHandle: number, ped: number | Ped): void;
    /**
     * Used in SP R* Scripts only
     * _RESUME_* - _SET_A*
     *
     * Hash: 0xC1193521E3B9FADD | Since: 1207
     */
    function _0xC1193521E3B9FADD(entity: number | Entity): void;
    /**
     * Used in SP R* Scripts only
     * _SET_P*
     *
     * Hash: 0xCDCD7B2D49AEE73A | Since: 1207
     */
    function _0xCDCD7B2D49AEE73A(): void;
    /**
     * Used in SP R* Scripts only
     * _IS_ANIM_SCENE_*
     *
     * Hash: 0xD70C7A30412F8FA0 | Since: 1207
     */
    function _0xD70C7A30412F8FA0(animScene: any): boolean;
    /**
     * Used in SP R* Scripts only
     * _SET_B* - _SET_C*
     *
     * Hash: 0xE12D7B4B959644CD | Since: 1207
     */
    function _0xE12D7B4B959644CD(): void;
    /**
     * Used in SP R* Scripts only
     * _PAUSE_* - _PLAY_*
     *
     * Hash: 0xEA41D44A8D42057B | Since: 1207
     */
    function _0xEA41D44A8D42057B(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8A8208AE92BF87A5 | Since: 1207
     */
    function clearAnimSceneWasSkipped(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC781D24AA11F179 | Since: 1207
     */
    function clearBreakoutArchetype(ped: number | Ped): void;
    /**
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
     *
     * Hash: 0x1FCA98E33C1437B3 | Since: 1207
     */
    function createAnimScene(animDict: string, flags: number, playbackListName: string): any;
    /**
     * Returns mgmHandle
     *
     * Hash: 0xA1300DE03E5D1973 | Since: 1207
     */
    function createMgmSystem(mgmFilename: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x84EEDB2C6E650000 | Since: 1207
     */
    function deleteAnimScene(animScene: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x53CB3970BA02E3CC | Since: 1207
     */
    function deleteMgmSystem(mgmHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D1ECA9337BE9FC3 | Since: 1207
     */
    function doesAnimSceneOwnershipOfEntityExist(animScene: any, entityName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9016536015DE29D | Since: 1207
     */
    function doesAnimScenePlayListExist(animScene: any, playbackListName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F1F0B17109309DA | Since: 1207
     */
    function doesEntityWithIdExistInAnimScene(animScene: any, entityId: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAE5ADA4FE3E21ADC | Since: 1207
     */
    function getAnimSceneDict(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x49F1D143ADE32656 | Since: 1207
     */
    function getAnimSceneDuration(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xFB5674687A1B2814 | Since: 1207
     */
    function getAnimSceneObject(animScene: any, name: string, isNetwork: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xE5822422197BBBA3 | Since: 1207
     */
    function getAnimScenePed(animScene: any, name: string, isNetwork: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x9E036D5204FFBBC8 | Since: 1207
     */
    function getAnimScenePlaybackListPhaseAudioLoadStress(animScene: any, phaseName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x43C21623E42B821B | Since: 1207
     */
    function getAnimSceneRate(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x61BE7D6186260002 | Since: 1207
     */
    function getAnimSceneTime(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x430EE0A19BC5A287 | Since: 1207
     */
    function getAnimSceneVehicle(animScene: any, name: string, isNetwork: boolean): number;
    /**
     * _HAS_L* (?)
     *
     * Hash: 0x337F1CC8EE895601 | Since: 1207
     */
    function hasEntityEnteredAnimScene(animScene: any, entityName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x34A0671BE613D3D0 | Since: 1207
     */
    function isAnimSceneAborted(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59606519FF9D3EC2 | Since: 1207
     */
    function isAnimSceneLoading(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF8D1D2DAB6007EEF | Since: 1207
     */
    function isAnimSceneMetadataAssetInRangeLoading(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4B4038796F0D6566 | Since: 1207
     */
    function isAnimScenePaused(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F0E401031E20146 | Since: 1207
     */
    function isAnimScenePlaybackListPhaseActive(animScene: any, phaseName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x23E33CB9F4A3F547 | Since: 1207
     */
    function isAnimScenePlaybackListPhaseLoaded(animScene: any, phaseName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0DF57F86FE71DBE5 | Since: 1207
     */
    function isAnimScenePlaybackListPhaseLoading(animScene: any, phaseName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4CDFFE3189EBDBD0 | Since: 1207
     */
    function isAnimSceneSkippable(animScene: any): boolean;
    /**
     * MGM stands for MiniGameMoments.
     *
     * Hash: 0xFDFC14799373283F | Since: 1207
     */
    function isMgmSystemLoaded(mgmFilename: string): boolean;
    /**
     * Used to request MiniGameMoments Assets.
     *
     * mgmFilename's:
     * Poker
     * PokerArthur
     * PokerArthurCamp
     * PokerJohn
     * PokerJohnCamp
     *
     * Hash: 0xB727A847862CB00A | Since: 1207
     */
    function loadMgmAssets(mgmFilename: string): boolean;
    /**
     * Pauses all script threads except the one that called it.
     *
     * Hash: 0x37C1257849DEF24A | Since: 1207
     */
    function pauseScriptThreads(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE6ADA8FE7E84ACC | Since: 1207
     */
    function releaseAnimScenePlayList(animScene: any, playlistName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x41AFA5F228B0B6B0 | Since: 1207
     */
    function requestPhotoModeDefreeze(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C709C01D43D94CD | Since: 1207
     */
    function requestPhotoModeFreeze(): void;
    /**
     * No comment provided
     *
     * Hash: 0x99B2A2E3655DEAF1 | Since: 1207
     */
    function setBreakoutArchetype(ped: number | Ped, archetype: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x07706C4CC9C6CC9E | Since: 1207
     */
    function setMgmEvent(mgmEventHandle: number, seatId: any): void;
}
export declare namespace attribute {
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x75415EE0CB583760 | Since: 1207
     */
    function addAttributePoints(ped: number | Ped, attributeIndex: number): void;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0xF8DAC3D85636C241 | Since: 1207
     */
    function disableAttributeOverpower(ped: number | Ped, attributeIndex: number): void;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
     *
     * Hash: 0xF6A7C08DF2E28B28 | Since: 1207
     */
    function enableAttributeOverpower(ped: number | Ped, attributeIndex: number, value: number, makeSound: boolean): void;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x147149F2E909323C | Since: 1207
     */
    function getAttributeBaseRank(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x0EFA71F4B4330E04 | Since: 1207
     */
    function getAttributeBonusRank(ped: number | Ped, coreIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x219DA04BAA9CB065 | Since: 1207
     */
    function getAttributePoints(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0xA4C8E23E29040DE0 | Since: 1207
     */
    function getAttributeRank(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x94A7F191DB49A44D | Since: 1207
     */
    function getDefaultAttributePointsNeededForRank(modelHash: number | string, attributeIndex: number, rank: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x958DD43D41F89A47 | Since: 1207
     */
    function getDefaultAttributeRank(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x7C059C55AD940CB4 | Since: 1207
     */
    function getDefaultMaxAttributeRank(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x223BF310F854871C | Since: 1207
     */
    function getMaxAttributePoints(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x704674A0535A471D | Since: 1207
     */
    function getMaxAttributeRank(ped: number | Ped, attributeIndex: number): number;
    /**
     * attributeIndex:
     * enum ePedAttribute
     * {
     * PA_HEALTH,
     * PA_STAMINA,
     * PA_SPECIALABILITY,
     * PA_COURAGE,
     * PA_AGILITY,
     * PA_SPEED,
     * PA_ACCELERATION,
     * PA_BONDING,
     * SA_HUNGER,
     * SA_FATIGUED,
     * SA_INEBRIATED,
     * SA_POISONED,
     * SA_BODYHEAT,
     * SA_BODYWEIGHT,
     * SA_OVERFED,
     * SA_SICKNESS,
     * SA_DIRTINESS,
     * SA_DIRTINESSHAT,
     * MTR_STRENGTH,
     * MTR_GRIT,
     * MTR_INSTINCT,
     * PA_UNRULINESS,
     * SA_DIRTINESSSKIN
     * };
     *
     * Hash: 0x5DA12E025D47D4E5 | Since: 1207
     */
    function setAttributeBaseRank(ped: number | Ped, attributeIndex: number, newValue: number): void;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x920F9488BD115EFB | Since: 1207
     */
    function setAttributeBonusRank(ped: number | Ped, attributeIndex: number, newValue: number): void;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x09A59688C26D88DF | Since: 1207
     */
    function setAttributePoints(ped: number | Ped, attributeIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD962F8579D702DB5 | Since: 1207
     */
    function stopItemPreview(): void;
    /**
     * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
     *
     * Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
     *
     * Hash: 0x4AF5A4C7B9157D14 | Since: 1207
     */
    function enableAttributeCoreOverpower(ped: number | Ped, coreIndex: number, value: number, makeSound: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB429F58803D285B1 | Since: 1207
     */
    function getAttributeCoreOverpowerSecondsLeft(ped: number | Ped, coreIndex: number): number;
    /**
     * Gets the ped's core value on a scale of 0 to 100.
     * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
     *
     * Hash: 0x36731AC041289BB1 | Since: 1207
     */
    function getAttributeCoreValue(ped: number | Ped, coreIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4C9F782180712742 | Since: 1207
     */
    function getAttributeOverpowerSecondsLeft(ped: number | Ped, attributeIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x200373A8DF081F22 | Since: 1207
     */
    function isAttributeCoreOverpowered(ped: number | Ped, coreIndex: number): boolean;
    /**
     * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
     *
     * Hash: 0x103C2F885ABEB00B | Since: 1207
     */
    function isAttributeOverpowered(ped: number | Ped, attributeIndex: number): boolean;
    /**
     * coreIndex:
     * enum eAttributeCore
     * {
     * ATTRIBUTE_CORE_HEALTH,
     * ATTRIBUTE_CORE_STAMINA,
     * ATTRIBUTE_CORE_DEADEYE
     * };
     *
     * Hash: 0xC6258F41D86676E0 | Since: 1207
     */
    function setAttributeCoreValue(ped: number | Ped, coreIndex: number, value: number): void;
    /**
     * Displays status effects on core icons (includes warnings).
     *
     * enum eUiRpgStatusEffect
     * {
     * STATUS_NONE,
     * STATUS_COLD,
     * STATUS_HOT,
     * STATUS_OVERFED,
     * STATUS_DIRTY,
     * STATUS_SNAKE_VENOM,
     * STATUS_ARROW_WOUNDED,
     * STATUS_ARROW_DRAINED,
     * STATUS_ARROW_DISORIENTED,
     * STATUS_ARROW_TRACKED,
     * STATUS_ARROW_CONFUSION,
     * STATUS_UNDERWEIGHT,
     * STATUS_OVERWEIGHT,
     * STATUS_SICK_1,
     * STATUS_SICK_2,
     * STATUS_PREDATOR_INVULNERABLE
     * };
     *
     * Hash: 0xA4D3A1C008F250DF | Since: 1207
     */
    function setStatusEffectCoreIcon(statusEffectType: number): void;
    /**
     * Starts core periodic icon.
     * statusEffectType: see 0xA4D3A1C008F250DF
     *
     * Hash: 0xFB6E111908502871 | Since: 1207
     */
    function setStatusEffectPeriodicIcon(statusEffectType: number): void;
    /**
     * Params: p1 is related to satchel_category
     *
     * Hash: 0x7E2C766ADB2C5F1A | Since: 1207
     */
    function startItemPreview(): void;
    /**
     * Stops periodic icon.
     * statusEffectType: see 0xA4D3A1C008F250DF
     *
     * Hash: 0x3FC4C027FD0936F4 | Since: 1207
     */
    function stopStatusEffectPeriodicIcon(statusEffectType: number): void;
}
export declare namespace audio {
    /**
     * No comment provided
     *
     * Hash: 0x153973AB99FE8980 | Since: 1207
     */
    function addEntityToAudioMixGroup(entity: number | Entity, groupName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x95D9F4BC443956E7 | Since: 1207
     */
    function addPedToConversation(convoRoot: string, ped: number | Ped, characterName: string): void;
    /**
     * Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
     *
     * Hash: 0x845FFC3A4FEEFA3E | Since: 1207
     */
    function audioIsMusicPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x374F0E716BFCDE82 | Since: 1207
     */
    function audioTriggerExplosion(name: string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B17A90291133DA5 | Since: 1207
     */
    function cancelMusicEvent(eventName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x120C48C614909FA4 | Since: 1207
     */
    function clearAmbientZoneListState(ambientZone: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x218DD44AAAC964FF | Since: 1207
     */
    function clearAmbientZoneState(zoneName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x33D51F801CB16E4F | Since: 1207
     */
    function clearConversationHistory(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2C91A0B572AAE56 | Since: 1207
     */
    function createNewScriptedConversation(convoRoot: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9A41C1E940FB0E8 | Since: 1207
     */
    function disablePedPainAudio(ped: number | Ped, toggle: boolean): void;
    /**
     * Checks if the ped can play the speech or has the speech file, last parameter is usually false.
     *
     * Hash: 0x49B99BF3FDA89A7A | Since: 1207
     */
    function doesContextExistForThisPed(ped: number | Ped, speechName: string, unk: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x062D5EAD4DA2FA6A | Since: 1207
     */
    function forcePedPanicWalla(): void;
    /**
     * Old name: _FORCE_VEHICLE_ENGINE_AUDIO
     *
     * Hash: 0x4F0C413926060B38 | Since: 1207
     */
    function forceUseAudioGameObject(vehicle: number | Vehicle, audioName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x480357EE890C295A | Since: 1207
     */
    function getCurrentScriptedConversationLine(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE7A0D23DC414507B | Since: 1207
     */
    function getMusicPlaytime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x430386FE9BF80B45 | Since: 1207
     */
    function getSoundId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x932C2D096A2C3FFF | Since: 1207
     */
    function isAmbientSpeechDisabled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9072C8B49907BFAD | Since: 1207
     */
    function isAmbientSpeechPlaying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC265DF9FB44A9FBD | Since: 1207
     */
    function isAnimalVocalizationPlaying(pedHandle: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x729072355FA39EC9 | Since: 1207
     */
    function isAnySpeechPlaying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB65B60556E2A9225 | Since: 1207
     */
    function isAudioSceneActive(scene: string): boolean;
    /**
     * Checks whether the horn of a vehicle is currently played.
     *
     * Hash: 0x9D6BFC12B05C6121 | Since: 1207
     */
    function isHornActive(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x049E937F18F4020C | Since: 1207
     */
    function isPedInCurrentConversation(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF0D54BE7A776737 | Since: 1207
     */
    function isScriptedConversationLoaded(convoRoot: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1ECC76792F661CF5 | Since: 1207
     */
    function isScriptedConversationPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCC9AA18DCC7084F4 | Since: 1207
     */
    function isScriptedSpeechPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD11FA52EB849D978 | Since: 1207
     */
    function isStreamPlaying(streamId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F1F957154EC51DF | Since: 1207
     */
    function loadStream(streamName: string, soundSet: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8530AD776CD72B12 | Since: 1207
     */
    function pauseScriptedConversation(): void;
    /**
     * Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
     *
     * Hash: 0xED640017ED337E45 | Since: 1207
     */
    function playAmbientSpeechFromPositionNative(pos: Vector3, params: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEE066C7006C49C0A | Since: 1207
     */
    function playAnimalVocalization(ped: number | Ped, vocalizationName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD536C4D33DCC900 | Since: 1207
     */
    function playEndCreditsMusic(play: boolean): void;
    /**
     * Valid pain IDs: 0..12  these names are not official, but here is a list of the IDs:
     * 1 burning,
     * 2 drowning,
     * 3 coughing,
     * 4 nothing,
     * 5 nothing,
     * 6 coughing_2,
     * 7 nothing,
     * 8 nothing,
     * 9 hurtingSick?,
     * 10 hurtingFall?,
     * 11 nothing,
     * 12 choking
     *
     * Hash: 0xBC9AE166038A5CEC | Since: 1207
     */
    function playPain(ped: number | Ped, painId: number, isNetwork: boolean): void;
    /**
     * struct ScriptedSpeechParams
     * {
     * const char* speechName;
     * const char* voiceName;
     * alignas(8) int variation;
     * alignas(8) Hash speechParamHash;
     * alignas(8) Ped listenerPed;
     * alignas(8) BOOL syncOverNetwork;
     * alignas(8) int v7;
     * alignas(8) int v8;
     * };
     *
     * static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
     *
     *
     * Example:
     *
     * ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, joaat("SPEECH_PARAMS_BEAT_SHOUTED_CLEAR"), 0, true, 1, 1};
     * PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
     *
     * Old name: _PLAY_AMBIENT_SPEECH1
     * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
     *
     * Hash: 0x8E04FEDD28D42462 | Since: 1207
     */
    function playPedAmbientSpeechNative(speaker: number | Ped, params: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7FF4944CC209192D | Since: 1207
     */
    function playSound(audioName: string, audioRef: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FB1DA3CA9DA7D90 | Since: 1207
     */
    function playSoundFromEntity(audioName: string, entity: number | Entity, audioRef: string, isNetwork: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
     *
     * Hash: 0x67C540AA08E4A6F5 | Since: 1207
     */
    function playSoundFrontend(audioName: string, audioRef: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x89049DD63C08B5D1 | Since: 1207
     */
    function playStreamFromPed(ped: number | Ped, streamId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x21442F412E8DE56B | Since: 1207
     */
    function playStreamFromPosition(pos: Vector3, streamId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x58FCE43488F9F5F4 | Since: 1207
     */
    function playStreamFrontend(streamId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B3CAD6166916D87 | Since: 1207
     */
    function preloadScriptConversation(convoRoot: string, clone: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E5185B72EF5158A | Since: 1207
     */
    function prepareMusicEvent(eventName: string): boolean;
    /**
     * soundId maybe be incorrect name for param p2, in the decompiles is always -2
     *
     * Hash: 0xE368E8422C860BA7 | Since: 1207
     */
    function prepareSound(soundName: string, soundsetName: string, soundId: number): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
     *
     * Hash: 0xD9130842D7226045 | Since: 1207
     */
    function prepareSoundset(soundsetName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4AD019591E94C064 | Since: 1207
     */
    function prepareSoundWithEntity(soundName: string, entity: number | Entity, soundsetName: string, soundId: number): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xC6ED9D5092438D91 | Since: 1207
     */
    function registerScriptWithAudio(): void;
    /**
     * No comment provided
     *
     * Hash: 0x77ED170667F50170 | Since: 1207
     */
    function releaseNamedScriptAudioBank(audioBank: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A2D8AD0A9EB9C3F | Since: 1207
     */
    function releaseScriptAudioBank(): void;
    /**
     * No comment provided
     *
     * Hash: 0x353FC880830B88FA | Since: 1207
     */
    function releaseSoundId(soundId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x18EB48CFC41F2EA0 | Since: 1207
     */
    function removeEntityFromAudioMixGroup(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB4BBFD9CD8B3922B | Since: 1207
     */
    function removePortalSettingsOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F844A8B08D76685 | Since: 1207
     */
    function requestScriptAudioBank(audioBank: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9AEB285D1818C9AC | Since: 1207
     */
    function restartScriptedConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C8065A3B780185B | Since: 1207
     */
    function setAmbientVoiceName(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9748FA4DE50CCE3E | Since: 1207
     */
    function setAmbientZoneListState(ambientZone: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3638DAE8C4045E1 | Since: 1207
     */
    function setAmbientZoneListStatePersistent(ambientZone: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDA07E5950085E46 | Since: 1207
     */
    function setAmbientZoneState(zoneName: string, isEnabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D6650420CEC9D3B | Since: 1207
     */
    function setAmbientZoneStatePersistent(ambientZone: string): void;
    /**
     * Not implemented.
     *
     * Hash: 0xCC97B29285B1DC3B | Since: 1207
     */
    function setAnimalMood(animal: number | Ped, mood: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
     *
     * Hash: 0xB9EFD5C25018725A | Since: 1207
     */
    function setAudioFlag(flagName: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B1FC259187C97C0 | Since: 1207
     */
    function setAudioOnlineTransitionStage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF21A9EF089A2668 | Since: 1207
     */
    function setAudioSceneVariable(scene: string, variable: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5564483E407F914 | Since: 1207
     */
    function setAudioVehiclePriority(vehicle: number | Vehicle): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x3BD3F52BA9B1E4E8 | Since: 1207
     */
    function setGpsActive(active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x76D683C108594D0E | Since: 1207
     */
    function setHornEnabled(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2DE3AEBE31150E2 | Since: 1207
     */
    function setIsScriptedSpeechDisabled(ped: number | Ped, disabled: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0x8BF907833BE275DE | Since: 1207
     */
    function setPedInteriorWallaDensity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x95D2D383D5396B8A | Since: 1207
     */
    function setPedIsDrunk(ped: number | Ped, toggle: boolean): void;
    /**
     * https://en.m.wikipedia.org/wiki/Walla
     *
     * Hash: 0x149AEE66F0CB3A99 | Since: 1207
     */
    function setPedWallaDensity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x044DBAD7A7FA2BE5 | Since: 1207
     */
    function setPortalSettingsOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x399D2D3B33F1B8EB | Since: 1207
     */
    function setStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9663FE6B7A61EB00 | Since: 1207
     */
    function skipToNextScriptedConversationLine(): void;
    /**
     * No comment provided
     *
     * Hash: 0x013A80FC08F6E4F2 | Since: 1207
     */
    function startAudioScene(scene: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x23641AFE870AF385 | Since: 1207
     */
    function startPreloadedConversation(convoRoot: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B17C62C9635D2DC | Since: 1207
     */
    function startScriptConversation(convoRoot: string, clone: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFE8422B3B94E688 | Since: 1207
     */
    function stopAudioScene(scene: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAC7FC81A75EC1A1 | Since: 1207
     */
    function stopAudioScenes(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8BEC0CA6F0EDB0F | Since: 1207
     */
    function stopCurrentPlayingAmbientSpeech(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x79D2F0E66F81D90D | Since: 1207
     */
    function stopCurrentPlayingSpeech(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D64D7405520E3D3 | Since: 1207
     */
    function stopPedSpeaking(ped: number | Ped, shaking: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD79DEEFB53455EBA | Since: 1207
     */
    function stopScriptedConversation(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA4718A1419D18151 | Since: 1207
     */
    function stopStream(streamId: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
     *
     * Hash: 0x706D57B0F50DA710 | Since: 1207
     */
    function triggerMusicEvent(eventName: string): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xA8638BE228D4751A | Since: 1207
     */
    function unregisterScriptWithAudio(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF4DC1784BE94DFA | Since: 1207
     */
    function useFootstepScriptSweeteners(ped: number | Ped, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x017492B2201E3428 | Since: 1207
     */
    function _0x017492B2201E3428(): void;
    /**
     * No comment provided
     *
     * Hash: 0x018ABE833CA64D2A | Since: 1232
     */
    function _0x018ABE833CA64D2A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x06C5DF5EE444BC6B | Since: 1207
     */
    function _0x06C5DF5EE444BC6B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x078F77FD1A43EAB3 | Since: 1207
     */
    function _0x078F77FD1A43EAB3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CB3D1919E8D7CBA | Since: 1207
     */
    function _0x0CB3D1919E8D7CBA(convoRoot: string): boolean;
    /**
     * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
     * p1 is possibly naSpeechAudibility, naSpeechType, or naSpeechEventTypeRequestPriority
     * SKIP_* - START_*
     *
     * Hash: 0x0D7FD6A55FD63AEF | Since: 1207
     */
    function _0x0D7FD6A55FD63AEF(speechEventType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FAF7171BF613B80 | Since: 1207
     */
    function _0x0FAF7171BF613B80(): void;
    /**
     * No comment provided
     *
     * Hash: 0x131EC9247E7A2903 | Since: 1207
     */
    function _0x131EC9247E7A2903(): any;
    /**
     * No comment provided
     *
     * Hash: 0x138ADB94F8B90616 | Since: 1207
     */
    function _0x138ADB94F8B90616(): void;
    /**
     * No comment provided
     *
     * Hash: 0x139A4B9DF2D26CBF | Since: 1232
     */
    function _0x139A4B9DF2D26CBF(): void;
    /**
     * No comment provided
     *
     * Hash: 0x152ED1B56E8F1F50 | Since: 1207
     */
    function _0x152ED1B56E8F1F50(currentScriptedConvoLine: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E6F9A9FE1A99F36 | Since: 1207
     */
    function _0x1E6F9A9FE1A99F36(audSpeechEvent: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x254B0241E964B450 | Since: 1207
     */
    function _0x254B0241E964B450(currentScriptedConvoLine: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x259ACC5B52A2B2D9 | Since: 1207
     */
    function _0x259ACC5B52A2B2D9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2651DDC0EA269073 | Since: 1207
     */
    function _0x2651DDC0EA269073(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x295859EB18F48D82 | Since: 1207
     */
    function _0x295859EB18F48D82(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B101AD9F651243A | Since: 1207
     */
    function _0x2B101AD9F651243A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2B9C37C01BF25EDB | Since: 1207
     */
    function _0x2B9C37C01BF25EDB(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2FFF4A78384AFFDF | Since: 1436
     */
    function _0x2FFF4A78384AFFDF(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x341CDD17EFC2472E | Since: 1207
     */
    function _0x341CDD17EFC2472E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x35B8C070E0C16E2F | Since: 1207
     */
    function _0x35B8C070E0C16E2F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x380A2E353AD30917 | Since: 1207
     */
    function _0x380A2E353AD30917(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A00D87B20A2A5E4 | Since: 1207
     */
    function _0x3A00D87B20A2A5E4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A3BE6B920525237 | Since: 1207
     */
    function _0x3A3BE6B920525237(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D0BBCCF401B5FDB | Since: 1207
     */
    function _0x3D0BBCCF401B5FDB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E93DDDCBB6111E4 | Since: 1207
     */
    function _0x3E93DDDCBB6111E4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E98AC9D8C56C62C | Since: 1207
     */
    function _0x3E98AC9D8C56C62C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x40CA665AB9D8D505 | Since: 1207
     */
    function _0x40CA665AB9D8D505(convoRoot: string, singleLineIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x43037ABFE214A851 | Since: 1207
     */
    function _0x43037ABFE214A851(): void;
    /**
     * No comment provided
     *
     * Hash: 0x448F2647DD6F2E27 | Since: 1232
     */
    function _0x448F2647DD6F2E27(): void;
    /**
     * No comment provided
     *
     * Hash: 0x44A5EEF54F62E823 | Since: 1207
     */
    function _0x44A5EEF54F62E823(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4A98E228A936DBCC | Since: 1207
     */
    function _0x4A98E228A936DBCC(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4BE3EC91C01F0FE8 | Since: 1207
     */
    function _0x4BE3EC91C01F0FE8(): void;
    /**
     * No comment provided
     *
     * Hash: 0x569ABC36E28DDEAA | Since: 1207
     */
    function _0x569ABC36E28DDEAA(): void;
    /**
     * _IS_SOUND_RUNNING(?)
     *
     * Hash: 0x580D71DFE0088E34 | Since: 1207
     */
    function _0x580D71DFE0088E34(audioName: string, audioRef: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A13586A9447931F | Since: 1207
     */
    function _0x5A13586A9447931F(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AE0CB5F35F034FD | Since: 1207
     */
    function _0x5AE0CB5F35F034FD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BC885EBD75FAA7D | Since: 1207
     */
    function _0x5BC885EBD75FAA7D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E3CCF03995388B5 | Since: 1207
     */
    function _0x5E3CCF03995388B5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x62377977E4F08668 | Since: 1436
     */
    function _0x62377977E4F08668(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x64B956F4E761DF5C | Since: 1207
     */
    function _0x64B956F4E761DF5C(): void;
    /**
     * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
     * SKIP_* - START_*
     *
     * Hash: 0x660A8F876DF1D4F8 | Since: 1207
     */
    function _0x660A8F876DF1D4F8(speechEventType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6652B0C8F3D414D0 | Since: 1207
     */
    function _0x6652B0C8F3D414D0(): void;
    /**
     * _STOP_AUDIO_*
     *
     * Hash: 0x6AB944DF68B512D3 | Since: 1207
     */
    function _0x6AB944DF68B512D3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B7A88A61B41E589 | Since: 1207
     */
    function _0x6B7A88A61B41E589(): void;
    /**
     * Gets the hash for the last played speech line.
     *
     * Hash: 0x6BFFB7C276866996 | Since: 1207
     */
    function getLastPlayedSpeechForPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6DA15746D5CC1A92 | Since: 1207
     */
    function _0x6DA15746D5CC1A92(): void;
    /**
     * No comment provided
     *
     * Hash: 0x72E4D1C4639BC465 | Since: 1207
     */
    function _0x72E4D1C4639BC465(): any;
    /**
     * _AUDIO_IS_* - _AUDIO_TRIGGER*
     *
     * Hash: 0x7455CD705F7E933E | Since: 1207
     */
    function _0x7455CD705F7E933E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7678FE0455ED1145 | Since: 1207
     */
    function _0x7678FE0455ED1145(): any;
    /**
     * Only used in R* SP Script cv_mus_shared
     *
     * Hash: 0x79F9C57B8D0DFE90 | Since: 1207
     */
    function _0x79F9C57B8D0DFE90(convoRoot: string, animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7E176C676F8652A9 | Since: 1207
     */
    function _0x7E176C676F8652A9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x821C32C728B24477 | Since: 1207
     */
    function _0x821C32C728B24477(): void;
    /**
     * No comment provided
     *
     * Hash: 0x839C9F124BE74D94 | Since: 1207
     */
    function _0x839C9F124BE74D94(): void;
    /**
     * No comment provided
     *
     * Hash: 0x847748AE5D7B1071 | Since: 1207
     */
    function _0x847748AE5D7B1071(): boolean;
    /**
     * Not implemented.
     *
     * Hash: 0x864A842B86993851 | Since: 1207
     */
    function _0x864A842B86993851(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x886657C5B3D8EDE3 | Since: 1232
     */
    function _0x886657C5B3D8EDE3(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x8D29FDF565DED9AE | Since: 1232
     */
    function _0x8D29FDF565DED9AE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E901B65206C2D3E | Since: 1207
     */
    function _0x8E901B65206C2D3E(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x935DBD96D4A3DA1F | Since: 1207
     */
    function _0x935DBD96D4A3DA1F(currentScriptedConvoLine: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D6DEC9791A4E501 | Since: 1207
     */
    function _0x9D6DEC9791A4E501(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9EB779765E68C52E | Since: 1207
     */
    function _0x9EB779765E68C52E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2323A2EAE32A290 | Since: 1207
     */
    function _0xA2323A2EAE32A290(listeningToPed: number | Ped, ped: number | Ped, listenerName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2B851605748AD0E | Since: 1207
     */
    function _0xA2B851605748AD0E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6847BBA4FCDD13F | Since: 1207
     */
    function _0xA6847BBA4FCDD13F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6A3A3F96B8B030E | Since: 1207
     */
    function _0xA6A3A3F96B8B030E(): any;
    /**
     * No comment provided
     *
     * Hash: 0xABDB4863D3D72021 | Since: 1207
     */
    function _0xABDB4863D3D72021(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB18FEC133C7C6C69 | Since: 1207
     */
    function _0xB18FEC133C7C6C69(): any;
    /**
     * Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
     *
     * Hash: 0xB93A769B8B726950 | Since: 1207
     */
    function _0xB93A769B8B726950(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC07CA8FD710E7FD | Since: 1232
     */
    function _0xBC07CA8FD710E7FD(): void;
    /**
     * Checks for MOONSHINE_BAND
     *
     * Hash: 0xBE28DB99556FF8D9 | Since: 1207
     */
    function _0xBE28DB99556FF8D9(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xC369E2234E34A0CA | Since: 1207
     */
    function _0xC369E2234E34A0CA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC4CFCE4C656EF480 | Since: 1207
     */
    function _0xC4CFCE4C656EF480(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC68C02DE259C927C | Since: 1232
     */
    function _0xC68C02DE259C927C(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC886CD666ADD42E1 | Since: 1207
     */
    function _0xC886CD666ADD42E1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBF2BEBB468A34F3 | Since: 1207
     */
    function _0xCBF2BEBB468A34F3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFAD2C8CD1054523 | Since: 1207
     */
    function _0xCFAD2C8CD1054523(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD05A460328560477 | Since: 1232
     */
    function _0xD05A460328560477(): any;
    /**
     * _IS_SCRIPTED_CONVERSATION_*
     *
     * Hash: 0xD0730C1FA40348D9 | Since: 1207
     */
    function _0xD0730C1FA40348D9(convoRoot: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD47D47EFBF103FB8 | Since: 1207
     */
    function _0xD47D47EFBF103FB8(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD733528B6C35647A | Since: 1207
     */
    function _0xD733528B6C35647A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDAD6CD07CAA4F382 | Since: 1207
     */
    function _0xDAD6CD07CAA4F382(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC2F83A0612CA34D | Since: 1207
     */
    function _0xDC2F83A0612CA34D(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDC93F0948F2C28F4 | Since: 1207
     */
    function _0xDC93F0948F2C28F4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF947FE0D551684E | Since: 1207
     */
    function _0xDF947FE0D551684E(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE600F61F54A444A6 | Since: 1207
     */
    function _0xE600F61F54A444A6(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE7E6CB8B713ED190 | Since: 1207
     */
    function _0xE7E6CB8B713ED190(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE891504B2F0E2DBA | Since: 1207
     */
    function _0xE891504B2F0E2DBA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9694B2D6CB87B06 | Since: 1232
     */
    function _0xE9694B2D6CB87B06(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA546C31FD45F8CD | Since: 1207
     */
    function _0xEA546C31FD45F8CD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB4D592620B8C209 | Since: 1207
     */
    function _0xEB4D592620B8C209(): void;
    /**
     * Name: ROPE_SETTINGS_DEFAULT
     *
     * Hash: 0xF092B6030D6FD49C | Since: 1207
     */
    function _0xF092B6030D6FD49C(ropeId: number, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF0EE69F500952FA5 | Since: 1207
     */
    function _0xF0EE69F500952FA5(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF232C2C546AC16D0 | Since: 1207
     */
    function _0xF232C2C546AC16D0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF336E9F989B3518F | Since: 1207
     */
    function _0xF336E9F989B3518F(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF64034D533CE8AAC | Since: 1207
     */
    function _0xF64034D533CE8AAC(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCDEC42B1C78B7F8 | Since: 1207
     */
    function _0xFCDEC42B1C78B7F8(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD461D0ABA5559B1 | Since: 1207
     */
    function _0xFD461D0ABA5559B1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE5C6177064BD390 | Since: 1207
     */
    function _0xFE5C6177064BD390(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFFE9C53DEEA3DB0B | Since: 1207
     */
    function _0xFFE9C53DEEA3DB0B(pos: Vector3, isSrlLoaded: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0x6378A235374B852F | Since: 1207
     */
    function blockSpeechContext(context: string, block: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF51242E35242B47 | Since: 1207
     */
    function clearConversationHistoryForScriptedConversation(convoRoot: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B25A18E390F75BF | Since: 1207
     */
    function getEntityAudioMixGroup(entity: number | Entity): number;
    /**
     * Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
     * https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
     *
     * Hash: 0x0556C784FA056628 | Since: 1207
     */
    function getLoadedStreamIdFromCreation(streamName: string, soundSet: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x2DBBF0C5E19383EE | Since: 1232
     */
    function getPedSongIndexHost(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x714A0EA7DE1167BE | Since: 1207
     */
    function hasSoundAudioNameFinished(audioName: string, soundsetName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x84848E1C0FC67DBB | Since: 1207
     */
    function hasSoundIdFinished(soundId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA2CAC9DEF0195E6F | Since: 1207
     */
    function isAnyConversationPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x54B187F111D9C6F8 | Since: 1207
     */
    function isPedInAnyConversation(ped: number | Ped): boolean;
    /**
     * item: FUSE, value returned from 0x2E1CDC1FF3B8473E
     * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
     *
     * Hash: 0x6DF942C4179BE5AB | Since: 1207
     */
    function isScriptedAudioCustom(item: number | string, soundSet: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD89504D9D7D5057D | Since: 1207
     */
    function isScriptedConversationCreated(convoRoot: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF01C570E0A0A1E67 | Since: 1207
     */
    function isScriptedConversionOngoing(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E53530D9B2DB01D | Since: 1311
     */
    function playAnimalVocalizationPheromoneVialResponse(ped: number | Ped): void;
    /**
     * Params: p5 seems to be always 0
     *
     * Hash: 0xF1C5310FEAA36B48 | Since: 1207
     */
    function playSoundFromEntityWithSet(soundId: number, soundName: string, entity: number | Entity, soundsetName: string): void;
    /**
     * item: value returned from 0x2E1CDC1FF3B8473E
     * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
     *
     * Hash: 0xE8EAFF7B41EDD291 | Since: 1207
     */
    function playSoundFromItem(item: number | string, soundSet: number | string): void;
    /**
     * Old name: _PLAY_SOUND_FROM_POSITION
     *
     * Hash: 0xCCE219C922737BFA | Since: 1207
     */
    function playSoundFromCoord(SoundName: string, positionX: number, positionY: number, positionZ: number, SetName: string, bOverNetwork: boolean, nNetworkRange: number, isExteriorLoc: boolean): void;
    /**
     * Starts Audio Loop
     * _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
     *
     * Hash: 0xDCF5BA95BBF0FABA | Since: 1207
     */
    function playSoundFromPositionWithId(soundId: number, soundName: string, pos: Vector3, soundsetName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE5D0FFE83939AF1 | Since: 1207
     */
    function playSoundFrontendWithSoundId(soundId: number, name: string, soundSet: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D746964E0CF2C5F | Since: 1207
     */
    function releaseShardSounds(soundName: string, soundsetName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x531A78D6BF27014B | Since: 1207
     */
    function releaseSoundset(soundsetName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3743CE6948194349 | Since: 1207
     */
    function setAmbientZonePosition(ambientZone: string, pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC84686C06184B0D | Since: 1207
     */
    function setAudioSceneset(audioName: string, sceneset: string): boolean;
    /**
     * p1: Entity.Relationship
     * p2: Player, Enemy, Teammate, Neutral
     *
     * Hash: 0x2E31ACA7477CF00F | Since: 1207
     */
    function setSoundRelationshipOnPed(ped: number | Ped): void;
    /**
     * Old Name: _SET_VARIABLE_ON_SOUND_WITH_ID
     *
     * Hash: 0x503703EC1781B7D6 | Since: 1207
     */
    function setVariableOnSound(soundId: number, variableName: string, variableValue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9821B68CD3E05F2B | Since: 1207
     */
    function setVariableOnSoundWithName(variableName: string, variableValue: number, audioName: string, audioRef: string): void;
    /**
     * Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
     *
     * Hash: 0x2703EFB583F0949A | Since: 1207
     */
    function setVofxPedVoice(ped: number | Ped, voice: number | string): void;
    /**
     * whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
     *
     * Hash: 0x9963681A8BC69BF3 | Since: 1207
     */
    function setWhistleConfigForPed(ped: number | Ped, whistleConfig: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6339C1EA3979B5F7 | Since: 1207
     */
    function startAudioSceneset(audioName: string, sceneset: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E399EAFBEEA74D5 | Since: 1207
     */
    function stopAllScriptedAudioSounds(): void;
    /**
     * No comment provided
     *
     * Hash: 0x36559148B78853B3 | Since: 1207
     */
    function stopAllScriptedConversions(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9428447DED71FC7E | Since: 1207
     */
    function stopAudioSceneset(sceneset: string): void;
    /**
     * Old Name: _STOP_SOUND_WITH_ID
     *
     * Hash: 0x3210BCB36AF7621B | Since: 1207
     */
    function stopSound(soundId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F2A2175734926D8 | Since: 1207
     */
    function stopSoundWithName(audioName: string, audioRef: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x05D6195FB4D428F4 | Since: 1207
     */
    function triggerMusicEventWithHash(eventName: number | string): any;
    /**
     * _UNLOAD_[A-C]* - USE_*
     *
     * Hash: 0x87E6302FC61208CC | Since: 1207
     */
    function unloadSpeechContext(speechContext: string): void;
    /**
     * Only used in R* SP Scripts
     * Old Name: _UPDATE_SOUND_POSITION
     *
     * Hash: 0x0286617C8FC50A53 | Since: 1207
     */
    function updateSoundCoord(soundId: number, pos: Vector3): void;
}
export declare namespace bounty {
    /**
     * No comment provided
     *
     * Hash: 0x4EF23E04A0C8FF51 | Since: 1207
     */
    function bountyGetBountyOnPlayer(gamerHandle: any, bountyData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8FAF4D262FABA99C | Since: 1207
     */
    function bountyGetCooldownCollection(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85E4D7B225A30ED1 | Since: 1207
     */
    function bountyGetLegendaryTarget(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB395A44A0C7CA615 | Since: 1207
     */
    function bountyGetWantedPosterSlot(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC81D7C7A151CFAA | Since: 1207
     */
    function bountyRequestBeginLegendaryMission(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x48E4E23F1739E197 | Since: 1311
     */
    function bountyRequestBeginLegendaryMissionForPosse(outRpcGuid: any): boolean;
    /**
     * _BOUNTY_IS_* or _BOUNTY_REQUEST_*
     *
     * Hash: 0x27D3A0E1FE090A43 | Since: 1207
     */
    function _0x27D3A0E1FE090A43(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x81847C2134039BDC | Since: 1207
     */
    function _0x81847C2134039BDC(): boolean;
    /**
     * _BOUNTY_C* or _BOUNTY_GET_*
     *
     * Hash: 0x86EC5F83867C4B70 | Since: 1436
     */
    function _0x86EC5F83867C4B70(): boolean;
    /**
     * _BOUNTY_GET_*
     *
     * Hash: 0xD6A67E2FF373D0E3 | Since: 1355
     */
    function _0xD6A67E2FF373D0E3(): number;
    /**
     * _BOUNTY_GET_*
     *
     * Hash: 0xF8BCC5ECA33AC9C1 | Since: 1207
     */
    function _0xF8BCC5ECA33AC9C1(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2BA1BCC99826CDA2 | Since: 1207
     */
    function bountyCancelLegendaryMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A9DF0FCD0C87FF9 | Since: 1207
     */
    function bountyCancelWantedPoster(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA59D1997ECD99F0A | Since: 1207
     */
    function bountyClearBeingBountyHunter(): void;
    /**
     * No comment provided
     *
     * Hash: 0x932DB3C05A7465D1 | Since: 1207
     */
    function bountyClearBeingTarget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x03B61CD51097DE60 | Since: 1207
     */
    function bountyIsRequestPending(rpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB096547D61868254 | Since: 1207
     */
    function bountyRequestBecomeTargetOfCharacterBountyHunt(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFFA13742E43507E3 | Since: 1207
     */
    function bountyRequestBeginWantedPoster(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x28717806D3BDD0D0 | Since: 1207
     */
    function bountyRequestBribeJailGuard(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9C3B0F746375162 | Since: 1207
     */
    function bountyRequestClaimCharacterBounty(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA7309AC0DCF6D950 | Since: 1207
     */
    function bountyRequestCompleteLegendaryMission(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBD137BF0EC50FC9 | Since: 1207
     */
    function bountyRequestCompleteSplitWantedPoster(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x727AB6F008BB9F29 | Since: 1207
     */
    function bountyRequestCompleteWantedPoster(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x12E981D53B07BF48 | Since: 1207
     */
    function bountyRequestEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x537CE992BD2D7BCB | Since: 1207
     */
    function bountyRequestPayOffBounty(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x587BCEC31D64F382 | Since: 1232
     */
    function bountyRequestPayOffBountyEx(outRpcGuid: any, costType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B53CA0E2AC3FF45 | Since: 1207
     */
    function bountyRequestPosseLeaderClaimCharacterBounty(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2D874BA20E8E1F20 | Since: 1207
     */
    function bountyRequestPosseLeaderEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x22D3A61CE053270C | Since: 1207
     */
    function bountyRequestPosseMemberClaimCharacterBountyShare(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8521C2E235558278 | Since: 1207
     */
    function bountyRequestPosseMemberEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
    /**
     * crimeType: see _REPORT_CRIME
     *
     * Hash: 0x188B748861B5BA17 | Since: 1207
     */
    function bountyRequestSelfReportCrime(outRpcGuid: any, crimeType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB462D69D406A2602 | Since: 1207
     */
    function bountyRequestSelfReportKilledByBountyHunter(outRpcGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F73AED12A5EF0FF | Since: 1207
     */
    function bountyRequestServedFullJailSentence(outRpcGuid: any): boolean;
}
export declare namespace brain {
    /**
     * No comment provided
     *
     * Hash: 0x3F44EA613A5B2676 | Since: 1207
     */
    function disableScriptBrainSet(brainSet: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CF6E5C6750EADBD | Since: 1207
     */
    function enableScriptBrainSet(brainSet: number): void;
    /**
     * Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
     * Alternative name _REGISTER_SCRIPT_BRAIN
     *
     * Old name: _PREPARE_SCRIPT_BRAIN
     *
     * Hash: 0xA32B0B05EFF75730 | Since: 1207
     */
    function reactivateAllObjectBrainsThatAreWaitingTillOutOfRange(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74C333E34DF74E8A | Since: 1207
     */
    function reactivateNamedObjectBrainsWaitingTillOutOfRange(scriptName: string): void;
    /**
     * Registers a script for any object with a specific model hash.
     *
     * Hash: 0x16AF9B4EEAC3B305 | Since: 1207
     */
    function registerObjectScriptBrain(scriptName: string, modelHash: number | string, activationRange: number): void;
    /**
     * Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
     * _SET_SCRIPT_BRAIN*
     *
     * Hash: 0x4AA5EA1EDFB25786 | Since: 1207
     */
    function _0x4AA5EA1EDFB25786(flag: number): void;
    /**
     * Common flags: 250, 99999
     * _SET_SCRIPT_BRAIN*
     *
     * Hash: 0xA6AC35DB4A7957A8 | Since: 1207
     */
    function _0xA6AC35DB4A7957A8(flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6818D1A194E29983 | Since: 1207
     */
    function getScriptBrainEntity(): number;
    /**
     * No comment provided
     *
     * Hash: 0x38F1E09224EECA09 | Since: 1311
     */
    function removeScriptBrainEntity(entity: number | Entity): void;
    /**
     * Returns threadId
     *
     * Hash: 0x4E4507CC5E4DB869 | Since: 1207
     */
    function startPreloadedScriptBrain(entity: number | Entity, scriptName: string, scriptStackSize: number): number;
    /**
     * Returns threadId
     *
     * Hash: 0x6F62FAE266DCFC81 | Since: 1207
     */
    function startScriptBrain(entity: number | Entity, scriptName: string): number;
}
export declare namespace builtin {
    /**
     * Rounds a float value up to the next whole number
     *
     * Hash: 0x11E019C8F43ACC8A | Since: 1207
     */
    function ceil(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD0FFB162F40A139C | Since: 1207
     */
    function cos(value: number): number;
    /**
     * Rounds a float value down to the next whole number
     *
     * Hash: 0xF34EE736CF047844 | Since: 1207
     */
    function floor(value: number): number;
    /**
     * Old name: _LOG10
     *
     * Hash: 0xE816E655DE37FE20 | Since: 1232
     */
    function log10(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE3621CC40F31FE2E | Since: 1207
     */
    function pow(base: number, exponent: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2DB717A73826179 | Since: 1207
     */
    function round(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC1B1E9A034A63A62 | Since: 1207
     */
    function settimera(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5AE11BC36633DE4E | Since: 1207
     */
    function settimerb(value: number): void;
    /**
     * THREAD_PRIO_HIGHEST = 0
     * THREAD_PRIO_NORMAL = 1
     * THREAD_PRIO_LOWEST = 2
     * THREAD_PRIO_MANUAL_UPDATE = 100
     *
     * Hash: 0x42B65DEEF2EDF2A1 | Since: 1207
     */
    function setThisThreadPriority(priority: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEDD95A39E5544DE8 | Since: 1207
     */
    function shiftLeft(value: number, bitShift: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x97EF1E5BCE9DC075 | Since: 1207
     */
    function shiftRight(value: number, bitShift: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0BADBFA3B172435F | Since: 1207
     */
    function sin(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x71D93B57D07F9804 | Since: 1207
     */
    function sqrt(value: number): number;
    /**
     * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
     *
     * Hash: 0x83666F9FB8FEBD4B | Since: 1207
     */
    function timera(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC9D9444186B5A374 | Since: 1207
     */
    function timerb(): number;
    /**
     * Gets the current frame time.
     *
     * Hash: 0x0000000050597EE2 | Since: 1207
     */
    function timestep(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBBDA792448DB5A89 | Since: 1207
     */
    function toFloat(value: number): number;
    /**
     * Calculates distance between vectors.
     * The value returned will be in meters.
     *
     * Hash: 0x2A488C176D52CCA5 | Since: 1207
     */
    function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
     * The value returned will be in RAGE units.
     *
     * Hash: 0xB7A628320EFF8E47 | Since: 1207
     */
    function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * Calculates the magnitude of a vector.
     *
     * Hash: 0x652D2EEEF1D3E62C | Since: 1207
     */
    function vmag(pos: Vector3): number;
    /**
     * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
     *
     * Hash: 0xA8CEACB4F35AE058 | Since: 1207
     */
    function vmag2(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x4EDE34FBADD967A6 | Since: 1207
     */
    function wait(ms: number): void;
}
export declare namespace cam {
    /**
     * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
     *
     * p8 big values ~100 will slow down the camera movement before reaching this node
     *
     * p9 != 0 seems to override the rotation/pitch (bool?)
     *
     * Hash: 0xF1F57F9D230F9CD1 | Since: 1207
     */
    function addCamSplineNode(camera: number, pos: Vector3, rot: Vector3, length: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x42ED56B02E05D109 | Since: 1207
     */
    function allowMotionBlurDecay(cam: number): void;
    /**
     * Last param determines if its relative to the Entity
     *
     * Hash: 0xFDC0DF7F6FB0A592 | Since: 1207
     */
    function attachCamToEntity(cam: number, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
    /**
     * boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
     *
     * Hash: 0xDFC1E4A44C0324CA | Since: 1207
     */
    function attachCamToPedBone(cam: number, ped: number | Ped, boneIndex: number, pos: Vector3, heading: boolean): void;
    /**
     * Only used in R* Script fm_mission_controller
     *
     * Hash: 0x0B0F914459731F60 | Since: 1311
     */
    function cinematicLocationOverrideTargetEntityThisUpdate(name: string, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D4D25C2137FF511 | Since: 1207
     */
    function cinematicLocationStopScriptedShotEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02389579A53C3276 | Since: 1207
     */
    function cinematicLocationTriggerScriptedShotEvent(dictionary: string, shotName: string, cameraName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE72CDBA7F0A02DD6 | Since: 1207
     */
    function createCam(camName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x57CDF879EA466C46 | Since: 1207
     */
    function createCamera(camHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x98B99B9F27E2D60B | Since: 1207
     */
    function createCameraWithParams(camHash: number | string, pos: Vector3, rot: Vector3, fov: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x40C23491CE83708E | Since: 1207
     */
    function createCamWithParams(camName: string, pos: Vector3, rot: Vector3, fov: number): number;
    /**
     * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
     *
     * Hash: 0x163600D6E136C9F8 | Since: 1207
     */
    function destroyAllCams(): void;
    /**
     * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
     *
     * Hash: 0x4E67E0B6D7FD5145 | Since: 1207
     */
    function destroyCam(cam: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x05B41DDBEB559556 | Since: 1207
     */
    function detachCam(cam: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E3F546ACFE6C8D9 | Since: 1207
     */
    function disableCamCollisionForObject(entity: number | Entity): void;
    /**
     * Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
     *
     * Hash: 0xA5929C2E57AC90D1 | Since: 1207
     */
    function disableCinematicBonnetCameraThisUpdate(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x77D65669A05D1A1A | Since: 1207
     */
    function disableFirstPersonFlashEffectThisUpdate(): void;
    /**
     * Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
     *
     * Hash: 0x9C473089A934C930 | Since: 1207
     */
    function disableOnFootFirstPersonViewThisUpdate(): void;
    /**
     * Returns whether or not the passed camera handle exists.
     *
     * Hash: 0x153AD457764FD704 | Since: 1207
     */
    function doesCamExist(cam: number): boolean;
    /**
     * Fades the screen in.
     *
     * duration: The time the fade should take, in milliseconds.
     *
     * Hash: 0x6A053CF596F67DF7 | Since: 1207
     */
    function doScreenFadeIn(duration: number): void;
    /**
     * Fades the screen out.
     *
     * duration: The time the fade should take, in milliseconds.
     *
     * Hash: 0x40C719A5E410B9E4 | Since: 1207
     */
    function doScreenFadeOut(duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x702B75DC9D3EDE56 | Since: 1207
     */
    function forceCinematicRenderingThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B12F11C2A9F0344 | Since: 1207
     */
    function getCamCoord(cam: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x8101D32A0A6B0F60 | Since: 1207
     */
    function getCamFov(cam: number): number;
    /**
     * rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
     *
     * Hash: 0x9BF96B57254E7889 | Since: 1207
     */
    function getCamRot(cam: number, rotationOrder: number): Vector3;
    /**
     * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
     *
     * (returns 1.0f when no nodes has been added, reached end of non existing spline)
     *
     * Hash: 0x095EDCD24D90033A | Since: 1207
     */
    function getCamSplinePhase(cam: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5352E025EC2B416F | Since: 1207
     */
    function getFinalRenderedCamCoord(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x04AF77971E508F6A | Since: 1207
     */
    function getFinalRenderedCamFov(): number;
    /**
     * No comment provided
     *
     * Hash: 0x602685BD85DD26CA | Since: 1207
     */
    function getFinalRenderedCamRot(rotationOrder: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xB4132CA1B0EE1365 | Since: 1207
     */
    function getFirstPersonAimCamZoomFactor(): number;
    /**
     * No comment provided
     *
     * Hash: 0x595320200B98596E | Since: 1207
     */
    function getGameplayCamCoord(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xF6A96E5ACEEC6E50 | Since: 1207
     */
    function getGameplayCamFov(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC4ABF536048998AA | Since: 1207
     */
    function getGameplayCamRelativeHeading(): number;
    /**
     * No comment provided
     *
     * Hash: 0x99AADEBBA803F827 | Since: 1207
     */
    function getGameplayCamRelativePitch(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0252D2B5582957A6 | Since: 1207
     */
    function getGameplayCamRot(rotationOrder: number): Vector3;
    /**
     * More info: see HAS_LETTER_BOX
     *
     * Hash: 0xA2B1C7EF759A63CE | Since: 1207
     */
    function getLetterBoxRatio(): number;
    /**
     * No comment provided
     *
     * Hash: 0x03A8931ECC8015D6 | Since: 1207
     */
    function getRenderingCam(): number;
    /**
     * More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
     *
     * Hash: 0x81DCFD13CF39920E | Since: 1207
     */
    function hasLetterBox(): boolean;
    /**
     * Old name: _INVALIDATE_VEHICLE_IDLE_CAM
     *
     * Hash: 0x634F4A0562CF19B8 | Since: 1207
     */
    function invalidateCinematicVehicleIdleMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0x698F456FB909E077 | Since: 1232
     */
    function isAimCamActive(): boolean;
    /**
     * Returns whether or not the passed camera handle is active.
     *
     * Hash: 0x63EFCC7E1810B8E6 | Since: 1207
     */
    function isCamActive(cam: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x578F8F1CAA17BD2B | Since: 1207
     */
    function isCamInterpolating(cam: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4415F8A6C536D39F | Since: 1207
     */
    function isCamRendering(cam: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2EEB402BD7320159 | Since: 1207
     */
    function isCamShaking(cam: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBF7C780731AADBF8 | Since: 1207
     */
    function isCinematicCamRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x139EFB0A71DD9011 | Since: 1207
     */
    function isDeathFailCameraRunning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF63134C54B6EC212 | Since: 1207
     */
    function isFirstPersonAimCamActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA24C1D341C6E0D53 | Since: 1207
     */
    function isFirstPersonCameraActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA40C2F51FB589E9A | Since: 1207
     */
    function isFollowVehicleCamActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8FE0D24FFD04D5A2 | Since: 1207
     */
    function isGameplayCamLookingBehind(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8660EA714834E412 | Since: 1207
     */
    function isGameplayCamRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA4C5F4AA0A4DBEF | Since: 1207
     */
    function isGameplayCamShaking(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E04AB5FEE042D4A | Since: 1207
     */
    function isGameplayHintActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x251241CAEC707106 | Since: 1207
     */
    function isInterpolatingFromScriptCams(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x43AB9D5A7D415478 | Since: 1207
     */
    function isInterpolatingToScriptCams(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x37F9A426FBCF4AF2 | Since: 1207
     */
    function isScreenFadedIn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF5472C80DF2FF847 | Since: 1207
     */
    function isScreenFadedOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CECCC63FFA2EF24 | Since: 1207
     */
    function isScreenFadingIn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02F39BEFE7B88D00 | Since: 1207
     */
    function isScreenFadingOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E941B5FFA2989C6 | Since: 1207
     */
    function isSphereVisible(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA263DDF694D563F6 | Since: 1207
     */
    function playCamAnim(cam: number, animName: string, animDictionary: string, pos: Vector3, rot: Vector3, animFlags: number, rotOrder: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x948B39341C3A40C2 | Since: 1207
     */
    function pointCamAtCoord(cam: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC2867E6074D3A61 | Since: 1207
     */
    function pointCamAtEntity(cam: number, entity: number | Entity): void;
    /**
     * ease - smooth transition between the camera's positions
     * easeTime - Time in milliseconds for the transition to happen
     *
     * If you have created a script (rendering) camera, and want to go back to the
     * character (gameplay) camera, call this native with render set to FALSE.
     * Setting ease to TRUE will smooth the transition.
     *
     * Hash: 0x33281167E4942E4F | Since: 1207
     */
    function renderScriptCams(render: boolean, ease: boolean, easeTime: number): void;
    /**
     * Set camera as active/inactive.
     *
     * Hash: 0x87295BCA613800C8 | Since: 1207
     */
    function setCamActive(cam: number, active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B15AE2987C1AC8F | Since: 1207
     */
    function setCamActiveWithInterp(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number): void;
    /**
     * Allows you to aim and shoot at the direction the camera is facing.
     *
     * Hash: 0x3CB9E8BDE5E76F33 | Since: 1207
     */
    function setCamAffectsAiming(cam: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B8F3CE5A6001298 | Since: 1207
     */
    function setCamControlsMiniMapHeading(cam: number): void;
    /**
     * Sets the position of the cam.
     *
     * Hash: 0xF9EE7D419EE49DE6 | Since: 1207
     */
    function setCamCoord(cam: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E32817BF6302111 | Since: 1207
     */
    function setCamFarClip(cam: number, farClip: number): void;
    /**
     * Sets the field of view of the cam.
     *
     * Min: 1.0f
     * Max: 130.0f
     *
     * Hash: 0x27666E5988D9D429 | Since: 1207
     */
    function setCamFov(cam: number, fieldOfView: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x45FD891364181F9E | Since: 1207
     */
    function setCamMotionBlurStrength(cam: number, strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA924028272A61364 | Since: 1207
     */
    function setCamNearClip(cam: number, nearClip: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA47BBFFFB83D4D0A | Since: 1207
     */
    function setCamParams(cam: number, pos: Vector3, rot: Vector3, fieldOfView: number): void;
    /**
     * Sets the rotation of the cam.
     *
     * Hash: 0x63DFA6810AD78719 | Since: 1207
     */
    function setCamRot(cam: number, rot: Vector3, rotationOrder: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF6311652CA91015 | Since: 1207
     */
    function setCamSplineDuration(cam: number, timeDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1898A68E7C15636 | Since: 1207
     */
    function setCamSplinePhase(cam: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84B3645618E726B0 | Since: 1207
     */
    function setCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB90411F480457A6C | Since: 1207
     */
    function setCinematicButtonActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE7A90B160F75046 | Since: 1207
     */
    function setCinematicModeActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0x05BD5E4088B30A66 | Since: 1207
     */
    function setFirstPersonAimCamRelativeHeadingLimitsThisUpdate(): void;
    /**
     * Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
     *
     * Hash: 0x715B7F5E8BED32A2 | Since: 1207
     */
    function setFirstPersonAimCamRelativePitchLimitsThisUpdate(): void;
    /**
     * Forces gameplay cam to specified ped as if you were the ped or spectating it
     *
     * Hash: 0x82E41D6ADE924FCA | Since: 1207
     */
    function setGameplayCamFollowPedThisUpdate(ped: number | Ped): void;
    /**
     * Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
     *
     * Hash: 0xD904F75DBD7AB865 | Since: 1207
     */
    function setGameplayCamIgnoreEntityCollisionThisUpdate(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x8459B3E64257B21D | Since: 1207
     */
    function setGameplayCamMaxMotionBlurStrengthThisUpdate(): void;
    /**
     * Sets the camera position relative to heading in float from -360 to +360.
     *
     * Heading is always 0 in aiming camera.
     *
     * Hash: 0x5D1EB123EAC5D071 | Since: 1207
     */
    function setGameplayCamRelativeHeading(heading: number): void;
    /**
     * Sets the camera pitch.
     *
     * Parameters:
     * x = pitches the camera on the x axis.
     * Value2 = always seems to be hex 0x3F800000 (1.000000 float).
     *
     * Hash: 0xFB760AF4F537B8BF | Since: 1207
     */
    function setGameplayCamRelativePitch(x: number, Value2: number): void;
    /**
     * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
     *
     * Hash: 0x570E35F5C4A44838 | Since: 1207
     */
    function setGameplayCamShakeAmplitude(amplitude: number): void;
    /**
     * Hash used in finale1.ysc: 1726668277
     *
     * Hash: 0xFA33B8C69A4A6A0F | Since: 1207
     */
    function setGameplayCoordHint(pos: Vector3, duration: number, blendOutDuration: number, blendInDuration: number): void;
    /**
     * p6 & p7 - possibly length or time
     *
     * Hash: 0xD1F7F32640ADFD12 | Since: 1207
     */
    function setGameplayEntityHint(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x421192A2DA48FD01 | Since: 1207
     */
    function setGameplayHintBaseOrbitPitchOffset(): void;
    /**
     * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
     *
     * Hash: 0xF86B6F93727C59C9 | Since: 1207
     */
    function setGameplayHintCameraRelativeSideOffset(): void;
    /**
     * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
     *
     * Hash: 0x29E74F819150CC32 | Since: 1207
     */
    function setGameplayHintCameraRelativeVerticalOffset(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDDC54181868F81F | Since: 1207
     */
    function setGameplayHintFollowDistanceScalar(): void;
    /**
     * No comment provided
     *
     * Hash: 0x661E58BC6F00A49A | Since: 1207
     */
    function setGameplayHintFov(FOV: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC40551D65F2BF297 | Since: 1207
     */
    function setGameplayObjectHint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x90FB951648851733 | Since: 1207
     */
    function setGameplayPedHint(x1: number, y1: number, z1: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2B2BB7DAC280515 | Since: 1207
     */
    function setGameplayVehicleHint(): void;
    /**
     * Forces gameplay cam to specified vehicle as if you were in it
     *
     * Hash: 0xFA1D5E8D1C3CCD67 | Since: 1207
     */
    function setInVehicleCamStateThisUpdate(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DD95A8D6B24A0C9 | Since: 1207
     */
    function setScriptedCameraIsFirstPersonThisFrame(): void;
    /**
     * Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
     *
     * Hash: 0x2126C740A4AC370B | Since: 1207
     */
    function setThirdPersonCamOrbitDistanceLimitsThisUpdate(distance: number): void;
    /**
     * minimum: Degrees between -180f and 180f.
     * maximum: Degrees between -180f and 180f.
     *
     * Clamps the gameplay camera's current yaw.
     *
     * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
     *
     * Old name: _CLAMP_GAMEPLAY_CAM_YAW
     *
     * Hash: 0x14F3947318CA8AD2 | Since: 1207
     */
    function setThirdPersonCamRelativeHeadingLimitsThisUpdate(minimum: number, maximum: number): void;
    /**
     * minimum: Degrees between -90f and 90f.
     * maximum: Degrees between -90f and 90f.
     *
     * Clamps the gameplay camera's current pitch.
     *
     * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
     *
     * Old name: _CLAMP_GAMEPLAY_CAM_PITCH
     *
     * Hash: 0x326C7AA308F3DF6A | Since: 1207
     */
    function setThirdPersonCamRelativePitchLimitsThisUpdate(minimum: number, maximum: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7F4D54CF80AFA34 | Since: 1207
     */
    function setWidescreenBorders(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9A7BCF5D050D4E7 | Since: 1207
     */
    function shakeCam(cam: number, type: string, amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9B31B4650520529 | Since: 1207
     */
    function shakeGameplayCam(shakeName: string, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA1B30A3357C71F1 | Since: 1207
     */
    function stopCamPointing(cam: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB78CC4B4706614B0 | Since: 1207
     */
    function stopCamShaking(cam: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x93759A83D0D844E7 | Since: 1207
     */
    function stopCodeGameplayHint(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0DE43D290FB65F9 | Since: 1207
     */
    function stopGameplayCamShaking(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BCEC33D54CFCA8A | Since: 1207
     */
    function stopGameplayHint(): void;
    /**
     * This native makes the gameplay camera zoom into first person/third person with a special effect.
     * blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
     *
     * Hash: 0x8C7C7FF7CF0E5153 | Since: 1207
     */
    function stopRenderingScriptCamsUsingCatchUp(render: boolean, distance: number, blendBackSmoothingType: number): void;
    /**
     * shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
     * _IS_GAMEPLAY_*
     *
     * Hash: 0x0060B31968E60E41 | Since: 1207
     */
    function _0x0060B31968E60E41(shakeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x04084490CC302CFB | Since: 1207
     */
    function _0x04084490CC302CFB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x06557F6D96C86881 | Since: 1207
     */
    function _0x06557F6D96C86881(): void;
    /**
     * Not official name
     * This native allows to move the gameplay cam with the given speed, enableSlide will allow to move the cam to the slideOffset, enableZoom will allow to move the cam to the zoomOffset.
     *
     * EXAMPLE:
     * Citizen.InvokeNative(0x066167c63111d8cf,1.0, true, -1.0, true, 2.0)
     *
     * Hash: 0x066167C63111D8CF | Since: 1207
     */
    function setGameplayCamParamsThisUpdate(camSpeed: number, enableSlide: boolean, slideOffset: number, enableZoom: boolean, zoomOffset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0961B089947BA6D0 | Since: 1207
     */
    function _0x0961B089947BA6D0(): void;
    /**
     * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
     * _DISABLE_*
     *
     * Hash: 0x0F1FFEF5D54AE832 | Since: 1207
     */
    function _0x0F1FFEF5D54AE832(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FF7125F07DEB84F | Since: 1207
     */
    function _0x0FF7125F07DEB84F(): void;
    /**
     * Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
     * _IS_SC(REEN_)* (?)
     *
     * Hash: 0x1204EB53A5FBC63D | Since: 1207
     */
    function _0x1204EB53A5FBC63D(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x14C4A49E36C29E49 | Since: 1207
     */
    function _0x14C4A49E36C29E49(): any;
    /**
     * No comment provided
     *
     * Hash: 0x16E9ABDD34DDD931 | Since: 1207
     */
    function _0x16E9ABDD34DDD931(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1811A02277A9E49D | Since: 1207
     */
    function _0x1811A02277A9E49D(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x18C3DFAC458783BB | Since: 1207
     */
    function _0x18C3DFAC458783BB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x190F7DA1AC09A8EF | Since: 1207
     */
    function _0x190F7DA1AC09A8EF(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1D931B7CC0EE3956 | Since: 1436
     */
    function _0x1D931B7CC0EE3956(dictionary: string, shotName: string, cameraName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1D9F72DD4FD9A9D7 | Since: 1207
     */
    function _0x1D9F72DD4FD9A9D7(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F6EBD94680252CE | Since: 1207
     */
    function _0x1F6EBD94680252CE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FC6C727D30FFDDE | Since: 1207
     */
    function _0x1FC6C727D30FFDDE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x29E6655DF3590B0D | Since: 1207
     */
    function _0x29E6655DF3590B0D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2AB7C81B3F70570C | Since: 1207
     */
    function _0x2AB7C81B3F70570C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2DD3149DC34A3F4C | Since: 1207
     */
    function _0x2DD3149DC34A3F4C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x39073DA4EDDBC91D | Since: 1207
     */
    function _0x39073DA4EDDBC91D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B8E3AD9677CE12B | Since: 1207
     */
    function _0x3B8E3AD9677CE12B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C486E334520579D | Since: 1207
     */
    function _0x3C486E334520579D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C8F74E8FE751614 | Since: 1207
     */
    function _0x3C8F74E8FE751614(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4138EE36BC3DC0A7 | Since: 1207
     */
    function _0x4138EE36BC3DC0A7(): any;
    /**
     * No comment provided
     *
     * Hash: 0x41E452A3C580D1A7 | Since: 1207
     */
    function _0x41E452A3C580D1A7(): void;
    /**
     * No comment provided
     *
     * Hash: 0x450769C833D58844 | Since: 1207
     */
    function _0x450769C833D58844(): any;
    /**
     * No comment provided
     *
     * Hash: 0x465F04F68AD38197 | Since: 1207
     */
    function _0x465F04F68AD38197(dictionary: string, shotName: string, duration: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x4D2F46D1B28D90FB | Since: 1207
     */
    function _0x4D2F46D1B28D90FB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5060FA977CEA4455 | Since: 1207
     */
    function _0x5060FA977CEA4455(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5B637D6F3B67716A | Since: 1207
     */
    function _0x5B637D6F3B67716A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6072B7420A83A03F | Since: 1207
     */
    function _0x6072B7420A83A03F(): any;
    /**
     * Zooms in the gameplay camera to the next zoom level?
     * USE_* - WAS_*
     *
     * Hash: 0x632BE8D84846FA56 | Since: 1207
     */
    function _0x632BE8D84846FA56(): void;
    /**
     * Maintains the death camera after respawn
     *
     * Hash: 0x63E5841A9264D016 | Since: 1207
     */
    function _0x63E5841A9264D016(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x641092322A8852AB | Since: 1207
     */
    function _0x641092322A8852AB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6519238858AF5479 | Since: 1207
     */
    function _0x6519238858AF5479(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6CAB0BA160B168D2 | Since: 1207
     */
    function _0x6CAB0BA160B168D2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DFD37E586D4F44F | Since: 1207
     */
    function _0x6DFD37E586D4F44F(): any;
    /**
     * No comment provided
     *
     * Hash: 0x70A6658D476C6187 | Since: 1207
     */
    function _0x70A6658D476C6187(): void;
    /**
     * Forces camera position to closest 3rd person
     *
     * Hash: 0x718C6ECF5E8CBDD4 | Since: 1207
     */
    function forceThirdPersonCloseThisFrame(): void;
    /**
     * Zooms in the third person camera closer to ground level.
     * Must be called every frame to interpolate.
     * Pass false to reset.
     *
     * Hash: 0x71D71E08A7ED5BD7 | Since: 1207
     */
    function _0x71D71E08A7ED5BD7(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x728491FB3DFFEF99 | Since: 1207
     */
    function _0x728491FB3DFFEF99(): void;
    /**
     * No comment provided
     *
     * Hash: 0x73FF6BE63DC18819 | Since: 1207
     */
    function _0x73FF6BE63DC18819(): any;
    /**
     * No comment provided
     *
     * Hash: 0x796085220ADCC847 | Since: 1207
     */
    function _0x796085220ADCC847(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7CE9DC58E3E4755F | Since: 1207
     */
    function _0x7CE9DC58E3E4755F(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7E40A01B11398FCB | Since: 1207
     */
    function _0x7E40A01B11398FCB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x80D7A3E39B120BC4 | Since: 1207
     */
    function _0x80D7A3E39B120BC4(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8505E05FC8822843 | Since: 1207
     */
    function _0x8505E05FC8822843(): void;
    /**
     * UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
     * Return type char in ida
     * _SET_GAMEPLAY_HINT_*
     *
     * Hash: 0x88544C0E3291DCAE | Since: 1207
     */
    function _0x88544C0E3291DCAE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B1A5FE7E41E52B2 | Since: 1311
     */
    function _0x8B1A5FE7E41E52B2(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8E036B41C37D0E5F | Since: 1207
     */
    function _0x8E036B41C37D0E5F(): void;
    /**
     * _IS_SCRIPTED_S*
     *
     * Hash: 0x975F6EBB62632FE3 | Since: 1207
     */
    function _0x975F6EBB62632FE3(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9AC65A36D3C0C189 | Since: 1207
     */
    function _0x9AC65A36D3C0C189(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA54D643D0773EB65 | Since: 1207
     */
    function _0xA54D643D0773EB65(dictionary: string, shotName: string, duration: number): void;
    /**
     * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
     * _DISABLE_*
     *
     * Hash: 0xA8BA2E0204D8486F | Since: 1355
     */
    function _0xA8BA2E0204D8486F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC77757C05DE9E5A | Since: 1207
     */
    function _0xAC77757C05DE9E5A(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6A80E1E3A5444F1 | Since: 1311
     */
    function _0xB6A80E1E3A5444F1(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB85C13E0BF1F2A1C | Since: 1207
     */
    function _0xB85C13E0BF1F2A1C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC205B3C54C6A4E37 | Since: 1207
     */
    function _0xC205B3C54C6A4E37(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC252C0CC969AF79A | Since: 1207
     */
    function _0xC252C0CC969AF79A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC285FD21294A1C49 | Since: 1207
     */
    function _0xC285FD21294A1C49(cameraDictionary: string): boolean;
    /**
     * Camera will be or is running
     *
     * Hash: 0xC3742F1FDF0A6824 | Since: 1355
     */
    function _0xC3742F1FDF0A6824(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3AEBB276825A359 | Since: 1436
     */
    function _0xC3AEBB276825A359(dictionary: string, shotName: string, duration: number): boolean;
    /**
     * shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
     * _RES*
     *
     * Hash: 0xC3E9E5D4F413B773 | Since: 1207
     */
    function _0xC3E9E5D4F413B773(shakeName: string, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF69EA05CD9C33C9 | Since: 1207
     */
    function _0xCF69EA05CD9C33C9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB382FE20C2DA222 | Since: 1207
     */
    function _0xDB382FE20C2DA222(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC62CD70658E7A02 | Since: 1207
     */
    function _0xDC62CD70658E7A02(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDF7F5BE9150E47E4 | Since: 1207
     */
    function _0xDF7F5BE9150E47E4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE28F73212A813E82 | Since: 1207
     */
    function _0xE28F73212A813E82(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2BB2D6A9FE2ECDE | Since: 1207
     */
    function _0xE2BB2D6A9FE2ECDE(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4B7945EF4F1BFB2 | Since: 1207
     */
    function _0xE4B7945EF4F1BFB2(cam: number, args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6F364DE6C2FDEFE | Since: 1207
     */
    function _0xE6F364DE6C2FDEFE(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA113BF9B0C0C5D7 | Since: 1207
     */
    function _0xEA113BF9B0C0C5D7(dictionary: string, shotName: string, duration: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xEF9A3132A0AA6B19 | Since: 1207
     */
    function _0xEF9A3132A0AA6B19(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF1A6FEEDF3776EF9 | Since: 1207
     */
    function _0xF1A6FEEDF3776EF9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF48664E9C83825E3 | Since: 1207
     */
    function _0xF48664E9C83825E3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF824530B612FE0CE | Since: 1207
     */
    function _0xF824530B612FE0CE(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFC3F638BE2B6BB02 | Since: 1207
     */
    function _0xFC3F638BE2B6BB02(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEB8646818294C75 | Since: 1207
     */
    function _0xFEB8646818294C75(): void;
    /**
     * _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
     *
     * Hash: 0xFEFDDC6E8FDF8A75 | Since: 1207
     */
    function _0xFEFDDC6E8FDF8A75(shakeName: string, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8B207C34285E978 | Since: 1207
     */
    function camCreate(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B0279170961A73F | Since: 1207
     */
    function camCreate2(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A5A4F1979ABB40E | Since: 1207
     */
    function camDestroy(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E94C95EC3185FA9 | Since: 1207
     */
    function cinematicLocationSetLocationAndRotation(name: string, pos: Vector3, rot: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC016635D6A73B31 | Since: 1207
     */
    function cinematicLocationTriggerScriptedShotEvent2(dictionary: string, shotName: string, duration: number): void;
    /**
     * Creates Kill Cam for specified Ped Handle
     *
     * Hash: 0x2F994CC29CAA9D22 | Since: 1207
     */
    function createKillCam(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8910C24B7E0046EC | Since: 1207
     */
    function disableCinematicModeThisFrame(): void;
    /**
     * Does the same as 0x9C473089A934C930 (DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE)
     *
     * Hash: 0x05AB44D906738426 | Since: 1207
     */
    function disableOnFootFirstPersonViewThisUpdate2(): void;
    /**
     * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
     * Params: targetPed = death cam focuses on it
     *
     * Hash: 0xE3639DB78B3B5400 | Since: 1207
     */
    function forceCinematicDeathCamOnPed(targetPed: number | Ped): void;
    /**
     * Returns true if first person camera is active in saloon1.ysc
     *
     * Hash: 0x90DA5BA5C2635416 | Since: 1207
     */
    function forceFirstPersonCamThisFrame(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC64ABC0676AF262B | Since: 1207
     */
    function forceLetterBoxThisUpdate(): void;
    /**
     * Forces camera position to furthest 3rd person
     *
     * Hash: 0x1CFB749AD4317BDE | Since: 1207
     */
    function forceThirdPersonCamFarThisFrame(): void;
    /**
     * Forces camera position to second furthest 3rd person
     *
     * Hash: 0x8370D34BD2E60B73 | Since: 1207
     */
    function forceThirdPersonCamThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x027CAB2C3AF27010 | Since: 1207
     */
    function freezeGameplayCamThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4653A741D17F2CD0 | Since: 1207
     */
    function getPhotoModeDof(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2533BAFFBE737E54 | Since: 1207
     */
    function getPhotoModeFocalLength(): number;
    /**
     * No comment provided
     *
     * Hash: 0x18FC740FFDCD7454 | Since: 1207
     */
    function getPhotoModeFocusDistance(): number;
    /**
     * Only used in R* Script camera_photomode
     *
     * Hash: 0x20389408F0E93B9A | Since: 1207
     */
    function isAnimSceneCamActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x927B810E43E99932 | Since: 1207
     */
    function isCameraAvailable(cameraDictionary: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDD0B7C5AE58F721D | Since: 1207
     */
    function isCamDataDictLoaded(cameraDictionary: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA14D5FE82BCB1D9E | Since: 1207
     */
    function isCamPhotofxRunning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA235E2F2C09E952 | Since: 1207
     */
    function isCinematicCamLocationLoaded(sLocationDictName: string): boolean;
    /**
     * Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
     *
     * Hash: 0x595550376B7EA230 | Since: 1207
     */
    function isCinematicCamLocationLoaded2(locationDictName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74F1D22EFA71FAB8 | Since: 1207
     */
    function isInCinematicMode(): boolean;
    /**
     * Returns true if player is in first person
     *
     * Hash: 0xD1BA66940E94C547 | Since: 1207
     */
    function isInFullFirstPersonMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A4D224FC7643941 | Since: 1207
     */
    function loadCameraDataDict(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B3C2D961F5FC0E1 | Since: 1207
     */
    function loadCinematicCamLocation(locationDictName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F97E85EC142255E | Since: 1207
     */
    function pauseCameraFocus(cam: number, pause: boolean): void;
    /**
     * Used to enable headshot kill replay when you headshot set ped.
     * Params: p1 seems to be 0 or 1 in R* Scripts
     *
     * Hash: 0x986F7A51EE3E1F92 | Since: 1207
     */
    function reactivatePedHeadshotExecuteSlowcam(ped: number | Ped): void;
    /**
     * Creates Cinematic Black Bars (at top and bottom)
     * Disable instantly: false/false, Enable instantly: true/true
     *
     * Hash: 0x69D65E89FFD72313 | Since: 1207
     */
    function requestLetterBoxNow(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE296208C273BD7F0 | Since: 1207
     */
    function requestLetterBoxOvertime(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11F32BB61B756732 | Since: 1207
     */
    function setCamFocusDistance(cam: number, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C1053C433A573CF | Since: 1207
     */
    function setGameplayCamInitialHeading(camInitialHeading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x449995EA846D3FC2 | Since: 1207
     */
    function setGameplayCamInitialPitch(camInitialPitch: number): void;
    /**
     * Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
     *
     * Hash: 0xBCDA0BA8762FACB9 | Since: 1207
     */
    function setGameplayCamInitialZoom(camInitialZoom: number): void;
    /**
     * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
     * _SET_P* - _SET_S*
     *
     * Hash: 0x6E969927CF632608 | Since: 1207
     */
    function setStartCinematicDeathCam(): void;
    /**
     * [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
     * p0: struct<32> \/\*256\*\/
     *
     * Hash: 0x65B205BF30C13DDB | Since: 1207
     */
    function startCameraOrbit(): void;
    /**
     * script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
     * script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
     * _STOP_GAMEPLAY_CAM* - _STOP_I*
     *
     * Hash: 0x4285804FD65D8066 | Since: 1207
     */
    function stopGameplayCamShakingWithName(shakeName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A92C06ACBAF9731 | Since: 1207
     */
    function triggerMissionFailedCam(): void;
    /**
     * No comment provided
     *
     * Hash: 0x798BE43C9393632B | Since: 1207
     */
    function unloadCameraDataDict(cameraDictionary: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2412216FCC7B4E3E | Since: 1207
     */
    function unloadCinematicCameraLocation(dictionaryName: string): void;
}
export declare namespace clock {
    /**
     * No comment provided
     *
     * Hash: 0xAB7C251C7701D336 | Since: 1207
     */
    function addToClockTime(hours: number, minutes: number, seconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0184750AE88D0B1D | Since: 1207
     */
    function advanceClockTimeTo(hour: number, minute: number, second: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF2FD796C54480A5 | Since: 1207
     */
    function getClockDayOfMonth(): number;
    /**
     * Gets the current day of the week.
     *
     * 0: Sunday
     * 1: Monday
     * 2: Tuesday
     * 3: Wednesday
     * 4: Thursday
     * 5: Friday
     * 6: Saturday
     *
     * Hash: 0x4DD02D4C7FB30076 | Since: 1207
     */
    function getClockDayOfWeek(): number;
    /**
     * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
     *
     * Hash: 0xC82CF208C2B19199 | Since: 1207
     */
    function getClockHours(): number;
    /**
     * Gets the current ingame clock minute.
     *
     * Hash: 0x4E162231B823DBBF | Since: 1207
     */
    function getClockMinutes(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D44E8FC79EAB1AC | Since: 1207
     */
    function getClockMonth(): number;
    /**
     * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
     *
     * Hash: 0xB6101ABE62B5F080 | Since: 1207
     */
    function getClockSeconds(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE136DCA28C4A48BA | Since: 1207
     */
    function getClockYear(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE4CB8D126501EC52 | Since: 1207
     */
    function getMillisecondsPerGameMinute(): number;
    /**
     * No comment provided
     *
     * Hash: 0x90338AD4A784E455 | Since: 1207
     */
    function getPosixTime(year: number, month: number, day: number, hour: number, minute: number, second: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D1A590C92BF377E | Since: 1207
     */
    function pauseClock(toggle: boolean, unused: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x02AD3092562941E2 | Since: 1207
     */
    function setClockDate(day: number, month: number, year: number): void;
    /**
     * SET_CLOCK_TIME(12, 34, 56);
     *
     * Hash: 0x3A52C59FFB2DEED8 | Since: 1207
     */
    function setClockTime(hour: number, minute: number, second: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x28EEACE9B43D9597 | Since: 1207
     */
    function addTimeToDateTime(inDateTime: any, timeToAdd: any, outDateTime: any): void;
    /**
     * Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
     *
     * Hash: 0x86A68E84E5884951 | Since: 1207
     */
    function getPosixTimeStruct(outTime: any): void;
    /**
     * Base year is 1898.
     *
     * Hash: 0x78FD8BE812E436B2 | Since: 1207
     */
    function getSecondsSinceBaseYear(): number;
    /**
     * No comment provided
     *
     * Hash: 0x568D998A9FF96774 | Since: 1207
     */
    function pauseClockThisFrame(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x04EEDB3848DACF68 | Since: 1207
     */
    function setMillisecondsPerGameMinute(ms: number): void;
}
export declare namespace collection {
    /**
     * No comment provided
     *
     * Hash: 0x0B6D275D2F242E17 | Since: 1207
     */
    function collectableCategorySetHasReceivedList(): void;
    /**
     * collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
     *
     * Hash: 0xCC644BC1DD655269 | Since: 1207
     */
    function collectableGetCategoryItemSetBuyAward(collectableCategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x33825A7388A6B9F6 | Since: 1207
     */
    function _0x33825A7388A6B9F6(collectableCategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3FD91F1A148A0468 | Since: 1232
     */
    function _0x3FD91F1A148A0468(collectableCategory: number | string): any;
    /**
     * Params: collectableCategory = WEEKLY_COLLECTABLES
     *
     * Hash: 0x61BEFBA3CE7A3BC8 | Since: 1232
     */
    function _0x61BEFBA3CE7A3BC8(collectableCategory: number | string): boolean;
    /**
     * Params: collectableCategory = WEEKLY_COLLECTABLES
     *
     * Hash: 0x6BAB7ACED1017204 | Since: 1207
     */
    function _0x6BAB7ACED1017204(collectableCategory: number | string): boolean;
    /**
     * Returns p2 (index?) for 0xB9020EC89C07DF04
     *
     * Hash: 0x755901C7598B97BC | Since: 1207
     */
    function _0x755901C7598B97BC(collectableCategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x775FA1FC87666847 | Since: 1232
     */
    function _0x775FA1FC87666847(collectableCategory: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x93F2E7B5DB85657B | Since: 1207
     */
    function _0x93F2E7B5DB85657B(): any;
    /**
     * Params: collectableCategory = WEEKLY_COLLECTABLES
     *
     * Hash: 0x9ADEE485726025D4 | Since: 1207
     */
    function _0x9ADEE485726025D4(collectableCategory: number | string): number;
    /**
     * Accepts more hashes than 0xCC644BC1DD655269
     * Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
     *
     * Hash: 0xB9020EC89C07DF04 | Since: 1207
     */
    function _0xB9020EC89C07DF04(collectableCategory: number | string, index: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xC3CA424E1F12ED0C | Since: 1232
     */
    function _0xC3CA424E1F12ED0C(collectableCategory: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xC4AC39719C1BB559 | Since: 1232
     */
    function _0xC4AC39719C1BB559(collectableCategory: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xD1806FB3EDED6D11 | Since: 1232
     */
    function _0xD1806FB3EDED6D11(collectableCategory: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xD297F68928A58130 | Since: 1232
     */
    function _0xD297F68928A58130(collectableCategory: number | string): any;
    /**
     * Returns discoveredItemHash
     * _COLLECTABLE_C* - _COLLECTABLE_G*
     *
     * Hash: 0xEC3959E9950BF56B | Since: 1207
     */
    function collectableSetItemHashDiscovered(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xFC832B06127D8E99 | Since: 1207
     */
    function _0xFC832B06127D8E99(collectableCategory: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62CAB7DB62EAD434 | Since: 1207
     */
    function collectableCategoryGetNumCollectables(collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5461C821D00FE15A | Since: 1207
     */
    function collectableCategoryGetNumFound(collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3A65F4844913A047 | Since: 1207
     */
    function collectableCategoryGetNumTurnedIn(collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x13AAECDA43318BFE | Since: 1207
     */
    function collectableCategoryGetToastTextureDictionary(collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD52D20B0C76BB26D | Since: 1207
     */
    function collectableCategoryGetToastTextureName(collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
     * Returns collectableCategory Hash
     *
     * Hash: 0x725D52F21A5E9EF6 | Since: 1207
     */
    function collectableGetCategory(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x126CBEBBA46693CF | Since: 1207
     */
    function collectableGetCollectableItemHash(index: number, collectableCategory: number | string, collectableSubcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x922A79CD4A033B8B | Since: 1207
     */
    function collectableGetIpl(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF83D3DDA4D3C8169 | Since: 1207
     */
    function collectableGetNumFound(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9A03F22AD446EEAC | Since: 1207
     */
    function collectableGetNumTurnedIn(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x1F1DD794908C2BFA | Since: 1207
     */
    function collectableGetPlacementLocation(collectableItem: number | string): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x6052B4DE6657684F | Since: 1207
     */
    function collectableGetSubcategory(collectableItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3EA62E56F386C997 | Since: 1207
     */
    function collectableIncrementNumFound(collectableItem: number | string, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x398FAB9C96A81924 | Since: 1207
     */
    function collectableIncrementNumTurnedIn(collectableItem: number | string, amount: number): void;
}
export declare namespace companion {
    /**
     * No comment provided
     *
     * Hash: 0x0A8FD91EDE7B328A | Since: 1207
     */
    function _0x0A8FD91EDE7B328A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C6A00DAE896614C | Since: 1207
     */
    function _0x0C6A00DAE896614C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0DE02DA3C0F66955 | Since: 1207
     */
    function _0x0DE02DA3C0F66955(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2917E634206B9E17 | Since: 1207
     */
    function _0x2917E634206B9E17(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3CAAD93FA5B9579A | Since: 1207
     */
    function _0x3CAAD93FA5B9579A(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x61BDA07407754A5C | Since: 1207
     */
    function _0x61BDA07407754A5C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x722FBE08EF5B87BD | Since: 1207
     */
    function _0x722FBE08EF5B87BD(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7274F84B1501B523 | Since: 1207
     */
    function _0x7274F84B1501B523(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8FB98B719AA0075A | Since: 1207
     */
    function _0x8FB98B719AA0075A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x991E3346D788F20F | Since: 1207
     */
    function _0x991E3346D788F20F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C902084F48D2E6C | Since: 1207
     */
    function _0x9C902084F48D2E6C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA079FF7CFB9AC8BD | Since: 1207
     */
    function _0xA079FF7CFB9AC8BD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF6583E926D13890 | Since: 1207
     */
    function _0xBF6583E926D13890(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE27824B5968B79A | Since: 1207
     */
    function _0xCE27824B5968B79A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD428C3F92FC3F6F8 | Since: 1207
     */
    function _0xD428C3F92FC3F6F8(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD55A871E1CE3481B | Since: 1207
     */
    function _0xD55A871E1CE3481B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD730281E496621FB | Since: 1207
     */
    function _0xD730281E496621FB(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD747979C053EFA7A | Since: 1207
     */
    function _0xD747979C053EFA7A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF06CBB8CCCA823C0 | Since: 1207
     */
    function _0xF06CBB8CCCA823C0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBD9EC60495C728C | Since: 1207
     */
    function activateCompanionAnalysis(groupId: number): void;
    /**
     * Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
     *
     * Hash: 0xDEB369F6AD168C58 | Since: 1207
     */
    function addCompanionFlag(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x72B7F65F11FC8896 | Since: 1207
     */
    function deactivateCompanionAnalysis(groupId: number): void;
    /**
     * enum _0x18F77396
     *
     * Hash: 0xB7E0590C86E1711F | Since: 1207
     */
    function getCompanionActivity(groupId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1740E3DEE0AE4D27 | Since: 1207
     */
    function removeCompanionFlag(ped: number | Ped): void;
    /**
     * enum _0x18F77396
     *
     * Hash: 0x0F1CD8CA9E65D5F6 | Since: 1207
     */
    function setCompanionActivity(groupId: number, activity: number | string): void;
}
export declare namespace compapp {
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x29C733459A9011EB | Since: 1207
     */
    function _0x29C733459A9011EB(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x74BCCEB233AD95B2 | Since: 1207
     */
    function _0x74BCCEB233AD95B2(): void;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x7AF1BB4504EA5ED9 | Since: 1207
     */
    function _0x7AF1BB4504EA5ED9(): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xB6FD96420C0126A1 | Since: 1207
     */
    function _0xB6FD96420C0126A1(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xCCB4635A071FB62D | Since: 1207
     */
    function _0xCCB4635A071FB62D(): void;
}
export declare namespace compendium {
    /**
     * No comment provided
     *
     * Hash: 0x4E4ACAE1C671A9DA | Since: 1311
     */
    function compendiumAnimalGetSampleInventoryItem(compendiumEntry: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x6FC24625E4FCAC27 | Since: 1311
     */
    function compendiumAnimalHasSample(compendiumEntry: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBCF569FC32FFF456 | Since: 1311
     */
    function compendiumAnimalHasStamp(compendiumEntry: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F26A5E9E10 | Since: 1207
     */
    function compendiumAnimalObservedByStatName(animalType: number | string, disableCompendiumToast: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x67F35C7C9F2BDCFE | Since: 1311
     */
    function compendiumAnimalSetDiscovered(compendiumEntry: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E00 | Since: 1207
     */
    function compendiumFishCaught(ped: number | Ped, category: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E81 | Since: 1207
     */
    function compendiumFishGetLureSuitabilityByStatItem(animalType: number | string, baitType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E04 | Since: 1207
     */
    function compendiumGangAmbushSurvived(): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E06 | Since: 1207
     */
    function compendiumGangBountyCaptured(): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E03 | Since: 1207
     */
    function compendiumGangCampFound(): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E05 | Since: 1207
     */
    function compendiumGangEncountered(): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E08 | Since: 1207
     */
    function compendiumGangHideoutFound(): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E07 | Since: 1207
     */
    function compendiumGangMemberKilled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CEB63B2E3D9895F | Since: 1311
     */
    function compendiumGetEntryByIndexInSubcategory(category: number | string, subcategory: number | string, count: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1CFA0219D8E1CF25 | Since: 1311
     */
    function compendiumGetEntryByPedIndex(category: number | string, ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x66EC938394D76C85 | Since: 1355
     */
    function compendiumGetEntryByStatItem(category: number | string, animalType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x729D54121A5E9E20 | Since: 1207
     */
    function compendiumGetMapDiscoverableFromStatItem(animalStatItem: number | string, pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xF58A0C0E086E8E36 | Since: 1311
     */
    function compendiumGetNumEntriesInSubcategory(category: number | string, subcategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x6C5E5D48E48B4C65 | Since: 1207
     */
    function compendiumGetShortDescriptionFromPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x9F678782720349E4 | Since: 1311
     */
    function compendiumGetStudyAwardId(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x9B657550DF55EC96 | Since: 1311
     */
    function compendiumGetSubcategoryPedIsIn(category: number | string, ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x59D4D68CDB82427C | Since: 1311
     */
    function compendiumGetSubcategorySampleToastDescComplete(category: number | string, subcategory: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x82BFB5B367957699 | Since: 1311
     */
    function compendiumGetSubcategorySampleToastDescProgress(category: number | string, subcategory: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x5E50C67EB60951E6 | Since: 1311
     */
    function compendiumGetSubcategorySampleToastTitle(category: number | string, subcategory: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x2BF30D9D4D680112 | Since: 1311
     */
    function compendiumGetSubcategoryToastAppId(category: number | string, subcategory: number | string): any;
    /**
     * herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
     * Vector3: Player Location
     *
     * Hash: 0x725D52F21A5E9E09 | Since: 1207
     */
    function compendiumHerbPicked(herbType: number | string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x725D52F21A5E9E50 | Since: 1207
     */
    function compendiumHorseBonding(ped: number | Ped, bondingLevel: number): void;
    /**
     * Only gets called if bSetObserved is true and animalType is matching
     *
     * Hash: 0x725D58F2125E5E50 | Since: 1207
     */
    function compendiumHorseObserved(ped: number | Ped, disableCompendiumToast: boolean): void;
    /**
     * NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
     *
     * Hash: 0x725852D21A2E9E50 | Since: 1207
     */
    function compendiumHorseWildBroken(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x23B5E9C5160BC04F | Since: 1311
     */
    function compendiumWasAnimalObserved(ped: number | Ped): boolean;
    /**
     * Only used in R* SP Scripts, category = GANGS
     * _COMPENDIUM_GET_*
     *
     * Hash: 0x725D52F21A5E9E22 | Since: 1207
     */
    function _0x725D52F21A5E9E22(category: number | string): number;
    /**
     * Only used in R* SP Scripts, category = GANGS
     * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_*
     *
     * Hash: 0x729D52461AEA9E22 | Since: 1207
     */
    function _0x729D52461AEA9E22(category: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x729D52F61A5A9E22 | Since: 1207
     */
    function compendiumGetNumOfEntriesInCategory(category: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xCD278B6BFBDBDC22 | Since: 1355
     */
    function compendiumGetSubcategoryHashFromAnimalType(category: number | string, animalType: number | string): number;
}
export declare namespace crashlog {
    /**
     * No comment provided
     *
     * Hash: 0x0FD3ECF9D0C8655F | Since: 1207
     */
    function _0x0FD3ECF9D0C8655F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x23CCAB8F40B9CBEE | Since: 1207
     */
    function _0x23CCAB8F40B9CBEE(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x33C1D63E55FA4284 | Since: 1207
     */
    function _0x33C1D63E55FA4284(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A66F1963B223F61 | Since: 1207
     */
    function _0x3A66F1963B223F61(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4E42CA5BCD45444A | Since: 1207
     */
    function _0x4E42CA5BCD45444A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C680FF55617F82F | Since: 1207
     */
    function _0x7C680FF55617F82F(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x87F005C969EF1563 | Since: 1207
     */
    function _0x87F005C969EF1563(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA67F0B039D9CD513 | Since: 1207
     */
    function _0xA67F0B039D9CD513(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA0BAC376C541978 | Since: 1207
     */
    function _0xCA0BAC376C541978(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8E3D22AA4F0E0A5 | Since: 1207
     */
    function _0xD8E3D22AA4F0E0A5(): boolean;
    /**
     * unused = true
     *
     * Hash: 0xDA05310EA94DC8C6 | Since: 1436
     */
    function _0xDA05310EA94DC8C6(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE72E234B30DA7B7A | Since: 1207
     */
    function _0xE72E234B30DA7B7A(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0D545C1EEAD614A | Since: 1207
     */
    function _0xF0D545C1EEAD614A(): boolean;
}
export declare namespace crew {
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC90BEF | Since: 1207
     */
    function networkClanGetLocalMembershipsCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x48DE78AF2C8885B8 | Since: 1207
     */
    function networkClanGetMembershipDesc(memberDesc: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA134777FF7F33331 | Since: 1207
     */
    function networkClanIsEmblemReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEEE6EACBE8874FBA | Since: 1207
     */
    function networkClanPlayerGetDesc(clanDesc: any, bufferSize: number, gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB124B57F571D8F18 | Since: 1207
     */
    function networkClanPlayerIsActive(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x113E6E3E50E286B0 | Since: 1207
     */
    function networkClanReleaseEmblem(): void;
    /**
     * No comment provided
     *
     * Hash: 0x13518FF1C6B28938 | Since: 1207
     */
    function networkClanRequestEmblem(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x579CCED0265D4896 | Since: 1207
     */
    function networkClanServiceIsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE532D6811B3A4D2A | Since: 1207
     */
    function networkFindGamersInCrew(crewId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9AA46BADAD0E27ED | Since: 1207
     */
    function networkGetPrimaryClanDataClear(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC080FF658B2E41DA | Since: 1207
     */
    function networkGetPrimaryClanDataNew(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB5074DB804E28CE7 | Since: 1207
     */
    function networkGetPrimaryClanDataPending(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCE86D8191B762107 | Since: 1207
     */
    function networkGetPrimaryClanDataStart(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B4F04F19376A0BA | Since: 1207
     */
    function networkGetPrimaryClanDataSuccess(): any;
    /**
     * No comment provided
     *
     * Hash: 0x58D378AF2C8765B7 | Since: 1207
     */
    function _0x58D378AF2C8765B7(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8E2143144B8E188D | Since: 1207
     */
    function networkAcceptClanInvite(crewInviteIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC685B014CE3D988B | Since: 1207
     */
    function networkClanInvitePlayer(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC080FF658B2E51DA | Since: 1207
     */
    function networkClanSetActive(): any;
}
export declare namespace databinding {
    /**
     * No comment provided
     *
     * Hash: 0x1E7130793AAAAB8D | Since: 1207
     */
    function databindingIsEntryValid(entryId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x570784D782597512 | Since: 1207
     */
    function databindingReadInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4FF713B2F17A391E | Since: 1207
     */
    function databindingWriteStringFromParent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02B21B6BEEDD83CC | Since: 1207
     */
    function _0x02B21B6BEEDD83CC(entryId: number | string): any;
    /**
     * _DATABINDING_WRITE_DATA_*
     *
     * Hash: 0x05AC9E1E02975AFB | Since: 1207
     */
    function _0x05AC9E1E02975AFB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1919D59E60FD516E | Since: 1207
     */
    function _0x1919D59E60FD516E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x294AF5323F44B053 | Since: 1207
     */
    function _0x294AF5323F44B053(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3BF0767CF33FCC88 | Since: 1207
     */
    function _0x3BF0767CF33FCC88(entryId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x422179C7F6AD9304 | Since: 1207
     */
    function _0x422179C7F6AD9304(gamerHandle: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x6318FB3BE37E11B3 | Since: 1207
     */
    function _0x6318FB3BE37E11B3(entryId: number | string, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6329C34BEE5BFF4B | Since: 1207
     */
    function _0x6329C34BEE5BFF4B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7FC60C94C83C5CD7 | Since: 1207
     */
    function _0x7FC60C94C83C5CD7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB138CA787F3DD858 | Since: 1207
     */
    function _0xB138CA787F3DD858(): void;
    /**
     * _DATABINDING_WRITE_DATA_*
     *
     * Hash: 0xBFC83DA249BEFCC9 | Since: 1207
     */
    function _0xBFC83DA249BEFCC9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC900CEC8A172375B | Since: 1207
     */
    function _0xC900CEC8A172375B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD48993A61938C64D | Since: 1207
     */
    function _0xD48993A61938C64D(): any;
    /**
     * p0 seems to always be empty string, p1 is the hash of the path
     *
     * Hash: 0xD7DB94AB78E8EBE4 | Since: 1207
     */
    function databindingAddDataContainerFromPathByHash(path: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xE6AAB897120492D6 | Since: 1207
     */
    function _0xE6AAB897120492D6(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE6AAB897120492D7 | Since: 1207
     */
    function _0xE6AAB897120492D7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF47E33F8D2523825 | Since: 1207
     */
    function _0xF47E33F8D2523825(): any;
    /**
     * No comment provided
     *
     * Hash: 0x58BAA5F635DA2FF4 | Since: 1207
     */
    function databindingAddDataBool(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBC95D3AE2ECA70D6 | Since: 1207
     */
    function databindingAddDataBoolByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x37BB86A751148A6A | Since: 1207
     */
    function databindingAddDataBoolFromPath(): any;
    /**
     * Returns entryId Hash
     *
     * Hash: 0xEB4F9A3537EEABCD | Since: 1207
     */
    function databindingAddDataContainer(entryId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x98BB14345BB68257 | Since: 1207
     */
    function databindingAddDataContainerByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0C827D175F1292F4 | Since: 1207
     */
    function databindingAddDataContainerFromPath(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5154228273ADB9A6 | Since: 1207
     */
    function databindingAddDataFloat(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7D0F2014DB28DD00 | Since: 1207
     */
    function databindingAddDataGangId(gangId: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x8538F1205D60ECA6 | Since: 1207
     */
    function databindingAddDataHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8E173DFB041993C6 | Since: 1207
     */
    function databindingAddDataHashByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x307A3247C5457BDE | Since: 1207
     */
    function databindingAddDataInt(): any;
    /**
     * No comment provided
     *
     * Hash: 0x267F9527F4350ADE | Since: 1207
     */
    function databindingAddDataIntByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7D0F2014DB28DD01 | Since: 1207
     */
    function databindingAddDataPosseId(posseId: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x617FCA1C5652BBAD | Since: 1207
     */
    function databindingAddDataString(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEAD09E76E22630C3 | Since: 1207
     */
    function databindingAddDataStringByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA381DE86EE170C4A | Since: 1207
     */
    function databindingAddDataStringFromPath(): any;
    /**
     * No comment provided
     *
     * Hash: 0x52F5F08278EA5D75 | Since: 1207
     */
    function databindingAddHashArray(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1B23E0627BDBFE85 | Since: 1207
     */
    function databindingAddStringArray(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFE74FA57E0CE6824 | Since: 1207
     */
    function databindingAddUiItemList(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3C7799283325181B | Since: 1207
     */
    function databindingAddUiItemListByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDB5B9A474148F699 | Since: 1207
     */
    function databindingAddUiItemListFromPath(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA1F15C1D03DF802D | Since: 1207
     */
    function databindingClearBindingArray(entryId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD23F5DE04FE717E2 | Since: 1207
     */
    function databindingGetArrayCount(entryId: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x0C827D175F1292F3 | Since: 1207
     */
    function databindingGetDataContainerFromChildIndex(entryId: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x0C827D175F1292F2 | Since: 1207
     */
    function databindingGetDataContainerFromPath(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE96D7F9FEFCC105F | Since: 1207
     */
    function databindingGetItemContextByIndex(index: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xEE97A05C05F16E41 | Since: 1207
     */
    function databindingInsertUiItemToListFromContextHashAlias(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5859E970794D92F3 | Since: 1207
     */
    function databindingInsertUiItemToListFromContextStringAlias(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5740774F608E4FC8 | Since: 1207
     */
    function databindingInsertUiItemToListFromPathStringAlias(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EEFBD4B6D7CD6EB | Since: 1207
     */
    function databindingReadDataBool(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA8EDE09FE07BD77F | Since: 1207
     */
    function databindingReadDataBoolFromParent(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4CDC3FDDFAE07EB3 | Since: 1207
     */
    function databindingReadDataBoolFromParentByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9B535990B01B62DE | Since: 1207
     */
    function databindingReadDataHashStringFromParent(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1F43BC25A119B252 | Since: 1207
     */
    function databindingReadDataHashStringFromParentByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFFC566A4801F6B40 | Since: 1207
     */
    function databindingReadDataIntFromParent(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB5F668B648EC0970 | Since: 1207
     */
    function databindingReadDataIntFromParentByHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3D290B5FFA7C5151 | Since: 1207
     */
    function databindingReadDataString(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6323AD277C4A2AFB | Since: 1207
     */
    function databindingReadDataStringFromParent(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5FE444EB67C70AD4 | Since: 1207
     */
    function databindingReadFloat(entryId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x81D7183E7A8ECA72 | Since: 1207
     */
    function databindingReadHash(entryId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF68B1726EAF7B285 | Since: 1207
     */
    function databindingRemoveBindingArrayItemByDataContextId(entryId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AE9938D0541F2DA | Since: 1207
     */
    function databindingRemoveDataEntry(entryId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AE7138D0541F2DE | Since: 1207
     */
    function databindingSetTemplatedUiItemHashAlias(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE74FA57E0CE6825 | Since: 1207
     */
    function databindingSetTemplatedUiItemListSize(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB888B4B91046770 | Since: 1207
     */
    function databindingWriteDataBool(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDFE546E4C2D0E21 | Since: 1207
     */
    function databindingWriteDataBoolFromParent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF504BECEB15DA93 | Since: 1207
     */
    function databindingWriteDataFloat(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC70041408E16BE2D | Since: 1207
     */
    function databindingWriteDataGangId(gangId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xACDEF586BD71B1FD | Since: 1207
     */
    function databindingWriteDataHashString(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0971F04E1EAA7AE8 | Since: 1207
     */
    function databindingWriteDataHashStringFromParent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20209529689E0953 | Since: 1207
     */
    function databindingWriteDataHashStringFromParentByHash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x335C3F6B3766B8D9 | Since: 1207
     */
    function databindingWriteDataInt(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9EFA98238BA08FC4 | Since: 1207
     */
    function databindingWriteDataIntFromParent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D6E10A41D6ED6EC | Since: 1207
     */
    function databindingWriteDataIntFromParentByHash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC70041408E16BE2E | Since: 1207
     */
    function databindingWriteDataPosseId(posseId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB888B4B91046771 | Since: 1207
     */
    function databindingWriteDataScriptVariables(...params: string[]): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1BD342F2872AEE9 | Since: 1207
     */
    function databindingWriteDataString(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3BD6FF95E713EE5 | Since: 1207
     */
    function databindingWriteStringFromHash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x37963B56755BFB35 | Since: 1207
     */
    function virtualCollectionExists(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6DCBF187221CF73D | Since: 1207
     */
    function virtualCollectionItemAdd(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x09D95666ED2B5F60 | Since: 1207
     */
    function virtualCollectionReset(): void;
    /**
     * No comment provided
     *
     * Hash: 0x49A8447533308BCF | Since: 1207
     */
    function virtualCollectionSetInterestIndex(interestIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DCE9B01A93B58BC | Since: 1207
     */
    function virtualCollectionSetSize(size: number): void;
}
export declare namespace datafile {
    /**
     * No comment provided
     *
     * Hash: 0xAB1231D2DE52F2D3 | Since: 1207
     */
    function dataarrayGetBool(arrayData: any, arrayIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A885BF69239E539 | Since: 1207
     */
    function dataarrayGetCount(arrayData: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xA010655985853485 | Since: 1207
     */
    function dataarrayGetDict(arrayData: any, arrayIndex: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xA9D003CF419CB81E | Since: 1207
     */
    function dataarrayGetFloat(arrayData: any, arrayIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x96DEA500B6EBBE53 | Since: 1207
     */
    function dataarrayGetInt(arrayData: any, arrayIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB6790A8FF80F889F | Since: 1207
     */
    function dataarrayGetString(arrayData: any, arrayIndex: number): string;
    /**
     * Types:
     * 1 = Boolean
     * 2 = Integer
     * 3 = Float
     * 4 = String
     * 5 = Vector3
     * 6 = Object
     * 7 = Array
     *
     * Hash: 0x151DAFE6B3B9888F | Since: 1207
     */
    function dataarrayGetType(arrayData: any, arrayIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x850DA2750DA14E9A | Since: 1207
     */
    function dataarrayGetVector(arrayData: any, arrayIndex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x1B5447CF18544B18 | Since: 1207
     */
    function datadictGetArray(objectData: any, key: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x175E915A486EE548 | Since: 1207
     */
    function datadictGetBool(objectData: any, key: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D7A30130F46AC9C | Since: 1207
     */
    function datadictGetDict(objectData: any, key: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x814643ECA258ADF5 | Since: 1207
     */
    function datadictGetFloat(objectData: any, key: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D896A3B87D96E2B | Since: 1207
     */
    function datadictGetInt(objectData: any, key: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE37B38C0B4E95DFA | Since: 1207
     */
    function datadictGetString(objectData: any, key: string): string;
    /**
     * Types:
     * 1 = Boolean
     * 2 = Integer
     * 3 = Float
     * 4 = String
     * 5 = Vector3
     * 6 = Object
     * 7 = Array
     *
     * Hash: 0x92E11E3CA4C7CDF0 | Since: 1207
     */
    function datadictGetType(objectData: any, key: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE459C941431E0FFA | Since: 1207
     */
    function datadictGetVector(objectData: any, key: string): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xB04B69CF277D15C0 | Since: 1207
     */
    function datadictIsArrayValid(fileDict: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4607D57C5F7D332A | Since: 1207
     */
    function datadictIsDictValid(fileDict: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26FDF5E99AA2F3E9 | Since: 1207
     */
    function datadictSetInt(objectData: any, key: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56B7291FB953DD51 | Since: 1207
     */
    function datafileCreate(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FB90EEDEA9F2D5C | Since: 1207
     */
    function datafileDelete(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x604B8ED1A482F9DF | Since: 1207
     */
    function datafileDeleteRequestedFile(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBBD8CF823CAE557C | Since: 1207
     */
    function datafileGetFileDict(index: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x17279C820464CEE0 | Since: 1207
     */
    function datafileHasLoadedFileData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE60100389E50EADE | Since: 1207
     */
    function datafileHasValidFileData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x46102A0989AD80B5 | Since: 1207
     */
    function datafileSelectActiveFile(): boolean;
    /**
     * Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
     *
     * Hash: 0x790EC421078F5C4E | Since: 1207
     */
    function datafileUgcSelectData(ugcRequestId: any, index: number): any;
    /**
     * Adds the given request ID to the watch list.
     *
     * Hash: 0xA5834834CA8FD7FC | Since: 1207
     */
    function datafileWatchRequestId(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x603AC35FD4602C76 | Since: 1207
     */
    function parseddataIsFileLoaded(fileHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7907969497EA92F5 | Since: 1207
     */
    function parseddataIsFileValid(fileHandle: number): boolean;
    /**
     * Old name: _DATAFILE_GET_HASH
     *
     * Hash: 0xFBFF3FF2F5E80C0B | Since: 1207
     */
    function parseddataRqFilloutHash(): boolean;
    /**
     * Old name: _DATAFILE_GET_DATA_NODE_INDEX
     *
     * Hash: 0x83C3ED532B6E5D07 | Since: 1207
     */
    function parseddataRqFilloutNode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x951327435DC5164B | Since: 1232
     */
    function parseddataRqFilloutString127(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE79C70E77E0973C7 | Since: 1207
     */
    function ugc2SetPlayerData(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1C65CC931C0F946F | Since: 1207
     */
    function _0x1C65CC931C0F946F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x277251C161B4C3F4 | Since: 1207
     */
    function _0x277251C161B4C3F4(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x3168BA5D6DECE323 | Since: 1207
     */
    function _0x3168BA5D6DECE323(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F9E3ED7617123AC | Since: 1207
     */
    function _0x4F9E3ED7617123AC(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7681B677400C7071 | Since: 1207
     */
    function _0x7681B677400C7071(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F130129EBC31B34 | Since: 1207
     */
    function _0x9F130129EBC31B34(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC0DF006A4952C68 | Since: 1207
     */
    function _0xBC0DF006A4952C68(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA56DD6AB7A39F64 | Since: 1207
     */
    function _0xCA56DD6AB7A39F64(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE13634BB6BAF0734 | Since: 1207
     */
    function _0xE13634BB6BAF0734(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA63CD20F19B961AB | Since: 1207
     */
    function parseddataGetBool(): boolean;
    /**
     * Returns false when there are no entries.
     *
     * Hash: 0xED4413CEE1BF142C | Since: 1207
     */
    function parseddataGetEntries(): boolean;
    /**
     * Opens file.
     *
     * Hash: 0x91DED5DD64BB2691 | Since: 1207
     */
    function parseddataGetFile(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2B42607F7867576 | Since: 1207
     */
    function parseddataGetFloat(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52FC26D2D2FC2987 | Since: 1207
     */
    function parseddataGetInt(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6BEB168D5195E7AB | Since: 1207
     */
    function parseddataGetNumChildren(): any;
    /**
     * No comment provided
     *
     * Hash: 0x44B3A36933AC009C | Since: 1207
     */
    function parseddataGetSection(section: number | string): boolean;
    /**
     * LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
     * Returns parseddata script fileHandle
     *
     * Hash: 0xD97D8D905F1562F2 | Since: 1207
     */
    function parseddataLoadFileHash(): number;
    /**
     * No comment provided
     *
     * Hash: 0xAE156A747C39A741 | Since: 1207
     */
    function parseddataRegisterQuery(): any;
    /**
     * Old name: _DATAFILE_GET_BOOL
     *
     * Hash: 0x0D9138F3F8261DF7 | Since: 1207
     */
    function parseddataRqFilloutBool(): boolean;
    /**
     * Old name: _DATAFILE_GET_FLOAT
     *
     * Hash: 0x7F034FC3E891B57A | Since: 1207
     */
    function parseddataRqFilloutFloat(): boolean;
    /**
     * Old name: _DATAFILE_GET_INT
     *
     * Hash: 0xEF44ACC657352A35 | Since: 1207
     */
    function parseddataRqFilloutInt(): boolean;
    /**
     * Old name: _DATAFILE_GET_STRING
     *
     * Hash: 0x08EAF8E9F2EB7B2E | Since: 1207
     */
    function parseddataRqFilloutString63(): boolean;
    /**
     * Old name: _DATAFILE_GET_VECTOR
     *
     * Hash: 0x06FBF89B12DA279C | Since: 1207
     */
    function parseddataRqFilloutVector(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF01B1F7A886B42D | Since: 1207
     */
    function parseddataRqGetNumNodes(): any;
    /**
     * No comment provided
     *
     * Hash: 0x129567F0C05F81B9 | Since: 1207
     */
    function parseddataUnloadFile(fileHandle: number): void;
}
export declare namespace debug {
    /**
     * Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
     *
     * Old name: _GET_GAME_BUILD_STRING
     *
     * Hash: 0x05A5F662AD35C573 | Since: 1207
     */
    function getGameVersionName(): string;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xA8D970D8A72640A6 | Since: 1207
     */
    function _0xA8D970D8A72640A6(): any;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xACF9CB705BEFA8CB | Since: 1207
     */
    function _0xACF9CB705BEFA8CB(): any;
}
export declare namespace decorator {
    /**
     * Returns whether or not the specified property is set for the entity.
     *
     * Hash: 0xD9D1CDBF3464DCDF | Since: 1207
     */
    function decorExistOn(entity: number | Entity, propertyName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDEF3F1B071ABB197 | Since: 1207
     */
    function decorGetBool(entity: number | Entity, propertyName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE5FF70CD842CA9D4 | Since: 1207
     */
    function decorGetFloat(entity: number | Entity, propertyName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x44DB62727762FD9B | Since: 1207
     */
    function decorGetInt(entity: number | Entity, propertyName: string): number;
    /**
     * type: see DECOR_REGISTER
     *
     * Hash: 0x72355278C069F272 | Since: 1207
     */
    function decorIsRegisteredAsType(propertyName: string, type: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0B253D644E3C36B3 | Since: 1207
     */
    function decorRegister(propertyName: string, type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BA7F5877A088A1D | Since: 1207
     */
    function decorRemove(entity: number | Entity, propertyName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x88942780E0ADEA42 | Since: 1207
     */
    function decorRemoveAll(entity: number | Entity): boolean;
    /**
     * This function sets metadata of type bool to specified entity.
     *
     *
     * Hash: 0xFE26E4609B1C3772 | Since: 1207
     */
    function decorSetBool(entity: number | Entity, propertyName: string, value: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x238F8B0C1C7FE834 | Since: 1207
     */
    function decorSetFloat(entity: number | Entity, propertyName: string, value: number): boolean;
    /**
     * Sets property to int.
     *
     * Hash: 0xE88F4D7F52A6090F | Since: 1207
     */
    function decorSetInt(entity: number | Entity, propertyName: string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0671C1A3FF7AFDFC | Since: 1207
     */
    function decorSetString(entity: number | Entity, propertyName: string, value: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1682B2443F0540B | Since: 1207
     */
    function decorGetUint8(entity: number | Entity, propertyName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4587374F88B7F6C2 | Since: 1207
     */
    function decorRegister2(propertyName: string, type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4BDC83150D43772D | Since: 1207
     */
    function decorSetUint8(entity: number | Entity, propertyName: string, value: number): boolean;
}
export declare namespace dlc {
    /**
     * No comment provided
     *
     * Hash: 0x71D4BF5890659B0C | Since: 1207
     */
    function getIsLoadingScreenActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2763DC12BBE2BB6F | Since: 1207
     */
    function isDlcPresent(dlcHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1DB9D61E505AE3FC | Since: 1207
     */
    function getSpecialEditionCashCampBonusEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA16B4FBA7887D7BA | Since: 1207
     */
    function getSpecialEditionCoreStatsBonusEnabled(): boolean;
}
export declare namespace entity {
    /**
     * No comment provided
     *
     * Hash: 0xF15E8F5D333F09C4 | Since: 1207
     */
    function applyForceToEntity(entity: number | Entity, forceFlags: number, pos: Vector3, offX: number, offY: number, offZ: number, boneIndex: number, isDirectionRel: boolean, ignoreUpVec: boolean, isForceRel: boolean): void;
    /**
     * p6/relative - makes the xyz force not relative to world coords, but to something else
     * p7/highForce - setting false will make the force really low
     *
     * Hash: 0x31DA7CEC5334DB37 | Since: 1207
     */
    function applyForceToEntityCenterOfMass(entity: number | Entity, forceType: number, pos: Vector3, component: number, isDirectionRel: boolean, isForceRel: boolean): void;
    /**
     * Attaches entity1 to bone (boneIndex) of entity2.
     *
     * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
     * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
     *
     * useSoftPinning - if set to false attached entity will not detach when fixed
     * collision - controls collision between the two entities (FALSE disables collision).
     * isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
     * vertexIndex - position of vertex
     * fixedRot - if false it ignores entity vector
     *
     * Hash: 0x6B9BBD38AB0796DF | Since: 1207
     */
    function attachEntityToEntity(entity1: number | Entity, entity2: number | Entity, boneIndex: number, pos: Vector3, rot: Vector3, useSoftPinning: boolean, collision: boolean, isPed: boolean, vertexIndex: number, fixedRot: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB629A43CA1643481 | Since: 1207
     */
    function attachEntityToEntityPhysically(entity1: number | Entity, entity2: number | Entity, boneIndex: number, offsetX: number, offsetY: number, offsetZ: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB19AC7D4DCEFD0F | Since: 1207
     */
    function clearEntityLastDamageEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x0961A905AFBC34C7 | Since: 1207
     */
    function createForcedObject(pos: Vector3, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x069848B3FB3C4426 | Since: 1207
     */
    function createModelHide(pos: Vector3, radius: number, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD136090A9AAAB17D | Since: 1207
     */
    function createModelHideExcludingScriptObjects(pos: Vector3, radius: number, model: number | string): void;
    /**
     * Only works with objects!
     *
     * Hash: 0x10B2218320B6F5AC | Since: 1207
     */
    function createModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
    /**
     * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0x4CD38C78BD19A497 | Since: 1207
     */
    function deleteEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x64CDE9D6BF8ECAD3 | Since: 1207
     */
    function detachEntity(entity: number | Entity, collision: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x622B1980CBE13332 | Since: 1207
     */
    function doesEntityBelongToThisScript(entity: number | Entity): boolean;
    /**
     * Checks if the Entity exists
     *
     * Hash: 0xD42BD6EB2E0F1677 | Since: 1207
     */
    function doesEntityExist(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x20487F0DA9AF164A | Since: 1207
     */
    function doesEntityHaveDrawable(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA512B3F1B2A0B51C | Since: 1207
     */
    function doesEntityHavePhysics(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42718CC559BD7776 | Since: 1207
     */
    function findAnimEventPhase(animDictionary: string, animName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C9E96473D4F1A88 | Since: 1207
     */
    function forceEntityAiAndAnimationUpdate(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D9EFB7AD6B19754 | Since: 1207
     */
    function freezeEntityPosition(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FFAF4940A54CC09 | Since: 1207
     */
    function getAnimDuration(animDict: string, animName: string): number;
    /**
     * enum eCarriableState
     * {
     * CARRIABLE_STATE_NONE,
     * CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
     * CARRIABLE_STATE_CARRIABLE_INTRO,
     * CARRIABLE_STATE_CARRIABLE,
     * CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
     * CARRIABLE_STATE_CARRIED_BY_HUMAN,
     * CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
     * CARRIABLE_STATE_CARRIED_BY_MOUNT,
     * CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
     * CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
     * CARRIABLE_STATE_BEING_CUT_FREE,
     * CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
     * CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
     * };
     *
     * Hash: 0x61914209C36EFDDB | Since: 1207
     */
    function getCarriableEntityState(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x1BB501624FAF2BEA | Since: 1207
     */
    function getEntityAlpha(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x56D713888A566481 | Since: 1207
     */
    function getEntityAttachedTo(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xBACA8FE9C76C124E | Since: 1207
     */
    function getEntityBoneIndexByName(entity: number | Entity, boneName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xAA2FADD30F45A9DA | Since: 1207
     */
    function getEntityCollisionDisabled(entity: number | Entity): boolean;
    /**
     * Gets the current coordinates for a specified entity.
     * `entity` = The entity to get the coordinates from.
     * `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
     *
     * If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
     *
     * Hash: 0xA86D5F069399F44D | Since: 1207
     */
    function getEntityCoords(entity: number | Entity, alive: boolean, realCoords: boolean): Vector3;
    /**
     * Gets the entity's forward vector in XY(Z) eulers.
     *
     * Hash: 0x2412D9C05BB09B97 | Since: 1207
     */
    function getEntityForwardVector(entity: number | Entity): Vector3;
    /**
     * Gets the X-component of the entity's forward vector.
     *
     * Hash: 0xDB0954E9960F6457 | Since: 1207
     */
    function getEntityForwardX(entity: number | Entity): number;
    /**
     * Gets the Y-component of the entity's forward vector.
     *
     * Hash: 0x9A5C073ECBDA7EE7 | Since: 1207
     */
    function getEntityForwardY(entity: number | Entity): number;
    /**
     * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
     *
     * Hash: 0xC230DD956E2F5507 | Since: 1207
     */
    function getEntityHeading(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x82368787EA73C0F7 | Since: 1207
     */
    function getEntityHealth(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x296DEBC84474B375 | Since: 1207
     */
    function getEntityHeight(entity: number | Entity, pos: Vector3, atTop: boolean, inWorldCoords: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x0D3B5BAEA08F63E9 | Since: 1207
     */
    function getEntityHeightAboveGround(entity: number | Entity): number;
    /**
     * Returns the LOD distance of an entity.
     *
     * Hash: 0xDF240D0C2A948683 | Since: 1207
     */
    function getEntityLodDist(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x3A9B1120AF13FBF2 | Since: 1207
     */
    function getEntityMatrix(entity: number | Entity, rightVector: Vector3, forwardVector: Vector3, upVector: Vector3, position: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x15D757606D170C3C | Since: 1207
     */
    function getEntityMaxHealth(entity: number | Entity): number;
    /**
     * Returns the model hash from the entity
     *
     * Hash: 0xDA76A9F39210D365 | Since: 1207
     */
    function getEntityModel(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xEF355ABEFF7F5005 | Since: 1207
     */
    function getEntityPitch(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xADE28862B6D7B85B | Since: 1207
     */
    function getEntityPopulationType(entity: number | Entity): number;
    /**
     * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
     * (Sideways Roll) such as a vehicle tipped on its side
     *
     * Hash: 0xBF966536FA8B6879 | Since: 1207
     */
    function getEntityRoll(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xE09CAF86C32CB48F | Since: 1207
     */
    function getEntityRotation(entity: number | Entity, rotationOrder: number): Vector3;
    /**
     * Result is in meters per second (m/s)
     *
     * Hash: 0xFB6BA510A533DF81 | Since: 1207
     */
    function getEntitySpeed(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2DB09816A419DC5 | Since: 1207
     */
    function getEntitySpeedVector(entity: number | Entity, relative: boolean): Vector3;
    /**
     * Get how much of the entity is submerged.  1.0f is whole entity.
     *
     * Hash: 0x4A77C3F73FD9E831 | Since: 1207
     */
    function getEntitySubmergedLevel(entity: number | Entity): number;
    /**
     * Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
     *
     * Hash: 0x97F696ACA466B4E0 | Since: 1207
     */
    function getEntityType(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x56398BE65160C3BE | Since: 1207
     */
    function getEntityUprightValue(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x4805D2B1D8CF94A9 | Since: 1207
     */
    function getEntityVelocity(entity: number | Entity): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x9A100F1CF4546629 | Since: 1207
     */
    function getIsAnimal(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x84CCF9A12942C83D | Since: 1207
     */
    function getMatchingEntities(volume: number, itemSet: any, entityType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x6888A43C35A5F630 | Since: 1207
     */
    function getNearestParticipantToEntity(entity: number | Entity): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x990E294FC387FB88 | Since: 1207
     */
    function getNearestPlayerToEntity(entity: number | Entity, playerPedToIgnore: number | Ped, flags: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0xB2C30C3B4AFF718C | Since: 1207
     */
    function getNearestPlayerToEntityOnTeam(entity: number | Entity, team: number, playerPedToIgnore: number | Ped, flags: number): number | string;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x280BBE5601EAA983 | Since: 1207
     */
    function getObjectIndexFromEntityIndex(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x497C6B1A2C9AE69C | Since: 1207
     */
    function getOffsetFromEntityGivenWorldCoords(entity: number | Entity, pos: Vector3): Vector3;
    /**
     * Offset values are relative to the entity.
     *
     * x = left/right
     * y = forward/backward
     * z = up/down
     *
     * Hash: 0x1899F328B0E12848 | Since: 1207
     */
    function getOffsetFromEntityInWorldCoords(entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x0F16D042BD640EA3 | Since: 1207
     */
    function getPedIndexFromEntityIndex(entity: number | Entity): number;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0xDF1E5AAC561AFC59 | Since: 1207
     */
    function getVehicleIndexFromEntityIndex(entity: number | Entity): number;
    /**
     * Returns the coordinates of an entity-bone.
     * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
     *
     * Hash: 0x82CFA50E34681CA5 | Since: 1207
     */
    function getWorldPositionOfEntityBone(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x5851CC48405F4A07 | Since: 1207
     */
    function hasAnimEventFired(entity: number | Entity, actionHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBEB1600952B9CF5C | Since: 1207
     */
    function hasCollisionLoadedAroundEntity(entity: number | Entity): boolean;
    /**
     * Old name: _HAS_COLLISION_LOADED_AT_COORDS
     *
     * Hash: 0x6BFBDC46139C45AB | Since: 1207
     */
    function hasCollisionLoadedAroundPosition(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAEB40615337EF1E3 | Since: 1207
     */
    function hasEntityAnimFinished(entity: number | Entity, animDict: string, animName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x73BB763880CD23A6 | Since: 1207
     */
    function hasEntityBeenDamagedByAnyObject(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9934E9C42D52D87E | Since: 1207
     */
    function hasEntityBeenDamagedByAnyPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x695D7C26DE65C423 | Since: 1207
     */
    function hasEntityBeenDamagedByAnyVehicle(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7B6E7BEC1143AC86 | Since: 1207
     */
    function hasEntityBeenDamagedByEntity(entity1: number | Entity, entity2: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C9DBF48C6BA6E4C | Since: 1207
     */
    function hasEntityClearLosToCoord(entity: number | Entity, pos: Vector3, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFCDFF7B72D23A1AC | Since: 1207
     */
    function hasEntityClearLosToEntity(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
    /**
     * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
     *
     * Hash: 0xE88F19660651D566 | Since: 1207
     */
    function hasEntityClearLosToEntityInFront(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF18751EC74F90FF | Since: 1207
     */
    function hasEntityCollidedWithAnything(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x27CFF3E5A286D3DF | Since: 1207
     */
    function isAnEntity(handle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A27A546A375FDEF | Since: 1207
     */
    function isEntityAnObject(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEE6AD63ABF59C0B7 | Since: 1207
     */
    function isEntityAttached(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x306C1F6178F01AB3 | Since: 1207
     */
    function isEntityAttachedToAnyObject(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC841153DED2CA89A | Since: 1207
     */
    function isEntityAttachedToAnyPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x12DF6E0D2E736749 | Since: 1207
     */
    function isEntityAttachedToAnyVehicle(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x154A3C529497053E | Since: 1207
     */
    function isEntityAttachedToEntity(from: number | Entity, to: number | Entity): boolean;
    /**
     * Checks if entity is within x/y/zSize distance of x/y/z.
     *
     * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
     *
     * Hash: 0x5E58342602E94718 | Since: 1207
     */
    function isEntityAtCoord(entity: number | Entity, pos: Vector3, xSize: number, ySize: number, zSize: number): boolean;
    /**
     * Checks if entity1 is within the box defined by x/y/zSize of entity2.
     *
     * Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
     *
     * Hash: 0xC057F02B837A27F6 | Since: 1207
     */
    function isEntityAtEntity(entity1: number | Entity, entity2: number | Entity, xSize: number, ySize: number, zSize: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x138190F64DB4BBD1 | Since: 1207
     */
    function isEntityAMissionEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF8176912DDA4EA5 | Since: 1207
     */
    function isEntityAPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC3D96AF45FCCEC4C | Since: 1207
     */
    function isEntityAVehicle(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7D5B1F88E7504BBA | Since: 1207
     */
    function isEntityDead(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x886E37EC497200B6 | Since: 1207
     */
    function isEntityInAir(entity: number | Entity): boolean;
    /**
     * Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
     *
     * Angle is measured in degrees.
     *
     * Hash: 0xD3151E53134595E5 | Since: 1207
     */
    function isEntityInAngledArea(entity: number | Entity, originX: number, originY: number, originZ: number, edgeX: number, edgeY: number, edgeZ: number, angle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C2634C40A16193E | Since: 1207
     */
    function isEntityInArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A5526BC09C06623 | Since: 1207
     */
    function isEntityInVolume(entity: number | Entity, volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDE5C125AC446723 | Since: 1207
     */
    function isEntityInWater(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x140188E884645624 | Since: 1207
     */
    function isEntityOccluded(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x613C15D5D8DB781F | Since: 1207
     */
    function isEntityOnScreen(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDEE49D5CA6C49148 | Since: 1207
     */
    function isEntityPlayingAnim(entity: number | Entity, animDict: string, animName: string, animType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x86468ADFA0F6B861 | Since: 1207
     */
    function isEntityStatic(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A2304A64C3C8423 | Since: 1207
     */
    function isEntityTouchingEntity(entity: number | Entity, targetEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2AE3EBC8DEB9768B | Since: 1207
     */
    function isEntityTouchingModel(entity: number | Entity, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF6F6AFD8D4FB2658 | Since: 1207
     */
    function isEntityUpright(entity: number | Entity, angle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x109DE3DA41AAD94A | Since: 1207
     */
    function isEntityUpsidedown(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFFC96ECB7FA404CA | Since: 1207
     */
    function isEntityVisible(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF213C724E77F321A | Since: 1207
     */
    function isEntityVisibleToScript(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5E1CC2E8DC3111DD | Since: 1207
     */
    function isEntityWaitingForWorldCollision(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1FF441D7954F8709 | Since: 1207
     */
    function isMapEntityPinned(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F3068258A499E52 | Since: 1207
     */
    function pinClosestMapEntity(modelHash: number | string, pos: Vector3, flags: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x9587913B9E772D29 | Since: 1207
     */
    function placeEntityOnGroundProperly(entity: number | Entity): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/animations
     *
     * Hash: 0xDC6D22FAB76D4874 | Since: 1207
     */
    function playEntityAnim(entity: number | Entity, animName: string, animDict: string, loop: boolean, stayInAnim: boolean, delta: number, bitset: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x553FA683F2BCD814 | Since: 1207
     */
    function removeForcedObject(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F38A98576F6213A | Since: 1207
     */
    function removeModelHide(): void;
    /**
     * No comment provided
     *
     * Hash: 0x824E1C26A14CB817 | Since: 1207
     */
    function removeModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x744B9EF44779D9AB | Since: 1207
     */
    function resetEntityAlpha(entity: number | Entity): void;
    /**
     * Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
     * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
     *
     * Hash: 0x8C03CD6B5E0E85E8 | Since: 1207
     */
    function scriptOverrideEntityLootTablePermanent(entity: number | Entity, lootTable: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x80646744FA88F9D7 | Since: 1207
     */
    function setCanAutoVaultOnEntity(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x24AED2A608F93C4C | Since: 1207
     */
    function setCanClimbOnEntity(entity: number | Entity, toggle: boolean): void;
    /**
     * skin - everything alpha except skin
     * Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
     *
     * Hash: 0x0DF7692B1D9E7BA7 | Since: 1207
     */
    function setEntityAlpha(entity: number | Entity, alphaLevel: number, skin: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xACAD101E1FB66689 | Since: 1207
     */
    function setEntityAlwaysPrerender(entity: number | Entity, toggle: boolean): void;
    /**
     * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
     *
     * Hash: 0xDC19C288082E586E | Since: 1207
     */
    function setEntityAsMissionEntity(entity: number | Entity): void;
    /**
     * Marks the specified entity (ped, vehicle or object) as no longer needed.
     * Entities marked as no longer needed, will be deleted as the engine sees fit.
     *
     * Hash: 0x4971D2F8162B9674 | Since: 1207
     */
    function setEntityAsNoLongerNeeded(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D06D522B90E861F | Since: 1207
     */
    function setEntityCanBeDamaged(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EF1AFB18649E015 | Since: 1207
     */
    function setEntityCanBeDamagedByRelationshipGroup(entity: number | Entity, bCanBeDamaged: boolean, relGroup: number | string): void;
    /**
     * Sets whether the entity can be targeted without being in line-of-sight.
     *
     * Hash: 0x6D09F32E284D0FB7 | Since: 1207
     */
    function setEntityCanBeTargetedWithoutLos(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF66F820909453B8C | Since: 1207
     */
    function setEntityCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0580EC84813875A | Since: 1207
     */
    function setEntityCompletelyDisableCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x06843DA7060A026B | Since: 1207
     */
    function setEntityCoords(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean, clearArea: boolean): void;
    /**
     * Axis - Invert Axis Flags
     *
     * Hash: 0x239A3351AC1DA385 | Since: 1207
     */
    function setEntityCoordsNoOffset(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFBFC4473F66CE344 | Since: 1207
     */
    function setEntityDynamic(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CEDB728A1083FA7 | Since: 1207
     */
    function setEntityHasGravity(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF2B9C0645C4651B | Since: 1207
     */
    function setEntityHeading(entity: number | Entity, heading: number): void;
    /**
     * Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
     *
     * Hash: 0xAC2767ED8BDFAB15 | Since: 1207
     */
    function setEntityHealth(entity: number | Entity, healthAmount: number, entityKilledBy: number | Entity): void;
    /**
     * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
     *
     * Hash: 0xA5C38736C426FCB8 | Since: 1207
     */
    function setEntityInvincible(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A5D170C44CB2189 | Since: 1207
     */
    function setEntityIsTargetPriority(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B9EE31AED48072E | Since: 1207
     */
    function setEntityLoadCollisionFlag(entity: number | Entity, toggle: boolean): void;
    /**
     * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
     *
     * Hash: 0x5FB407F0A7C877BF | Since: 1207
     */
    function setEntityLodDist(entity: number | Entity, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x166E7CF68597D8B5 | Since: 1207
     */
    function setEntityMaxHealth(entity: number | Entity, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x516C6ABD18322B63 | Since: 1207
     */
    function setEntityMotionBlur(entity: number | Entity, toggle: boolean): void;
    /**
     * Old name: _SET_ENTITY_DECALS_DISABLED
     *
     * Hash: 0xC64E597783BE9A1D | Since: 1207
     */
    function setEntityNoweapondecals(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE037BF068223C38D | Since: 1207
     */
    function setEntityNoCollisionEntity(entity1: number | Entity, entity2: number | Entity, thisFrameOnly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x473598683095D430 | Since: 1207
     */
    function setEntityOnlyDamagedByPlayer(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C1F6AA2F0ADD104 | Since: 1207
     */
    function setEntityOnlyDamagedByRelationshipGroup(entity: number | Entity, relationshipGroup: number | string): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
     * BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
     *
     * Hash: 0xFAEE099C6F890BB8 | Since: 1207
     */
    function setEntityProofs(entity: number | Entity, proofsBitset: number, specialFlag: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x100E7007D13E3687 | Since: 1207
     */
    function setEntityQuaternion(entity: number | Entity, pos: Vector3, w: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x85B8A7534E44BC23 | Since: 1207
     */
    function setEntityRenderScorched(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x850C940EE3E7B8B5 | Since: 1207
     */
    function setEntityRequiresMoreExpensiveRiverCheck(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9CC8314DFEDE441E | Since: 1207
     */
    function setEntityRotation(entity: number | Entity, pitch: number, roll: number, yaw: number, rotationOrder: number): void;
    /**
     * Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
     *
     * Hash: 0x740CB4F3F602C9F4 | Since: 1207
     */
    function setEntityShouldFreezeWaitingOnCollision(entity: number | Entity, toggle: boolean): void;
    /**
     * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
     *
     * Hash: 0x1C99BB7B6E96D16F | Since: 1207
     */
    function setEntityVelocity(entity: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x1794B4FCC84D812F | Since: 1207
     */
    function setEntityVisible(entity: number | Entity, toggle: boolean): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x3AE22DEB5BA5A3E6 | Since: 1207
     */
    function setObjectAsNoLongerNeeded(object: number | Object): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x2595DD4236549CE3 | Since: 1207
     */
    function setPedAsNoLongerNeeded(ped: number | Ped): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x629BFA74418D6239 | Since: 1207
     */
    function setVehicleAsNoLongerNeeded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x786591D986DE9159 | Since: 1207
     */
    function stopEntityAnim(entity: number | Entity, animation: string, animGroup: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x3546FAB293FF2981 | Since: 1207
     */
    function wouldEntityBeOccluded(entityModelHash: number | string, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x002AAC783ED323ED | Since: 1207
     */
    function _0x002AAC783ED323ED(): void;
    /**
     * No comment provided
     *
     * Hash: 0x007AAC783ED323ED | Since: 1207
     */
    function _0x007AAC783ED323ED(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0939E773925C4719 | Since: 1207
     */
    function _0x0939E773925C4719(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CCEFC6C2C95DA2A | Since: 1207
     */
    function _0x0CCEFC6C2C95DA2A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0DB41D59E0F1502B | Since: 1207
     */
    function _0x0DB41D59E0F1502B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FD7D7C232876E72 | Since: 1207
     */
    function _0x0FD7D7C232876E72(): void;
    /**
     * No comment provided
     *
     * Hash: 0x119A5714578F4E05 | Since: 1207
     */
    function _0x119A5714578F4E05(): void;
    /**
     * No comment provided
     *
     * Hash: 0x120376C23F019C6C | Since: 1207
     */
    function _0x120376C23F019C6C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x16908E859C3AB698 | Since: 1207
     */
    function _0x16908E859C3AB698(): void;
    /**
     * No comment provided
     *
     * Hash: 0x188736456D1DEDE6 | Since: 1207
     */
    function _0x188736456D1DEDE6(): any;
    /**
     * No comment provided
     *
     * Hash: 0x20FAEE47427A4497 | Since: 1207
     */
    function _0x20FAEE47427A4497(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A77EF9BEC8518F4 | Since: 1207
     */
    function _0x2A77EF9BEC8518F4(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2D40BCBFE9305DEA | Since: 1207
     */
    function _0x2D40BCBFE9305DEA(): void;
    /**
     * No comment provided
     *
     * Hash: 0x350E9211074955AF | Since: 1207
     */
    function _0x350E9211074955AF(): any;
    /**
     * Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
     *
     * Hash: 0x371D179701D9C082 | Since: 1436
     */
    function _0x371D179701D9C082(entity: number | Entity): void;
    /**
     * Seems to return true if entity is burned / scorched
     * _GET_ENTITY_*
     *
     * Hash: 0x37B01666BAE8F7EF | Since: 1207
     */
    function _0x37B01666BAE8F7EF(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x37CEB637BA3B1A47 | Since: 1207
     */
    function _0x37CEB637BA3B1A47(): void;
    /**
     * Used when checking if ped is in water
     *
     * Hash: 0x383F64263F946E45 | Since: 1207
     */
    function _0x383F64263F946E45(entity: number | Entity, ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3AB3A77672F6473F | Since: 1207
     */
    function _0x3AB3A77672F6473F(): Vector3;
    /**
     * Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
     *
     * Hash: 0x3EC28DA1FFAC9DDD | Since: 1207
     */
    function _0x3EC28DA1FFAC9DDD(entity1: number | Entity, entity2: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F08C6163A4AB1D6 | Since: 1207
     */
    function _0x3F08C6163A4AB1D6(): void;
    /**
     * Attach an entity to coordinates physically better name may be perfered? seems to be used with boats `p_skiff02x` ? The last 6 params are always 0 everywhere in the base code. p7 = 500.0 some kind of time? p8 =1
     *
     * Hash: 0x445D7D8EA66E373E | Since: 1207
     */
    function attachEntityToCoordsPhysically(entity: number | Entity, pos: Vector3, offsetx: number, offsety: number, offsetz: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56E0735D6273B227 | Since: 1207
     */
    function _0x56E0735D6273B227(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5744562E973E33CD | Since: 1207
     */
    function _0x5744562E973E33CD(): any;
    /**
     * _REMOVE_DECALS_* - _REMOVE_FORCED*
     *
     * Hash: 0x5826EFD6D73C4DE5 | Since: 1207
     */
    function _0x5826EFD6D73C4DE5(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x582F73ACFE969571 | Since: 1207
     */
    function _0x582F73ACFE969571(): any;
    /**
     * Attaches scenario to bone with an offset
     * _GET_I* - _GET_M*
     *
     * Hash: 0x5E214112806591EA | Since: 1207
     */
    function _0x5E214112806591EA(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * sets the fill in state for some objects like for the stew, coffee mug ,poker chips, jugs ? P1 is either 0 or 2 p2 seems to be a label/name p3 is the fill in state, max seems to be for some 3.0 (most is 1.0) - 0.0
     * heres some of the labels/names found
     * tumbler_fill, Canvas, Stew_Fill, from Chip01_Ctrl to Chip10_Ctrl, from empty_jug01_Ctrl to empty_jug20_Ctrl, from full_jug01_Ctrl to full_jug20_Ctrl, CTRL_cupFill, Food_DOF_Fill, from WhiteChip_Ctrl_0 to WhiteChip_Ctrl_10, from BlueChip_Ctrl_0 to BlueChip_Ctrl_10, from BlackChip_Ctrl_0 to BlackChip_Ctrl_10, from RedChip_Ctrl_0 to RedChip_Ctrl_10,
     *
     * Hash: 0x669655FFB29EF1A9 | Since: 1207
     */
    function setFillInStateForEntity(entity: number | Entity, fill: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C31B06E91518269 | Since: 1207
     */
    function _0x6C31B06E91518269(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D58167F62238284 | Since: 1207
     */
    function _0x6D58167F62238284(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A49D40DE437BC8D | Since: 1207
     */
    function _0x7A49D40DE437BC8D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F20092547B4DDEA | Since: 1207
     */
    function _0x7F20092547B4DDEA(): void;
    /**
     * No comment provided
     *
     * Hash: 0x80FDEB3A9E9AA578 | Since: 1207
     */
    function _0x80FDEB3A9E9AA578(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x898586729DB5221D | Since: 1207
     */
    function _0x898586729DB5221D(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E10DF0FFA63FB65 | Since: 1207
     */
    function _0x8E10DF0FFA63FB65(): any;
    /**
     * Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
     * _GET_ENTITY_*
     *
     * Hash: 0x8E46E18AA828334F | Since: 1207
     */
    function _0x8E46E18AA828334F(entity: number | Entity, animDict: string, animClip: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x978AA2323ED32209 | Since: 1207
     */
    function _0x978AA2323ED32209(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C6906EF8CB20C5F | Since: 1436
     */
    function _0x9C6906EF8CB20C5F(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xA48E4801DEBDF7E4 | Since: 1207
     */
    function _0xA48E4801DEBDF7E4(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9E6D8F2DDFC4DB9 | Since: 1207
     */
    function _0xA9E6D8F2DDFC4DB9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAAACB74442C1BED3 | Since: 1207
     */
    function _0xAAACB74442C1BED3(): any;
    /**
     * No comment provided
     *
     * Hash: 0xAF72EC7E1B54539B | Since: 1311
     */
    function _0xAF72EC7E1B54539B(entity: number | Entity): number;
    /**
     * SET_ENTITY_LO*
     *
     * Hash: 0xAF7F3099B9FEB535 | Since: 1207
     */
    function _0xAF7F3099B9FEB535(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB16C780C51E51E2B | Since: 1207
     */
    function _0xB16C780C51E51E2B(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB38A29CCD5447783 | Since: 1207
     */
    function _0xB38A29CCD5447783(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA2A089E60ED1163 | Since: 1207
     */
    function _0xBA2A089E60ED1163(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBD94CECFB2D65119 | Since: 1207
     */
    function _0xBD94CECFB2D65119(): void;
    /**
     * SET_ENTITY_A*
     *
     * Hash: 0xC0EDEF16D90661EE | Since: 1207
     */
    function _0xC0EDEF16D90661EE(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2E71D7E0A7B4C89 | Since: 1207
     */
    function _0xC2E71D7E0A7B4C89(): any;
    /**
     * Returns BOOL in ida
     *
     * Hash: 0xC3ABCFBC7D74AFA5 | Since: 1207
     */
    function _0xC3ABCFBC7D74AFA5(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6A1A3D63F122DE7 | Since: 1311
     */
    function _0xC6A1A3D63F122DE7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC76E94A78127412B | Since: 1207
     */
    function _0xC76E94A78127412B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDB682BB47C02F0A | Since: 1207
     */
    function _0xCDB682BB47C02F0A(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xD21C7418C590BB40 | Since: 1207
     */
    function _0xD21C7418C590BB40(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD45BB89B53FC0CFD | Since: 1207
     */
    function _0xD45BB89B53FC0CFD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4636C2EDB0DEA8A | Since: 1207
     */
    function _0xD4636C2EDB0DEA8A(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD46BF94C4C66FAB0 | Since: 1207
     */
    function _0xD46BF94C4C66FAB0(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDD03FC2089AD093C | Since: 1207
     */
    function _0xDD03FC2089AD093C(): void;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0xDF8E49EA89A01DB1 | Since: 1207
     */
    function _0xDF8E49EA89A01DB1(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDFC2B226D56D85F6 | Since: 1207
     */
    function _0xDFC2B226D56D85F6(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE19035EB65AB2932 | Since: 1207
     */
    function _0xE19035EB65AB2932(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE31FC20319874CB3 | Since: 1207
     */
    function _0xE31FC20319874CB3(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE75EEA8DB59A9F39 | Since: 1207
     */
    function _0xE75EEA8DB59A9F39(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9E7A0BAC7F57746 | Since: 1207
     */
    function _0xE9E7A0BAC7F57746(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAB3D91D30A344F1 | Since: 1207
     */
    function _0xEAB3D91D30A344F1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF259AA1E097E0AD | Since: 1207
     */
    function _0xEF259AA1E097E0AD(entity: number | Entity): void;
    /**
     * Returns the entity that is looting a ped but only while the looting is active
     *
     * Hash: 0xEF2D9ED7CE684F08 | Since: 1207
     */
    function getEntityLootingPed(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xF41E2979D5BC5370 | Since: 1207
     */
    function _0xF41E2979D5BC5370(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF59FDE7B4D31A630 | Since: 1207
     */
    function _0xF59FDE7B4D31A630(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFF83AF534156B399 | Since: 1207
     */
    function setEntityCanOnlyBeDamagedByScriptParticipants(EntityIndex: number | Entity, bOnlyDamagedWhenRunningScript: boolean): void;
    /**
     * SET_ENTITY_LO*
     *
     * Hash: 0xFF9965C47FA404DA | Since: 1207
     */
    function _0xFF9965C47FA404DA(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1AD922AB5038DEF3 | Since: 1207
     */
    function addEntityTrackingTrails(entity: number | Entity): void;
    /**
     * Alters entity's health by 'amount'. Can be negative (to drain health).
     * In the scripts entity2 and weaponHash are unused (zero).
     *
     * Hash: 0x835F131E7DC8F97A | Since: 1207
     */
    function changeEntityHealth(entity: number | Entity, amount: number, entity2: number | Entity, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x29BA9F78321E5A6C | Since: 1207
     */
    function createFootpathTrail(waypointRecord: string, bUseSnowOffset: boolean, bInit: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0x0D0DB2B6AF19A987 | Since: 1207
     */
    function deleteCarriable(entity: number | Entity): void;
    /**
     * Must be called from a background script, otherwise it will do nothing.
     *
     * Hash: 0x5E94EA09E7207C16 | Since: 1207
     */
    function deleteEntity2(entity: number | Entity): void;
    /**
     * Returns true if calling script owns specified entity
     *
     * Hash: 0x88AD6CC10D8D35B2 | Since: 1207
     */
    function doesThreadOwnThisEntity(entity: number | Entity): boolean;
    /**
     * Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
     *
     * Hash: 0x31FEF6A20F00B963 | Since: 1207
     */
    function getCarriableFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x886171A12F400B89 | Since: 1207
     */
    function getEntitiesInVolume(volume: number, itemSet: any, entityType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x59B57C4B06531E1E | Since: 1207
     */
    function getEntitiesNearPoint(pos: Vector3, radius: number, itemSet: any): number;
    /**
     * Returns a normalized value between 0.0f and 1.0f. You can get the actual anim time by multiplying this by GET_ANIM_DURATION
     *
     * Hash: 0x627520389E288A73 | Since: 1207
     */
    function getEntityAnimCurrentTime(entity: number | Entity, animDict: string, animName: string): number;
    /**
     * Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
     * https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
     *
     * Hash: 0xF7424890E4A094C0 | Since: 1207
     */
    function getEntityByDoorhash(doorHash: number | string): number;
    /**
     * Old name: _GET_ENTITY_CAN_BE_DAMAGED
     *
     * Hash: 0x75DF9E73F2F005FD | Since: 1207
     */
    function getEntityCanBeDamaged(entity: number | Entity): boolean;
    /**
     * flagId: see _SET_ENTITY_CARRYING_FLAG
     *
     * Hash: 0x808077647856DE62 | Since: 1207
     */
    function getEntityCarryingFlag(entity: number | Entity, flagId: number): boolean;
    /**
     * Returns zero if the entity is not a carriable
     *
     * Hash: 0x0FD25587BB306C86 | Since: 1207
     */
    function getEntityCarryConfig(entity: number | Entity): number;
    /**
     * Gets the entity's forward vector in YX(Z) eulers. Similar to GET_ENTITY_FORWARD_VECTOR
     *
     * Hash: 0x935A30AA88FB1014 | Since: 1207
     */
    function getEntityForwardVectorYx(entity: number | Entity): Vector3;
    /**
     * Returns (CUR_HEALTH / MAX_HEALTH)
     *
     * Hash: 0x96C638784DB4C815 | Since: 1207
     */
    function getEntityHealthFloat(entity: number | Entity): number;
    /**
     * Note: this native was removed in 1232 but added back in 1311
     * Old name: _GET_ENTITY_PROOFS
     *
     * Hash: 0x6CF0DAD7FA1088EA | Since: 1207
     */
    function getEntityProofs(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x2A08A32B6D49906F | Since: 1207
     */
    function getEntityScript(entity: number | Entity, argStruct: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xE12F56CB25D9CE23 | Since: 1207
     */
    function getEntityThreatTier(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xF3FDA9A617A15145 | Since: 1207
     */
    function getEntityWorldPositionOfDimensions(entity: number | Entity, minimum: Vector3, maximum: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC346A546612C49A9 | Since: 1207
     */
    function getIsBird(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x255B6DB4E3AD3C3E | Since: 1207
     */
    function getIsCarriablePelt(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5594AFE9DE0C01B7 | Since: 1207
     */
    function getIsPredator(entity: number | Entity): boolean;
    /**
     * Valid indices: 0 - 3
     * Index 1 always returns a `hogtied` config, doesn't matter the entity.
     * It's for humans only and the ped must be resurrected first if it's dead.
     *
     * Hash: 0x34F008A7E48C496B | Since: 1207
     */
    function getOptimalCarryConfig(entity: number | Entity, index: number): number;
    /**
     * Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
     * Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
     *
     * Hash: 0x964000D355219FC0 | Since: 1207
     */
    function getPedAnimalType(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4735E2A4BB83D9DA | Since: 1207
     */
    function getPinnedMapEntity(): number;
    /**
     * Returns false if entity is not a ped or object.
     *
     * Hash: 0x1E804EA9B12030A4 | Since: 1207
     */
    function getScriptOverrideEntityLootTablePermanent(entity: number | Entity, lootTable: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AFFA9DDC87846F8 | Since: 1207
     */
    function isCarriableModel(model: number | string): boolean;
    /**
     * Getter for FREEZE_ENTITY_POSITION
     *
     * Hash: 0x083D497D57B7400F | Since: 1207
     */
    function isEntityFrozen(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8DE41E9902E85756 | Since: 1207
     */
    function isEntityFullyLooted(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x857ACB0AB4BD0D55 | Since: 1207
     */
    function isEntityOnTrainTrack(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA7E51B53309EAC97 | Since: 1207
     */
    function isEntityOwnedByPersistenceSystem(entity: number | Entity): boolean;
    /**
     * Params: p1 (probably animType) = 1, 0
     *
     * Hash: 0x0B7CB1300CBFE19C | Since: 1207
     */
    function isEntityPlayingAnyAnim(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4E5C1E93C466127 | Since: 1207
     */
    function isEntityUnderwater(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8CCDB712FBCBA92 | Since: 1207
     */
    function isTrackedEntityVisible(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x36EB4D34D4A092C5 | Since: 1207
     */
    function pauseEntityTracking(entity: number | Entity, pause: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA88E215CEB0435C0 | Since: 1207
     */
    function requestEntityLootList(mount: number | Ped, argStruct: any, visiblelootslotrequestType: number | string, flag: number): boolean;
    /**
     * Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
     *
     * Hash: 0x66B2B83B94B22458 | Since: 1207
     */
    function searchBuildingPoolForEntityWithThisModel(modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x11CDABDC7783B2BC | Since: 1207
     */
    function setEntityAnimCurrentTime(entity: number | Entity, animDict: string, animName: string, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAA885BA3CEA4E4A | Since: 1207
     */
    function setEntityAnimSpeed(entity: number | Entity, animDict: string, animName: string, speedMultiplier: number): void;
    /**
     * Changes type and quality of skins
     * type hashes: https://pastebin.com/C1WvQjCy
     *
     * Hash: 0x399657ED871B3A6C | Since: 1207
     */
    function setEntityCarcassType(entity: number | Entity, type: number | string): void;
    /**
     * flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
     *
     * enum eCarryingFlag
     * {
     * CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
     * CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
     * CARRYING_FLAG_CAN_BE_DROPPED = 4,
     * CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
     * CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
     * CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
     * CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
     * CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
     * CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
     * CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
     * CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
     * CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
     * CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
     * };
     *
     * Hash: 0x18FF3110CF47115D | Since: 1207
     */
    function setEntityCarryingFlag(entity: number | Entity, flagId: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x203BEFFDBE12E96A | Since: 1207
     */
    function setEntityCoordsAndHeading(entity: number | Entity, pos: Vector3, heading: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0918E3565C20F03C | Since: 1207
     */
    function setEntityCoordsAndHeadingNoOffset(entity: number | Entity, pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x482D17E45665DA44 | Since: 1207
     */
    function setEntityCustomPickupRadius(entity: number | Entity, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA91E6CF94404E8C9 | Since: 1207
     */
    function setEntityFadeIn(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BCF5F3D8FFE988D | Since: 1207
     */
    function setEntityFullyLooted(entity: number | Entity, looted: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBDC12861D079ABA | Since: 1207
     */
    function setEntityLightsEnabled(entity: number | Entity, enabled: boolean): void;
    /**
     * tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
     *
     * Hash: 0x4B436BAC8CBE9B07 | Since: 1207
     */
    function setEntityThreatTier(entity: number | Entity, tier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2B9C78537ED5759 | Since: 1207
     */
    function unpinMapEntity(entity: number | Entity): void;
}
export declare namespace event {
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
     *
     * Hash: 0xD9F8455409B525E9 | Since: 1207
     */
    function addShockingEventAtPosition(eventType: number | string, pos: Vector3): number;
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0x7FD8F3BE76F89422 | Since: 1207
     */
    function addShockingEventForEntity(eventType: number | string, entity: number | Entity): number;
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0x9DB47E16060D6354 | Since: 1207
     */
    function isShockingEventInSphere(eventType: number | string, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD47A168C2AB90DC4 | Since: 1207
     */
    function removeAllShockingEvents(): void;
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0x118873DD538490B4 | Since: 1207
     */
    function removeAllShockingEventsOfType(eventType: number | string, scriptCreatedOnly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8BB3CC253A34559 | Since: 1207
     */
    function removeShockingEvent(event: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB249021652420C5 | Since: 1207
     */
    function removeShockingEventSpawnBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AE2F981CDDB8FA4 | Since: 1207
     */
    function setDecisionMaker(ped: number | Ped, name: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B9C5C38838FB6E6 | Since: 1207
     */
    function setDecisionMakerToDefault(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x84994FAD4E4E4E69 | Since: 1207
     */
    function suppressShockingEventsNextFrame(): void;
    /**
     * Only used in R* SP Script beat_rat_infestation and homeinvasion
     *
     * Hash: 0x18E93EBFC1FCFA48 | Since: 1207
     */
    function _0x18E93EBFC1FCFA48(volume: number): any;
    /**
     * AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
     *
     * Hash: 0x1A5C5D350068A673 | Since: 1207
     */
    function _0x1A5C5D350068A673(ped: number | Ped): void;
    /**
     * _GET*
     *
     * Hash: 0x1D1B448D719415AB | Since: 1207
     */
    function _0x1D1B448D719415AB(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x26054EB81AC0893B | Since: 1207
     */
    function _0x26054EB81AC0893B(object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2DD42FAD06E6F19E | Since: 1207
     */
    function _0x2DD42FAD06E6F19E(object: number | Object): any;
    /**
     * _ADD* (_ADD_SHOCKING_EVENT_* ?)
     *
     * Hash: 0x36D0F2BA2C0D9BDE | Since: 1207
     */
    function _0x36D0F2BA2C0D9BDE(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x4465C3D1475BD3FD | Since: 1207
     */
    function _0x4465C3D1475BD3FD(model: number | string): void;
    /**
     * Only used in R* SP Script coachrobberies
     * _SET_S*
     *
     * Hash: 0x4B2B1A891D437CA7 | Since: 1207
     */
    function _0x4B2B1A891D437CA7(): void;
    /**
     * Only used in R* SP Script beat_rat_infestation
     * Params: p0 = value returned by 0x18E93EBFC1FCFA48
     *
     * Hash: 0x56B3410626A473E7 | Since: 1207
     */
    function _0x56B3410626A473E7(): void;
    /**
     * Only used in R* SP Scripts
     * Hash only used in R* Script mob3.ysc: ROBBERY
     * _ADD_PED*
     *
     * Hash: 0x7C511E91738A0828 | Since: 1207
     */
    function _0x7C511E91738A0828(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * _GET*
     *
     * Hash: 0x83D43F0FD5276E4D | Since: 1207
     */
    function _0x83D43F0FD5276E4D(entity: number | Entity): any;
    /**
     * _SET_P*
     *
     * Hash: 0x9520175B35E2268D | Since: 1207
     */
    function _0x9520175B35E2268D(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA86B0EE9B39D15D6 | Since: 1207
     */
    function _0xA86B0EE9B39D15D6(object: number | Object): void;
    /**
     * Might return time since some (?) event.
     *
     * Hash: 0xAD17A18215DD23D6 | Since: 1207
     */
    function _0xAD17A18215DD23D6(entity: number | Entity): number;
    /**
     * _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
     *
     * Hash: 0xB6F4825153920582 | Since: 1207
     */
    function _0xB6F4825153920582(): void;
    /**
     * HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
     *
     * Hash: 0xE28D7FC9FD32ABEB | Since: 1311
     */
    function _0xE28D7FC9FD32ABEB(entity: number | Entity, eventType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2C2FBB7825FFC66 | Since: 1207
     */
    function _0xE2C2FBB7825FFC66(): void;
    /**
     * Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
     *
     * Hash: 0x608AD36A644A97FE | Since: 1207
     */
    function addModelToEventMonitor(model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA1315C33B9A2847 | Since: 1207
     */
    function createShockingEvent(args: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD8F2424C6E1E3A8 | Since: 1207
     */
    function eventFlushAllEventTrackers(ped: number | Ped): void;
    /**
     * Returns eventType
     *
     * Hash: 0x796EECFF0C6D39BE | Since: 1207
     */
    function eventGetRecentEvent(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x822A001BCEA5BD81 | Since: 1207
     */
    function eventGetSourceEntityFromEvent(entity: number | Entity, eventType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x38497F139981C5C9 | Since: 1207
     */
    function eventGetTargetEntityFromEvent(entity: number | Entity, eventType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC6A7DC546E94FED5 | Since: 1207
     */
    function eventGetTimeSinceEvent(entity: number | Entity, eventType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x797B3D4D92E56094 | Since: 1207
     */
    function isEventTrackerActive(eventName: string, shockingEvent: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4C71BA9CAB097BD | Since: 1207
     */
    function removeAllShockingEventsInArea(pos: Vector3, radius: number): void;
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0x6A648D42BF271DC7 | Since: 1207
     */
    function removeAllShockingEventsOfTypeInArea(eventType: number | string, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB1E41DD3D3C6250 | Since: 1207
     */
    function setEventTrackerForPed(ped: number | Ped, eventName: string): void;
}
export declare namespace fire {
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
     *
     * explosionType:
     * enum eExplosionTag
     * {
     * EXP_TAG_DONTCARE = -1,
     * EXP_TAG_GRENADE,
     * EXP_TAG_STICKYBOMB,
     * EXP_TAG_MOLOTOV,
     * EXP_TAG_MOLOTOV_VOLATILE,
     * EXP_TAG_HI_OCTANE,
     * EXP_TAG_CAR,
     * EXP_TAG_PLANE,
     * EXP_TAG_PETROL_PUMP,
     * EXP_TAG_DIR_STEAM,
     * EXP_TAG_DIR_FLAME,
     * EXP_TAG_DIR_WATER_HYDRANT,
     * EXP_TAG_BOAT,
     * EXP_TAG_BULLET,
     * EXP_TAG_SMOKEGRENADE,
     * EXP_TAG_BZGAS,
     * EXP_TAG_GAS_CANISTER,
     * EXP_TAG_EXTINGUISHER,
     * EXP_TAG_TRAIN,
     * EXP_TAG_DIR_FLAME_EXPLODE,
     * EXP_TAG_VEHICLE_BULLET,
     * EXP_TAG_BIRD_CRAP,
     * EXP_TAG_FIREWORK,
     * EXP_TAG_TORPEDO,
     * EXP_TAG_TORPEDO_UNDERWATER,
     * EXP_TAG_LANTERN,
     * EXP_TAG_DYNAMITE,
     * EXP_TAG_DYNAMITESTACK,
     * EXP_TAG_DYNAMITE_VOLATILE,
     * EXP_TAG_RIVER_BLAST,
     * EXP_TAG_PLACED_DYNAMITE,
     * EXP_TAG_FIRE_ARROW,
     * EXP_TAG_DYNAMITE_ARROW,
     * EXP_TAG_PHOSPHOROUS_BULLET,
     * EXP_TAG_LIGHTNING_STRIKE,
     * EXP_TAG_TRACKING_ARROW,
     * EXP_TAG_POISON_BOTTLE
     * };
     *
     * Hash: 0x7D6F58F69DA92530 | Since: 1207
     */
    function addExplosion(pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * explosionType: see ADD_EXPLOSION
     * Change explosionFx (Visual Effect) for specified explosionType
     *
     * Hash: 0x53BA259F3A67A99E | Since: 1207
     */
    function addExplosionWithUserVfx(pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0xD84A917A64D4D016 | Since: 1207
     */
    function addOwnedExplosion(ped: number | Ped, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB646FB657F448261 | Since: 1207
     */
    function getClosestFirePos(outPosition: Vector3, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9617BC6FAE61E08 | Since: 1207
     */
    function getNumberOfFiresInRange(pos: Vector3, radius: number): number;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0x8002DDAB58594D78 | Since: 1207
     */
    function getOwnerOfExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1BD7C371CE257C3E | Since: 1207
     */
    function isEntityOnFire(entity: number | Entity): boolean;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0xD96E82AEBFFAAFF0 | Since: 1207
     */
    function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0x5AE661ECD18524C9 | Since: 1207
     */
    function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, angle: number): boolean;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0x8391BA4313A25AD3 | Since: 1207
     */
    function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0xD62DD846D82CBB90 | Since: 1207
     */
    function isExplosionInSphere(explosionType: number, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x790125C36E194069 | Since: 1207
     */
    function removeScriptFire(fireHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4DC7418A44D6822 | Since: 1207
     */
    function startEntityFire(): void;
    /**
     * Starts a fire:
     *
     * xyz: Location of fire
     * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
     * isGasFire: Whether or not the fire is powered by gasoline.
     *
     * Hash: 0x6B83617E04503888 | Since: 1207
     */
    function startScriptFire(pos: Vector3, soundsetName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8390751DC40C1E98 | Since: 1207
     */
    function stopEntityFire(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB38F247BD421708 | Since: 1207
     */
    function stopFireInRange(pos: Vector3, radius: number): void;
    /**
     * Only used in R* SP Related Camp Scripts
     *
     * Hash: 0x24DB6B9F2B719043 | Since: 1207
     */
    function _0x24DB6B9F2B719043(): void;
    /**
     * Add explosion with vfx and assign an entity as damage causer.
     * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
     * explosionFx: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/explosion_vfxTags.lua
     *
     * Hash: 0x34AE85C7CA4857AA | Since: 1207
     */
    function addExplosionWithUserVfxAndDamageCauser(entity: number | Entity, pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x41B87A6495EE13DD | Since: 1232
     */
    function _0x41B87A6495EE13DD(): any;
    /**
     * No comment provided
     *
     * Hash: 0x559FC1D310813031 | Since: 1232
     */
    function getClosestFirePosInVolume(outPosition: Vector3, pos: Vector3, rot: Vector3, scale: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x68F6A75FDF5A70D6 | Since: 1207
     */
    function _0x68F6A75FDF5A70D6(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x754937C28271BC65 | Since: 1207
     */
    function _0x754937C28271BC65(): void;
    /**
     * this natives only returns true if entity is damaged by fire , once damaged caused to entity by fire (like burned appearance) has cleared (they clear over time) then returns false
     *
     * Hash: 0xA4454592DCF7C992 | Since: 1207
     */
    function isEntityDamagedByFire(entity: number | Entity): boolean;
    /**
     * Add explosion with and assign an entity as damage causer.
     * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
     *
     * Hash: 0xB7DF150605EEDC9B | Since: 1207
     */
    function addExplosionWithDamageCauser(entity: number | Entity, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDC25355C0D65963 | Since: 1207
     */
    function isEntityConsumedByFire(entity: number | Entity): boolean;
    /**
     * explosionType: see ADD_EXPLOSION
     *
     * Hash: 0xE24822A4CFC9107A | Since: 1207
     */
    function isExplosionInVolume(explosionType: number, volume: number): boolean;
    /**
     * Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
     *
     * Hash: 0xAB7993BA61A4674F | Since: 1232
     */
    function isPedShockingEventActive(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB7C7BDC375AEA9A4 | Since: 1207
     */
    function stopFireInBox(pos: Vector3, rot: Vector3, scale: Vector3): void;
}
export declare namespace flock {
    /**
     * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
     *
     * Hash: 0x1C1993824A396603 | Since: 1207
     */
    function getAnimalTuningBoolParam(animal: number | Ped, index: number): boolean;
    /**
     * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
     *
     * Hash: 0x4BC3ECFDA0297E27 | Since: 1207
     */
    function getAnimalTuningFloatParam(animal: number | Ped, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE108489621422F91 | Since: 1207
     */
    function getSpeciesTuningFloatParam(): number;
    /**
     * No comment provided
     *
     * Hash: 0x96AA1304D30E6BC3 | Since: 1355
     */
    function resetAnimalTuningBoolParam(animal: number | Ped, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE776A195488FC520 | Since: 1355
     */
    function resetAnimalTuningFloatParam(animal: number | Ped, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FF1E042FA597187 | Since: 1207
     */
    function setAnimalTuningBoolParam(animal: number | Ped, index: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBDA22C87977244F | Since: 1207
     */
    function setAnimalTuningFloatParam(animal: number | Ped, index: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D1D94C2459B42EE | Since: 1207
     */
    function setSpeciesTuningBoolParam(): void;
    /**
     * No comment provided
     *
     * Hash: 0x963240B6C252BA49 | Since: 1207
     */
    function setSpeciesTuningFloatParam(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0816C31480764AB0 | Since: 1207
     */
    function _0x0816C31480764AB0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x09EE00B8F858E0BE | Since: 1207
     */
    function _0x09EE00B8F858E0BE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1520626FFAFFFA8F | Since: 1207
     */
    function _0x1520626FFAFFFA8F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x17E3E5C46ECCD308 | Since: 1207
     */
    function _0x17E3E5C46ECCD308(): void;
    /**
     * No comment provided
     *
     * Hash: 0x19870C40C7EE15BE | Since: 1207
     */
    function _0x19870C40C7EE15BE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1DA6CB02071055D5 | Since: 1207
     */
    function _0x1DA6CB02071055D5(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x2DF3D457D86F8E57 | Since: 1207
     */
    function _0x2DF3D457D86F8E57(): void;
    /**
     * No comment provided
     *
     * Hash: 0x34B9C4D86DF2C2F3 | Since: 1207
     */
    function _0x34B9C4D86DF2C2F3(): any;
    /**
     * No comment provided
     *
     * Hash: 0x36486AF7DA93A464 | Since: 1207
     */
    function _0x36486AF7DA93A464(): any;
    /**
     * Remove the ped from a herd.
     *
     * Hash: 0x408D1149C5E39C1E | Since: 1207
     */
    function removeHerdPed(herd: number | Entity, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x53187E563F938E76 | Since: 1207
     */
    function _0x53187E563F938E76(): any;
    /**
     * Clear the herd.
     *
     * Hash: 0x67A43EA3F6FE0076 | Since: 1207
     */
    function clearHerd(herd: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C57BEA886A20C6B | Since: 1207
     */
    function _0x6C57BEA886A20C6B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x706B434FEFAD6A24 | Since: 1207
     */
    function _0x706B434FEFAD6A24(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8049B17BEC937662 | Since: 1207
     */
    function _0x8049B17BEC937662(): any;
    /**
     * Return whether the ped is in the herd.
     *
     * Hash: 0x9E13ACC38BA8F9C3 | Since: 1207
     */
    function isPedInHerd(herd: number | Entity, ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA881F5C77A560906 | Since: 1207
     */
    function _0xA881F5C77A560906(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3D581A34BC0A1F0 | Since: 1207
     */
    function _0xC3D581A34BC0A1F0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC72CE37081DAE625 | Since: 1207
     */
    function _0xC72CE37081DAE625(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC95611869E14F8AF | Since: 1207
     */
    function _0xC95611869E14F8AF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC6B5AAFC87BFC7B | Since: 1207
     */
    function _0xCC6B5AAFC87BFC7B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD95F04A4E73BE85E | Since: 1207
     */
    function _0xD95F04A4E73BE85E(): any;
    /**
     * Delete and invalidate the herd.
     *
     * Hash: 0xE0961AED72642B80 | Since: 1207
     */
    function deleteHerd(herd: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xE36D2CB540597EF7 | Since: 1207
     */
    function _0xE36D2CB540597EF7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE93415B3307208E5 | Since: 1207
     */
    function _0xE93415B3307208E5(): any;
    /**
     * species: SPECIES_BIRD_CROW
     *
     * Hash: 0xF2CCA7B68CFAB2B9 | Since: 1207
     */
    function _0xF2CCA7B68CFAB2B9(species: number | string, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA821997794F48E7 | Since: 1207
     */
    function _0xFA821997794F48E7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB16F08F47B83B4C | Since: 1207
     */
    function _0xFB16F08F47B83B4C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDB008B3BCF5992F | Since: 1207
     */
    function _0xFDB008B3BCF5992F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF1E339CE40EAAAF | Since: 1207
     */
    function _0xFF1E339CE40EAAAF(): void;
    /**
     * No comment provided
     *
     * Hash: 0x933E5D31A7D13069 | Since: 1207
     */
    function addPedToFlock(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB4EF7EDAE2E16F1 | Since: 1207
     */
    function createHerd(): number;
    /**
     * Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
     * Used for: REL_DOMESTICATED_ANIMAL
     *
     * Hash: 0x3B005FF0538ED2A9 | Since: 1207
     */
    function getAnimalIsWild(ped: number | Ped): boolean;
    /**
     * enum eAnimalRarityLevel
     * {
     * ARL_COMMON,
     * ARL_RARE,
     * ARL_LEGENDARY,
     * ARL_NUMRARITYLEVELS
     * };
     *
     * Hash: 0xF8B48A361DC388AE | Since: 1207
     */
    function getAnimalRarity(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x8D913E493BAFE0A3 | Since: 1207
     */
    function isHerdValid(herdHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAEB97D84CDF3C00B | Since: 1207
     */
    function setAnimalIsWild(ped: number | Ped, toggle: boolean): void;
    /**
     * rarityLevel: see _GET_ANIMAL_RARITY
     *
     * Hash: 0x8B6F0F59B1B99801 | Since: 1207
     */
    function setAnimalRarity(ped: number | Ped, rarityLevel: number): void;
}
export declare namespace gang {
    /**
     * No comment provided
     *
     * Hash: 0x901E0DC25080C8B9 | Since: 1207
     */
    function networkGetGangId(player: number | string | Player): any;
    /**
     * No comment provided
     *
     * Hash: 0x4BE6C13A45CCA8EC | Since: 1207
     */
    function networkGetGangLeader(gangId: any): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x149A2751AB66AC02 | Since: 1207
     */
    function networkGetNumGangMembers(gangId: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x0F99F6436528A089 | Since: 1207
     */
    function networkIsGangActive(gangId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD6F6ACF4392187FB | Since: 1207
     */
    function networkIsGangIdValid(gangId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x93A91A351A07360E | Since: 1207
     */
    function networkIsGangInSession(gangId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x424B17A7DC5C90BC | Since: 1207
     */
    function networkIsGangLeader(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F59FE6F37869576 | Since: 1207
     */
    function networkIsInSameGang(player1: number | string | Player, player2: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E5C9FB9ED5DFF1C | Since: 1207
     */
    function _0x0E5C9FB9ED5DFF1C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1F11702DDBD915C6 | Since: 1207
     */
    function _0x1F11702DDBD915C6(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2F7EB8B6F6AFE79C | Since: 1207
     */
    function _0x2F7EB8B6F6AFE79C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3ADC71A66356D706 | Since: 1207
     */
    function _0x3ADC71A66356D706(): any;
    /**
     * No comment provided
     *
     * Hash: 0x48D82C83987E18E4 | Since: 1207
     */
    function _0x48D82C83987E18E4(): any;
    /**
     * No comment provided
     *
     * Hash: 0x51C5EF47086AA0D7 | Since: 1207
     */
    function _0x51C5EF47086AA0D7(): any;
    /**
     * No comment provided
     *
     * Hash: 0x53A94294FDDCF98C | Since: 1207
     */
    function _0x53A94294FDDCF98C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6102830F764B3DE1 | Since: 1207
     */
    function _0x6102830F764B3DE1(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x644E02F24F9D4E98 | Since: 1207
     */
    function _0x644E02F24F9D4E98(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7933754F260B428A | Since: 1207
     */
    function _0x7933754F260B428A(player: number | string | Player): any;
    /**
     * No comment provided
     *
     * Hash: 0x7BAA30C9BBE8AEE7 | Since: 1207
     */
    function _0x7BAA30C9BBE8AEE7(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA9CEAE8D6637FBAD | Since: 1207
     */
    function _0xA9CEAE8D6637FBAD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD22AB64FA428DF3 | Since: 1207
     */
    function _0xAD22AB64FA428DF3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFD3599A3CC5637D | Since: 1207
     */
    function _0xAFD3599A3CC5637D(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB22B1D9F74095382 | Since: 1207
     */
    function _0xB22B1D9F74095382(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB38C256498748413 | Since: 1207
     */
    function _0xB38C256498748413(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC81A9E2C8EFD28D5 | Since: 1207
     */
    function _0xC81A9E2C8EFD28D5(): void;
    /**
     * _NETWORK_GET_* or _NETWORK_IS_*
     *
     * Hash: 0xDA801F7F6A5278D3 | Since: 1207
     */
    function _0xDA801F7F6A5278D3(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE4C64CD37CB176AA | Since: 1207
     */
    function _0xE4C64CD37CB176AA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEE4F20004D0288B7 | Since: 1207
     */
    function _0xEE4F20004D0288B7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA7C5B7E087A4CEB | Since: 1207
     */
    function _0xFA7C5B7E087A4CEB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCE88A261DCBBA0D9 | Since: 1207
     */
    function networkGetGangLeaderHandle(gangId: any, gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD1BF325C8252A982 | Since: 1207
     */
    function networkGetGangMembers(gangId: any, memberHandles: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x9970AE8C3D706139 | Since: 1207
     */
    function networkGetGangPrivacy(): number;
    /**
     * No comment provided
     *
     * Hash: 0x853B0FA4D8732C57 | Since: 1207
     */
    function networkGetGangSize(gangId: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x9BE7DCB22D32CCBE | Since: 1207
     */
    function networkIsGangMember(gangId: any, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFCF96CCBD81B24C8 | Since: 1207
     */
    function networkIsGangOpen(gangId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x81FB74C83C2ED69F | Since: 1207
     */
    function networkIsInMyGang(player: number | string | Player): boolean;
    /**
     * banTimeSeconds is 120 in R* Scripts
     *
     * Hash: 0xCD9E2D9BC52FD80F | Since: 1207
     */
    function networkKickGangMember(player: number | string | Player, banTimeSeconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A04A07BC3074EDB | Since: 1207
     */
    function networkLeaveGang(disband: boolean): void;
    /**
     * Returns true if join succeeded, false if failed.
     *
     * Hash: 0xC0474C8BCF6787AD | Since: 1207
     */
    function networkRequestGangJoin(gangId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC5BF29F4035277C2 | Since: 1207
     */
    function networkSetGangPrivacy(privacyType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x833D8268D51B4522 | Since: 1207
     */
    function networkSetGangSize(size: number): boolean;
    /**
     * openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
     * openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
     *
     * campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
     *
     * Hash: 0xD1A226F2E05E58FC | Since: 1207
     */
    function networkStartGang(openStatus: boolean, campSize: number): void;
}
export declare namespace google_analytics {
    /**
     * No comment provided
     *
     * Hash: 0x87BBCC4360A9BDE3 | Since: 1355
     */
    function googleAnalyticsEndEvent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC6DE040378364798 | Since: 1207
     */
    function googleAnalyticsPopPage(pageName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD43A616AE3AC4EF6 | Since: 1207
     */
    function googleAnalyticsPushPage(pageName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C54F031D7C0F7AC | Since: 1355
     */
    function googleAnalyticsStartEvent(eventCategory: string, eventAction: string, eventLabel: string, eventValue: number): boolean;
}
export declare namespace graphics {
    /**
     * No comment provided
     *
     * Hash: 0x57CB267624EF85C0 | Since: 1207
     */
    function addDecal(): number;
    /**
     * No comment provided
     *
     * Hash: 0x73354FB6D03D2E8A | Since: 1207
     */
    function addPetrolTrailDecalInfo(pos: Vector3): void;
    /**
     * Returns veg modifier handle
     *
     * Hash: 0xFA50F79257745E74 | Since: 1207
     */
    function addVegModifierSphere(pos: Vector3, radius: number, modType: number, flags: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x7C348310A6E2FB91 | Since: 1207
     */
    function allowPickupLightSync(pickupObject: number | Object, allow: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AB192A9EF980EED | Since: 1207
     */
    function animpostfxHasEventTriggeredByStackhash(effectNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59EA80079B86D8C7 | Since: 1207
     */
    function animpostfxIsPreloadingByStackhash(effectNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4A123E85D7C4CA0B | Since: 1207
     */
    function animpostfxIsRunning(effectName: string): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
     *
     * Hash: 0x4102732DF6B4005F | Since: 1207
     */
    function animpostfxPlay(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB4FD7446BAB2F394 | Since: 1207
     */
    function animpostfxStop(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x66560A0D4C64FD21 | Since: 1207
     */
    function animpostfxStopAll(): void;
    /**
     * No comment provided
     *
     * Hash: 0x40866A418EB8EFDE | Since: 1207
     */
    function attachTvAudioToEntity(entity: number | Entity): void;
    /**
     * Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
     *
     * Hash: 0x494A9874F17A7D50 | Since: 1207
     */
    function beginCreateLowQualityCopyOfPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA15BFFC0A01B34E1 | Since: 1207
     */
    function beginTakeHighQualityPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0552AA3FFC5B87AA | Since: 1207
     */
    function blockPickupPlacementLight(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7C29D7C12C36F03 | Since: 1207
     */
    function cascadeShadowsClearShadowSampleType(): void;
    /**
     * When this is set to ON, shadows only draw as you get nearer.
     *
     * When OFF, they draw from a further distance.
     *
     * Hash: 0x8FBFD2AEB196B369 | Since: 1207
     */
    function cascadeShadowsEnableEntityTracker(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9EDB2E4512D563E | Since: 1207
     */
    function cascadeShadowsSetCascadeBounds(): void;
    /**
     * Possible values:
     * "CSM_ST_POINT"
     * "CSM_ST_LINEAR"
     * "CSM_ST_BOX3x3"
     * "CSM_ST_BOX4x4"
     * "CSM_ST_DITHER2_LINEAR"
     * "CSM_ST_CUBIC"
     * "CSM_ST_POISSON16"
     * "CSM_ST_SOFT8"
     * "CSM_ST_SOFT16"
     * "CSM_ST_SOFT32"
     * "CSM_ST_DITHER16_RPDB"
     * "CSM_ST_POISSON16_RPDB_GNORM"
     * "CSM_ST_HIGHRES_BOX4x4"
     * "CSM_ST_ESM"
     *
     * Hash: 0xCE4774E0F9AD48D1 | Since: 1207
     */
    function cascadeShadowsSetShadowSampleType(type: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E3F4AF2D63491FB | Since: 1207
     */
    function clearTimecycleModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x175668836B44CBB0 | Since: 1207
     */
    function createCheckpointWithNamehash(typeHash: number | string, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, radius: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
    /**
     * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
     *
     * Hash: 0xFB405CB357C69CB9 | Since: 1207
     */
    function createTrackedPoint(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0DED5B0C8EBAAE12 | Since: 1207
     */
    function deleteCheckpoint(checkpoint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x37A59922109F8F1C | Since: 1207
     */
    function destroyTrackedPoint(point: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C9978A2A3DC3D0D | Since: 1207
     */
    function disableEntitymask(): void;
    /**
     * No comment provided
     *
     * Hash: 0x98A7CD5EA379A854 | Since: 1207
     */
    function disableHdtexThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DD5AFF561E88F2A | Since: 1207
     */
    function doesParticleFxLoopedExist(ptfxHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD2D9E04C0DF927F4 | Since: 1207
     */
    function drawLightWithRange(pos: Vector3, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
    /**
     * nullsub, doesn't do anything (GTA5 leftover, there is no phone in RDR3)
     *
     * Hash: 0xF1142E5D64B47802 | Since: 1207
     */
    function drawLowQualityPhotoToPhone(photoRotation: number): void;
    /**
     * Draws a rectangle on the screen.
     *
     * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
     *
     * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
     *
     * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
     *
     * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
     *
     * -R: Red part of the color. (0-255)
     *
     * -G: Green part of the color. (0-255)
     *
     * -B: Blue part of the color. (0-255)
     *
     * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
     *
     * Hash: 0x405224591DF02025 | Since: 1207
     */
    function drawRect(x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Draws a 2D sprite on the screen.
     *
     * Parameters:
     * textureDict - Name of texture dictionary to load texture from
     *
     * textureName - Name of texture to load from texture dictionary
     *
     * screenX/Y - Screen offset (0.5 = center)
     * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
     *
     * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
     *
     * red,green,blue - Sprite color (default = 255/255/255)
     *
     * alpha - opacity level
     *
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
     *
     * Hash: 0xC9884ECADE94CB34 | Since: 1207
     */
    function drawSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0A145540254A840 | Since: 1207
     */
    function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAAD23DE7A54FC14 | Since: 1207
     */
    function enableEntitymask(): void;
    /**
     * Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
     *
     * Hash: 0x6FE93BCC7BF12B63 | Since: 1207
     */
    function enableMoonCycleOverride(strength: number): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x6FC9B065229C0787 | Since: 1207
     */
    function enableMovieSubtitles(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E126AAE933F3B56 | Since: 1207
     */
    function endPetrolTrailDecals(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD45547D8396F002A | Since: 1207
     */
    function freeMemoryForHighQualityPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x614682E715ADBAAC | Since: 1207
     */
    function freeMemoryForLowQualityPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7DFF8F94937D2659 | Since: 1207
     */
    function freeMemoryForMissionCreatorPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB50D7AFCC8B0EC6 | Since: 1207
     */
    function getScreenCoordFromWorldCoord(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): boolean;
    /**
     * Hardcoded to always set x to 1280 and y to 720.
     *
     * Hash: 0x66773C92835D0909 | Since: 1207
     */
    function getScreenResolution(x: number, y: number): void;
    /**
     * Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
     *
     * Hash: 0x13430D3D5A45F14B | Since: 1207
     */
    function getStatusOfCreateLowQualityCopyOfPhoto(): number;
    /**
     * `contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)`
     *
     * Hash: 0xC71B50AE58D07369 | Since: 1207
     */
    function getStatusOfLoadMissionCreatorPhoto(contentId: string): number;
    /**
     * 0 = succeeded
     * 1 = getting status
     * 2 = failed
     *
     * Hash: 0xD6663EC374092383 | Since: 1207
     */
    function getStatusOfSaveHighQualityPhoto(): number;
    /**
     * 0 = succeeded
     * 1 = getting status
     * 2 = failed
     *
     * Hash: 0xB28894CD7408BD0C | Since: 1207
     */
    function getStatusOfSortedListOperation(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4A3DA74C3CCB1725 | Since: 1207
     */
    function getStatusOfTakeHighQualityPhoto(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA705394293E2B3D3 | Since: 1207
     */
    function getTimecycleModifierIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2DA67BA3C8A6755D | Since: 1207
     */
    function getTimecycleTransitionModifierIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x86ED21BDB2791CE8 | Since: 1207
     */
    function getTogglePausedRenderphasesStatus(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF90FBFD68F3C59AE | Since: 1207
     */
    function getTvChannel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E4B4E5CF5D3EEB5 | Since: 1207
     */
    function isDecalAlive(decal: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x86076AE35CBBE55F | Since: 1355
     */
    function isPhotoFrame(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCBB056BA159FB48D | Since: 1207
     */
    function isTrackedPointVisible(point: number): boolean;
    /**
     * Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
     *
     * Hash: 0x4D562223E0EB65F3 | Since: 1207
     */
    function isTvshowCurrentlyPlaying(videoCliphash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x84F0BA7462FF8D58 | Since: 1207
     */
    function loadMissionCreatorPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF6E67D073D2DCE2 | Since: 1207
     */
    function pedshotIsAvailable(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA42EDF1E88734A7E | Since: 1207
     */
    function queueOperationToCreateSortedListOfPhotos(): any;
    /**
     * No comment provided
     *
     * Hash: 0x49A720552EB0BB88 | Since: 1207
     */
    function removeDecal(decal: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB8972BAE0013140 | Since: 1207
     */
    function removeDecalsFromObject(obj: number | Object): void;
    /**
     * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
     *
     * Hash: 0x86DE59FA02902B40 | Since: 1207
     */
    function removeDecalsInRange(pos: Vector3, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE7BF7CA9E4BA48D | Since: 1207
     */
    function removeGrassCullSphere(handle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x459598F579C98929 | Since: 1207
     */
    function removeParticleFx(ptfxHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x92884B4A49D81325 | Since: 1207
     */
    function removeParticleFxFromEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x87B5905ECA623B68 | Since: 1207
     */
    function removeParticleFxInRange(pos: Vector3, radius: number): void;
    /**
     * only works by invoking and passing as pointer value Citizen.InvokeNative(0x9CF1836C03FB67A2, Citizen.PointerValueIntInitialized(vegModifierId),1) p1 is 1 or 0
     *
     * Hash: 0x9CF1836C03FB67A2 | Since: 1207
     */
    function removeVegModifierSphere(vegModifierHandle: number): void;
    /**
     * Sets an unknown value related to timecycles.
     *
     * Hash: 0x297B72E2AF094742 | Since: 1207
     */
    function resetAdaptation(unk: number): void;
    /**
     * Resets the effect of SET_PARTICLE_FX_OVERRIDE
     *
     * Hash: 0x274B3DABF7E72DEF | Since: 1207
     */
    function resetParticleFxOverride(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCD9AAD85E1B559E | Since: 1207
     */
    function resetPausedRenderphases(): void;
    /**
     * No comment provided
     *
     * Hash: 0x57639FD876B68A91 | Since: 1207
     */
    function saveHighQualityPhoto(unused: number): boolean;
    /**
     * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
     * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
     *
     * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
     *
     * Hash: 0xB2797619A7C7747B | Since: 1207
     */
    function setArtificialLightsState(state: boolean): void;
    /**
     * Sets the checkpoint color.
     *
     * Hash: 0xCAAFC225E33B1D15 | Since: 1207
     */
    function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Sets the checkpoint icon color.
     *
     * Hash: 0x99AFF17222D4DEB4 | Since: 1207
     */
    function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x53ED07BF368EDA59 | Since: 1232
     */
    function setDisablePetrolDecalsIgnitingThisFrame(): void;
    /**
     * Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
     *
     * Hash: 0x27219300C36A8D40 | Since: 1207
     */
    function setGrassCullSphere(pos: Vector3): number;
    /**
     * Old name: _SET_HIDOF_ENV_BLUR_PARAMS
     *
     * Hash: 0xCC23AA1A7CBFE840 | Since: 1207
     */
    function setHidofOverride(): void;
    /**
     * Related to Campfires.
     * p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
     *
     * Hash: 0x3C61B52B00848C26 | Since: 1207
     */
    function setParticleFxAmbientColour(entity: number | Entity, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DCCC98DC0DBF9E4 | Since: 1207
     */
    function setParticleFxBulletImpactLodrangeScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA53C8D7D0F8C74D0 | Since: 1207
     */
    function setParticleFxBulletImpactScale(scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A1625858887D4E6 | Since: 1207
     */
    function setParticleFxFootLodrangeScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x88786E76234F7054 | Since: 1207
     */
    function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x239879FC61C610CC | Since: 1207
     */
    function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3674F389B0FACD80 | Since: 1207
     */
    function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B04D471DA0AD7AA | Since: 1207
     */
    function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3A4A95FC94FE83B | Since: 1207
     */
    function setParticleFxLoopedOffsets(ptfxHandle: number, pos: Vector3, rot: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A9E1C0D98D093B7 | Since: 1207
     */
    function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8A35938A7026CEA | Since: 1311
     */
    function setParticleFxNonLoopedAlpha(alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x60B85BED6577A35B | Since: 1207
     */
    function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE711A169E9C7E95 | Since: 1207
     */
    function setParticleFxOverride(oldAsset: string, newAsset: string): void;
    /**
     * https://imgur.com/a/I2swSDJ
     *
     * Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
     *
     * Hash: 0x7DFB49BCDB73089A | Since: 1207
     */
    function setPickupLight(object: number | Object, toggle: boolean): void;
    /**
     * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
     *
     * Hash: 0x906B86E6D7896B9E | Since: 1207
     */
    function setScriptGfxDrawBehindPausemenu(toggle: boolean): void;
    /**
     * Sets the draw order for script draw commands.
     *
     * Hash: 0xCFCC78391C8B3814 | Since: 1207
     */
    function setScriptGfxDrawOrder(drawOrder: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
     *
     * Hash: 0xFA08722A5EA82DA7 | Since: 1207
     */
    function setTimecycleModifier(modifierName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDB74C9CC54C3F37 | Since: 1207
     */
    function setTimecycleModifierStrength(strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6FDA3D4404D4F2C | Since: 1207
     */
    function setTrackedPointInfo(point: number, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB6C707F20D955D4 | Since: 1207
     */
    function setTransitionOutOfTimecycleModifier(strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF927A09F481D80C | Since: 1207
     */
    function setTransitionTimecycleModifier(modifierName: string, transitionBlend: number): void;
    /**
     * Probably changes tvs from being a 3d audio to being "global" audio
     *
     * Hash: 0x64437C98FCC5F291 | Since: 1207
     */
    function setTvAudioFrontend(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x593FAF7FC9401A56 | Since: 1207
     */
    function setTvChannel(channel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEC6B25F5DC8925B | Since: 1207
     */
    function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x73A97068787D7231 | Since: 1207
     */
    function setTvVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F90AB32E1944BDE | Since: 1207
     */
    function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x9C56621462FFE7A6 | Since: 1207
     */
    function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xFB97618457994A62 | Since: 1207
     */
    function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE6CFE43937061143 | Since: 1207
     */
    function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
     *
     * Hash: 0xBA32867E86125D3A | Since: 1207
     */
    function startParticleFxLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xBD41E1440CE39800 | Since: 1207
     */
    function startParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xD3BA6EC7F2FBD5E9 | Since: 1207
     */
    function startParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xE689C1B1432BB8AF | Since: 1207
     */
    function startParticleFxLoopedOnPedBone(effectName: string, ped: number | Ped, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
     *
     * Hash: 0x2E80BF72EF7C87AC | Since: 1207
     */
    function startParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, eventType: number, bPeekOnly: boolean, bIsRegistered: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF4C64C513388C12 | Since: 1207
     */
    function startParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FAA72BD940C3AC0 | Since: 1207
     */
    function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x46F246D6504F0031 | Since: 1207
     */
    function startPetrolTrailDecals(): void;
    /**
     * No comment provided
     *
     * Hash: 0x22970F3A088B133B | Since: 1207
     */
    function stopParticleFxLooped(ptfxHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF9E1C45732F55FA | Since: 1207
     */
    function togglePausedRenderphases(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDBACB52A03CC760 | Since: 1207
     */
    function updateLightsOnEntity(entity: number | Entity): void;
    /**
     * fxName: see data_0/data/effects/ptfx/fxlists/
     *
     * Hash: 0xA10DB07FC234DD12 | Since: 1207
     */
    function useParticleFxAsset(fxName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x085C5B61A0114F32 | Since: 1207
     */
    function _0x085C5B61A0114F32(): void;
    /**
     * Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
     *
     * Hash: 0x0D5B19C34068FEE7 | Since: 1311
     */
    function _0x0D5B19C34068FEE7(): void;
    /**
     * _RESET_*
     *
     * Hash: 0x1460B644397453EB | Since: 1207
     */
    function _0x1460B644397453EB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x171C18E994C1A395 | Since: 1207
     */
    function _0x171C18E994C1A395(): void;
    /**
     * Used in shop scripts for CATALOG_BOOK
     * false = Normal -> [CATALOG_BOOK_SHUTDOWN]
     * true = Trees flickering? -> [CATALOG_BOOK_OPEN]
     *
     * Hash: 0x1A9F09AB458D49C6 | Since: 1207
     */
    function _0x1A9F09AB458D49C6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C6306E5BC25C29C | Since: 1207
     */
    function _0x1C6306E5BC25C29C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FF8731BE1DFC0C0 | Since: 1207
     */
    function _0x1FF8731BE1DFC0C0(): void;
    /**
     * Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
     * Triggers the binocular scaleform
     *
     * Hash: 0x21F00E08CBB5F37B | Since: 1207
     */
    function _0x21F00E08CBB5F37B(component: string): void;
    /**
     * effectName2, p2 and p3 are unused
     *
     * ANIMPOSTFX_*
     *
     * Hash: 0x26DD2FB0A88CC412 | Since: 1207
     */
    function _0x26DD2FB0A88CC412(effectName: string, effectName2: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x285438C26C732F9D | Since: 1207
     */
    function _0x285438C26C732F9D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x32DE2BFFDA43E62A | Since: 1207
     */
    function _0x32DE2BFFDA43E62A(): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0x38D9D50F2085E9B3 | Since: 1207
     */
    function _0x38D9D50F2085E9B3(effectNameHash: number | string): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0x3DA7A10583A4BEC0 | Since: 1207
     */
    function _0x3DA7A10583A4BEC0(): boolean;
    /**
     * Only used in R* SP Script spd_agnesdown1
     *
     * Hash: 0x402E1A61D2587FCD | Since: 1207
     */
    function _0x402E1A61D2587FCD(pos: Vector3, heading: number): boolean;
    /**
     * _DISABLE_*
     *
     * Hash: 0x4046493D2EEACA0E | Since: 1207
     */
    function _0x4046493D2EEACA0E(): void;
    /**
     * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
     *
     * Hash: 0x41F88A85A579A61D | Since: 1207
     */
    function _0x41F88A85A579A61D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x453D16D41FC51D3E | Since: 1207
     */
    function _0x453D16D41FC51D3E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x48FE0DB54045B975 | Since: 1311
     */
    function _0x48FE0DB54045B975(): void;
    /**
     * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
     *
     * Hash: 0x4BD66B4E3427689B | Since: 1207
     */
    function _0x4BD66B4E3427689B(): void;
    /**
     * p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
     * p2: EMIT
     * p3: either 0.0f or 1.0f
     *
     * Hash: 0x4FB67D172C4476F3 | Since: 1207
     */
    function _0x4FB67D172C4476F3(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x503941F65DBA24EC | Since: 1207
     */
    function _0x503941F65DBA24EC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x519928DF02EB5101 | Since: 1355
     */
    function _0x519928DF02EB5101(): void;
    /**
     * Closes the the binocular scaleform
     *
     * Hash: 0x5AC6E0FA028369DE | Since: 1207
     */
    function _0x5AC6E0FA028369DE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C674EB487891F6B | Since: 1207
     */
    function _0x5C674EB487891F6B(): any;
    /**
     * Only used in R* SP Script spd_agnesdown1
     *
     * Hash: 0x5C9C3A466B3296A8 | Since: 1207
     */
    function _0x5C9C3A466B3296A8(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5CD6A2CCE5087161 | Since: 1311
     */
    function setPhotoModeExposureLocked(lock: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x62B9F9A1272AED80 | Since: 1207
     */
    function changePhotoModeContrast(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x67B0778C62E74423 | Since: 1207
     */
    function _0x67B0778C62E74423(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C03118E9E5C1A14 | Since: 1207
     */
    function _0x6C03118E9E5C1A14(): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0x71845905BCCDE781 | Since: 1207
     */
    function _0x71845905BCCDE781(effectNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x735762E8D7573E42 | Since: 1207
     */
    function _0x735762E8D7573E42(): void;
    /**
     * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
     * _ENABLE_*
     *
     * Hash: 0x812C1563185C6FB2 | Since: 1207
     */
    function _0x812C1563185C6FB2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x815653A42C5ABE76 | Since: 1207
     */
    function _0x815653A42C5ABE76(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8996FA6AD9FE4E90 | Since: 1207
     */
    function _0x8996FA6AD9FE4E90(): void;
    /**
     * No comment provided
     *
     * Hash: 0x910E260AEAD855DE | Since: 1207
     */
    function _0x910E260AEAD855DE(): void;
    /**
     * Resets the exposure to the value when exposure lock was enabled
     *
     * Hash: 0x9229ED770975BD9E | Since: 1311
     */
    function updatePhotoModeExposure(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x94B261F1F35293E1 | Since: 1207
     */
    function _0x94B261F1F35293E1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x981C7D863980FA51 | Since: 1207
     */
    function _0x981C7D863980FA51(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D1B0B5066205692 | Since: 1207
     */
    function _0x9D1B0B5066205692(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F158A49B0D84C3C | Since: 1207
     */
    function _0x9F158A49B0D84C3C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F6D859C80708B26 | Since: 1311
     */
    function _0x9F6D859C80708B26(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA04EF43030593ABC | Since: 1207
     */
    function _0xA04EF43030593ABC(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA0F4D12D6042F6D5 | Since: 1207
     */
    function _0xA0F4D12D6042F6D5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA15CCAB8AD038291 | Since: 1207
     */
    function _0xA15CCAB8AD038291(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA1A86055792FB249 | Since: 1207
     */
    function _0xA1A86055792FB249(personaPhotoLocalCacheType: number): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0xA201A3D0AC087C37 | Since: 1207
     */
    function _0xA201A3D0AC087C37(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA21AF60C9F99CCC5 | Since: 1207
     */
    function _0xA21AF60C9F99CCC5(): void;
    /**
     * _SET_D* or _SET_E*
     *
     * Hash: 0xB032C085D9A03907 | Since: 1207
     */
    function _0xB032C085D9A03907(): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0xB958D97A0DFAA0C2 | Since: 1207
     */
    function _0xB958D97A0DFAA0C2(effectName: string): boolean;
    /**
     * Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
     *
     * Hash: 0xC06F2F45A73EABCD | Since: 1311
     */
    function _0xC06F2F45A73EABCD(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xC28F62AC9774FC1B | Since: 1207
     */
    function _0xC28F62AC9774FC1B(): any;
    /**
     * Doesn't actually return anything.
     *
     * ANIMPOSTFX_*
     *
     * Hash: 0xC37792A3F9C90771 | Since: 1207
     */
    function _0xC37792A3F9C90771(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC489FE31AC726512 | Since: 1207
     */
    function _0xC489FE31AC726512(): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0xC76FC4C2FC5F4405 | Since: 1207
     */
    function _0xC76FC4C2FC5F4405(effectNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8D0611D9A0CF5D3 | Since: 1207
     */
    function changePhotoModeExposure(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC3B787E73E64160 | Since: 1207
     */
    function _0xCC3B787E73E64160(): void;
    /**
     * Only used in R* Script nb_stalking_hunter
     *
     * Hash: 0xD1472AFF30C103D6 | Since: 1311
     */
    function _0xD1472AFF30C103D6(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD543487A1F12828F | Since: 1207
     */
    function _0xD543487A1F12828F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9BC98B55BCFAA9B | Since: 1207
     */
    function _0xD9BC98B55BCFAA9B(): void;
    /**
     * Returns iNumPixels, iPixelsVisible
     *
     * Hash: 0xDFE332A5DA6FE7C9 | Since: 1207
     */
    function _0xDFE332A5DA6FE7C9(iTrackedPoint: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE63D68F455CA0B47 | Since: 1207
     */
    function _0xE63D68F455CA0B47(): any;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0xE75CDDEBF618C8FF | Since: 1207
     */
    function _0xE75CDDEBF618C8FF(effectNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEB48CE48EEC41FD4 | Since: 1207
     */
    function _0xEB48CE48EEC41FD4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC3D8C228FE553D7 | Since: 1207
     */
    function _0xEC3D8C228FE553D7(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC3F7F24EEEB3BA3 | Since: 1207
     */
    function _0xEC3F7F24EEEB3BA3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2F543D48F319A3A | Since: 1207
     */
    function _0xF2F543D48F319A3A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5793BB386E1FF9C | Since: 1207
     */
    function _0xF5793BB386E1FF9C(): void;
    /**
     * _DISABLE_*
     *
     * Hash: 0xFB680A9B33D0EDBE | Since: 1207
     */
    function _0xFB680A9B33D0EDBE(): void;
    /**
     * ANIMPOSTFX_*
     *
     * Hash: 0xFBF161FCFEC8589E | Since: 1207
     */
    function _0xFBF161FCFEC8589E(effectName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC9B53C072F418E0 | Since: 1207
     */
    function _0xFC9B53C072F418E0(): any;
    /**
     * R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
     *
     * Hash: 0xFD05B1DDE83749FA | Since: 1207
     */
    function _0xFD05B1DDE83749FA(): boolean;
    /**
     * Returns whether the 'killFX' setting is enabled.
     *
     * ANIMPOSTFX_*
     *
     * Hash: 0xFF584F097C17FA8F | Since: 1207
     */
    function _0xFF584F097C17FA8F(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF8018C778349234 | Since: 1207
     */
    function _0xFF8018C778349234(): void;
    /**
     * https://i.imgur.com/ULQU9US.jpg
     * More rounded and small puddle
     *
     * Hash: 0xFA2ECC78A6014D4F | Since: 1207
     */
    function addBloodPool(pos: Vector3, unused: boolean): void;
    /**
     * Creates blood pools for the given ped in some interval for a few seconds.
     *
     * Hash: 0xDFCE8CE9F3EBE93F | Since: 1207
     */
    function addBloodPoolsForPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC349EE1E6EFA494B | Since: 1207
     */
    function addBloodPoolsForPedWithParams(ped: number | Ped, size: number): void;
    /**
     * https://i.imgur.com/rPITUCV.jpg
     * More customizable and more like quadrants
     *
     * Hash: 0xF708298675ABDC6A | Since: 1207
     */
    function addBloodPool2(pos: Vector3, size: number, permanent: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD9DC1AB63D513CE | Since: 1207
     */
    function addBloodTrailPoint(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5E45CB1CF965D2D | Since: 1207
     */
    function addBloodTrailSplat(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6F81FCD15350323 | Since: 1207
     */
    function addEntityToEntityMask(entity: number | Entity, mask: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x958DEBD9353C0935 | Since: 1207
     */
    function addEntityToEntityMaskWithIntensity(entity: number | Entity, mask: number, intensity: number): void;
    /**
     * Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
     * Returns veg modifier handle
     *
     * Hash: 0xBD3324281E8B9933 | Since: 1207
     */
    function addVegModifierZone(volume: number, flags: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC5CB91D65852ED7E | Since: 1207
     */
    function animpostfxClearEffect(effectName: string): void;
    /**
     * Known effects: MP_Trans_SceneToPhoto
     * MP_Trans_WinLose
     * SpectateFilter
     * MP_CharacterCreatorPhoto
     * MP_Trans_PhotoToScene
     * InterrogationHit
     *
     * Hash: 0x842CCC9491FFCD9B | Since: 1207
     */
    function animpostfxGetStackhash(effectName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xBF2DD155B2ADCD0A | Since: 1207
     */
    function animpostfxHasLoaded(effectName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEEF83A759AE06A27 | Since: 1207
     */
    function animpostfxIsStackhashPlaying(effectNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2D4F9C852CE8A253 | Since: 1207
     */
    function animpostfxIsTagPlaying(effectName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9B8D5D4CB8AF58B3 | Since: 1207
     */
    function animpostfxPlayTag(effectNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A9A281FF71249E9 | Since: 1207
     */
    function animpostfxPlayTimed(effectName: string, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5199405EABFBD7F0 | Since: 1207
     */
    function animpostfxPreloadPostfx(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3E039322BFBD4D8 | Since: 1207
     */
    function animpostfxPreloadPostfxByStackhash(effectNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x63011D0C7C6519E0 | Since: 1311
     */
    function animpostfxSetPostfxColor(effectName: string, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Health Core Effect Filter Potency: p1 = 1
     * Stamina Core Effect Filter Potency: p1 = 2
     * Multiple Core Effect Filter Potency: p1 = 3
     *
     * Hash: 0xF972F0AB16DC5260 | Since: 1207
     */
    function animpostfxSetPotency(effectName: string, potency: number): void;
    /**
     * must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
     *
     * Hash: 0xCAB4DD2D5B2B7246 | Since: 1207
     */
    function animpostfxSetStrength(effectName: string, strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x37D7BDBA89F13959 | Since: 1207
     */
    function animpostfxSetToUnload(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEDA5CBECF56E1386 | Since: 1207
     */
    function animpostfxStopStackhashPostfx(effectNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD74C22A541AB987 | Since: 1207
     */
    function animpostfxStopTag(effectName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x50C14328119E1DD1 | Since: 1207
     */
    function blockPickupObjectLight(pickupObject: number | Object, toggle: boolean): void;
    /**
     * p1: 0.3f in R* Scripts
     *
     * Hash: 0xB9C92616929CC25D | Since: 1207
     */
    function bloodTrailForWaypoint(waypointRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D084D5568FB4028 | Since: 1207
     */
    function createSwatchTextureDict(slots: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDAD7FB8402651654 | Since: 1207
     */
    function destroySwatchTextureDict(): void;
    /**
     * Only used in guama1 R* Script
     * Disables lod/distant lights when BOOL is set to true
     *
     * Hash: 0xCD284E2F6AC27EE9 | Since: 1207
     */
    function disableFarArtificialLights(disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD0BC0EDCB2162F6 | Since: 1207
     */
    function disableStaticVegModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C11CCACB7C02B6E | Since: 1207
     */
    function doesCheckpointHaveFx(checkpoint: number): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
     * Old name: _DRAW_MARKER
     *
     * Hash: 0x2A32FAA57B937173 | Since: 1207
     */
    function drawMarker(type: number | string, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFEA23EC90113657 | Since: 1207
     */
    function enableStaticVegModifier(): void;
    /**
     * Example:
     * local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
     * _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
     * metapedType: see 0xEC9A1261BF0CE510
     *
     * Hash: 0x160921255327C591 | Since: 1207
     */
    function generateSwatchTexture(slotId: number, componentHash: number | string, metapedType: number): void;
    /**
     * Example: https://pastebin.com/tTgpER9A
     *
     * Hash: 0x646ED1A1D28487DF | Since: 1207
     */
    function generateSwatchTextureDirectly(slot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x78C56B8A7B1D000C | Since: 1207
     */
    function getCurrentNumberOfLocalPhotos(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE8A8378BF651079C | Since: 1207
     */
    function getEntityMaskLayers(entity: number | Entity, layer0: number, layer1: number, layer2: number, layer3: number): boolean;
    /**
     * Always returns 200.
     *
     * Hash: 0x8E587FCD30E05592 | Since: 1207
     */
    function getMaxNumberOfLocalPhotos(): number;
    /**
     * _GET_C* - _GET_E*
     *
     * Hash: 0x25CA89B2A39DCC69 | Since: 1207
     */
    function getModifiedVisibilityDistance(): number;
    /**
     * No comment provided
     *
     * Hash: 0x98F4154989B81EC6 | Since: 1207
     */
    function getPhotoModeContrast(): number;
    /**
     * No comment provided
     *
     * Hash: 0x06C0D8BB6B04A709 | Since: 1207
     */
    function getPhotoModeExposure(): number;
    /**
     * Returns proxyInteriorIndex
     *
     * Hash: 0x5D1C5D8E62E8EE1C | Since: 1207
     */
    function getProxyInteriorIndex(interiorId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x113857D66A9CABE6 | Since: 1207
     */
    function isProxyInteriorIndexArtificialLightsEnabled(proxyInteriorIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE9BAD3292AA6D5E | Since: 1207
     */
    function isStaticVegModifierEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA2A51869BDED733B | Since: 1207
     */
    function isTextureInDict(txdHash: number | string, dict: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF2FDDCC8C6BAE1B3 | Since: 1207
     */
    function isTrackedPointValid(point: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC2B8164C3BE871A4 | Since: 1207
     */
    function pedshotFinishCleanupData(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9C24F53631F2372 | Since: 1207
     */
    function pedshotGeneratePersonaPhoto(texture: string, ped: number | Ped, playerSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x55285F885F662169 | Since: 1207
     */
    function pedshotInitCleanupData(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E2FDDBE435A8787 | Since: 1207
     */
    function pedshotPreviousPersonaPhotoDataCleanup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x196D3ACBEBA4A44B | Since: 1207
     */
    function pedshotSetPersonaPhotoType(personaPhotoLocalCacheType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56A786E87FF53478 | Since: 1207
     */
    function removeEntityFromEntityMask(entity: number | Entity): void;
    /**
     * Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
     *
     * Hash: 0xAF4D239B8903FCBE | Since: 1207
     */
    function resetEntityAura(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC332C91388F5580B | Since: 1207
     */
    function setCloudHeight(height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8C984C0D47F4F07 | Since: 1207
     */
    function setCloudLayer(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE7966DF01452F32 | Since: 1207
     */
    function setCloudNoise(pos: Vector3): void;
    /**
     * Only used in finale2, smuggler2, winter4
     * _SET_CLOUD_A* - _SET_CLOUD_H*
     *
     * Hash: 0x10C1767B93257480 | Since: 1207
     */
    function setCloudPosition(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x9937FACBBF267244 | Since: 1207
     */
    function setDistrictPhotoTakenStat(): void;
    /**
     * Used for script function RPG_GLOBAL_STATS__PRIVATE__ACTIVATE_STAT_FLAG - Quite and Inspiration Aura equip
     * Params: 0f, 2f, 2f
     *
     * Hash: 0x249CD6B7285536F2 | Since: 1207
     */
    function setEntityAura(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE92012611461A42A | Since: 1207
     */
    function setEntityMaskLayers(entity: number | Entity, layer0: number, layer1: number, layer2: number, layer3: number): void;
    /**
     * Only used in guama1 R* SP Script while spawning the ship
     * _SET_ENTITY_QUATERNION_* - SET_ENTITY_RENDER_*
     *
     * Hash: 0xC38B4952B728397A | Since: 1207
     */
    function setEntityRenderGuarmaShip(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * https://gfycat.com/meagerfaireyra
     *
     * Hash: 0x6EC2A67962296F49 | Since: 1207
     */
    function setLightsColorForEntity(entity: number | Entity, red: number, green: number, blue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x07C0F87AAC57F2E4 | Since: 1207
     */
    function setLightsIntensityForEntity(entity: number | Entity, intensity: number): void;
    /**
     * type must be less than or equal to 20
     *
     * Hash: 0xAB72C67163DC4DB4 | Since: 1207
     */
    function setLightsTypeForEntity(entity: number | Entity, type: number): void;
    /**
     * _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
     *
     * Hash: 0x9DDC222D85D5AF2A | Since: 1207
     */
    function setParticleFxLoopedUpdateDistantSmoke(ptfxHandle: number, scalar: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56C392C2BD78B024 | Since: 1311
     */
    function setParticleFxNonLoopedEmitterScale(): void;
    /**
     * Enables/disables a kind of 'shiny' effect on metals.
     *
     * Hash: 0x72E30372E7CC4415 | Since: 1207
     */
    function setPearlescentFxEnabled(object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA91736933AB3D93 | Since: 1207
     */
    function setPhotoInPhotomodeStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B3296278328B5EB | Since: 1207
     */
    function setPhotoOverlayEffectStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2705D18C11B61046 | Since: 1207
     */
    function setPhotoSelfStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E6AFF353C09652E | Since: 1207
     */
    function setPhotoStudioStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x75D568607909333E | Since: 1232
     */
    function setPlayerAppearInPhoto(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x564837D4A9EDE296 | Since: 1207
     */
    function setPosseIdForPhoto(posseId: any): void;
    /**
     * state: false disables artificial interior light sources for specific proxyInteriorIndex
     *
     * Hash: 0xBFCB17895BB99E4E | Since: 1207
     */
    function setProxyInteriorIndexArtificialLightsState(proxyInteriorIndex: number, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1031B83AC093BC7 | Since: 1207
     */
    function setRegionPhotoTakenStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E8EB45A4F4460EB | Since: 1207
     */
    function setSniperGlintsEnabled(enabled: boolean): void;
    /**
     * enum class eSnowCoverageType
     * {
     * Primary,
     * Secondary,
     * Xmas,
     * XmasSecondary // since b1232
     * };
     *
     * Hash: 0xF02A9C330BBFC5C7 | Since: 1207
     */
    function setSnowCoverageType(type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8952E857696B8A79 | Since: 1207
     */
    function setStatePhotoTakenStat(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC695870B8A149B96 | Since: 1207
     */
    function startParticleFxNonLoopedOnPedBone2(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
}
export declare namespace hud {
    /**
     * Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
     *
     * Hash: 0x30996422DF1EE561 | Since: 1207
     */
    function allowPauseWhenNotInStateOfPlayThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x823BF7B1DF613A21 | Since: 1207
     */
    function busyspinnerIsOn(): boolean;
    /**
     * Removes the loading prompt at the bottom right of the screen.
     *
     * Hash: 0x58F441B90EA84D06 | Since: 1207
     */
    function busyspinnerOff(): void;
    /**
     * No comment provided
     *
     * Hash: 0x916ED8321F087059 | Since: 1207
     */
    function clearAllHelpMessages(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53CB4B502E1C57EA | Since: 1207
     */
    function createFakeMpGamerTag(ped: number | Ped, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x56CE42A528156A67 | Since: 1207
     */
    function disableFrontendThisFrame(): void;
    /**
     * If Hud should be displayed
     *
     * Hash: 0xD63FE3AF9FB3D53F | Since: 1207
     */
    function displayHud(toggle: boolean): void;
    /**
     * Checks if the passed gxt name exists in the game files.
     *
     * Hash: 0x73C258C68D6F55B6 | Since: 1207
     */
    function doesTextLabelExist(label: string): boolean;
    /**
     * Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
     * Old name: _GET_TEXT_SUBSTRING
     *
     * Hash: 0x9D7E12EC6A1EE4E5 | Since: 1207
     */
    function getCharacterFromAudioConversationFilename(text: string, position: number, length: number): string;
    /**
     * Gets a string literal from a label name.
     *
     * Old name: _GET_LABEL_TEXT
     *
     * Hash: 0xCFEDCCAD3C5BA90D | Since: 1207
     */
    function getFilenameForAudioConversation(labelName: string): string;
    /**
     * No comment provided
     *
     * Hash: 0xB39C81628EF10B42 | Since: 1207
     */
    function getHudScreenPositionFromWorldPosition(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): number;
    /**
     * Returns the length of the string passed (much like strlen).
     *
     * Hash: 0x481FBF588B0B76DB | Since: 1207
     */
    function getLengthOfLiteralString(string: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDC5AD6B7AB8184F5 | Since: 1207
     */
    function getLengthOfLiteralStringInBytes(string: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xB6762A85EE29AA60 | Since: 1207
     */
    function getNamedRendertargetRenderId(name: string): number;
    /**
     * Returns the label text given the hash.
     *
     * Old name: _GET_LABEL_TEXT_BY_HASH
     *
     * Hash: 0xBD5DD5EAE2B6CE14 | Since: 1207
     */
    function getStringFromHashKey(labelHash: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x36CDD81627A6FCD2 | Since: 1207
     */
    function hideHudAndRadarThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA600AABAF4B9084 | Since: 1207
     */
    function hideLoadingOnFadeThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x71B72B478F8189DC | Since: 1207
     */
    function isHudHidden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E1C31E14C7A5F97 | Since: 1207
     */
    function isMpGamerTagActive(gamerTagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x707032835FF09AE7 | Since: 1207
     */
    function isNamedRendertargetLinked(modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3EE32F7964C40FE6 | Since: 1207
     */
    function isNamedRendertargetRegistered(name: string): boolean;
    /**
     * Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
     *
     * Hash: 0x535384D6067BA42E | Since: 1207
     */
    function isPauseMenuActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1B82FD5FFA4D666E | Since: 1207
     */
    function isRadarHidden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x66F35DD9D2B58579 | Since: 1207
     */
    function isRadarHiddenByScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x81E47F0EE1F2B21E | Since: 1207
     */
    function isRadarPreferenceSwitchedOn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7C4AC9573587F2DF | Since: 1355
     */
    function isSubtitlePreferenceSwitchedOn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F506B8556242DDB | Since: 1207
     */
    function linkNamedRendertarget(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x98AF2BB6F62BD588 | Since: 1207
     */
    function registerNamedRendertarget(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E692EE61761361F | Since: 1207
     */
    function releaseNamedRendertarget(name: string): boolean;
    /**
     * only works by invoking and passing as pointer value Citizen.InvokeNative(0x839BFD7D7E49FE09, Citizen.PointerValueIntInitialized(gamerTagId))
     *
     * Hash: 0x839BFD7D7E49FE09 | Since: 1207
     */
    function removeMpGamerTag(gamerTagId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE47C21C0687EBC2 | Since: 1207
     */
    function setFrontendActive(active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x402669A4BDAA72DA | Since: 1207
     */
    function setMissionName(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD98630CE73C61E98 | Since: 1207
     */
    function setMissionNameForUgcMission(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA0D7CE5F83259663 | Since: 1207
     */
    function setMpGamerTagBigText(gamerTagId: number, string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA6F4B8D4B4B5B3E | Since: 1207
     */
    function setMpGamerTagName(gamerTagId: number, string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE550CDE128D56757 | Since: 1207
     */
    function setTextRenderId(renderId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0976CC34002DB57 | Since: 1207
     */
    function textBlockIsLoaded(textBlock: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF66090013DE648D5 | Since: 1207
     */
    function textBlockRequest(textBlock: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE1067CD1C9570F6 | Since: 1207
     */
    function uiGetSceneUiobject(): any;
    /**
     * No comment provided
     *
     * Hash: 0x51DE09A2196BD951 | Since: 1207
     */
    function uiMovieviewSetRenderTarget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BE19185B8AFE299 | Since: 1207
     */
    function uiPromptIsControlActionActive(controlAction: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB6857100F8FD433C | Since: 1207
     */
    function uiRequestScene(): any;
    /**
     * This native accepts 1 as parameter in the decompiles
     * returns the nearest horse handle if within 2 3 meters of the player, if not close enough returns false
     *
     * NOTE: if type is 0 returns PlayerPedId always?
     *
     * Hash: 0x0501D52D24EA8934 | Since: 1207
     */
    function getNearHorse(): number;
    /**
     * No comment provided
     *
     * Hash: 0x052D4AC0922AF91A | Since: 1207
     */
    function _0x052D4AC0922AF91A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x066725A9D52B3641 | Since: 1232
     */
    function _0x066725A9D52B3641(): any;
    /**
     * No comment provided
     *
     * Hash: 0x100157D6D7FE32CA | Since: 1207
     */
    function _0x100157D6D7FE32CA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x160825DADF1B04B3 | Since: 1207
     */
    function _0x160825DADF1B04B3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x28AE29D909C8FDCE | Since: 1207
     */
    function _0x28AE29D909C8FDCE(): any;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x2F7BB105144ACF30 | Since: 1207
     */
    function _0x2F7BB105144ACF30(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FE4FB41EF7D2196 | Since: 1207
     */
    function _0x3FE4FB41EF7D2196(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53CE46C01A089DA1 | Since: 1207
     */
    function _0x53CE46C01A089DA1(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x5651516D947ABC53 | Since: 1207
     */
    function _0x5651516D947ABC53(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EC0D68233E391AC | Since: 1207
     */
    function _0x7EC0D68233E391AC(): number;
    /**
     * No comment provided
     *
     * Hash: 0x806862E5D266CF38 | Since: 1207
     */
    function _0x806862E5D266CF38(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8A59D44189AF2BC5 | Since: 1207
     */
    function _0x8A59D44189AF2BC5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B55B324A9123F6B | Since: 1232
     */
    function _0x8B55B324A9123F6B(groupId: number, volume: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x958278B97C4AFFD8 | Since: 1232
     */
    function _0x958278B97C4AFFD8(): void;
    /**
     * Returns the hash of the currently highlighted item in the weapon wheel.
     * Only works while the wheel is open will return false
     *
     * Use in conjunction with IS_CONTROL_JUST_RELEASED(0, 'INPUT_OPEN_WHEEL_MENU') to detect item selection/usage.
     *
     * Hash: 0x9C409BBC492CB5B1 | Since: 1207
     */
    function hudWeaponWheelGetSelectedItemHash(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9D37EB5003E0F2CF | Since: 1207
     */
    function _0x9D37EB5003E0F2CF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0E8599243B3F568 | Since: 1207
     */
    function _0xB0E8599243B3F568(): any;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xBFFF81E12A745A5F | Since: 1207
     */
    function _0xBFFF81E12A745A5F(): void;
    /**
     * string1 is the only string used in the scripts, the others are null (0)
     *
     * Hash: 0xCE0D2F5586627CCE | Since: 1207
     */
    function setCurrentUgcMissionDescription(active: boolean, string1: string, string2: string, string3: string, string4: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6BD313CFA41E57A | Since: 1207
     */
    function _0xD6BD313CFA41E57A(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF1E6979C0B779985 | Since: 1207
     */
    function _0xF1E6979C0B779985(uiscene: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F78CD75CC4539E4 | Since: 1207
     */
    function busyspinnerSetText(text: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD877AF112AD2B41B | Since: 1207
     */
    function createMpGamerTag(player: number | string | Player, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE961BF23EAB76B12 | Since: 1207
     */
    function createMpGamerTagOnEntity(entity: number | Entity, text: string): number;
    /**
     * Old name: _DISPLAY_HUD_COMPONENT
     *
     * Hash: 0x8BC7C1F929D07BF3 | Since: 1207
     */
    function disableHudContext(component: number | string): void;
    /**
     * Disables reduced time scale while menus such as weapon wheel and satchel are open.
     *
     * Hash: 0xC5C7A2F6567FCCBC | Since: 1207
     */
    function disableReducedMenuTimeScale(): void;
    /**
     * nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
     *
     * Hash: 0xD79334A4BB99BAD1 | Since: 1207
     */
    function displayText(text: string, xPos: number, yPos: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C729F2B94CEA911 | Since: 1207
     */
    function doesTextBlockExist(textDatabase: string): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
     * Old name: _HIDE_HUD_COMPONENT
     *
     * Hash: 0x4CC5F2FC1332577F | Since: 1207
     */
    function enableHudContext(component: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9CAEAEEC1256E54 | Since: 1207
     */
    function enableHudContextThisFrame(component: number | string): void;
    /**
     * Enables reduced time scale while menus such as weapon wheel and satchel are open.
     *
     * Hash: 0x26F6BBEA2CE3E3DC | Since: 1207
     */
    function enableReducedMenuTimeScale(): void;
    /**
     * colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
     *
     * Hash: 0xB981DD2DFAF9B1C9 | Since: 1207
     */
    function getColorFromName(colorNameHash: number | string, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3429670F9B9EF2D3 | Since: 1207
     */
    function getLabelText2(label: string): string;
    /**
     * Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
     *
     * Hash: 0xD8402B858F4DDD88 | Since: 1207
     */
    function getTextSubstring2(text: string, length: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xBF4F34A85CA2970D | Since: 1207
     */
    function hideHudThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x502E1591A504F843 | Since: 1207
     */
    function isMpGamerTagActiveOnEntity(gamerTagId: number, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF782691D91F270E | Since: 1207
     */
    function journalCanWriteEntry(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF402978DE6F88D6E | Since: 1207
     */
    function journalClearAllProgress(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D16ABD7A1FD8C96 | Since: 1207
     */
    function journalGetEntryAtIndex(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE65B5DE53351BE22 | Since: 1207
     */
    function journalGetEntryCount(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5514C3E60673530F | Since: 1207
     */
    function journalGetEntryInfo(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCB5945E1B855852F | Since: 1207
     */
    function journalGetGrimeAtIndex(): any;
    /**
     * No comment provided
     *
     * Hash: 0x62CC549B3B8EA2AA | Since: 1207
     */
    function journalGetTextureWithLayout(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE4509BABE59BD24E | Since: 1207
     */
    function journalMarkRead(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DFDD665E416B093 | Since: 1207
     */
    function journalWriteEntry(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F9A64C2804B3471 | Since: 1207
     */
    function mpGamerTagDisableReviveTopIcon(gamerTagId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFF6579CF0139FCE | Since: 1207
     */
    function mpGamerTagEnableReviveTopIcon(gamerTagId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84BD27DDF9575816 | Since: 1207
     */
    function setMpGamerTagColour(gamerTagId: number, colour: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1EA716E0628A6F44 | Since: 1207
     */
    function setMpGamerTagNamePosse(gamerTagId: number, text: string): void;
    /**
     * Found icons: SPEAKER, THROPY
     *
     * Hash: 0x95384C6CE1526EFF | Since: 1207
     */
    function setMpGamerTagSecondaryIcon(gamerTagId: number, icon: number | string): void;
    /**
     * Found icons: https://pastebin.com/xx6rEgiG
     *
     * Hash: 0x5F57522BC1EB9D9D | Since: 1207
     */
    function setMpGamerTagTopIcon(gamerTagId: number, icon: number | string): void;
    /**
     * Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
     *
     * Hash: 0x25B9C78A25105C35 | Since: 1207
     */
    function setMpGamerTagType(gamerTagId: number, type: number | string): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xEF7AB1A0E8C86170 | Since: 1207
     */
    function setMpGamerTagUnkAllowLocalized(gamerTagId: number, allow: boolean): void;
    /**
     * visibility:
     * enum eUIGamertagVisibility
     * {
     * UIGAMERTAGVISIBILITY_NONE,
     * UIGAMERTAGVISIBILITY_ICON,
     * UIGAMERTAGVISIBILITY_SIMPLE,
     * UIGAMERTAGVISIBILITY_COMPLEX
     * };
     *
     * Hash: 0x93171DDDAB274EB8 | Since: 1207
     */
    function setMpGamerTagVisibility(gamerTagId: number, visibility: number): void;
    /**
     * This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
     *
     * Hash: 0x50A41AD966910F03 | Since: 1207
     */
    function setTextColor(r: number, g: number, b: number, a: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4EE21B7CC7FD350 | Since: 1207
     */
    function showHorseCores(state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x50C803A4CD5932C5 | Since: 1207
     */
    function showPlayerCores(state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA03F130A637D923 | Since: 1207
     */
    function textBlockDelete(textBlock: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3CF96E16265B7DC8 | Since: 1207
     */
    function textBlockIsStreamed(textBlock: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x684C96CC7C66E8EF | Since: 1207
     */
    function uiPromptAddGroupLink(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x837972ED28159536 | Since: 1207
     */
    function uiPromptAddGroupReturnLink(prompt: any): void;
    /**
     * id is the return value from 0xD9459157EB22C895.
     *
     * Hash: 0x6095358C4142932A | Since: 1207
     */
    function uiPromptClearHorizontalOrientation(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x51259AE5C72D4A1B | Since: 1207
     */
    function uiPromptClearPromptPriorityPreference(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE84C5EE2C384FB3 | Since: 1207
     */
    function uiPromptContextSetPoint(prompt: any, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C718001B77CA468 | Since: 1207
     */
    function uiPromptContextSetRadius(prompt: any, radius: number): void;
    /**
     * Attaches a Volume
     *
     * Hash: 0x4D107406667423BE | Since: 1207
     */
    function uiPromptContextSetVolume(prompt: any, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x29FA7910726C3889 | Since: 1207
     */
    function uiPromptCreate(inputHash: number | string, labelName: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x00EDE88D4D13CF59 | Since: 1207
     */
    function uiPromptDelete(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1622CE88A1946FB | Since: 1207
     */
    function uiPromptDisablePromptsThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC094EF26DD153FA | Since: 1207
     */
    function uiPromptDisablePromptTypeThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB550B927B34A1BB | Since: 1207
     */
    function uiPromptDoesAmbientGroupExist(hash: number | string): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
     *
     * Hash: 0x06565032897BA861 | Since: 1207
     */
    function uiPromptEnablePromptTypeThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A2F820452017EA2 | Since: 1207
     */
    function uiPromptFilterClear(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1FCC36C3F7286C8 | Since: 1207
     */
    function uiPromptGetGroupActivePage(hash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xCB73D7521E7103F0 | Since: 1207
     */
    function uiPromptGetGroupIdForScenarioPoint(): number;
    /**
     * No comment provided
     *
     * Hash: 0xB796970BD125FCE8 | Since: 1207
     */
    function uiPromptGetGroupIdForTargetEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A9585293863B8A5 | Since: 1207
     */
    function uiPromptGetMashModeProgress(prompt: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x81801291806DBC50 | Since: 1207
     */
    function uiPromptGetProgress(prompt: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x1FBA0DABECDDB52B | Since: 1207
     */
    function uiPromptGetUrgentPulsingEnabled(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8010BEBD0D5ED5BC | Since: 1207
     */
    function uiPromptHasHoldAutoFillMode(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB60C9F9ED47ABB76 | Since: 1207
     */
    function uiPromptHasHoldMode(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0F65F0640EF0617 | Since: 1207
     */
    function uiPromptHasHoldModeCompleted(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6C6A4ADB3BAC409 | Since: 1207
     */
    function uiPromptHasManualMashMode(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCD072523791DDC1B | Since: 1207
     */
    function uiPromptHasMashMode(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x845CE958416DC473 | Since: 1207
     */
    function uiPromptHasMashModeCompleted(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25B18E530CF39D6F | Since: 1207
     */
    function uiPromptHasMashModeFailed(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3CE854D250A88DAF | Since: 1207
     */
    function uiPromptHasPressedTimedModeCompleted(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1A17B9ECFF617562 | Since: 1207
     */
    function uiPromptHasPressedTimedModeFailed(prompt: any): boolean;
    /**
     * Params: p1 is 0
     *
     * Hash: 0xC92AC953F0A982AE | Since: 1207
     */
    function uiPromptHasStandardModeCompleted(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x546E342E01DE71CF | Since: 1207
     */
    function uiPromptIsActive(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0D00EDDFB58B7F28 | Since: 1207
     */
    function uiPromptIsEnabled(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC7D70EAEF92EFF48 | Since: 1207
     */
    function uiPromptIsHoldModeRunning(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2787CC611D3FACC5 | Since: 1207
     */
    function uiPromptIsJustPressed(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x635CC82FA297A827 | Since: 1207
     */
    function uiPromptIsJustReleased(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x21E60E230086697F | Since: 1207
     */
    function uiPromptIsPressed(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAFC887BA7A7756D6 | Since: 1207
     */
    function uiPromptIsReleased(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x347469FBDD1589A9 | Since: 1207
     */
    function uiPromptIsValid(prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x04F97DE45A519419 | Since: 1207
     */
    function uiPromptRegisterBegin(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF7AA2696A22AD8B9 | Since: 1207
     */
    function uiPromptRegisterEnd(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E52C800A28F7BE8 | Since: 1207
     */
    function uiPromptRemoveGroup(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC6C55DFA2C24EE5 | Since: 1207
     */
    function uiPromptRestartModes(prompt: any): void;
    /**
     * Note: you must use VAR_STRING for p1 if string is not part of text database
     * tabAmount: specifies number of tabs in prompt group
     * tabDefaultIndex: specifies starting index
     * p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
     *
     * Hash: 0xC65A45D4453C2627 | Since: 1207
     */
    function uiPromptSetActiveGroupThisFrame(hash: number | string, name: string, tabAmount: number, tabDefaultIndex: number, prompt: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x565C1CE183CB0EAF | Since: 1207
     */
    function uiPromptSetAllowedAction(prompt: any, action: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x315C81D760609108 | Since: 1207
     */
    function uiPromptSetAmbientGroupThisFrame(entity: number | Entity, name: string): any;
    /**
     * attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
     *
     * Hash: 0x560E76D5E2E1803F | Since: 1207
     */
    function uiPromptSetAttribute(prompt: any, attribute: number, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF957A1654C6322FE | Since: 1207
     */
    function uiPromptSetBeatMode(prompt: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB487A4936FBF40AC | Since: 1207
     */
    function uiPromptSetBeatModeGrayedOut(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5352B7494A08258 | Since: 1207
     */
    function uiPromptSetControlAction(prompt: any, action: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x8A0FB4D03A630D21 | Since: 1207
     */
    function uiPromptSetEnabled(prompt: any, toggle: boolean): void;
    /**
     * tabIndex: specifies tab of prompt
     *
     * Hash: 0x2F11D3A254169EA4 | Since: 1207
     */
    function uiPromptSetGroup(prompt: any, groupId: number, tabIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3CE932E737C145D6 | Since: 1207
     */
    function uiPromptSetHoldAutoFillMode(prompt: any, autoFillTimeMs: number, holdTimeMs: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3F2149AA24F3D8E | Since: 1207
     */
    function uiPromptSetHoldAutoFillWithDecayMode(prompt: any, autoFillTimeMs: number, holdTimeMs: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA5CCF4EEB2F82D1 | Since: 1207
     */
    function uiPromptSetHoldIndefinitelyMode(prompt: any): void;
    /**
     * Params: p2 is 304000 in R* SP Script coachrobberies
     *
     * Hash: 0x94073D5CA3F16B7B | Since: 1207
     */
    function uiPromptSetHoldMode(prompt: any, holdTimeMs: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA520C7B05FA4EB2A | Since: 1207
     */
    function uiPromptSetManualResolved(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C39587D7CC66801 | Since: 1207
     */
    function uiPromptSetMashAutoFillMode(prompt: any, autoFillTimeMs: number, mashes: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B66E89312727274 | Since: 1207
     */
    function uiPromptSetMashIndefinitelyMode(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x179DCF71F705DA20 | Since: 1207
     */
    function uiPromptSetMashManualCanFailMode(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x32DF729D8BD3C1C6 | Since: 1207
     */
    function uiPromptSetMashManualMode(prompt: any): void;
    /**
     * standard (prompt not held) rate: 0.035f
     * fast (prompt held) rate: 0.015f
     * punitive (been hit) rate: 0.14f
     *
     * Hash: 0x7D393C247FB9B431 | Since: 1207
     */
    function uiPromptSetMashManualModeDecaySpeed(prompt: any, speed: number): void;
    /**
     * standard (prompt not held) rate: (1f / 128f)
     * fast (prompt held) rate: (1f / 64f)
     * punitive (been hit) rate: (1f / 128f)
     *
     * Hash: 0xA0D1D79C6036A855 | Since: 1207
     */
    function uiPromptSetMashManualModeIncreasePerPress(prompt: any, rate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56DBB26F98582C29 | Since: 1207
     */
    function uiPromptSetMashManualModePressedGrowthSpeed(prompt: any, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF6423BF071C7F71 | Since: 1207
     */
    function uiPromptSetMashMode(prompt: any, mashes: number): void;
    /**
     * For startProgress, 0.0f - 1.0f is a percentage value, so 0.5f = 50% progress. Range: 0.0f - 1.0f
     * For decreaseSpeed, 0.0f will result in the prompt not showing the mash progress at all. 0.01f - ?.0f. At speeds around 7.0f to 8.0f the prompt basically fails immediately if you don't start mashing right away.
     *
     * Hash: 0xDC0CB602DEADBA53 | Since: 1207
     */
    function uiPromptSetMashWithResistanceCanFailMode(prompt: any, mashes: number, decreaseSpeed: number, startProgress: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD1BDFF15EFA79F5 | Since: 1207
     */
    function uiPromptSetMashWithResistanceMode(prompt: any, mashes: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F385ECC5200938D | Since: 1207
     */
    function uiPromptSetOrderingAsInputType(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x1473D3AF51D54276 | Since: 1207
     */
    function uiPromptSetPressedTimedMode(prompt: any, depletionTimeMs: number): void;
    /**
     * priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
     *
     * Hash: 0xCA24F528D0D16289 | Since: 1207
     */
    function uiPromptSetPriority(prompt: any, priority: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x530A428705BE5DEF | Since: 1207
     */
    function uiPromptSetPromptPriorityPreference(ped: number | Ped): void;
    /**
     * This returns an id that can be used with 0x6095358C4142932A.
     *
     * Hash: 0xD9459157EB22C895 | Since: 1207
     */
    function uiPromptSetRegisterHorizontalOrientation(): number;
    /**
     * Used for controllers
     *
     * Hash: 0x7ABE7095FB3D2581 | Since: 1207
     */
    function uiPromptSetRotateMode(prompt: any, counterclockwise: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x832CB510DE546282 | Since: 1207
     */
    function uiPromptSetSpinnerPosition(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC6586A7FDCD4B68 | Since: 1207
     */
    function uiPromptSetSpinnerSpeed(prompt: any): void;
    /**
     * Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
     *
     * Hash: 0x74C7D7B72ED0D3CF | Since: 1207
     */
    function uiPromptSetStandardizedHoldMode(prompt: any, timedEventHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC6656799977741B | Since: 1207
     */
    function uiPromptSetStandardMode(prompt: any, releaseMode: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEC85C174751292B | Since: 1207
     */
    function uiPromptSetTag(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F6503D9CD2754EB | Since: 1207
     */
    function uiPromptSetTargetMode(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x00123054BEC8A30F | Since: 1207
     */
    function uiPromptSetTargetModeProgress(prompt: any, progress: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E019C45DD3B6A14 | Since: 1207
     */
    function uiPromptSetTargetModeTarget(prompt: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DD02A8318420DD7 | Since: 1207
     */
    function uiPromptSetText(prompt: any, text: string): void;
    /**
     * TM_ANY = 0,
     * TM_ON_FOOT,
     * TM_IN_VEHICLE
     *
     * Hash: 0x876E4A35C73A6655 | Since: 1207
     */
    function uiPromptSetTransportMode(prompt: any, mode: number): void;
    /**
     * Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
     *
     * Hash: 0xF4A5C4509BF923B1 | Since: 1207
     */
    function uiPromptSetType(prompt: any, type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5F428EE08FA7F2C | Since: 1207
     */
    function uiPromptSetUrgentPulsingEnabled(prompt: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x71215ACCFDE075EE | Since: 1207
     */
    function uiPromptSetVisible(prompt: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FE4788AB1430C55 | Since: 1207
     */
    function uiPromptWasBeatModePressedInTimeWindow(prompt: any): boolean;
}
export declare namespace ik {
    /**
     * No comment provided
     *
     * Hash: 0x0B9F7A01EC50448D | Since: 1207
     */
    function _0x0B9F7A01EC50448D(ped: number | Ped, args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x6098139150DCC745 | Since: 1207
     */
    function _0x6098139150DCC745(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x873C792E07A32C8B | Since: 1207
     */
    function _0x873C792E07A32C8B(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x66F9EB44342BB4C5 | Since: 1207
     */
    function inverseKinematicsRequestLookAt(ped: number | Ped, args: any): void;
    /**
     * Seems to disable IK on ped
     *
     * Hash: 0x0EABF182FBB63D72 | Since: 1207
     */
    function inverseKinematicsSetDisabledForPed(ped: number | Ped): void;
}
export declare namespace interaction {
    /**
     * Changes the mouse cursor's sprite.
     *
     * spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
     *
     * Old name: _SET_MOUSE_CURSOR_SPRITE
     *
     * Hash: 0x7F5858AAB5A58CCE | Since: 1207
     */
    function setMouseCursorStyle(spriteId: number): void;
    /**
     * Shows the cursor on screen for one frame.
     *
     * Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
     *
     * Hash: 0xF12E4CCAF249DC10 | Since: 1207
     */
    function setMouseCursorThisFrame(): void;
    /**
     * Returns true if player is moving mouse while cursor is active
     * _PI* - _PO*
     *
     * Hash: 0x2B8B605F2A9E64BF | Since: 1311
     */
    function pointerIsBeingMoved(): boolean;
    /**
     * Returns true if player is holding LMB while cursor is active
     * _PI* - _PO*
     *
     * Hash: 0x61CAE9D1FD055E44 | Since: 1207
     */
    function pointerIsLeftButtonHeld(): boolean;
    /**
     * Returns true if player releases LMB if cursor is active
     * _PI* - _PO*
     *
     * Hash: 0xF7F51A57349739F2 | Since: 1207
     */
    function pointerIsLeftButtonJustReleased(): boolean;
    /**
     * Allows camera to be moved if middle mouse button is held while in first person
     * Must be called every frame
     * _SET*
     *
     * Hash: 0x0546B117BB17548B | Since: 1232
     */
    function setAllowFirstPersonMouseCameraMovement(): void;
}
export declare namespace interior {
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
     *
     * Hash: 0x174D0AAB11CED739 | Since: 1207
     */
    function activateInteriorEntitySet(interior: number, entitySetName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1762D5BBFCA13A8 | Since: 1207
     */
    function clearRoomForEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x951A049765E0D450 | Since: 1207
     */
    function clearRoomForGameViewport(): void;
    /**
     * No comment provided
     *
     * Hash: 0x33B81A2C07A51FFF | Since: 1207
     */
    function deactivateInteriorEntitySet(interior: number, entitySetName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C2B92A1A07D4FCE | Since: 1207
     */
    function disableInterior(interior: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC29A9894C976945 | Since: 1207
     */
    function forceRoomForEntity(entity: number | Entity, interior: number, roomHashKey: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x115B4AA8FB28AB43 | Since: 1207
     */
    function forceRoomForGameViewport(interiorID: number, roomHashKey: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDD36C9E5C469070 | Since: 1207
     */
    function getInteriorAtCoords(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xAAD6170AA33B13C0 | Since: 1207
     */
    function getInteriorAtCoordsWithType(pos: Vector3, interiorType: string): number;
    /**
     * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
     *
     * Hash: 0x3543AEA1816D1D2B | Since: 1207
     */
    function getInteriorAtCoordsWithTypehash(pos: Vector3, typeHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5054D1A5218FA696 | Since: 1207
     */
    function getInteriorFromCollision(pos: Vector3): number;
    /**
     * Returns the handle of the interior that the entity is in. Returns 0 if outside.
     *
     * Hash: 0xB417689857646F61 | Since: 1207
     */
    function getInteriorFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xBC8A281FF125C655 | Since: 1207
     */
    function getInteriorFromPrimaryView(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8451E87D3C2B0286 | Since: 1207
     */
    function getInteriorLocationAndNamehash(interior: number, position: Vector3, nameHash: number | string): void;
    /**
     * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
     *
     * Hash: 0x27D7B6F79E1F4603 | Since: 1207
     */
    function getKeyForEntityInRoom(entity: number | Entity): number;
    /**
     * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
     *
     * Hash: 0x076E46E0EB52AFC6 | Since: 1207
     */
    function getRoomKeyFromEntity(entity: number | Entity): number;
    /**
     * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
     *
     * Hash: 0xF291396B517E25B2 | Since: 1207
     */
    function isCollisionMarkedOutside(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x32810CA2125F5842 | Since: 1207
     */
    function isInteriorEntitySetActive(interior: number, entitySetName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x941560D2D45DBFC8 | Since: 1207
     */
    function isInteriorReady(interior: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4200F14D6F840A9A | Since: 1207
     */
    function isInteriorScene(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x017C1B3159F79F6C | Since: 1207
     */
    function isValidInterior(interior: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBD3D33EABF680168 | Since: 1207
     */
    function pinInteriorInMemory(interior: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BD616735F16BF5C | Since: 1207
     */
    function retainEntityInInterior(entity: number | Entity, interior: number): void;
    /**
     * Actually returns void in IDA but the script header defines a BOOL return type
     *
     * Hash: 0xB5EF6FEF2DC9EBED | Since: 1207
     */
    function setInteriorInUse(interior: number): boolean;
    /**
     * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
     *
     * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
     *
     * Hash: 0x07FD1A0B814F6055 | Since: 1207
     */
    function unpinInterior(interior: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2533F2AB0EB9C6F9 | Since: 1207
     */
    function _0x2533F2AB0EB9C6F9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE2B3D5500B1B2E4 | Since: 1207
     */
    function _0xFE2B3D5500B1B2E4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3039BE60B3749716 | Since: 1207
     */
    function getInteriorMinimapHash(interior: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2C9746D0CA15BE1C | Since: 1207
     */
    function getInteriorPosition(interior: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xD56FF170710FC826 | Since: 1207
     */
    function isInteriorEntitySetValid(interior: number, entitySetName: string): boolean;
}
export declare namespace inventory {
    /**
     * No comment provided
     *
     * Hash: 0x644CCB76A76CFBD6 | Since: 1207
     */
    function inventoryCopyMpInventoryToMissionInventory(bCopySatchelItems: boolean, bCopyEmotes: boolean, bCopyHorse: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1F389F03DC83673 | Since: 1311
     */
    function inventoryDisableMissionInventoryPickups(): void;
    /**
     * No comment provided
     *
     * Hash: 0x033EE4B89F3AC545 | Since: 1207
     */
    function inventoryGetChildrenInSlotCount(inventoryId: number, guid: any, slotId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x886DFD3E185C8A89 | Since: 1207
     */
    function inventoryGetGuidFromItemid(inventoryId: number, guid: any, slotId: number | string, outGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9700E8EFC4AB9089 | Since: 1207
     */
    function inventoryGetInventoryItem(inventoryId: number, inData: any, outData: any): boolean;
    /**
     * Params: p0 is only 0 or 1
     * Only used in R* SP Scripts
     *
     * Hash: 0x0349404A22736740 | Since: 1207
     */
    function _0x0349404A22736740(inventoryId: number, guid: any): void;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x112BCA290D2EB53C | Since: 1207
     */
    function _0x112BCA290D2EB53C(inventoryId: number, year: number, month: number, day: number, hour: number, minute: number, second: number): boolean;
    /**
     * eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
     * Only used in R* SP Scripts
     *
     * Hash: 0x46743BBFEDBC859E | Since: 1207
     */
    function inventoryUseSatchelItem(inventoryId: number, eInventoryItem: number | string): void;
    /**
     * Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
     *
     * Hash: 0x46DB71883EE9D5AF | Since: 1207
     */
    function _0x46DB71883EE9D5AF(data: any, stats: string, guid: any, ped: number | Ped): number;
    /**
     * removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
     * `Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel`
     * Only used in R* SP Scripts
     *
     * Hash: 0x5D6182F3BCE1333B | Since: 1207
     */
    function inventoryRemoveInventoryItems(inventoryId: number, removeReason: number | string): boolean;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x6862E4D93F64CF01 | Since: 1207
     */
    function _0x6862E4D93F64CF01(inventoryId: number, guid: any): boolean;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x6968CE7AC32F6788 | Since: 1207
     */
    function _0x6968CE7AC32F6788(inventoryId: number): void;
    /**
     * Apply the weapon stats to the CatalogItemInspection stats entry id. get entryId with _INVENTORY_GET_CATALOG_ITEM_INSPECTION_STATS_ENTRY
     *
     * Hash: 0x75CFAC49301E134E | Since: 1207
     */
    function inventoryApplyWeaponStatsToEntry(entryId: number, weapon: number | string, ped: number | Ped): void;
    /**
     * p1, p2: 0
     *
     * Hash: 0x75CFAC49301E134F | Since: 1207
     */
    function _0x75CFAC49301E134F(databindingEntryId: number | string): void;
    /**
     * p0: value returned by 0x46DB71883EE9D5AF
     *
     * Hash: 0x951847CEF3D829FF | Since: 1207
     */
    function _0x951847CEF3D829FF(outGuid: any, ped: number | Ped): void;
    /**
     * p1 (out) and p2 (in) are both script arrays?
     * item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
     *
     * Hash: 0x9AC53CB6907B4428 | Since: 1207
     */
    function _0x9AC53CB6907B4428(item: number | string): boolean;
    /**
     * Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
     * INVENTORY_A*
     *
     * Hash: 0x9B4E793B1CB6550A | Since: 1207
     */
    function _0x9B4E793B1CB6550A(): void;
    /**
     * Returns effects entry id of CatalogItemInspection container.
     *
     * Hash: 0x9D21B185ABC2DBC4 | Since: 1207
     */
    function inventoryGetCatalogItemInspectionEffectsEntry(entryId: number, name: string, unk1: boolean, unk2: boolean): number;
    /**
     * Returns stats entry id of CatalogItemInspection container
     *
     * Hash: 0x9D21B185ABC2DBC5 | Since: 1207
     */
    function inventoryGetCatalogItemInspectionStatsEntry(entryId: number, name: string, unk1: number, playerid: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x9E58207B194488AC | Since: 1207
     */
    function _0x9E58207B194488AC(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1DD74A1F5536622 | Since: 1311
     */
    function _0xB1DD74A1F5536622(inventoryId: number, itemGUID: any): boolean;
    /**
     * Params: p3 returns an int between 0 and 20 (?)
     * Only used in R* SP Scripts
     *
     * Hash: 0xD08685BA892DBFAB | Since: 1207
     */
    function _0xD08685BA892DBFAB(inventoryId: number, guid: any): boolean;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0xE1F45A67A9F0DCBC | Since: 1207
     */
    function _0xE1F45A67A9F0DCBC(inventoryId: number): void;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0xE36D4A38D28D9CFB | Since: 1207
     */
    function inventoryUseBackupInventory(): void;
    /**
     * p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
     * Returns slot hash
     *
     * Hash: 0x6452B1D357D81742 | Since: 1207
     */
    function getDefaultItemSlotInfo(item: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xADDD1E7C0ECF7D95 | Since: 1207
     */
    function getItemRoleMaxLevelCount(inventoryId: number, eRoleMaxLevel: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE80E50BEE276A54A | Since: 1207
     */
    function getItemSlotMaxCount(provision: number | string, slotId: number | string): number;
    /**
     * inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
     *
     * Hash: 0xCB5D11F9508A928D | Since: 1207
     */
    function inventoryAddItemWithGuid(inventoryId: number, guid1: any, guid2: any, item: number | string, inventoryItemSlot: number | string, addReason: number | string): boolean;
    /**
     * inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
     *
     * Hash: 0x0FBBFFC891A97C81 | Since: 1207
     */
    function inventoryAreLocalChangesAllowed(inventoryId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C543D5DFCD2DAFD | Since: 1207
     */
    function inventoryCompareGuids(guid1: any, guid2: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC04F47D488EF9EBA | Since: 1207
     */
    function inventoryCopyItemToInventory(inventoryId: number, inventoryIdCloned: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3112ADB9D5F3426B | Since: 1207
     */
    function inventoryCopyItemToMissionInventory(guid: any): void;
    /**
     * filterName (collections): "ALL", "ALL SATCHEL", "ALL HORSES", "ALL COACHES", "ALL MOUNTS", "ALL CLOTHING", "ALL WEAPONS", "ALL SATCHEL EXCLUDING CLOTHING", "ALL EXCLUDING CLOTHING"
     * slotId: -1591664384
     * p3: outCollectionSize (?)
     * Returns collectionId
     *
     * Hash: 0x80D78BDC9D88EF07 | Since: 1207
     */
    function inventoryCreateItemCollection(inventoryId: number, filterName: string, slotId: number | string, size: number): number;
    /**
     * Returns collectionId
     *
     * Hash: 0x97A3646645727F42 | Since: 1232
     */
    function inventoryCreateItemCollection2(collectionSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x640F890C3E5A3FFD | Since: 1207
     */
    function inventoryCreateItemCollectionWithFilter(inventoryId: number, filter: any, numInCollection: number): number;
    /**
     * p1: 32
     * Returns collectionId
     *
     * Hash: 0xBB7F968675B34B0C | Since: 1311
     */
    function inventoryCreateSortedCollection(inventoryId: number, size: number): number;
    /**
     * Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
     *
     * Hash: 0x766315A564594401 | Since: 1207
     */
    function inventoryDisableItem(inventoryId: number, item: number | string, gtxReason: number | string): void;
    /**
     * Params: p1 = 0
     *
     * Hash: 0xE3A46370F70F3607 | Since: 1207
     */
    function inventoryDisableWeapons(inventoryId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x88B58B83A43A8CAB | Since: 1207
     */
    function inventoryDoesItemOwnEquipment(inventoryId: number, guid: any, item: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A564540FAC12211 | Since: 1207
     */
    function inventoryEnableItem(inventoryId: number, item: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5D72F1624F3BA7C | Since: 1207
     */
    function inventoryEnableWeapons(inventoryId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x734311E2852760D0 | Since: 1207
     */
    function inventoryEquipItemWithGuid(inventoryId: number, guid: any, bEquipped: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x780C5B9AE2819807 | Since: 1207
     */
    function inventoryFitsSlotId(item: number | string, slotId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE843D21A8E2498AA | Since: 1207
     */
    function inventoryGetChildrenCount(inventoryId: number, parentGuid: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x025A1B1FB03FBF61 | Since: 1207
     */
    function inventoryGetFullInventoryItemData(inventoryId: number, guid: any): boolean;
    /**
     * Returns a unique inventory ID for this ped.
     * For the local player ped, it is an eInventories value.
     * For other peds, it is the inventory address casted to unsigned int.
     *
     * enum eInventories
     * {
     * INVENTORY_INVALID,
     * INVENTORY_SP_PLAYER,
     * INVENTORY_MP_PLAYER,
     * INVENTORY_MP_MISSION,
     * INVENTORY_SECOND_SCREEN,
     * INVENTORY_SP_BACKUP,
     * INVENTORY_SP_SNAPSHOT,
     * INVENTORY_0xDE2AE452,
     * INVENTORY_0x399D9B3A,
     * INVENTORY_0x4BD43FA7,
     * INVENTORY_0x9529D251,
     * INVENTORY_0xA75776AC,
     * INVENTORY_MAX_ID = 11,
     * INVENTORY_IDS_COUNT
     * };
     *
     * Hash: 0x13D234A2A3F66E63 | Since: 1207
     */
    function inventoryGetInventoryIdFromPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xCD9A485F2B383B44 | Since: 1207
     */
    function inventoryGetInventoryItemChild(inventoryId: number, parentGuid: any, childIndex: any, outInventoryItem: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC97E0D2302382211 | Since: 1207
     */
    function inventoryGetInventoryItemCountWithGuid(inventoryId: number, guid: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xE787F05DFC977BDE | Since: 1207
     */
    function inventoryGetInventoryItemCountWithItemid(inventoryId: number, eInventoryItem: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA4550FE9C512E3DD | Since: 1207
     */
    function inventoryGetInventoryItemDescriptionHash(item: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xBE012571B25F5ACA | Since: 1207
     */
    function inventoryGetInventoryItemEquippedInSlot(inventoryId: number, guid: any, slotId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x22E590F108289A9D | Since: 1207
     */
    function inventoryGetInventoryItemEquippedInSlotByRef(inventoryId: number, guid: any, slotId: number | string, outGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB991FE166FAF84FD | Since: 1207
     */
    function inventoryGetInventoryItemFitSlot(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9933164965533B7 | Since: 1207
     */
    function inventoryGetInventoryItemHidden(inventoryId: number, guid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C093C1787F18519 | Since: 1207
     */
    function inventoryGetInventoryItemInspectionInfo(item: number | string, info: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x70E3A884ED000A01 | Since: 1311
     */
    function inventoryGetInventoryItemInUse(inventoryId: number, guid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4AEF1FB5B9011D75 | Since: 1207
     */
    function inventoryGetInventoryItemIsAnimalPelt(item: number | string): boolean;
    /**
     * soundType: see 0x2BAE4880DCDD560B
     * Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
     *
     * Hash: 0x2E1CDC1FF3B8473E | Since: 1207
     */
    function inventoryGetInventoryItemSound(item: number | string, soundType: number): number;
    /**
     * Returns CopyID
     *
     * Hash: 0xAB5F12746A099A0E | Since: 1207
     */
    function inventoryGetInventoryItemWeaponCopyId(inventoryId: number, guid: any): number;
    /**
     * soundType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CItemInfoSoundsInterface__sSoundsInfo__eSoundType
     *
     * Hash: 0x2BAE4880DCDD560B | Since: 1207
     */
    function inventoryGetIsInventoryItemSoundValid(item: number | string, soundType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4A606C17276E1BCC | Since: 1232
     */
    function inventoryGetItemExpiryTime(itemGUID: any): number;
    /**
     * collectionId is < outCollectionSize
     *
     * Hash: 0x82FA24C3D3FCD9B7 | Since: 1207
     */
    function inventoryGetItemFromCollectionIndex(collectionId: number, itemIndex: number, itemData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB881CA836CC4B6D4 | Since: 1207
     */
    function inventoryIsGuidValid(guid: any): boolean;
    /**
     * Alternative Name: _INVENTORY_IS_ITEM_DISABLED
     *
     * Hash: 0x3D10D7179D7034AF | Since: 1207
     */
    function inventoryIsInventoryItemEquipped(inventoryId: number, item: number | string): boolean;
    /**
     * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
     * 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
     *
     * Hash: 0x245D07651B1D183B | Since: 1207
     */
    function inventoryIsInventoryItemFlagEnabled(item: number | string, flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0137C77A2EC64536 | Since: 1232
     */
    function inventoryIsItemExpired(itemGUID: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC7563F482781A3D | Since: 1207
     */
    function inventoryIsPlayerInventoryMirroringTransactions(): boolean;
    /**
     * guid1: old parent GUID
     * guid2: new parent GUID
     * guid3: new item GUID (out param)
     *
     * Hash: 0xDCCAA7C3BFD88862 | Since: 1207
     */
    function inventoryMoveInventoryItem(inventoryId: number, guid1: any, guid2: any, slotId: number | string, quantity: number, outGuid: any): boolean;
    /**
     * Max num of collections is 5, so release your unused ones.
     *
     * Hash: 0x42A2F33A1942E865 | Since: 1207
     */
    function inventoryReleaseItemCollection(collectionId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3E4E811480B3AE79 | Since: 1207
     */
    function inventoryRemoveInventoryItemWithGuid(inventoryId: number, guid: any, quantity: number, removeReason: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4158C8C9A3B5DCE | Since: 1207
     */
    function inventoryRemoveInventoryItemWithItemid(inventoryId: number, item: number | string, quantity: number, removeReason: number | string): boolean;
    /**
     * Used with CClothingItem
     *
     * Hash: 0x9A113C660AEA3832 | Since: 1207
     */
    function inventorySetInventoryItemHidden(inventoryId: number, guid: any, hidden: boolean): void;
    /**
     * Used with CSatchelItem, R* Script usage: fisihing_core
     *
     * Hash: 0xD740F11FBC8AEF43 | Since: 1207
     */
    function inventorySetInventoryItemHidden2(inventoryId: number, guid: any, hidden: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x227522FD59DDB7E8 | Since: 1207
     */
    function inventorySetInventoryItemInspectionEnabled(inventoryId: number, enabled: boolean): boolean;
    /**
     * Only works on CClothingItem
     *
     * Hash: 0x65A5F70F4A292EBE | Since: 1207
     */
    function inventorySetInventoryItemInUse(inventoryId: number, guid: any, inUse: boolean): void;
    /**
     * OWE_INVALID = -1,
     * OWE_GOOD_IN_HOT
     * OWE_GOOD_IN_NONE
     * OWE_GOOD_IN_COLD
     * OWE_GOOD_IN_ALL
     *
     * Hash: 0x6D2F987736A42D4C | Since: 1207
     */
    function inventorySetInventoryItemWeatherEffectiveness(inventoryId: number, guid: any, weatherEffectiveness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2753D691BCDA314 | Since: 1207
     */
    function inventorySwapInventoryItem(inventoryId: number, guid1: any, guid2: any): boolean;
    /**
     * Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
     *
     * Hash: 0xD80A8854DB5CFBA5 | Since: 1207
     */
    function inventoryUpdateInventoryItem(inventoryId: number, guid1: any, guid2: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6AA9F56BC6CFF58 | Since: 1207
     */
    function inventoryUseMissionInventory(enable: boolean, mirrorTransactions: boolean): void;
    /**
     * old name _INVENTORY_USE_SP_BACKUP
     *
     * Hash: 0x7C7E4AB748EA3B07 | Since: 1207
     */
    function inventoryIsUsingBackupInventory(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF666EF30F4F0AC4E | Since: 1207
     */
    function setCarriableCarryActionPromptOverride(data: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD41D1D4350F6413 | Since: 1207
     */
    function setItemPromptInfoRequest(): void;
    /**
     * This native has no functionality.
     *
     * Hash: 0x597F571DDEE3FFAC | Since: 1207
     */
    function setUseMissionInventory(toggle: boolean): void;
}
export declare namespace itemdatabase {
    /**
     * No comment provided
     *
     * Hash: 0x2A610BEE7D341CC4 | Since: 1207
     */
    function itemdatabaseFilloutItemByName(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF2D360D27FD1ABF | Since: 1207
     */
    function itemdatabaseFilloutItemEffectIdInfo(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFE90ABBCBFDC13B2 | Since: 1207
     */
    function itemdatabaseFilloutItemInfo(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4CE753203FA42214 | Since: 1207
     */
    function itemdatabaseIsBuyableAwardValid(award: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x17721003A66C72BF | Since: 1207
     */
    function _0x17721003A66C72BF(shopType: number | string, key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1FC25AEB5F76B38D | Since: 1311
     */
    function itemdatabaseGetAwardAcquireCost(award: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x388088BFF3681189 | Since: 1232
     */
    function _0x388088BFF3681189(bundle: number | string, costtype: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3A0B667ABFF87F6E | Since: 1207
     */
    function _0x3A0B667ABFF87F6E(): boolean;
    /**
     * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
     *
     * Hash: 0x48229CE0C7938237 | Since: 1207
     */
    function _0x48229CE0C7938237(award: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x537A0555F62CA01A | Since: 1436
     */
    function _0x537A0555F62CA01A(key: number | string): boolean;
    /**
     * Returns Item Count
     *
     * Hash: 0x799FCD53358ED5FA | Since: 1355
     */
    function _0x799FCD53358ED5FA(bundle: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A35A72A692BE9DB | Since: 1207
     */
    function _0x7A35A72A692BE9DB(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8870895BA5ED9385 | Since: 1232
     */
    function _0x8870895BA5ED9385(key: number | string, tagType: number | string, outData: any): number;
    /**
     * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
     *
     * Hash: 0x8D029948CA29409B | Since: 1207
     */
    function _0x8D029948CA29409B(award: number | string, index: number, outData: any): boolean;
    /**
     * Returns Pathset Hash
     *
     * Hash: 0xAA29A5F13B2C20B2 | Since: 1232
     */
    function _0xAA29A5F13B2C20B2(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC4146375D8A0B374 | Since: 1355
     */
    function _0xC4146375D8A0B374(bundle: any, index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD076DB9B96FAADF1 | Since: 1311
     */
    function _0xD076DB9B96FAADF1(award: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDBEADA0DF5F9AB9F | Since: 1355
     */
    function _0xDBEADA0DF5F9AB9F(layout: number | string, index: number, outMenuKey: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x856FF92C57742AE5 | Since: 1207
     */
    function itemdatabaseCanEquipItemOnCategory(key: number | string, category: number | string, slotId: number | string): boolean;
    /**
     * Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
     *
     * Hash: 0x71EFA7999AE79408 | Since: 1207
     */
    function itemdatabaseCreateItemCollection(data: any, size: number, comparisonType: number): number;
    /**
     * Params: tag = TAG_ITEM_PROPERTY (tagType(?))
     *
     * Hash: 0x99C6EA66DFE73757 | Since: 1207
     */
    function itemdatabaseDoesBundleHaveTag(bundle: number | string, tag: number | string, tagType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF5FB5605AD56856 | Since: 1207
     */
    function itemdatabaseDoesItemHaveTag(item: number | string, tag: number | string, tagType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74F7928816E4E181 | Since: 1207
     */
    function itemdatabaseFilloutAcquireCost(key: number | string, costtype: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF27F01BBF5ACD3F3 | Since: 1232
     */
    function itemdatabaseFilloutAwardAcquireCost(award: number | string, costtype: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x121D2005DD64496B | Since: 1207
     */
    function itemdatabaseFilloutAwardItemInfo(award: number | string, index: number, outData: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB542632693D53408 | Since: 1232
     */
    function itemdatabaseFilloutBundle(bundle: number | string, costtype: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74C3B1093728D263 | Since: 1207
     */
    function itemdatabaseFilloutBundleUiData(bundle: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB52E20F6767A09A2 | Since: 1207
     */
    function itemdatabaseFilloutBuyAwardAcquireCosts(award: number | string, outData: any, outUnk: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF8D09EF8CE61D7BF | Since: 1207
     */
    function itemdatabaseFilloutBuyAwardUiData(award: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAD73B614DF26CF8A | Since: 1232
     */
    function itemdatabaseFilloutItem(key: number | string, costtype: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9379BE60DC55BBE6 | Since: 1207
     */
    function itemdatabaseFilloutItemEffectIds(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x60614A0AB580A2B5 | Since: 1207
     */
    function itemdatabaseFilloutModifier(key: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40C5D95818823C94 | Since: 1207
     */
    function itemdatabaseFilloutPriceModifierByKey(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4776EFD78F75C23F | Since: 1207
     */
    function itemdatabaseFilloutSatchelData(key: number | string, outSatchelItemSize: number): boolean;
    /**
     * Params: sellType = SELL_SHOP_DEFAULT
     *
     * Hash: 0x7A62A2EEDE1C3766 | Since: 1207
     */
    function itemdatabaseFilloutSellPrice(key: number | string, sellType: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A11D6EEA17165B0 | Since: 1207
     */
    function itemdatabaseFilloutTagData(key: number | string, outData: any, outIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB86F7CC2DC67AC60 | Since: 1207
     */
    function itemdatabaseFilloutUiData(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6772A83C67A25775 | Since: 1207
     */
    function itemdatabaseGetAcquireCost(key: number | string, index: number, outData: any): boolean;
    /**
     * Returns the number of <Item>s <acquirecosts> has from the key in catalog_sp.ymt
     *
     * Hash: 0x01FDDAD392D04144 | Since: 1207
     */
    function itemdatabaseGetAcquireCostsCount(key: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDEE7B3C76ED664BE | Since: 1232
     */
    function itemdatabaseGetAcquireCostsCountFromCostType(key: number | string, costtype: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x12DF9C58201DD19A | Since: 1311
     */
    function itemdatabaseGetAwardAcquireCostCount(key: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF540239F9937033B | Since: 1232
     */
    function itemdatabaseGetAwardAcquireCostCountFromCostType(award: number | string, costtype: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE81D0378A384E755 | Since: 1232
     */
    function itemdatabaseGetAwardCostModifiers(award: number | string, outData: any): boolean;
    /**
     * Returns iAwardItemCount
     *
     * Hash: 0x3FAA928A79591761 | Since: 1207
     */
    function itemdatabaseGetAwardItemCount(award: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA97EE5E4589FCF5A | Since: 1207
     */
    function itemdatabaseGetBundleAcquireCostModifiers(bundle: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x891A45960B6B768A | Since: 1207
     */
    function itemdatabaseGetBundleId(bundle: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3332695B01015DF9 | Since: 1207
     */
    function itemdatabaseGetBundleItemCount(bundleId: number, data: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D48A77E4B668B57 | Since: 1207
     */
    function itemdatabaseGetBundleItemInfo(bundleId: number, data: any, index: number, outBundle: number | string): boolean;
    /**
     * Returns (collection?) size/index (?)
     * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
     *
     * Hash: 0xD389A2549C4EFB30 | Since: 1207
     */
    function itemdatabaseGetCollectionSize(collectionId: number): number;
    /**
     * Params: p2 can be a component item hash
     *
     * Hash: 0x8750F69A720C2E41 | Since: 1207
     */
    function itemdatabaseGetComponentItem(collectionId: number, index: number, outKey: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2970D1D6BFCF9B46 | Since: 1207
     */
    function itemdatabaseGetFitsSlotCount(category: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x77210C146CED5261 | Since: 1207
     */
    function itemdatabaseGetFitsSlotInfo(category: number | string, index: number, outSlotId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x44915068579D7710 | Since: 1207
     */
    function itemdatabaseGetHasSlotCount(category: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A9BD0DB7E8376CF | Since: 1207
     */
    function itemdatabaseGetHasSlotInfo(category: number | string, index: number, outSlotId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF4452CE83118C738 | Since: 1207
     */
    function itemdatabaseGetItemPathset(key: number | string, defaultPathset: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4EB37AAB79AB0C48 | Since: 1207
     */
    function itemdatabaseGetItemPriceModifiers(key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6111B8F9413F413A | Since: 1207
     */
    function itemdatabaseGetItemTagType(item: number | string, tag: number | string): number;
    /**
     * Returns an alternative cost hash to COST_SHOP_DEFAULT
     *
     * Hash: 0xCB92EC9C004732B4 | Since: 1207
     */
    function itemdatabaseGetModifiedPrice(key: number | string, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5AAAF40E9B224F5E | Since: 1207
     */
    function itemdatabaseGetNumberOfModifiedPrices(key: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x1289D8315235856D | Since: 1207
     */
    function itemdatabaseGetNumberOfModifiers(key: number | string): number;
    /**
     * _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
     *
     * Hash: 0xEF254F1A4C08B7E6 | Since: 1207
     */
    function itemdatabaseGetPriorityAccessAward(award: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC568B1A0F17C7025 | Since: 1207
     */
    function itemdatabaseGetShopInventoriesItemsCount(shopType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4A79B41B4EB91F4E | Since: 1207
     */
    function itemdatabaseGetShopInventoriesItemInfo(shopType: number | string, index: number, outData: any): boolean;
    /**
     * Same Native Function as 0x17721003A66C72BF
     *
     * Hash: 0xCFB06801F5099B25 | Since: 1207
     */
    function itemdatabaseGetShopInventoriesItemInfoByKey(shopType: number | string, key: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76C752D788A76813 | Since: 1207
     */
    function itemdatabaseGetShopInventoriesRequirementGroupInfo(shopType: number | string, key: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0EA5C031AE5539F | Since: 1207
     */
    function itemdatabaseGetShopInventoriesRequirementInfo(shopType: number | string, key: number | string, groupIndex: number, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x66A6D76B6BB999B4 | Since: 1207
     */
    function itemdatabaseGetShopLayoutInfo(layout: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD66114469978B55B | Since: 1207
     */
    function itemdatabaseGetShopLayoutMenuInfoById(layout: number | string, menu: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF04247092F193B75 | Since: 1207
     */
    function itemdatabaseGetShopLayoutMenuInfoByIndex(layout: number | string, menu: number | string, index: number, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A60570657A7B635 | Since: 1207
     */
    function itemdatabaseGetShopLayoutMenuPageKey(layout: number | string, menu: number | string, index: number, outPageKey: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB347C100DF0C9B7F | Since: 1207
     */
    function itemdatabaseGetShopLayoutPageInfoByKey(layout: number | string, pageKey: number | string, outData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF32BEF578B3DBAE8 | Since: 1207
     */
    function itemdatabaseGetShopLayoutPageItemKey(layout: number | string, pageKey: number | string, index: number, outItemKey: number | string, outMenuId: number, outLayout: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x86FCB565CCA0CFA7 | Since: 1207
     */
    function itemdatabaseGetShopLayoutRootMenuInfo(layout: number | string, index: number, outData: any): boolean;
    /**
     * Params: mode is 0
     *
     * Hash: 0x4308812A6E9CA62E | Since: 1207
     */
    function itemdatabaseIsBundleValid(bundle: number | string, mode: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x337F88E3A063995E | Since: 1207
     */
    function itemdatabaseIsIntrinsicItem(key: number | string): boolean;
    /**
     * Params: mode is 0
     *
     * Hash: 0x6D5D51B188333FD1 | Since: 1207
     */
    function itemdatabaseIsKeyValid(key: number | string, mode: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x337F88E3A063995F | Since: 1207
     */
    function itemdatabaseIsOverpoweredItem(key: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00B9507D8E1D8716 | Since: 1207
     */
    function itemdatabaseIsShopKeyValid(shopType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3AFE5182C45A84F6 | Since: 1207
     */
    function itemdatabaseIsShopLayoutKeyValid(layout: number | string): boolean;
    /**
     * Returns docData.iNumTotalLabelTypes
     *
     * Hash: 0xCEC6A41E8910486A | Since: 1207
     */
    function itemdatabaseLocalizationGetNumLabelTypes(): number;
    /**
     * Returns iNumValuesForType
     *
     * Hash: 0x49885D82A13EEAEA | Since: 1207
     */
    function itemdatabaseLocalizationGetNumValues(): number;
    /**
     * Returns LabelType
     *
     * Hash: 0xCABF5D41D0073D4A | Since: 1207
     */
    function itemdatabaseLocalizationGetType(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9AE5610FDCED6EA7 | Since: 1207
     */
    function itemdatabaseLocalizationGetValue(label: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xCBB7B6EDFA933ADE | Since: 1207
     */
    function itemdatabaseReleaseItemCollection(collectionId: number): boolean;
}
export declare namespace itemset {
    /**
     * No comment provided
     *
     * Hash: 0xABE74510883C7950 | Since: 1207
     */
    function addToItemset(entity: number | Entity, itemset: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85F3A86CA9021FB0 | Since: 1207
     */
    function cleanItemset(itemset: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1AF16083320065A | Since: 1207
     */
    function createItemset(): any;
    /**
     * No comment provided
     *
     * Hash: 0x712BC69F10549B92 | Since: 1207
     */
    function destroyItemset(itemset: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x275A2E2C0FAB7612 | Since: 1207
     */
    function getIndexedItemInItemset(index: number, itemset: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x9FC3CDB5CE815901 | Since: 1207
     */
    function getIndexedScenarioPointIndexInItemset(index: number, itemset: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x55F2E375AC6018A9 | Since: 1207
     */
    function getItemsetSize(itemset: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xD1503C2EE2FE688C | Since: 1207
     */
    function isInItemset(entity: number | Entity, itemset: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD30765D153EF5C76 | Since: 1207
     */
    function isItemsetValid(itemset: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC5BAA432B429DC24 | Since: 1207
     */
    function removeFromItemset(entity: number | Entity, itemset: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x20A4BF0E09BEE146 | Since: 1207
     */
    function clearItemset(itemset: any): void;
}
export declare namespace law {
    /**
     * No comment provided
     *
     * Hash: 0x0E3BDEED21BEB945 | Since: 1207
     */
    function addBounty(player: number | string | Player, itemValueAmount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x69E181772886F48B | Since: 1207
     */
    function areWitnessesActive(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC76F252371150D9A | Since: 1207
     */
    function clearBounty(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCC6DC59E32A2BDC | Since: 1207
     */
    function clearPlayerPastCrimes(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x062B4A4A3396351D | Since: 1207
     */
    function clearWantedScore(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x54310AAB97B92816 | Since: 1207
     */
    function getBounty(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x532C5FDDB986EE5C | Since: 1207
     */
    function getPlayerRegisteredCrime(player: number | string | Player, crimeType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDD5FD601481F648B | Since: 1207
     */
    function getWantedScore(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD401C63158ACBAA | Since: 1207
     */
    function isLawIncidentActive(player: number | string | Player): boolean;
    /**
     * Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
     *
     * Hash: 0xC08E804C91F47C80 | Since: 1207
     */
    function numCrimesSuppressed(player: number | string | Player, crimeType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x2728C77FBC4B9796 | Since: 1207
     */
    function resetWantedForNewIncident(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x093A9D1F72DF0D19 | Since: 1207
     */
    function setBounty(player: number | string | Player, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE5FAA741A781F73 | Since: 1207
     */
    function setDisableDisturbanceCrimes(player: number | string | Player): void;
    /**
     * Default range is 1.0f
     *
     * Hash: 0xFEC85339AACA2A35 | Since: 1207
     */
    function setLawSenseRangeModifier(player: number | string | Player, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0FA74AA3CCE650B | Since: 1207
     */
    function setPlayerArrestedInRegion(player: number | string | Player, lawRegionHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x73BAD7B2F2DB50DE | Since: 1207
     */
    function setPlayerTurnedInBountyInRegion(player: number | string | Player, lawRegionHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x362086B911657B1A | Since: 1207
     */
    function setPostponeDisturbanceCrimesDuringCombat(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xA80FF73F772ACF6A | Since: 1207
     */
    function setWantedScore(player: number | string | Player, intensity: number): void;
    /**
     * crimeType: see _REPORT_CRIME
     *
     * Hash: 0x785177E4D57D7389 | Since: 1207
     */
    function suppressCrimeThisFrame(player: number | string | Player, crimeType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x00DB0BC05E3FAA4E | Since: 1207
     */
    function _0x00DB0BC05E3FAA4E(ped: number | Ped, bitset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x018F30D762E62DF8 | Since: 1207
     */
    function _0x018F30D762E62DF8(ped: number | Ped): any;
    /**
     * Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
     * _REPORT_*
     *
     * Hash: 0x07E8B8B20570271C | Since: 1207
     */
    function _0x07E8B8B20570271C(player: number | string | Player): void;
    /**
     * Only used in net_fetch R* Script
     *
     * Hash: 0x0BDFEBCF40A5F7E3 | Since: 1207
     */
    function _0x0BDFEBCF40A5F7E3(crimeType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x0C392DB374655176 | Since: 1207
     */
    function _0x0C392DB374655176(pos: Vector3, itemSet: any): void;
    /**
     * Only used in sisikapenitentiary R* Script: name = SISIKA
     * _IS_G* or _IS_H*
     *
     * Hash: 0x0DBACA9C38C9A686 | Since: 1207
     */
    function _0x0DBACA9C38C9A686(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EAF918F751F27BA | Since: 1207
     */
    function _0x0EAF918F751F27BA(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F230DE0DDBE3649 | Since: 1207
     */
    function _0x0F230DE0DDBE3649(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x148E7AC8141C9E64 | Since: 1207
     */
    function _0x148E7AC8141C9E64(player: number | string | Player): number;
    /**
     * Params: p0 either 0, 1 or -1 in R* Scripts
     * Set to 0 called together with _SUPPRESS_CRIME
     *
     * Hash: 0x15ABD5004CAD2D99 | Since: 1207
     */
    function _0x15ABD5004CAD2D99(): void;
    /**
     * Only used in resapwn_dump_body R* Script
     *
     * Hash: 0x2001687F9562FD9D | Since: 1207
     */
    function _0x2001687F9562FD9D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x21213B833EF4DAE7 | Since: 1207
     */
    function _0x21213B833EF4DAE7(player: number | string | Player, ped: number | Ped, outCoords: Vector3): void;
    /**
     * Used in SP only
     * _REPORT_*
     *
     * Hash: 0x22741652985C84D0 | Since: 1207
     */
    function _0x22741652985C84D0(player: number | string | Player, lawRegionHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x26934083D3F2579C | Since: 1207
     */
    function _0x26934083D3F2579C(player: number | string | Player): boolean;
    /**
     * Only used in R* Script fm_mission_controller
     * _CLEAR_WANTED_*
     *
     * Hash: 0x292AD61A33A7A485 | Since: 1207
     */
    function _0x292AD61A33A7A485(): void;
    /**
     * No comment provided
     *
     * Hash: 0x29CD4896ECB66C12 | Since: 1207
     */
    function _0x29CD4896ECB66C12(): void;
    /**
     * Only used in R* SP Script av_amb_camp_robbery
     *
     * Hash: 0x318F0F9A4426CFA2 | Since: 1207
     */
    function _0x318F0F9A4426CFA2(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x331D349E0380B097 | Since: 1207
     */
    function _0x331D349E0380B097(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3738B784DDD35CC6 | Since: 1207
     */
    function _0x3738B784DDD35CC6(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3852237A3D9DF145 | Since: 1207
     */
    function _0x3852237A3D9DF145(): void;
    /**
     * _CLEAR*
     *
     * Hash: 0x390710D2DAFA6BFF | Since: 1207
     */
    function _0x390710D2DAFA6BFF(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D2674828A4E6B3C | Since: 1207
     */
    function _0x3D2674828A4E6B3C(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40851BCC33ACD9AB | Since: 1207
     */
    function _0x40851BCC33ACD9AB(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x522F74636DF10201 | Since: 1207
     */
    function _0x522F74636DF10201(player: number | string | Player, itemSet: any): void;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x5E6F375CA101C108 | Since: 1207
     */
    function _0x5E6F375CA101C108(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x61B98367D93F012F | Since: 1207
     */
    function _0x61B98367D93F012F(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x6ABC50979655BEE7 | Since: 1207
     */
    function _0x6ABC50979655BEE7(player: number | string | Player, crimeType: number | string): void;
    /**
     * Only used in shoprobberies
     *
     * Hash: 0x7351DA734F989F4E | Since: 1207
     */
    function _0x7351DA734F989F4E(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7803436E68C32B26 | Since: 1207
     */
    function _0x7803436E68C32B26(): void;
    /**
     * _SET_DISPATCH_*
     *
     * Hash: 0x7EF2A2FE38D74456 | Since: 1207
     */
    function _0x7EF2A2FE38D74456(flag: number): void;
    /**
     * Only used in R* Script long_update
     * Returns a value thats being subtracted from GET_GAME_TIMER
     *
     * Hash: 0x7FC667F6DDFBCDCC | Since: 1207
     */
    function _0x7FC667F6DDFBCDCC(player: number | string | Player): number;
    /**
     * Only used in rcm_gunslinger1_1 R* Script: p0 = 0
     *
     * Hash: 0x82F11E1296996574 | Since: 1207
     */
    function _0x82F11E1296996574(): void;
    /**
     * No comment provided
     *
     * Hash: 0x856CE8FDE2416602 | Since: 1207
     */
    function _0x856CE8FDE2416602(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x89E005B1662F6E48 | Since: 1207
     */
    function _0x89E005B1662F6E48(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95878B13E272EF1F | Since: 1207
     */
    function _0x95878B13E272EF1F(entity: number | Entity, ped: number | Ped, pos: Vector3, crimeType: number | string): any;
    /**
     * Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
     *
     * Hash: 0x9772395CC73E8D1F | Since: 1207
     */
    function _0x9772395CC73E8D1F(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x987BE590FB9D41E5 | Since: 1207
     */
    function _0x987BE590FB9D41E5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9945A3E2528A02E8 | Since: 1207
     */
    function _0x9945A3E2528A02E8(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9B4C564BFA7CFF37 | Since: 1207
     */
    function _0x9B4C564BFA7CFF37(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C5BD8C562565CE6 | Since: 1207
     */
    function _0x9C5BD8C562565CE6(crimeType: number | string): void;
    /**
     * Only used in act_bankrobbery01 R* Script
     *
     * Hash: 0x9C8A2BF37E966464 | Since: 1207
     */
    function _0x9C8A2BF37E966464(player: number | string | Player, itemSet: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D5C9A5A3321B128 | Since: 1207
     */
    function _0x9D5C9A5A3321B128(player: number | string | Player): boolean;
    /**
     * Only used in shoprobberies R* Scripts
     *
     * Hash: 0x9EF07CFBB19A9733 | Since: 1207
     */
    function _0x9EF07CFBB19A9733(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB527099D1E1EED49 | Since: 1207
     */
    function _0xB527099D1E1EED49(player: number | string | Player, crimeType: number | string): boolean;
    /**
     * Called together with REPORT_POLICE_SPOTTED_PLAYER
     *
     * Hash: 0xBD944A3D36E992DE | Since: 1207
     */
    function _0xBD944A3D36E992DE(): void;
    /**
     * Only used in rcm_serial_killer1 R* Script
     *
     * Hash: 0xC0DF161950FB101E | Since: 1207
     */
    function _0xC0DF161950FB101E(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC310239ACCCF5579 | Since: 1207
     */
    function _0xC310239ACCCF5579(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5EB2755FA25F1E9 | Since: 1207
     */
    function _0xC5EB2755FA25F1E9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC687A23E166DCF68 | Since: 1207
     */
    function _0xC687A23E166DCF68(): any;
    /**
     * _GET_DISPATCH_*
     *
     * Hash: 0xC7DC5A0A7DF608CB | Since: 1207
     */
    function _0xC7DC5A0A7DF608CB(flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCBFB4951F2E3934C | Since: 1207
     */
    function _0xCBFB4951F2E3934C(player: number | string | Player, data: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6C0A8C7C0B2F82C | Since: 1207
     */
    function _0xD6C0A8C7C0B2F82C(player: number | string | Player): void;
    /**
     * Only used in R* SP Scripts
     * Params: p2 either 1 or 2
     *
     * Hash: 0xD7494DED50C6EF52 | Since: 1207
     */
    function _0xD7494DED50C6EF52(player: number | string | Player, crimeType: number | string): void;
    /**
     * Only used in R* SP Scripts
     * Params: p1 = true, p2 = false
     *
     * Hash: 0xDA1A9ADC4E3D4B16 | Since: 1207
     */
    function _0xDA1A9ADC4E3D4B16(itemSet: any): void;
    /**
     * crimeType: see _REPORT_CRIME
     *
     * Hash: 0xDAEFDFDB2AEECE37 | Since: 1207
     */
    function _0xDAEFDFDB2AEECE37(crimeType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDCF12B89624AAC96 | Since: 1207
     */
    function _0xDCF12B89624AAC96(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDCE8E960D1DE240 | Since: 1207
     */
    function setCantLoseLawThisResponse(enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEA083C16BB91345 | Since: 1207
     */
    function _0xDEA083C16BB91345(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE083BEDA81709891 | Since: 1207
     */
    function _0xE083BEDA81709891(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xE4D6E45F491A66CB | Since: 1207
     */
    function _0xE4D6E45F491A66CB(player: number | string | Player): any;
    /**
     * Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
     * Only used in R* SP Scripts, mostly used in train_fast_travel_core
     *
     * Hash: 0xE94B5E938619712E | Since: 1207
     */
    function _0xE94B5E938619712E(): void;
    /**
     * Only used in R* SP Scripts
     * Params: p1 = 0
     *
     * Hash: 0xE9AC8466ABE484BB | Since: 1207
     */
    function _0xE9AC8466ABE484BB(): void;
    /**
     * Returns p1 value for 0xE4D6E45F491A66CB
     *
     * Hash: 0xE9EB79CBF9C0F58A | Since: 1207
     */
    function _0xE9EB79CBF9C0F58A(player: number | string | Player): number;
    /**
     * _SET_C* - _SET_D*
     *
     * Hash: 0xEDFC6C1FD1C964F5 | Since: 1207
     */
    function _0xEDFC6C1FD1C964F5(player: number | string | Player, crimeType: number | string, bounty: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF46108C50A22B029 | Since: 1207
     */
    function _0xF46108C50A22B029(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF611DE44AEB36A1D | Since: 1207
     */
    function _0xF611DE44AEB36A1D(crimeType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFEBE5AA96BC2E4E | Since: 1207
     */
    function _0xFFEBE5AA96BC2E4E(ped: number | Ped, crimeType: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x10827B5A0AAC56A7 | Since: 1207
     */
    function addWitnessResponse(player: number | string | Player, crimeType: number | string, pedGroup: number | Ped): void;
    /**
     * Only used in rcm_homerob00 R* Script
     *
     * Hash: 0xECE3C34B270428D5 | Since: 1207
     */
    function areAnyLawPedsInvestigating(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0FBFB9AB15F7734 | Since: 1207
     */
    function areInvestigatorsActive(player: number | string | Player, areInvestigatorsActive: boolean): boolean;
    /**
     * Only used in trainrobbery_ambient R* Script
     *
     * Hash: 0xA22C46F16359471C | Since: 1207
     */
    function areLawPedsEnabledForTrain(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BB6DE7D23C60626 | Since: 1207
     */
    function areWitnessesPending(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F9DE75680275C9F | Since: 1207
     */
    function createGuardZone(name: string): void;
    /**
     * Returns true when investigation creation was successful
     *
     * Hash: 0x0D4B77E862475ED3 | Since: 1311
     */
    function createGuardZoneForEntity(guardZoneName: string, entity: number | Entity, pos: Vector3): boolean;
    /**
     * dispatchResponseHash: see common/data/dispatchresponses/..
     *
     * Hash: 0x75CBF20BA47E4F89 | Since: 1207
     */
    function createLawDispatchResponseForCoords(pos: Vector3, dispatchResponseHash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x26D558692B25DD95 | Since: 1207
     */
    function disableGuardZone(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC805EB785824F712 | Since: 1207
     */
    function enableDispatchLaw(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x710448D44A64C213 | Since: 1207
     */
    function enableDispatchLaw2(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x956510F8C36B5C64 | Since: 1207
     */
    function forceLawOnLocalPlayerImmediately(): void;
    /**
     * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
     *
     * Hash: 0x76CF93D4B416B288 | Since: 1207
     */
    function getBountyHunterGlobalCooldown(): number;
    /**
     * Returns bounty (increment) value
     *
     * Hash: 0x35E5E21F9159849C | Since: 1207
     */
    function getCrimeBountyAmountByType(crimeType: number | string): number;
    /**
     * See _REPORT_CRIME
     *
     * Hash: 0x259CE340A8738814 | Since: 1207
     */
    function getHudPlayerCrimeType(player: number | string | Player): number;
    /**
     * Returns the amount of time (probably in game minutes) since last seen by the law / left the wanted radius
     *
     * Hash: 0x717DA2281DF90855 | Since: 1207
     */
    function getTimeSinceLastSeenByLaw(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xD743C4293F47AFAD | Since: 1207
     */
    function isGuardPedInvestigating(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0B67BAD53C35BD9 | Since: 1207
     */
    function lawWitnessResponseTask(pedGroup1: number | Ped, ped: number | Ped, pedGroup2: number | Ped, pos: Vector3, crimeType: number | string): boolean;
    /**
     * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
     *
     * Hash: 0xC61EDEBF16CD9668 | Since: 1207
     */
    function pauseBountyHunterCooldown(): void;
    /**
     * No comment provided
     *
     * Hash: 0x67EBDD958835956C | Since: 1207
     */
    function removeGuardZone(name: string): void;
    /**
     * crimeType:
     * enum eCrimeType : Hash
     * {
     * CRIME_ACCOMPLICE = 0xAF074F6D,
     * CRIME_ARSON = 0x68134DC7,
     * CRIME_ASSAULT = 0x0BADC882,
     * CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
     * CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
     * CRIME_ASSAULT_HORSE = 0xC4736181,
     * CRIME_ASSAULT_LAW = 0xD7466D7C,
     * CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
     * CRIME_BANK_ROBBERY = 0x6A1ADE3D,
     * CRIME_BURGLARY = 0xA54C77E0,
     * CRIME_CHEATING = 0xA2FF1145,
     * CRIME_DISTURBANCE = 0x5011F613,
     * CRIME_EXPLOSION = 0x3EBA7A37,
     * CRIME_EXPLOSION_POISON = 0x91D0A0E1,
     * CRIME_GRAVE_ROBBERY = 0x971EA5AF,
     * CRIME_HASSLE = 0x58488776,
     * CRIME_HIT_AND_RUN = 0xFF0A3CC4,
     * CRIME_HIT_AND_RUN_LAW = 0x064814AF,
     * CRIME_INTIMIDATION = 0x8319FBAB,
     * CRIME_JACK_HORSE = 0x82F7E4A2,
     * CRIME_JACK_VEHICLE = 0x6B981F4C,
     * CRIME_JAIL_BREAK = 0x12C1D589,
     * CRIME_KIDNAPPING = 0x98F908DB,
     * CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
     * CRIME_LASSO_ASSAULT = 0x56EE5D5A,
     * CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
     * CRIME_LOITERING = 0x6629D2F4,
     * CRIME_LOOTING = 0x55AD2BEB,
     * CRIME_MURDER = 0xE28ECE7E,
     * CRIME_MURDER_ANIMAL = 0x48F59A66,
     * CRIME_MURDER_HORSE = 0xC7261D79,
     * CRIME_MURDER_LAW = 0x7797FCE7,
     * CRIME_MURDER_LIVESTOCK = 0x9569C546,
     * CRIME_MURDER_PLAYER = 0xF5ABD6C9,
     * CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
     * CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
     * CRIME_RESIST_ARREST = 0xDF577BA5,
     * CRIME_ROBBERY = 0xA3BEDE4C,
     * CRIME_SELF_DEFENCE = 0xBD6A0AA3,
     * CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
     * CRIME_STOLEN_GOODS = 0x9A949C79,
     * CRIME_THEFT = 0x72ADE410,
     * CRIME_THEFT_HORSE = 0xBE3A5838,
     * CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
     * CRIME_THEFT_VEHICLE = 0x43A9ECA1,
     * CRIME_THREATEN = 0x941C985A,
     * CRIME_THREATEN_LAW = 0x7F908566,
     * CRIME_TRAIN_ROBBERY = 0x647D2A5A,
     * CRIME_TRAMPLE = 0x45DB39D8,
     * CRIME_TRAMPLE_LAW = 0xF00F266B,
     * CRIME_TRAMPLE_PLAYER = 0x75970C15,
     * CRIME_TRESPASSING = 0xAEDE8E35,
     * CRIME_UNARMED_ASSAULT = 0x5098CC5A,
     * CRIME_VANDALISM = 0x80FDC759,
     * CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
     * CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
     * CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
     * CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
     * };
     *
     * Hash: 0xF60386770878A98F | Since: 1207
     */
    function reportCrime(player: number | string | Player, crimeType: number | string, bounty: number, entity: number | Entity, isKnownSuspect: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C4352134B2835FB | Since: 1207
     */
    function reportPlayerLawDispatchResponseOverride(player: number | string | Player, dispatchResponseHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B52BF96E225D230 | Since: 1207
     */
    function setAllowDisabledLawResponses(toggle: boolean): void;
    /**
     * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
     *
     * Hash: 0xF19706B1F8FFA88F | Since: 1207
     */
    function setBountyHunterGlobalCooldown(): void;
    /**
     * Force clears local player's wanted level
     *
     * Hash: 0x55F37F5F3F2475E1 | Since: 1207
     */
    function setBountyHunterPursuitCleared(): void;
    /**
     * Note: This native is only used in multiplayer scripts
     * dispatchResponseHash: see update1/common/data/dispatchresponses/..
     *
     * Hash: 0x009CF9A29972C298 | Since: 1207
     */
    function setCustomLawDispatchResponse(dispatchResponseHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x002BABE0B7D53136 | Since: 1207
     */
    function setDispatchMultiplierOverride(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E7BF59F89FC6C6D | Since: 1207
     */
    function setGuardZonePosition(name: string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F9005E2EA4E5EE4 | Since: 1207
     */
    function setGuardZonePosition2(name: string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8A74AA79FB67159 | Since: 1207
     */
    function setGuardZoneVolumeRegistrationEnd(name: string, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C598A930F471938 | Since: 1207
     */
    function setGuardZoneVolumeRegistrationStart(name: string, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x35815F372D43E1E5 | Since: 1207
     */
    function setGuardZoneVolumeRestricted(name: string, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1B0E6301E2E02A6 | Since: 1207
     */
    function setGuardZoneVolumeThreat(name: string, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD3E07C37A7C1ADC | Since: 1207
     */
    function setGuardZoneVolumeWarning(name: string, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DE82BC774F3B862 | Since: 1207
     */
    function setLawDisabled(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BBDCB8DF789EBC1 | Since: 1207
     */
    function setLawRbsVolume(player: number | string | Player): void;
    /**
     * enum eLawRegion : Hash
     * {
     * LAW_DISPATCH_REGION_NONE = 0,
     * LAW_REGION_AGUASDULCES = 0x2F573EBE,
     * LAW_REGION_ANNESBURG = 0x68CAFD50,
     * LAW_REGION_ARMADILLO = 0xF0B90756,
     * LAW_REGION_BAYOU_NWA = 0x80966B1C,
     * LAW_REGION_BEECHERS_HOPE = 0xE2544977,
     * LAW_REGION_BIG_VALLEY = 0x3DF1559A,
     * LAW_REGION_BLACKWATER = 0x60D4886D,
     * LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
     * LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
     * LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
     * LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
     * LAW_REGION_CALIGA_HALL = 0xF3FE5080,
     * LAW_REGION_CORNWALL = 0xCC4672FA,
     * LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
     * LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
     * LAW_REGION_FORT_WALLACE = 0x0AF25192,
     * LAW_REGION_GREAT_PLAINS = 0xB20573FA,
     * LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
     * LAW_REGION_GRIZZLIES = 0xBB936031,
     * LAW_REGION_GUAMA = 0x200DFF42,
     * LAW_REGION_HEARTLANDS = 0xAD14DA65,
     * LAW_REGION_LAGRAS = 0xC64808D3,
     * LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
     * LAW_REGION_MANICATO = 0x039DB6BF,
     * LAW_REGION_MANZANITA_POST = 0x895E580E,
     * LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
     * LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
     * LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
     * LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
     * LAW_REGION_OUTLAW3 = 0x97A02FC1,
     * LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
     * LAW_REGION_RHODES = 0x89222928,
     * LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
     * LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
     * LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
     * LAW_REGION_SAINT_DENIS = 0x5CF7C268,
     * LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
     * LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
     * LAW_REGION_SISIKA = 0x2B6BBA52,
     * LAW_REGION_STRAWBERRY = 0xDD932620,
     * LAW_REGION_TALL_TREES = 0xD939B758,
     * LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
     * LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
     * LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
     * LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
     * LAW_REGION_VALENTINE = 0xA7A3F0C3,
     * LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
     * LAW_REGION_VAN_HORN = 0x619B528E,
     * LAW_REGION_WAPITI = 0x7A976E02
     * };
     *
     * Hash: 0x4752F68EB7F2D280 | Since: 1207
     */
    function setLawRegion(player: number | string | Player, lawRegionHash: number | string, stateHash: number | string): void;
    /**
     * behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
     *
     * Hash: 0x819ADD5EF1742F47 | Since: 1207
     */
    function setPedLawBehaviour(ped: number | Ped, behaviour: number): void;
}
export declare namespace localization {
    /**
     * 0 = american (en-US)
     * 1 = french (fr-FR)
     * 2 = german (de-DE)
     * 3 = italian (it-IT)
     * 4 = spanish (es-ES)
     * 5 = brazilian (pt-BR)
     * 6 = polish (pl-PL)
     * 7 = russian (ru-RU)
     * 8 = korean (ko-KR)
     * 9 = chinesetrad (zh-TW)
     * 10 = japanese (ja-JP)
     * 11 = mexican (es-MX)
     * 12 = chinesesimp (zh-CN)
     *
     * Hash: 0xDB917DA5C6835FCC | Since: 1207
     */
    function getCurrentLanguage(): number;
    /**
     * 0 = DATE_FORMAT_DMY
     * 1 = DATE_FORMAT_MDY
     * 2 = DATE_FORMAT_YMD
     *
     * Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
     *
     * Hash: 0x76E30B799EBEEA0F | Since: 1207
     */
    function localizationGetSystemDateType(): number;
    /**
     * Same return values as GET_CURRENT_LANGUAGE
     *
     * Hash: 0x3C1A05F86AE6ACB5 | Since: 1207
     */
    function localizationGetSystemLanguage(): number;
    /**
     * Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
     * _DOES_*
     *
     * Hash: 0x45D50415E4D885FF | Since: 1207
     */
    function doesCurrentLanguageSupportCondensedStyle(): boolean;
}
export declare namespace map {
    /**
     * No comment provided
     *
     * Hash: 0x64C59DD6834FA942 | Since: 1207
     */
    function addPointToGpsMultiRoute(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E6E64788C07D2E0 | Since: 1207
     */
    function allowSonarBlips(toggle: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
     *
     * Hash: 0x554D9D53F696D002 | Since: 1207
     */
    function blipAddForCoords(blipHash: number | string, pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x23F74C2FDA6E7C61 | Since: 1207
     */
    function blipAddForEntity(blipHash: number | string, entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xA486008892065FB9 | Since: 1207
     */
    function blipAddForPickupPlacement(blipHash: number | string, pickup: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x45F13B7E0A15C880 | Since: 1207
     */
    function blipAddForRadius(blipHash: number | string, pos: Vector3, radius: number): number;
    /**
     * https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
     *
     * Old name: _BLIP_SET_MODIFIER
     *
     * Hash: 0x662D364ABF16DE2F | Since: 1207
     */
    function blipAddModifier(blip: number, modifierHash: number | string): boolean;
    /**
     * If modifierHash is 0, ALL modifiers will be removed.
     *
     * Hash: 0xB059D7BD3D78C16F | Since: 1207
     */
    function blipRemoveModifier(blip: number, modifierHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1EAA5674B4D181C5 | Since: 1207
     */
    function clearGpsCustomRoute(): void;
    /**
     * Clears the GPS flags.
     *
     * Hash: 0x4D3771237C79FF41 | Since: 1207
     */
    function clearGpsFlags(): void;
    /**
     * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
     *
     * Hash: 0x9E0AB9AAEE87CE28 | Since: 1207
     */
    function clearGpsMultiRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x08FDC6F796E350D1 | Since: 1207
     */
    function clearGpsPlayerWaypoint(): void;
    /**
     * If Minimap / Radar should be displayed.
     *
     * Hash: 0x1B3DA717B9AFF828 | Since: 1207
     */
    function displayRadar(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD82FA174080B3B1 | Since: 1207
     */
    function doesBlipExist(blip: number): boolean;
    /**
     * Doesn't actually return anything.
     *
     * Hash: 0xEE1C7BA69BB74B08 | Since: 1207
     */
    function forceSonarBlipsThisFrame(): any;
    /**
     * No comment provided
     *
     * Hash: 0x201C319797BDA603 | Since: 1207
     */
    function getBlipCoords(blip: number): Vector3;
    /**
     * Returns the Blip handle of given Entity.
     *
     * Hash: 0x6D2C41A8BD6D6FD0 | Since: 1207
     */
    function getBlipFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CD2889B2B381D45 | Since: 1207
     */
    function getMainPlayerBlipId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x46534526B9CD2D17 | Since: 1207
     */
    function isBlipOnMinimap(blip: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x202B1BBFC6AB5EE4 | Since: 1207
     */
    function isWaypointActive(): boolean;
    /**
     * Locks the minimap to the specified angle in integer degrees.
     *
     * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
     *
     * Hash: 0x0BFD145EF819FB3A | Since: 1207
     */
    function lockMinimapAngle(angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2C3C9DA47AAA54A | Since: 1207
     */
    function removeBlip(blip: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB3CB3386C775D72 | Since: 1207
     */
    function resetMinimapFow(hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4FF674F5E23D49CE | Since: 1207
     */
    function setBlipCoords(blip: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x0DF2B55F717DDB10 | Since: 1207
     */
    function setBlipFlashes(blip: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02FF4CF43B7209D1 | Since: 1207
     */
    function setBlipFlashTimer(blip: number, blipType: number, blipHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A062D6D7C0B2C2C | Since: 1207
     */
    function setBlipNameFromTextFile(blip: number, textLabel: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x093DD5A31BC2B459 | Since: 1207
     */
    function setBlipNameToPlayerName(blip: number, player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x6049966A94FBE706 | Since: 1207
     */
    function setBlipRotation(blip: number, rotation: number): void;
    /**
     * only works for BLIP_ADD_FOR_RADIUS AND BLIP_ADD_FOR_AREA, this native works as a radius not really a scale
     *
     * Hash: 0xD38744167B2FA257 | Since: 1207
     */
    function setBlipScale(blip: number, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x74F74D3207ED525C | Since: 1207
     */
    function setBlipSprite(blip: number, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6CEF599FC470B33 | Since: 1207
     */
    function setGpsCustomRouteRender(): void;
    /**
     * https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
     *
     * Hash: 0x5DE61C90DDECFA2D | Since: 1207
     */
    function setGpsFlags(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4426D65E029A4DC0 | Since: 1207
     */
    function setGpsMultiRouteRender(toggle: boolean): void;
    /**
     * Up to eight coordinates may be revealed per frame
     *
     * Hash: 0x73348402566ECB6E | Since: 1207
     */
    function setMinimapFowRevealCoordinate(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x63CBBD6CA6F321F9 | Since: 1207
     */
    function setMinimapFowRevealVolume(volume: number): void;
    /**
     * Reveals the entire minimap (FOW = Fog of War)
     *
     * Hash: 0x4B8F743A4A6D2FF8 | Since: 1207
     */
    function setMinimapHideFow(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8EBBAE986FB5457 | Since: 1207
     */
    function setRadarAsExteriorThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCAF6489DA2C8DD9E | Since: 1207
     */
    function setRadarZoom(zoomLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA8C41E8020D3439 | Since: 1207
     */
    function setWaypointOff(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D3D15AF7BCAAF83 | Since: 1207
     */
    function startGpsMultiRoute(colorNameHash: number | string, onFoot: boolean, inVehicle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x72DD432F3CDFC0EE | Since: 1207
     */
    function triggerSonarBlip(typeHash: number | string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x5373DE8E179BC2A0 | Since: 1207
     */
    function unlockMinimapAngle(): void;
    /**
     * Clear blip data. It must be used before RemoveBlip I'm pretty sure that blips are handled internally with databinding. This function should then allow you to clear blip container and therefore free up memory?.
     *
     * Hash: 0x01B928CA2E198B01 | Since: 1207
     */
    function clearBlip(blipid: number): any;
    /**
     * It adds blip a icon to active prompts like from scenarios or pickups without the need to use lockon
     *
     * Hash: 0x1726963E6049DB53 | Since: 1207
     */
    function setBlipIconOnEntityActivePrompt(entity: number | Entity, blipIcon: number | string): void;
    /**
     * Not official native name
     * Removes the blip from an entity and makes it static on the map, try it on GetMainPlayerBlipId() for a demonstration
     *
     * Hash: 0x250C75EB1728CC0D | Since: 1207
     */
    function blipDetachFromEntity(blip: number): void;
    /**
     * checks if the entity lockon prompt contains an icon
     *
     * Hash: 0x3CB8859F04763C78 | Since: 1207
     */
    function isBlipIconOnLockonEntityPrompt(entity: number | Entity, blipId: number): boolean;
    /**
     * will remove the blip icon from the entity lockon prompt, use 0 for p1
     *
     * Hash: 0x44813684F72B563C | Since: 1207
     */
    function clearBlipIconFromLockonEntityPrompt(entity: number | Entity): void;
    /**
     * will add a blip icon to the entity lockon prompt that you specify
     *
     * Hash: 0x7563CBCA99253D1A | Since: 1207
     */
    function setBlipIconToLockonEntityPrompt(entity: number | Entity, blipIcon: number | string): void;
    /**
     * Clears the previously set coordinates for the pause map view, removing any specified focal point and radius that were set using `SetPausemapCoordsWithRadius - 0xE0884C184728C75B`
     *
     * Hash: 0x7C9F4CDF402CA82A | Since: 1311
     */
    function clearPausemapCoords(): void;
    /**
     * adds the entity blip icon to the entity lockon prompt if wrong param will remove the icon if had any
     *
     * Hash: 0x97F6F158CC5B5CA2 | Since: 1207
     */
    function setEntityBlipIconToLockonEntityPrompt(entity: number | Entity, blipId: number): void;
    /**
     *
     * in the decompiles this doesnt seem to ever be executed the param needed needs to be above 0 but its always passed as 0
     * removes the icon from lockon prompt
     *
     * Hash: 0xBB68D4D3CA3DE402 | Since: 1207
     */
    function removeBlipIconFromEntityLockonPrompt(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3F58E9316B7FC2A | Since: 1207
     */
    function _0xD3F58E9316B7FC2A(): void;
    /**
     * Unlike `GET_WAYPOINT_COORDS - 0x29B30D07C3F7873B`, which returns a single value, this native returns the x and y coordinates of the waypoint separately as floats from pointer. To retrieve each coordinate, `Citizen.PointerValueFloat()` must be used with this function.
     *
     * Hash: 0xF08E42BFA46BDFF8 | Since: 1207
     */
    function getWaypointPosition(x: number, y: number): any;
    /**
     * Checks if the GPS route to the waypoint is navigable along a road. If a route exists but there is no valid road path, this function returns false.
     *
     * Hash: 0xF47A1EB2A538A3A3 | Since: 1207
     */
    function isGpsRouteOnRoad(): boolean;
    /**
     * It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
     *
     * Hash: 0xDEEDE7C41742E011 | Since: 1207
     */
    function abandonBlip(blip: number): void;
    /**
     * list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
     * variations parameter are the interior locations you see on the map like these bellow
     * variation 0 https://i.imgur.com/jkLhn3Z.png
     * variation 2  https://i.imgur.com/eKV0Tcm.png
     * variation 4 https://i.imgur.com/rjwOgEH.png
     * there are more and you can find them in the decompiles
     *
     * Hash: 0x1392105DA88BBFFB | Since: 1207
     */
    function addPropToMinimap(minimapProp: number | string, x: number, y: number, rotation: number, variation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC174ADBCB611ECC | Since: 1207
     */
    function blipAddForArea(blipHash: number | string, pos: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E593DF9C2962EC6 | Since: 1207
     */
    function blipAddForStyle(styleHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA6EF0C54A3443E70 | Since: 1207
     */
    function blipAddForVolume(blipHash: number | string, volume: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBD62D98799A3DAF0 | Since: 1207
     */
    function blipAddStyle(blip: number, styleHash: number | string): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
     * Removes any existing modifiers and sets the style.
     *
     * Hash: 0xEDD964B7984AC291 | Since: 1207
     */
    function blipSetStyle(blip: number, styleHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9FA00E2FC134A9D0 | Since: 1207
     */
    function doesEntityHaveBlip(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FDA2B79AEEE351C | Since: 1207
     */
    function findClosestGpsPosition(pos: Vector3, outPosition: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x29B30D07C3F7873B | Since: 1207
     */
    function getWaypointCoords(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xA1B4052C2A3DCC1E | Since: 1207
     */
    function hideActivePointsOfInterest(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9F676788F8D5E1E | Since: 1207
     */
    function isBlipAttachedToAnyEntity(blip: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6786D7AFAC3162B3 | Since: 1207
     */
    function mapDisableRegionBlip(regionHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA98246C7A3C2189 | Since: 1207
     */
    function mapDiscoverySetEnabled(discoveryHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8C7162AB2E2AF45 | Since: 1207
     */
    function mapDiscoverRegion(discoveryHash: number | string): void;
    /**
     * regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
     *
     * Hash: 0x563FCB6620523917 | Since: 1207
     */
    function mapEnableRegionBlip(regionHash: number | string, styleHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F81EA4275D39D6F | Since: 1207
     */
    function mapIsDiscoveryActive(discoveryHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE38450DBCBC70E3D | Since: 1207
     */
    function mapIsRegionHighlightedWithStyle(regionHash: number | string, styleHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE057FEA9A22EB3EE | Since: 1207
     */
    function removePropFromMinimap(minimapProp: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8096DF9B87246E3 | Since: 1207
     */
    function revealMinimapFow(hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9CB1A1623062F402 | Since: 1207
     */
    function setBlipName(blip: number, name: string): void;
    /**
     * Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
     * Hash p1 seems to be unused, always 0
     *
     * Hash: 0x63E7279D04160477 | Since: 1207
     */
    function setFowUpdatePlayerOverride(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5A7F70B7C0F3271 | Since: 1207
     */
    function setMinimapFowOverrideRevealScale(scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x632AA10BF7EA53D3 | Since: 1207
     */
    function setMinimapFowShouldUpdate(toggle: boolean): void;
    /**
     * hash can be the hash of "guarma" or "world".
     *
     * Hash: 0xA657EC9DBC6CC900 | Since: 1207
     */
    function setMinimapZone(zone: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0884C184728C75B | Since: 1207
     */
    function setPausemapCoordsWithRadius(pos: Vector3, radius: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
     * configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
     * p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
     *
     * Hash: 0x9C113883487FD53C | Since: 1207
     */
    function setRadarConfigType(configHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FBB838AEA30C1D8 | Since: 1207
     */
    function showActivePointsOfInterest(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B44F13D888F770D | Since: 1207
     */
    function startGpsCustomRouteFromWaypointRecordingRoute(waypointRecording: string, point: number, numPoints: number, colorNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C7A2289A5C4D7C9 | Since: 1207
     */
    function triggerSonarBlipOnEntity(typeHash: number | string, entity: number | Entity): void;
}
export declare namespace minigame {
    /**
     * No comment provided
     *
     * Hash: 0x012027C28F421F46 | Since: 1207
     */
    function _0x012027C28F421F46(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0876326238914A3F | Since: 1207
     */
    function _0x0876326238914A3F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x10342CC82E8356E9 | Since: 1207
     */
    function _0x10342CC82E8356E9(): any;
    /**
     * No comment provided
     *
     * Hash: 0x15E90B6A993017AA | Since: 1207
     */
    function _0x15E90B6A993017AA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x18A0D48DF9211C07 | Since: 1207
     */
    function _0x18A0D48DF9211C07(): void;
    /**
     * No comment provided
     *
     * Hash: 0x32A7C216344D623B | Since: 1207
     */
    function _0x32A7C216344D623B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x39654E1F68B78287 | Since: 1207
     */
    function _0x39654E1F68B78287(): any;
    /**
     * No comment provided
     *
     * Hash: 0x398066F893149856 | Since: 1207
     */
    function _0x398066F893149856(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3AE451860F03CA8A | Since: 1207
     */
    function _0x3AE451860F03CA8A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3B31732FADE5BAF3 | Since: 1207
     */
    function _0x3B31732FADE5BAF3(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3DF7EE3A76185108 | Since: 1207
     */
    function _0x3DF7EE3A76185108(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EECAADAB0D9FE29 | Since: 1207
     */
    function _0x3EECAADAB0D9FE29(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3F4FD4BED07AB8C4 | Since: 1207
     */
    function _0x3F4FD4BED07AB8C4(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3FFE60DD8A936551 | Since: 1207
     */
    function _0x3FFE60DD8A936551(): any;
    /**
     * No comment provided
     *
     * Hash: 0x455ECCA0715C507F | Since: 1207
     */
    function _0x455ECCA0715C507F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x578907F59BA01B6D | Since: 1207
     */
    function _0x578907F59BA01B6D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x580F34C726387226 | Since: 1207
     */
    function _0x580F34C726387226(): any;
    /**
     * No comment provided
     *
     * Hash: 0x58521E6DCDE97D74 | Since: 1207
     */
    function _0x58521E6DCDE97D74(): void;
    /**
     * No comment provided
     *
     * Hash: 0x644439B5387EE57E | Since: 1207
     */
    function _0x644439B5387EE57E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6480723D3BE535B6 | Since: 1207
     */
    function _0x6480723D3BE535B6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x910B088E51A511AC | Since: 1207
     */
    function _0x910B088E51A511AC(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9DD95B405AB4983E | Since: 1207
     */
    function _0x9DD95B405AB4983E(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA2DB3C6270C122E3 | Since: 1207
     */
    function _0xA2DB3C6270C122E3(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBEA7D3CB47E1479C | Since: 1207
     */
    function _0xBEA7D3CB47E1479C(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD39D32EB3B52DD83 | Since: 1207
     */
    function _0xD39D32EB3B52DD83(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDF728C5AE137FC14 | Since: 1207
     */
    function _0xDF728C5AE137FC14(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE1F365C4C8F259D8 | Since: 1207
     */
    function _0xE1F365C4C8F259D8(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE53A308AC35877A8 | Since: 1207
     */
    function _0xE53A308AC35877A8(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEC819D612038EF4B | Since: 1207
     */
    function _0xEC819D612038EF4B(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF6DE98516FD3AC9B | Since: 1207
     */
    function _0xF6DE98516FD3AC9B(): void;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0x399E6CD12FC8CA89 | Since: 1207
     */
    function dominoesBuyIn(): any;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0xB79A29B33BF29BA5 | Since: 1207
     */
    function dominoesPlaceDomino(): any;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0xE26AEE7E67D9E21D | Since: 1207
     */
    function dominoesRequestValidPlacements(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDF728C5AE137FC13 | Since: 1207
     */
    function minigameGetNextEvent(): any;
    /**
     * No comment provided
     *
     * Hash: 0x578907F59BA01B6C | Since: 1207
     */
    function minigameGetNextEventType(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2A0C4736AC5AF0CE | Since: 1207
     */
    function minigameIsConnectedToServer(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9105A4A2556FA937 | Since: 1207
     */
    function minigameIsRequestPending(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8593A8CB0ED2C3B4 | Since: 1207
     */
    function minigameIsSeatOccupied(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF5446E47941E654C | Since: 1207
     */
    function minigameLeaveTable(): any;
    /**
     * No comment provided
     *
     * Hash: 0x833E03BAEBADC4B0 | Since: 1207
     */
    function minigamePopNextEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6AC6085D8D6C004 | Since: 1207
     */
    function minigameRequestSeatAtTable(data: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4D610EA5A1FDE74 | Since: 1207
     */
    function pokerBuyIn(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8DED681B161EBD78 | Since: 1207
     */
    function pokerCall(): any;
    /**
     * No comment provided
     *
     * Hash: 0x49A045628D9B1B86 | Since: 1207
     */
    function pokerCheck(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3DFAB7D9BB45B5BE | Since: 1207
     */
    function pokerFold(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2D20E12E1990D584 | Since: 1207
     */
    function pokerGetGameSettingsForId(): any;
    /**
     * No comment provided
     *
     * Hash: 0xECCF45A79A17BB96 | Since: 1207
     */
    function pokerRaise(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2F2131DB0A8B02DC | Since: 1207
     */
    function pokerReveal(): any;
}
export declare namespace misc {
    /**
     * No comment provided
     *
     * Hash: 0x134549B388167CBF | Since: 1207
     */
    function absf(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0C214D5B8A38C828 | Since: 1207
     */
    function absi(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x586690F0176DC575 | Since: 1207
     */
    function acos(): number;
    /**
     * Appears to remove stealth kill action from memory (?)
     *
     * Hash: 0x7ACF124C12A2B045 | Since: 1207
     */
    function actionManagerEnableAction(hash: number | string, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD0759658268FD8E | Since: 1207
     */
    function actionManagerIsActionEnabled(hash: number | string): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x91D657230BC208D2 | Since: 1207
     */
    function activityFeedActionStartWithCommandLine(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x1694A053DFB61A34 | Since: 1207
     */
    function activityFeedActionStartWithCommandLineAdd(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x9935F76407C32539 | Since: 1207
     */
    function activityFeedAddSubstringToCaption(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xCC7FC854B956A128 | Since: 1207
     */
    function activityFeedCreate(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xB16FC7B364D86585 | Since: 1207
     */
    function activityFeedPost(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EBDA1A3B8CB5EF7 | Since: 1207
     */
    function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, pedDensity: number, trafficDensity: number): number;
    /**
     * Params: p3 is 0 in R* Script utopia2
     *
     * Hash: 0xE4EE55E63FA9AF45 | Since: 1207
     */
    function addTacticalNavMeshPoint(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3852F22AB713A1F | Since: 1207
     */
    function areStringsEqual(string1: string, string2: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E3C15D296C15583 | Since: 1207
     */
    function asin(): number;
    /**
     * No comment provided
     *
     * Hash: 0x503054DED0B78027 | Since: 1207
     */
    function atan(): number;
    /**
     * No comment provided
     *
     * Hash: 0x965B220A066E3F07 | Since: 1207
     */
    function atan2(): number;
    /**
     * dispatchService: see ENABLE_DISPATCH_SERVICE
     *
     * Hash: 0x66947E61A44DE2C6 | Since: 1207
     */
    function blockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
    /**
     * Old name: _CANCEL_ONSCREEN_KEYBOARD
     *
     * Hash: 0x58A39BE597CE99CD | Since: 1207
     */
    function cancelOnscreenKeyboard(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4D83115C1E02F8A | Since: 1207
     */
    function clearAngledAreaOfVehicles(): void;
    /**
     * Possible flag names:
     * ALL_BASE = 0,
     * PROJECTILES = 1,
     * BROADCAST = 524288,
     * AMBIENT_POPULATION = 1048576
     *
     * Hash: 0x3B882A96EA77D5B1 | Since: 1207
     */
    function clearArea(pos: Vector3, radius: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D1D4A3602B6AD4E | Since: 1207
     */
    function clearBit(address: number, offset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x80A398F16FFE3CC3 | Since: 1207
     */
    function clearOverrideWeather(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD93B6516C6878267 | Since: 1207
     */
    function clearTacticalNavMeshPoints(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD85DFE5C131E4AE9 | Since: 1207
     */
    function clearWeatherTypePersist(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBFBB74A15EFC149B | Since: 1207
     */
    function compareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
    /**
     * Old name: _COPY_MEMORY
     *
     * Hash: 0xF7AC7DC0DEE7C9BE | Since: 1207
     */
    function copyScriptStruct(dst: any, src: any, size: number): void;
    /**
     * dispatchService: see ENABLE_DISPATCH_SERVICE
     *
     * Hash: 0x3F892CAF67444AE7 | Since: 1207
     */
    function createIncident(dispatchService: number, pos: Vector3, numUnits: number, radius: number, outIncidentID: number): boolean;
    /**
     * Delete an incident with a given id.
     *
     * Hash: 0x5CFD0F0D6AAE0AEE | Since: 1207
     */
    function deleteIncident(incidentId: number): void;
    /**
     * disables prompt eat
     *
     * Hash: 0x40D72189F46D2E15 | Since: 1207
     */
    function disableLootingCompositeLootableThisFrame(compositeId: number, disable: boolean): void;
    /**
     * enum eOnscreenKeyboardTextType
     * {
     * KTEXTTYPE_INVALID = -1,
     * KTEXTTYPE_DEFAULT,
     * KTEXTTYPE_EMAIL,
     * KTEXTTYPE_PASSWORD,
     * KTEXTTYPE_NUMERIC,
     * KTEXTTYPE_ALPHABET,
     * KTEXTTYPE_GAMERTAG,
     * KTEXTTYPE_FILENAME,
     * KTEXTTYPE_COUNT
     * };
     *
     * Hash: 0x044131118D8DB3CD | Since: 1207
     */
    function displayOnscreenKeyboard(textType: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x03BA619C81A646B3 | Since: 1207
     */
    function doesPopMultiplierAreaExist(id: number): boolean;
    /**
     * enum DispatchType
     * {
     * DT_Invalid,
     * DT_PoliceAutomobile,
     * DT_PoliceHelicopter,
     * DT_FireDepartment,
     * DT_SwatAutomobile,
     * DT_AmbulanceDepartment,
     * DT_PoliceRiders,
     * DT_PoliceVehicleRequest,
     * DT_PoliceRoadBlock,
     * DT_PoliceAutomobileWaitPulledOver,
     * DT_PoliceAutomobileWaitCruising,
     * DT_Gangs,
     * DT_SwatHelicopter,
     * DT_PoliceBoat,
     * DT_ArmyVehicle,
     * DT_OnFoot,
     * DT_PoliceDogs
     * };
     *
     * Hash: 0x50E52637EF70EF77 | Since: 1207
     */
    function enableDispatchService(dispatchService: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBC9A21F6A2A679C | Since: 1207
     */
    function fireSingleBullet(args: any): void;
    /**
     * creates single lightning+thunder at random position
     *
     * Hash: 0x369DB5B2510FA080 | Since: 1207
     */
    function forceLightningFlash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4CABE596D632E4B0 | Since: 1207
     */
    function gameFrameworkManagerInit(transitionMode: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD0DFE1C486097BBB | Since: 1207
     */
    function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
    /**
     * Returns value of the '-benchmarkIterations' command line option.
     *
     * Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
     *
     * Hash: 0x22FC52CF470CC98D | Since: 1207
     */
    function getBenchmarkIterations(): number;
    /**
     * Returns value of the '-benchmarkPass' command line option.
     *
     * Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
     *
     * Hash: 0x9297DACF3A2CDFF7 | Since: 1207
     */
    function getBenchmarkPass(): number;
    /**
     * No comment provided
     *
     * Hash: 0x68E1352AF48F905D | Since: 1207
     */
    function getBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x83ACC65D9ACEC5EF | Since: 1207
     */
    function getClosestPointOnLine(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xD73C960A681052DF | Since: 1207
     */
    function getCoordsOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number, outCoords: Vector3, mustBeOwnedByThisPed: boolean): boolean;
    /**
     * Params: percentWeather2: 0f - 0.75f in R* Scripts
     *
     * Old name: _GET_WEATHER_TYPE_TRANSITION
     *
     * Hash: 0x0AC679B2342F14F2 | Since: 1207
     */
    function getCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number): void;
    /**
     * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
     *
     * `Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.`
     *
     * Hash: 0x0BE7F4E3CDBAFB28 | Since: 1207
     */
    function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x77DFA958FCF100C1 | Since: 1207
     */
    function getFrameCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5E72022914CE3C38 | Since: 1207
     */
    function getFrameTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F67E8ECA7D3F667 | Since: 1207
     */
    function getGameTimer(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2A29CA9A6319E6AB | Since: 1207
     */
    function getGroundZAndNormalFor3dCoord(pos: Vector3, groundZ: number, normal: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24FA4267BB8D2431 | Since: 1207
     */
    function getGroundZFor3dCoord(pos: Vector3, groundZ: number): boolean;
    /**
     * Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
     * Note: this implementation is case-insensitive.
     *
     * Hash: 0xFD340785ADF8CFB7 | Since: 1207
     */
    function getHashKey(string: string): number;
    /**
     * dx = x1 - x2
     * dy = y1 - y2
     *
     * Hash: 0x38D5202FF9271C62 | Since: 1207
     */
    function getHeadingFromVector2d(dx: number, dy: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAB6A04CEC428258B | Since: 1207
     */
    function getLinePlaneIntersection(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB15CD1CF58771DE1 | Since: 1207
     */
    function getMissionFlag(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDCB8DDD5D054A7E7 | Since: 1207
     */
    function getModelDimensions(modelHash: number | string, minimum: Vector3, maximum: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x40DC2907A9697EF7 | Since: 1207
     */
    function getNumberOfFreeStacksOfThisSize(stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB0CE5E5ED8BB3581 | Since: 1207
     */
    function getNumberOfMicrosecondsSinceLastCall(): number;
    /**
     * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
     *
     * Hash: 0xAFB4CF58A4A292B1 | Since: 1207
     */
    function getOnscreenKeyboardResult(): string;
    /**
     * No comment provided
     *
     * Hash: 0x9578986A6105A6AD | Since: 1207
     */
    function getProjectileOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number, outCoords: Vector3, outProjectile: number | Object, mustBeOwnedByThisPed: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x931B5F4CC130224B | Since: 1207
     */
    function getRainLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x924D54E5698AE3E0 | Since: 1207
     */
    function getRandomEventFlag(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE29F927A961F8AAA | Since: 1207
     */
    function getRandomFloatInRange(startRange: number, endRange: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD53343AA4FB7DD28 | Since: 1207
     */
    function getRandomIntInRange(startRange: number, endRange: number): number;
    /**
     * Returns GET_GAME_TIMER() / 1000
     * Only used in rcm_pearson1.ysc
     *
     * Hash: 0x2E036F0480B8BF02 | Since: 1207
     */
    function getRealWorldTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x63219768C586667C | Since: 1207
     */
    function getScriptTimeWithinFrameInMicroseconds(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E5D727041BE1709 | Since: 1207
     */
    function getSnowLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBE7F225417E35A7C | Since: 1207
     */
    function getSystemTime(): number;
    /**
     * Old name: _GET_BENCHMARK_TIME
     *
     * Hash: 0x3F3172FEAE3AFE1C | Since: 1207
     */
    function getSystemTimeStep(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF703E82F3FE14A5F | Since: 1207
     */
    function getWindDirection(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xFFB7E74E041150A4 | Since: 1207
     */
    function getWindSpeed(): number;
    /**
     * p3 - possibly radius?
     *
     * Hash: 0xC153E5BCCF411814 | Since: 1207
     */
    function hasBulletImpactedInArea(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3B6A4C05FB2B33AC | Since: 1207
     */
    function hasBulletImpactedInBox(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6C9FF40FF1B69F8F | Since: 1207
     */
    function ignoreNextRestart(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x708DF841B8F27AA2 | Since: 1207
     */
    function informCodeOfContentIdOfCurrentUgcMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4ED6CFDFE8D4131A | Since: 1207
     */
    function isBitSet(address: number, offset: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9D09D8493747CF02 | Since: 1207
     */
    function isBulletInAngledArea(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC652FD308772D79E | Since: 1207
     */
    function isBulletInArea(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC128137C52152741 | Since: 1207
     */
    function isBulletInBox(): boolean;
    /**
     * Hardcoded to return false.
     * Checks for XBOXONE Game Build.
     *
     * Hash: 0xD1CCC2A2639D325F | Since: 1207
     */
    function isDurangoVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9E7DBB39080640B | Since: 1207
     */
    function isGameSessionStateMachineIdle(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x39F2B1BAD412246A | Since: 1207
     */
    function isIncidentValid(incidentId: number): boolean;
    /**
     * magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
     * Hardcoded to return false.
     *
     * Hash: 0x5FC9357C26DAEFCE | Since: 1207
     */
    function isMagDemo1Active(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF4D8BCD052E7EA1B | Since: 1207
     */
    function isMinigameInProgress(): boolean;
    /**
     * Hardcoded to return false.
     * Checks for PS4 Game Build.
     *
     * Hash: 0x88CFAE250D3E0C71 | Since: 1207
     */
    function isOrbisVersion(): boolean;
    /**
     * Hardcoded to return true.
     *
     * Hash: 0xB0FB6CFAA5A1C833 | Since: 1207
     */
    function isPcVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x825CA3ED43831015 | Since: 1207
     */
    function isPositionOccupied(pos: Vector3, range: number): boolean;
    /**
     * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
     *
     * ownedByPlayer = only projectiles fired by the player will be detected.
     *
     * Hash: 0x05B0061EFDFC8941 | Since: 1207
     */
    function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x928431F4133CD3D4 | Since: 1207
     */
    function isProjectileTypeInAngledArea(): boolean;
    /**
     * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
     *
     * Hash: 0x04965FB9E14235C7 | Since: 1207
     */
    function isProjectileTypeInArea(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number, weaponType: number | string, isPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF51C9BAAD9ED64C4 | Since: 1207
     */
    function isProjectileTypeWithinDistance(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x268AB8420A9E4ED7 | Since: 1207
     */
    function isStadiaVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x602102324604D96B | Since: 1207
     */
    function isStringNull(string: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2CF12F9ACF18F048 | Since: 1207
     */
    function isStringNullOrEmpty(string: string): boolean;
    /**
     * Returns true if the entire string consists only of space characters.
     *
     * Hash: 0x375F5870A7B8BEC1 | Since: 1207
     */
    function isStringNullOrEmptyOrSpaces(string: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3D0EAC6385DD6100 | Since: 1207
     */
    function networkSetScriptIsSafeForNetworkGame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CB71EAA1429A358 | Since: 1207
     */
    function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2C69E11A37B5AF0 | Since: 1207
     */
    function overrideSaveHouse(override: boolean, pos: Vector3, heading: number, isAutosave: boolean, returnCoords: Vector3, returnHeading: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x66AB6B6C7E72F393 | Since: 1207
     */
    function pauseDeathArrestRestart(toggle: boolean): void;
    /**
     * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
     *
     * Hash: 0xEA6DC3A8ADD2005F | Since: 1207
     */
    function populateNow(): void;
    /**
     * p3 is usually the same value of radius
     * p8 determines whether the ILO prompt is a lock on prompt with RMB
     *
     * Hash: 0x870708A6E147A9AD | Since: 1207
     */
    function registerInteractionLockonPrompt(entity: number | Entity, text: string, radius: number, flag: number, prompt: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x49F751F6868DDC5B | Since: 1207
     */
    function removeDispatchSpawnBlockingArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x88CB484364EFB37A | Since: 1207
     */
    function removePopMultiplierArea(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7817264BC4B6377 | Since: 1207
     */
    function resetDispatchIdealSpawnDistance(): void;
    /**
     * Begins with RESET_*. Next character in the name is either D or E.
     *
     * Old name: _RESET_BENCHMARK_RECORDING
     *
     * Hash: 0xECBABD0307FB216F | Since: 1207
     */
    function resetEndUserBenchmark(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1411A7CBC3A6EB7B | Since: 1207
     */
    function resetScriptTimeWithinFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF42F56F69877125 | Since: 1207
     */
    function resetWantedResponseNumPedsToSpawn(): void;
    /**
     * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
     *
     * Old name: _SAVE_BENCHMARK_RECORDING
     *
     * Hash: 0xF4743E2ECC02B3DA | Since: 1207
     */
    function saveEndUserBenchmark(): void;
    /**
     * No comment provided
     *
     * Hash: 0x769E848C66E3C2BB | Since: 1207
     */
    function scriptRaceGetPlayerSplitTime(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8AE059F47158417E | Since: 1207
     */
    function scriptRaceInit(numCheckpoints: number, numLaps: number, numPlayers: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA62B4D80FA66BD6 | Since: 1207
     */
    function scriptRacePlayerHitCheckpoint(part: number, checkpoint: number, lap: number, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x334CE0DA4FAF330C | Since: 1207
     */
    function scriptRaceShutdown(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF73FBE4845C43B5B | Since: 1207
     */
    function setBit(address: number, offset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x324DC1CEF57F31E6 | Since: 1207
     */
    function setBitsInRange(_var: number, rangeStart: number, rangeEnd: number): void;
    /**
     * Cheats are GTA IV cheats:
     *
     * 0 = unknown
     * 1 = unknown (same as 0)
     * 2 = Max Health and Armor
     * 3 = Raise Wanted Level
     * 4 = Lower Wanted Level
     * 5 = unknown (does nothing)
     * 6 = Change Weather
     * 7 = Spawn Annihilator
     * 8 = Spawn NRG 900
     * 9 = Spawn FBI
     * 10 = Spawn Jetmax
     * 11 = Spawn Comet
     * 12 = Spawn Turismo
     * 13 = Spawn Cognoscenti
     * 14 = Spawn Super GT
     * 15 = Spawn Sanchez
     *
     * Initially used in Max Payne 3, that's why we know the name.
     *
     * Hash: 0xD4958E8CF0DE0DD0 | Since: 1207
     */
    function setCheatActive(cheatId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD37BECF862DA726F | Since: 1207
     */
    function setCreditsActive(toggle: boolean): void;
    /**
     * Params: BOOL p3 is always true
     *
     * Old name: _SET_WEATHER_TYPE_TRANSITION
     *
     * Hash: 0xFA3E3CA8A1DE6D5D | Since: 1207
     */
    function setCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAB6823B82FBD283 | Since: 1207
     */
    function setDispatchIdealSpawnDistance(fIdealSpawnDistance: number): void;
    /**
     * Sets whether the game should fade in after the player dies or is arrested.
     *
     * Hash: 0xDF3B5846DE5904AF | Since: 1207
     */
    function setFadeInAfterDeathArrest(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC806C4CAB973517 | Since: 1207
     */
    function setFadeInAfterLoad(toggle: boolean): void;
    /**
     * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
     *
     * Hash: 0xFAEC088D28B1DE4A | Since: 1207
     */
    function setGamePaused(toggle: boolean): void;
    /**
     * If true, the player can't save the game.
     *
     * Hash: 0x36694B456BE80D0A | Since: 1207
     */
    function setMissionFlag(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x674B90BE1115846D | Since: 1207
     */
    function setPedDecomposed(ped: number | Ped, toggle: boolean): void;
    /**
     * Old name: _SET_RAIN_LEVEL
     *
     * Hash: 0x193DFC0526830FD6 | Since: 1207
     */
    function setRain(intensity: number): void;
    /**
     * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
     * Does nothing if the mission flag is set.
     *
     * Hash: 0xB1ADCCC4150C6473 | Since: 1207
     */
    function setRandomEventFlag(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CD7A49104AFCB6B | Since: 1207
     */
    function setRandomSeed(seed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E5A7FBEECAB3C72 | Since: 1207
     */
    function setRandomWeatherType(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3E9BE963F10C445 | Since: 1207
     */
    function setSuperJumpThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x3215376E79F6EA18 | Since: 1207
     */
    function setThisScriptCanBePaused(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8ABD939C2E5D00ED | Since: 1207
     */
    function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
    /**
     * Maximum value is 1.0f
     * At a value of 0.0f the game will still run at a minimum time scale.
     *
     * Hash: 0x9682AF6050854856 | Since: 1207
     */
    function setTimeScale(timeScale: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
     *
     * Hash: 0x59174F1AFE095B5A | Since: 1207
     */
    function setWeatherType(weatherType: number | string, transition: boolean, transitionTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB56C4F5F57A45600 | Since: 1207
     */
    function setWindDirection(direction: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD00C2D82DC04A99F | Since: 1207
     */
    function setWindSpeed(speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x867654CBC7606F2C | Since: 1207
     */
    function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number): void;
    /**
     * Returns whether the game's measurement system is set to metric.
     *
     * Hash: 0x4FB556ACEFA93098 | Since: 1207
     */
    function shouldUseMetricMeasurements(): boolean;
    /**
     * Begins with START_*. Next character in the name is either D or E.
     *
     * Old name: _START_BENCHMARK_RECORDING
     *
     * Hash: 0x29D1F6DF864A094E | Since: 1207
     */
    function startEndUserBenchmark(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xA565FAC215CBC77D | Since: 1207
     */
    function stopCurrentLoadingProgressTimer(): void;
    /**
     * Begins with STOP_*. Next character in the name is either D or E.
     *
     * Old name: _STOP_BENCHMARK_RECORDING
     *
     * Hash: 0xB89AEC71AFF2B599 | Since: 1207
     */
    function stopEndUserBenchmark(): void;
    /**
     * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
     *
     * Hash: 0xF2DD2298B3AF23E2 | Since: 1207
     */
    function stringToInt(string: string, outInteger: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8C13DB96497B7ABF | Since: 1207
     */
    function tan(): number;
    /**
     * Hardcoded to return false.
     *
     * Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
     *
     * Hash: 0x4FFA0386A6216113 | Since: 1207
     */
    function uiStartedEndUserBenchmark(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE98D55C5983F2509 | Since: 1207
     */
    function unregisterInteractionLockonPrompt(entity: number | Entity): boolean;
    /**
     * Returns the current status of the onscreen keyboard, and updates the output.
     *
     * Status Codes:
     *
     * 0 - User still editing
     * 1 - User has finished editing
     * 2 - User has canceled editing
     * 3 - Keyboard isn't active
     *
     * Hash: 0x37DF360F235A3893 | Since: 1207
     */
    function updateOnscreenKeyboard(): number;
    /**
     * Note: The first bit in 'flags' must not be set.
     * It is also required to pass at least one extra argument (this must be a text label string or hash).
     * When passing a hash, flags should be 0.
     *
     * Hash: 0xFA925AC00EB830B9 | Since: 1207
     */
    function varString(flags: number, ...params: string[]): string;
    /**
     * Only used in smuggler2 script
     *
     * Hash: 0xF06C5B66DE20B2B8 | Since: 1207
     */
    function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
    /**
     * Only used in smuggler2 script
     *
     * Hash: 0x55123D5A7D9D3C42 | Since: 1207
     */
    function waterOverrideSetShorewaveamplitude(amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0358B8A41916C613 | Since: 1207
     */
    function _0x0358B8A41916C613(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0730E518486DEEC3 | Since: 1207
     */
    function _0x0730E518486DEEC3(): void;
    /**
     * disables composite Pick prompt
     *
     * Hash: 0x082C043C7AFC3747 | Since: 1207
     */
    function disableCompositePickPromptThisFrame(compositeId: number, disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A487CC74A517FB5 | Since: 1207
     */
    function _0x0A487CC74A517FB5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D0AE5081F88CFE1 | Since: 1207
     */
    function _0x0D0AE5081F88CFE1(): boolean;
    /**
     * _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
     *
     * Hash: 0x1096603B519C905F | Since: 1207
     */
    function _0x1096603B519C905F(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x154340E87D8CC178 | Since: 1207
     */
    function _0x154340E87D8CC178(): void;
    /**
     * No comment provided
     *
     * Hash: 0x183672FE838A661B | Since: 1207
     */
    function _0x183672FE838A661B(data: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x243CEDE8F916B994 | Since: 1207
     */
    function _0x243CEDE8F916B994(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2916B30DC6C41179 | Since: 1207
     */
    function _0x2916B30DC6C41179(weatherType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x33982467B1E349EF | Since: 1207
     */
    function _0x33982467B1E349EF(): any;
    /**
     * No comment provided
     *
     * Hash: 0x35165C658077CD0B | Since: 1207
     */
    function _0x35165C658077CD0B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x38C0C9CAE1544500 | Since: 1207
     */
    function _0x38C0C9CAE1544500(): void;
    /**
     * No comment provided
     *
     * Hash: 0x38C2BF94D15F464D | Since: 1207
     */
    function _0x38C2BF94D15F464D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3A87FDA8F1B6CDFB | Since: 1207
     */
    function _0x3A87FDA8F1B6CDFB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C3C7B1B5EC08764 | Since: 1207
     */
    function _0x3C3C7B1B5EC08764(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4647842FE8F31C1E | Since: 1207
     */
    function _0x4647842FE8F31C1E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x49C44FE78A135A1D | Since: 1207
     */
    function _0x49C44FE78A135A1D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x49F3241C28EBBFBC | Since: 1207
     */
    function _0x49F3241C28EBBFBC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B0501A468B749F8 | Since: 1207
     */
    function _0x4B0501A468B749F8(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B101DBCC9482F2D | Since: 1207
     */
    function _0x4B101DBCC9482F2D(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D5C9CC7E7E23E09 | Since: 1207
     */
    function _0x4D5C9CC7E7E23E09(): void;
    /**
     * UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
     * _J*, _K*, _L*
     *
     * Hash: 0x553D67295DDD2309 | Since: 1207
     */
    function _0x553D67295DDD2309(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x5801BE2DF2AF07EC | Since: 1207
     */
    function _0x5801BE2DF2AF07EC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B4A8121A47D844D | Since: 1207
     */
    function _0x5B4A8121A47D844D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x627B68D9CE6EE8DE | Since: 1207
     */
    function _0x627B68D9CE6EE8DE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x68319452C5064ABA | Since: 1207
     */
    function _0x68319452C5064ABA(): void;
    /**
     * _SET_DISPATCH_*, unused
     *
     * Hash: 0x6BCF7B5CD338281A | Since: 1207
     */
    function _0x6BCF7B5CD338281A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BED40493A1AFDB8 | Since: 1207
     */
    function _0x6BED40493A1AFDB8(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C7B68D3CE60E8DE | Since: 1207
     */
    function _0x6C7B68D3CE60E8DE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6F02B5E50511721E | Since: 1207
     */
    function _0x6F02B5E50511721E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x745808BB01CEC6B9 | Since: 1207
     */
    function _0x745808BB01CEC6B9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74ACA66484CEBAF0 | Since: 1207
     */
    function _0x74ACA66484CEBAF0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A76104CC2CC69E8 | Since: 1207
     */
    function _0x7A76104CC2CC69E8(entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x7CF96F1250EF3221 | Since: 1207
     */
    function _0x7CF96F1250EF3221(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7FA58CED69405F9A | Since: 1207
     */
    function _0x7FA58CED69405F9A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8314FC2013ECE2DA | Since: 1207
     */
    function _0x8314FC2013ECE2DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8BB99B85444544D9 | Since: 1207
     */
    function _0x8BB99B85444544D9(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8C0F6A3D7236DEEB | Since: 1207
     */
    function _0x8C0F6A3D7236DEEB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DB104CCEBCD58C5 | Since: 1207
     */
    function _0x8DB104CCEBCD58C5(): any;
    /**
     * Not officially named
     * , Counts the number of segments in a string that are separated by specified delimiter characters, ignoring consecutive delimiters.
     *
     * Hash: 0x94E8CA3DEE952789 | Since: 1207
     */
    function stringSplitAndCountSegments(inputString: string, delimiters: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x94FCADCF9F0C368E | Since: 1207
     */
    function _0x94FCADCF9F0C368E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x96282005C5C6801F | Since: 1311
     */
    function _0x96282005C5C6801F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x970339EFA4FDE518 | Since: 1207
     */
    function _0x970339EFA4FDE518(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9A252AA23D7098F2 | Since: 1207
     */
    function _0x9A252AA23D7098F2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BF2C0C568C61641 | Since: 1207
     */
    function _0x9BF2C0C568C61641(): void;
    /**
     * _CLEAR*
     *
     * Hash: 0xA08111B053D84B4D | Since: 1207
     */
    function _0xA08111B053D84B4D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3A8926951471C82 | Since: 1207
     */
    function _0xA3A8926951471C82(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xA9342743B634A462 | Since: 1207
     */
    function _0xA9342743B634A462(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB26DEEE120FD3FD | Since: 1207
     */
    function _0xAB26DEEE120FD3FD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD44856A1CD29635 | Since: 1207
     */
    function _0xAD44856A1CD29635(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF3A84C7DE6A1DC5 | Since: 1207
     */
    function _0xAF3A84C7DE6A1DC5(): void;
    /**
     * Hardcoded to return one/true.
     *
     * Hash: 0xAF530E56505D1BD6 | Since: 1207
     */
    function _0xAF530E56505D1BD6(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB08C4FA25BC29DB9 | Since: 1207
     */
    function _0xB08C4FA25BC29DB9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1F6665AA54DCD5C | Since: 1207
     */
    function _0xB1F6665AA54DCD5C(): any;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xB711EB4BC8D06013 | Since: 1207
     */
    function _0xB711EB4BC8D06013(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB282CF5D2333FB8 | Since: 1207
     */
    function _0xBB282CF5D2333FB8(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBE5B63EFFB08E68 | Since: 1207
     */
    function _0xBBE5B63EFFB08E68(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCC1BAF72D571DB8D | Since: 1207
     */
    function _0xCC1BAF72D571DB8D(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCC3EDC5614B03F61 | Since: 1207
     */
    function _0xCC3EDC5614B03F61(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3F943B88F55376A | Since: 1207
     */
    function _0xD3F943B88F55376A(weatherType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA4D8EB04E8E2928 | Since: 1207
     */
    function _0xDA4D8EB04E8E2928(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBDA48EC456ED908 | Since: 1436
     */
    function _0xDBDA48EC456ED908(): void;
    /**
     * Hardcoded to return one/true.
     *
     * Hash: 0xDC057B86FC157031 | Since: 1207
     */
    function _0xDC057B86FC157031(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDC416CA762BC4F43 | Since: 1207
     */
    function _0xDC416CA762BC4F43(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDE2C3B74D2B3705C | Since: 1207
     */
    function _0xDE2C3B74D2B3705C(): void;
    /**
     * Not implemented.
     *
     * Hash: 0xEB946B9E579729AD | Since: 1207
     */
    function _0xEB946B9E579729AD(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF569E33FB72ED28E | Since: 1207
     */
    function _0xF569E33FB72ED28E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF63FA29D4A9ACA86 | Since: 1207
     */
    function _0xF63FA29D4A9ACA86(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF650DCF5D6F312C1 | Since: 1232
     */
    function _0xF650DCF5D6F312C1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF81C53561D15F330 | Since: 1207
     */
    function _0xF81C53561D15F330(): string;
    /**
     * No comment provided
     *
     * Hash: 0xFC6ECB9170145ECE | Since: 1207
     */
    function _0xFC6ECB9170145ECE(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xFF252E2BAFB7330F | Since: 1207
     */
    function _0xFF252E2BAFB7330F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2D5A26208421426 | Since: 1207
     */
    function addDispatchSpawnBlockingArea(volume: number): any;
    /**
     * Only used in script function PROCESS_ZONE_CREATION
     * Returns Pop multiplier volume ID
     *
     * Hash: 0x3233C4EC0514C7EC | Since: 1207
     */
    function addPopMultiplierVolume(volume: number, pedDensity: number, vehicleDensity: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD2D74F89DF844A50 | Since: 1207
     */
    function clearAllBitFlags(bitFlags: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xB909149F2BB5F6DA | Since: 1207
     */
    function clearBitFlag(bitFlags: any, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FCD528A397E5C88 | Since: 1207
     */
    function clearVolumeArea(volume: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE7690C0A0D1C36D | Since: 1207
     */
    function clearWeatherTypePersistOvertime(milliseconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E71C80FA4EC8147 | Since: 1207
     */
    function clearWeatherVariation(weatherType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE704838F36F93B7B | Since: 1355
     */
    function countBitFlags(bitFlags: any): number;
    /**
     * aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
     *
     * Hash: 0x88BC5F4AEF77FC4E | Since: 1207
     */
    function createAiMemory(args: any, aiMemoryType: number): void;
    /**
     * Returns a formatted string (0x%x)
     *
     * Hash: 0xBCC2CFADEA1AEA6C | Since: 1207
     */
    function createColorString(rgb: number): string;
    /**
     * dispatchService: see ENABLE_DISPATCH_SERVICE
     *
     * The entities must be added to itemSet.
     *
     * Hash: 0xAB3D3F45436DB1D8 | Since: 1207
     */
    function createIncidentWithEntities(dispatchService: number, pos: Vector3, itemSet: any, radius: number, outIncidentID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBDC6E364C9C78178 | Since: 1207
     */
    function doesItemHaveValidBase(item: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x39D6DACE323A20B6 | Since: 1207
     */
    function doesPopMultiplierAreaExistForVolume(volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9382D5D43D2AA6FF | Since: 1207
     */
    function doesStringExistInString(string1: string, string2: string): boolean;
    /**
     * p3 is always -1.0f in the scripts
     *
     * Hash: 0x67943537D179597C | Since: 1207
     */
    function forceLightningFlashAtCoords(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAED234C7F53ABEB | Since: 1207
     */
    function gameFrameworkManagerGetMode(): number;
    /**
     * No comment provided
     *
     * Hash: 0xAFF2FD8ADD927585 | Since: 1207
     */
    function gameFrameworkManagerShutdown(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDF38E2B711BF78E | Since: 1207
     */
    function getAiPedDoesHaveEventMemory(args: any): boolean;
    /**
     * https://easings.net/
     *
     * enum class eEasingCurveType
     * {
     * TYPE_LINEAR,
     * TYPE_QUADRATIC_IN,
     * TYPE_QUADRATIC_OUT,
     * TYPE_QUADRATIC_INOUT,
     * TYPE_CUBIC_IN,
     * TYPE_CUBIC_OUT,
     * TYPE_CUBIC_INOUT,
     * TYPE_QUARTIC_IN,
     * TYPE_QUARTIC_OUT,
     * TYPE_QUARTIC_INOUT,
     * TYPE_QUINTIC_IN,
     * TYPE_QUINTIC_OUT,
     * TYPE_QUINTIC_INOUT,
     * TYPE_EXPONENTIAL_IN,
     * TYPE_EXPONENTIAL_OUT,
     * TYPE_EXPONENTIAL_INOUT,
     * TYPE_SINE_IN,
     * TYPE_SINE_OUT,
     * TYPE_SINE_INOUT,
     * TYPE_CIRCULAR_IN,
     * TYPE_CIRCULAR_OUT,
     * TYPE_CIRCULAR_INOUT,
     * TYPE_BOUNCE_IN,
     * TYPE_BOUNCE_OUT,
     * TYPE_BOUNCE_INOUT,
     * TYPE_CUSTOM
     * };
     *
     * Hash: 0xEF50E344A8F93784 | Since: 1207
     */
    function getEasingCurveValue(t: number, b: number, d: number, easingCurveType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xEE04C0AFD4EFAF0E | Since: 1207
     */
    function getEntityFromItem(item: number): number;
    /**
     * Returns the weather type that has been set by a script
     *
     * Hash: 0xDD560ABEF5D3784C | Since: 1207
     */
    function getForcedWeather(weather: number | string): void;
    /**
     * `Returns rage::fwTimer::sm_nonScaledClippedTime`
     *
     * Hash: 0x483B8C542103AD72 | Since: 1207
     */
    function getGameTimerNonScaledClipped(): number;
    /**
     * 0 = invalid
     * 1 = CEntity
     * `2 = rage::volBase`
     * `3 = rage::volSphere`
     * `4 = rage::volBox`
     * `5 = rage::volAggregate`
     * `6 = rage::volCylinder`
     * 7 = CScriptedCoverPoint
     * `8 = rage::ptfxScriptInfo`
     * 9 = CPed
     * 10 = CVehicle
     * 11 = CObject
     * 12 = CItemSet
     * 13 = CPersistentCharacter
     *
     * Hash: 0xDC8D2FF478DF9553 | Since: 1207
     */
    function getItemType(handle: number): number;
    /**
     * Event names in the scripts: MGBegin, MGEnd, ReadyForCut
     *
     * Hash: 0xF9B91C5129EABC08 | Since: 1207
     */
    function getLootingEventHasFired(ped: number | Ped, eventName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC43CD2668B204419 | Since: 1207
     */
    function getMaxNumInstructions(): number;
    /**
     * No comment provided
     *
     * Hash: 0x51021D36F62AAA83 | Since: 1207
     */
    function getNextWeatherTypeHashName(): number;
    /**
     * No comment provided
     *
     * Hash: 0x72904D3D62AF5839 | Since: 1207
     */
    function getNumberOfInstructions(): number;
    /**
     * No comment provided
     *
     * Hash: 0x18013392501CE5DC | Since: 1207
     */
    function getObjectFromIndexedItem(item: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x3FFB15534067DCD4 | Since: 1207
     */
    function getPedFromIndexedItem(item: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4BEB42AEBCA732E9 | Since: 1207
     */
    function getPrevWeatherTypeHashName(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1359C181BC625503 | Since: 1207
     */
    function getRandomWeatherType(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7F4CE164D9A11DFE | Since: 1207
     */
    function getRandomWeatherTypeIndex(): number;
    /**
     * Only 0 and 1 are valid for p0, higher values causes the native to return 2.
     *
     * Hash: 0x1B065A2BF7953815 | Since: 1207
     */
    function getStatusOfSavegameOperation(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF216F74101968DB0 | Since: 1207
     */
    function getStringFromBool(value: boolean): string;
    /**
     * No comment provided
     *
     * Hash: 0x2B6846401D68E563 | Since: 1207
     */
    function getStringFromFloat(value: number, digits: number): string;
    /**
     * Returns a string in the following format: <<%.4f,%.4f,%.4f>>
     *
     * Hash: 0x6C4DBF553885F9EB | Since: 1207
     */
    function getStringFromVector(pos: Vector3): string;
    /**
     * No comment provided
     *
     * Hash: 0xB98B78C3768AF6E0 | Since: 1207
     */
    function getTemperatureAtCoords(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xE578C8AE173719B3 | Since: 1207
     */
    function getVehicleFromIndexedItem(item: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF18AF483DF70BBDE | Since: 1207
     */
    function getVolumeFromIndexedItem(item: number): number;
    /**
     * Note: the buffer should be exactly 32 bytes long
     *
     * Hash: 0xCF11C0CEB40C401B | Since: 1207
     */
    function intToString(value: number, format: string, buffer: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x80E9C316EF84DD81 | Since: 1207
     */
    function isAnyBitFlagSet(bitFlags: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFEC1D4B5C82C176F | Since: 1207
     */
    function isBaseACoverPoint(handle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x716F17F8A0419F95 | Since: 1207
     */
    function isBaseAPersistentCharacter(handle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F4F050054005C27 | Since: 1207
     */
    function isBitFlagSet(bitFlags: any, flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xACB7E1418A8B6E32 | Since: 1207
     */
    function isGlobalBlockValid(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF236C84C6ADFCB2F | Since: 1207
     */
    function isMissionCreatorActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5170DDA6D63ACAAA | Since: 1207
     */
    function isPedDecomposed(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x36040772DF5E59A0 | Since: 1355
     */
    function isPlayerOwningStandaloneSp(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x48E4D50F87A96AA5 | Since: 1207
     */
    function lootTablesGetInfo(ped: number | Ped, lootTableKey: number | string): void;
    /**
     * p0 must be < 2
     *
     * Hash: 0x279B0696DA4657EB | Since: 1207
     */
    function queueSavegameOperation(): boolean;
    /**
     * Reads the passed value as floating point value and returns it.
     * Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
     *
     * Hash: 0xD2C9126410DFA1B2 | Since: 1207
     */
    function readIntAsFloat(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBD090F5B1DB82189 | Since: 1207
     */
    function removePopMultiplierAreaForVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x54EC7B6BC72BAD69 | Since: 1207
     */
    function resetDispatchMaxSpawnDistance(): void;
    /**
     * No comment provided
     *
     * Hash: 0x96498D922D8D0D0A | Since: 1207
     */
    function resetDispatchMinSpawnDistance(): void;
    /**
     * Used in CAIConditionAmbientAIMemoryReactionsEnabled
     *
     * Hash: 0x6AC4AF46A6B8DFB2 | Since: 1207
     */
    function setAiMemoryReactionsEnabled(enabled: boolean): void;
    /**
     * Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
     * The flags are stored in an int array where each int has the ability to hold 32 flags.
     * Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
     *
     * Hash: 0xE84AAC1B22A73E99 | Since: 1207
     */
    function setBitFlag(bitFlags: any, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x89314FB3463E28DE | Since: 1207
     */
    function setDispatchMaxSpawnDistance(maxSpawnDistance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x27A1B170AA8AF84C | Since: 1207
     */
    function setDispatchMinSpawnDistance(minSpawnDistance: number): void;
    /**
     * Note: this native was added in build 1232.56
     *
     * Hash: 0x550F05CFFBD63C8C | Since: 1232
     */
    function setGameLogicPaused(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE97240065406CB80 | Since: 1207
     */
    function setGlobalBlockIsLoaded(index: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9617B6E5F6537B63 | Since: 1207
     */
    function setIncidentUnk(incidentId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B47971234169990 | Since: 1207
     */
    function setLootPeltSatchelItem(ped: number | Ped, item: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE83CAE8ED77A94F | Since: 1207
     */
    function setOverrideWeather(weatherType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6BEE7E80EC5CA40 | Since: 1207
     */
    function setSnowLevel(level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C6A07AF9AEDABD8 | Since: 1207
     */
    function setWeatherType2(weatherType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD74ACDF7DB8114AF | Since: 1207
     */
    function setWeatherTypeFrozen(toggle: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
     *
     * Hash: 0x3373779BAF7CAF48 | Since: 1207
     */
    function setWeatherVariation(weatherType: string, variation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0177CF20345F44DD | Since: 1207
     */
    function shouldUse24HourClock(): boolean;
    /**
     * Same as SHOULD_USE_METRIC_MEASUREMENTS
     *
     * Hash: 0x58BCDC75BA52110A | Since: 1207
     */
    function shouldUseMetricMeasurements2(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF4AAF3275BAAB4F | Since: 1207
     */
    function shouldUseMetricTemperature(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F24157FEDB85EA2 | Since: 1207
     */
    function shouldUseMetricWeight(): boolean;
}
export declare namespace missiondata {
    /**
     * No comment provided
     *
     * Hash: 0x57E798B65C45EE17 | Since: 1232
     */
    function missiondataGetCatagory(missionId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9AABABF8313C3516 | Since: 1207
     */
    function missiondataGetHighScore(missionId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x57E798B54C45EE1A | Since: 1207
     */
    function missiondataGetRating(missionId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8C32D86E9556ED86 | Since: 1207
     */
    function missiondataGetReplayState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x57E798B56C45EE15 | Since: 1207
     */
    function missiondataGetTextureName(missionId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x57E798B57C45EE16 | Since: 1207
     */
    function missiondataGetTextureTxd(missionId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE824CE7D13FCB35E | Since: 1207
     */
    function missiondataIsRequiredStoryMission(missionId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE54DC27571D5EDC5 | Since: 1207
     */
    function missiondataIsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A04F0169DA87A9D | Since: 1207
     */
    function missiondataSetHighScore(missionId: number | string, score: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x12F65317708749A5 | Since: 1207
     */
    function missiondataSetRatingScores(missionId: number | string, bronzeScore: number, silverScore: number, goldScore: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x957A830C9B4B99EA | Since: 1232
     */
    function missiondataSetReplayLockedForCategory(category: number | string, locked: boolean): void;
    /**
     * see: missions.meta
     *
     * Hash: 0xE54DC27571D5EDC4 | Since: 1207
     */
    function missiondataWasCompleted(missionId: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE145864DECC34219 | Since: 1232
     */
    function missiondataIsReplayCategoryLocked(category: number | string): boolean;
    /**
     * MISSION_RATING_INCOMPLETE = 0,
     * MISSION_RATING_SKIPPED,
     * MISSION_RATING_COMPLETE,
     * MISSION_RATING_BRONZE,
     * MISSION_RATING_SILVER,
     * MISSION_RATING_GOLD,
     *
     * Hash: 0xE824CE7D13FCB300 | Since: 1207
     */
    function missiondataSetMissionRating(missionId: number | string, rating: number): void;
    /**
     * replayState: MISSIONDATA_GET_REPLAY_STATE
     *
     * Hash: 0xE4E2C581F127A11C | Since: 1207
     */
    function missiondataSetReplayStateLocked(missionId: number | string, replayState: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F89E15A8FB8DE97 | Since: 1207
     */
    function missiondataTimecycleBoxDelete(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E8F86A4FA33033C | Since: 1207
     */
    function missiondataTimecycleBoxExists(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25855B1574BF8CD5 | Since: 1207
     */
    function missiondataTimecycleBoxSetModifier(timecycleName: string): void;
}
export declare namespace money {
    /**
     * No comment provided
     *
     * Hash: 0x07AD9E43FD478527 | Since: 1207
     */
    function _0x07AD9E43FD478527(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA46FD001D1BE896C | Since: 1207
     */
    function _0xA46FD001D1BE896C(): string;
    /**
     * No comment provided
     *
     * Hash: 0x466BC8769CF26A7A | Since: 1207
     */
    function moneyDecrementCashBalance(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C02DABFA3B98176 | Since: 1207
     */
    function moneyGetCashBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBC3422DC91667621 | Since: 1207
     */
    function moneyIncrementCashBalance(amount: number, addReason: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8A67120DBC299525 | Since: 1207
     */
    function networkGetCashBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0x282D36FF103D78DF | Since: 1207
     */
    function networkGetStringCashBalance(): string;
    /**
     * No comment provided
     *
     * Hash: 0xAEC5F0119867E457 | Since: 1207
     */
    function networkIsMoneyBalanceNotLessThan(cashBalance: number, goldBarBalance: number): boolean;
}
export declare namespace netshopping {
    /**
     * No comment provided
     *
     * Hash: 0xC019112F8995DC1C | Since: 1207
     */
    function cashinventoryInitSessionStatus(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6CE9FB6332B5E46E | Since: 1207
     */
    function cashinventoryIsConnectionFaulted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x38640A8C2DEF011B | Since: 1311
     */
    function _0x38640A8C2DEF011B(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3FA09DD57B93C0DE | Since: 1207
     */
    function _0x3FA09DD57B93C0DE(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x92A32BA29622763F | Since: 1207
     */
    function _0x92A32BA29622763F(id: number, index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0B7094629724974 | Since: 1207
     */
    function _0xA0B7094629724974(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA3B8D31C13CB4239 | Since: 1311
     */
    function _0xA3B8D31C13CB4239(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB6F4557060EF0FB4 | Since: 1207
     */
    function _0xB6F4557060EF0FB4(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCE54C9ABE6FBC6DB | Since: 1207
     */
    function _0xCE54C9ABE6FBC6DB(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD1555FBC96C88444 | Since: 1207
     */
    function _0xD1555FBC96C88444(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD1CE92D1D9BE170A | Since: 1207
     */
    function cashinventoryInitSessionIsFaulted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFCC24220FDDAC929 | Since: 1207
     */
    function cashinventoryIsSessionReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52BDE32F21BA3B6D | Since: 1207
     */
    function cashinventoryTransactionAddAward(id: number, hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x592BC00BF6629BE7 | Since: 1207
     */
    function cashinventoryTransactionCheckout(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26C008791D066F37 | Since: 1207
     */
    function cashinventoryTransactionCheckoutStatus(id: number, status: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59EF5D516E2D96B9 | Since: 1207
     */
    function cashinventoryTransactionDelete(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFFEA09CCEC4AF32F | Since: 1207
     */
    function cashinventoryTransactionFireAndForgetItem(actionHash: number | string, id: number, item: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBD2D520C51CCFF52 | Since: 1207
     */
    function cashinventoryTransactionGetAction(id: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x52A226ADF4A270D2 | Since: 1207
     */
    function cashinventoryTransactionGetBasketIsValid(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7616B5F0895C2D99 | Since: 1207
     */
    function cashinventoryTransactionGetItemInfo(id: number, index: number, itemInfo: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF2D04D076847478 | Since: 1207
     */
    function cashinventoryTransactionGetNumOfItems(id: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x98412398BBE73F61 | Since: 1207
     */
    function cashinventoryTransactionResponseGetItemInfo(id: number, index: number, itemInfo: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF039EC27F4490E96 | Since: 1207
     */
    function cashinventoryTransactionStart(id: number, type: number | string, actionHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6C9F12700BCE69F4 | Since: 1207
     */
    function cashinventoryTransactionValidateItem(): number;
}
export declare namespace network {
    /**
     * No comment provided
     *
     * Hash: 0xD45B1FFCCD52FF19 | Since: 1207
     */
    function activateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x69778E7564BADE6D | Since: 1207
     */
    function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x800DD4721A8B008B | Since: 1207
     */
    function canRegisterMissionObjects(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBCBF4FEF9FA5D781 | Since: 1207
     */
    function canRegisterMissionPeds(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0460C7BF80011EA | Since: 1207
     */
    function canRegisterMissionPickups(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7277F1F2E085EE74 | Since: 1207
     */
    function canRegisterMissionVehicles(amount: number): boolean;
    /**
     * Old name: _CLEAR_LAUNCH_PARAMS
     *
     * Hash: 0x966DD84FB6A46017 | Since: 1207
     */
    function clearServiceEventArguments(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A3D5568AF297CD5 | Since: 1207
     */
    function cloudDidRequestSucceed(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C61B39930D045DA | Since: 1207
     */
    function cloudHasRequestCompleted(id: number): boolean;
    /**
     * Takes the specified time and writes it to the structure specified in the second argument.
     *
     * struct date_time
     * {
     * int year;
     * int PADDING1;
     * int month;
     * int PADDING2;
     * int day;
     * int PADDING3;
     * int hour;
     * int PADDING4;
     * int minute;
     * int PADDING5;
     * int second;
     * int PADDING6;
     * };
     *
     * Hash: 0xAC97AF97FA68E5D5 | Since: 1207
     */
    function convertPosixTime(posixTime: number, timeStructure: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A73240B49945C76 | Since: 1207
     */
    function getCloudTimeAsInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0x65E65CA6A0FE59D4 | Since: 1207
     */
    function getLaunchParamValue(paramName: string): string;
    /**
     * Always returns 60
     *
     * Hash: 0xC7BE335216B5EC7C | Since: 1207
     */
    function getMaxNumNetworkObjects(): number;
    /**
     * Always returns 110
     *
     * Hash: 0x0C1F7D49C39D2289 | Since: 1207
     */
    function getMaxNumNetworkPeds(): number;
    /**
     * Always returns 80
     *
     * Hash: 0xA72835064DD63E4C | Since: 1207
     */
    function getMaxNumNetworkPickups(): number;
    /**
     * Always returns 40
     *
     * Hash: 0x0AFCE529F69B21FF | Since: 1207
     */
    function getMaxNumNetworkVehicles(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A5487FE9FAA6B48 | Since: 1207
     */
    function getNetworkTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x89023FBBF9200E9F | Since: 1207
     */
    function getNetworkTimeAccurate(): number;
    /**
     * No comment provided
     *
     * Hash: 0x12B6281B6C6706C0 | Since: 1207
     */
    function getNumCreatedMissionObjects(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCB215C4B56A7FAE7 | Since: 1207
     */
    function getNumCreatedMissionPeds(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0CD9AB83489430EA | Since: 1207
     */
    function getNumCreatedMissionVehicles(): number;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0xAA81B5F10BC43AC2 | Since: 1207
     */
    function getNumReservedMissionObjects(): number;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0x1F13D5AE5CB17E17 | Since: 1207
     */
    function getNumReservedMissionPeds(): number;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0xCF3A965906452031 | Since: 1207
     */
    function getNumReservedMissionVehicles(): number;
    /**
     * Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
     * Coords: Slot world position
     *
     * Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
     *
     * Hash: 0x5E71E72A94985214 | Since: 1207
     */
    function getReservedMissionEntitiesInArea(pos: Vector3, peds: number, vehicles: number, objects: number, pickups: number): void;
    /**
     * 0 = succeeded
     * 1 = pending
     * 2 = failed
     *
     * Hash: 0x8BD6C6DEA20E82C6 | Since: 1207
     */
    function getStatusOfTextureDownload(textureDownloadId: number): number;
    /**
     * Subtracts the second argument from the first.
     *
     * Hash: 0xA2C6FC031D46FFF0 | Since: 1207
     */
    function getTimeDifference(timeA: number, timeB: number): number;
    /**
     * Adds the first argument to the second.
     *
     * Hash: 0x017008CCDAD48503 | Since: 1207
     */
    function getTimeOffset(timeA: number, timeB: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x07F723401B9D921C | Since: 1207
     */
    function getUniqueIntForPlayer(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x46718ACEEDEAFC84 | Since: 1207
     */
    function hasNetworkTimeStarted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E192E33AD436366 | Since: 1207
     */
    function isDamageTrackerActiveOnNetworkId(netID: number): boolean;
    /**
     * Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
     *
     * Hash: 0x21D04D7BC538C146 | Since: 1207
     */
    function isEntityAGhost(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA1607996431332DF | Since: 1207
     */
    function isNetworkIdOwnedByParticipant(netId: number): boolean;
    /**
     * Note: this native was added in build 1311.16
     *
     * Hash: 0x8FE9EB11EC9CC23A | Since: 1311
     */
    function isObjectReassignmentInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD82CF8E64C8729D8 | Since: 1207
     */
    function isSphereVisibleToAnotherMachine(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC3A310219E5DA62 | Since: 1207
     */
    function isSphereVisibleToPlayer(): boolean;
    /**
     * Subtracts the second argument from the first, then returns whether the result is negative.
     *
     * Hash: 0xCB2CF5148012C8D0 | Since: 1207
     */
    function isTimeLessThan(timeA: number, timeB: number): boolean;
    /**
     * Subtracts the first argument from the second, then returns whether the result is negative.
     *
     * Hash: 0xDE350F8651E4346C | Since: 1207
     */
    function isTimeMoreThan(timeA: number, timeB: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE1BC73D6815BA361 | Since: 1207
     */
    function keepNetworkIdInFastInstance(netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2CEA5105AAC8DDE | Since: 1207
     */
    function networkAcceptRsInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA6A47A573ABB75A | Since: 1207
     */
    function networkAccessTunableBool(tunableContext: number | string, tunableName: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8BE1146DFD5D4468 | Since: 1207
     */
    function networkAccessTunableInt(tunableContext: number | string, tunableName: number | string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3B82ACC3F4B6240C | Since: 1207
     */
    function networkActionPlatformInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FE141FDB990E3D1 | Since: 1207
     */
    function networkActivityResetToIdle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9ADAC065D9F6706F | Since: 1207
     */
    function networkActivitySetCurrent(netPlaylistActivity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E02D73914064223 | Since: 1207
     */
    function networkAddFriend(gamerHandle: any, message: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4B05B97BA46F419D | Since: 1207
     */
    function networkAllowAllEntityFadingForInstances(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3354D6CA46F419D | Since: 1207
     */
    function networkAllowEntityFadingForInstances(entity: number | Entity, toggle: boolean): void;
    /**
     * Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
     *
     * Hash: 0x267C78C60E806B9A | Since: 1207
     */
    function networkAllowRemoteAttachmentModification(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x57DBA049E110F217 | Since: 1207
     */
    function networkAreHandlesTheSame(gamerHandle1: any, gamerHandle2: any): boolean;
    /**
     * Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
     *
     * Hash: 0x9DE986FC9A87C474 | Since: 1207
     */
    function networkArePlayersInSameTutorialSession(player: number | string | Player, index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE404BFF0ABA23CDC | Since: 1207
     */
    function networkAutoSessionCanSplitSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB51299166B844F3 | Since: 1207
     */
    function networkAutoSessionFinishInstance(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAADED99A6B268A27 | Since: 1207
     */
    function networkAutoSessionIsAllowedToMerge(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E2C3AEE6CE603B7 | Since: 1207
     */
    function networkAutoSessionIsObjectCreationPaused(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC223D299C670413D | Since: 1207
     */
    function networkAutoSessionSplitSession(playersToTake: number, maxInstancePlayers: number, sessionFlags: number, bucketId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBE782B3165AC8EC | Since: 1207
     */
    function networkAwardHasReachedMaxclaim(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF50DA1A3F8B1BA4 | Since: 1207
     */
    function networkCanAccessMultiplayer(loadingState: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1AF5E28E64A76A9F | Since: 1207
     */
    function networkCanRefreshFriendPage(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4EEBC3694E49C572 | Since: 1207
     */
    function networkCanSessionEnd(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x246545C37C27A717 | Since: 1207
     */
    function networkCanViewGamerUserContent(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A8112A974DE1EF6 | Since: 1207
     */
    function networkCheckAccessAndAlertIfFail(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83F28CE49FBBFFBA | Since: 1207
     */
    function networkCheckCommunicationPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x595F028698072DD9 | Since: 1207
     */
    function networkCheckUserContentPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD972DF67326F966E | Since: 1207
     */
    function networkClearClockTimeOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D14CCEE1B40381A | Since: 1207
     */
    function networkClearFoundGamers(): void;
    /**
     * No comment provided
     *
     * Hash: 0x86E0660E4F5C956D | Since: 1207
     */
    function networkClearGetGamerStatus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4484173759749B1 | Since: 1207
     */
    function networkClearPlatformInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBDF066252829606 | Since: 1207
     */
    function networkConcealPlayer(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9B83B77929D8863 | Since: 1207
     */
    function networkDidFindGamersSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AE17C6B0134B7F1 | Since: 1207
     */
    function networkDidGetGamerStatusSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC505036A35AFD01B | Since: 1207
     */
    function networkDisableLeaveRemotePedBehind(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x407091CF6037118E | Since: 1207
     */
    function networkDisableProximityMigration(netID: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x236905C700FDB54D | Since: 1207
     */
    function networkDisableRealtimeMultiplayer(): void;
    /**
     * Hardcoded to return -1.
     *
     * Hash: 0xD66C9E72B3CC4982 | Since: 1207
     */
    function networkDisplaynamesFromHandlesStart(): number;
    /**
     * No comment provided
     *
     * Hash: 0x38CE16C96BD11344 | Since: 1207
     */
    function networkDoesNetworkIdExist(netID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85E5F8B9B898B20A | Since: 1207
     */
    function networkDoesTunableExist(tunableContext: number | string, tunableName: number | string): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xAEDF1BC1C133D6E3 | Since: 1207
     */
    function networkDumpNetIfConfig(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0AFAFF5A51D72F7 | Since: 1207
     */
    function networkEndTutorialSession(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4CACA84440FA26F6 | Since: 1207
     */
    function networkGetAssistedDamageOfEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
     *
     * Hash: 0xD414BE129BB81B32 | Since: 1207
     */
    function networkGetAverageLatency(player: number | string | Player): number;
    /**
     * Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
     *
     * Hash: 0x350C23949E43686C | Since: 1207
     */
    function networkGetAveragePacketLoss(player: number | string | Player): number;
    /**
     * Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
     *
     * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
     *
     * Hash: 0x0E3A041ED6AC2B45 | Since: 1207
     */
    function networkGetAveragePing(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A1ADEEF01740A24 | Since: 1207
     */
    function networkGetDestroyerOfNetworkId(netId: number, weaponHash: number | string): number;
    /**
     * Hardcoded to return zero.
     *
     * Hash: 0x58CC181719256197 | Since: 1207
     */
    function networkGetDisplaynamesFromHandles(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCE4E5D9B0A4FF560 | Since: 1207
     */
    function networkGetEntityFromNetworkId(netId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC7827959479DCC78 | Since: 1207
     */
    function networkGetEntityIsNetworked(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42B2DAA6B596F5F8 | Since: 1207
     */
    function networkGetEntityKillerOfPlayer(player: number | string | Player, weaponHash: number | string): number;
    /**
     * Always returns a null string.
     *
     * Hash: 0x426141162EBE5CDB | Since: 1207
     */
    function networkGetGamertagFromHandle(gamerHandle: any): string;
    /**
     * No comment provided
     *
     * Hash: 0x225640E09EFFDC3F | Since: 1207
     */
    function networkGetGameMode(): number;
    /**
     * No comment provided
     *
     * Hash: 0x11A7ADCD629E170F | Since: 1207
     */
    function networkGetGlobalClock(hour: number, minute: number, second: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6D03BFBD643B2A02 | Since: 1207
     */
    function networkGetGlobalMultiplayerClock(hours: number, minutes: number, seconds: number): void;
    /**
     * Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
     *
     * Hash: 0x52C1EADAF7B10302 | Since: 1207
     */
    function networkGetHighestReliableResendCount(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x1D6A14F1F9A736FC | Since: 1436
     */
    function networkGetHostOfScript(scriptName: string): number | string;
    /**
     * No comment provided
     *
     * Hash: 0xC7B4D79B01FA7A5C | Since: 1232
     */
    function networkGetHostOfThisScript(): number | string;
    /**
     * No comment provided
     *
     * Hash: 0xB4A25351D79B444C | Since: 1207
     */
    function networkGetHostOfThread(threadId: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x638A3A81733086DB | Since: 1207
     */
    function networkGetInstanceIdOfThisScript(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE86051786B66CD8E | Since: 1207
     */
    function networkGetLocalHandle(gamerHandle: any): void;
    /**
     * Seems to always return 0, but it's used in quite a few loops.
     *
     * `for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)`
     * {
     * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)`
     * {
     * `var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));`
     *
     * Hash: 0xA6C90FBC38E395EE | Since: 1207
     */
    function networkGetMaxNumParticipants(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA11700682F3AD45C | Since: 1207
     */
    function networkGetNetworkIdFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x42871327315EDAE8 | Since: 1207
     */
    function networkGetNetworkIdFromRopeId(ropeId: number): number;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x6FD992C4A1C1B986 | Since: 1207
     */
    function networkGetNetStatisticsInfo(): void;
    /**
     * Hardcoded to return zero.
     *
     * ==== PS4 specific info ====
     *
     * Returns some sort of unavailable reason:
     * -1 = REASON_INVALID
     * 0 = REASON_OTHER
     * 1 = REASON_SYSTEM_UPDATE
     * 2 = REASON_GAME_UPDATE
     * 3 = REASON_SIGNED_OUT
     * 4 = REASON_AGE
     * 5 = REASON_CONNECTION
     *
     * =================================
     *
     * Hash: 0x74FB3E29E6D10FA9 | Since: 1207
     */
    function networkGetNpUnavailableReason(): number;
    /**
     * Returns the amount of players connected in the current session. Only works when connected to a session/server.
     *
     * Hash: 0xA4A79DD2D9600654 | Since: 1207
     */
    function networkGetNumConnectedPlayers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x18D0456E86604654 | Since: 1207
     */
    function networkGetNumParticipants(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3658E8CD94FC121A | Since: 1207
     */
    function networkGetNumScriptParticipants(scriptName: string, instanceId: number, position: number | string): number;
    /**
     * Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
     *
     * Hash: 0xFF8FCF9FFC458A1C | Since: 1207
     */
    function networkGetNumUnackedReliables(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x1B84DF6AF2A46938 | Since: 1207
     */
    function networkGetParticipantIndex(index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xCE5F689CF5A0A49D | Since: 1207
     */
    function networkGetPlayerFromGamerHandle(gamerHandle: any): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x24FB80D107371267 | Since: 1207
     */
    function networkGetPlayerIndex(player: number | string | Player): number;
    /**
     * Returns the Player associated to a given Ped when in an online session.
     *
     * Hash: 0x6C0E2E0125610278 | Since: 1207
     */
    function networkGetPlayerIndexFromPed(ped: number | Ped): number | string;
    /**
     * Hardcoded to return zero.
     *
     * Hash: 0x2FB53C631A49BE92 | Since: 1207
     */
    function networkGetPromotionDlgSeenCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE30CF56F1EFA5F43 | Since: 1207
     */
    function networkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFEFCC345CE357453 | Since: 1207
     */
    function networkGetRecentGamerNames(outData: any, dataSize: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEB1A4DD8352EC828 | Since: 1207
     */
    function networkGetRopeIdFromNetworkId(netId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x57D158647A6BFABF | Since: 1207
     */
    function networkGetScriptStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2910669969E9535E | Since: 1207
     */
    function networkGetThisScriptIsNetworkScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5ED0356A0CE3A34F | Since: 1207
     */
    function networkGetTimeoutTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDB7ABDD203FA3704 | Since: 1207
     */
    function networkGetTotalNumFriends(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCF61D4B4702EE9EB | Since: 1207
     */
    function networkGetTotalNumPlayers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x10BD227A753B0D84 | Since: 1436
     */
    function networkGetTunableCloudCrc(): number;
    /**
     * Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
     *
     * Hash: 0x3765C3A3E8192E10 | Since: 1207
     */
    function networkGetUnreliableResendCount(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xD45CB817D7E177D2 | Since: 1207
     */
    function networkHandleFromFriend(friendIndex: number, gamerHandle: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x388EB2B86C73B6B3 | Since: 1207
     */
    function networkHandleFromPlayer(player: number | string | Player, gamerHandle: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC1D768F2F5D6C05 | Since: 1207
     */
    function networkHashFromPlayerHandle(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x01BF60A500E28887 | Since: 1207
     */
    function networkHasControlOfEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D36070FE0215186 | Since: 1207
     */
    function networkHasControlOfNetworkId(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5BC9495F0B3B6FA6 | Since: 1207
     */
    function networkHasControlOfPickup(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x51EABCF2786515AB | Since: 1311
     */
    function networkHasControlOfPickupPlacement(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB07D3185E11657A5 | Since: 1207
     */
    function networkHasEntityBeenRegisteredWithThisThread(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD0498AD30E16B6BD | Since: 1207
     */
    function networkHasPendingInviteFailure(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5D10B3795F3FC886 | Since: 1207
     */
    function networkHasReceivedHostBroadcastData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA699957E60D80214 | Since: 1207
     */
    function networkHasRosPrivilege(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67A5589628E0CFF6 | Since: 1207
     */
    function networkHasSocialClubAccount(): boolean;
    /**
     * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
     *
     * Hash: 0x85443FF4C328F53B | Since: 1207
     */
    function networkHasValidRosCredentials(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25CB5A9F37BFD063 | Since: 1207
     */
    function networkHaveOnlinePrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8020A73847E0CA7D | Since: 1207
     */
    function networkHaveRosBannedPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8E7CE19219669AEB | Since: 1207
     */
    function networkIsAimCamActive(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD7C95D322FF57522 | Since: 1207
     */
    function networkIsClockTimeOverridden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A4CF4F48AD77302 | Since: 1207
     */
    function networkIsCloudAvailable(): boolean;
    /**
     * Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
     *
     * Hash: 0x16D3D49902F697BB | Since: 1207
     */
    function networkIsConnectedViaRelay(player: number | string | Player): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x78A9535AF83715C6 | Since: 1207
     */
    function networkIsCustomUpsellEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9C725D149622BFDE | Since: 1207
     */
    function networkIsFeatureSupported(featureId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDDF64C91BFCF0AA | Since: 1207
     */
    function networkIsFindingGamers(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1A24A179F9B31654 | Since: 1207
     */
    function networkIsFriend(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F10B05DDF8D16E9 | Since: 1207
     */
    function networkIsGamerInMySession(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x10FAB35428CCC9D7 | Since: 1207
     */
    function networkIsGameInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F79B93B0A8E4133 | Since: 1207
     */
    function networkIsHandleValid(gamerHandle: any): boolean;
    /**
     * If you are host, returns true else returns false.
     *
     * Hash: 0x8DB296B814EDDA07 | Since: 1207
     */
    function networkIsHost(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83CD99A1E6061AB5 | Since: 1207
     */
    function networkIsHostOfThisScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6CC27C9FA2040220 | Since: 1207
     */
    function networkIsInMpCutscene(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x2FC5650B0271CB57 | Since: 1207
     */
    function networkIsInPlatformParty(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0xFD8B834A8BA05048 | Since: 1207
     */
    function networkIsInPlatformPartyChat(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA97246103B63917 | Since: 1207
     */
    function networkIsInSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x048746E388762E11 | Since: 1207
     */
    function networkIsInSpectatorMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xADA24309FE08DACF | Since: 1207
     */
    function networkIsInTutorialSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6FF8FF40B6357D45 | Since: 1207
     */
    function networkIsParticipantActive(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x0BE73DA6984A6E33 | Since: 1207
     */
    function networkIsPendingFriend(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC4165C9165C166F | Since: 1207
     */
    function networkIsPlatformInvitePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB8DFD30D6973E135 | Since: 1207
     */
    function networkIsPlayerActive(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3CA58F6CB7CBD784 | Since: 1207
     */
    function networkIsPlayerAParticipant(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1AD5B71586B94820 | Since: 1207
     */
    function networkIsPlayerAParticipantOnScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x919B3C98ED8292F9 | Since: 1207
     */
    function networkIsPlayerConcealed(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x93DC1BE4E1ABE9D1 | Since: 1207
     */
    function networkIsPlayerConnected(player: number | string | Player): boolean;
    /**
     * Returns true if the passed value is less than 32.
     *
     * Hash: 0x255A5EF65EDA9167 | Since: 1207
     */
    function networkIsPlayerIndexValid(player: number | string | Player): boolean;
    /**
     * Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
     *
     * Hash: 0x63F9EE203C3619F2 | Since: 1207
     */
    function networkIsPlayerInMpCutscene(player: number | string | Player): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x8FF6059DA26E688A | Since: 1207
     */
    function networkIsPromotionEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1BB50CD340A996E6 | Since: 1207
     */
    function networkIsResettingPopulation(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9D40DF90FAD26098 | Since: 1207
     */
    function networkIsScriptActive(scriptName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1B89BC43B6E69107 | Since: 1207
     */
    function networkIsScriptActiveByHash(scriptHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD83C2B94E7508980 | Since: 1207
     */
    function networkIsSessionActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9DE624D2FC4B603F | Since: 1207
     */
    function networkIsSessionStarted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1077788E268557C2 | Since: 1207
     */
    function networkIsSignedOnline(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0467C11ED88B7D28 | Since: 1207
     */
    function networkIsTunableCloudRequestPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x35F0B98A8387274D | Since: 1207
     */
    function networkIsTutorialSessionChangePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2302C0264EA58D31 | Since: 1207
     */
    function networkPreventScriptHostMigration(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F51F367B710A832 | Since: 1207
     */
    function networkRefreshCurrentFriendPage(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x06FAACD625D80CAA | Since: 1207
     */
    function networkRegisterEntityAsNetworked(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E9B2F01C50DF595 | Since: 1207
     */
    function networkRegisterHostBroadcastVariables(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3364AA97340CA215 | Since: 1207
     */
    function networkRegisterPlayerBroadcastVariables(): void;
    /**
     * Note: this native was added in build 1311.23, but was only used after build 1436.25
     *
     * Hash: 0x42FB3B532D526E6C | Since: 1311
     */
    function networkRequestCloudTunables(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB69317BF5E782347 | Since: 1207
     */
    function networkRequestControlOfEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA670B3662FAFFBD0 | Since: 1207
     */
    function networkRequestControlOfNetworkId(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x56ED2C48558DAB78 | Since: 1311
     */
    function networkRequestControlOfPickupPlacement(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE483BB6BE686F632 | Since: 1207
     */
    function networkRequestJoin(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6D206D383BB5F6B1 | Since: 1207
     */
    function networkRequestRecentGamerNames(playerCount: number): boolean;
    /**
     * flags:
     * enum eSessionRequestOptionFlags
     * {
     * SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
     * SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
     * };
     *
     * seamlessType:
     * enum eSeamlessType
     * {
     * SEAMLESS_TYPE_NORMAL,
     * SEAMLESS_TYPE_PVE,
     * SEAMLESS_TYPE_DEV,
     * SEAMLESS_TYPE_NO_SEAMLESS
     * };
     *
     * Hash: 0x04019AE4956D4393 | Since: 1207
     */
    function networkRequestSessionSeamless(flags: number, seamlessType: number, sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x101F538C25ABB39A | Since: 1207
     */
    function networkResetPopulation(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA23C49EAA83ACFB | Since: 1207
     */
    function networkResurrectLocalPlayer(pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1B84178F8674195 | Since: 1207
     */
    function networkSeedRandomNumberGenerator(seed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x51F33DBC1A41CBFD | Since: 1207
     */
    function networkSessionGetSessionFlags(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF0C0C94B404206FA | Since: 1207
     */
    function networkSessionGetSessionType(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBAFFDE5F953720D9 | Since: 1207
     */
    function networkSessionIsAnyRequestInProgress(): boolean;
    /**
     * Checks for session flag 'SF_PRIVATE'
     *
     * Hash: 0xCEF70AA5B3F89BA1 | Since: 1207
     */
    function networkSessionIsPrivate(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8FB7C254CFCBF78E | Since: 1207
     */
    function networkSessionIsRequestInProgress(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCCF878D50F8AB10D | Since: 1207
     */
    function networkSessionIsRequestPendingTransition(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F54B146D3EDCE4D | Since: 1207
     */
    function networkSessionIsSessionRequestIdValid(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF2CBC969C4F090C7 | Since: 1207
     */
    function networkSessionIsTransitioning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x17C21B7319A05047 | Since: 1207
     */
    function networkSessionLeaveSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xECE6A0C1B59CD8BE | Since: 1207
     */
    function networkSessionLeftQueueOrRequestedSession(sessionRequestId: any): boolean;
    /**
     * See _NETWORK_SESSION_ADD_SESSION_FLAGS
     *
     * Hash: 0x78335E12DB0BF961 | Since: 1207
     */
    function networkSessionRemoveSessionFlags(flags: number): boolean;
    /**
     * matchType:
     * enum eMatchType
     * {
     * MATCHTYPE_DEPRECATED,
     * MATCHTYPE_UGCPLAYLIST,
     * MATCHTYPE_UGCMISSION,
     * MATCHTYPE_MINIGAME,
     * MATCHTYPE_SEAMLESS,
     * MATCHTYPE_PRIVATE_DO_NOT_USE
     * };
     *
     * Hash: 0x309BBEBEA8A3986C | Since: 1207
     */
    function networkSessionRequestSessionCompetitive(flags: number, matchType: number, userHash: number, sessionRequestId: any): boolean;
    /**
     * Session flag 'SF_PRIVATE' is set internally
     * p1 represents max amount of players in private session
     *
     * Hash: 0x39A8EF7AF29A192C | Since: 1207
     */
    function networkSessionRequestSessionPrivate(flags: number, numPlayers: number, userHash: number, sessionRequestId: any): boolean;
    /**
     * Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
     * Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
     *
     * p1 is unused
     *
     * Hash: 0x2989E131FDE37E97 | Since: 1207
     */
    function networkSessionRequestSessionSeamless(flags: number, seamlessType: number, userHash: number, sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2C5BD9A43987AA27 | Since: 1207
     */
    function networkSetCompletedMpIntroFlowOnCurrentSlot(completed: boolean): boolean;
    /**
     * if set to true other network players can't see it
     * if set to false other network player can see it
     * =========================================
     * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
     *
     * pc or last gen?
     *
     * ^^ last-gen
     *
     * Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
     *
     * Hash: 0xF1CA12B18AEF5298 | Since: 1207
     */
    function networkSetEntityOnlyExistsForParticipants(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD785864798258032 | Since: 1207
     */
    function networkSetEntityRemainsWhenUnnetworked(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF808475FA571D823 | Since: 1207
     */
    function networkSetFriendlyFireOption(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9CA5DE655269FEC4 | Since: 1207
     */
    function networkSetInMpCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x423DE3854BB50894 | Since: 1207
     */
    function networkSetInSpectatorMode(toggle: boolean, playerPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D95C7E2D7E07307 | Since: 1207
     */
    function networkSetLocalPlayerInvincibleTime(time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x007FF852DCF49DA4 | Since: 1207
     */
    function networkSetLocalPlayerPendingFastInstanceId(instanceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x524FF0AEFF9C3973 | Since: 1207
     */
    function networkSetLocalPlayerSyncLookAt(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B3D11CD9FFCDFC9 | Since: 1207
     */
    function networkSetMissionFinished(): void;
    /**
     * No comment provided
     *
     * Hash: 0x86FD10251A7118A4 | Since: 1207
     */
    function networkSetMpMissionFlagOnCurrentSlot(enabled: boolean, flagIndex: number): boolean;
    /**
     * Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
     *
     * Hash: 0x9C25E8EC4C535FBD | Since: 1207
     */
    function networkSetPlayerIsPassive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x29FE035D35B8589C | Since: 1207
     */
    function networkSetRecentGamersEnabled(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DCCACDCFC569362 | Since: 1207
     */
    function networkSetRichPresence(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7AC752103856FB20 | Since: 1207
     */
    function networkSetScriptReadyForEvents(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CA59E306ECB80A5 | Since: 1207
     */
    function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, instanceId: number): void;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0xDA4B1A479C414FB2 | Since: 1207
     */
    function networkShouldShowPromotionDlg(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83FE8D7229593017 | Since: 1207
     */
    function networkShowAccountUpgradeUi(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x6BFF5F84102DF80A | Since: 1207
     */
    function networkShowChatRestrictionMsc(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x859ED1CEA343FCA8 | Since: 1207
     */
    function networkShowProfileUi(gamerHandle: any): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x5C497525F803486B | Since: 1207
     */
    function networkShowPsnUgcRestriction(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF94A0D5B254375DF | Since: 1207
     */
    function networkSpawnConfigSetFlags(flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x59577799F6AE2F34 | Since: 1207
     */
    function networkSpawnConfigSetGroundToRootOffset(offset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0608326F7B98C08D | Since: 1207
     */
    function networkSpawnConfigSetTuningFloat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x17E0198B3882C2CB | Since: 1207
     */
    function networkStartSoloTutorialSession(): void;
    /**
     * Always returns -1. Seems to be XB1 specific.
     *
     * Hash: 0xDEB2B99A1AF1A2A6 | Since: 1207
     */
    function networkStartUserContentPermissionsCheck(gamerHandle: any): number;
    /**
     * Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
     *
     * Hash: 0x0C8BC052AE87D744 | Since: 1207
     */
    function networkTriggerDamageEventForZeroDamage(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2AD5D29A99D4B26 | Since: 1207
     */
    function networkTryAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string, defaultValue: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA18393089C05E49C | Since: 1207
     */
    function networkTryAccessTunableFloatHash(tunableContext: number | string, tunableName: number | string, defaultValue: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xA25E006B36719774 | Since: 1207
     */
    function networkTryAccessTunableIntHash(tunableContext: number | string, tunableName: number | string, defaultValue: number): number;
    /**
     * gets the entity id of a network id
     *
     * Hash: 0xBFFEAB45A9A9094A | Since: 1207
     */
    function netToEnt(netHandle: number): number;
    /**
     * gets the object id of a network id
     *
     * Hash: 0xD8515F5FEA14CB3F | Since: 1207
     */
    function netToObj(netHandle: number): number;
    /**
     * gets the ped id of a network id
     *
     * Hash: 0xBDCD95FC216A8B3E | Since: 1207
     */
    function netToPed(netHandle: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x367B936610BA360C | Since: 1207
     */
    function netToVeh(netHandle: number): number;
    /**
     * Returns the network ID of the given object.
     *
     * Hash: 0x99BFDC94A603E541 | Since: 1207
     */
    function objToNet(object: number | Object): number;
    /**
     * Return the local Participant ID
     *
     * Hash: 0x90986E8876CE0A83 | Since: 1207
     */
    function participantId(): number | string;
    /**
     * Return the local Participant ID.
     *
     * This native is exactly the same as 'PARTICIPANT_ID' native.
     *
     * Hash: 0x57A3BDDAD8E5AA0A | Since: 1207
     */
    function participantIdToInt(): number;
    /**
     * Returns the network ID of the given ped.
     *
     * Hash: 0x0EDEC3C276198689 | Since: 1207
     */
    function pedToNet(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x89D803CD48622150 | Since: 1207
     */
    function preventMigrationOfEntitiesInFastInstanceForLocalPlayer(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7182EDDA1EE7DB5A | Since: 1207
     */
    function preventNetworkIdMigration(netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7DDA8BD3BCF751C | Since: 1207
     */
    function reserveNetworkClientMissionObjects(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x807E119F80231732 | Since: 1207
     */
    function reserveNetworkClientMissionPeds(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E5C93BD0C32FBF8 | Since: 1207
     */
    function reserveNetworkMissionObjects(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB60FEBA45333D36F | Since: 1207
     */
    function reserveNetworkMissionPeds(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D40E7D749BC6E6D | Since: 1207
     */
    function reserveNetworkMissionPickups(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x76B02E21ED27A469 | Since: 1207
     */
    function reserveNetworkMissionVehicles(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0031D3C8F36AB82 | Since: 1207
     */
    function setEntityVisibleInCutscene(entity: number | Entity): void;
    /**
     * Old name: _SET_LOCAL_PLAYER_AS_GHOST
     *
     * Hash: 0x5FFE9B4144F9712F | Since: 1207
     */
    function setLocalPlayerAsGhost(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5F773C1A1D9D168 | Since: 1207
     */
    function setLocalPlayerInvisibleLocally(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1065D68947E7B6E | Since: 1207
     */
    function setLocalPlayerVisibleInCutscene(local: boolean, remote: boolean, instanceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8A024587329F36A | Since: 1207
     */
    function setNetworkIdAlwaysExistsForPlayer(netId: number, player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE05E81A888FA63C8 | Since: 1207
     */
    function setNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9ED3108D6847760A | Since: 1207
     */
    function setNetworkIdStopCloning(networkId: number, bStopCloning: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6928482543022B4 | Since: 1207
     */
    function setNetworkIdVisibleInCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12B37D54667DB0B8 | Since: 1207
     */
    function setPlayerInvisibleLocally(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAA10F1FAFB11AF2 | Since: 1207
     */
    function setPlayerVisibleLocally(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3448505B6E35262D | Since: 1207
     */
    function textureDownloadGetName(textureDownloadId: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x487EB90B98E9FB19 | Since: 1207
     */
    function textureDownloadRelease(textureDownloadId: number): void;
    /**
     * Returns textureDownloadId
     *
     * Hash: 0x16160DA74A8E74A2 | Since: 1207
     */
    function textureDownloadRequest(gamerHandle: any, filePath: string, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE931354FEA710038 | Since: 1207
     */
    function ugcClearQueryResults(ugcRequestId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x162C23CA83ED0A62 | Since: 1207
     */
    function ugcDidDescriptionRequestSucceed(description: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0B6009A90B8495F1 | Since: 1207
     */
    function ugcDidRequestSucceed(ugcRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40F7E66472DF3E5C | Since: 1207
     */
    function ugcGetCachedDescription(description: number | string, length: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xEBFA8D50ADDC54C4 | Since: 1207
     */
    function ugcHasDescriptionRequestFinished(description: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9EB4D606076615D | Since: 1207
     */
    function ugcHasRequestFinished(ugcRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2D5DC831176D0114 | Since: 1207
     */
    function ugcIsDescriptionRequestInProgress(description: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF53E48461B71EECB | Since: 1207
     */
    function ugcIsLanguageSupported(languageId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF4AC4FA844FD559A | Since: 1207
     */
    function ugcIsRequestPending(ugcRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF794765390A6DCA5 | Since: 1207
     */
    function ugcQueryGetContentHasPlayerRecord(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76160E0396142765 | Since: 1207
     */
    function ugcQueryGetContentNum(ugcRequestId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF8F0705E77A0E705 | Since: 1207
     */
    function ugcQueryWasForceCancelled(ugcRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x68103E2247887242 | Since: 1207
     */
    function ugcReleaseAllCachedDescriptions(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A34CD9C3C5BEC44 | Since: 1207
     */
    function ugcReleaseCachedDescription(description: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5E0165278F6339EE | Since: 1207
     */
    function ugcRequestCachedDescription(description: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7FD2990AF016795E | Since: 1207
     */
    function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string, fileId: number, fileVersion: number, languageId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF98DDE0A8ED09323 | Since: 1207
     */
    function ugcSetQueryDataFromOffline(): void;
    /**
     * No comment provided
     *
     * Hash: 0x308F96458B7087CC | Since: 1207
     */
    function ugcTextureDownloadRequest(): number;
    /**
     * Returns the network ID of the given vehicle.
     *
     * Hash: 0xB4C94523F023419C | Since: 1207
     */
    function vehToNet(vehicle: number | Vehicle): number;
    /**
     * Note: this native was added in build 1311.16
     *
     * GET_NUM_*
     *
     * Hash: 0x02B3CDD652B3CDD6 | Since: 1311
     */
    function _0x02B3CDD652B3CDD6(): number;
    /**
     * Only used in SP R* Script dominoes_sp: p1 = 0
     *
     * Hash: 0x02C4C6C2900D84DF | Since: 1207
     */
    function _0x02C4C6C2900D84DF(player: number | string | Player): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x039AD6B57D5179FF | Since: 1311
     */
    function _0x039AD6B57D5179FF(): number;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x039B692B3318FAB6 | Since: 1311
     */
    function _0x039B692B3318FAB6(): number;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x062842D61D0D53FD | Since: 1311
     */
    function _0x062842D61D0D53FD(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0B6B4507AC5EA8B8 | Since: 1207
     */
    function _0x0B6B4507AC5EA8B8(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BF90CBB6B72977B | Since: 1207
     */
    function _0x0BF90CBB6B72977B(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x0CC28C08613BA9E5 | Since: 1207
     */
    function _0x0CC28C08613BA9E5(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x0D183D8490EE4366 | Since: 1311
     */
    function _0x0D183D8490EE4366(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E54D4DA6018FF8E | Since: 1207
     */
    function _0x0E54D4DA6018FF8E(): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x106CBDD5077DEDE1 | Since: 1311
     */
    function _0x106CBDD5077DEDE1(): number;
    /**
     * No comment provided
     *
     * Hash: 0x13F592FC3BF0EA84 | Since: 1207
     */
    function _0x13F592FC3BF0EA84(volume: number, originalWeight: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1413B6BF27AB7A95 | Since: 1207
     */
    function _0x1413B6BF27AB7A95(): number;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x160F0CE6D76A39C9 | Since: 1207
     */
    function _0x160F0CE6D76A39C9(): any;
    /**
     * No comment provided
     *
     * Hash: 0x16EFB123C4451032 | Since: 1207
     */
    function _0x16EFB123C4451032(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x18B94666CF610AEB | Since: 1207
     */
    function _0x18B94666CF610AEB(): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x19447FCAE97704DC | Since: 1311
     */
    function _0x19447FCAE97704DC(ctx: number | string, ec: number, ex: boolean, ro: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x19B52C20B5C4757C | Since: 1207
     */
    function _0x19B52C20B5C4757C(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x1E4E097D71D449FB | Since: 1311
     */
    function _0x1E4E097D71D449FB(): number;
    /**
     * No comment provided
     *
     * Hash: 0x232E1EB23CDB313C | Since: 1207
     */
    function _0x232E1EB23CDB313C(): boolean;
    /**
     * _NETWORK_GET_A* - _NETWORK_GET_D*
     *
     * Hash: 0x236321F1178A5446 | Since: 1207
     */
    function _0x236321F1178A5446(player: number | string | Player, ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2686BD9566B65EDA | Since: 1207
     */
    function _0x2686BD9566B65EDA(pos: Vector3): void;
    /**
     * _GET_LAUNCH_PARAM_(RESPOT?)*
     * Name is probably invalid since this native only reads data from parsed entity.
     *
     * Hash: 0x26A867C0B7A456D1 | Since: 1232
     */
    function _0x26A867C0B7A456D1(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x271F95E55C663B8B | Since: 1207
     */
    function _0x271F95E55C663B8B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x273E04A3A7AD1F2D | Since: 1207
     */
    function _0x273E04A3A7AD1F2D(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x27B1AE4D8C652F08 | Since: 1207
     */
    function _0x27B1AE4D8C652F08(): number;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x2C4E98DDA475364F | Since: 1207
     */
    function _0x2C4E98DDA475364F(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x2CD41AC000E6F611 | Since: 1207
     */
    function _0x2CD41AC000E6F611(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3034C77C79A58880 | Since: 1207
     */
    function _0x3034C77C79A58880(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x316FD416C432C761 | Since: 1311
     */
    function _0x316FD416C432C761(): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x335AF56613CA0F49 | Since: 1311
     */
    function _0x335AF56613CA0F49(): void;
    /**
     * _NETWORK_A* - _NETWORK_C*
     *
     * Hash: 0x34BC1E79546BA543 | Since: 1232
     */
    function _0x34BC1E79546BA543(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AA0CDC63696166D | Since: 1207
     */
    function _0x3AA0CDC63696166D(): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x3CBD6565D9C3B133 | Since: 1311
     */
    function _0x3CBD6565D9C3B133(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E4A16BC669E71B3 | Since: 1207
     */
    function _0x3E4A16BC669E71B3(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3E74A687A73979C6 | Since: 1207
     */
    function _0x3E74A687A73979C6(): void;
    /**
     * Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
     *
     * Hash: 0x3E8CCE6769DB5F34 | Since: 1207
     */
    function _0x3E8CCE6769DB5F34(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3F0ABAE38A0515AD | Since: 1207
     */
    function _0x3F0ABAE38A0515AD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F2EE18A3E294801 | Since: 1207
     */
    function _0x3F2EE18A3E294801(): number;
    /**
     * No comment provided
     *
     * Hash: 0x405DDEFB1F531B18 | Since: 1207
     */
    function _0x405DDEFB1F531B18(volume: number): void;
    /**
     * Note: this native was added in build 1355.30
     *
     * Hash: 0x40FEDB13870042F1 | Since: 1355
     */
    function _0x40FEDB13870042F1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x41452E8A3B9C0C4B | Since: 1207
     */
    function _0x41452E8A3B9C0C4B(): number;
    /**
     * Note: this native was added in build 1355.30
     *
     * Hash: 0x422F9D6D6C7BC290 | Since: 1355
     */
    function _0x422F9D6D6C7BC290(): void;
    /**
     * No comment provided
     *
     * Hash: 0x43CF999205084B4B | Since: 1207
     */
    function _0x43CF999205084B4B(): void;
    /**
     * Returns the entity associated with the given network ID.
     *
     * Hash: 0x4538EE7C321590BC | Since: 1207
     */
    function _0x4538EE7C321590BC(networkId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x455156F47DC6B78C | Since: 1207
     */
    function _0x455156F47DC6B78C(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x4835413EA6F9C9CD | Since: 1311
     */
    function _0x4835413EA6F9C9CD(): number;
    /**
     * No comment provided
     *
     * Hash: 0x49CF17A564918E8D | Since: 1207
     */
    function _0x49CF17A564918E8D(): void;
    /**
     * Hardcoded to return zero.
     *
     * Hash: 0x5133CF81924F1129 | Since: 1207
     */
    function _0x5133CF81924F1129(): number;
    /**
     * No comment provided
     *
     * Hash: 0x51951DE06C0D1C40 | Since: 1207
     */
    function _0x51951DE06C0D1C40(player: number | string | Player, type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x564552C6AF1EEAB1 | Since: 1207
     */
    function _0x564552C6AF1EEAB1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5759160AC17C13CE | Since: 1207
     */
    function _0x5759160AC17C13CE(gamerHandle: any, message: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A91BCEF74944E93 | Since: 1207
     */
    function _0x5A91BCEF74944E93(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B9C6AC118FD4774 | Since: 1207
     */
    function _0x5B9C6AC118FD4774(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CB8B0C846D0F30B | Since: 1207
     */
    function _0x5CB8B0C846D0F30B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CD3AAD8FF9ED121 | Since: 1207
     */
    function _0x5CD3AAD8FF9ED121(): void;
    /**
     * _NETWORK_SPAWN_CONFIG_*
     *
     * Hash: 0x5D3C528B7A7DF836 | Since: 1207
     */
    function _0x5D3C528B7A7DF836(nsctf: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5ED39DA62BEB1330 | Since: 1207
     */
    function _0x5ED39DA62BEB1330(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5F0E99071582DECA | Since: 1207
     */
    function _0x5F0E99071582DECA(index: number): any;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x5F328FC909F0E0FF | Since: 1311
     */
    function _0x5F328FC909F0E0FF(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x603469298A4308AF | Since: 1207
     */
    function _0x603469298A4308AF(): void;
    /**
     * No comment provided
     *
     * Hash: 0x61BFBAA795E712AD | Since: 1207
     */
    function _0x61BFBAA795E712AD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x64A36BA85CE01A81 | Since: 1207
     */
    function _0x64A36BA85CE01A81(): any;
    /**
     * No comment provided
     *
     * Hash: 0x67CCDF74C4DF7169 | Since: 1207
     */
    function _0x67CCDF74C4DF7169(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x691E4DE5309EAEFC | Since: 1207
     */
    function _0x691E4DE5309EAEFC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C27442A225A241A | Since: 1207
     */
    function _0x6C27442A225A241A(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6C7E04E9DE451789 | Since: 1207
     */
    function _0x6C7E04E9DE451789(): void;
    /**
     * _NETWORK_SPAWN_CONFIG_*
     *
     * Hash: 0x6CEE2E30021DAEC6 | Since: 1207
     */
    function _0x6CEE2E30021DAEC6(): void;
    /**
     * _NETWORK_GET_A* - _NETWORK_GET_D*
     *
     * Hash: 0x6CF82A7F65A5AD5F | Since: 1207
     */
    function _0x6CF82A7F65A5AD5F(ped: number | Ped): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x704F92B3AF20D857 | Since: 1207
     */
    function _0x704F92B3AF20D857(setting: boolean): void;
    /**
     * Only used in R* Script fm_race_controller
     *
     * Hash: 0x71FA2D1880C48032 | Since: 1207
     */
    function _0x71FA2D1880C48032(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x744BFBB0CA908161 | Since: 1311
     */
    function _0x744BFBB0CA908161(): number;
    /**
     * No comment provided
     *
     * Hash: 0x75FC34A2BA345BD1 | Since: 1207
     */
    function _0x75FC34A2BA345BD1(entity: number | Entity, player: number | string | Player): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x7673C0D2C5CDAC55 | Since: 1311
     */
    function _0x7673C0D2C5CDAC55(): void;
    /**
     * No comment provided
     *
     * Hash: 0x77B299E8799B1332 | Since: 1207
     */
    function _0x77B299E8799B1332(): any;
    /**
     * No comment provided
     *
     * Hash: 0x780A13F780A13F1B | Since: 1311
     */
    function _0x780A13F780A13F1B(toggle: boolean): void;
    /**
     * Note: this native was added in build 1436.31
     *
     * Hash: 0x78271BC02AE9AF83 | Since: 1436
     */
    function _0x78271BC02AE9AF83(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A8E8DF782B47EB0 | Since: 1207
     */
    function _0x7A8E8DF782B47EB0(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7B3FF2D193628126 | Since: 1207
     */
    function _0x7B3FF2D193628126(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x7BCA0A3972708436 | Since: 1207
     */
    function _0x7BCA0A3972708436(outData: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x7E300B5B86AB1D1A | Since: 1207
     */
    function _0x7E300B5B86AB1D1A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x814729078AED6D30 | Since: 1207
     */
    function _0x814729078AED6D30(): void;
    /**
     * No comment provided
     *
     * Hash: 0x862C5040F4888741 | Since: 1207
     */
    function _0x862C5040F4888741(player1: number | string | Player, player2: number | string | Player): boolean;
    /**
     * Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
     *
     * Hash: 0x880A7202301E282B | Since: 1311
     */
    function _0x880A7202301E282B(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x894B5ECAB45D2342 | Since: 1207
     */
    function _0x894B5ECAB45D2342(netHandle: number): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x917AD74BDCF8B6E9 | Since: 1311
     */
    function _0x917AD74BDCF8B6E9(): number;
    /**
     * No comment provided
     *
     * Hash: 0x923346025512DFB7 | Since: 1207
     */
    function _0x923346025512DFB7(): any;
    /**
     * Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
     *
     * Hash: 0x950ACD8F05B7B9DF | Since: 1355
     */
    function _0x950ACD8F05B7B9DF(): any;
    /**
     * Must be called from a background script, otherwise it will do nothing.
     *
     * Hash: 0x979765465A6F25FC | Since: 1207
     */
    function _0x979765465A6F25FC(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x97BCE4C4B3191228 | Since: 1207
     */
    function _0x97BCE4C4B3191228(): void;
    /**
     * No comment provided
     *
     * Hash: 0x981146E5C9CE9250 | Since: 1207
     */
    function _0x981146E5C9CE9250(inviteIndex: number): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x982D7AD755B8F62C | Since: 1311
     */
    function _0x982D7AD755B8F62C(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9B39B0555CC692B5 | Since: 1207
     */
    function _0x9B39B0555CC692B5(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x9E5A47744C0F0376 | Since: 1311
     */
    function _0x9E5A47744C0F0376(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA2837A5E21FB5A58 | Since: 1207
     */
    function _0xA2837A5E21FB5A58(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA47D48D06AA5A188 | Since: 1207
     */
    function _0xA47D48D06AA5A188(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA63E4F050F20021F | Since: 1207
     */
    function _0xA63E4F050F20021F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6F1BAABFF6AD7B9 | Since: 1207
     */
    function _0xA6F1BAABFF6AD7B9(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xA7670F7991099680 | Since: 1311
     */
    function _0xA7670F7991099680(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA94ECE191D90637A | Since: 1207
     */
    function _0xA94ECE191D90637A(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA95470DA137587F5 | Since: 1207
     */
    function _0xA95470DA137587F5(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xACC44768AF229042 | Since: 1207
     */
    function _0xACC44768AF229042(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFA14F98327791CE | Since: 1207
     */
    function _0xAFA14F98327791CE(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB131E686BD97B3F8 | Since: 1207
     */
    function _0xB131E686BD97B3F8(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB389289F031F059A | Since: 1207
     */
    function _0xB389289F031F059A(): number;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xBAF7E2979442B29F | Since: 1311
     */
    function _0xBAF7E2979442B29F(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBB1EC8C2EEF33BAA | Since: 1207
     */
    function _0xBB1EC8C2EEF33BAA(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB697756309D77EE | Since: 1207
     */
    function _0xBB697756309D77EE(): any;
    /**
     * Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
     *
     * Hash: 0xBC7D36946D19E60E | Since: 1207
     */
    function _0xBC7D36946D19E60E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF8276E51761F9DA | Since: 1207
     */
    function _0xBF8276E51761F9DA(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC028B3F52C707C49 | Since: 1207
     */
    function _0xC028B3F52C707C49(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC0CFFDA87C2C163D | Since: 1207
     */
    function _0xC0CFFDA87C2C163D(): any;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xC1968045EEB563B7 | Since: 1311
     */
    function _0xC1968045EEB563B7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8B6D18E22484643 | Since: 1207
     */
    function _0xC8B6D18E22484643(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xC964FCD3D1720697 | Since: 1207
     */
    function _0xC964FCD3D1720697(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCA58D4FD20D70F24 | Since: 1207
     */
    function _0xCA58D4FD20D70F24(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCC4E72C339461ED1 | Since: 1207
     */
    function _0xCC4E72C339461ED1(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCD53E6CBF609C012 | Since: 1207
     */
    function _0xCD53E6CBF609C012(ugcRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF23AB5BD47B384D | Since: 1207
     */
    function _0xCF23AB5BD47B384D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1FFB246F4E088AC | Since: 1207
     */
    function _0xD1FFB246F4E088AC(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD39A72AE5EBD57E5 | Since: 1207
     */
    function _0xD39A72AE5EBD57E5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3A3C8B9F3BDEF81 | Since: 1207
     */
    function _0xD3A3C8B9F3BDEF81(): any;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xD3B6EBC6C3D77D44 | Since: 1311
     */
    function _0xD3B6EBC6C3D77D44(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4022C7286B0DFA2 | Since: 1207
     */
    function _0xD4022C7286B0DFA2(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD42C543F73233041 | Since: 1232
     */
    function _0xD42C543F73233041(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD637D327080CD86E | Since: 1207
     */
    function _0xD637D327080CD86E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD78A26024BB13E08 | Since: 1207
     */
    function _0xD78A26024BB13E08(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7BAD4062074B9C1 | Since: 1207
     */
    function _0xD7BAD4062074B9C1(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD7D0DF27CB1765B5 | Since: 1355
     */
    function _0xD7D0DF27CB1765B5(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA1BFED8582F61F0 | Since: 1207
     */
    function _0xDA1BFED8582F61F0(): boolean;
    /**
     * Note: this native was added in build 1491.50
     *
     * Hash: 0xDBDF80673BBA3D65 | Since: 1491
     */
    function _0xDBDF80673BBA3D65(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC6AD5C046F33AB4 | Since: 1207
     */
    function _0xDC6AD5C046F33AB4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCA4A74135E1DEA5 | Since: 1207
     */
    function _0xDCA4A74135E1DEA5(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE10F2D7715ABABEC | Since: 1207
     */
    function _0xE10F2D7715ABABEC(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE31A04513237DC89 | Since: 1207
     */
    function networkUnregisterNetworkedEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xE39600E50D608693 | Since: 1207
     */
    function _0xE39600E50D608693(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3AB5EEFCB6671A2 | Since: 1207
     */
    function _0xE3AB5EEFCB6671A2(setting: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5634491A58C2703 | Since: 1207
     */
    function _0xE5634491A58C2703(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE59F4924BD3A718D | Since: 1207
     */
    function _0xE59F4924BD3A718D(): string;
    /**
     * No comment provided
     *
     * Hash: 0xE5FF65CFF5160752 | Since: 1207
     */
    function _0xE5FF65CFF5160752(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE79BA3BC265895DA | Since: 1207
     */
    function _0xE79BA3BC265895DA(): string;
    /**
     * No comment provided
     *
     * Hash: 0xE8E633215471BB5D | Since: 1207
     */
    function _0xE8E633215471BB5D(): number;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xEC089F84A9C16C62 | Since: 1207
     */
    function _0xEC089F84A9C16C62(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF23A6D6C11D8EC15 | Since: 1207
     */
    function _0xF23A6D6C11D8EC15(gamerHandle: any): boolean;
    /**
     * Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
     *
     * Hash: 0xF260AF6F43953316 | Since: 1207
     */
    function _0xF260AF6F43953316(handle: number): number;
    /**
     * Returns the entity's network ID.
     *
     * Hash: 0xF302AB9D978352EE | Since: 1207
     */
    function _0xF302AB9D978352EE(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xF342F6BD0A8287D5 | Since: 1207
     */
    function _0xF342F6BD0A8287D5(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xF8DC69DC1AD19072 | Since: 1311
     */
    function _0xF8DC69DC1AD19072(): number;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xFB3205788F8AFA3F | Since: 1311
     */
    function _0xFB3205788F8AFA3F(): number;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xFC6FCF4C03F1BBF6 | Since: 1207
     */
    function _0xFC6FCF4C03F1BBF6(): void;
    /**
     * Only used in R* Script startup_clip Seems to just kill the network connection, sets the players coords to 0, 0, 0 when doing GetEntityCoords
     *
     * Hash: 0xFD4272A137703449 | Since: 1207
     */
    function networkLeaveSession(): void;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xFD8112109A96877C | Since: 1311
     */
    function _0xFD8112109A96877C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE53B1F8D43F19BF | Since: 1207
     */
    function _0xFE53B1F8D43F19BF(player1: number | string | Player, player2: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xFF36F36B07E69059 | Since: 1207
     */
    function _0xFF36F36B07E69059(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0D73CDDEA79DDCD | Since: 1207
     */
    function animSceneToNet(animScene: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x782C94DB6469634D | Since: 1207
     */
    function clearLaunchParam(paramName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBC754CB6CCB9378 | Since: 1232
     */
    function commerceStoreIsEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCE5E79D9E303628E | Since: 1355
     */
    function commerceStoreIsOpen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02E97CE283648CD9 | Since: 1207
     */
    function getLaunchParamExists(paramName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC59AB6A04333C502 | Since: 1207
     */
    function getLaunchParamString(): string;
    /**
     * No comment provided
     *
     * Hash: 0xD2BA051B94CA9BCC | Since: 1207
     */
    function getNumCreatedMissionPickups(): number;
    /**
     * Note: this native was added in build 1311.16
     *
     * Hash: 0x4FE932E84FE932E8 | Since: 1311
     */
    function getNumPeerNegotiationResponses(): number;
    /**
     * No comment provided
     *
     * Hash: 0x62BE3ECC79FBD004 | Since: 1207
     */
    function getNumReservedMissionPickups(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDCC4B7F7112E8AB7 | Since: 1207
     */
    function getPlayerWaypointIsActive(player: number | string | Player): boolean;
    /**
     * Only used in R* Script net_stable_manager
     *
     * Hash: 0x99AAC89C510DEB0D | Since: 1491
     */
    function getReservedMissionEntitiesForThread(threadId: number, pedMax: number, vehicleMax: number, unkMax: number, pedMin: number, vehicleMin: number, unkMin: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0541EF28E9C4783 | Since: 1207
     */
    function getSocialMatchmakingAllowed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E2FD8CF7EB10E53 | Since: 1207
     */
    function localPlayerPedshotTextureDownloadRequest(playerSlot: number, personaPhotoLocalCacheType: number): number;
    /**
     * Returns textureDownloadId
     *
     * Hash: 0x9B5DB6CEAFAA10BB | Since: 1207
     */
    function mugshotTextureDownloadRequest(gamerHandle: any, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x157D8F3DE12B307F | Since: 1207
     */
    function networkAddPlayerToRecentGamersList(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BAA028F52EED310 | Since: 1311
     */
    function networkAlert(ctx: number | string, lh: number | string, ec: number, h: number): void;
    /**
     * Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
     *
     * Hash: 0xF5C5929E07512F80 | Since: 1207
     */
    function networkAreOnlineNotificationsShownInStoryMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x11820D1AE80DEA39 | Since: 1207
     */
    function networkArePlayersInSamePlatformParty(gamerHandle1: any, gamerHandle2: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE258570E0C116A66 | Since: 1207
     */
    function networkAutoSessionIsAutoWarpDisabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x277865A734918AE6 | Since: 1207
     */
    function networkAutoSessionIsInstancedSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA021095C983F20D8 | Since: 1207
     */
    function networkAutoSessionIsProcessingSessionSplit(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x63246A24F5747510 | Since: 1207
     */
    function networkAutoSessionSetAllowedToMerge(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A428058079EE65C | Since: 1207
     */
    function networkAutoSessionSetAllowedToSplit(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4440FEE3EFE78F54 | Since: 1207
     */
    function networkAutoSessionSetAutoWarpEnabled(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D87BA8EF15226CD | Since: 1207
     */
    function networkAutoSessionSplitSessionSuccessful(): boolean;
    /**
     * On PC this returns true if gamerHandle is a valid handle.
     *
     * Hash: 0x99ABE9BF9DADA162 | Since: 1207
     */
    function networkCanAddFriend(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF23D6475640D29EB | Since: 1207
     */
    function networkCanReceiveInviteFromHandle(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x65F040D91001ED4B | Since: 1207
     */
    function networkClearClockOverrideOvertime(milliseconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x669E223E64B1903C | Since: 1207
     */
    function networkClockTimeOverride(hour: number, minute: number, second: number, transitionTime: number, pauseClock: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE28C13ECC36FF14E | Since: 1207
     */
    function networkClockTimeOverride2(hour: number, minute: number, second: number, transitionTime: number, pauseClock: boolean, clockwise: boolean): void;
    /**
     * Must be called from a background script, otherwise it will do nothing.
     *
     * Hash: 0xFA38B52F91B59075 | Since: 1207
     */
    function networkDebugRequestEntityPosition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12AEB56B489415C5 | Since: 1207
     */
    function networkDidRecentGamerNamesRequestSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA3EEC0A5AFF3FC5B | Since: 1207
     */
    function networkGetCurrentFriendPageData(): boolean;
    /**
     * Example:
     *
     * char displayName[64];
     * if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
     * {
     * // use displayName
     * }
     *
     * Hash: 0x7FEE4F07C54B6B3C | Since: 1207
     */
    function networkGetDisplayNameFromHandle(gamerHandle: any, displayName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5659D87BE674AB17 | Since: 1207
     */
    function networkGetGamertagFromFriend(gamerHandle: any): string;
    /**
     * No comment provided
     *
     * Hash: 0xFBDFE1C1356E12E8 | Since: 1207
     */
    function networkGetGamerSessionFromHandle(data: any, count: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDAEB478E58F8DEA | Since: 1207
     */
    function networkGetGamerStatus(gamerHandle: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xDD7806FD0543BC3D | Since: 1207
     */
    function networkGetGlobalEntityFlags(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xFB9ECED5B68F3B78 | Since: 1207
     */
    function networkGetInstanceIdOfThread(threadId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x37A834AEC6A4F74A | Since: 1207
     */
    function networkGetNumRecentGamers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9BCF28FB5D65A9BE | Since: 1207
     */
    function networkGetPlatformInviteId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD9267375834C5EAB | Since: 1207
     */
    function networkGetPlayerFastInstanceId(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xA6C0787443C9583E | Since: 1207
     */
    function networkGetPlayerOwnerOfNetworkId(netId: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x32C90CDFAF40514C | Since: 1207
     */
    function networkGetRank(): number;
    /**
     * Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
     *
     * Hash: 0xAC6153A0722F524C | Since: 1207
     */
    function networkGetRosTitleName(): string;
    /**
     * No comment provided
     *
     * Hash: 0x8DC9AA3B508B1A85 | Since: 1207
     */
    function networkGetSessionHost(): number | string;
    /**
     * No comment provided
     *
     * Hash: 0xBA24095EA96DFE17 | Since: 1207
     */
    function networkGetSizeOfHostBroadcastDataStorage(): number;
    /**
     * No comment provided
     *
     * Hash: 0x690806BC83BC8CA2 | Since: 1207
     */
    function networkGetSizeOfPlayerBroadcastDataStorage(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDB438CC9BC6F4022 | Since: 1207
     */
    function networkGetXp(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDD73C9838CE7181D | Since: 1207
     */
    function networkHasCompletedMpIntroFlowOnCurrentSlot(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26A5C12FACFF8724 | Since: 1207
     */
    function networkHasControlOfAnimScene(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25189F9908E9CD65 | Since: 1207
     */
    function networkHasCurrentGetGamerStatusStarted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x665161D250850A9F | Since: 1207
     */
    function networkIsFriendHandleInSameTitle(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE348D1404BD80146 | Since: 1207
     */
    function networkIsFriendHandleOnline(gamerHandle: any): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0xC5196C42DE19F646 | Since: 1207
     */
    function networkIsInSessionLobby(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B709519997ECF0F | Since: 1207
     */
    function networkIsPlayerInSpectatorMode(player: number | string | Player): boolean;
    /**
     * _NETWORK_IS_T* - _NETWORK_RE*
     *
     * Hash: 0xA21E3BAD0A42D199 | Since: 1207
     */
    function networkIsPreviousUploadPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4664D213A0CCAF40 | Since: 1207
     */
    function networkIsRecentGamerNamesRequestInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x31DAD2CD6D49546E | Since: 1207
     */
    function networkIsThreadActive(threadId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE525878A35B9EEBD | Since: 1207
     */
    function networkIsTrackedPlayerVisible(player: number | string | Player, trackedPlayer: number | string | Player): boolean;
    /**
     * Returns false if pedshot push failed
     *
     * Hash: 0x2A48D9567940598F | Since: 1207
     */
    function networkPersonaPhotoWriteLocal(texture: string, playerSlot: number, personaPhotoLocalCacheType: number): boolean;
    /**
     * Returns false if pedshot push failed
     *
     * Hash: 0xB72999D3120599DF | Since: 1207
     */
    function networkPersonaPhotoWriteScProfile(texture: string, personaPhotoType: number, formatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x55F618F68AB854D3 | Since: 1207
     */
    function networkRemoveFriend(gamerHandle: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAAA92B631B13F614 | Since: 1207
     */
    function networkRequestControlOfAnimScene(animScene: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4154B7D8C75E5DCF | Since: 1207
     */
    function networkResurrectLocalPlayer2(args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xE47001B7CB8B98AE | Since: 1207
     */
    function networkSendSessionInvite(gamerHandle: any, contentId: string, data: any, dataSize: number, flags: number): boolean;
    /**
     * enum eSessionFlags
     * {
     * SESSION_FLAG_NONE = 0,
     * SF_INSTANCE = (1 << 0),
     * SF_MATCH = (1 << 1),
     * SF_PRIVATE = (1 << 2),
     * SF_BLOCK_INVITES = (1 << 3),
     * SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
     * SF_BLOCK_NON_HOST_INVITES = (1 << 5),
     * SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
     * SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
     * SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
     * SF_IN_GAMEPLAY = (1 << 9),
     * SF_COMPETITIVE = (1 << 10),
     * SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
     * };
     *
     * Hash: 0xE546BDA1B3E288EE | Since: 1207
     */
    function networkSessionAddSessionFlags(flags: number): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0x4DEC5000F7B508F0 | Since: 1311
     */
    function networkSessionAreSessionIdsEqual(sessionId1: any, sessionId2: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE72E5C1289BD1F40 | Since: 1207
     */
    function networkSessionCancelRequest(sessionRequestId: any): boolean;
    /**
     * Note: this native was added in build 1311.23
     *
     * Hash: 0xE9B356C330C0A806 | Since: 1311
     */
    function networkSessionGetSessionId(sessionId: any): void;
    /**
     * Returns result of session request:
     * 0 - NOT_FOUND
     * 1 - IN_PROGRESS
     * 2 - TIMEOUT
     * 3 - PLAYER_OFFLINE
     * 4 - GANG_MEMBERS_CHANGED
     * 5 - PLAYER_CANCELLED
     * 6 - PLAYER_SET_TOO_LARGE
     * 7 - MATCH_ACCEPTED
     * 8 - OTHER
     *
     * Hash: 0x0DD051B1BF4B8BD6 | Since: 1207
     */
    function networkSessionGetSessionRequestResult(sessionRequestId: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x0F44A5C78D114922 | Since: 1207
     */
    function networkSessionIsNsrrSuccess(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9E762A595CF88E4A | Since: 1207
     */
    function networkSessionIsRequestInProgressByQueueGroup(queueGroup: number): boolean;
    /**
     * Only used in R* Script net_rolling_playlist
     *
     * Hash: 0x8F9DB6CD03B42B58 | Since: 1436
     */
    function networkSessionPlaylistGetUpcomingContent(): void;
    /**
     * Only used in R* Script net_rolling_playlist
     *
     * Hash: 0xBDE605F925B07127 | Since: 1436
     */
    function networkSessionPlaylistGoToNextContent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3215BBE34D3418C5 | Since: 1207
     */
    function networkSessionRemovePlayerFlags(flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4F4672457FF597D1 | Since: 1436
     */
    function networkSessionRequestSessionNominated(flags: number, userHash: number, sessionRequestId: any): boolean;
    /**
     * category:
     * enum eOnCallType
     * {
     * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
     * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
     * };
     *
     * Hash: 0x23D9C1F2E4098EDC | Since: 1207
     */
    function networkSessionRequestSessionOnCall(flags: number, category: number, userHash: number, sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0AE241A4A9ADEEEC | Since: 1207
     */
    function networkSessionSetPlayerFlags(flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF20B18A330E6DB5C | Since: 1207
     */
    function networkSessionTransitionToSession(sessionRequestId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBF1ECFB39A77B5F | Since: 1207
     */
    function networkSetInStaticSpectatorMode(toggle: boolean, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEB7818B1D307212 | Since: 1207
     */
    function networkSpawnConfigAddExclusionVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB6027FD1B4600D5 | Since: 1207
     */
    function networkSpawnConfigAddPropertyPreference(configProperty: number, include: boolean, weight: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x44D59EC597BBF348 | Since: 1207
     */
    function networkSpawnConfigAddPropertyScripted(configProperty: number, include: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD1AC0B3858F224C | Since: 1207
     */
    function networkSpawnConfigAddSpawnPoint(pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA35E7BF20FA269E0 | Since: 1207
     */
    function networkSpawnConfigRemoveExclusionVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x89EC2FC89ECB1005 | Since: 1207
     */
    function networkSpawnConfigSearchInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x765E60A1DCB8B1CE | Since: 1207
     */
    function networkSpawnConfigSetCancelSearch(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDCC671B911040F9 | Since: 1207
     */
    function networkSpawnConfigSetLevelWaterDepth(waterDepthLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7F6781A0ABAF6FB | Since: 1207
     */
    function netToAnimScene(netId: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xD08066E00D26C448 | Since: 1207
     */
    function netToPropset(netId: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xCBAC13F065C47596 | Since: 1207
     */
    function pedmugshotGetStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0xFBC30B70B3CDB87E | Since: 1207
     */
    function pedmugshotRequestSend(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCD954F330693F5F2 | Since: 1207
     */
    function pedmugshotTake(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74F99EF7EF503398 | Since: 1207
     */
    function propsetToNet(propSet: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xA197C35F73AC0F12 | Since: 1207
     */
    function reportPlayer(player: number | string | Player, reportType: number, description: string, horseName: string): void;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x356F9FB0698C1FEB | Since: 1207
     */
    function requestPedshotTextureLocalBackupDownload(player: number, personaPhotoLocalCacheType: number): string;
    /**
     * Only used in R* SP Script map_app_event_handler
     *
     * Hash: 0xCAF4CA2F87779F8F | Since: 1207
     */
    function requestPedshotTextureLocalDownload(gamerHandle: any): string;
    /**
     * No comment provided
     *
     * Hash: 0xB5C4B18B12A2AF23 | Since: 1207
     */
    function requestPedshotTextureMultiplayerDownload(gamerHandle: any): string;
    /**
     * No comment provided
     *
     * Hash: 0x51D99497ABF3F451 | Since: 1207
     */
    function setDoorNetworked(doorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1E1A3D5ED7617B8 | Since: 1207
     */
    function setDoorUnnetworked(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE5AE9956743BA20 | Since: 1207
     */
    function setEntityGhostedToLocalPlayer(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFFC15AA63D04AAB | Since: 1207
     */
    function setLaunchParamString(params: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x668AF6E4933AC13F | Since: 1207
     */
    function setLaunchParamValue(paramName: string, value: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD041A32992A55F84 | Since: 1207
     */
    function setLocalPlayerDamageMultiplierForPlayer(player: number | string | Player, damageMultiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x442B4347B6EC36E8 | Since: 1207
     */
    function setNetworkRespotTimer(entity: number | Entity, timer: number): void;
    /**
     * _SET_PLAYER_V* - _SET_S*
     *
     * Hash: 0xDCA6ABDB9288FBE4 | Since: 1207
     */
    function setPlayerVisibilityToLocalPlayerDisabled(player: number | string | Player, disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x777D0571A466B520 | Since: 1207
     */
    function setSocialMatchmakingAllowed(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A17B7981560FFA5 | Since: 1207
     */
    function textureDownloadReleaseByName(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2C3CEC3C0903A00 | Since: 1207
     */
    function textureDownloadTextureNameIsValid(name: string): boolean;
    /**
     * Checks if the user has ROS privilege 14.
     *
     * Hash: 0x6506BFA755FB209C | Since: 1207
     */
    function ugcHasPrivilege(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE42D1042F09865FE | Since: 1355
     */
    function ugcIsBookMarked(contentId: string): boolean;
    /**
     * Returns ugcRequestId
     *
     * Hash: 0x8C109958C9BB559D | Since: 1207
     */
    function ugcQueryByCategory(categoryType: number, maxGet: number, contentTypeName: string): number;
    /**
     * Returns ugcRequestId
     *
     * Hash: 0x69D22E183580113F | Since: 1207
     */
    function ugcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): number;
    /**
     * Returns ugcRequestId
     *
     * Hash: 0xF40EF49B3099E98E | Since: 1207
     */
    function ugcQueryByContentType(maxGet: number, contentTypeName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x98539FC453AEA639 | Since: 1207
     */
    function ugcQueryGetBookMarked(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xADB56322EEDFBDC9 | Since: 1207
     */
    function ugcQueryGetCreatorHandle(index: number, gamerHandle: any): any;
    /**
     * Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
     *
     * Hash: 0x409FE0CA6A4D1D49 | Since: 1207
     */
    function ugcQueryGetCreatorPhoto(): string;
    /**
     * No comment provided
     *
     * Hash: 0xE0CB4AB15CB32710 | Since: 1207
     */
    function ugcQueryGetDate(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x97764E8AC6487A9A | Since: 1207
     */
    function ugcQueryGetLanguage(index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xA6BF569956C60A60 | Since: 1207
     */
    function ugcQueryGetMissionDescHash(index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D053EA815702DD1 | Since: 1207
     */
    function ugcQueryGetName(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xF9F0B3028431967B | Since: 1207
     */
    function ugcQueryGetOwnerId(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xCAF50048C8D0FBA0 | Since: 1207
     */
    function ugcQueryGetPlaylistName(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x104080CA9E519B00 | Since: 1207
     */
    function ugcQueryGetPosixPublishedDate(): number;
    /**
     * No comment provided
     *
     * Hash: 0x21A99A72B00D8002 | Since: 1207
     */
    function ugcQueryGetPosixUpdatedDate(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9993F1E11944A3DD | Since: 1207
     */
    function ugcQueryGetPublished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24CD8FAEA1368379 | Since: 1207
     */
    function ugcQueryGetRating(index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x566CEB0542EF5ECF | Since: 1207
     */
    function ugcQueryGetRootContentId(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x63E9DCBC8B0931ED | Since: 1207
     */
    function ugcQueryGetVersion(index: number): number;
}
export declare namespace object {
    /**
     * No comment provided
     *
     * Hash: 0xE2B3B852B537C398 | Since: 1207
     */
    function allowDamageEventsForNonNetworkedObjects(enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DC39368BDD57755 | Since: 1207
     */
    function attachPortablePickupToPed(pickupObject: number | Object, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8F5062070BB6DBD | Since: 1207
     */
    function blockPickupFromPlayerCollection(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8462BE2341A55B6F | Since: 1207
     */
    function breakAllObjectFragmentBones(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7E4C198B0185900 | Since: 1207
     */
    function breakObjectFragmentChild(object: number | Object): void;
    /**
     * Old name: _GET_PICKUP_HASH
     *
     * Hash: 0x5EAAD83F8CFB4575 | Since: 1207
     */
    function convertOldPickupTypeToNew(pickupHash: number | string): number;
    /**
     * flags: see CREATE_PICKUP
     *
     * Hash: 0x673966A0C0FD7171 | Since: 1207
     */
    function createAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x509D5878EB39E842 | Since: 1207
     */
    function createObject(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x9A294B2138ABB884 | Since: 1207
     */
    function createObjectNoOffset(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xB6CBD40F8EA69E8A | Since: 1207
     */
    function createObjectSkeleton(object: number | Object): boolean;
    /**
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
     * https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
     *
     * Hash: 0xFBA08C503DD5FA58 | Since: 1207
     */
    function createPickup(pickupHash: number | string, pos: Vector3, flags: number, modelHash: number | string): any;
    /**
     * flags: see CREATE_PICKUP
     *
     * Hash: 0x891804727E0A98B7 | Since: 1207
     */
    function createPickupRotate(pickupHash: number | string, pos: Vector3, rot: Vector3, flags: number, modelHash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x2EAF1FDB2FB55698 | Since: 1207
     */
    function createPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
    /**
     * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0x931914268722C263 | Since: 1207
     */
    function deleteObject(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF463D1E9A0AECB1 | Since: 1207
     */
    function detachPortablePickupFromPed(pickupObject: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xBFA48E2FF417213F | Since: 1207
     */
    function doesObjectOfTypeExistAtCoords(pos: Vector3, radius: number, hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAFC1CA75AD4074D1 | Since: 1207
     */
    function doesPickupExist(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD9EFB6DBF7DAAEA3 | Since: 1207
     */
    function doesPickupObjectExist(pickupObject: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9C36251F6E48E33 | Since: 1207
     */
    function doesPickupOfTypeExistInArea(pickupHash: number | string, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52AF537A0C5B8AAD | Since: 1207
     */
    function doesRayfireMapObjectExist(object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x160AA1B32F6139B8 | Since: 1207
     */
    function doorSystemGetDoorState(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x65499865FCA6E5EC | Since: 1207
     */
    function doorSystemGetOpenRatio(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9BA001CB45CBF627 | Since: 1207
     */
    function doorSystemSetAutomaticDistance(doorHash: number | string, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x03C27E13B42A0E82 | Since: 1207
     */
    function doorSystemSetAutomaticRate(doorHash: number | string, rate: number): void;
    /**
     * Door lock states:
     * enum eDoorState
     * {
     * DOORSTATE_INVALID = -1,
     * DOORSTATE_UNLOCKED,
     * DOORSTATE_LOCKED_UNBREAKABLE,
     * DOORSTATE_LOCKED_BREAKABLE,
     * DOORSTATE_HOLD_OPEN_POSITIVE,
     * DOORSTATE_HOLD_OPEN_NEGATIVE
     * };
     *
     * Hash: 0x6BAB9442830C7F53 | Since: 1207
     */
    function doorSystemSetDoorState(doorHash: number | string, state: number): void;
    /**
     * Sets the ajar angle of a door.
     * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
     *
     * Hash: 0xB6E6FBA95C7324AC | Since: 1207
     */
    function doorSystemSetOpenRatio(doorHash: number | string, ajar: number, forceUpdate: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9C1681347C8BD15 | Since: 1207
     */
    function fixObjectFragment(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x758A5C1B3B1E1990 | Since: 1207
     */
    function forcePickupRegenerate(): void;
    /**
     * Returns the closest object of a specified type within a given radius from a specified position
     *
     * Hash: 0xE143FA2249364369 | Since: 1207
     */
    function getClosestObjectOfType(pos: Vector3, radius: number, modelHash: number | string, missionScriptObject: boolean, scriptHostObject: boolean, networkObject: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xB6FBFD079B8D0596 | Since: 1207
     */
    function getObjectFragmentDamageHealth(): number;
    /**
     * Old name: _GET_OBJECT_OFFSET_FROM_COORDS
     *
     * Hash: 0x163E252DE035A133 | Since: 1207
     */
    function getOffsetFromCoordAndHeadingInWorldCoords(pos: Vector3, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x225B8B35C88029B3 | Since: 1207
     */
    function getPickupCoords(pickup: any): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x5099BC55630B25AE | Since: 1207
     */
    function getPickupObject(pickup: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xB48FCED898292E52 | Since: 1207
     */
    function getRayfireMapObject(pos: Vector3, radius: number, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x260EE4FDBDF4DB01 | Since: 1207
     */
    function getRayfireMapObjectAnimPhase(object: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x6E16BC2503FF1FF0 | Since: 1207
     */
    function getSafePickupCoords(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x899BA936634A322E | Since: 1207
     */
    function getStateOfRayfireMapObject(object: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x08F96CA6C551AD51 | Since: 1207
     */
    function getWeaponTypeFromPickupType(pickupHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x761B0E69AC4D007E | Since: 1207
     */
    function hasClosestObjectOfTypeBeenBroken(modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8ABFB70C49CC43E2 | Since: 1207
     */
    function hasObjectBeenBroken(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x80EC48E6679313F9 | Since: 1207
     */
    function hasPickupBeenCollected(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC531EE8A1145A149 | Since: 1207
     */
    function isDoorClosed(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC153C43EA202C8C1 | Since: 1207
     */
    function isDoorRegisteredWithSystem(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0378C08504160D0D | Since: 1207
     */
    function isObjectAPortablePickup(object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8B32ACE6326A7546 | Since: 1207
     */
    function isObjectVisible(object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A70BAE8883E4C81 | Since: 1207
     */
    function isPointInAngledArea(): boolean;
    /**
     * Old name: _MARK_OBJECT_FOR_DELETION
     *
     * Hash: 0xADBE4809F19F927A | Since: 1207
     */
    function onlyCleanUpObjectWhenOutOfRange(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x58A850EAEE20FAA3 | Since: 1207
     */
    function placeObjectOnGroundProperly(object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x92AEFB5F6E294023 | Since: 1207
     */
    function preventCollectionOfPortablePickup(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x27F9D613092159CF | Since: 1207
     */
    function removeAllPickupsOfType(pickupHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x464D8E1427156FE4 | Since: 1207
     */
    function removeDoorFromSystem(doorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3288D8ACAECD2AB2 | Since: 1207
     */
    function removePickup(pickup: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x406137F8EF90EAF5 | Since: 1207
     */
    function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE124889AE0521FCF | Since: 1207
     */
    function setCustomTexturesOnObject(object: number | Object, txdHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF538081986E49E9D | Since: 1207
     */
    function setForceObjectThisFrame(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x78857FC65CADB909 | Since: 1207
     */
    function setLocalPlayerCanCollectPortablePickups(toggle: boolean): void;
    /**
     * Maximum amount of pickup models that can be disallowed is 10.
     *
     * Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
     *
     * Hash: 0x88EAEC617CD26926 | Since: 1207
     */
    function setLocalPlayerPermittedToCollectPickupsWithModel(modelHash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BF3B3BD47D79C08 | Since: 1207
     */
    function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D89D607CB3DD1D2 | Since: 1207
     */
    function setObjectAllowLowLodBuoyancy(object: number | Object, toggle: boolean): void;
    /**
     * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
     *
     * Other parameters seem to be unknown.
     *
     * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
     * p3: seems similar to p2
     * p4: makes obj fall slower the higher the value
     * p5: similar to p4
     *
     * Hash: 0xF6DF6E90DE7DF90F | Since: 1207
     */
    function setObjectPhysicsParams(object: number | Object, weight: number, gravity: number, buoyancy: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB6F1A9B5510A5D2 | Since: 1207
     */
    function setObjectTakesDamageFromCollidingWithBuildings(object: number | Object, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A7391690F5AFD81 | Since: 1207
     */
    function setObjectTargettable(object: number | Object, targettable: boolean): void;
    /**
     * Alt name: _SET_OBJECT_TINT
     *
     * Old name: _SET_OBJECT_TEXTURE_VARIATION
     *
     * Hash: 0x971DA0055324D033 | Since: 1207
     */
    function setObjectTintIndex(object: number | Object, textureVariation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x634C19521485AB25 | Since: 1207
     */
    function setPickupDoNotAutoPlaceOnGround(pickupObject: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x318516E02DE3ECE2 | Since: 1207
     */
    function setPickupGenerationRangeMultiplier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x81218CE01B672219 | Since: 1207
     */
    function setPickupHiddenWhenUncollectable(): void;
    /**
     * No comment provided
     *
     * Hash: 0x92E87F60F21A0C3A | Since: 1207
     */
    function setPickupNotLootable(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1607C7D9B3021DF5 | Since: 1207
     */
    function setPickupParticleFxHighlight(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB9740A38FD6D634 | Since: 1207
     */
    function setPickupParticleFxSpawn(): void;
    /**
     * No comment provided
     *
     * Hash: 0x78015C9B4B3ECC9D | Since: 1207
     */
    function setPickupRegenerationTime(pickup: any, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A8CB328CD6F1C9B | Since: 1207
     */
    function setPickupUncollectable(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C29F698D404C5E1 | Since: 1207
     */
    function setStateOfRayfireMapObject(object: number | Object, state: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x53E0DF1A2A3CF0CA | Since: 1207
     */
    function setTeamPickupObject(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FDFF4107B8C1147 | Since: 1207
     */
    function slideObject(object: number | Object, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF92099527DB8E2A7 | Since: 1207
     */
    function suppressPickupRewardType(rewardType: number, suppress: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB252BC036B525623 | Since: 1207
     */
    function trackObjectVisibility(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x08C5825A2932EA7B | Since: 1207
     */
    function _0x08C5825A2932EA7B(): any;
    /**
     * Params: p1 = 23 in R* Scripts
     *
     * Hash: 0x0943113E02322164 | Since: 1207
     */
    function _0x0943113E02322164(object: number | Object): any;
    /**
     * something to do with doors lockdown when navmesh is swapping?UPDATE_WORLD_STATE  seems to be for unlocking something
     *
     * Hash: 0x0C0A373D181BF900 | Since: 1207
     */
    function _0x0C0A373D181BF900(doorHash: number | string): void;
    /**
     * _SET_A(MBIENT_PICKUP_?)*
     *
     * Hash: 0x1F5E07E14A86FAFC | Since: 1207
     */
    function _0x1F5E07E14A86FAFC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20135AF9C10D2A3D | Since: 1207
     */
    function _0x20135AF9C10D2A3D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x22031584496CFB70 | Since: 1207
     */
    function _0x22031584496CFB70(): void;
    /**
     * No comment provided
     *
     * Hash: 0x235C863DA77BD88D | Since: 1207
     */
    function _0x235C863DA77BD88D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x250EBB11E81A10BE | Since: 1207
     */
    function _0x250EBB11E81A10BE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2BF1953C0C21AC88 | Since: 1207
     */
    function _0x2BF1953C0C21AC88(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3A77DAE8B4FD7586 | Since: 1207
     */
    function _0x3A77DAE8B4FD7586(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DF1A0A58498E209 | Since: 1436
     */
    function _0x3DF1A0A58498E209(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E2616E7EA539480 | Since: 1207
     */
    function _0x3E2616E7EA539480(): any;
    /**
     * No comment provided
     *
     * Hash: 0x46CBCF0E98A4E156 | Since: 1207
     */
    function _0x46CBCF0E98A4E156(): void;
    /**
     * No comment provided
     *
     * Hash: 0x491439AEF410A2FC | Since: 1207
     */
    function _0x491439AEF410A2FC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AE07EBA3462C5D5 | Since: 1207
     */
    function _0x4AE07EBA3462C5D5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D8611DFE1126478 | Since: 1207
     */
    function _0x4D8611DFE1126478(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5230BF34EB0EC645 | Since: 1207
     */
    function _0x5230BF34EB0EC645(): void;
    /**
     * No comment provided
     *
     * Hash: 0x57C242543B7B8FB9 | Since: 1207
     */
    function _0x57C242543B7B8FB9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x58DE624FA7FB0E7F | Since: 1207
     */
    function _0x58DE624FA7FB0E7F(): any;
    /**
     * No comment provided
     *
     * Hash: 0x614D0B4533F842D3 | Since: 1207
     */
    function _0x614D0B4533F842D3(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6579860A5558524A | Since: 1207
     */
    function _0x6579860A5558524A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E2AA80BB0C03728 | Since: 1207
     */
    function _0x6E2AA80BB0C03728(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7D4411D6736CD295 | Since: 1207
     */
    function _0x7D4411D6736CD295(): any;
    /**
     * something to do with doors lockdown when navmesh is swapping? UPDATE_WORLD_STATE, seems to be for locking something
     *
     * Hash: 0x7F458B543006C8FE | Since: 1207
     */
    function _0x7F458B543006C8FE(doorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7FCD49388BC9B775 | Since: 1207
     */
    function _0x7FCD49388BC9B775(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A74A9CADFA8A598 | Since: 1207
     */
    function _0x9A74A9CADFA8A598(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F52AD67D1A91BAD | Since: 1207
     */
    function _0x9F52AD67D1A91BAD(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA93F925F1942E434 | Since: 1207
     */
    function _0xA93F925F1942E434(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAAACF33CBF9B990A | Since: 1207
     */
    function _0xAAACF33CBF9B990A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xACD4F9831DFAD7F5 | Since: 1207
     */
    function _0xACD4F9831DFAD7F5(): any;
    /**
     * Not official native name
     *
     * Hash: 0xAEE6C800E124CFE1 | Since: 1207
     */
    function setObjectPromptName(object: number | Object, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3B1546D23DF8DE1 | Since: 1207
     */
    function _0xB3B1546D23DF8DE1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC07B91B996C1DE89 | Since: 1207
     */
    function _0xC07B91B996C1DE89(): void;
    /**
     * _SET_OBJECT_*
     *
     * Hash: 0xCAAF2BCCFEF37F77 | Since: 1207
     */
    function _0xCAAF2BCCFEF37F77(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBFBD38F2E0A263B | Since: 1207
     */
    function _0xCBFBD38F2E0A263B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEAB54F4632C6EF6 | Since: 1207
     */
    function _0xCEAB54F4632C6EF6(): void;
    /**
     * Not official native name
     *
     * Hash: 0xD503D6F0986D58BC | Since: 1207
     */
    function setObjectPromptNameFromGxtEntry(object: number | Object, gxtEntryHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD91E55B6C005EB09 | Since: 1207
     */
    function _0xD91E55B6C005EB09(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDE116ECFFDD4B997 | Since: 1207
     */
    function _0xDE116ECFFDD4B997(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFA1237F5228263F | Since: 1207
     */
    function _0xDFA1237F5228263F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE157A8A336C7F04A | Since: 1207
     */
    function _0xE157A8A336C7F04A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBA314768FB35D58 | Since: 1207
     */
    function _0xEBA314768FB35D58(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF65EDE5D02A7A760 | Since: 1207
     */
    function _0xF65EDE5D02A7A760(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6E88489B4E6EBE5 | Since: 1207
     */
    function _0xF6E88489B4E6EBE5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA99E8E575F2FEF8 | Since: 1436
     */
    function _0xFA99E8E575F2FEF8(): any;
    /**
     * Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
     *
     * Hash: 0xD99229FE93B46286 | Since: 1207
     */
    function addDoorToSystemNew(doorHash: number | string, threadId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4EFB315BCD2A838 | Since: 1207
     */
    function damageBoneOnProp(object: number | Object, bone: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x985767F5FA45BC44 | Since: 1207
     */
    function doorSystemChangeScriptOwner(doorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x276AAF0F1C7F2494 | Since: 1207
     */
    function doorSystemForceShut(doorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8433E1954BE323FC | Since: 1207
     */
    function doorSystemGetAutomaticRate(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x1F1FABFE9B2A1254 | Since: 1207
     */
    function doorSystemSetAbleToChangeOpenRatioWhileLocked(doorHash: number | string): void;
    /**
     * _ALLOW_* - _ATTACH_*
     *
     * Hash: 0x1BC47A9DEDC8DF5D | Since: 1207
     */
    function doorSystemSetAutomaticState(doorHash: number | string, disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x44B09A23D728045A | Since: 1207
     */
    function getAmmoTypeFromPickupType(pickupHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xFA3B61EC249B4674 | Since: 1207
     */
    function getLightIntensityFromObject(object: number | Object): number;
    /**
     * Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
     *
     * Hash: 0x3397CD4E0353DFBA | Since: 1207
     */
    function getObjectLightIntensity(object: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x2777150CC7D9365E | Since: 1207
     */
    function hidePickupObject(pickupObject: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5DED7B65C604FDF | Since: 1207
     */
    function isDoorRegisteredWithNetwork(doorHash: number | string): boolean;
    /**
     * Returns true if door is alredy registered with owner
     *
     * Hash: 0x4F89DAD4156BA145 | Since: 1207
     */
    function isDoorRegisteredWithOwner(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x007BD043587F7C82 | Since: 1207
     */
    function isPickupTypeValid(pickupHash: number | string): boolean;
    /**
     * _PRE* or _Q* or _RE*
     *
     * Hash: 0x1461DF6DB886BE3F | Since: 1207
     */
    function makeItemCarriable(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xF40AB58D83C35027 | Since: 1207
     */
    function resetObjectVelocity(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC9AE68F0A463752 | Since: 1207
     */
    function setAmbientPickupLifetime(lifetime: number): void;
    /**
     * Sets object as auto-jumpable by horse.
     *
     * Hash: 0x98D2D9C053A1F449 | Since: 1207
     */
    function setAutoJumpableByHorse(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xF49574E2332A8F06 | Since: 1207
     */
    function setLightIntensityForObject(object: number | Object, lightIntensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x04D1D4E411CE52D0 | Since: 1207
     */
    function setLightScatteringDisabledForObject(object: number | Object, disable: boolean): void;
    /**
     * Params: value = 0.0 - 586.67 (?)
     *
     * Hash: 0x63E39F09310F481F | Since: 1207
     */
    function setLightTranslucencyForObject(object: number | Object, value: number): void;
    /**
     * Params: p2 controls whether to make pickups usable/collectable or not in networked games
     *
     * Hash: 0x94F3D956BFAEAE18 | Since: 1207
     */
    function setNetworkPickupUsableForPlayer(player: number | string | Player, pickupHash: number | string, isUsable: boolean): void;
    /**
     * Sets object as not jumpable by horse.
     *
     * Hash: 0xE1C708BA4885796B | Since: 1207
     */
    function setNotJumpableByHorse(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFB99FFD17F65889 | Since: 1207
     */
    function setObjectBreakScale(object: number | Object, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8E21C1677DC5E6F | Since: 1207
     */
    function setObjectBurnIntensity(object: number | Object, intensity: number): void;
    /**
     * Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
     *
     * Hash: 0x2797C633DCDBBAC5 | Since: 1207
     */
    function setObjectBurnLevel(object: number | Object, burnLevel: number, affectAsh: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D7285EFEAB5AF15 | Since: 1207
     */
    function setObjectBurnOpacity(object: number | Object, opacity: number): void;
    /**
     * p2 is usually the same as speed parameter
     *
     * Hash: 0x646564A3B7DF68F8 | Since: 1207
     */
    function setObjectBurnSpeed(object: number | Object, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7017DA4D498269F | Since: 1207
     */
    function setObjectKickable(object: number | Object, kickable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x581EDBE56E8D62C9 | Since: 1207
     */
    function setObjectTargettable2(object: number | Object, targettable: boolean): void;
    /**
     * focus on objects like focus on peds, p1 is to enable/disable p2 is to enable/disable focus when you have a weapon out
     *
     * Hash: 0xA22712E8471AA08E | Since: 1207
     */
    function setObjectTargettableFocus(object: number | Object, toggle: boolean, weaponLock: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x00EE08603EADEE92 | Since: 1207
     */
    function setPickupCollectableOnMount(object: number | Object): void;
}
export declare namespace pad {
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xCB0360EFEFB2580D | Since: 1207
     */
    function clearControlLightEffect(control: number): void;
    /**
     * Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
     *
     * Hash: 0xA0CEFCEA390AAB9B | Since: 1207
     */
    function clearControlShakeSuppressedId(control: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F4B6931816E599B | Since: 1207
     */
    function disableAllControlActions(control: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE99B66D079CF6BC | Since: 1207
     */
    function disableControlAction(control: number, action: number | string, disableRelatedActions: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x351220255D64C155 | Since: 1207
     */
    function enableControlAction(control: number, action: number | string, enableRelatedActions: boolean): void;
    /**
     * Returns time in ms since last input.
     *
     * Hash: 0xD7D22F5592AED8BA | Since: 1207
     */
    function getControlHowLongAgo(control: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xEC3C9B8D5327B563 | Since: 1207
     */
    function getControlNormal(control: number, action: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5B84D09CEC5209C5 | Since: 1207
     */
    function getControlUnboundNormal(control: number, action: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD95E79E8686D2C27 | Since: 1207
     */
    function getControlValue(control: number, action: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x11E65974A982637C | Since: 1207
     */
    function getDisabledControlNormal(control: number, action: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F8A26A890FD62FB | Since: 1207
     */
    function getDisabledControlUnboundNormal(control: number, action: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x6CD79468A1E595C6 | Since: 1207
     */
    function haveControlsChanged(control: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1CEA6BFDF248E5D9 | Since: 1207
     */
    function isControlEnabled(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x580417101DDB492F | Since: 1207
     */
    function isControlJustPressed(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x50F940259D3841E6 | Since: 1207
     */
    function isControlJustReleased(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF3A21BCD95725A4A | Since: 1207
     */
    function isControlPressed(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x648EE3E7F38877DD | Since: 1207
     */
    function isControlReleased(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x91AEF906BCA88877 | Since: 1207
     */
    function isDisabledControlJustPressed(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x305C8DCD79DA8B0F | Since: 1207
     */
    function isDisabledControlJustReleased(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE2587F8CBBD87B1D | Since: 1207
     */
    function isDisabledControlPressed(control: number, action: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x77B612531280010D | Since: 1207
     */
    function isLookInverted(): boolean;
    /**
     * padIndex is not used
     *
     * Old name: _IS_USING_KEYBOARD
     *
     * Hash: 0xA571D46727E2B718 | Since: 1207
     */
    function isUsingKeyboardAndMouse(control: number): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Old name: _SET_CONTROL_GROUP_COLOR
     *
     * Hash: 0x8290252FFF36ACB5 | Since: 1207
     */
    function setControlLightEffectColor(control: number, red: number, green: number, blue: number): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xA45884DB10EC7EE3 | Since: 1207
     */
    function setControlLightEffectFlashingColor(control: number, red: number, green: number, blue: number): void;
    /**
     * Old name: SET_PAD_SHAKE
     *
     * Hash: 0x48B3886C1358D0D5 | Since: 1207
     */
    function setControlShake(control: number, duration: number, frequency: number): void;
    /**
     * Old name: SET_PAD_SHAKE_SUPPRESSED_ID
     *
     * Hash: 0xF239400E16C23E08 | Since: 1207
     */
    function setControlShakeSuppressedId(control: number, uniqueId: number): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x14D29BB12D47F68C | Since: 1207
     */
    function setControlTriggerShake(control: number, leftDuration: number, leftFrequency: number, rightDuration: number, rightFrequency: number): void;
    /**
     * This is for simulating player input.
     * value is a float value from 0 - 1
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Old name: _SET_CONTROL_NORMAL
     *
     * Hash: 0xE8A25867FBA3B05E | Since: 1207
     */
    function setControlValueNextFrame(control: number, action: number | string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEDE476E5EE29EDB1 | Since: 1207
     */
    function setInputExclusive(control: number, action: number | string): void;
    /**
     * Old name: STOP_PAD_SHAKE
     *
     * Hash: 0x38C16A305E8CDC8D | Since: 1207
     */
    function stopControlShake(control: number): void;
    /**
     * _IS_R* - _IS_S*
     *
     * Hash: 0x1252C029FC8EBB4D | Since: 1207
     */
    function _0x1252C029FC8EBB4D(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x43F35DDB2905D945 | Since: 1207
     */
    function _0x43F35DDB2905D945(): any;
    /**
     * No comment provided
     *
     * Hash: 0x52C68E92D6E23ADD | Since: 1311
     */
    function _0x52C68E92D6E23ADD(): void;
    /**
     * rumbleCurve: common_0/data/rumblecurves.meta
     *
     * Hash: 0x5F217BC1190503D8 | Since: 1207
     */
    function _0x5F217BC1190503D8(rumbleCurve: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x709BA8C08C5C008D | Since: 1207
     */
    function _0x709BA8C08C5C008D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD629C1C4F501C80 | Since: 1207
     */
    function _0xBD629C1C4F501C80(): any;
    /**
     * Gets the current control context. See: _SET_CONTROL_CONTEXT
     *
     * Hash: 0xDDCEB0F26C89C00F | Since: 1207
     */
    function getCurrentControlContext(control: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x771DFCB24D19C2F6 | Since: 1207
     */
    function getDisabledControlHowLongAgo(control: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBC0884BC590951C7 | Since: 1207
     */
    function isControlActionValid(action: number | string, control: number): boolean;
    /**
     * Sets the current control context. Must be called every frame.
     *
     * context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
     * For more information, see common:/data/control/settings.meta
     * https://github.com/femga/rdr3_discoveries/tree/master/Controls
     *
     * Hash: 0x2804658EB7D8A50B | Since: 1207
     */
    function setControlContext(control: number, context: number | string): void;
}
export declare namespace pathfind {
    /**
     * No comment provided
     *
     * Hash: 0xFCD5C8E06E502F5A | Since: 1207
     */
    function addNavmeshBlockingObject(): any;
    /**
     * No comment provided
     *
     * Hash: 0x387EAD7EE42F6685 | Since: 1207
     */
    function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7B79A50B905A30D | Since: 1207
     */
    function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EAEB0DB4B132399 | Since: 1207
     */
    function doesNavmeshBlockingObjectExist(): boolean;
    /**
     * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
     *
     * Hash: 0x336511A34F2E5185 | Since: 1207
     */
    function getApproxFloorForPoint(x: number, y: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x132F52BBA570FE92 | Since: 1207
     */
    function getClosestRoad(pos: Vector3): any;
    /**
     * No comment provided
     *
     * Hash: 0x240A18690AE96513 | Since: 1207
     */
    function getClosestVehicleNode(pos: Vector3, outPosition: Vector3, nodeType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x23CFFD4CCB243354 | Since: 1207
     */
    function getClosestVehicleNodeWithHeading(pos: Vector3, outPosition: Vector3, outHeading: number, nodeType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x869DAACBBE9FA006 | Since: 1207
     */
    function getGpsBlipRouteFound(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBBB45C3CF5C8AA85 | Since: 1207
     */
    function getGpsBlipRouteLength(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5A6D8DF6FBC5D0C4 | Since: 1207
     */
    function getNthClosestVehicleNode(pos: Vector3, nthClosest: number, outPosition: Vector3, unknown1: number, unknown2: number, unknown3: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2FAC235A6062F14A | Since: 1207
     */
    function getNthClosestVehicleNodeFavourDirection(pos: Vector3, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, outPosition: Vector3, outHeading: number, nodetype: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x116443008E5CEFC3 | Since: 1207
     */
    function getNthClosestVehicleNodeId(pos: Vector3, nth: number, nodetype: number): number;
    /**
     * Returns the nth closest vehicle node with a heading to a coord
     *
     * Hash: 0x4114EAA8A7F7766D | Since: 1207
     */
    function getNthClosestVehicleNodeIdWithHeading(pos: Vector3, nthClosest: number, returnHeading: number, returnNumLanes: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x591B40D4390DB54A | Since: 1207
     */
    function getNthClosestVehicleNodeWithHeading(pos: Vector3, nthClosest: number, outPosition: Vector3, heading: number, unknown1: any, unknown2: number, unknown3: number, unknown4: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01708E8DD3FF8C65 | Since: 1207
     */
    function getNumNavmeshesExistingInArea(): number;
    /**
     * No comment provided
     *
     * Hash: 0x93E0DB8440B73A7D | Since: 1207
     */
    function getRandomVehicleNode(pos: Vector3, radius: number, minLanes: number, avoidDeadEnds: boolean, avoidHighways: boolean, outPosition: Vector3, nodeId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB61C8E878A4199CA | Since: 1207
     */
    function getSafeCoordForPed(pos: Vector3, onGround: boolean, outPosition: Vector3, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x28533DBDDF7C2C97 | Since: 1207
     */
    function getVehicleNodeIsSwitchedOff(nodeID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8E8D72FF24DEE1FB | Since: 1207
     */
    function getVehicleNodePosition(nodeId: number, outPosition: Vector3): void;
    /**
     * Returns whether navmesh for the region is loaded.
     *
     * Hash: 0xF813C7E63F9062A5 | Since: 1207
     */
    function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Gets a value indicating whether the specified position is on a road.
     *
     * Hash: 0x125BF4ABFC536B09 | Since: 1207
     */
    function isPointOnRoad(pos: Vector3, vehicle: number | Vehicle): boolean;
    /**
     * Returns true if the id is non zero.
     *
     * Hash: 0x5829A02AF4F0B3CB | Since: 1207
     */
    function isVehicleNodeIdValid(vehicleNodeId: number): boolean;
    /**
     * Starts a nav mesh query for a path between coordinates with a given ped and returns a handle to be validated by _NAVMESH_REQUESTED_QUERY_STATUS and then _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
     *
     * Only bit flag values used in scripts are 0, 23, and 29. 23 is used with dogs and horses. 29 with legendary animals.
     *
     * Hash: 0x348F211CA2404039 | Since: 1207
     */
    function navmeshRequestPath(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, bitFlag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x46399A7895957C0E | Since: 1207
     */
    function removeNavmeshBlockingObject(): void;
    /**
     * Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
     *
     * Hash: 0x07FB139B592FA687 | Since: 1207
     */
    function requestPathNodesInAreaThisFrame(x1: number, y1: number, x2: number, y2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD17672447692478E | Since: 1207
     */
    function resetRoadsInVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B919E1FB47CC4E0 | Since: 1207
     */
    function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x72751156E7678833 | Since: 1207
     */
    function setIgnoreNoGpsFlag(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE04B48F2CC926253 | Since: 1207
     */
    function setPedPathsBackToOriginal(): void;
    /**
     * No comment provided
     *
     * Hash: 0x34F060F4BF92E018 | Since: 1207
     */
    function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unknown: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1EE7063B80FFC77C | Since: 1207
     */
    function setRoadsBackToOriginal(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0027501B9F3B407E | Since: 1207
     */
    function setRoadsBackToOriginalInAngledArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A5AA1208AF5DB59 | Since: 1207
     */
    function setRoadsInAngledArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF1A602B5BA52FEE | Since: 1207
     */
    function setRoadsInArea(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1799FAFD2FDF52B | Since: 1207
     */
    function setRoadsInVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DD5F78D73B24172 | Since: 1207
     */
    function simulatedRouteGetEta(): number;
    /**
     * No comment provided
     *
     * Hash: 0x240915043CB799D7 | Since: 1207
     */
    function simulatedRouteIsLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA1A3DE1C215C7394 | Since: 1207
     */
    function simulatedRouteTravelToPoint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x264E9A5CD78C338F | Since: 1207
     */
    function _0x264E9A5CD78C338F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x34C9AF25649172D0 | Since: 1207
     */
    function _0x34C9AF25649172D0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4358BCF14C91761C | Since: 1207
     */
    function _0x4358BCF14C91761C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4BDEBEA5702B97A9 | Since: 1207
     */
    function _0x4BDEBEA5702B97A9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x54F4D7B6670FBB5A | Since: 1207
     */
    function _0x54F4D7B6670FBB5A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5A3B54ADDF5472A3 | Since: 1207
     */
    function _0x5A3B54ADDF5472A3(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5A4E1A41E3A02AD0 | Since: 1207
     */
    function _0x5A4E1A41E3A02AD0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x665B21666351CB37 | Since: 1207
     */
    function _0x665B21666351CB37(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6C3F12ECEB6D2E2A | Since: 1207
     */
    function _0x6C3F12ECEB6D2E2A(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DAD6630AE4A74CB | Since: 1207
     */
    function _0x6DAD6630AE4A74CB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x869A7015BD4606E9 | Since: 1207
     */
    function _0x869A7015BD4606E9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA33914B00CA55756 | Since: 1207
     */
    function _0xA33914B00CA55756(): any;
    /**
     * No comment provided
     *
     * Hash: 0xAFE2AE66F6251C66 | Since: 1207
     */
    function _0xAFE2AE66F6251C66(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB03944057FD735BA | Since: 1207
     */
    function _0xB03944057FD735BA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA27A86CAA4E98ED | Since: 1207
     */
    function _0xCA27A86CAA4E98ED(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCF213A5FC3ABFC08 | Since: 1207
     */
    function _0xCF213A5FC3ABFC08(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5EF9DE716FF737E | Since: 1207
     */
    function _0xE5EF9DE716FF737E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFC535C9FAF563B3 | Since: 1207
     */
    function _0xEFC535C9FAF563B3(): any;
    /**
     * GPS disabled zone: p1 = 0
     * Clearing GPS disabled zone: p1 = 1
     *
     * Hash: 0xF2A2177AC848B3A8 | Since: 1207
     */
    function _0xF2A2177AC848B3A8(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x19C7567D2F2287D6 | Since: 1207
     */
    function addNavmeshBlockingVolume(volume: number, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE0EA444735C1368 | Since: 1207
     */
    function doesNavmeshBlockingVolumeExist(volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA3791B915B8B84C6 | Since: 1207
     */
    function getSpawnDataForRoadNode(nodeId: number, pos: Vector3, outCoords: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C334FF4D9215912 | Since: 1207
     */
    function navmeshActivateSwap(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x44026E3DB3CED602 | Since: 1207
     */
    function navmeshAssignNavmeshToVehicle(vehicle: number | Vehicle, navMeshName: string): boolean;
    /**
     * Called in scripts after finished with requested pathes. Immediately resets all values connected to the path handle except query status, which changes from 1 to 2 before eventually becoming fully invalidated to 0.
     *
     * Hash: 0x661BB1E1FF77742D | Since: 1207
     */
    function navmeshClearRequestedPath(path: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x527B97C203BB8606 | Since: 1207
     */
    function navmeshDeactivateSwap(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x495CFAB2924237C7 | Since: 1207
     */
    function navmeshDoesSwapExist(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AC0944C156E5F44 | Since: 1207
     */
    function navmeshIsSwapActive(name: string): boolean;
    /**
     * Returns the number of waypoints for a requested path (NAVMESH_REQUEST_PATH) if the query is completed (_NAVMESH_REQUESTED_QUERY_STATUS). For use with _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
     *
     * Hash: 0xD470725E0703D22F | Since: 1207
     */
    function navmeshRequestedPathNumWaypoints(path: number): number;
    /**
     * Returns true if a path of waypoints was found. Waypoints can be retrieved with _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS and _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
     *
     * Hash: 0x8800776E410EB669 | Since: 1207
     */
    function navmeshRequestedPathWaypointsFound(path: number): boolean;
    /**
     * Returns a bit flag for seemingly terrain within the waypoints in the path. Checked against bit value 2 to match water in the path, seems to always contain at least 1 though regardless of location/ped.
     *
     * Hash: 0xF61CFEDEAB627BFA | Since: 1207
     */
    function navmeshRequestedPathWaypointsTerrain(path: number): number;
    /**
     * Returns a vector3 waypoint at the specified index for a path. Use _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS to get available indexes.
     *
     * Hash: 0x430F8319AE56C8A9 | Since: 1207
     */
    function navmeshRequestedPathWaypointByIndex(path: number, waypointIndex: number): Vector3;
    /**
     * Returns eNavMeshQueryStatus
     * enum eNavMeshQueryStatus
     * {
     * QS_NOT_FOUND,
     * QS_COMPLETE,
     * QS_PENDING
     * };
     *
     * It appears that the pending state of 2 is at least also used when cleaning up a request (_NAVMESH_CLEAR_REQUESTED_PATH) or if a request never completes. Eventually queries are invalidated and return 0.
     *
     * Old name: _NAVMESH_QUERY_STATUS
     *
     * Hash: 0x3A0F82F6EE2291C8 | Since: 1207
     */
    function navmeshRequestedQueryStatus(path: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2C87C3E1C7B96EE2 | Since: 1207
     */
    function removeNavmeshBlockingVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD5BB35AAB83FD48 | Since: 1207
     */
    function simulatedRouteCreate(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x4907D0E4FB26EE65 | Since: 1207
     */
    function simulatedRouteDelete(): void;
    /**
     * No comment provided
     *
     * Hash: 0x65A8196B8D7F5E0B | Since: 1207
     */
    function simulatedRouteExists(): boolean;
}
export declare namespace ped {
    /**
     * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
     *
     * Hash: 0x5BA652A0CD14DF2F | Since: 1207
     */
    function addArmourToPed(ped: number | Ped, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E23CD07BD161E06 | Since: 1207
     */
    function addCustomFormationLocation(groupId: number, pos: Vector3, position: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB05945C1E9E60D91 | Since: 1207
     */
    function addFormationLocation(groupId: number): boolean;
    /**
     * The hash of the created relationship group is output in the second parameter.
     *
     * Hash: 0xF372BC22FCB88606 | Since: 1207
     */
    function addRelationshipGroup(name: string, groupHash: number | string): boolean;
    /**
     * blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
     *
     * Hash: 0x1B5C85C612E5256E | Since: 1207
     */
    function addScenarioBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, blockingFlags: number): number;
    /**
     * damages a ped with the given amount
     *
     * Hash: 0x697157CED63F18D4 | Since: 1207
     */
    function applyDamageToPed(ped: number | Ped, damageAmount: number, damageArmour: boolean, boneId: number, pedKiller: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF0D582CBF2D9B0F | Since: 1207
     */
    function applyPedBloodSpecific(ped: number | Ped): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
     *
     * Hash: 0x46DF918788CB093F | Since: 1207
     */
    function applyPedDamagePack(ped: number | Ped, damagePack: string, damage: number, mult: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x51AC07A44D4F5B8A | Since: 1207
     */
    function canKnockPedOffVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2D64376CF437363E | Since: 1207
     */
    function canPedBeMounted(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEAD42DE3610D0721 | Since: 1207
     */
    function canPedInCombatSeeTarget(ped: number | Ped, target: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x128F79EDCECE4FD5 | Since: 1207
     */
    function canPedRagdoll(ped: number | Ped): boolean;
    /**
     * Returns:
     * 0 - CTR_CANNOT_TARGET
     * 1 - CTR_CAN_TARGET
     * 2 - CTR_NOT_SURE_YET
     *
     * Hash: 0x7F9B9791D4CB71F6 | Since: 1207
     */
    function canPedSeeEntity(ped: number | Ped, targetEntity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D9473CB82D83A30 | Since: 1207
     */
    function canPedSeePedCached(ped: number | Ped, targetPed: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x726256CC1EEB182F | Since: 1207
     */
    function clearFacialIdleAnimOverride(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8FE22675A5A45817 | Since: 1207
     */
    function clearPedBloodDamage(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x56E3B78C5408D9F4 | Since: 1207
     */
    function clearPedBloodDamageByZone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x523C79AEEFCC4A2A | Since: 1207
     */
    function clearPedDamageDecalByZone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E5173C163976E38 | Since: 1207
     */
    function clearPedDecorations(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6585D955A68452A5 | Since: 1207
     */
    function clearPedEnvDirt(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EF6B7AC68E2F01B | Since: 1207
     */
    function clearPedLastDamageBone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E05208086BA0651 | Since: 1207
     */
    function clearPedNonCreationArea(): void;
    /**
     * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
     *
     * Hash: 0x9C720776DAA43E7E | Since: 1207
     */
    function clearPedWetness(ped: number | Ped): void;
    /**
     * flags: see SET_RAGDOLL_BLOCKING_FLAGS
     *
     * Hash: 0xD86D101FCFD00A4B | Since: 1207
     */
    function clearRagdollBlockingFlags(ped: number | Ped, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E29243FB56FC6D4 | Since: 1207
     */
    function clearRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF29A16337FACADB | Since: 1207
     */
    function clonePed(ped: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
    /**
     * Copies ped's components and props to targetPed.
     * Can be used to clear anything from a ped by cloning it, including bullet holes.
     *
     * Hash: 0xE952D6431689AD9A | Since: 1207
     */
    function clonePedToTarget(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9E7738B291706746 | Since: 1207
     */
    function computeSatchelItemForPedDamage(pedAttached: number | Ped, damageCleanliness: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5407B7288D0478B7 | Since: 1207
     */
    function countPedsInCombatWithTarget(ped: number | Ped, flag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x336B3D200AB007CB | Since: 1207
     */
    function countPedsInCombatWithTargetWithinRadius(ped: number | Ped, pos: Vector3, radius: number, flag: number): number;
    /**
     * Creates a new ped group.
     * Groups can contain up to 8 peds.
     *
     * The parameter is unused.
     *
     * Returns a handle to the created group, or 0 if a group couldn't be created.
     *
     * Hash: 0x90370EBE0FEE1A3D | Since: 1207
     */
    function createGroup(taskAllocator: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD49F9B0955C367DE | Since: 1207
     */
    function createPed(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
    /**
     * seatIndex:
     * enum eVehicleSeat
     * {
     * VS_ANY_PASSENGER = -2,
     * VS_DRIVER,
     * VS_FRONT_RIGHT,
     * VS_BACK_LEFT,
     * VS_BACK_RIGHT,
     * VS_EXTRA_LEFT_1,
     * VS_EXTRA_RIGHT_1,
     * VS_EXTRA_LEFT_2,
     * VS_EXTRA_RIGHT_2,
     * VS_EXTRA_LEFT_3,
     * VS_EXTRA_RIGHT_3,
     * VS_NUM_SEATS
     * };
     *
     * Hash: 0x7DD959874C1FD534 | Since: 1207
     */
    function createPedInsideVehicle(vehicle: number | Vehicle, modelHash: number | string, seatIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF89AA2BD01FC06B7 | Since: 1207
     */
    function createPedOnMount(mount: number | Ped, modelHash: number | string, index: number): number;
    /**
     * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0xCC0EF140F99365C5 | Since: 1207
     */
    function deletePed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xED00D72F81CF7278 | Since: 1207
     */
    function detachCarriableEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x733C87D4CE22BEA2 | Since: 1207
     */
    function disablePedInjuredOnGroundBehaviour(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C6B0C22F9F40BBE | Since: 1207
     */
    function doesGroupExist(groupId: number): boolean;
    /**
     * Forces the ped to fall back and kills it.
     *
     * It doesn't really explode the ped's head but it kills the ped
     *
     * Hash: 0x2D05CED3A38D0F3A | Since: 1207
     */
    function explodePedHead(ped: number | Ped, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7043D0681285BA2D | Since: 1207
     */
    function fadeAndDestroyPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5ACE8B23A438EC0 | Since: 1207
     */
    function findAllAttachedCarriableEntities(ped: number | Ped, itemset: any): void;
    /**
     * Old name: _FREEZE_PED_CAMERA_ROTATION
     *
     * Hash: 0xFF287323B0E2C69A | Since: 1207
     */
    function forceAllHeadingValuesToAlign(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2208438012482A1A | Since: 1207
     */
    function forcePedAiAndAnimationUpdate(ped: number | Ped): void;
    /**
     * motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CPedMotionStates__eMotionState
     *
     * Hash: 0xF28965D04F570DCA | Since: 1207
     */
    function forcePedMotionState(ped: number | Ped, motionStateHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE22B26DD764C040 | Since: 1207
     */
    function getAnimInitialOffsetPosition(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x4B805E6046EE9E47 | Since: 1207
     */
    function getAnimInitialOffsetRotation(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x608BC6A6AACD5036 | Since: 1207
     */
    function getCarriedAttachedInfoForSlot(): any;
    /**
     * Gets the closest ped in a radius.
     *
     * Hash: 0xC33AB876A77F8164 | Since: 1207
     */
    function getClosestPed(pos: Vector3, radius: number, outPed: number | Ped, pedType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52DFF8A10508090A | Since: 1207
     */
    function getCombatFloat(ped: number | Ped, combatType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xCD66FEA29400A0B5 | Since: 1207
     */
    function getCurrentTargetForPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xCD5003B097200F36 | Since: 1207
     */
    function getDeadPedPickupCoords(ped: number | Ped): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x8DE69FE35CA09A45 | Since: 1207
     */
    function getGroupSize(groupId: number, hasLeader: boolean, numberOfFollowers: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA454D234E45BB6E5 | Since: 1207
     */
    function getIsPedRespondingToNegativeInteraction(ped: number | Ped, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9337183FDA2E9035 | Since: 1207
     */
    function getIsPedRespondingToPositiveInteraction(ped: number | Ped, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5486A79D9FBD342D | Since: 1207
     */
    function getJackTarget(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x14169FA823679E41 | Since: 1207
     */
    function getLootingPickupTargetEntity(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x18A3E9EE1297FD39 | Since: 1207
     */
    function getMeleeTargetForPed(ped: number | Ped): number;
    /**
     * This is a way to get what drawables a ped has equipped
     * Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
     * Note: this works with non shop components, direct .ydd files.
     *
     * Hash: 0xA9C28516A6DC9D56 | Since: 1207
     */
    function getMetaPedAssetGuids(ped: number | Ped, index: number, drawable: number | string, albedo: number | string, normal: number | string, material: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE7998FEC53A33BBE | Since: 1207
     */
    function getMetaPedAssetTint(ped: number | Ped, index: number, pallete: number | string, tint0: number, tint1: number, tint2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE7E11B8DCBED1058 | Since: 1207
     */
    function getMount(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x10C70A515BC03707 | Since: 1207
     */
    function getNumMetaPedOutfits(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x9B128DC36C1E04CF | Since: 1207
     */
    function getPedsJacker(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x37F4AD56ECBC0CD6 | Since: 1207
     */
    function getPedAccuracy(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CCE68DBD5FE93EC | Since: 1207
     */
    function getPedAsGroupLeader(groupID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x51455483CF23ED97 | Since: 1207
     */
    function getPedAsGroupMember(groupID: number, memberNumber: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4912DFE492DB98CD | Since: 1207
     */
    function getPedBlackboardScriptBool(ped: number | Ped, variableName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA29FD00D45311EB7 | Since: 1207
     */
    function getPedBlackboardScriptFloat(ped: number | Ped, variableName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xB71B91B398F8F067 | Since: 1207
     */
    function getPedBlackboardScriptInt(ped: number | Ped, variableName: string): number;
    /**
     * Gets the position of the specified bone of the specified ped.
     *
     * ped: The ped to get the position of a bone from.
     * boneId: The ID of the bone to get the position from. This is NOT the index.
     * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
     * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
     * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
     *
     * Hash: 0x17C07FC640E86B4E | Since: 1207
     */
    function getPedBoneCoords(ped: number | Ped, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    /**
     * no bone = -1
     *
     * Hash: 0x3F428D08BE5AAE31 | Since: 1207
     */
    function getPedBoneIndex(ped: number | Ped, boneId: number): number;
    /**
     * Returns the hash of the weapon/model/object that killed the ped.
     *
     * Hash: 0x16FFE42AB2D2DC59 | Since: 1207
     */
    function getPedCauseOfDeath(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xDEA92412FCAEB3F5 | Since: 1207
     */
    function getPedCombatMovement(ped: number | Ped): number;
    /**
     * flagId: see SET_PED_CONFIG_FLAG
     *
     * Hash: 0x7EE53118C892B513 | Since: 1207
     */
    function getPedConfigFlag(ped: number | Ped, flagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD5FE956C70FF370B | Since: 1207
     */
    function getPedCrouchMovement(ped: number | Ped): boolean;
    /**
     * Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
     *
     * Hash: 0xF60165E1D2C5370B | Since: 1207
     */
    function getPedCurrentMoveBlendRatio(ped: number | Ped, speedX: number, speedY: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3C06B8786DD94CD1 | Since: 1207
     */
    function getPedDefensiveAreaPosition(ped: number | Ped): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x2311F15D971AA680 | Since: 1207
     */
    function getPedGrappleState(ped: number | Ped): number;
    /**
     * Returns the groupId of which the specified ped is a member of.
     *
     * Hash: 0xF162E133B4E7A675 | Since: 1207
     */
    function getPedGroupIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x3BDFCF25B58B0415 | Since: 1207
     */
    function getPedIsBeingGrappled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC48A9EB0D499B3E5 | Since: 1207
     */
    function getPedIsDoingCombatRoll(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E99E3BF11BB6367 | Since: 1207
     */
    function getPedIsGrappling(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD75960F6BD9EA49C | Since: 1207
     */
    function getPedLastDamageBone(ped: number | Ped, outBone: number): boolean;
    /**
     * enum ePedLootStatus
     * {
     * PLS_NONE,
     * PLS_PRE_LOOT,
     * PLS_SAMPLING,
     * PLS_SKINNING
     * };
     *
     * Hash: 0xC737697C41628340 | Since: 1311
     */
    function getPedLootStatusMp(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4700A416E8324EF3 | Since: 1207
     */
    function getPedMaxHealth(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x3F69145BBA87BAE7 | Since: 1207
     */
    function getPedMoney(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x243E1B4607040057 | Since: 1207
     */
    function getPedMotionFocusEntity(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x23F8F5FC7E8C4A6B | Since: 1207
     */
    function getPedNearbyPeds(ped: number | Ped, sizeAndPeds: any, ignoredPedType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xCFF869CBFA210D82 | Since: 1207
     */
    function getPedNearbyVehicles(ped: number | Ped, sizeAndVehs: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x42FDD0F017B1E38E | Since: 1207
     */
    function getPedRelationshipGroupDefaultHash(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x7DBDD04862D95F04 | Since: 1207
     */
    function getPedRelationshipGroupHash(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xAF9E59B1B1FBF2A0 | Since: 1207
     */
    function getPedResetFlag(ped: number | Ped, flagId: number): boolean;
    /**
     * Returns the entity that killed the ped
     *
     * It is best to check if the Ped is dead before asking for its killer.
     *
     * Hash: 0x93C8B64DEB84728C | Since: 1207
     */
    function getPedSourceOfDeath(ped: number | Ped): number;
    /**
     * Returns whether the entity is in stealth mode
     *
     * Hash: 0x7C2AC9CA66575FBF | Since: 1207
     */
    function getPedStealthMovement(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1E98817B311AE98A | Since: 1207
     */
    function getPedTimeOfDeath(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x936E7CAD0AE2EE14 | Since: 1207
     */
    function getPedToPlayerWeaponDamageModifier(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xFF059E1E4C01E63C | Since: 1207
     */
    function getPedType(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6A3975DEA89F9A17 | Since: 1207
     */
    function getPlayerPedIsFollowing(ped: number | Ped): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x9E6B70061662AE5C | Since: 1207
     */
    function getRelationshipBetweenGroups(group1: number | string, group2: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xEBA5AD3A0EAF7121 | Since: 1207
     */
    function getRelationshipBetweenPeds(ped1: number | Ped, ped2: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6F4C85ACD641BCD2 | Since: 1207
     */
    function getSeatPedIsTryingToEnter(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4E76CB57222A00E5 | Since: 1207
     */
    function getSeatPedIsUsing(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x511F1A683387C7E2 | Since: 1207
     */
    function getTrackedPedPixelcount(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF92691AED837A5FC | Since: 1207
     */
    function getVehiclePedIsEntering(ped: number | Ped): number;
    /**
     * Gets the vehicle the specified Ped is in.
     *
     * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
     *
     * Hash: 0x9A9112A0FE9A4713 | Since: 1207
     */
    function getVehiclePedIsIn(ped: number | Ped, lastVehicle: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x6094AD011A2EA87D | Since: 1207
     */
    function getVehiclePedIsUsing(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B02DB082258625F | Since: 1207
     */
    function givePedHashScenarioProp(ped: number | Ped, object: number | Object, conditionalAnim: string, scenarioType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x854BC9B1A1CCD034 | Since: 1207
     */
    function hasMotionTypeAssetLoaded(nameHash: number | string, ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7DD7FB3480D8083E | Since: 1207
     */
    function initPedDefaultHealth(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4759CC730F947C81 | Since: 1207
     */
    function instantlyFillPedPopulation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD543D3A8FDE4F185 | Since: 1207
     */
    function isAnimalInteractionPossible(ped: number | Ped, animal: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x68772DB2B2526F9F | Since: 1311
     */
    function isAnyHostilePedNearPoint(ped: number | Ped, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x083961498679DC9F | Since: 1207
     */
    function isAnyPedNearPoint(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0D3D71EA1086C55 | Since: 1207
     */
    function isAnyPedShootingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8D523BF5BBD3808 | Since: 1207
     */
    function isEventInQueue(ped: number | Ped, eventType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x909AD9E9A92A10DF | Since: 1207
     */
    function isGroupLocallyControlled(groupId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EE3F0D7FECCC54F | Since: 1207
     */
    function isInstantlyFillPedPopulationFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFB1E7998B8595825 | Since: 1207
     */
    function isLocationSpawnSafe(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3998B1276A3300E5 | Since: 1207
     */
    function isPedAimingFromCover(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x12534C348C6CB68B | Since: 1207
     */
    function isPedAPlayer(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEF3A8772F085B4AA | Since: 1207
     */
    function isPedBeingDragged(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD453BB601D4A606E | Since: 1207
     */
    function isPedBeingHogtied(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A497FE2DF198913 | Since: 1207
     */
    function isPedBeingJacked(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x863B23EFDE9C5DF2 | Since: 1207
     */
    function isPedBeingStealthKilled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4FBACCE3B4138EE8 | Since: 1207
     */
    function isPedBeingStunned(ped: number | Ped, weaponType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA911EE21EDF69DAF | Since: 1207
     */
    function isPedCarryingSomething(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x53E8CB4F48BFE623 | Since: 1207
     */
    function isPedClimbing(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3317DEDB88C95038 | Since: 1207
     */
    function isPedDeadOrDying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBA63D9FE45412247 | Since: 1207
     */
    function isPedDefensiveAreaActive(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5527B8246FEF9B11 | Since: 1207
     */
    function isPedDiving(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1D46B417F926D34D | Since: 1207
     */
    function isPedEnteringAnyTransport(ped: number | Ped): boolean;
    /**
     * Presumably returns the Entity that the Ped is currently diving out of the way of.
     *
     * Hash: 0x414641C26E105898 | Since: 1207
     */
    function isPedEvasiveDiving(ped: number | Ped, evadingEntity: number | Entity): boolean;
    /**
     * angle is ped's view cone
     *
     * Hash: 0xD71649DB0A545AA3 | Since: 1207
     */
    function isPedFacingPed(ped: number | Ped, otherPed: number | Ped, angle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFB92A102F1C4DFA3 | Since: 1207
     */
    function isPedFalling(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3E592D0486DEC0F6 | Since: 1207
     */
    function isPedFallingOver(ped: number | Ped): boolean;
    /**
     * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
     * If the handle is invalid, the function returns true.
     *
     * Hash: 0xD839450756ED5A80 | Since: 1207
     */
    function isPedFatallyInjured(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBBCCE00B381F8482 | Since: 1207
     */
    function isPedFleeing(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95CBC65780DE7EB1 | Since: 1207
     */
    function isPedFullyOnMount(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB062B2B5722478E | Since: 1207
     */
    function isPedGettingIntoAVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9F65DBC537E59AD5 | Since: 1207
     */
    function isPedGoingIntoCover(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9BB01E3834671191 | Since: 1207
     */
    function isPedGroupMember(ped: number | Ped, groupId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1C86D8AEF8254B78 | Since: 1207
     */
    function isPedHangingOnToVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFCF37A457CB96DC0 | Since: 1207
     */
    function isPedHeadingTowardsPosition(ped: number | Ped, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x813A0A7C9D2E831F | Since: 1207
     */
    function isPedHeadtrackingEntity(ped: number | Ped, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5CD3CB88A7F8850D | Since: 1207
     */
    function isPedHeadtrackingPed(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3AA24CCC0D451379 | Since: 1207
     */
    function isPedHogtied(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42429C674B61238B | Since: 1207
     */
    function isPedHogtying(ped: number | Ped): boolean;
    /**
     * Returns true/false if the ped is/isn't humanoid.
     *
     * Hash: 0xB980061DA992779D | Since: 1207
     */
    function isPedHuman(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB655DB7582AEC805 | Since: 1207
     */
    function isPedIncapacitated(ped: number | Ped): boolean;
    /**
     * Gets a value indicating whether this ped's health is below its injured threshold.
     *
     * The default threshold is 100.
     *
     * Hash: 0x84A2DD9AC37C35C1 | Since: 1207
     */
    function isPedInjured(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E0E1C2B4F6CB339 | Since: 1207
     */
    function isPedInAnyBoat(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x298B91AE825E5705 | Since: 1207
     */
    function isPedInAnyHeli(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5FFF4CFC74D8FB80 | Since: 1207
     */
    function isPedInAnyPlane(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E575D6A898AB852 | Since: 1207
     */
    function isPedInAnyTaxi(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F972C1AB75A1ED0 | Since: 1207
     */
    function isPedInAnyTrain(ped: number | Ped): boolean;
    /**
     * Gets a value indicating whether the specified ped is in any vehicle.
     *
     * Hash: 0x997ABD671D25CA0B | Since: 1207
     */
    function isPedInAnyVehicle(ped: number | Ped, atGetIn: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4859F1FC66A6278E | Since: 1207
     */
    function isPedInCombat(ped: number | Ped, target: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x60DFD0691A170B88 | Since: 1207
     */
    function isPedInCover(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x845333B3150583AB | Since: 1207
     */
    function isPedInCoverFacingLeft(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9134873537FA419C | Since: 1207
     */
    function isPedInFlyingVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5891CAC5D4ACFF74 | Since: 1207
     */
    function isPedInGroup(ped: number | Ped): boolean;
    /**
     * Notes: The function only returns true while the ped is:
     * A.) Swinging a random melee attack (including pistol-whipping)
     *
     * B.) Reacting to being hit by a melee attack (including pistol-whipping)
     *
     * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
     *
     * You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
     *
     * Hash: 0x4E209B2C1EAD5159 | Since: 1207
     */
    function isPedInMeleeCombat(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x796D90EFB19AA332 | Since: 1207
     */
    function isPedInModel(ped: number | Ped, modelHash: number | string): boolean;
    /**
     * Gets a value indicating whether the specified ped is in the specified vehicle.
     *
     * Hash: 0xA3EE4A07279BB9DB | Since: 1207
     */
    function isPedInVehicle(ped: number | Ped, vehicle: number | Vehicle, atGetIn: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4AE4FF911DFB61DA | Since: 1207
     */
    function isPedJacking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCEDABC5900A0BF97 | Since: 1207
     */
    function isPedJumping(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9682F850056C9ADE | Since: 1207
     */
    function isPedLassoed(ped: number | Ped): boolean;
    /**
     * Returns true/false if the ped is/isn't male.
     *
     * Hash: 0x6D9F5FAA7488BA46 | Since: 1207
     */
    function isPedMale(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC9D55B1A358A5BF7 | Since: 1207
     */
    function isPedModel(ped: number | Ped, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01FEE67DB37F59B2 | Since: 1207
     */
    function isPedOnFoot(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x460BC76A0E10655E | Since: 1207
     */
    function isPedOnMount(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC5F66E459AF3BB2 | Since: 1207
     */
    function isPedOnSpecificVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
    /**
     * Gets a value indicating whether the specified ped is on top of any vehicle.
     *
     * Return 1 when ped is on vehicle.
     * Return 0 when ped is not on a vehicle.
     *
     * Hash: 0x67722AEB798E5FAB | Since: 1207
     */
    function isPedOnVehicle(ped: number | Ped): boolean;
    /**
     * Returns true if the ped is currently opening a door (CTaskOpenDoor).
     *
     * Old name: _IS_PED_OPENING_A_DOOR
     *
     * Hash: 0x26AF0E8E30BD2A2C | Since: 1207
     */
    function isPedOpeningDoor(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDCCA191DF9980FD7 | Since: 1207
     */
    function isPedPerformingMeleeAction(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC70B5FAE151982D8 | Since: 1207
     */
    function isPedPlantingBomb(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD6A86331A537A7B9 | Since: 1207
     */
    function isPedProne(ped: number | Ped): boolean;
    /**
     * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
     *
     * Hash: 0x47E4E977581C5B55 | Since: 1207
     */
    function isPedRagdoll(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0BC8FAED8CFEB3C | Since: 1207
     */
    function isPedReadyToRender(ped: number | Ped): boolean;
    /**
     * Returns whether the specified ped is reloading.
     *
     * Hash: 0x24B100C68C645951 | Since: 1207
     */
    function isPedReloading(ped: number | Ped): boolean;
    /**
     * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0x625B774D75C87068 | Since: 1207
     */
    function isPedRespondingToEvent(ped: number | Ped, eventType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x77525BBF433F2CD6 | Since: 1207
     */
    function isPedRespondingToThreat(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2AFE52F782F25775 | Since: 1207
     */
    function isPedRunningMobilePhoneTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3B6097CC25AA69E | Since: 1207
     */
    function isPedRunningRagdollTask(ped: number | Ped): boolean;
    /**
     * Returns whether the specified ped is shooting.
     *
     * Hash: 0x34616828CD07F1A1 | Since: 1207
     */
    function isPedShooting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x84D0BF2B21862059 | Since: 1207
     */
    function isPedSitting(ped: number | Ped): boolean;
    /**
     * Detect if ped is in any vehicle
     * [True/False]
     *
     * Hash: 0x826AA586EDB9FEF8 | Since: 1207
     */
    function isPedSittingInAnyVehicle(ped: number | Ped): boolean;
    /**
     * Detect if ped is sitting in the specified vehicle
     * [True/False]
     *
     * Hash: 0xA808AA1D79230FC2 | Since: 1207
     */
    function isPedSittingInVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x530944F6F4B8A214 | Since: 1207
     */
    function isPedStopped(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9DE327631295B4C2 | Since: 1207
     */
    function isPedSwimming(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC024869A53992F34 | Since: 1207
     */
    function isPedSwimmingUnderWater(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00E73468D085F745 | Since: 1207
     */
    function isPedUsingActionMode(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57AB4A3080F85143 | Since: 1207
     */
    function isPedUsingAnyScenario(ped: number | Ped): boolean;
    /**
     * Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
     *
     * Hash: 0x34D6AC1157C8226C | Since: 1207
     */
    function isPedUsingScenarioHash(ped: number | Ped, scenarioHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9C54041BB66BCF9E | Since: 1207
     */
    function isPedUsingThisScenario(ped: number | Ped, scenario: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x117C70D1F5730B5E | Since: 1207
     */
    function isPedVaulting(ped: number | Ped): boolean;
    /**
     * Returns true if ped is in perception (focused and looking at target ped)
     * Most float params are -1.f in R* Scripts
     *
     * Hash: 0x06087579E7AA85A9 | Since: 1207
     */
    function isTargetPedInPerceptionArea(ped: number | Ped, targetPed: number | Ped, customDistance: number): boolean;
    /**
     * Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
     * Target needs to be tracked first, won't work otherwise.
     *
     * Hash: 0x91C8E617F64188AC | Since: 1207
     */
    function isTrackedPedVisible(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6FD7816A36615F48 | Since: 1207
     */
    function knockOffPedProp(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x45BBCBA77C29A841 | Since: 1207
     */
    function knockPedOffVehicle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6E1E9F47A7686F8 | Since: 1207
     */
    function pedCowerInPlace(ped: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E4C940233FC0C6F | Since: 1207
     */
    function pedCowerMoveToPoint(ped: number | Ped, ped2: number | Ped): void;
    /**
     * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
     *
     * Hash: 0x9222F300BF8354FE | Since: 1207
     */
    function registerHatedTargetsAroundPed(ped: number | Ped, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F25D9AEFA34FBA2 | Since: 1207
     */
    function registerTarget(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3088634CF8C819CF | Since: 1207
     */
    function releasePedVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EB2F69076AF7053 | Since: 1207
     */
    function removeGroup(groupId: number): void;
    /**
     * Ped will no longer get angry when you stay near him.
     *
     * Hash: 0x74D4E028107450A9 | Since: 1207
     */
    function removePedDefensiveArea(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xED74007FFB146BC2 | Since: 1207
     */
    function removePedFromGroup(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6BA2444AB393DA2 | Since: 1207
     */
    function removeRelationshipGroup(groupHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x31D16B74C6E29D66 | Since: 1207
     */
    function removeScenarioBlockingArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD37401D78A929A49 | Since: 1207
     */
    function removeScenarioBlockingAreas(): void;
    /**
     * Params: p2, p3 usually 0 in R* Scripts
     *
     * Hash: 0xDF631E4BCE1B1FC4 | Since: 1207
     */
    function removeShopItemFromPedByCategory(ped: number | Ped, componentCategory: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD710A5007C2AC539 | Since: 1207
     */
    function removeTagFromMetaPed(ped: number | Ped, component: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x75BA1CB3B7D40CAF | Since: 1207
     */
    function requestPedUseSmallBboxVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BC338A7B21F4608 | Since: 1207
     */
    function requestPedVehicleVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D7A2E43E74E2EB8 | Since: 1207
     */
    function requestPedVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA16670E7BA4743C | Since: 1207
     */
    function resetAiWeaponDamageModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x63DAB4CCB3273205 | Since: 1207
     */
    function resetGroupFormationDefaultSpacing(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A5AFD2B8381A6E1 | Since: 1207
     */
    function resetHorseAvoidanceLevelToDefault(horse: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x22EF8FF8778030EB | Since: 1207
     */
    function resetPedInVehicleContext(ped: number | Ped): void;
    /**
     * Resets the value for the last vehicle driven by the Ped.
     *
     * Hash: 0xBB8DE8CF6A8DD8BB | Since: 1207
     */
    function resetPedLastVehicle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FA4664CF62E47E8 | Since: 1207
     */
    function resetPedRagdollTimer(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x97B0DB5B4AA74E77 | Since: 1207
     */
    function resetPedWeaponMovementClipset(ped: number | Ped): void;
    /**
     * This function will simply bring the dead ped back to life.
     *
     * Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
     *
     * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
     *
     * Hash: 0x71BC8E838B9C6035 | Since: 1207
     */
    function resurrectPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D8ACD8388CD99CE | Since: 1207
     */
    function reviveInjuredPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x66460DEDDD417254 | Since: 1207
     */
    function setAiMeleeWeaponDamageModifier(modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B1E2A40A65B8521 | Since: 1207
     */
    function setAiWeaponDamageModifier(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F8AA94D6D97DBF4 | Since: 1207
     */
    function setBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9911F4A24485F653 | Since: 1207
     */
    function setBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(): void;
    /**
     * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eCombatAttributeFloats
     *
     * Hash: 0xFF41B4B141ED981C | Since: 1207
     */
    function setCombatFloat(ped: number | Ped, combatType: number, newValue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x102E68B2024D536D | Since: 1207
     */
    function setCreateRandomCops(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC52E0F855C58FC2E | Since: 1207
     */
    function setEnableBoundAnkles(ped: number | Ped, toggle: boolean): void;
    /**
     * Ped can not pull out a weapon when true
     *
     * Hash: 0xDF1AF8B5D56542FA | Since: 1207
     */
    function setEnableHandcuffs(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFC24B988B938B38 | Since: 1207
     */
    function setFacialIdleAnimOverride(ped: number | Ped, animName: string, animDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CC7D3B7AF7FB71F | Since: 1207
     */
    function setFormationPositionsTargetRadius(groupId: number, radius: number): boolean;
    /**
     * eFormationType
     *
     * 0: Default
     * 1: Circle Around Leader
     * 2: Alternative Circle Around Leader
     * 3: Line, with Leader at center
     *
     * Hash: 0xCE2F5FC3AF7E8C1E | Since: 1207
     */
    function setGroupFormation(groupId: number, formationType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D9D45004C28C916 | Since: 1207
     */
    function setGroupFormationSpacing(groupId: number): void;
    /**
     * Sets the range at which members will automatically leave the group.
     *
     * Hash: 0x4102C7858CFEE4E4 | Since: 1207
     */
    function setGroupSeparationRange(groupId: number, separationRange: number): void;
    /**
     * -1 - HORSE_ASSIST__NO_CHANGE
     * 0 - HORSE_ASSIST__MANUAL
     * 1 - HORSE_ASSIST__SEMIASSIST
     * 2 - HORSE_ASSIST__FULLASSIST
     *
     * Hash: 0xDDCF6FEA5D7ACC17 | Since: 1207
     */
    function setHorseAvoidanceLevel(horse: number | Ped, avoidanceLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC32779C16FCEECD9 | Since: 1207
     */
    function setIkTarget(ped: number | Ped, ikIndex: number, entityLookAt: number | Entity, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, blendInDuration: number, blendOutDuration: number): void;
    /**
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
     *
     * lootFlag:
     * enum eLootFlag
     * {
     * LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
     * LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
     * LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
     * };
     *
     * Hash: 0x6569F31A01B4C097 | Since: 1207
     */
    function setLootingFlag(ped: number | Ped, lootFlag: number, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x925A160133003AC6 | Since: 1207
     */
    function setPausePedWritheBleedout(ped: number | Ped, toggle: boolean): void;
    /**
     * accuracy = 0-100, 100 being perfectly accurate
     *
     * Hash: 0x7AEFB85C1D49DEB6 | Since: 1207
     */
    function setPedAccuracy(ped: number | Ped, accuracy: number): void;
    /**
     * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
     * toggle = bSetRelGroup
     *
     * Hash: 0xBB03C38DD3FB7FFD | Since: 1207
     */
    function setPedAsCop(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A7819605465FBCE | Since: 1207
     */
    function setPedAsGroupLeader(ped: number | Ped, groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F3480FE65DB31B5 | Since: 1207
     */
    function setPedAsGroupMember(ped: number | Ped, groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C3B4D6D13B4C841 | Since: 1207
     */
    function setPedCanArmIk(ped: number | Ped, toggle: boolean): void;
    /**
     * When set on a player ped, its just like when you die in RDO
     *
     * Hash: 0x5240864E847C691C | Since: 1207
     */
    function setPedCanBeIncapacitated(ped: number | Ped, toggle: boolean): void;
    /**
     * state:
     * enum eKnockOffVehicle
     * {
     * KNOCKOFFVEHICLE_DEFAULT,
     * KNOCKOFFVEHICLE_NEVER,
     * KNOCKOFFVEHICLE_EASY,
     * KNOCKOFFVEHICLE_HARD
     * };
     *
     * Hash: 0x7A6535691B477C48 | Since: 1207
     */
    function setPedCanBeKnockedOffVehicle(ped: number | Ped, state: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x63F58F7C80513AAD | Since: 1207
     */
    function setPedCanBeTargetted(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x66B57B72E0836A76 | Since: 1207
     */
    function setPedCanBeTargettedByPlayer(ped: number | Ped, player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF1CA77833E58F2C | Since: 1207
     */
    function setPedCanBeTargettedByTeam(ped: number | Ped, team: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC11C18092C5530DC | Since: 1207
     */
    function setPedCanHeadIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x73518ECE2485412B | Since: 1207
     */
    function setPedCanLegIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6373D1349925A70E | Since: 1207
     */
    function setPedCanPlayAmbientAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EB0585D15254740 | Since: 1207
     */
    function setPedCanPlayAmbientBaseAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAF20C5432058024 | Since: 1207
     */
    function setPedCanPlayGestureAnims(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB128377056A54E2A | Since: 1207
     */
    function setPedCanRagdoll(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF993EE5E90ABA25 | Since: 1207
     */
    function setPedCanRagdollFromPlayerImpact(ped: number | Ped, toggle: boolean): void;
    /**
     * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
     *
     * Only works in singleplayer
     *
     * Hash: 0x2E2F4240B3F24647 | Since: 1207
     */
    function setPedCanTeleportToGroupLeader(pedHandle: number | Ped, groupId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2B7106D37947CE0 | Since: 1207
     */
    function setPedCanTorsoIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5846EDB26A98A24 | Since: 1207
     */
    function setPedCanTorsoReactIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6647C5F6F5792496 | Since: 1207
     */
    function setPedCanTorsoVehicleIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC4686EC06434678 | Since: 1207
     */
    function setPedCanUseAutoConversationLookat(ped: number | Ped, toggle: boolean): void;
    /**
     * Overrides the ped's collision capsule radius for the current tick.
     * Must be called every tick to be effective.
     *
     * Setting this to 0.001 will allow warping through some objects.
     *
     * Hash: 0x364DF566EC833DE2 | Since: 1207
     */
    function setPedCapsule(ped: number | Ped, value: number): void;
    /**
     * Old name: SET_PED_CLOTH_PACKAGE_INDEX
     *
     * Hash: 0x78C4E9961DB3EB5B | Since: 1207
     */
    function setPedClothPinFrames(ped: number | Ped): void;
    /**
     * abilityLevel:
     * enum eCombatAbilityLevel
     * {
     * CAL_POOR,
     * CAL_AVERAGE,
     * CAL_PROFESSIONAL
     * };
     *
     * Hash: 0xC7622C0D36B2FDA8 | Since: 1207
     */
    function setPedCombatAbility(ped: number | Ped, abilityLevel: number): void;
    /**
     * attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
     *
     * Hash: 0x9F7794730795E019 | Since: 1207
     */
    function setPedCombatAttributes(ped: number | Ped, attributeIndex: number, enabled: boolean): void;
    /**
     * 0 - Stationary (Will just stand in place)
     * 1 - Defensive (Will try to find cover and very likely to blind fire)
     * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
     * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
     *
     * Hash: 0x4D9CA1009AFBD057 | Since: 1207
     */
    function setPedCombatMovement(ped: number | Ped, combatMovement: number): void;
    /**
     * range:
     * enum eCombatRange
     * {
     * CR_NEAR,
     * CR_MEDIUM,
     * CR_FAR,
     * CR_VERY_FAR
     * };
     *
     * Hash: 0x3C606747B23E497B | Since: 1207
     */
    function setPedCombatRange(ped: number | Ped, range: number): void;
    /**
     * flagId: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptConfigFlags
     * https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
     *
     * Hash: 0x1913FE4CBF41C463 | Since: 1207
     */
    function setPedConfigFlag(ped: number | Ped, flagId: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x413C6C763A4AFFAD | Since: 1207
     */
    function setPedDefensiveAreaDirection(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC3DB99C8144CD81 | Since: 1207
     */
    function setPedDefensiveAreaVolume(ped: number | Ped, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA5A7ECE2AA8FE70 | Since: 1207
     */
    function setPedDesiredHeading(ped: number | Ped, heading: number): void;
    /**
     * Used in various R* MP & SP Scripts
     *
     * Hash: 0x9AC577F5A12AD8A9 | Since: 1207
     */
    function setPedFiringPattern(ped: number | Ped, patternHash: number | string): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
     *
     * attributeFlags:
     * enum eFleeAttribute
     * {
     * FA_FORCE_EXIT_VEHICLE = (1 << 16),
     * FA_DISABLE_MOUNT_USAGE = (1 << 20),
     * FA_DISABLE_ENTER_VEHICLES = (1 << 22),
     * };
     *
     * Hash: 0x70A2D1137C8ED7C9 | Since: 1207
     */
    function setPedFleeAttributes(ped: number | Ped, attributeFlags: number, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDF803377F94AAA8 | Since: 1207
     */
    function setPedGestureGroup(ped: number | Ped, gesture: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FF447B6B6AD960A | Since: 1207
     */
    function setPedGravity(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BDDB8D9EC6BCF3C | Since: 1207
     */
    function setPedGroupMemberPassengerIndex(ped: number | Ped, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x33A8F7F7D5F7F33C | Since: 1207
     */
    function setPedHearingRange(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x52D59AB61DDC05DD | Since: 1207
     */
    function setPedHighlyPerceptive(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF107E836A70DCE05 | Since: 1207
     */
    function setPedIdRange(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC4B4B3B9908052A | Since: 1311
     */
    function setPedInjuredOnGroundBehaviour(ped: number | Ped, unk: number): void;
    /**
     * Ped: The ped to warp.
     * vehicle: The vehicle to warp the ped into.
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0xF75B0D629E1C063D | Since: 1207
     */
    function setPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x971D38760FBC02EF | Since: 1207
     */
    function setPedKeepTask(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE6004120C18DF97 | Since: 1207
     */
    function setPedLassoHogtieFlag(ped: number | Ped, flagId: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC396F5B86FF9FEBD | Since: 1207
     */
    function setPedLegIkMode(ped: number | Ped, mode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC2C5C242AAC342B | Since: 1207
     */
    function setPedLodMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * Sets the maximum health of a ped.
     *
     * Hash: 0xF5F6378C4F3419D3 | Since: 1207
     */
    function setPedMaxHealth(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x433083750C5E064A | Since: 1207
     */
    function setPedMaxMoveBlendRatio(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x43C851690662113D | Since: 1207
     */
    function setPedMaxTimeInWater(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BA428C528D9E522 | Since: 1207
     */
    function setPedMaxTimeUnderwater(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x01A898D26E2333DD | Since: 1207
     */
    function setPedMinMoveBlendRatio(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE163A4BCE4DE6F11 | Since: 1207
     */
    function setPedModelIsSuppressed(model: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9C8960E8684C1B5 | Since: 1207
     */
    function setPedMoney(ped: number | Ped, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9E8C908F41584ECD | Since: 1207
     */
    function setPedMoveAnimsBlendOut(ped: number | Ped): void;
    /**
     * Min: 0.0f
     * Max: 1.15f
     *
     * Hash: 0x085BF80FA50A39D1 | Since: 1207
     */
    function setPedMoveRateOverride(ped: number | Ped, value: number): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x98EFA132A4117BE1 | Since: 1207
     */
    function setPedNameDebug(ped: number | Ped, name: string): void;
    /**
     * The distance between these points, is the diagonal of a box (remember it's 3D).
     *
     * Hash: 0xEE01041D559983EA | Since: 1207
     */
    function setPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x028F76B6E78246EB | Since: 1207
     */
    function setPedOntoMount(ped: number | Ped, mount: number | Ped, seatIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x931B241409216C1F | Since: 1207
     */
    function setPedOwnsAnimal(ped: number | Ped, animal: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE07FF6495D52E2A | Since: 1207
     */
    function setPedPanicExitScenario(ped: number | Ped, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01F6594B923B9251 | Since: 1207
     */
    function setPedRagdollForceFall(ped: number | Ped): void;
    /**
     * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
     *
     * Hash: 0xF0A4F1BBF4FA7497 | Since: 1207
     */
    function setPedRagdollOnCollision(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8A9481A01E63C28 | Since: 1207
     */
    function setPedRandomComponentVariation(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xADB3F206518799E8 | Since: 1207
     */
    function setPedRelationshipGroupDefaultHash(ped: number | Ped, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC80A74AC829DDD92 | Since: 1207
     */
    function setPedRelationshipGroupHash(ped: number | Ped, relationshipGroup: number | string): void;
    /**
     * Needs to be called every frame
     *
     * flagid:https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptResetFlags
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
     *
     * Hash: 0xC1E8A365BF3B29F2 | Since: 1207
     */
    function setPedResetFlag(ped: number | Ped, flagId: number, doReset: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF29CF591C4BF6CEE | Since: 1207
     */
    function setPedSeeingRange(ped: number | Ped, value: number): void;
    /**
     * Params: shootRate = 0 - 1000
     *
     * Hash: 0x614DA022990752DC | Since: 1207
     */
    function setPedShootRate(ped: number | Ped, shootRate: number): void;
    /**
     * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
     *
     * Hash: 0x802092B07E3B1EEA | Since: 1207
     */
    function setPedShouldPlayCombatScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
    /**
     * Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
     *
     * Hash: 0xEC6935EBE0847B90 | Since: 1207
     */
    function setPedShouldPlayDirectedNormalScenarioExit(ped: number | Ped, pos: Vector3): boolean;
    /**
     * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
     *
     * Hash: 0x62FDAD5E01D2DD47 | Since: 1207
     */
    function setPedShouldPlayEmotionalScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
    /**
     * lookIntensity:
     * 0 - REACT_LOOK_NONE
     * 1 - REACT_LOOK_LOW
     * 2 - REACT_LOOK_MEDIUM
     * 3 - REACT_LOOK_HIGH
     *
     * Hash: 0xEEED8FAFEC331A70 | Since: 1207
     */
    function setPedShouldPlayFleeScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF1C03A5352243A30 | Since: 1207
     */
    function setPedShouldPlayImmediateScenarioExit(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3A9299C4F2ADB98 | Since: 1207
     */
    function setPedShouldPlayNormalScenarioExit(ped: number | Ped): void;
    /**
     * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
     *
     * Hash: 0x463803429297117C | Since: 1207
     */
    function setPedShouldPlayQuickScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9D3151A373974804 | Since: 1207
     */
    function setPedSphereDefensiveArea(ped: number | Ped, pos: Vector3, radius: number): void;
    /**
     * Not implemented.
     *
     * Hash: 0x88CBB5CEB96B7BD2 | Since: 1207
     */
    function setPedStealthMovement(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x27B0405F59637D1F | Since: 1207
     */
    function setPedSweat(ped: number | Ped, sweat: number): void;
    /**
     * TLR_ExitTask = 0,
     * TLR_NeverLoseTarget,
     * TLR_SearchForTarget
     *
     * Hash: 0x0703B9079823DA4A | Since: 1207
     */
    function setPedTargetLossResponse(ped: number | Ped, responseType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x112942C6E708F70B | Since: 1207
     */
    function setPedToInformRespectedFriends(ped: number | Ped, radius: number, maxFriends: number): void;
    /**
     * Old name: _SET_PED_DAMAGE_MODIFIER
     *
     * Hash: 0xD77AE48611B7B10A | Since: 1207
     */
    function setPedToPlayerWeaponDamageModifier(ped: number | Ped, damageModifier: number): void;
    /**
     * nmTaskMessageParameterName: See physicstasks.ymt. Search for DraggedByCart or 0xD00820D7 (Used in R* SP Script marston8)
     *
     * Hash: 0xAE99FB955581844A | Since: 1207
     */
    function setPedToRagdoll(ped: number | Ped, timeMin: number, timeMax: number, ragdollType: number, abortIfInjured: boolean, abortIfDead: boolean, nmTaskMessageParameterName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD76632D99E4966C8 | Since: 1207
     */
    function setPedToRagdollWithFall(ped: number | Ped, timeMin: number, timeMax: number, ragdollType: number, falldirX: number, falldirY: number, falldirZ: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD75ACCF5E0FB5367 | Since: 1207
     */
    function setPedUsingActionMode(ped: number | Ped, bActionModeEnabled: boolean, action: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B6405E8AB34A907 | Since: 1207
     */
    function setPedVisualFieldCenterAngle(ped: number | Ped, angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x70793BDCA1E854D4 | Since: 1207
     */
    function setPedVisualFieldMaxAngle(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DB492222FB21E26 | Since: 1207
     */
    function setPedVisualFieldMinAngle(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C74B0BC831B753A | Since: 1207
     */
    function setPedVisualFieldPeripheralRange(ped: number | Ped, range: number): void;
    /**
     * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
     *
     * Hash: 0xB5485E4907B53019 | Since: 1207
     */
    function setPedWetnessEnabledThisFrame(ped: number | Ped): void;
    /**
     * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
     *
     * Hash: 0x44CB6447D2571AA0 | Since: 1207
     */
    function setPedWetnessHeight(ped: number | Ped, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8C3BE3EE94CAF2D | Since: 1207
     */
    function setPopControlSphereThisFrame(): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
     *
     * flags:
     * enum eRagdollBlockingFlags
     * {
     * RBF_BULLET_IMPACT = (1 << 0),
     * RBF_VEHICLE_IMPACT = (1 << 1),
     * RBF_FIRE = (1 << 2),
     * RBF_ELECTROCUTION = (1 << 3),
     * RBF_PLAYER_IMPACT = (1 << 4),
     * RBF_EXPLOSION = (1 << 5),
     * RBF_IMPACT_OBJECT = (1 << 6),
     * RBF_MELEE = (1 << 7),
     * RBF_RUBBER_BULLET = (1 << 8),
     * RBF_FALLING = (1 << 9),
     * RBF_WATER_JET = (1 << 10),
     * RBF_DROWNING = (1 << 11),
     * RBF_0x9F52E2C4 = (1 << 12),
     * RBF_PLAYER_BUMP = (1 << 13),
     * RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
     * RBF_PED_RAGDOLL_BUMP = (1 << 15),
     * RBF_VEHICLE_GRAB = (1 << 16),
     * RBF_SMOKE_GRENADE = (1 << 17),
     * RBF_HORSE_BUMP = (1 << 18),
     * RBF_ACTIVATE_ON_COLLISION = (1 << 19)
     * };
     *
     * Hash: 0x26695EC767728D84 | Since: 1207
     */
    function setRagdollBlockingFlags(ped: number | Ped, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF25EB89375A37AD | Since: 1207
     */
    function setRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A556143A1C03898 | Since: 1207
     */
    function setScenarioPedDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEE4A5459472A9F8 | Since: 1207
     */
    function spawnpointsCancelSearch(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA635C11B8C44AFC2 | Since: 1207
     */
    function spawnpointsGetNumSearchResults(): number;
    /**
     * No comment provided
     *
     * Hash: 0x280C7E3AC7F56E90 | Since: 1207
     */
    function spawnpointsGetSearchResult(randomInt: number, x: number, y: any, z: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB782F8238512BAD5 | Since: 1207
     */
    function spawnpointsGetSearchResultFlags(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C67506996001F5E | Since: 1207
     */
    function spawnpointsIsSearchActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA586FBEB32A53DBB | Since: 1207
     */
    function spawnpointsIsSearchComplete(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF445DE8DA80A1792 | Since: 1207
     */
    function spawnpointsIsSearchFailed(): boolean;
    /**
     * Params: p4 = 35.f, duration = 5000 in R* Scripts
     *
     * Hash: 0x2DF9038C90AD5264 | Since: 1207
     */
    function spawnpointsStartSearch(pos: Vector3, width: number, spawnpointsFlag: number, duration: number): void;
    /**
     * Searching area between coords 1 and 2
     *
     * Hash: 0xB2AFF10216DEFA2F | Since: 1207
     */
    function spawnpointsStartSearchInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, spawnpointsFlag: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9ACF4A08098EA25 | Since: 1207
     */
    function specialFunctionDoNotUse(ped: number | Ped): void;
    /**
     * Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
     *
     * Hash: 0x285D36C5C72B0569 | Since: 1207
     */
    function timeSincePedLastShot(ped: number | Ped): number;
    /**
     * If toggle is true, when the ped is using a scenario he will stop it and become scared
     * If toggle is false, the ped will not be scared anymore and continue his scenario
     *
     * Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
     *
     * Hash: 0x9A77DFD295E29B09 | Since: 1207
     */
    function toggleScenarioPedCowerInPlace(ped: number | Ped, toggle: boolean): void;
    /**
     * Despite this function's name, it simply returns whether the specified handle is a Ped.
     *
     * Hash: 0x11B499C1E0FF8559 | Since: 1207
     */
    function wasPedSkeletonUpdated(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00B380FF2DF6AB7A | Since: 1207
     */
    function _0x00B380FF2DF6AB7A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0105FEE8F9091255 | Since: 1207
     */
    function _0x0105FEE8F9091255(): any;
    /**
     * No comment provided
     *
     * Hash: 0x024EC9B649111915 | Since: 1207
     */
    function _0x024EC9B649111915(ped: number | Ped): void;
    /**
     * _SET_ST* - _SET_SW*
     *
     * Hash: 0x028E7B3BBA0BD2FC | Since: 1207
     */
    function _0x028E7B3BBA0BD2FC(ped: number | Ped): void;
    /**
     * _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
     *
     * Hash: 0x02E741E19E39628C | Since: 1207
     */
    function _0x02E741E19E39628C(ped: number | Ped): void;
    /**
     * _DOES_GROUP_* - _DOES_N*
     *
     * Hash: 0x0455546F23FF08E4 | Since: 1207
     */
    function _0x0455546F23FF08E4(groupId: number): boolean;
    /**
     * _GET_PED_D*
     *
     * Hash: 0x06A10B4D7F50B0C3 | Since: 1207
     */
    function _0x06A10B4D7F50B0C3(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x070A3841406C43D5 | Since: 1207
     */
    function _0x070A3841406C43D5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x07EA5B053FA60AC7 | Since: 1207
     */
    function _0x07EA5B053FA60AC7(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x09171A6F8FDE5DC1 | Since: 1207
     */
    function _0x09171A6F8FDE5DC1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x095C2277FED731DB | Since: 1207
     */
    function _0x095C2277FED731DB(): any;
    /**
     * No comment provided
     *
     * Hash: 0x09D7AFD3716DA8E1 | Since: 1207
     */
    function _0x09D7AFD3716DA8E1(ped: number | Ped): boolean;
    /**
     * _TOGGLE_S* - _UPDATE_*
     *
     * Hash: 0x09E378C52B1433B5 | Since: 1207
     */
    function togglePlayerPedFlinch(ped: number | Ped, pos: Vector3, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A4618FFD517E24D | Since: 1207
     */
    function _0x0A4618FFD517E24D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0ADA3EC589E1736E | Since: 1207
     */
    function _0x0ADA3EC589E1736E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B787A37EEDD226F | Since: 1311
     */
    function _0x0B787A37EEDD226F(): void;
    /**
     * _IS_PED_M*
     *
     * Hash: 0x0D3B1568917EBDA0 | Since: 1207
     */
    function _0x0D3B1568917EBDA0(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0D497AA69059FE40 | Since: 1207
     */
    function _0x0D497AA69059FE40(): void;
    /**
     * _CAN_PED_B* - _CAN_PED_I*
     *
     * Hash: 0x0EA9EACBA3B01601 | Since: 1207
     */
    function _0x0EA9EACBA3B01601(ped1: number | Ped, ped2: number | Ped): number;
    /**
     * _IS_PED_L* - _IS_PED_M*
     *
     * Hash: 0x0EEF7A81C17679DB | Since: 1207
     */
    function _0x0EEF7A81C17679DB(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F967019CC853BCC | Since: 1207
     */
    function _0x0F967019CC853BCC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FB1BA7FF73B41E1 | Since: 1207
     */
    function _0x0FB1BA7FF73B41E1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FFDF937E5C11382 | Since: 1207
     */
    function _0x0FFDF937E5C11382(): void;
    /**
     * No comment provided
     *
     * Hash: 0x101B45C5F56D970F | Since: 1207
     */
    function _0x101B45C5F56D970F(ped: number | Ped, damageCleanliness: number): boolean;
    /**
     * NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
     *
     * Hash: 0x10F96086123B939F | Since: 1207
     */
    function _0x10F96086123B939F(legendaryPed: number | Ped, preyPed: number | Ped): void;
    /**
     * _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
     *
     * Hash: 0x1148F706CF4EBDDA | Since: 1207
     */
    function _0x1148F706CF4EBDDA(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1298B3D8E4C2409F | Since: 1207
     */
    function _0x1298B3D8E4C2409F(): void;
    /**
     * _GET_IS_PED_(BLEEDING_OUT?)*
     *
     * Hash: 0x12EB4E31F092C9B3 | Since: 1207
     */
    function _0x12EB4E31F092C9B3(ped: number | Ped): boolean;
    /**
     * _SET_A* - _SET_B*
     *
     * Hash: 0x12F2D161BF4031FC | Since: 1207
     */
    function _0x12F2D161BF4031FC(ped: number | Ped): void;
    /**
     * _GET_PED_M*
     *
     * Hash: 0x134775B093AD5C38 | Since: 1207
     */
    function _0x134775B093AD5C38(ped: number | Ped): number;
    /**
     * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
     *
     * Hash: 0x154B7E841AC7412F | Since: 1207
     */
    function _0x154B7E841AC7412F(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x15F4732C357B1D6D | Since: 1207
     */
    function _0x15F4732C357B1D6D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x16802C32B2FCA06B | Since: 1207
     */
    function _0x16802C32B2FCA06B(): void;
    /**
     * _PED_COWER_M*
     *
     * Hash: 0x16F798A05BB9E3B5 | Since: 1207
     */
    function _0x16F798A05BB9E3B5(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D23D3F70606D788 | Since: 1207
     */
    function _0x1D23D3F70606D788(): void;
    /**
     * _SET_PED_CA* - _SET_PED_CO*
     *
     * Hash: 0x1D4636C90BBEFACB | Since: 1207
     */
    function _0x1D4636C90BBEFACB(ped: number | Ped): void;
    /**
     * something to do with speech lines?
     * some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
     *
     * Hash: 0x1E017404784AA6A3 | Since: 1207
     */
    function _0x1E017404784AA6A3(ped: number | Ped): boolean;
    /**
     * Only used in SP R* Scripts
     * Params: p2 = same as p2 of 0x3C529A827998F9B3
     * _SET_PED_TA* - _SET_PED_TO_*
     *
     * Hash: 0x1F44B7E283C09EDE | Since: 1207
     */
    function _0x1F44B7E283C09EDE(ped: number | Ped): void;
    /**
     * Apply cold intensity to ped from 0.0 to 1.0
     *
     * Hash: 0x1F8215D0E446F593 | Since: 1207
     */
    function applyColdToPed(ped: number | Ped, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2371C39D4F91C288 | Since: 1207
     */
    function _0x2371C39D4F91C288(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x23BDE06596A22CEC | Since: 1207
     */
    function _0x23BDE06596A22CEC(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x242EDF85D4E87B65 | Since: 1207
     */
    function _0x242EDF85D4E87B65(): any;
    /**
     * _IS_PED_FL* - _IS_PED_FU*
     *
     * Hash: 0x256EDD55C6BE1482 | Since: 1207
     */
    function _0x256EDD55C6BE1482(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x273915CE30780986 | Since: 1207
     */
    function _0x273915CE30780986(): any;
    /**
     * No comment provided
     *
     * Hash: 0x27E8A84C12B0B7D1 | Since: 1207
     */
    function _0x27E8A84C12B0B7D1(): any;
    /**
     * No comment provided
     *
     * Hash: 0x28508173C6A7CC18 | Since: 1311
     */
    function _0x28508173C6A7CC18(): void;
    /**
     * _IS_PED_L* - _IS_PED_M*
     *
     * Hash: 0x290B2E6CCDE532E1 | Since: 1207
     */
    function _0x290B2E6CCDE532E1(ped: number | Ped): boolean;
    /**
     * _SET_PED_K* or _SET_PED_L*
     *
     * Hash: 0x29924EB8EE9DB926 | Since: 1207
     */
    function _0x29924EB8EE9DB926(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x29F3539189D3E277 | Since: 1207
     */
    function _0x29F3539189D3E277(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B4CE170DE09F346 | Since: 1207
     */
    function _0x2B4CE170DE09F346(ped: number | Ped): void;
    /**
     * Used in Script Function CHECK_IS_PLAYER_SEEN
     * _GET_PED_*
     *
     * Hash: 0x2BA9D7BF629F920C | Since: 1207
     */
    function _0x2BA9D7BF629F920C(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D976DBDC731DF80 | Since: 1207
     */
    function _0x2D976DBDC731DF80(ped: number | Ped): void;
    /**
     * _IS_PED_D*
     *
     * Hash: 0x2DC0E8DCBD3546E9 | Since: 1207
     */
    function _0x2DC0E8DCBD3546E9(ped: number | Ped): boolean;
    /**
     * _IS_PED_M* - _IS_PED_O*
     *
     * Hash: 0x2DD4E0E26DFAD97D | Since: 1207
     */
    function _0x2DD4E0E26DFAD97D(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E5B5D1F1453E08E | Since: 1207
     */
    function _0x2E5B5D1F1453E08E(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FA568BFA725F8D6 | Since: 1207
     */
    function _0x2FA568BFA725F8D6(): void;
    /**
     * _GET_SHOP_ITEM_NUM_*? returns a number of ? p1 seems to be always joaat("base")
     *
     * Hash: 0x31B2E7F2E3C58B89 | Since: 1207
     */
    function _0x31B2E7F2E3C58B89(componentHash: number | string, metapedType: number, isMP: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x32417CB860A3BDC4 | Since: 1207
     */
    function _0x32417CB860A3BDC4(): any;
    /**
     * Only used in R* SP Script short_update
     * _GET_TARGET_* - _GET_TRACKED*
     *
     * Hash: 0x326F7951EF0D7F75 | Since: 1207
     */
    function _0x326F7951EF0D7F75(ped: number | Ped, eventType: number | string): any;
    /**
     * _SET_PED_P* - _SET_PED_R*
     *
     * Hash: 0x329772C47DBB2FBC | Since: 1207
     */
    function _0x329772C47DBB2FBC(ped: number | Ped): void;
    /**
     * _STOP_(?)*
     *
     * Hash: 0x32CCAD8A981B53D3 | Since: 1207
     */
    function _0x32CCAD8A981B53D3(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x32CEDA9A0AB4CEF7 | Since: 1207
     */
    function _0x32CEDA9A0AB4CEF7(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x34B5CEAC180A5D6E | Since: 1207
     */
    function _0x34B5CEAC180A5D6E(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x34C11114887150FD | Since: 1207
     */
    function _0x34C11114887150FD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x34EDDD59364AD74A | Since: 1207
     */
    function _0x34EDDD59364AD74A(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x354CA4DDDEEC397A | Since: 1207
     */
    function _0x354CA4DDDEEC397A(ped: number | Ped): number;
    /**
     * Seems to set the peds stamina to 30%
     *
     * Hash: 0x36513AFFC703C60D | Since: 1207
     */
    function resetPedStamina(ped: number | Ped): void;
    /**
     * _RESET_PED_*
     *
     * Hash: 0x370A973252741AC4 | Since: 1207
     */
    function _0x370A973252741AC4(ped: number | Ped): void;
    /**
     * _SET_PED_MO*
     *
     * Hash: 0x3A5697B80FED5EBE | Since: 1207
     */
    function _0x3A5697B80FED5EBE(ped: number | Ped): void;
    /**
     * Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
     * Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
     * Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
     * _GET_NUM_M* - _GET_PEDS_J*
     *
     * Hash: 0x3ACCE14DFA6BA8C2 | Since: 1207
     */
    function _0x3ACCE14DFA6BA8C2(ped: number | Ped, pos: Vector3, itemset: any): number;
    /**
     * _IS_PED_R*
     *
     * Hash: 0x3AEC4A410ECAF30D | Since: 1207
     */
    function _0x3AEC4A410ECAF30D(ped: number | Ped): boolean;
    /**
     * _SET_PED_TA* - _SET_PED_TO_*
     *
     * Hash: 0x3C529A827998F9B3 | Since: 1207
     */
    function _0x3C529A827998F9B3(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D9F958834AB9C30 | Since: 1207
     */
    function _0x3D9F958834AB9C30(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x3EFED081B4834BA1 | Since: 1232
     */
    function _0x3EFED081B4834BA1(): void;
    /**
     * Used for script function PROCESS_PLAYER_HAT_EVENT
     * Returns requestId to be used with 0x13E7320C762F0477
     *
     * Hash: 0x3FCBB5FCFD968698 | Since: 1207
     */
    function _0x3FCBB5FCFD968698(drawable: number | string, albedo: number | string, normal: number | string, material: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3FDBB99EFD8CE4AF | Since: 1207
     */
    function _0x3FDBB99EFD8CE4AF(): void;
    /**
     * Changes health bar around heart core icon
     * INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
     * INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
     * _SET_D*
     *
     * Hash: 0x3FDCC1F8C17E303E | Since: 1207
     */
    function _0x3FDCC1F8C17E303E(ped: number | Ped): void;
    /**
     * _SET_PED_A*
     *
     * Hash: 0x405180B14DA5A935 | Since: 1207
     */
    function _0x405180B14DA5A935(ped: number | Ped): void;
    /**
     * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
     *
     * Hash: 0x40C3524D4ED83554 | Since: 1207
     */
    function _0x40C3524D4ED83554(groupId: number): void;
    /**
     * _IS_PED_RE*
     *
     * Hash: 0x40C9155AF8BC13F3 | Since: 1207
     */
    function _0x40C9155AF8BC13F3(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x413697EC260AABBF | Since: 1207
     */
    function _0x413697EC260AABBF(): void;
    /**
     * _SET_PED_IN*
     *
     * Hash: 0x41C23A8E6B344867 | Since: 1207
     */
    function _0x41C23A8E6B344867(ped: number | Ped): void;
    /**
     * _SET_PED_IN*
     *
     * Hash: 0x45FEA6D5539BD474 | Since: 1207
     */
    function _0x45FEA6D5539BD474(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4642182A298187D0 | Since: 1207
     */
    function _0x4642182A298187D0(ped: number | Ped): number;
    /**
     * Returns vehicle (desired) speed
     * _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
     *
     * Hash: 0x46BF2A810679D6E6 | Since: 1207
     */
    function _0x46BF2A810679D6E6(ped: number | Ped, maxMoveBlendRatio: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x49DADFC4CD808B0A | Since: 1207
     */
    function _0x49DADFC4CD808B0A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B19F171450E0D4F | Since: 1207
     */
    function _0x4B19F171450E0D4F(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4E68C7EF706DF35D | Since: 1207
     */
    function _0x4E68C7EF706DF35D(ped: number | Ped, pos: Vector3, relationshipGroup: number | string): void;
    /**
     * _SET_PED_A*
     *
     * Hash: 0x4EC4EA2F72B36358 | Since: 1207
     */
    function _0x4EC4EA2F72B36358(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F27603E44A8E4C0 | Since: 1207
     */
    function _0x4F27603E44A8E4C0(ped: number | Ped): void;
    /**
     * Only used in R* Script shop_harriet
     * _SET_PED_F*
     *
     * Hash: 0x4F63433CE3C08230 | Since: 1311
     */
    function _0x4F63433CE3C08230(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5203038FF8BAE577 | Since: 1207
     */
    function _0x5203038FF8BAE577(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52250B92EA70BE3D | Since: 1207
     */
    function _0x52250B92EA70BE3D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x52A24D8A1DA89658 | Since: 1207
     */
    function _0x52A24D8A1DA89658(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x53BA7D96B9A421D9 | Since: 1207
     */
    function _0x53BA7D96B9A421D9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x54D3CD482742C482 | Since: 1355
     */
    function _0x54D3CD482742C482(animal: number | Ped): void;
    /**
     * _HAS_PED_*
     *
     * Hash: 0x550CB89DD7F4FA3D | Since: 1207
     */
    function _0x550CB89DD7F4FA3D(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x55546004A244302A | Since: 1207
     */
    function _0x55546004A244302A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x56076667E7C2DCD6 | Since: 1311
     */
    function _0x56076667E7C2DCD6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x56E4BAD93D33453C | Since: 1207
     */
    function _0x56E4BAD93D33453C(): any;
    /**
     * _IS_PED_C* - _IS_PED_D*
     *
     * Hash: 0x577C60BA06D0EA64 | Since: 1207
     */
    function _0x577C60BA06D0EA64(ped: number | Ped): boolean;
    /**
     * _SET_PED_M*
     *
     * Hash: 0x57F35552E771BE9D | Since: 1207
     */
    function _0x57F35552E771BE9D(ped: number | Ped): void;
    /**
     * seems to only work with PD_Vomit ?
     *
     * Hash: 0x58D32261AE0F0843 | Since: 1207
     */
    function applyPedDamagePackToBone(ped: number | Ped, boneId: number, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, damagePack: string): void;
    /**
     * _C*
     *
     * Hash: 0x5A1A929C8B729B4A | Since: 1207
     */
    function _0x5A1A929C8B729B4A(ped: number | Ped): void;
    /**
     * _SET_C*
     *
     * Hash: 0x5AF24CA9C974E51A | Since: 1207
     */
    function _0x5AF24CA9C974E51A(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B73975B4F12F7F3 | Since: 1207
     */
    function _0x5B73975B4F12F7F3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BB04BC74A474B47 | Since: 1207
     */
    function _0x5BB04BC74A474B47(): void;
    /**
     * _IS_PED_B* - _IS_PED_C*
     *
     * Hash: 0x5BF0B9D9A8E227A0 | Since: 1207
     */
    function _0x5BF0B9D9A8E227A0(ped: number | Ped): boolean;
    /**
     * _IS_PED_IN*
     *
     * Hash: 0x5C6C7C70CA302801 | Since: 1207
     */
    function _0x5C6C7C70CA302801(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C90E20C25E6D83C | Since: 1207
     */
    function _0x5C90E20C25E6D83C(): void;
    /**
     * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
     *
     * Hash: 0x5CA20FBE49891BBD | Since: 1207
     */
    function _0x5CA20FBE49891BBD(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CB2EBB467BE3ED6 | Since: 1355
     */
    function _0x5CB2EBB467BE3ED6(animal: number | Ped): void;
    /**
     * Related to ped hat
     * _SET_PED_LA* - _SET_PED_LE*
     *
     * Hash: 0x5D4CD22A8C82A81A | Since: 1207
     */
    function _0x5D4CD22A8C82A81A(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DA36CCCB63C0895 | Since: 1207
     */
    function _0x5DA36CCCB63C0895(): any;
    /**
     * Only used in R* SP Scripts
     * _GET_PED_IN*
     *
     * Hash: 0x5E9FAF6C513347B4 | Since: 1207
     */
    function _0x5E9FAF6C513347B4(ped: number | Ped, eventType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5EFA8A3D8A60D662 | Since: 1207
     */
    function _0x5EFA8A3D8A60D662(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5FCF25D584065BFD | Since: 1207
     */
    function _0x5FCF25D584065BFD(): void;
    /**
     * Not implemented.
     *
     * Hash: 0x600BBDD29820370C | Since: 1207
     */
    function _0x600BBDD29820370C(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x604E1010E3162E86 | Since: 1207
     */
    function _0x604E1010E3162E86(): void;
    /**
     * Not implemented.
     *
     * Hash: 0x606D529DADA3C940 | Since: 1207
     */
    function _0x606D529DADA3C940(ped: number | Ped): void;
    /**
     * Returns p1 value for 0x8E84119A23C16623,  get index outfit using GET_NUM_META_PED_OUTFITS
     *
     * Hash: 0x62FDF4E678E40CC6 | Since: 1207
     */
    function getMetapedOutfitByIndex(entity: number | Entity, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x633F83B301C87994 | Since: 1207
     */
    function _0x633F83B301C87994(): void;
    /**
     * _SET_PED_M*
     *
     * Hash: 0x642720D8D69328B6 | Since: 1207
     */
    function _0x642720D8D69328B6(ped: number | Ped): void;
    /**
     * _IS_N* - _IS_P*
     *
     * Hash: 0x6507AC3BD7C99009 | Since: 1207
     */
    function _0x6507AC3BD7C99009(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6734F0A6A52C371C | Since: 1207
     */
    function _0x6734F0A6A52C371C(player: number | string | Player, horseSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A190B94C2541A99 | Since: 1207
     */
    function _0x6A190B94C2541A99(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A489892E813951A | Since: 1207
     */
    function _0x6A489892E813951A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B67320E0D57856A | Since: 1207
     */
    function _0x6B67320E0D57856A(ped: number | Ped): void;
    /**
     * Only used in R* SP Script winter1: p1 = 5000
     * _SET_PED_M*
     *
     * Hash: 0x6DB875AFC584FA32 | Since: 1207
     */
    function _0x6DB875AFC584FA32(ped: number | Ped): any;
    /**
     * Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
     *
     * Hash: 0x6E8B87139854022D | Since: 1207
     */
    function _0x6E8B87139854022D(ped: number | Ped, clipset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F43C351A5D51E2F | Since: 1207
     */
    function getCarriedPeltSkins(mount: number | Ped, outData: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x6F46F8ACB44C4FC1 | Since: 1207
     */
    function _0x6F46F8ACB44C4FC1(): any;
    /**
     * _HAS_*
     *
     * Hash: 0x7020839C7302D8AC | Since: 1207
     */
    function _0x7020839C7302D8AC(ped: number | Ped): boolean;
    /**
     * _CLEAR*
     *
     * Hash: 0x704C908E9C405136 | Since: 1207
     */
    function _0x704C908E9C405136(ped: number | Ped): void;
    /**
     * _SET_PED_MO*
     *
     * Hash: 0x712B2C2B2471B493 | Since: 1207
     */
    function _0x712B2C2B2471B493(ped: number | Ped): void;
    /**
     * _SET_PED_F*
     *
     * Hash: 0x735662994E60A710 | Since: 1207
     */
    function _0x735662994E60A710(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7406C71F4AC2FFCC | Since: 1207
     */
    function _0x7406C71F4AC2FFCC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x758F081DB204DDDE | Since: 1207
     */
    function _0x758F081DB204DDDE(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x75A082563B4452E5 | Since: 1207
     */
    function _0x75A082563B4452E5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x75D3333409CD33CE | Since: 1207
     */
    function _0x75D3333409CD33CE(): void;
    /**
     * Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
     *
     * Hash: 0x763FA8A9D76EE3A7 | Since: 1311
     */
    function _0x763FA8A9D76EE3A7(ped: number | Ped): number;
    /**
     * _IS_I* - _IS_L*
     *
     * Hash: 0x77243ED4F7CAAA55 | Since: 1207
     */
    function _0x77243ED4F7CAAA55(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7ABBD9E449E0DB00 | Since: 1207
     */
    function _0x7ABBD9E449E0DB00(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B5C293238EE4F20 | Since: 1207
     */
    function _0x7B5C293238EE4F20(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7BB810E8B343AC7B | Since: 1207
     */
    function _0x7BB810E8B343AC7B(): any;
    /**
     * Only used in SP
     * _SET_REMOVE_PED*
     *
     * Hash: 0x7C08E7CB8D951B70 | Since: 1207
     */
    function _0x7C08E7CB8D951B70(ped: number | Ped): void;
    /**
     * _CLEAR_PED_M*
     *
     * Hash: 0x7C10221CE718AA72 | Since: 1207
     */
    function _0x7C10221CE718AA72(ped: number | Ped): void;
    /**
     * Returns wether `0x1E017404784AA6A3` was applied on the ped.
     * some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
     *
     * Hash: 0x7C8AA850617651D9 | Since: 1207
     */
    function _0x7C8AA850617651D9(ped: number | Ped): any;
    /**
     * _SET_FORMATION_P*
     *
     * Hash: 0x7E5185B979706210 | Since: 1207
     */
    function _0x7E5185B979706210(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E8F9949B7AABBF0 | Since: 1207
     */
    function _0x7E8F9949B7AABBF0(): void;
    /**
     * Only used in R* Script net_moonshine_property
     * _A* - _B*
     *
     * Hash: 0x7EDB3C766B0D073F | Since: 1232
     */
    function _0x7EDB3C766B0D073F(ped: number | Ped): void;
    /**
     * _IS_PED_H* - _IS_PED_I*
     *
     * Hash: 0x7EE3A8660F38797E | Since: 1207
     */
    function _0x7EE3A8660F38797E(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7F090958AE95B61B | Since: 1207
     */
    function _0x7F090958AE95B61B(ped: number | Ped): boolean;
    /**
     * _ATTACH_*
     *
     * Hash: 0x8101BA1C0B462412 | Since: 1207
     */
    function _0x8101BA1C0B462412(ped: number | Ped, ropeId: number): void;
    /**
     * _SET_PED_COMBAT_R - _SET_PED_C*
     *
     * Hash: 0x815C0074A1BC0D93 | Since: 1207
     */
    function _0x815C0074A1BC0D93(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x82CB0F3F0C7785E5 | Since: 1207
     */
    function _0x82CB0F3F0C7785E5(): any;
    /**
     * No comment provided
     *
     * Hash: 0x851966E1E35AF491 | Since: 1207
     */
    function _0x851966E1E35AF491(): void;
    /**
     * Used in Script Function SKCS_PLAYER_ROBBING
     * _SET_PED_A*
     *
     * Hash: 0x85F500F4E24CA43E | Since: 1207
     */
    function _0x85F500F4E24CA43E(ped: number | Ped): void;
    /**
     * _SET_PED_*
     *
     * Hash: 0x86F0B6730C32AC14 | Since: 1207
     */
    function _0x86F0B6730C32AC14(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x86FAFC18E3D4380C | Since: 1207
     */
    function _0x86FAFC18E3D4380C(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x878E8104FA27CDAE | Since: 1207
     */
    function _0x878E8104FA27CDAE(vehicle: number | Vehicle): void;
    /**
     * _CLEAR_PED_E* - _CLEAR_PED_L*
     *
     * Hash: 0x87C2724A56F66020 | Since: 1207
     */
    function _0x87C2724A56F66020(ped: number | Ped): void;
    /**
     * Only used in R* Script train_robbery4
     * _SET_PED_D*
     *
     * Hash: 0x8822F124788B8D0A | Since: 1207
     */
    function _0x8822F124788B8D0A(ped: number | Ped): void;
    /**
     * If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
     * _GET_D* - _GET_E*
     *
     * Hash: 0x8822F139408B8D0A | Since: 1207
     */
    function _0x8822F139408B8D0A(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x88A5564B19C15391 | Since: 1207
     */
    function _0x88A5564B19C15391(ped: number | Ped): boolean;
    /**
     * Used in R* Script generic_weight_control_item
     * _CLEAR_PED_E* - CLEAR_PED_(G?)L*
     *
     * Hash: 0x88A95BB640FC186F | Since: 1207
     */
    function _0x88A95BB640FC186F(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x88B2026A3B0BE33D | Since: 1207
     */
    function _0x88B2026A3B0BE33D(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x897934E868EDDD6C | Since: 1207
     */
    function _0x897934E868EDDD6C(ped: number | Ped): void;
    /**
     * _GET_PED_B* - _GET_PED_C*
     *
     * Hash: 0x89816B58C3466262 | Since: 1207
     */
    function _0x89816B58C3466262(ped: number | Ped): any;
    /**
     * _SET_PED_O*
     *
     * Hash: 0x899DFA0009AC93DE | Since: 1207
     */
    function _0x899DFA0009AC93DE(ped: number | Ped): void;
    /**
     * _SET_C*
     *
     * Hash: 0x89E59DBD15E21177 | Since: 1207
     */
    function _0x89E59DBD15E21177(groupId: number): void;
    /**
     * _SET_PED_IN*
     *
     * Hash: 0x8AF46E5159A5B620 | Since: 1207
     */
    function _0x8AF46E5159A5B620(ped: number | Ped, speechParams: number | string): void;
    /**
     * `Returns offset (0 < 32) to be used with MISC::SET_BIT`
     * _GET_PED_CR*
     *
     * Hash: 0x8AF8E647D6B2A649 | Since: 1207
     */
    function _0x8AF8E647D6B2A649(groupId: number, ped: number | Ped): number;
    /**
     * _SET_FORMATION_*
     *
     * Hash: 0x8AFCCC0F18D70018 | Since: 1207
     */
    function _0x8AFCCC0F18D70018(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BA0C65AC15A7D33 | Since: 1207
     */
    function _0x8BA0C65AC15A7D33(): void;
    /**
     * Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
     *
     * Hash: 0x8BE24D74D74C6E9B | Since: 1207
     */
    function _0x8BE24D74D74C6E9B(ped: number | Ped): number;
    /**
     * _SET_PED_T* - SET_PED_U*
     *
     * Hash: 0x8CB2553C559102C1 | Since: 1207
     */
    function _0x8CB2553C559102C1(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D9DB115FBA8E23D | Since: 1207
     */
    function _0x8D9DB115FBA8E23D(): void;
    /**
     * Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
     * _GET_PED_*
     *
     * Hash: 0x900CA00CE703E1E2 | Since: 1207
     */
    function _0x900CA00CE703E1E2(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x9078FB0557364099 | Since: 1207
     */
    function _0x9078FB0557364099(): void;
    /**
     * _IS_PED_S* - _IS_PED_U*
     *
     * Hash: 0x913D04A5176F84C9 | Since: 1207
     */
    function _0x913D04A5176F84C9(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9184788BFF1EDAD7 | Since: 1207
     */
    function _0x9184788BFF1EDAD7(): void;
    /**
     * No comment provided
     *
     * Hash: 0x91BAB9E064F036CD | Since: 1207
     */
    function _0x91BAB9E064F036CD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x92A1B55A59720395 | Since: 1207
     */
    function _0x92A1B55A59720395(): void;
    /**
     * _GET_IS_PED_*
     *
     * Hash: 0x94132D7C8D3575C4 | Since: 1207
     */
    function _0x94132D7C8D3575C4(ped: number | Ped): boolean;
    /**
     * Returns whether a ped has interacted with a player recently.
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
     *
     * Hash: 0x947E43F544B6AB34 | Since: 1207
     */
    function hasPedInteractedWithPlayerRecently(ped: number | Ped, player: number | string | Player, flag: number, ms: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9629FAF6460D35CB | Since: 1207
     */
    function _0x9629FAF6460D35CB(group: number | string): void;
    /**
     * Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
     * _SET_PED_S* - _SET_PED_TARGET_*
     *
     * Hash: 0x96595B36D6A2279B | Since: 1207
     */
    function _0x96595B36D6A2279B(animal: number | Ped, toggle: boolean): void;
    /**
     * _SET_FORMATION_P*
     *
     * Hash: 0x966DE09688A1DE39 | Since: 1207
     */
    function _0x966DE09688A1DE39(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x96C7B659854DE629 | Since: 1207
     */
    function _0x96C7B659854DE629(): void;
    /**
     * _SET_PED_D*
     *
     * Hash: 0x97A38B65EBDA3D50 | Since: 1207
     */
    function _0x97A38B65EBDA3D50(ped: number | Ped): void;
    /**
     * _CLEAR*
     *
     * Hash: 0x97B06669AC569003 | Since: 1207
     */
    function _0x97B06669AC569003(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
     *
     * Hash: 0x97C475212B327666 | Since: 1207
     */
    function _0x97C475212B327666(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9851DE7AEC10B4E1 | Since: 1207
     */
    function _0x9851DE7AEC10B4E1(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x992187D975635DF5 | Since: 1311
     */
    function _0x992187D975635DF5(): void;
    /**
     * _CAN_PED_*
     *
     * Hash: 0x99DF2639DA76C1DC | Since: 1232
     */
    function _0x99DF2639DA76C1DC(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A4AC116CC1EEE14 | Since: 1207
     */
    function _0x9A4AC116CC1EEE14(): void;
    /**
     * _SET_PED_M*
     *
     * Hash: 0x9AB33CB5834885B3 | Since: 1207
     */
    function _0x9AB33CB5834885B3(ped: number | Ped): void;
    /**
     * Only used in SP R* Script winter1: p1 = Winter1Mount
     *
     * Hash: 0x9B65444C07B782BF | Since: 1207
     */
    function _0x9B65444C07B782BF(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B90842304C938A7 | Since: 1207
     */
    function getCategoryOfComponentAtIndex(ped: number | Ped, componentIndex: number): number;
    /**
     * Used in Script Function SKCS_PLAYER_ROBBING
     * _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
     *
     * Hash: 0x9B9B9FA0EA283E3D | Since: 1207
     */
    function _0x9B9B9FA0EA283E3D(ped: number | Ped): void;
    /**
     * _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
     *
     * Hash: 0x9BBEAF8B0C007F1E | Since: 1207
     */
    function _0x9BBEAF8B0C007F1E(ped: number | Ped): void;
    /**
     * this native checks if player has shot a specific ped for the duration passed p2 is in milliseconds
     *
     * Hash: 0x9C81338B2E62CE0A | Since: 1207
     */
    function hasPedBeenShotByPlayerRecently(player: number | string | Player, ped: number | Ped, duration: number): boolean;
    /**
     * _RESET_PED_*
     *
     * Hash: 0x9D8DFE2DE9CB4DFC | Since: 1207
     */
    function _0x9D8DFE2DE9CB4DFC(ped: number | Ped): void;
    /**
     * Only used in SP R* Script loanshark_hunter
     *
     * Hash: 0x9E3842E5DAD69F80 | Since: 1207
     */
    function _0x9E3842E5DAD69F80(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9E66708B2B41F14A | Since: 1207
     */
    function _0x9E66708B2B41F14A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F0F28B42C4EE80A | Since: 1355
     */
    function _0x9F0F28B42C4EE80A(animal: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F933E0985E12C51 | Since: 1207
     */
    function _0x9F933E0985E12C51(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA064BBABB064446F | Since: 1207
     */
    function _0xA064BBABB064446F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA180FBD502A03125 | Since: 1207
     */
    function _0xA180FBD502A03125(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA1FBAC56D38563E2 | Since: 1207
     */
    function _0xA1FBAC56D38563E2(volume: number): boolean;
    /**
     * _SET_PED_*
     *
     * Hash: 0xA2116C1E4ED85C24 | Since: 1207
     */
    function _0xA2116C1E4ED85C24(ped: number | Ped, inverted: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA218D2BBCAA7388C | Since: 1207
     */
    function _0xA218D2BBCAA7388C(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA274F51EF7E34B95 | Since: 1207
     */
    function _0xA274F51EF7E34B95(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA2B8E47442C76CEC | Since: 1207
     */
    function _0xA2B8E47442C76CEC(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2F8B3B5FEDFC100 | Since: 1207
     */
    function _0xA2F8B3B5FEDFC100(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA31D350D66FA1855 | Since: 1207
     */
    function _0xA31D350D66FA1855(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA405BF9F01960C16 | Since: 1207
     */
    function _0xA405BF9F01960C16(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4AC05B1A364EBC5 | Since: 1207
     */
    function _0xA4AC05B1A364EBC5(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA4B6432E3880F2F9 | Since: 1311
     */
    function _0xA4B6432E3880F2F9(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA691C10054275290 | Since: 1207
     */
    function _0xA691C10054275290(mount: number | Ped, player: number | string | Player, dismountedTimestamp: number): void;
    /**
     * _DELETE_*
     *
     * Hash: 0xA6D6F03095C88F59 | Since: 1207
     */
    function _0xA6D6F03095C88F59(ped: number | Ped): void;
    /**
     * Washing player's face/hands now
     * _CLEAR_PED_E* - _CLEAR_PED_L*
     *
     * Hash: 0xA7A806677F8DE138 | Since: 1207
     */
    function _0xA7A806677F8DE138(ped: number | Ped): void;
    /**
     * _CLEAR_PED_B* - _CLEAR_PED_C*
     *
     * Hash: 0xA7DC9266ED6A4E51 | Since: 1207
     */
    function _0xA7DC9266ED6A4E51(ped: number | Ped): void;
    /**
     * _SET_ENABLE_B* - _SET_ENABLE_H*
     *
     * Hash: 0xA8A95CECB1906EA2 | Since: 1207
     */
    function _0xA8A95CECB1906EA2(groupId: number): void;
    /**
     * Only used in R* Script mob4 and rcm_mason4
     * _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
     *
     * Hash: 0xA90684ED185CCB4B | Since: 1207
     */
    function _0xA90684ED185CCB4B(animal: number | Ped): void;
    /**
     * _SET_PED_P* - _SET_PED_R*
     *
     * Hash: 0xA967D6A8ED2D713B | Since: 1207
     */
    function _0xA967D6A8ED2D713B(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA6C49AE90A32299 | Since: 1207
     */
    function _0xAA6C49AE90A32299(ped: number | Ped): void;
    /**
     * Related to _0x704C908E9C405136 for component loading
     * Can be used to fix missing outfit changes, always paired with _UPDATE_PED_VARIATION
     * _S*
     * Doesn't actually return anything.
     *
     * Hash: 0xAAB86462966168CE | Since: 1207
     */
    function setActiveMetaPedComponentsUpdated(ped: number | Ped, isMP: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0xAAC0EE3B4999ABB5 | Since: 1207
     */
    function _0xAAC0EE3B4999ABB5(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD3330E3C3E98007 | Since: 1207
     */
    function _0xAD3330E3C3E98007(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE6B68A83ABBE7C0 | Since: 1207
     */
    function _0xAE6B68A83ABBE7C0(): void;
    /**
     * _CLEAR_PED_D*
     *
     * Hash: 0xAF041C10756C30FB | Since: 1207
     */
    function _0xAF041C10756C30FB(ped: number | Ped): void;
    /**
     * Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
     * _SET_FORMATION_*
     *
     * Hash: 0xB05CC690CDE8A4A9 | Since: 1207
     */
    function _0xB05CC690CDE8A4A9(groupId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB06F5F1DEF417216 | Since: 1207
     */
    function _0xB06F5F1DEF417216(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB292203008EBBAAC | Since: 1207
     */
    function getMetaPedRace(ped: number | Ped): number;
    /**
     * Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
     *
     * Hash: 0xB29C553BA582D09E | Since: 1207
     */
    function _0xB29C553BA582D09E(model: number | string, damageCleanliness: number): any;
    /**
     * _RESET_PED_C*
     *
     * Hash: 0xB4B7C92FCE7347B7 | Since: 1207
     */
    function _0xB4B7C92FCE7347B7(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB65927F861E7AE39 | Since: 1207
     */
    function _0xB65927F861E7AE39(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB7DBB2986B87E230 | Since: 1207
     */
    function _0xB7DBB2986B87E230(ped: number | Ped): boolean;
    /**
     * _SET_HO*
     *
     * Hash: 0xB8AB265426CFE6DD | Since: 1207
     */
    function _0xB8AB265426CFE6DD(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8E2D655E1D5BD39 | Since: 1207
     */
    function _0xB8E2D655E1D5BD39(): any;
    /**
     * _IS_PED_J* - _IS_PED_L*
     *
     * Hash: 0xB91AB3BE7F655D49 | Since: 1207
     */
    function _0xB91AB3BE7F655D49(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB9BDFAE609DFB7C5 | Since: 1207
     */
    function _0xB9BDFAE609DFB7C5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAD2A311667A50D7 | Since: 1207
     */
    function setPedDesiresGroup(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB3E5370EBB6BE28 | Since: 1207
     */
    function _0xBB3E5370EBB6BE28(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBC1DC48270468444 | Since: 1207
     */
    function _0xBC1DC48270468444(): void;
    /**
     * _IS_PED_M* - _IS_PED_O*
     *
     * Hash: 0xBD0E4F52F6D95242 | Since: 1207
     */
    function _0xBD0E4F52F6D95242(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBF567DF2BEF211A6 | Since: 1207
     */
    function _0xBF567DF2BEF211A6(): void;
    /**
     * Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
     *
     * Hash: 0xBFA6B7731C3BAF02 | Since: 1207
     */
    function _0xBFA6B7731C3BAF02(): void;
    /**
     * _SET_PED_P* - _SET_PED_R*
     *
     * Hash: 0xC17A94CC8FC3C61A | Since: 1207
     */
    function _0xC17A94CC8FC3C61A(entity: number | Entity, boneId: number): void;
    /**
     * _FORCE_PED_*
     *
     * Hash: 0xC2722B252C79E641 | Since: 1232
     */
    function _0xC2722B252C79E641(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2EF407645BEECDC | Since: 1207
     */
    function _0xC2EF407645BEECDC(): any;
    /**
     * _GET_PED_G* - _GET_PED_I*
     *
     * Hash: 0xC3995D396F1D97B6 | Since: 1207
     */
    function _0xC3995D396F1D97B6(ped: number | Ped): boolean;
    /**
     * Set the pelt of the animal to the back of the horse
     * EXAMPLE:
     * local mount = GetMountOwnedByPlayer(PlayerId())
     * Citizen.InvokeNative(0xC412AA1C73111FE0,mount,GetHashKey('PROVISION_DEER_HIDE_POOR'),GetHashKey('a_c_deer_01_uppr_000_c0_001_ab'),0,0)
     *
     * Hash: 0xC412AA1C73111FE0 | Since: 1207
     */
    function setPeltForHorseByInventoryItem(horse: number | Ped, itemHash: number | string, albedo: number | string, normal: number | string): void;
    /**
     * _SET_PED_M*
     *
     * Hash: 0xC48AF420371C7407 | Since: 1207
     */
    function _0xC48AF420371C7407(ped: number | Ped, grapple: number | string): any;
    /**
     * memoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_PED_SET_SIMPLE_PLAYER_MEMORY
     *
     * Hash: 0xC494C76A34266E82 | Since: 1207
     */
    function pedSetSimplePlayerMemory(ped: number | Ped, memoryType: number): void;
    /**
     * Returns boneIndex
     *
     * Hash: 0xC5303F460A40D21D | Since: 1207
     */
    function getPedRagdollBoneIndex(ped: number | Ped, boneId: number): number;
    /**
     * _SET_H* - _SET_I*
     *
     * Hash: 0xC5B78E41DCF8227C | Since: 1207
     */
    function _0xC5B78E41DCF8227C(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6136B40FFFB778B | Since: 1207
     */
    function _0xC6136B40FFFB778B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6981AFF6D2A71C2 | Since: 1207
     */
    function _0xC6981AFF6D2A71C2(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6C4E15CF7D52FEA | Since: 1207
     */
    function _0xC6C4E15CF7D52FEA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9151483CC06A414 | Since: 1207
     */
    function _0xC9151483CC06A414(ped: number | Ped): void;
    /**
     * Not implemented.
     *
     * Hash: 0xC991EF46FE323867 | Since: 1207
     */
    function _0xC991EF46FE323867(ped: number | Ped): void;
    /**
     * _SET_PLAYER_N* - _SET_PLAYER_S*
     *
     * Hash: 0xC99F104BDF8C7F5A | Since: 1207
     */
    function _0xC99F104BDF8C7F5A(ped: number | Ped): void;
    /**
     * Returns vehicle speed
     * _COMPUTE_*
     *
     * Hash: 0xCA95924C893A0C91 | Since: 1207
     */
    function _0xCA95924C893A0C91(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xCA95C156C14B2054 | Since: 1207
     */
    function _0xCA95C156C14B2054(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCAC43D060099EA72 | Since: 1207
     */
    function _0xCAC43D060099EA72(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB1A3864C524F784 | Since: 1207
     */
    function _0xCB1A3864C524F784(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB86D3E3E3708901 | Since: 1207
     */
    function _0xCB86D3E3E3708901(): any;
    /**
     * Only used in R* SP Scripts
     * _GET_PLAYER_W* - _GET_RANDOM_*
     *
     * Hash: 0xCB8F4C9343EBE240 | Since: 1207
     */
    function _0xCB8F4C9343EBE240(ped: number | Ped, eventType: number | string, coords: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCBDE59C48F2B06F5 | Since: 1207
     */
    function _0xCBDE59C48F2B06F5(): void;
    /**
     * _SET_PED_R* - _SET_PED_S*
     *
     * Hash: 0xCD9E5F94A2F38683 | Since: 1207
     */
    function _0xCD9E5F94A2F38683(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDFB8C04D4C95D9B | Since: 1207
     */
    function _0xCDFB8C04D4C95D9B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE7A6C1D5CDE1F9D | Since: 1207
     */
    function _0xCE7A6C1D5CDE1F9D(ped: number | Ped, object: number | Object, propName: string, animName: string): void;
    /**
     * _SET_PED_COMBAT_*
     *
     * Hash: 0xCF0B19806473D324 | Since: 1207
     */
    function _0xCF0B19806473D324(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xD049920CD29F6CC8 | Since: 1207
     */
    function _0xD049920CD29F6CC8(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD049FDAF089FDDB0 | Since: 1207
     */
    function _0xD049FDAF089FDDB0(ped: number | Ped): void;
    /**
     * Params: p1 either a 1 or 0, so perhaps BOOL
     * _SET_PED_A*
     *
     * Hash: 0xD103F6DBB5442BE8 | Since: 1207
     */
    function _0xD103F6DBB5442BE8(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2F0FE8805D91647 | Since: 1207
     */
    function _0xD2F0FE8805D91647(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD355E2F1BB41087E | Since: 1207
     */
    function _0xD355E2F1BB41087E(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4D403EA031F351C | Since: 1207
     */
    function _0xD4D403EA031F351C(ped: number | Ped): boolean;
    /**
     * Used in Script Function LA_CHECK_ALERTED
     * _GET_IS_PED_*
     *
     * Hash: 0xD55DB4466D00A258 | Since: 1207
     */
    function _0xD55DB4466D00A258(legendaryAnimal: number | Ped): boolean;
    /**
     * _SET_FORMATION_*
     *
     * Hash: 0xD5BD1B5318A81994 | Since: 1207
     */
    function _0xD5BD1B5318A81994(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD61FCF9FCFD515B7 | Since: 1207
     */
    function _0xD61FCF9FCFD515B7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7D2F45C56A4F4DF | Since: 1207
     */
    function _0xD7D2F45C56A4F4DF(): void;
    /**
     * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
     * p1 is mostly 10
     * _CLEAR_PED_N* - _CLEAR_PED_W*
     *
     * Hash: 0xD8544F6260F5F01E | Since: 1232
     */
    function _0xD8544F6260F5F01E(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8CEEED54C672B5D | Since: 1207
     */
    function _0xD8CEEED54C672B5D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD97BC27AC039F681 | Since: 1311
     */
    function _0xD97BC27AC039F681(): any;
    /**
     * detects if ped is afloat in water like swimming or in a boat (driving or standing on it)
     *
     * Hash: 0xDC88D06719070C39 | Since: 1207
     */
    function isPedAfloat(ped: number | Ped): boolean;
    /**
     * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
     * _SET_RELATIONSHIP_*
     *
     * Hash: 0xDC91F22F09BC6C2F | Since: 1207
     */
    function _0xDC91F22F09BC6C2F(group: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD9540E7B1C9714F | Since: 1207
     */
    function _0xDD9540E7B1C9714F(ped: number | Ped, r: number, g: number, b: number): void;
    /**
     * _SET_FORMATION_P*
     *
     * Hash: 0xDDFAD4DEAA7FA362 | Since: 1207
     */
    function _0xDDFAD4DEAA7FA362(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEDBED3020DA49DC | Since: 1207
     */
    function _0xDEDBED3020DA49DC(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEE8D30AA5C2E28D | Since: 1207
     */
    function _0xDEE8D30AA5C2E28D(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0FE107AB174D64A | Since: 1207
     */
    function _0xE0FE107AB174D64A(): void;
    /**
     * _SET_FORMATION_P*
     *
     * Hash: 0xE1103300F3456DE7 | Since: 1207
     */
    function _0xE1103300F3456DE7(groupId: number): void;
    /**
     * _C*
     *
     * Hash: 0xE1AADD0055D76603 | Since: 1207
     */
    function _0xE1AADD0055D76603(ped: number | Ped, entity: number | Entity, boneIndex1: number, boneIndex2: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1B3BE07D3AADDED | Since: 1207
     */
    function _0xE1B3BE07D3AADDED(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE20027B414BFE6C7 | Since: 1207
     */
    function _0xE20027B414BFE6C7(): void;
    /**
     * _SET_PED_R* -_SET_PED_S*
     *
     * Hash: 0xE29D8CD66553DBAA | Since: 1207
     */
    function _0xE29D8CD66553DBAA(horse: number | Ped): void;
    /**
     * _SET_PED_IN*
     *
     * Hash: 0xE37ACEE15AC50C7E | Since: 1207
     */
    function _0xE37ACEE15AC50C7E(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4C95E0AE31C6512 | Since: 1207
     */
    function _0xE4C95E0AE31C6512(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4EF4382E22C780C | Since: 1207
     */
    function _0xE4EF4382E22C780C(): void;
    /**
     * _SET_D*
     *
     * Hash: 0xE50C9816B3F22D8B | Since: 1311
     */
    function _0xE50C9816B3F22D8B(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6CB36F43A95D75F | Since: 1207
     */
    function _0xE6CB36F43A95D75F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE735A7DA22E88359 | Since: 1207
     */
    function _0xE735A7DA22E88359(): void;
    /**
     * Only used in R* Script nb_animal_attack: p2 = 120000
     * _SET_PED_SH* - _SET_PED_SP*
     *
     * Hash: 0xE737D5F14304A2EC | Since: 1207
     */
    function _0xE737D5F14304A2EC(ped: number | Ped, player: number | string | Player): void;
    /**
     * Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
     * Params: p1 = 0
     * _GET_PED_IN*
     *
     * Hash: 0xE76687023D8C8505 | Since: 1207
     */
    function _0xE76687023D8C8505(perscharModel: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE8ABE3B73FC7FE17 | Since: 1207
     */
    function _0xE8ABE3B73FC7FE17(): void;
    /**
     * Returns dismounted timestamp
     *
     * Hash: 0xE8D1CCB9375C101B | Since: 1207
     */
    function getPlayerDismountTimestamp(mount: number | Ped, player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xE9E06EA514A69061 | Since: 1207
     */
    function _0xE9E06EA514A69061(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA8763E505AFD49A | Since: 1207
     */
    function _0xEA8763E505AFD49A(): void;
    /**
     * Washing player's face/hands now
     * _FA* - _FI*
     *
     * Hash: 0xEB8886E1065654CD | Since: 1207
     */
    function _0xEB8886E1065654CD(ped: number | Ped): void;
    /**
     * If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
     * If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
     * _IS_PED_T* - _IS_PED_U*
     *
     * Hash: 0xEBAAC9A750E7563B | Since: 1207
     */
    function _0xEBAAC9A750E7563B(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEBD49472BCCF7642 | Since: 1207
     */
    function _0xEBD49472BCCF7642(): void;
    /**
     * _SET_C*
     *
     * Hash: 0xEC60D1D225BC50AA | Since: 1207
     */
    function _0xEC60D1D225BC50AA(ped: number | Ped): void;
    /**
     * Only used in R* Script nb_stalking_hunter
     *
     * Hash: 0xED1C764997A86D5A | Since: 1207
     */
    function _0xED1C764997A86D5A(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEDC9B29314B2733 | Since: 1207
     */
    function _0xEEDC9B29314B2733(): void;
    /**
     * _ADD_*
     *
     * Hash: 0xEF371232BC6053E1 | Since: 1207
     */
    function _0xEF371232BC6053E1(ped: number | Ped): void;
    /**
     * Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
     *
     * Hash: 0xF47D54B986F0A346 | Since: 1232
     */
    function _0xF47D54B986F0A346(ped: number | Ped, danceIntensity: number): void;
    /**
     * Only used in SP Scripts
     * Returns count / index
     * _C*
     *
     * Hash: 0xF4860514AD354226 | Since: 1207
     */
    function _0xF4860514AD354226(shockingEvent: number, pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xF634E2892220EF34 | Since: 1207
     */
    function _0xF634E2892220EF34(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6A8C4B4A11AE89C | Since: 1207
     */
    function _0xF6A8C4B4A11AE89C(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF7327ACC7A89AEF1 | Since: 1207
     */
    function _0xF7327ACC7A89AEF1(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF917F92BF22ECBAB | Since: 1207
     */
    function _0xF917F92BF22ECBAB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9331B3A314EB49D | Since: 1207
     */
    function _0xF9331B3A314EB49D(ped: number | Ped): boolean;
    /**
     * Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
     *
     * Hash: 0xF9CBD46433E36713 | Since: 1207
     */
    function _0xF9CBD46433E36713(ped: number | Ped, targetEntity: number | Entity): void;
    /**
     * only works when you use SET_PED_WETNESS_HEIGHT first , if you do 0.0 (it resets) you need to apply again with SET_PED_WETNESS_HEIGHT to see the wetness effects again
     *
     * Hash: 0xF9CFF5BB70E8A2CB | Since: 1207
     */
    function setPedWetness(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA0D206B489A6846 | Since: 1207
     */
    function _0xFA0D206B489A6846(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA742B82D093D848 | Since: 1207
     */
    function _0xFA742B82D093D848(): void;
    /**
     * _HAS_PED_*
     *
     * Hash: 0xFA8C10DCE0706D43 | Since: 1207
     */
    function _0xFA8C10DCE0706D43(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC23348F0F4E245F | Since: 1207
     */
    function _0xFC23348F0F4E245F(): void;
    /**
     * returns the number of reserved stamina similar to _GET_NUM_RESERVED_HEALTH
     *
     * Hash: 0xFC3B580C4380B5B7 | Since: 1207
     */
    function getNumReservedStamina(ped: number | Ped): number;
    /**
     * _DISABLE_A* - _DISABLE_C*
     *
     * Hash: 0xFD3C31A2E45671E7 | Since: 1207
     */
    function _0xFD3C31A2E45671E7(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD8E853F0BC2E942 | Since: 1207
     */
    function _0xFD8E853F0BC2E942(): void;
    /**
     * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
     * _SET_M* - _SET_P*
     *
     * Hash: 0xFEA6126C34DF2532 | Since: 1207
     */
    function _0xFEA6126C34DF2532(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFA1594703ED27CA | Since: 1207
     */
    function _0xFFA1594703ED27CA(ped: number | Ped): void;
    /**
     * _GET_PED_COMBAT_M* - _GET_PED_C*
     *
     * Hash: 0xFFDE295662405B25 | Since: 1207
     */
    function _0xFFDE295662405B25(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xE9B168527B337BF0 | Since: 1207
     */
    function addPedStayOutVolume(ped: number | Ped, volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE37287EE358939C3 | Since: 1311
     */
    function addPedSubscribeToLegendaryBlips(ped: number | Ped): boolean;
    /**
     * flag: see ADD_SCENARIO_BLOCKING_AREA
     *
     * Hash: 0x4C39C95AE5DB1329 | Since: 1207
     */
    function addScenarioBlockingVolume(volume: number, flag: number): any;
    /**
     * Forces transition now, called together with 0xD65FDC686A031C83
     *
     * Hash: 0x6D07B371E9439019 | Since: 1207
     */
    function addScenarioTransition(ped: number | Ped): void;
    /**
     * Creates ped overlay in texture override data and returns it's index.
     * This index are used for further overlay editing.
     *
     * albedoHash: a hash of overlay's albedo texture
     * colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
     *
     * Hash: 0x86BB5FF45F193A02 | Since: 1207
     */
    function addTextureLayer(textureId: number, albedoHash: number | string, normalHash: number | string, materialHash: number | string, blendType: number, texAlpha: number, sheetGridIndex: number): number;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
     *
     * Hash: 0x74F512E29CB717E2 | Since: 1207
     */
    function applyPedMetaPedOutfit(requestId: number, ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD3A7B003ED343FD9 | Since: 1207
     */
    function applyShopItemToPed(ped: number | Ped, componentHash: number | string, immediately: boolean, isMp: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B46E25761519058 | Since: 1207
     */
    function applyTextureOnPed(ped: number | Ped, componentHash: number | string, textureId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E420FF293EE5472 | Since: 1207
     */
    function areAllAmbientPedReservationsReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7C00CFC48A782DC0 | Since: 1207
     */
    function attachVolumeToEntity(volume: number, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3): void;
    /**
     * p2 is always 0, p3 is always 0, p4 is always 1
     *
     * Hash: 0xAB643407D0B26F07 | Since: 1207
     */
    function canPedUseScenarioPoint(ped: number | Ped, scenario: number): boolean;
    /**
     * Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
     *
     * Hash: 0xC3D4B754C0E86B9E | Since: 1207
     */
    function changePedStamina(ped: number | Ped, amount: number): boolean;
    /**
     * Used in Script Functions PLAYER_HORSE_RELEASE_HORSE_TO_AMBIENT_WORLD (p1 = true), HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = false)
     * Set to false for player horse in scripts and seems it's only true when releasing/changing a player horse? Cannot determine what effect it has, but it doesn't seem to affect _GET_HORSE_TAMING_STATE
     *
     * Hash: 0xBCC76708E5677E1D | Since: 1207
     */
    function clearActiveAnimalOwner(horse: number | Ped, clear: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x949B2F9ED2917F5D | Since: 1207
     */
    function clearPedActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F5D88333EE8A86F | Since: 1207
     */
    function clearPedBloodDamageFacial(ped: number | Ped): void;
    /**
     * Params: p1 = 1 in R* Scripts
     *
     * Hash: 0x78815FC52832B690 | Since: 1207
     */
    function clearPedCombatStyle(ped: number | Ped): void;
    /**
     * _CLEAR_PED_COMBAT_*
     *
     * Hash: 0x1FA132CBCD7CB239 | Since: 1207
     */
    function clearPedCombatStyleMod(ped: number | Ped, combatStyleModHash: number | string): void;
    /**
     * Clears locomotion archetype
     *
     * Hash: 0x4FD80C3DD84B817B | Since: 1207
     */
    function clearPedDesiredLocoForModel(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x58F7DB5BD8FA2288 | Since: 1207
     */
    function clearPedDesiredLocoMotionType(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAE3B5B019C8D23F | Since: 1207
     */
    function clearPedGrappleFlag(ped: number | Ped, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBF6D1D07C02D00A | Since: 1207
     */
    function clearPedTargetActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
    /**
     * Removes every texture layer
     * Old Name: _RESET_PED_TEXTURE_2
     *
     * Hash: 0xB63B9178D0F58D82 | Since: 1207
     */
    function clearPedTexture(textureId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x627F7F3A0C4C51FF | Since: 1207
     */
    function clearPeltFromHorse(horse: number | Ped, peltId: number): void;
    /**
     * Related to dead animals items/loots
     * Notice: skinningQuality is partially calculated using pedQuality
     *
     * Hash: 0x6B89FAA36FC909A3 | Since: 1207
     */
    function computeSatchelItemForPedCarcass(outInventoryItemArray: any, ped: number | Ped, damageCleanliness: number, skinningQuality: number): number;
    /**
     * Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
     * Can be useful to "point" player at some specific position.
     * Only works while on-foot.
     *
     * _CREATE_[P-Z]
     *
     * Hash: 0x4F5EBE70081E5A20 | Since: 1207
     */
    function createGravityWell(pos: Vector3, heading: number, radius: number, stopAtDestination: boolean): number;
    /**
     * Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
     *
     * Hash: 0x0BCD4091C8EABA42 | Since: 1207
     */
    function createMetaPed(requestId: number, pos: Vector3, heading: number): number;
    /**
     * Creates prop from metaped asset bundle
     * https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
     * Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
     *
     * Hash: 0x9641A9A20310F6B8 | Since: 1207
     */
    function createMetaPedAsset(asset: number | string, pos: Vector3, rot: Vector3): number;
    /**
     * Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
     *
     * Hash: 0xEAF682A14F8E5F53 | Since: 1207
     */
    function createMetaPedOutfitPed(requestId: number, pos: Vector3, heading: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x19C975B81BE53C28 | Since: 1207
     */
    function detachVolumeFromEntity(volume: number, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1965A380342BE1F | Since: 1355
     */
    function disableAllLookAtRequests(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x80038740C96AD17F | Since: 1207
     */
    function disableAmbientLookAtRequests(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0E880B7A441164D | Since: 1207
     */
    function doesMetaPedOutfitExistForPedModel(outfit: number | string, model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4FF3C2B4E6A196C1 | Since: 1207
     */
    function doesMetaPedSuboutfitExistForPedModel(outfit: number | string, suboutfit: number | string, model: number | string): boolean;
    /**
     * Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
     *
     * Body Types:
     * MPCREATOR_NEUTRAL
     * MPCREATOR_SKINNY
     * MPCREATOR_SKINNY_MUSCULAR
     * MPCREATOR_HEAVY
     * MPCREATOR_HEAVY_MUSCULAR
     *
     * eBodyWeightOutfit (pedattributes.ymt):
     * -2045421226 (smallest)
     * -1745814259
     * -325933489
     * -1065791927
     * -844699484
     * -1273449080
     * 927185840
     * 149872391
     * 399015098
     * -644349862
     * 1745919061 (default)
     * 1004225511
     * 1278600348
     * 502499352
     * -2093198664
     * -1837436619
     * 1736416063
     * 2040610690
     * -1173634986
     * -867801909
     * 1960266524 (biggest)
     *
     * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
     *
     * Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
     *
     * Hash: 0x1902C4CFCC5BE57C | Since: 1207
     */
    function equipMetaPedOutfit(ped: number | Ped, hash: number | string): void;
    /**
     * Changes Multiplayer ped face and body type components, they can be stacked
     * Params: p3 = 1
     * Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
     * Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
     * Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
     *
     * Hash: 0xA5BAE410B03E7371 | Since: 1207
     */
    function equipMetaPedOutfitExtra(ped: number | Ped, component: number): void;
    /**
     * Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
     * If p2 is true as player, then certain components like facial hair and hair will not be removed.
     * Old name: _SET_PED_OUTFIT_PRESET
     *
     * Hash: 0x77FF8D35EEC6BBC4 | Since: 1207
     */
    function equipMetaPedOutfitPreset(ped: number | Ped, presetId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x66FF395445A88A6E | Since: 1207
     */
    function equipMetaPedSuboutfit(ped: number | Ped, suboutfit: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B3CB08158E98481 | Since: 1207
     */
    function fakeSetPedLocoInjured(ped: number | Ped, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CE875505D45338A | Since: 1207
     */
    function forcePedDeath(ped: number | Ped, pedKiller: number | Ped, weapon: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC9273D95976BA22 | Since: 1207
     */
    function getAccuracyAgainstLocalPlayerModifier(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF103823FFE72BB49 | Since: 1207
     */
    function getActiveAnimalOwner(animal: number | Ped): number;
    /**
     * Returns kneeling, sitting, squating, and sleeping scenario hashes
     *
     * Hash: 0x569F1E1237508DEB | Since: 1207
     */
    function getActiveDynamicScenario(ped: number | Ped): number;
    /**
     * Returns kneeling, sitting, squating, and sleeping scenario hashes
     *
     * Hash: 0xC22AA08A8ADB87D4 | Since: 1207
     */
    function getActiveDynamicScenario2(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x268B3AEBF032A88D | Since: 1207
     */
    function getBlockingOfNonTemporaryEvents(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x79443D56C8DF45EE | Since: 1207
     */
    function getCarrierAsHuman(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xA033D7E4BBF9844D | Since: 1207
     */
    function getCarrierAsMount(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x09B83E68DE004CD4 | Since: 1207
     */
    function getCarrierAsPed(entity: number | Entity): number;
    /**
     * Gets MetaPedExpression at index specified
     *
     * For index, see: _SET_CHAR_EXPRESSION
     *
     * Old name: _GET_PED_FACE_FEATURE
     *
     * Hash: 0xFD1BA1EEF7985BB8 | Since: 1207
     */
    function getCharExpression(ped: number | Ped, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x3CC4A718C258BDD0 | Since: 1207
     */
    function getDefaultRelationshipGroupHash(modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD806CD2A4F2C2996 | Since: 1207
     */
    function getFirstEntityPedIsCarrying(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x13A1B061007C906B | Since: 1207
     */
    function getGroupFormation(groupId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x95B8E397B8F4360F | Since: 1207
     */
    function getHealthRechargeMultiplier(ped: number | Ped): number;
    /**
     * Returns an int based on enum eTamingState
     *
     * enum eTamingState
     * {
     * ATS_INVALID = 0,
     * ATS_INACTIVE,
     * ATS_TARGET_DETECTED,
     * ATS_CALLED_OUT,
     * ATS_MOUNTABLE,
     * ATS_BEING_PATTED,
     * ATS_BREAKING_ACTIVE,
     * ATS_SPOOKED,
     * ATS_RETREATING,
     * ATS_FLEEING
     * };
     *
     * Hash: 0x454AD4DA6C41B5BD | Since: 1207
     */
    function getHorseTamingState(horse: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x88D9D76D78065487 | Since: 1207
     */
    function getIncapacitationTimeRemaining(ped: number | Ped): number;
    /**
     * If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
     * _GET_IS_PED_[M-R]*
     *
     * Hash: 0xE33F98BD76490ABC | Since: 1207
     */
    function getIsPedBeingRobbed(ped: number | Ped, player: number | string | Player, trueUntilPlayerPocketsItem: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x68821369A2CEADD5 | Since: 1207
     */
    function getIsPedCommandHashPresent(ped: number | Ped, commandHash: number | string): boolean;
    /**
     * Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
     *
     * Hash: 0x331550B212014B92 | Since: 1207
     */
    function getIsPedInDisputeWithPed(ped: number | Ped, pedInDisputeWith: number | Ped): boolean;
    /**
     * motivationState: see _SET_PED_MOTIVATION
     *
     * Hash: 0x33FA048675821DA7 | Since: 1207
     */
    function getIsPedMotivationStateEnabled(ped: number | Ped, motivationState: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C31C51168E80365 | Since: 1207
     */
    function getLassoedLassoer(ped: number | Ped): number;
    /**
     * _IS_PED_S* - _IS_PED_U*
     *
     * Hash: 0x833F0053340EF413 | Since: 1207
     */
    function getLassoerOfPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xB65A4DAB460A19BD | Since: 1207
     */
    function getLassoTarget(ped: number | Ped): number;
    /**
     * Returns last horse the ped was leading
     *
     * Hash: 0x693126B5D0457D0D | Since: 1232
     */
    function getLastLedMount(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4C8B59171957BCF7 | Since: 1207
     */
    function getLastMount(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x5064DB5083C29921 | Since: 1207
     */
    function getLastVehicleDraftHorseWasAttachedTo(horse: number | Ped): number;
    /**
     * lootFlag: see SET_LOOTING_FLAG
     *
     * Hash: 0xE4C11F104620DDCE | Since: 1207
     */
    function getLootingFlag(ped: number | Ped, lootFlag: number): boolean;
    /**
     * enum eMetaPedType
     * {
     * MPT_MALE,
     * MPT_FEMALE,
     * MPT_TEEN,
     * MPT_ANIMAL,
     * MPT_NONE
     * };
     *
     * Hash: 0xEC9A1261BF0CE510 | Since: 1207
     */
    function getMetaPedType(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x90403E8107B60E81 | Since: 1207
     */
    function getNumComponentsInPed(ped: number | Ped): number;
    /**
     * Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
     *
     * Hash: 0xA622E66EEE92A08D | Since: 1207
     */
    function getNumComponentCategoriesInPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x313778EDCA9158E2 | Since: 1207
     */
    function getNumFreeSlotsInPedPool(): number;
    /**
     * No comment provided
     *
     * Hash: 0x62DE46F061CAA468 | Since: 1207
     */
    function getNumReservedAmbientPedsDesired(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5C16855277819BBF | Since: 1207
     */
    function getNumReservedAmbientPedsReady(): number;
    /**
     * No comment provided
     *
     * Hash: 0x16F2C8C084AB2092 | Since: 1207
     */
    function getNumReservedHealth(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x7BE607DAFF382FD2 | Since: 1207
     */
    function getPedsInCombatWithTarget(ped: number | Ped, itemset: any, flag: number): number;
    /**
     * AI_ATTITUDE_NEUTRAL = 0,
     * AI_ATTITUDE_FRIENDLY,
     * AI_ATTITUDE_WARY,
     * AI_ATTITUDE_COMBATIVE,
     * AI_ATTITUDE_NEVER_MET
     *
     * Hash: 0x7CC2186C32D3540A | Since: 1207
     */
    function getPedAttitude(ped: number | Ped, player: number | string | Player): number;
    /**
     * Can be used to get a peds foliage active status: variableName = FoliageActive
     *
     * Hash: 0x498F2E77982D6945 | Since: 1207
     */
    function getPedBlackboardBool(ped: number | Ped, variableName: string): boolean;
    /**
     * Can be used to get a peds foliage raw height: variableName = FoliageHeight
     *
     * Hash: 0x56E58D4D118FB45E | Since: 1207
     */
    function getPedBlackboardFloat(ped: number | Ped, variableName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xBF5E791BBBF90A3C | Since: 1207
     */
    function getPedBlackboardHash(ped: number | Ped, variableName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xEC6B59BE445FEC51 | Since: 1207
     */
    function getPedBrawlingStyle(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A4E00364B5D727B | Since: 1207
     */
    function getPedCanBeIncapacitatedThisFrame(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCC2B20596E29E4E3 | Since: 1207
     */
    function getPedCombatAttribute(ped: number | Ped, attributeIndex: number): boolean;
    /**
     * Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
     *
     * Hash: 0xCCB97B51893C662F | Since: 1207
     */
    function getPedComponentCategoryByIndex(ped: number | Ped, index: number): number;
    /**
     * Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
     *
     * Hash: 0x6CFC373008A1EDAF | Since: 1207
     */
    function getPedDamaged(ped: number | Ped): boolean;
    /**
     * enum ePedDamageCleanliness
     * {
     * PED_DAMAGE_CLEANLINESS_POOR,
     * PED_DAMAGE_CLEANLINESS_GOOD,
     * PED_DAMAGE_CLEANLINESS_PERFECT
     * };
     *
     * Hash: 0x88EFFED5FE8B0B4A | Since: 1207
     */
    function getPedDamageCleanliness(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xEF2E6F870783369B | Since: 1207
     */
    function getPedDefensiveVolume(ped: number | Ped): number;
    /**
     * Returns ped drunk level
     * _H* or _I*
     *
     * Hash: 0x6FB76442469ABD68 | Since: 1207
     */
    function getPedDrunkness(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xD0B7AEB56229D317 | Since: 1207
     */
    function getPedGrappler(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF3C873ED0C595109 | Since: 1207
     */
    function getPedGrappleFlag(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x753B15AD0FD6F3E3 | Since: 1207
     */
    function getPedGrappleStyle(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1D491CCF7211FB74 | Since: 1207
     */
    function getPedHeight(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x31167ED4324B758D | Since: 1207
     */
    function getPedIdRange(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x89BFDF6D53145545 | Since: 1207
     */
    function getPedIncapacitationHealth(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xD7AD3C7EBAF88C92 | Since: 1207
     */
    function getPedInteractionPersonality(ped: number | Ped): number;
    /**
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
     *
     * Hash: 0x2C76FA0E01681F8D | Since: 1207
     */
    function getPedLassoHogtieFlag(ped: number | Ped, flagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F714E7A9DADFC42 | Since: 1207
     */
    function getPedLastDroppedHat(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1B710E6F4AB69341 | Since: 1355
     */
    function getPedLodMultiplier(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xCB42AFE2B613EE55 | Since: 1207
     */
    function getPedMaxStamina(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6127F25ED21C533C | Since: 1207
     */
    function getPedMeleeActionPhase(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x30569F348D126A5A | Since: 1207
     */
    function getPedMetaOutfitHash(ped: number | Ped): number;
    /**
     * PS_SMALL = 0,
     * PS_MEDIUM,
     * PS_MEDIUM_LARGE,
     * PS_LARGE,
     * PS_EXTRA_LARGE
     *
     * Hash: 0xA65AA1ACE81E5A77 | Since: 1311
     */
    function getPedModelSizeFromHash(modelHash: number | string): number;
    /**
     * If targetPed is set to 0 the ped motivationState affects everyone
     *
     * Hash: 0x42688E94E96FD9B4 | Since: 1207
     */
    function getPedMotivation(ped: number | Ped, motivationState: number, targetPed: number | Ped): number;
    /**
     * Returns Ped Quality to be used to calculate Skinning Quality
     *
     * enum ePedQuality
     * {
     * PQ_INVALID = -1,
     * PQ_LOW,
     * PQ_MEDIUM,
     * PQ_HIGH,
     * PQ_MAX
     * };
     *
     * Hash: 0x7BCC6087D130312A | Since: 1207
     */
    function getPedQuality(ped: number | Ped): number;
    /**
     * Gets a registered/attached prop entity for a particular ped. Second parameter will detach the prop entity from the ped if true. Props primarily appear to come from scenarios, such as a broom or hay bale.
     *
     * Known props: https://pastebin.com/ap2NEJqB
     *
     * Hash: 0x4D0D2E3D8BC000EB | Since: 1207
     */
    function getPedRegisterProp(ped: number | Ped, propName: string, detachProp: boolean): number;
    /**
     * normalized / non normalized
     * 0.0        / 1000.0         STARTED IN WRITHE STAGE
     * 1.0        / 0.0            END OF WRITHE, DEAD
     * -1.0                        DEAD
     *
     * Returns some value from AI task 562 (unknown).
     *
     * Hash: 0xEBE89623EB861271 | Since: 1207
     */
    function getPedRemainingRevivalTime(ped: number | Ped, normalized: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x775A1CA7893AA8B5 | Since: 1207
     */
    function getPedStamina(ped: number | Ped): number;
    /**
     * Returns stamina normalizedValue / normalizedUnlockedMax
     *
     * Hash: 0x22F2A386D43048A9 | Since: 1207
     */
    function getPedStaminaNormalized(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x65C75FDCCAC86464 | Since: 1355
     */
    function getPedTranquilizer(ped: number | Ped): number;
    /**
     * Returns peltId
     *
     * Hash: 0x0CEEB6F4780B1F2F | Since: 1207
     */
    function getPeltFromHorse(horse: number | Ped, index: number): number;
    /**
     * Returns animal skin quality modifier
     *
     * Hash: 0xEE2D5C819A65BF26 | Since: 1311
     */
    function getPlayerCurrentAnimalDamageModifier(player: number | string | Player): number;
    /**
     * Returns how deep the water is below the ped (if in water)
     * -1.0f = Not in water
     * 10.0f = Max water depth
     *
     * Hash: 0x2942457417A5FD24 | Since: 1207
     */
    function getPlayerPedWaterDepth(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xB676EFDA03DADA52 | Since: 1207
     */
    function getRiderOfMount(mount: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x63342C50EC115CE8 | Since: 1207
     */
    function getShopItemBaseLayers(shopItem: number | string, ped: number | Ped, metapedType: number, drawable: number | string, albedo: number | string, normal: number | string, material: number | string): boolean;
    /**
     * Returns the current shop item component at index and it's wearable state
     *
     * Hash: 0x77BA37622E22023B | Since: 1207
     */
    function getShopItemComponentAtIndex(ped: number | Ped, index: number, argStruct: any, wearableState: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5FF9A878C3D115B8 | Since: 1207
     */
    function getShopItemComponentCategory(componentHash: number | string, metapedType: number, isMP: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x7E02E4218D916B94 | Since: 1207
     */
    function getShopItemHatComponent(ped: number | Ped, metapedType: number): any;
    /**
     * Returns the number of wearable states available for a shop item / component. p2 seems to be true in scripts.
     *
     * For use with 0x6243635AF2F1B826 (_GET_SHOP_ITEM_AVAILABLE_WEARABLE_STATE_BY_INDEX)
     *
     * Hash: 0xFFCC2DB2D9953401 | Since: 1207
     */
    function getShopItemNumWearableStates(componentHash: number | string, isMpFemale: boolean): number;
    /**
     * Gets an available wearable state by index for a shop item / component - it does not retreive what the current state is. p3 seems to be true in scripts.
     *
     * Use 0xFFCC2DB2D9953401 (_GET_SHOP_ITEM_NUM_WEARABLE_STATES) to get the number of available wearable states
     *
     * Hash: 0x6243635AF2F1B826 | Since: 1207
     */
    function getShopItemWearableStateByIndex(componentHash: number | string, wearableStateIndex: number, isMpFemale: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x825F6DD559A0895B | Since: 1207
     */
    function getStaminaDepletionMultiplier(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xE7687EB2F634ABF0 | Since: 1207
     */
    function getStaminaRechargeMultiplier(ped: number | Ped): number;
    /**
     * _GET_WA*
     *
     * Hash: 0x92C8EACA29F6BED6 | Since: 1207
     */
    function getTotalPedDamageFromAi(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x849BD6C6314793D0 | Since: 1207
     */
    function getTransportPedIsSeatedOn(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xE4770DA1B8FF4FD1 | Since: 1207
     */
    function getVehicleDraftHorseIsAttachedTo(horse: number | Ped): number;
    /**
     * Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
     * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
     *
     * Hash: 0xD65FDC686A031C83 | Since: 1207
     */
    function givePedHashCommand(ped: number | Ped, commandHash: number | string, activationDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3BBDD6143FF16F98 | Since: 1207
     */
    function givePedScenarioProp(ped: number | Ped, object: number | Object, conditionalAnim: string): boolean;
    /**
     * Only used in SP R* Script rcm_jack2
     *
     * Hash: 0xA0774E388CE4A679 | Since: 1207
     */
    function givePedScenarioPropDynamic(ped: number | Ped, object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB0B2C6D170B0E8E5 | Since: 1207
     */
    function hasMetaPedAssetLoaded(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x610438375E5D1801 | Since: 1207
     */
    function hasMetaPedOutfitLoaded(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC0940AC858C1E126 | Since: 1207
     */
    function hasMetaPedRequestLoaded(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x29FCE825613FEFCA | Since: 1207
     */
    function hasPedBeenShovedRecently(ped: number | Ped, ms: number): boolean;
    /**
     * See _REQUEST_PED_EMOTIONAL_PRESET
     *
     * Hash: 0xDE3904B22695D9F9 | Since: 1207
     */
    function hasPedEmotionalPresetLoaded(ped: number | Ped, name: string): boolean;
    /**
     * limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
     *
     * Hash: 0xBA208A8D6399A3AC | Since: 1207
     */
    function hasPedTakenGoreDamage(ped: number | Ped, limb: number): boolean;
    /**
     * _H* - _I*
     *
     * Hash: 0xBAE08F00021BFFB2 | Since: 1207
     */
    function horseAgitate(mount: number | Ped, kickOffRider: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6262491C7704A63 | Since: 1207
     */
    function incapacitatedRevive(ped: number | Ped, ped2: number | Ped): void;
    /**
     * Returns true only if it's a player ped and an animal as well.
     * _IS_ANY_* - _IS_CONTROL_*
     *
     * Hash: 0x0E2F43516F998269 | Since: 1311
     */
    function isAnimalControlledByAPlayer(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7FC84E85D98F063D | Since: 1207
     */
    function isAnimalInteractionRunning(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x93FFD92F05EC32FD | Since: 1207
     */
    function isMetaPedAssetValid(requestId: number): boolean;
    /**
     * Returns true if given ped is a fish.
     * _IS_ME* - _IS_MO*
     *
     * Hash: 0x118D476A6F1A13F1 | Since: 1207
     */
    function isMetaPedFish(ped: number | Ped): boolean;
    /**
     * Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
     *
     * Hash: 0x98082246107A6ACF | Since: 1207
     */
    function isMetaPedOutfitEquipped(ped: number | Ped, outfit: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB25E57FC8E37114D | Since: 1207
     */
    function isMetaPedOutfitRequestValid(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x43E4DA469541A9C9 | Since: 1207
     */
    function isMetaPedRequestValid(requestId: number): boolean;
    /**
     * checks if a ped is using a component category
     * see component category hashes here https://raw.githubusercontent.com/femga/rdr3_discoveries/refs/heads/master/clothes/cloth_hash_names.lua
     * Old name: _IS_META_PED_USING_COMPONENT
     *
     * Hash: 0xFB4891BD7578CDC1 | Since: 1207
     */
    function isMetaPedUsingComponentCategory(ped: number | Ped, componentCategory: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAAB0FE202E9FC9F0 | Since: 1207
     */
    function isMountSeatFree(mount: number | Ped, seat: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB346C85D49CC998E | Since: 1207
     */
    function isPedActionDisableFlagEnabled(ped: number | Ped, actionDisableFlag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x137772000DAF42C5 | Since: 1207
     */
    function isPedChild(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59643424B68D52B5 | Since: 1207
     */
    function isPedClimbingLadder(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB086C8C0F5701D14 | Since: 1207
     */
    function isPedCowering(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC488B8C0E52560D8 | Since: 1207
     */
    function isPedDoingScenarioTransition(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x226CF9B159E38F42 | Since: 1207
     */
    function isPedDragging(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x50F124E6EF188B22 | Since: 1207
     */
    function isPedDrunk(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x878B68960C1C2A35 | Since: 1207
     */
    function isPedGroupLeader(ped: number | Ped, groupId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57779B55B83E2BEA | Since: 1207
     */
    function isPedIntimidated(ped: number | Ped): boolean;
    /**
     * _IS_PED_IN*
     *
     * Hash: 0x7583A9D35248B83F | Since: 1207
     */
    function isPedInvestigating(ped: number | Ped): boolean;
    /**
     * If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
     * If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
     * _IS_PED_IN_*
     *
     * Hash: 0x078076AB50FB117F | Since: 1207
     */
    function isPedInPoint(ped: number | Ped, pos: Vector3, radius: number): boolean;
    /**
     * _IS_PED_L* - _IS_PED_M*
     *
     * Hash: 0x917760CFE7A0E0F1 | Since: 1207
     */
    function isPedLeadingAnyGroup(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA9F048DCF69B6DC | Since: 1207
     */
    function isPedModelSuppressed(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D9BFCE3352DE47F | Since: 1207
     */
    function isPedQueuedForDeletion(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD6740E14E4CEFC0B | Since: 1207
     */
    function isPedSliding(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02AA2096FE00F3E1 | Since: 1207
     */
    function isPedTargetActionDisableFlagEnabled(ped: number | Ped, actionDisableFlag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEBB208D6AE712C03 | Since: 1207
     */
    function isPedUsingActionMode2(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5102307CE88798EB | Since: 1207
     */
    function isPedVisibilityTracked(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x91A5F9CBEBB9D936 | Since: 1207
     */
    function isScenarioBlockingAreaValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E5CBCB3941D7D08 | Since: 1207
     */
    function isTarget(ped: number | Ped, targetPed: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x31DC8D3F216D8509 | Since: 1207
     */
    function isTextureValid(textureId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x772A1969F649E902 | Since: 1207
     */
    function isThisModelAHorse(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x164CECC59E70DF86 | Since: 1207
     */
    function isTrackedPedVisibilityPercentageNotLessThan(ped: number | Ped, percent: number): boolean;
    /**
     * _IS_TRACKED_* - IS_V*
     *
     * Hash: 0xAF61B3CD8C3B82C3 | Since: 1207
     */
    function isUsingSlipstream(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x935CF6E42BAF7F4D | Since: 1207
     */
    function pedClearLocoMotion(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD6B242B8BD5543A | Since: 1207
     */
    function pedDuelingDidPlayerHeadshotOpponent(ped: number | Ped): boolean;
    /**
     * target: 0 affects everyone
     * duration: -1 indefinite
     * flag: always 4 in R* Scripts
     *
     * Hash: 0xAAB050DA48B57978 | Since: 1207
     */
    function pedEmotionalPresetLocoMotion(ped: number | Ped, presetName: string, targetPed: number | Ped, duration: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x06FA94C835787C64 | Since: 1207
     */
    function pedWasKilledByHeadshot(ped: number | Ped): boolean;
    /**
     * Returns loot state
     * enum eLootState
     * {
     * LAP_NONE,
     * LAP_RESUMING,
     * LAP_GETTING_ON_FOOT,
     * LAP_DISTANT_NAV,
     * LAP_CHOOSING_ACTION,
     * LAP_APPROACHING,
     * LAP_ENTERING,
     * LAP_LOOTING,
     * LAP_EXITING
     * };
     *
     * _POSSE_* - _REGISTER_HATED*
     *
     * Hash: 0x5463C962BC7777C3 | Since: 1207
     */
    function refreshLootStateForPed(ped: number | Ped, lootTarget: number | Ped): number;
    /**
     * p1 is always 1
     *
     * Hash: 0x59BD177A1A48600A | Since: 1207
     */
    function refreshMetaPedShopItems(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8736EFDA38EDC5C | Since: 1207
     */
    function registerHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x13E7320C762F0477 | Since: 1207
     */
    function releaseMetaPedAssetRequest(requestId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4592B8B9B0EF5F48 | Since: 1207
     */
    function releaseMetaPedOutfitRequest(requestId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3972F78A78B5D9DF | Since: 1207
     */
    function releaseMetaPedRequest(requestId: number): void;
    /**
     * Removes a texture created by 0xC5E7204F322E49EB.
     *
     * Hash: 0x6BEFAA907B076859 | Since: 1207
     */
    function releaseTexture(textureId: number): void;
    /**
     * Removes gravity well by handle returned from 0x4F5EBE70081E5A20
     *
     * Hash: 0x87247BC60B60BED8 | Since: 1207
     */
    function removeGravityWell(handle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE7B2B4144906CDF | Since: 1207
     */
    function removeMotionTypeAsset(nameHash: number | string, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6F67BEC53379A32 | Since: 1207
     */
    function removePedBlackboardBool(ped: number | Ped, variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x411189E51B8020BA | Since: 1207
     */
    function removePedBlackboardFloat(ped: number | Ped, variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E17378642156790 | Since: 1207
     */
    function removePedBlackboardHash(ped: number | Ped, variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x81B75428A7813E67 | Since: 1207
     */
    function removePedBlackboardInt(ped: number | Ped, variableName: string): void;
    /**
     * See _REQUEST_PED_EMOTIONAL_PRESET
     *
     * Hash: 0xFC3BAB1801A8255A | Since: 1207
     */
    function removePedEmotionalPreset(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5337B721C51883A9 | Since: 1207
     */
    function removePedFromMount(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x96C349DE04C49011 | Since: 1207
     */
    function removePedOverlay(textureId: number, overlayId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A50753042B6891B | Since: 1207
     */
    function removePedProp(ped: number | Ped, propName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CAB404CD2DB41F5 | Since: 1207
     */
    function removePedStayOutVolume(ped: number | Ped, volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x011A42FD923D41CA | Since: 1311
     */
    function removePedSubscribeToLegendaryBlips(ped: number | Ped): boolean;
    /**
     * Directly removes a shop item component from a ped
     * Params: p2 and p3 are always 0
     *
     * Hash: 0x0D7FFA1B2F69ED82 | Since: 1355
     */
    function removeShopItemFromPed(ped: number | Ped, componentHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4707E9C23D8CA3FE | Since: 1207
     */
    function removeTarget(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * Returns requestId
     * Params: p1 = 1 in R* Scripts (Used in SP only)
     *
     * Hash: 0xF97C34C33487D569 | Since: 1207
     */
    function requestMetaPed(model: number | string): number;
    /**
     * Returns requestId
     * Params: p1 = 1 in R* Scripts
     *
     * Hash: 0x91FE941F9FCFB702 | Since: 1207
     */
    function requestMetaPedAssetBundle(asset: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF6D9E1F3560CBF8E | Since: 1207
     */
    function requestMetaPedComponent(metaPedType: number): any;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
     * Returns requestId, to be used with 0x74F512E29CB717E2
     *
     * Hash: 0x13154A76CE0CF9AB | Since: 1207
     */
    function requestMetaPedOutfit(model: number | string, outfit: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF7EA250B9A919E03 | Since: 1207
     */
    function requestMotionTypeAsset(nameHash: number | string, ped: number | Ped): void;
    /**
     * For more information, see common:/data/emotional_presets.meta
     *
     * Hash: 0x5C3C55EAAD19915F | Since: 1207
     */
    function requestPedEmotionalPreset(ped: number | Ped, name: string): void;
    /**
     * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/fwFacialAnimRequest__Mood
     * Params: p2 = 6 in R* Scripts
     *
     * Hash: 0x8B3B71C80A29A4BB | Since: 1207
     */
    function requestPedFacialMoodThisFrame(ped: number | Ped, mood: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDED916A9F9B0604 | Since: 1207
     */
    function requestPedForScenarioType(ped: number | Ped, object: number | Object, scenarioType: number | string): any;
    /**
     * Known get up animation types: REAR, FRONT
     *
     * Hash: 0xEAA8242C8479C27D | Since: 1207
     */
    function requestPedGetupAnimation(ped: number | Ped, getUpType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEC65C6049B3219D | Since: 1207
     */
    function requestPropScenarioPed(ped: number | Ped, object: number | Object): any;
    /**
     * Creates a texture override data for ped and returns it's index.
     * So you can replace any texture of any ped's component.
     * Also, you can add overlays on it, such as aging, lipstick and more.
     * Textures can be reused by multiple peds at once.
     * You can keep only 32 textures at once(including other peds).
     *
     * https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
     * materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
     *
     * Hash: 0xC5E7204F322E49EB | Since: 1207
     */
    function requestTexture(albedoHash: number | string, normalHash: number | string, materialHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xED9582B3DA8F02B4 | Since: 1207
     */
    function reserveAmbientPeds(numPeds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF008E0BA1FE1D644 | Since: 1207
     */
    function reserveAmbientPedsTotal(numPeds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BFA1BD465CDFEFD | Since: 1207
     */
    function resetPedComponents(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B9668DB91DC39B8 | Since: 1207
     */
    function resetPedIncapacitationBleedOutDuration(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x801917E7D7BCE418 | Since: 1207
     */
    function resetPedLadderMovementSpeedModifier(ped: number | Ped): void;
    /**
     * Removes every texture layer but the base layer
     * Clearing texture's data: setting params to default values, but keep overlays.
     *
     * Hash: 0x8472A1789478F82F | Since: 1207
     */
    function resetPedTexture(textureId: number): void;
    /**
     * 0.0 <= stamina <= 100.0
     *
     * Hash: 0x675680D089BFA21F | Since: 1207
     */
    function restorePedStamina(ped: number | Ped, stamina: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2266AA617668AD3 | Since: 1207
     */
    function setAccuracyAgainstLocalPlayerModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0258742B034DFAF | Since: 1207
     */
    function setAmbientAnimalDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA0980B5C0A11924 | Since: 1207
     */
    function setAmbientHumanDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB0D553FE20A6E25 | Since: 1207
     */
    function setAmbientPedDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * Sets MetaPedExpression at index specified. Morphs components, such as changing body size or facial features.
     *
     * Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
     *
     * index = MetaPedExpression IDs
     * List of face features: https://pastebin.com/9jb88FXW
     * Full list of MetaPedExpressions: https://pastebin.com/Ld76cAn7
     * value: -1.0 to 1.0 (values beyond this likely won't sync to other clients)
     *
     * This native also allows you to change a horse's gender.
     *
     * Old name: _SET_PED_FACE_FEATURE
     *
     * Hash: 0x5653AB26C82938CF | Since: 1207
     */
    function setCharExpression(ped: number | Ped, index: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x069EDDF1FD4DEB0A | Since: 1207
     */
    function setCurrentDefenseAgainstPlayersModifier(horse: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B6808EC46BE849B | Since: 1207
     */
    function setDefenseModifierForPed(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x478F6B9920446CE2 | Since: 1207
     */
    function setFormationAutoAssignPosition(groupId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE1B1907A83A1550 | Since: 1207
     */
    function setHealthRechargeMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFECA2081F61ED2CD | Since: 1207
     */
    function setInteractionLockonFlag(ped: number | Ped, player: number | string | Player, flag: number, enable: boolean): void;
    /**
     * Use to apply metaped player components
     * Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
     *
     * Hash: 0xBC6DF00D7A4A6819 | Since: 1207
     */
    function setMetaPedTag(ped: number | Ped, drawable: number | string, albedo: number | string, normal: number | string, material: number | string, palette: number | string, tint0: number, tint1: number, tint2: number): void;
    /**
     * Sets ped eye redness, weariness: 0.f to 1.f
     *
     * Hash: 0x314C5465195F3B30 | Since: 1207
     */
    function setMetaPedWeariness(ped: number | Ped, weariness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7883AA809DF43D98 | Since: 1355
     */
    function setMinPedHealthThreshold(ped: number | Ped, healthAmount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA69899995997A63B | Since: 1207
     */
    function setMountBondingLevel(ped: number | Ped, bondingLevel: number): void;
    /**
     * Note: this native was added in build 1232.40
     *
     * Hash: 0x11E6B9629C46D6EC | Since: 1232
     */
    function setMountSecurityEnabled(ped: number | Ped, toggle: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
     *
     * Hash: 0xB8DE69D9473B7593 | Since: 1207
     */
    function setPedActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
    /**
     * bloodFountainPressure: visible effect from 0.0 till 20.0
     * yaw: visible effect from -3.0 till 3.0
     * bloodFountainDirection: 1.0 left side, -1.0 right side
     * bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
     * make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
     *
     * Hash: 0xFFD54D9FE71B966A | Since: 1207
     */
    function setPedActivateWoundEffect(ped: number | Ped, boneId: number, moveWoundLeftRight: number, bloodFountainPressure: number, yaw: number, bloodFountainDirection: number, bloodFountainPulse: number): void;
    /**
     * Params: hash - ARTHUR or JOHN
     * _SET_PED_(A-D)*
     *
     * Hash: 0xB285AD0EC870B2DF | Since: 1207
     */
    function setPedActivePlayerType(ped: number | Ped, playerType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x43CA928E892CFDB8 | Since: 1311
     */
    function setPedAnimalDetectionModifier(ped: number | Ped, modifier: number): void;
    /**
     * NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
     *
     * Hash: 0x6DBF2D78709AD70B | Since: 1207
     */
    function setPedBeatMultiplier(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB9401F918CB0F75 | Since: 1207
     */
    function setPedBlackboardBool(ped: number | Ped, variableName: string, value: boolean, removeTimer: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x437C08DB4FEBE2BD | Since: 1207
     */
    function setPedBlackboardFloat(ped: number | Ped, variableName: string, value: number, removeTimer: number): void;
    /**
     * p1:
     * BodyPartChained
     * OverloadMostInjuredBodyPart
     *
     * p2:
     * LeftLeg
     * Legs
     * RightArm
     *
     * Hash: 0xA762C9D6CF165E0D | Since: 1207
     */
    function setPedBlackboardHash(ped: number | Ped, variableName: string, value: string, removeTimer: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
     * Blackboard natives allow you to apply and check certain data to/for peds.
     * Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
     * Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
     * "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
     *
     * Hash: 0x5F53010C4C3F6BAF | Since: 1207
     */
    function setPedBlackboardInt(ped: number | Ped, variableName: string, value: number, removeTimer: number): void;
    /**
     * Bleedout profiles:
     * Animal_FastBleedout
     * Animal_Generic
     * Human_FastBleedout
     * Human_Generic
     * Human_Mission
     *
     * For more information, see common/data/ai/peddamageinfo.meta
     *
     * Hash: 0x66C047719B0E80E1 | Since: 1207
     */
    function setPedBleedoutProfile(ped: number | Ped, bleedoutProfile: number | string): void;
    /**
     * brawlingStyle:
     * enum eBrawlingStyle : Hash
     * {
     * BS_AI = 0x802C604D,
     * BS_AI_BARBRAWL = 0x4FF5F0C7,
     * BS_AI_DEFENSIVE = 0xD888F2FD,
     * BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
     * BS_ALLIGATOR = 0x7A5548ED,
     * BS_ALLIGATOR_LARGE = 0x368EC7CB,
     * BS_ALLY = 0x69C76C14,
     * BS_ANIMAL = 0xD777C754,
     * BS_BADGER = 0x7E7C3F53,
     * BS_BEAR = 0x0BC66E35,
     * BS_BEAVER = 0x4E313783,
     * BS_BOAR = 0x176A5831,
     * BS_BOUNTY_HUNTER = 0x3900654C,
     * BS_BRUISER = 0x4514DB61,
     * BS_BULL = 0x4E50C5D2,
     * BS_COUGAR = 0x9DAA7CCB,
     * BS_COW = 0xB0E91295,
     * BS_COYOTE = 0xA448EB69,
     * BS_DEER = 0xA781E6B3,
     * BS_DOG = 0x5A4155C4,
     * BS_ELK = 0x408697F0,
     * BS_FEMALE = 0x6A3BB2C2,
     * BS_FEMALE_STRONG = 0x4DAFDD84,
     * BS_GANGUP = 0xD0CECFF2,
     * BS_GOAT = 0x078E649F,
     * BS_HORSE = 0xF6B775F3,
     * BS_MICAH_FINALE = 0x1F0BB27A,
     * BS_MOOSE = 0x968917AB,
     * BS_MUSKRAT = 0x1EDC33AC,
     * BS_NO_MELEE = 0x25B5F931,
     * BS_PIG = 0x22EAD110,
     * BS_PLAYER = 0x78BAEF07,
     * BS_PLAYER_FINALE = 0xF9E77D2D,
     * BS_PLAYER_MOONSHINER = 0x687BF19F,
     * BS_PLAYER_WINTER1 = 0x3C6A802F,
     * BS_QUICK = 0xC4CABB1B,
     * BS_RACCOON = 0x505F8917,
     * BS_SHEEP = 0x6827CCCF,
     * BS_SNAKE = 0x82BEBC4B,
     * BS_TIMID = 0x431AEF77,
     * BS_WOLF = 0xA8F023D4
     * };
     *
     * Hash: 0x8BA83CC4288CD56D | Since: 1207
     */
    function setPedBrawlingStyle(ped: number | Ped, brawlingStyle: number | string): void;
    /**
     * SET_PED_CAN_*
     *
     * Hash: 0xFD6943B6DF77E449 | Since: 1207
     */
    function setPedCanBeLassoed(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE9DF765990E8D1D | Since: 1207
     */
    function setPedCanBodyRecoilIk(PedIndex: number | Ped, bEnableIK: boolean): void;
    /**
     * Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
     * _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
     *
     * Hash: 0xBD75500141E4725C | Since: 1207
     */
    function setPedCombatAttributeHash(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9238A3D970BBB0A9 | Since: 1207
     */
    function setPedCombatBehaviour(ped: number | Ped, behaviour: number | string): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
     * Params: p2 is usually 1, sometimes 0 or 2
     * duration in seconds, -1.0 = forever
     *
     * Hash: 0x8ACC0506743A8A5C | Since: 1207
     */
    function setPedCombatStyle(ped: number | Ped, combatStyleHash: number | string, duration: number): void;
    /**
     * duration in seconds, -1.0 = forever
     *
     * Hash: 0x8B1E8E35A6E814EA | Since: 1207
     */
    function setPedCombatStyleMod(ped: number | Ped, combatStyleModHash: number | string, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7DE9692C6F64CFE8 | Since: 1207
     */
    function setPedCrouchMovement(ped: number | Ped, state: boolean, immediately: boolean): void;
    /**
     * The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
     *
     * Hash: 0x8AC1D721B2097B6E | Since: 1207
     */
    function setPedCullRange(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xDACE03C65C6666DB | Since: 1207
     */
    function setPedDamaged(ped: number | Ped, damaged: boolean): void;
    /**
     * damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
     *
     * Hash: 0x7528720101A807A5 | Since: 1207
     */
    function setPedDamageCleanliness(ped: number | Ped, damageCleanliness: number): void;
    /**
     * _SET_PED_(A?)*
     *
     * Hash: 0xEB2BFE5D009F0331 | Since: 1232
     */
    function setPedDefensiveAreaToAngledArea(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x1854217C640B39EC | Since: 1207
     */
    function setPedDefensiveSphereAttachedToEntity(ped: number | Ped, entity: number | Entity, pos: Vector3, radius: number): void;
    /**
     * Seems to set the ped's loco type.
     * Values used in the scripts:
     * algie
     * angry_female
     * arthur_healthy
     * cowboy
     * cowboy_f
     * default
     * default_female
     * free_slave_01
     * free_slave_02
     * gold_panner
     * guard_lantern
     * injured_general
     * john_marston
     * lilly_millet
     * lone_prisoner
     * lost_man
     * mp_ova_hunter
     * mp_ova_hunter_female
     * murfree
     * old_female
     * primate
     * rally
     * waiter
     * war_veteran
     *
     * Hash: 0x923583741DC87BCE | Since: 1207
     */
    function setPedDesiredLocoForModel(ped: number | Ped, locomotionArchetype: string): void;
    /**
     * Sets peds motion type
     *
     * Hash: 0x89F5E7ADECCCB49C | Since: 1207
     */
    function setPedDesiredLocoMotionType(ped: number | Ped, locoMotionType: string): void;
    /**
     * Params: ped, 0f, -1, true, true in R* MP Scripts
     * _SET_PED_DE* - _SET_PED_F*
     *
     * Hash: 0xE3144B932DFDFF65 | Since: 1207
     */
    function setPedDirtCleaned(ped: number | Ped): void;
    /**
     * Disables being able to kick move ped.
     *
     * Hash: 0xADD31A5C7A5FAA73 | Since: 1207
     */
    function setPedDisableKickMove(ped: number | Ped, disable: boolean): void;
    /**
     * SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
     *
     * Hash: 0x406CCF555B04FAD3 | Since: 1207
     */
    function setPedDrunkness(ped: number | Ped, enabled: boolean, drunknessLevel: number): void;
    /**
     * Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
     *
     * Hash: 0x20E54854DEF6A54A | Since: 1207
     */
    function setPedFiringPattern2(ped: number | Ped, patternHash: number | string): void;
    /**
     * Only used in R* MP Script fm_mission_controller
     *
     * Hash: 0x244E8C282188E40F | Since: 1207
     */
    function setPedFiringPattern3(ped: number | Ped, patternHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E9E95FDEDCC9D35 | Since: 1207
     */
    function setPedFormationPosition(ped: number | Ped, position: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AE3552E7C207CC5 | Since: 1207
     */
    function setPedGetupAnimation(ped: number | Ped, animName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8301D87B1B89E219 | Since: 1207
     */
    function setPedGrappleAction(ped: number | Ped, grappleAction: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x56E9C26CD29D1ED6 | Since: 1207
     */
    function setPedGrappleAnimation(ped: number | Ped, grappleAnim: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x99A6E246C315BF60 | Since: 1207
     */
    function setPedGrappleEffectMultiplier(ped: number | Ped, multiplier: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x789DABD18E9024DB | Since: 1207
     */
    function setPedGrappleFlag(ped: number | Ped, flag: number, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x604190F0CF0DF158 | Since: 1207
     */
    function setPedGrappleSequence(ped: number | Ped, grappleSequence: string): void;
    /**
     * Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
     *
     * Hash: 0x630E7B01F091A197 | Since: 1207
     */
    function setPedGrappleStyle(ped: number | Ped, style: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x2BA918C823B8BA56 | Since: 1207
     */
    function setPedHeadshotDamageMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * configHash: see pedhealth.meta
     *
     * Hash: 0xF6B82FCE03B43A37 | Since: 1207
     */
    function setPedHealthConfig(ped: number | Ped, configHash: number | string): void;
    /**
     * Only used in R* Script beat_sharp_shooter
     * Blocks ped from swimming underwater
     *
     * Hash: 0x7FB0088E8769CDDB | Since: 1207
     */
    function setPedImmersionFlag(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD67B6F3BCF81BA47 | Since: 1207
     */
    function setPedIncapacitationFlags(ped: number | Ped, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x39ED303390DDEAC7 | Since: 1207
     */
    function setPedIncapacitationModifiers(ped: number | Ped, canBeIncapacitated: boolean, threshold: number, bleedoutTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2890418B39BC8FFF | Since: 1207
     */
    function setPedIncapacitationTotalBleedOutDuration(ped: number | Ped, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3C53CDE922BC78B | Since: 1207
     */
    function setPedInteractionNegativeResponse(ped: number | Ped, speech: string): void;
    /**
     * personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
     * personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
     *
     * Hash: 0x24C82EF607105FAA | Since: 1207
     */
    function setPedInteractionPersonality(ped: number | Ped, personality: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x20C5459379D75C1C | Since: 1207
     */
    function setPedInteractionPositiveResponse(ped: number | Ped, speech: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BCF0B79D4F5DBA3 | Since: 1207
     */
    function setPedKnockedByOneHit(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x05CE6AF4DF071D23 | Since: 1207
     */
    function setPedLadderMovementSpeedModifier(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x13A210949FCBD92B | Since: 1207
     */
    function setPedLights(ped: number | Ped, toggle: boolean): void;
    /**
     * enum eMotivationState
     * {
     * TOILET_STATE,
     * FEAR_STATE,
     * ANGRY_STATE,
     * AGITATION_STATE,
     * HUNGRY_STATE,
     * TIRED_STATE,
     * SAD_STATE,
     * BRAVE_STATE,
     * OFFER_ITEM_STATE,
     * SUSPICION,
     * DRUNK_STATE
     * };
     *
     * If targetPed is set to 0 the ped motivationState affects everyone
     *
     * Hash: 0x06D26A96CA1BCA75 | Since: 1207
     */
    function setPedMotivation(ped: number | Ped, motivationState: number, threshold: number, targetPed: number | Ped): void;
    /**
     * The higher the modifier, the slower the motivationState value will decrease
     *
     * Hash: 0xA1EB5D029E0191D3 | Since: 1207
     */
    function setPedMotivationModifier(ped: number | Ped, motivationState: number, modifier: number): void;
    /**
     * motivationState: see _SET_PED_MOTIVATION
     *
     * Hash: 0x2EB75FB86C41F026 | Since: 1207
     */
    function setPedMotivationStateOverride(ped: number | Ped, motivationState: number, enabled: boolean): void;
    /**
     * Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE, LAW_POLICE, GUARD_DOG, ATTACK_DOG
     * Personalities can also be found in common:/data/ai/interactionpersonalities
     *
     * Hash: 0xB8B6430EAD2D2437 | Since: 1207
     */
    function setPedPersonality(ped: number | Ped, personality: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A48B6E03BABB4AC | Since: 1207
     */
    function setPedPromptName(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x19B14E04B009E28B | Since: 1207
     */
    function setPedPromptName2(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCA8FB9E15FA80D3 | Since: 1207
     */
    function setPedPromptNameFromGxtEntry(ped: number | Ped, gxtEntryHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2745D9261664901 | Since: 1207
     */
    function setPedPromptNameFromGxtEntry2(ped: number | Ped, gxtEntryHash: number | string): void;
    /**
     * quality: see _GET_PED_QUALITY
     *
     * Hash: 0xCE6B874286D640BB | Since: 1207
     */
    function setPedQuality(ped: number | Ped, quality: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x25ACFC650B65C538 | Since: 1207
     */
    function setPedScale(ped: number | Ped, scale: number): void;
    /**
     * 0.0 - 1.0
     * Modifies the "scent line" on the ped's body when using Eagle Eye.
     *
     * Hash: 0x01B21B81865E2A1F | Since: 1207
     */
    function setPedScent(ped: number | Ped, scent: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC163DAC52AC975D3 | Since: 1207
     */
    function setPedTargetActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x36E4B61DC56DE77C | Since: 1207
     */
    function setPedToBeRemoved(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x221F4D9912B7FE86 | Since: 1207
     */
    function setPedToDisableRagdoll(ped: number | Ped, toggle: boolean): void;
    /**
     * duration in seconds
     *
     * Hash: 0xA5950E16B8F31052 | Since: 1207
     */
    function setPedTrailEffect(ped: number | Ped, duration: number): void;
    /**
     * Doesn't actually return anything.
     *
     * Hash: 0xEB72453B6F5B45B0 | Since: 1232
     */
    function setPedUseHorseMapCollision(ped: number | Ped, toggle: boolean): any;
    /**
     * _SET_PED_S* - _SET_PED_T*
     *
     * Hash: 0xD05AD61F242C626B | Since: 1207
     */
    function setPedVoiceVolume(ped: number | Ped, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4DB9D03AC4E1FA84 | Since: 1207
     */
    function setPedWrithingDuration(ped: number | Ped, writhingDuration1: number, writhingDuration2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA73F50E8796150D5 | Since: 1207
     */
    function setPeltForHorse(horse: number | Ped, peltId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5708EDD71B50C008 | Since: 1207
     */
    function setPlayerAntagonizeDisabledForPed(ped: number | Ped, player: number | string | Player, duration: number): void;
    /**
     * Animal Skin Quality Modifier
     * Params: p2 = 2, p3 = 3 in R* Scripts
     *
     * Hash: 0x9EFF3C91DF38304F | Since: 1311
     */
    function setPlayerCurrentAnimalDamageModifier(player: number | string | Player, modifier: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x19173C3F15367B54 | Since: 1207
     */
    function setPlayerGreetDisabledForPed(ped: number | Ped, player: number | string | Player, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x283978A15512B2FE | Since: 1207
     */
    function setRandomOutfitVariation(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x39A2FC5AF55A52B1 | Since: 1207
     */
    function setRemovePedNetworked(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB48E99F8E064E56 | Since: 1207
     */
    function setScenarioAnimalDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x28CB6391ACEDD9DB | Since: 1207
     */
    function setScenarioHumanDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * Sets the scenario ped density to the given config.
     *
     * Valid configs:
     * - BLACKWATER
     * - DEFAULT
     * - NEWBORDEAUX
     * - RHODES
     * - STRAWBERRY
     * - TUMBLEWEED
     * - VALENTINE
     * - VANHORN
     *
     * See common/data/ai/densityscoringconfigs.meta for more information.
     *
     * Hash: 0x95423627A9CA598E | Since: 1207
     */
    function setScenarioPedDensityThisFrame(configHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA77FA7BE9312F8C0 | Since: 1207
     */
    function setScenarioPedRangeMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF5A3D2285D8924B | Since: 1207
     */
    function setStaminaDepletionMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x345C9F993A8AB4A4 | Since: 1207
     */
    function setStaminaRechargeMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * Size will be permanent
     *
     * Hash: 0x7FF72DE061DF55E2 | Since: 1207
     */
    function setTankAttributeSize(ped: number | Ped, attributeIndex: number, size: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C76BC24F8BB709A | Since: 1207
     */
    function setTextureLayerAlpha(textureId: number, layerId: number, texAlpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2EA041F1146D75B | Since: 1207
     */
    function setTextureLayerMod(textureId: number, layerId: number, modTextureHash: number | string, modAlpha: number, modChannel: number): void;
    /**
     * paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
     *
     * Hash: 0x1ED8588524AC9BE1 | Since: 1207
     */
    function setTextureLayerPallete(textureId: number, layerId: number, paletteHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x057C4F092E2298BE | Since: 1207
     */
    function setTextureLayerRoughness(textureId: number, layerId: number, texRough: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3329AAE2882FC8E4 | Since: 1207
     */
    function setTextureLayerSheetGridIndex(textureId: number, layerId: number, sheetGridIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x253A63B5BADBC398 | Since: 1207
     */
    function setTextureLayerTextureMap(textureId: number, layerId: number, albedoHash: number | string, normalHash: number | string, materialHash: number | string): void;
    /**
     * Seem color is not RGB or HSV
     *
     * Hash: 0x2DF59FFE6FFD6044 | Since: 1207
     */
    function setTextureLayerTint(textureId: number, layerId: number, tint0: number, tint1: number, tint2: number): void;
    /**
     * Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
     *
     * Hash: 0x4EFC1F8FF1AD94DE | Since: 1207
     */
    function setTextureOutfitTints(ped: number | Ped, componentCategory: number | string, palette: number | string, tint0: number, tint1: number, tint2: number): void;
    /**
     * _SET_W(EAPON?)*
     *
     * Hash: 0x932786CE3C76477C | Since: 1207
     */
    function setTotalPedDamageFalloffBonus(ped: number | Ped, bonus: number): void;
    /**
     * _SET_W(EAPON?)*
     *
     * Hash: 0x73B6F907B913C860 | Since: 1207
     */
    function setTotalPedDamageFromAi(ped: number | Ped, totalDamage: number): void;
    /**
     * Triggers a gunshot
     * Params: p5 = -1 in R* Scripts
     *
     * Hash: 0x4C57F27D1554E6B0 | Since: 1207
     */
    function shootTriggerAtCoords(ped: number | Ped, pos: Vector3): any;
    /**
     * No comment provided
     *
     * Hash: 0x83ED1FC9DF3411F5 | Since: 1311
     */
    function spawnpointsStartSearchWithVolume(volume: number, spawnpointsFlag: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D4E70A67A651C71 | Since: 1207
     */
    function unreserveAmbientPeds(numPeds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F9E754EBE8FDBFA | Since: 1311
     */
    function updateAnimalDamageModifier(player: number | string | Player): void;
    /**
     * Should be called at least once for any new texture override.
     * Otherwise component textures will be just black.
     * Also needs to be called for updating any ped overlays to apply the changes.
     *
     * Hash: 0x92DAABA2C1C10B0E | Since: 1207
     */
    function updatePedTexture(textureId: number): void;
    /**
     * Update variation on ped, needed after first creation, or when component or texture/overlay is changed
     *
     * Hash: 0xCC8CA3E88256E58F | Since: 1207
     */
    function updatePedVariation(ped: number | Ped): void;
    /**
     * Params: 0.0f to remove wound effects
     *
     * Hash: 0x66B1CB778D911F49 | Since: 1207
     */
    function updatePedWoundEffect(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x66B957AAC2EAAEAB | Since: 1207
     */
    function updateShopItemWearableState(ped: number | Ped, componentHash: number | string, wearableState: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0B61ED8BB37712F | Since: 1207
     */
    function warpPedOutOfVehicle(ped: number | Ped): void;
}
export declare namespace perschar {
    /**
     * No comment provided
     *
     * Hash: 0x08FC896D2CB31FCC | Since: 1207
     */
    function _0x08FC896D2CB31FCC(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0B3A99AB6713AA52 | Since: 1207
     */
    function _0x0B3A99AB6713AA52(): void;
    /**
     * Returns the PersChar index of the persCharHash passed
     *
     * Hash: 0x112DDF56300BC6E5 | Since: 1207
     */
    function _0x112DDF56300BC6E5(persCharHash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x2DF89CD2ED1D0BDE | Since: 1207
     */
    function setPerscharOutfit(persCharHash: number | string, outfit: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E957AA81F2C61C9 | Since: 1207
     */
    function _0x2E957AA81F2C61C9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x406808610220405B | Since: 1207
     */
    function _0x406808610220405B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AFC7288C77238B3 | Since: 1207
     */
    function _0x4AFC7288C77238B3(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4F81EAD1DE8FA19B | Since: 1207
     */
    function _0x4F81EAD1DE8FA19B(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x535A66AAD2BF68F9 | Since: 1207
     */
    function _0x535A66AAD2BF68F9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x59C7AD6FEA2AC449 | Since: 1207
     */
    function _0x59C7AD6FEA2AC449(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EE6FCCC9C832CA2 | Since: 1207
     */
    function _0x5EE6FCCC9C832CA2(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x63AA2B8EB087886A | Since: 1207
     */
    function _0x63AA2B8EB087886A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x669C25840C6F7AE2 | Since: 1207
     */
    function _0x669C25840C6F7AE2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6759BEE6762E140B | Since: 1207
     */
    function _0x6759BEE6762E140B(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x69786495C92A3044 | Since: 1207
     */
    function _0x69786495C92A3044(): any;
    /**
     * No comment provided
     *
     * Hash: 0x70605812ABC9FF0F | Since: 1207
     */
    function _0x70605812ABC9FF0F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AE4EFA464DAE42D | Since: 1207
     */
    function _0x8AE4EFA464DAE42D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B44273A92CD406C | Since: 1207
     */
    function resetPerscharSchedule(persCharHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BC555034A5A5E8C | Since: 1207
     */
    function _0x8BC555034A5A5E8C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x92690B0822493CE0 | Since: 1207
     */
    function _0x92690B0822493CE0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x94995829ED15A598 | Since: 1207
     */
    function _0x94995829ED15A598(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x9C7F95946E304778 | Since: 1207
     */
    function _0x9C7F95946E304778(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA2B18FF8D39F6D87 | Since: 1207
     */
    function _0xA2B18FF8D39F6D87(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4DCB3F0DD7488BD | Since: 1207
     */
    function _0xA4DCB3F0DD7488BD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8120EBEAF290C7A | Since: 1207
     */
    function _0xA8120EBEAF290C7A(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA8C406C2A56EDC16 | Since: 1207
     */
    function _0xA8C406C2A56EDC16(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xB173599D61FAEB31 | Since: 1207
     */
    function _0xB173599D61FAEB31(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB65E7F733956CF25 | Since: 1207
     */
    function _0xB65E7F733956CF25(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB68908CD11AEBDC | Since: 1207
     */
    function _0xBB68908CD11AEBDC(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEB40B678E403759 | Since: 1207
     */
    function _0xCEB40B678E403759(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD4B614179BCD0654 | Since: 1207
     */
    function _0xD4B614179BCD0654(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD95D777F828B2BBB | Since: 1207
     */
    function _0xD95D777F828B2BBB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC9655D47DEC0353 | Since: 1207
     */
    function getPerscharOutfit(persCharHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE0E65E0D261F7507 | Since: 1207
     */
    function _0xE0E65E0D261F7507(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4C51A8A3BD1664C | Since: 1207
     */
    function _0xE4C51A8A3BD1664C(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEC254C2C9B0F08F1 | Since: 1207
     */
    function _0xEC254C2C9B0F08F1(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEFC5C6670E0B99BA | Since: 1207
     */
    function _0xEFC5C6670E0B99BA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8DE7154F7D1458F | Since: 1207
     */
    function _0xF8DE7154F7D1458F(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFCC6DB8DBE709BC8 | Since: 1207
     */
    function _0xFCC6DB8DBE709BC8(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F76E3676583D951 | Since: 1207
     */
    function createPersistentCharacter(hash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xFC77C5B44D5FF7C0 | Since: 1207
     */
    function deletePerschar(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B204F88F6C3D287 | Since: 1207
     */
    function forceDespawnPerschar(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CADC3A977997472 | Since: 1207
     */
    function forceSpawnPerschar(persChar: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x32A1E3B83D501096 | Since: 1207
     */
    function getPerscharIndexFromPedIndex(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0xA00DF706C60173D1 | Since: 1207
     */
    function getPerscharModelName(persCharHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x31C70A716CAE1FEE | Since: 1207
     */
    function getPerscharPedIndex(persChar: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xEB98B38CA60742D7 | Since: 1207
     */
    function isPersistentCharacterDead(persChar: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x800DF3FC913355F3 | Since: 1207
     */
    function isPersistentCharacterValid(persChar: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x631CD2D77FDC0316 | Since: 1207
     */
    function retaskPersistentCharacter(persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x49A8C2CD97815215 | Since: 1207
     */
    function revivePerschar(persChar: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x187D65F3AEC5D679 | Since: 1207
     */
    function setPerscharSchedule(persCharHash: number | string, schedule: string): void;
}
export declare namespace persistence {
    /**
     * No comment provided
     *
     * Hash: 0x8245C1F3262F4AC2 | Since: 1207
     */
    function persistenceAddScenarioLooted(scenario: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D16896F0DBE78A2 | Since: 1207
     */
    function persistenceRemoveAllEntitiesInArea(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x065887B694359799 | Since: 1207
     */
    function _0x065887B694359799(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F56FB3FDB4EAF65 | Since: 1207
     */
    function _0x1F56FB3FDB4EAF65(): any;
    /**
     * No comment provided
     *
     * Hash: 0x291CC21D1FB6790E | Since: 1207
     */
    function _0x291CC21D1FB6790E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E545965DF98D476 | Since: 1207
     */
    function _0x2E545965DF98D476(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3CA5E58C9731A16B | Since: 1207
     */
    function _0x3CA5E58C9731A16B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A79220F6D38D7C3 | Since: 1207
     */
    function _0x5A79220F6D38D7C3(): any;
    /**
     * _PERSISTENCE_*
     *
     * Hash: 0x66DAA3A9274E8E82 | Since: 1232
     */
    function _0x66DAA3A9274E8E82(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A1BD123E5CDB6E5 | Since: 1207
     */
    function _0x7A1BD123E5CDB6E5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DE104BEC243A73B | Since: 1207
     */
    function _0x8DE104BEC243A73B(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xB03140014ACA6C40 | Since: 1207
     */
    function _0xB03140014ACA6C40(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA2C49EA6A8D24FF | Since: 1207
     */
    function _0xBA2C49EA6A8D24FF(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCFDA2518F322D836 | Since: 1207
     */
    function _0xCFDA2518F322D836(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDC0A1F0ECEC9F0C0 | Since: 1207
     */
    function _0xDC0A1F0ECEC9F0C0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE225CEF1901F6108 | Since: 1207
     */
    function _0xE225CEF1901F6108(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5622FA6ACFCA7DB | Since: 1207
     */
    function _0xF5622FA6ACFCA7DB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC9806DA9A460093 | Since: 1207
     */
    function _0xFC9806DA9A460093(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB7CF1DE938A3E22 | Since: 1207
     */
    function persistenceIsScenarioMarkedAsLooted(scenario: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB6E1A185C2B9319A | Since: 1207
     */
    function persistenceIsScenarioMarkedAsLootedAtCoords(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x188313616D184213 | Since: 1207
     */
    function persistenceIsScenarioMarkedAsLootedAtCoordsWithModel(pos: Vector3, model: number | string): boolean;
    /**
     * Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
     *
     * Hash: 0xEFB5F34CC0953B27 | Since: 1207
     */
    function persistenceRefreshTownVolume(volume: number): void;
}
export declare namespace physics {
    /**
     * No comment provided
     *
     * Hash: 0x710311ADF0E20730 | Since: 1207
     */
    function activatePhysics(entity: number | Entity): void;
    /**
     * There are 19 types of rope, from type = 0 to type = 18
     * Rope definitions are stored in ropedata.xml
     * Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
     *
     * Hash: 0xE832D760399EB220 | Since: 1207
     */
    function addRope(pos: Vector3, rot: Vector3, length: number, ropeType: number, maxLength: number, minLength: number, rigid: boolean, breakWhenShot: boolean, unkPtr: any): number;
    /**
     * Attaches entity 1 to entity 2.
     * If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
     *
     * Hash: 0x3D95EC8B6D940AC3 | Since: 1207
     */
    function attachEntitiesToRope(ropeId: number, entity1: number | Entity, entity2: number | Entity, ent1X: number, ent1Y: number, ent1Z: number, ent2X: number, ent2Y: number, ent2Z: number, length: number, alwaysZero1: number, alwaysZero2: number, boneName1: string, boneName2: string, boneId1: number, boneId2: number, alwaysZero3: number, alwaysZero4: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E648D16F6E308F3 | Since: 1207
     */
    function breakEntityGlass(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA5D6B1888E4DB20 | Since: 1207
     */
    function deleteChildRope(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x52B4829281364649 | Since: 1207
     */
    function deleteRope(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCF3026912A8647D | Since: 1207
     */
    function detachRopeFromEntity(ropeId: number, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD5448BE3111ED96 | Since: 1207
     */
    function doesRopeExist(ropeId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x21BB0FBD3E217C2D | Since: 1207
     */
    function getRopeLastVertexCoord(ropeId: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xEA61CA8E80F09E4D | Since: 1207
     */
    function getRopeVertexCoord(ropeId: number, vertex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x3655F544CD30F0B5 | Since: 1207
     */
    function getRopeVertexCount(ropeId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF159A63806BB5BA8 | Since: 1207
     */
    function ropeDrawShadowEnabled(ropeId: number, toggle: boolean): void;
    /**
     * Forces a rope to a certain length.
     *
     * Hash: 0xD009F759A723DB1B | Since: 1207
     */
    function ropeForceLength(ropeId: number, length: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC57A637A20006ED | Since: 1207
     */
    function ropeSetUpdateOrder(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEA3B200A6FEB65B | Since: 1207
     */
    function setDamping(entity: number | Entity, vertex: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CEC1A84620E7D5B | Since: 1207
     */
    function setDisableBreaking(object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x01BA3AED21C16CFB | Since: 1207
     */
    function setDisableFragDamage(object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x538D1179EC1AA9A9 | Since: 1207
     */
    function startRopeUnwindingFront(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1461C72C889E343E | Since: 1207
     */
    function startRopeWinding(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFF3A50779EFBBB3 | Since: 1207
     */
    function stopRopeUnwindingFront(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB2D4AB84A19AA7C | Since: 1207
     */
    function stopRopeWinding(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CB16D05E03FB525 | Since: 1207
     */
    function _0x0CB16D05E03FB525(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D97DA8ACB5D2582 | Since: 1207
     */
    function _0x1D97DA8ACB5D2582(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FC92BDBA1106BD2 | Since: 1207
     */
    function _0x1FC92BDBA1106BD2(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x21D0890D88DFB0B0 | Since: 1207
     */
    function _0x21D0890D88DFB0B0(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x31160EC47E7C9549 | Since: 1207
     */
    function _0x31160EC47E7C9549(): void;
    /**
     * No comment provided
     *
     * Hash: 0x32F4DBFDFCCCC735 | Since: 1207
     */
    function _0x32F4DBFDFCCCC735(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3900491C0D61ED4B | Since: 1207
     */
    function _0x3900491C0D61ED4B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x423C6B1F3786D28B | Since: 1207
     */
    function _0x423C6B1F3786D28B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x461FCBDEB4D06717 | Since: 1207
     */
    function _0x461FCBDEB4D06717(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x483D4E917B0D35A9 | Since: 1207
     */
    function _0x483D4E917B0D35A9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x522FA3F490E2F7AC | Since: 1207
     */
    function _0x522FA3F490E2F7AC(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A989B7EE3672A56 | Since: 1207
     */
    function _0x5A989B7EE3672A56(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BD7457221CC5FF4 | Since: 1207
     */
    function _0x5BD7457221CC5FF4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E981C764DF33117 | Since: 1207
     */
    function _0x5E981C764DF33117(): void;
    /**
     * No comment provided
     *
     * Hash: 0x69C810B72291D831 | Since: 1207
     */
    function _0x69C810B72291D831(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6EA0E93CFFA472CC | Since: 1207
     */
    function _0x6EA0E93CFFA472CC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x751DF00EEFF122E3 | Since: 1207
     */
    function _0x751DF00EEFF122E3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x76BAD9D538BCA1AA | Since: 1207
     */
    function _0x76BAD9D538BCA1AA(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x814D453FCFDF119F | Since: 1207
     */
    function _0x814D453FCFDF119F(): void;
    /**
     * _ROPE_SET_*
     *
     * Hash: 0x8D59079C37C21D78 | Since: 1207
     */
    function _0x8D59079C37C21D78(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EEDFD8921389928 | Since: 1207
     */
    function _0x8EEDFD8921389928(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C24846D0A4A2776 | Since: 1207
     */
    function _0x9C24846D0A4A2776(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB40EA9E0D2E2F7F3 | Since: 1207
     */
    function _0xB40EA9E0D2E2F7F3(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7469CB9AC3C0FD4 | Since: 1207
     */
    function _0xB7469CB9AC3C0FD4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB3E9B073E66C3C9 | Since: 1207
     */
    function _0xBB3E9B073E66C3C9(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDDA142759307528 | Since: 1207
     */
    function _0xBDDA142759307528(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC64E7A62632AD2FE | Since: 1207
     */
    function _0xC64E7A62632AD2FE(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC89E7410A93AC19A | Since: 1207
     */
    function _0xC89E7410A93AC19A(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD699E688B49C0FD2 | Since: 1207
     */
    function _0xD699E688B49C0FD2(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEDE679ED29DD4E7 | Since: 1207
     */
    function _0xDEDE679ED29DD4E7(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE54BF2CE6C7D23A9 | Since: 1207
     */
    function _0xE54BF2CE6C7D23A9(ropeId: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAF529446488EB18 | Since: 1207
     */
    function _0xEAF529446488EB18(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1EA2A881EB7F2CD | Since: 1207
     */
    function _0xF1EA2A881EB7F2CD(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF27F1A8DE4F50A1B | Since: 1207
     */
    function _0xF27F1A8DE4F50A1B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8CA39D5C0D1D9A1 | Since: 1207
     */
    function _0xF8CA39D5C0D1D9A1(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB9153A54AC713E8 | Since: 1207
     */
    function _0xFB9153A54AC713E8(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9C59F6809373A99 | Since: 1207
     */
    function addRope2(pos: Vector3, rot: Vector3, length: number, ropeType: number, isNetworked: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xE9CD9A67834985A7 | Since: 1207
     */
    function attachEntitesToRope3(ropeId: number, entity1: number | Entity, entity2: number | Entity): void;
    /**
     * Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
     *
     * Hash: 0x462FF2A432733A44 | Since: 1207
     */
    function attachEntitiesToRope2(ropeId: number, entity1: number | Entity, entity2: number | Entity, ent1X: number, ent1Y: number, ent1Z: number, ent2X: number, ent2Y: number, ent2Z: number, boneName1: string, boneName2: string): void;
    /**
     * ropeTop returns top half of rope, ropeBottom returns bottom half of rope
     *
     * Hash: 0x4CFA2B7FAE115ECB | Since: 1207
     */
    function breakRope(ropeId: number, ropeTop: number, ropeBottom: number, offsetX: number, offsetY: number, offsetZ: number): void;
    /**
     * Combining this with ADD_ROPE enables winding
     * p1: mostly empty (0)
     * ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
     * _CREATE_*
     *
     * Hash: 0x3C6490D940FF5D0B | Since: 1207
     */
    function createRopeWindingAbility(ropeId: number, ropeModelType: string, length: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x06AADE17334F7A40 | Since: 1207
     */
    function hitchHorse(horse: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B4F7E3E4F9C77B3 | Since: 1207
     */
    function isRopeAttachedToEntity(ropeId: number, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x79C2BEC82CFD7F7F | Since: 1207
     */
    function isRopeBroken(ropeId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6076213101A47B3B | Since: 1207
     */
    function releaseRope(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A54D82227A139DB | Since: 1207
     */
    function ropeChangeVisibility(ropeId: number, visible: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE360CFC80C8B2BC | Since: 1311
     */
    function ropeGetBreakerOfRope(ropeId: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x3D69537039F8D824 | Since: 1207
     */
    function ropeGetForcedLength(ropeId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x00F611A794A3C36E | Since: 1207
     */
    function startRopeUnwindingBack(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x10DAA76CB8A201A1 | Since: 1207
     */
    function stopRopeUnwindingBack(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0348469DAA17576C | Since: 1207
     */
    function unhitchHorse(horse: number | Ped): void;
}
export declare namespace player {
    /**
     * No comment provided
     *
     * Hash: 0x09C28F828EE674FA | Since: 1207
     */
    function boostPlayerHorseSpeedForTime(player: number | string | Player, speedBoost: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DF170B1185AF777 | Since: 1207
     */
    function canPlayerStartMission(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0361096D6CE4372C | Since: 1207
     */
    function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x270B63A641BE32F2 | Since: 1207
     */
    function clearPlayerHasDamagedAtLeastOnePed(player: number | string | Player): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x4E4B996C928C7AA6 | Since: 1207
     */
    function clearPlayerWantedLevel(player: number | string | Player): void;
    /**
     * Inhibits the player from using any method of combat including melee and firearms.
     *
     * NOTE: Only disables the firing for one frame
     *
     * Hash: 0x2970929FD5F9FC89 | Since: 1207
     */
    function disablePlayerFiring(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x62ED71E133B6C9F1 | Since: 1207
     */
    function eagleEyeSetCustomEntityTint(entity: number | Entity, red: number, green: number, blue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x768C017FB878E4F4 | Since: 1207
     */
    function forceCleanup(cleanupFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDAACAF8B687F2353 | Since: 1207
     */
    function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF4C9512A2F0A3031 | Since: 1207
     */
    function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84E8E29EBD4A46D2 | Since: 1207
     */
    function getCauseOfMostRecentForceCleanup(): number;
    /**
     * Returns name hash (name) and outHash includes the type.
     *
     * Hash: 0x0139637A3BFF8B6D | Since: 1207
     */
    function getDiscoverableNameHashAndTypeForEntity(entity: number | Entity, type: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA6817C110B830EAD | Since: 1207
     */
    function getEntityPlayerIsFreeAimingAt(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x354F689C4FFAAB37 | Since: 1207
     */
    function getHasPlayerDiscoveredCharacterNameMp(discoveryHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x51BEA356B1C60225 | Since: 1207
     */
    function getIsPlayerUiPromptActive(player: number | string | Player): boolean;
    /**
     * Gets the maximum wanted level the player can get.
     * Ranges from 0 to 5.
     *
     * Hash: 0xD04CFAD1E2B7984A | Since: 1207
     */
    function getMaxWantedLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF49F14462F0AE27C | Since: 1207
     */
    function getMountOwnedByPlayer(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x2F96E7720B0B19EA | Since: 1207
     */
    function getPlayersLastVehicle(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD7ECC25E176ECBA5 | Since: 1207
     */
    function getPlayerCurrentStealthNoise(player: number | string | Player): number;
    /**
     * Returns the group ID the player is member of.
     *
     * Hash: 0x9BAB31815159ABCF | Since: 1207
     */
    function getPlayerGroup(player: number | string | Player): number;
    /**
     * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
     *
     * Hash: 0x47E385B0D957C8D4 | Since: 1207
     */
    function getPlayerIndex(): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x3EE1F7A8C32F24E1 | Since: 1207
     */
    function getPlayerInteractionTargetEntity(player: number | string | Player, outEntity: number | Entity): boolean;
    /**
     * Returns the player's invincibility status.
     *
     * Hash: 0x0CBBCB2CCFA7DC4E | Since: 1207
     */
    function getPlayerInvincible(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7124FD9AC0E01BA0 | Since: 1207
     */
    function getPlayerName(player: number | string | Player): string;
    /**
     * No comment provided
     *
     * Hash: 0x275F255ED201B937 | Since: 1207
     */
    function getPlayerPed(player: number | string | Player): number;
    /**
     * `Does the same like PLAYER::GET_PLAYER_PED`
     *
     * Hash: 0x5C880F9056D784C8 | Since: 1207
     */
    function getPlayerPedScriptIndex(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xFB6EB8785F808551 | Since: 1207
     */
    function getPlayerReceivedBattleEventRecently(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAE663DDD99C8A670 | Since: 1207
     */
    function getPlayerTargetEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * Gets the player's team.
     * Returns -1 in singleplayer.
     *
     * Hash: 0xB464EB6A40C7975B | Since: 1207
     */
    function getPlayerTeam(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xABC532F9098BFD9D | Since: 1207
     */
    function getPlayerWantedLevel(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x36E3D8B5A6552FE8 | Since: 1207
     */
    function getTargetCharacterNameForLocalPlayer(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x0335106F3ACABBED | Since: 1207
     */
    function getTargetCharacterNameScriptOverrideHash(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x755E08680F21EF30 | Since: 1207
     */
    function getTargetCharacterNameScriptOverrideRawString(ped: number | Ped): string;
    /**
     * No comment provided
     *
     * Hash: 0x80B00EB26D9521C7 | Since: 1207
     */
    function getWantedLevelRadius(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1B1A3B358F7D8F07 | Since: 1207
     */
    function getWantedLevelThreshold(wantedLevel: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC11469DCA6FC3BB5 | Since: 1207
     */
    function hasForceCleanupOccurred(cleanupFlags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC932F57F31EA9152 | Since: 1207
     */
    function hasPlayerBeenSpottedInStolenVehicle(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x16C8D205DD5A2E90 | Since: 1207
     */
    function hasPlayerDamagedAtLeastOneNonAnimalPed(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA4A4B9B96E20092 | Since: 1207
     */
    function hasPlayerDamagedAtLeastOnePed(player: number | string | Player): boolean;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x58FF971FC8F2702C | Since: 1207
     */
    function intToParticipantindex(value: number): number;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x748B3A65C2604C33 | Since: 1207
     */
    function intToPlayerindex(value: number): number | string;
    /**
     * Return true while player is being arrested / busted.
     *
     * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
     *
     * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
     *
     * Hash: 0xC8183AE963C58374 | Since: 1207
     */
    function isPlayerBeingArrested(player: number | string | Player, atArresting: boolean): boolean;
    /**
     * Returns TRUE if the player ('s ped) is climbing at the moment.
     *
     * Hash: 0xB8A70C22FD48197A | Since: 1207
     */
    function isPlayerClimbing(player: number | string | Player): boolean;
    /**
     * Returns whether the player can control himself.
     *
     * Hash: 0x7964097FCE4C244B | Since: 1207
     */
    function isPlayerControlOn(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E9C3FCB6798F397 | Since: 1207
     */
    function isPlayerDead(player: number | string | Player): boolean;
    /**
     * Gets a value indicating whether the specified player is currently aiming freely.
     *
     * Hash: 0x936F967D4BE1CE9D | Since: 1207
     */
    function isPlayerFreeAiming(player: number | string | Player): boolean;
    /**
     * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
     *
     * Hash: 0x8C67C11C68713D25 | Since: 1207
     */
    function isPlayerFreeAimingAtEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
     *
     * Hash: 0xBFFB35986CAAE58C | Since: 1207
     */
    function isPlayerPlaying(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA67BCB0097F2FA3 | Since: 1207
     */
    function isPlayerReadyForCutscene(player: number | string | Player): boolean;
    /**
     * Returns true if the player is riding a train.
     *
     * Hash: 0x2FB0ACADA6A238DD | Since: 1207
     */
    function isPlayerRidingTrain(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB78350754157C00F | Since: 1207
     */
    function isPlayerScriptControlOn(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4605C66E0F935F83 | Since: 1207
     */
    function isPlayerTargettingAnything(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x27F89FDC16688A7A | Since: 1207
     */
    function isPlayerTargettingEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x085EEAEB8783FEB5 | Since: 1207
     */
    function isPlayerTeleportActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE1C0AD4C24324C36 | Since: 1207
     */
    function isPlayerWantedLevelGreater(player: number | string | Player, wantedLevel: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x908258B6209E71F7 | Since: 1207
     */
    function isSystemUiBeingDisplayed(): boolean;
    /**
     * Does exactly the same thing as PLAYER_ID()
     *
     * Hash: 0x8A9386F0749A17FA | Since: 1207
     */
    function networkPlayerIdToInt(): number;
    /**
     * This returns YOUR 'identity' as a Player type.
     *
     * Always returns 0 in story mode.
     *
     * Hash: 0x217E9DC48139933D | Since: 1207
     */
    function playerId(): number | string;
    /**
     * Returns current player ped
     *
     * Hash: 0x096275889B8E0EE0 | Since: 1207
     */
    function playerPedId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCBCCF73FFA69CC6B | Since: 1207
     */
    function reportPoliceSpottedPlayer(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CE5CACC01D0F985 | Since: 1207
     */
    function resetLawResponseDelayOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12917931C31F1750 | Since: 1207
     */
    function resetPlayerArrestState(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x61A2EECAB274829B | Since: 1207
     */
    function resetPlayerInputGait(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x062D14F18E8B0CAE | Since: 1207
     */
    function resetWantedLevelDifficulty(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC41F4B6E23FE6A4A | Since: 1207
     */
    function restorePlayerStamina(player: number | string | Player): void;
    /**
     * This can be between 1.0f - 50.0f
     *
     * Hash: 0x5DA6500FE849DA16 | Since: 1207
     */
    function setAirDragMultiplierForPlayersVehicle(player: number | string | Player, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x16752DAA7E6D3F72 | Since: 1207
     */
    function setAllNeutralRandomPedsFleeThisFrame(player: number | string | Player): void;
    /**
     * Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
     *
     * Hash: 0xE705309B8C6445A4 | Since: 1207
     */
    function setAllRandomPedsFlee(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5C198A62F1DEB0A | Since: 1207
     */
    function setAllRandomPedsFleeThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x34630A768925B852 | Since: 1207
     */
    function setEveryoneIgnorePlayer(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2DFC9CCA5596A11 | Since: 1207
     */
    function setLawResponseDelayOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A056257802DD3E5 | Since: 1207
     */
    function setLockonToFriendlyPlayers(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x28A4BD2CEE236E19 | Since: 1207
     */
    function setMaxWantedLevel(maxWantedLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x506CE71FB6E8CF5E | Since: 1207
     */
    function setMinTimeBeforeHorseBucking(mount: number | Ped, iMinBuckTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x227B06324234FB09 | Since: 1207
     */
    function setPedAsTempPlayerHorse(player: number | string | Player, horse: number | Ped): boolean;
    /**
     * Sets whether this player can be hassled by gangs.
     *
     * Hash: 0xC7FE774412046825 | Since: 1207
     */
    function setPlayerCanBeHassledByGangs(player: number | string | Player, toggle: boolean): void;
    /**
     * Sets whether this player can take cover.
     *
     * Hash: 0x5EDA520F7A3BAF4E | Since: 1207
     */
    function setPlayerCanUseCover(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0D9317DFEEF9A66 | Since: 1207
     */
    function setPlayerClothPinFrames(ped: number | Ped): void;
    /**
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
     *
     * Hash: 0x4D51E59243281D80 | Since: 1207
     */
    function setPlayerControl(player: number | string | Player, toggle: boolean, flags: number, bPreventHeadingChange: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5FCC166AEB2FD0F | Since: 1207
     */
    function setPlayerForcedAim(player: number | string | Player, toggle: boolean, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8899C244EBCF70DE | Since: 1207
     */
    function setPlayerHealthRechargeMultiplier(player: number | string | Player, regenRate: number): void;
    /**
     * Simply sets you as invincible (Health will not deplete).
     *
     * Hash: 0xFEBEEBC9CBDF4B12 | Since: 1207
     */
    function setPlayerInvincible(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x462AA1973CBBA75E | Since: 1207
     */
    function setPlayerLockon(player: number | string | Player, toggle: boolean): void;
    /**
     * Affects the range of auto aim target.
     *
     * Hash: 0x3A3CD06597388322 | Since: 1207
     */
    function setPlayerLockonRangeOverride(player: number | string | Player, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEC463B3A11C909E | Since: 1207
     */
    function setPlayerMayNotEnterAnyVehicle(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA35A134038557EC | Since: 1207
     */
    function setPlayerMayOnlyEnterThisVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4CB5A3F18170381 | Since: 1207
     */
    function setPlayerMeleeWeaponDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * Make sure to request the model first and wait until it has loaded.
     *
     * Hash: 0xED40380076A31506 | Since: 1207
     */
    function setPlayerModel(player: number | string | Player, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5EC6BDAEBCA454C | Since: 1207
     */
    function setPlayerNoiseMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0447DEF81CCDFD2 | Since: 1207
     */
    function setPlayerSimulateAiming(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4DE44FA389DCA565 | Since: 1207
     */
    function setPlayerSneakingNoiseMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFECA17CF3343694B | Since: 1207
     */
    function setPlayerStaminaRechargeMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * Sets your targeting mode for when you're on foot.
     * enum eTargetingMode
     * {
     * TARGETING_MODE_INVALID = -1,
     * TARGETING_MODE_CAUSAL, (Wide)
     * TARGETING_MODE_NORMAL,
     * TARGETING_MODE_HARD, (Narrow)
     * TARGETING_MODE_EXPERT (Free Aim)
     * };
     *
     * Hash: 0xD66A941F401E7302 | Since: 1207
     */
    function setPlayerTargetingMode(targetMode: number): void;
    /**
     * Sets the player's team.
     *
     * Hash: 0xE8DD8536F01DE600 | Since: 1207
     */
    function setPlayerTeam(player: number | string | Player, team: number, bRestrictToThisScript: boolean): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x384D4765395E006C | Since: 1207
     */
    function setPlayerWantedLevel(player: number | string | Player, wantedLevel: number, disableNoMission: boolean): void;
    /**
     * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
     *
     * Hash: 0x94D529F7B73D7A85 | Since: 1207
     */
    function setPlayerWeaponDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD15CC2D493160BE3 | Since: 1207
     */
    function setPlayerWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD04AD186CE8BB129 | Since: 1207
     */
    function setPlayerWeaponTypeDamageModifier(player: number | string | Player, weaponHash: number | string, damageModifier: number): void;
    /**
     * If toggle is set to false:
     * The police won't be shown on the (mini)map
     *
     * If toggle is set to true:
     * The police will be shown on the (mini)map
     *
     * Hash: 0x6FD7DD6B63F2820E | Since: 1207
     */
    function setPoliceRadarBlips(toggle: boolean): void;
    /**
     * Swim speed multiplier.
     * Multiplier goes up to 1.49f
     *
     * Hash: 0xBFCEABDE34DA5085 | Since: 1207
     */
    function setSwimMultiplierForPlayer(player: number | string | Player, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7FA719CB54866C2 | Since: 1207
     */
    function setWantedLevelMultiplier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA0C063C422C4355 | Since: 1207
     */
    function simulatePlayerInputGait(player: number | string | Player, speed: number, duration: number, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF8822C55EDDA65B | Since: 1207
     */
    function startPlayerTeleport(player: number | string | Player, pos: Vector3, heading: number): void;
    /**
     * Disables the player's teleportation
     *
     * Hash: 0x0858B86146601BE8 | Since: 1207
     */
    function stopPlayerTeleport(): void;
    /**
     * No comment provided
     *
     * Hash: 0x96722257E5381E00 | Since: 1207
     */
    function suppressWitnessesCallingPoliceThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC39DCE4672CBFBC1 | Since: 1207
     */
    function updatePlayerTeleport(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD0B0B044112BF424 | Since: 1207
     */
    function updateWantedPositionThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x00B156AFEBCC5AE0 | Since: 1207
     */
    function _0x00B156AFEBCC5AE0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x00EB5A760638DB55 | Since: 1207
     */
    function setPlayerWeaponDrawSpeed(player: number | string | Player, weapon: number | string, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x03B4B759A8990505 | Since: 1207
     */
    function _0x03B4B759A8990505(): any;
    /**
     * Sets the stand prompt for a specific player using a predefined text entry. use AddTextEntry for promptTextKey for custom names
     *
     * Hash: 0x06C3DB00B69D5435 | Since: 1232
     */
    function setPlayerPromptLeaveText(player: number | string | Player, promptTextKey: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x06E1FB78B1E59CA5 | Since: 1207
     */
    function _0x06E1FB78B1E59CA5(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x086549F3B0381CB1 | Since: 1207
     */
    function _0x086549F3B0381CB1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0869D499A7848309 | Since: 1207
     */
    function _0x0869D499A7848309(): void;
    /**
     * _SET_PLAYER_*? some multiplier or modifier for health or statmina ?
     *
     * Hash: 0x08E22898A6AF4905 | Since: 1207
     */
    function _0x08E22898A6AF4905(player: number | string | Player): void;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0x0B7803F6F7BB43E0 | Since: 1207
     */
    function _0x0B7803F6F7BB43E0(): any;
    /**
     * Clears the intensity of aura effects applied to entities for a specific player in Deadeye mode based on a flag parameter. This function is used to reset any intensity modifications set by `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`, restoring affected entities' aura intensity to their default state.
     *
     * Hash: 0x0E9057A9DA78D0F8 | Since: 1207
     */
    function clearDeadeyeAuraIntensityWithFlag(player: number | string | Player, bitflag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F4EAF69DA41AF43 | Since: 1207
     */
    function _0x0F4EAF69DA41AF43(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0F9CF06986300875 | Since: 1207
     */
    function _0x0F9CF06986300875(): void;
    /**
     * Sets the melee combat prompt for a specific player using a predefined text entry. use game string or
     * AddTextEntry("custom_text", "Throw a punch") and use custom_text in the native
     *
     * Hash: 0x0FAF95D71ED67ADE | Since: 1207
     */
    function setPlayerMeleePromptText(player: number | string | Player, label: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x107F2A66E1C4C83A | Since: 1207
     */
    function _0x107F2A66E1C4C83A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x113EF458AB6CDA67 | Since: 1207
     */
    function _0x113EF458AB6CDA67(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12E09E278C6C29B7 | Since: 1207
     */
    function _0x12E09E278C6C29B7(): void;
    /**
     * Applies a customizable aura effect to nearby entities when Deadeye is active, with control over aura intensity and additional behavior based on a flag parameter.
     * - flag (int): A flag that determines the behavior of the aura effect and which entities are affected. 2: Applies aura to humans. 4: Applies aura to animals.
     *
     * Hash: 0x131E294EF60160DF | Since: 1207
     */
    function setDeadeyeEntityAuraIntensityWithFlag(player: number | string | Player, intensity: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x14E57F88BA0A07FC | Since: 1207
     */
    function _0x14E57F88BA0A07FC(location: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x19B2C7A6C34FAD54 | Since: 1207
     */
    function _0x19B2C7A6C34FAD54(): any;
    /**
     * it is used to check for that period of time if player damaged any peds only returns the last 3 hits with the entity ids so if you hit the same entity 3 times it will return the same entity id 3 times, if you hit 4 different entities within that time it will return the last 3 entity ids
     * only stores the last 3 hits in the data view buffer
     * duration is in miliseconds
     * you need dataview
     *
     * Hash: 0x1A6E84F13C952094 | Since: 1207
     */
    function getPedsDamagedByPlayerRecently(player: number | string | Player, duration: number, struct: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1AD8AD999C27F44A | Since: 1311
     */
    function _0x1AD8AD999C27F44A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D256EED194F5B58 | Since: 1207
     */
    function _0x1D256EED194F5B58(): void;
    /**
     * Checks if the player can focus on tracks while in Eagle Eye mode. Returns true if the player is able to focus on a track, otherwise false.
     *
     * Hash: 0x1DA5C5B0923E1B85 | Since: 1207
     */
    function eagleEyeCanPlayerFocusOnTrack(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1E8099F449ABB0BA | Since: 1207
     */
    function _0x1E8099F449ABB0BA(): any;
    /**
     * _RESET_PLAYER_A* - _RESET_PLAYER_I*
     *
     * Hash: 0x1F488807BC8E0630 | Since: 1207
     */
    function _0x1F488807BC8E0630(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FDA57E8908F2609 | Since: 1207
     */
    function _0x1FDA57E8908F2609(player: number | string | Player, ped: number | Ped, useSteerassist: boolean): void;
    /**
     * This native is used to determine if the player has an active lockon an entity while riding a horse.
     *
     * Hash: 0x2009F8AB7A5E9D6D | Since: 1207
     */
    function isPlayerOnMountLockonEntity(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x21091B4BEB6376EE | Since: 1207
     */
    function _0x21091B4BEB6376EE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x216BC0D3D2E413D2 | Since: 1207
     */
    function _0x216BC0D3D2E413D2(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x22B3CABEDDB538B2 | Since: 1207
     */
    function _0x22B3CABEDDB538B2(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x22C8B10802301381 | Since: 1207
     */
    function eagleEyeSetRange(player: number | string | Player, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x263D69767F76059C | Since: 1207
     */
    function _0x263D69767F76059C(player: number | string | Player): void;
    /**
     * Retrieves the number of marks placed on a PED when Deadeye mode is active for the specified player.
     *
     * Hash: 0x27AD7162D3FED01E | Since: 1207
     */
    function getNumDeadeyeMarksOnPed(player: number | string | Player, ped: number | Ped): number;
    /**
     * Applies a aura effect to nearby entities when Deadeye is active, based on a flag parameter. This includes humans, animals, vehicles, and horses pulling those vehicles. Additionally, depending on the flag value, the player's appearance may change (e.g., turning gray).
     * - flag (int): A flag that determines the behavior of the aura effect. 2 means people 4 means animal etc.
     *
     * Hash: 0x2B12B6FC8B8772AB | Since: 1207
     */
    function setDeadeyeEntityAuraWithFlag(player: number | string | Player, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BB8D58E88777499 | Since: 1207
     */
    function _0x2BB8D58E88777499(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BEED53B912537D0 | Since: 1207
     */
    function _0x2BEED53B912537D0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C2D287748E8E9B7 | Since: 1207
     */
    function _0x2C2D287748E8E9B7(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E1ABE627C95ED9B | Since: 1207
     */
    function _0x2E1ABE627C95ED9B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2E67707BEC52CA4B | Since: 1207
     */
    function _0x2E67707BEC52CA4B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x310CE349E0C0EC4B | Since: 1207
     */
    function _0x310CE349E0C0EC4B(player: number | string | Player, ped: number | Ped): void;
    /**
     * Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
     *
     * Hash: 0x325434C68358D282 | Since: 1207
     */
    function _0x325434C68358D282(toggle: boolean): void;
    /**
     * Sets whether all trails are hidden during Eagle Eye mode.
     *
     * Hash: 0x330CA55A3647FA1C | Since: 1207
     */
    function eagleEyeSetHideAllTrails(player: number | string | Player, hide: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x35A33783EC3C3448 | Since: 1311
     */
    function _0x35A33783EC3C3448(): void;
    /**
     * Retrieves the ID of the ped that the specified player is currently tracking while in Eagle Eye mode.
     *
     * Hash: 0x3813E11A378958A5 | Since: 1207
     */
    function eagleEyeGetTrackedPedId(player: number | string | Player): number;
    /**
     * Associates a specific interactive focus mode preset between a player and a ped, with a specified location and target entity.
     * To access all available presets, refer to the file located at: `/update_1.rpf/common/data/interactive_focus_mode_presets.meta`
     *
     * Hash: 0x3946FC742AC305CD | Since: 1207
     */
    function addAmbientPlayerInteractiveFocusPreset(player: number | string | Player, ped: number | Ped, preset: string, pos: Vector3, targetEntity: number | Entity, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x39D8D7082BC34B72 | Since: 1311
     */
    function _0x39D8D7082BC34B72(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A8611BD7BDE84F7 | Since: 1207
     */
    function _0x3A8611BD7BDE84F7(): void;
    /**
     * Used in script function INIT_DEADEYE_SLOWDOWN
     *
     * Hash: 0x3ACAC8832E77BC93 | Since: 1207
     */
    function _0x3ACAC8832E77BC93(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AD212429E095EFB | Since: 1207
     */
    function _0x3AD212429E095EFB(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x3B296934DB026873 | Since: 1207
     */
    function _0x3B296934DB026873(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3BB84F812E052C90 | Since: 1207
     */
    function _0x3BB84F812E052C90(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C4AE8506638C7E2 | Since: 1207
     */
    function _0x3C4AE8506638C7E2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D9DA5C9EFD20D88 | Since: 1207
     */
    function _0x3D9DA5C9EFD20D88(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DAABE78A23694BC | Since: 1207
     */
    function _0x3DAABE78A23694BC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x45EF176B532CA851 | Since: 1207
     */
    function _0x45EF176B532CA851(): void;
    /**
     * No comment provided
     *
     * Hash: 0x497A18F8F88AA9D8 | Since: 1207
     */
    function _0x497A18F8F88AA9D8(): void;
    /**
     * _SET_SPECIAL_ABILITY_*
     *
     * Hash: 0x4D1699543B1C023C | Since: 1207
     */
    function _0x4D1699543B1C023C(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x4DBC4873707E8FD6 | Since: 1207
     */
    function _0x4DBC4873707E8FD6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4EC8BE63B8A5D4EF | Since: 1207
     */
    function _0x4EC8BE63B8A5D4EF(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F0D2256AAE94EDA | Since: 1207
     */
    function _0x4F0D2256AAE94EDA(): void;
    /**
     * No comment provided
     *
     * Hash: 0x51139D8C17B16FBC | Since: 1207
     */
    function _0x51139D8C17B16FBC(): any;
    /**
     * _IS_PLAYER_D* - _IS_PLAYER_F*
     *
     * Hash: 0x57028FD99886F6F9 | Since: 1232
     */
    function _0x57028FD99886F6F9(): boolean;
    /**
     * Used in script function INIT_DEADEYE_SLOWDOWN
     *
     * Hash: 0x570A13A4CA2799BB | Since: 1207
     */
    function _0x570A13A4CA2799BB(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x57D9991DC1334151 | Since: 1207
     */
    function _0x57D9991DC1334151(): any;
    /**
     * No comment provided
     *
     * Hash: 0x585CE159DB46FADB | Since: 1207
     */
    function _0x585CE159DB46FADB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B7B97E99F84138B | Since: 1207
     */
    function _0x5B7B97E99F84138B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5C2E5E3CAEEB1F58 | Since: 1207
     */
    function _0x5C2E5E3CAEEB1F58(): void;
    /**
     * _IS_PLAYER_S* - _IS_PLAYER_T*
     *
     * Hash: 0x621D1B289CAF5978 | Since: 1207
     */
    function _0x621D1B289CAF5978(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x628E742FE1F79C4A | Since: 1207
     */
    function _0x628E742FE1F79C4A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x65887EAC535A0B0C | Since: 1207
     */
    function _0x65887EAC535A0B0C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x67659A8F248E0141 | Since: 1207
     */
    function _0x67659A8F248E0141(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6852288340B43239 | Since: 1207
     */
    function _0x6852288340B43239(): any;
    /**
     * No comment provided
     *
     * Hash: 0x694FFA4308060CD1 | Since: 1207
     */
    function _0x694FFA4308060CD1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C54E69516CC56BD | Since: 1207
     */
    function _0x6C54E69516CC56BD(): any;
    /**
     * Add a yellow particle to the entity.
     * entity: entity to apply yellow particle
     * entity2: same entity as entit
     * p2: always
     * p3: always 0
     *
     * Hash: 0x6ECFC621A168424C | Since: 1207
     */
    function eagleEyeAddParticleEffectToEntity(entity1: number | Entity, entity2: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6EDB5D08CB03E763 | Since: 1207
     */
    function _0x6EDB5D08CB03E763(): void;
    /**
     * this native checks if the player has damaged or killed any ped human/animal recently within the duration passed, either by shooting or even using melee
     * duration is in miliseconds
     *
     * Hash: 0x72AD59F7B7FB6E24 | Since: 1207
     */
    function hasPlayerDamagedAnyPedRecently(player: number | string | Player, duration: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x73EB2EF2E92D23BF | Since: 1207
     */
    function _0x73EB2EF2E92D23BF(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x747257807B8721CE | Since: 1207
     */
    function _0x747257807B8721CE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x76F7E1BCD623A429 | Since: 1207
     */
    function _0x76F7E1BCD623A429(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x77B0B6D17A3AC9AA | Since: 1207
     */
    function _0x77B0B6D17A3AC9AA(): void;
    /**
     * No comment provided
     *
     * Hash: 0x77E83C315A3B31CA | Since: 1207
     */
    function _0x77E83C315A3B31CA(): void;
    /**
     * Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
     * _GET_PLAYER_*
     *
     * Hash: 0x7AE93C45EC14A166 | Since: 1207
     */
    function _0x7AE93C45EC14A166(player: number | string | Player, ped: number | Ped): boolean;
    /**
     * _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
     *
     * Hash: 0x818241B3EDA84191 | Since: 1207
     */
    function _0x818241B3EDA84191(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x83C989D5B5B5B466 | Since: 1207
     */
    function _0x83C989D5B5B5B466(): void;
    /**
     * No comment provided
     *
     * Hash: 0x84481018E668E1B8 | Since: 1207
     */
    function _0x84481018E668E1B8(player: number | string | Player, ped: number | Ped): void;
    /**
     * SET_PLAYER_S/T*
     *
     * Hash: 0x8591EE69CC3ED257 | Since: 1207
     */
    function _0x8591EE69CC3ED257(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8702D9150D9FBB3D | Since: 1207
     */
    function _0x8702D9150D9FBB3D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8F44EBB3BA8F6D44 | Since: 1207
     */
    function _0x8F44EBB3BA8F6D44(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9044835BE9D9DBFE | Since: 1207
     */
    function _0x9044835BE9D9DBFE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9073EC5456651A90 | Since: 1207
     */
    function _0x9073EC5456651A90(): void;
    /**
     * No comment provided
     *
     * Hash: 0x908D4B72854C8F62 | Since: 1207
     */
    function _0x908D4B72854C8F62(): void;
    /**
     * _GET_A* - _GET_C*
     *
     * Hash: 0x927861B2C08DBEA5 | Since: 1207
     */
    function _0x927861B2C08DBEA5(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x929DDD5538F3DF1F | Since: 1232
     */
    function _0x929DDD5538F3DF1F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x93624B36E8851B42 | Since: 1207
     */
    function _0x93624B36E8851B42(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x9422743A5BA50E10 | Since: 1207
     */
    function _0x9422743A5BA50E10(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9461A8FAB0378E5B | Since: 1207
     */
    function _0x9461A8FAB0378E5B(): void;
    /**
     * Sets the sit prompt for a specific player using a predefined text entry. use game strings like PLAYER_SIT or use custom with
     * AddTextEntry("sit_custom", "Take a seat")
     * this native must be invoked
     * https://imgur.com/gallery/0x988c9045531b9fce-9bTHgkv
     *
     * Hash: 0x988C9045531B9FCE | Since: 1232
     */
    function setPlayerSitPromptText(playerID: number | string | Player, label: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AFCF9FE1884BF62 | Since: 1207
     */
    function _0x9AFCF9FE1884BF62(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FC5A003FB76EDBD | Since: 1207
     */
    function _0x9FC5A003FB76EDBD(): void;
    /**
     * Sets the player's ability to wear hats based on the specified flag. The flag value determines whether the player can wear all hats or only the ones they own.
     * If the flag is set to 15 and `allow` is true, the player can wear all available hats. However, if you want to restrict the player to wearing only their owned hats (flag 1), you **must first** disable flag 15 by setting it to false, and then set flag 1 to true.
     *
     * Hash: 0xA0C683284DF027C7 | Since: 1207
     */
    function setPlayerHatAccess(player: number | string | Player, flag: number, allow: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA28056CD1B04B250 | Since: 1232
     */
    function _0xA28056CD1B04B250(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA342495F93B7B838 | Since: 1207
     */
    function _0xA342495F93B7B838(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA54000D4BFD90BDE | Since: 1207
     */
    function _0xA54000D4BFD90BDE(): any;
    /**
     * Retrieves whether all trails are currently hidden during Eagle Eye mode for the specified player.
     *
     * Hash: 0xA62BBAAE67A05BB0 | Since: 1207
     */
    function eagleEyeAreAllTrailsHidden(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAAED694CE814817F | Since: 1207
     */
    function _0xAAED694CE814817F(): any;
    /**
     * Enables or disables the Pick Up prompt for a hat on the ground for the specified player. When set to true, the player will see a prompt to pick up the hat if they are near it.
     *
     * Hash: 0xACA45DDCEF6071C4 | Since: 1207
     */
    function setPlayerCanPickupHat(player: number | string | Player, canPickup: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB15CD2F9932C9AB5 | Since: 1207
     */
    function _0xB15CD2F9932C9AB5(): any;
    /**
     * _IS_PLAYER_I* - _IS_PLAYER_P*
     *
     * Hash: 0xB331D8A73F9D2BDF | Since: 1207
     */
    function _0xB331D8A73F9D2BDF(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBA5CA1FEB5DE0DF6 | Since: 1207
     */
    function _0xBA5CA1FEB5DE0DF6(): void;
    /**
     * NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
     * NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
     * NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
     * NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
     * NPEW__ENUM__EMOTE_CATEGORY_GREET
     * NPEW__ENUM__NUM_EMOTE_CATEGORIES
     * NPEW__ENUM__NUM_DISPLAY_TEXTURES
     *
     * Hash: 0xBB6EA5D59E926095 | Since: 1207
     */
    function _0xBB6EA5D59E926095(category: number, emote: number | string): void;
    /**
     * Activates the special ability for the specified player.
     *
     * Hash: 0xBBA140062B15A8AC | Since: 1207
     */
    function specialAbilitySetActivate(player: number | string | Player): void;
    /**
     * Enable/disable a color on the entity in eagle eye mode.
     *
     * Hash: 0xBC02B3D151D3859F | Since: 1207
     */
    function eagleEyeSetRegisteredEntityGlow(entity: number | Entity, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD96185264DDAAEA | Since: 1207
     */
    function _0xBD96185264DDAAEA(): void;
    /**
     * _GET_PLAYER_I*
     *
     * Hash: 0xBEA3A6E5F5F79A6F | Since: 1207
     */
    function _0xBEA3A6E5F5F79A6F(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBED386157F65942C | Since: 1207
     */
    function _0xBED386157F65942C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEFED69CE8317F91 | Since: 1207
     */
    function _0xBEFED69CE8317F91(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC177C827CEFC0AA4 | Since: 1207
     */
    function _0xC177C827CEFC0AA4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4873B053054C04B | Since: 1207
     */
    function _0xC4873B053054C04B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC58CE6824E604DEC | Since: 1207
     */
    function _0xC58CE6824E604DEC(): void;
    /**
     * Disables the previously set interactive focus mode preset for a given player. see `_SET_PLAYER_INTERACTIVE_FOCUS_PRESET - 0x3C1B1807C7A415D6`
     *
     * Hash: 0xC67A4910425F11F1 | Since: 1207
     */
    function disablePlayerInteractiveFocusPreset(player: number | string | Player, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC71D07C96946E263 | Since: 1207
     */
    function _0xC71D07C96946E263(): void;
    /**
     * Hardcoded to return zero/false.
     *
     * Hash: 0xC74EB3F2EC169F6B | Since: 1232
     */
    function _0xC74EB3F2EC169F6B(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC900A465364A85D6 | Since: 1207
     */
    function _0xC900A465364A85D6(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC93A9A45430D484E | Since: 1207
     */
    function _0xC93A9A45430D484E(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCA59808E51FD67C4 | Since: 1207
     */
    function _0xCA59808E51FD67C4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB0B9506BC91E441 | Since: 1207
     */
    function _0xCB0B9506BC91E441(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB61A63AA53D7D22 | Since: 1207
     */
    function _0xCB61A63AA53D7D22(): void;
    /**
     * Activates the Surrender prompt for the specified player in the current frame.
     *
     * Hash: 0xCBB54CC7FFFFAB86 | Since: 1207
     */
    function setPlayerCooperatePromptThisFrame(player: number | string | Player, targetPed: number | Ped, promptOrder: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD7CA3013FD12749 | Since: 1232
     */
    function _0xCD7CA3013FD12749(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDDD4B74660E2335 | Since: 1207
     */
    function _0xCDDD4B74660E2335(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEDC16930526F728 | Since: 1207
     */
    function _0xCEDC16930526F728(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFB2EED4FCB7BD77 | Since: 1207
     */
    function _0xCFB2EED4FCB7BD77(): void;
    /**
     * Sets the weapon that the specified player will aim with. The weapon must already be assigned to the PED. This also determines the weapon order, specifying which weapon the player will automatically switch to when the current weapon runs out of ammo.
     *
     * Hash: 0xCFFC3ECCD7A5CCEB | Since: 1207
     */
    function setPlayerAimWeapon(player: number | string | Player, weapon: number | string, attachSlotId: number): void;
    /**
     * Shows or hides all Pick Up prompts for the specified player, including the prompt for picking up hats from the ground. When set to true, the player will see Pick Up prompts for all nearby items. If set to false, all Pick Up prompts will be hidden.
     *
     * Hash: 0xD1A70C1E8D1031FE | Since: 1207
     */
    function setPlayerPickupPromptVisible(player: number | string | Player, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1F6B912785BFD35 | Since: 1207
     */
    function _0xD1F6B912785BFD35(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD288E02E364972D2 | Since: 1311
     */
    function _0xD288E02E364972D2(): void;
    /**
     * Adds an interactive focus mode preset between a player and a specific set of coordinates with a target entity.
     * To access all available presets, refer to the file located at:update_1.rpf.common.data.interactive_focus_mode_presets.meta
     *
     *
     * Hash: 0xD48227263E3D06AE | Since: 1232
     */
    function addAmbientPlayerInteractiveFocusPresetAtCoords(player: number | string | Player, preset: string, pos: Vector3, targetEntity: number | Entity, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA9D7BE231FE865F | Since: 1207
     */
    function _0xDA9D7BE231FE865F(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDAB6A2FC56B7DE65 | Since: 1207
     */
    function _0xDAB6A2FC56B7DE65(): any;
    /**
     * Remove yellow particle from the entity when it was set using `0x6ECFC621A168424C`
     * entity: entity to remove yellow particles
     * entity2: same entity as entity
     * p2: always 0
     *
     * Hash: 0xDC5E09D012D759C4 | Since: 1207
     */
    function eagleEyeRemoveParticleEffectFromEntity(entity1: number | Entity, entity2: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD33A82352C4652F | Since: 1207
     */
    function _0xDD33A82352C4652F(player: number | string | Player, ped: number | Ped): void;
    /**
     * Checks if the player's Deadeye ability is enabled.
     *
     * Hash: 0xDE6C85975F9D4894 | Since: 1207
     */
    function isSpecialAbilityEnabled(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE1D356F5A66D0FFA | Since: 1232
     */
    function _0xE1D356F5A66D0FFA(emote: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE50A67C33514A390 | Since: 1207
     */
    function _0xE50A67C33514A390(): any;
    /**
     * Clears all Eagle Eye trails that were registered for entities associated with the specified player.
     *
     * Hash: 0xE5D3EB37ABC1EB03 | Since: 1207
     */
    function eagleEyeClearRegisteredTrails(player: number | string | Player): void;
    /**
     * returns true if the player is on a road while riding a horse but at a certain speed, if you go off road then it returns false or if you go too slow like walking state it also returns false
     *
     * Hash: 0xE631EAF35828FA67 | Since: 1207
     */
    function isPlayerMountOnRoad(player: number | string | Player): boolean;
    /**
     * _IS_PLAYER_A* - _IS_PLAYER_BE*
     *
     * Hash: 0xE7F8707269544B29 | Since: 1207
     */
    function _0xE7F8707269544B29(player: number | string | Player, ped: number | Ped): boolean;
    /**
     * Resets any aura effects applied to entities for a specific player in Deadeye mode, returning all aura-related visuals to their default state. This function is primarily used to remove any highlighting or aura effects set by `_SET_DEADEYE_ENTITY_AURA_WITH_FLAG - 0x2B12B6FC8B8772AB` and `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`
     *
     * Hash: 0xE910932F4B30BE23 | Since: 1207
     */
    function resetDeadeyeAuraEffect(player: number | string | Player): void;
    /**
     * Returns the depletion delay value for the Deadeye ability that was previously set using `SetDeadeyeAbilityDepletionDelay - 0x870634493CB4372C`
     *
     * Hash: 0xE92261BD28C0878F | Since: 1207
     */
    function getDeadeyeAbilityDepletionDelay(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xE956C2340A76272E | Since: 1207
     */
    function _0xE956C2340A76272E(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEACEBAAE0A33FB3F | Since: 1207
     */
    function _0xEACEBAAE0A33FB3F(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBB6E27AC2FF32DA | Since: 1207
     */
    function _0xEBB6E27AC2FF32DA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBFF94328FF7A18A | Since: 1207
     */
    function _0xEBFF94328FF7A18A(): void;
    /**
     * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
     *
     * Hash: 0xF21C7A3F3FFBA629 | Since: 1207
     */
    function _0xF21C7A3F3FFBA629(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xF4CB347D7B5EB0FD | Since: 1207
     */
    function _0xF4CB347D7B5EB0FD(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF993373285053D77 | Since: 1207
     */
    function _0xF993373285053D77(): void;
    /**
     * Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
     * _SPECIAL_ABILITY*
     *
     * Hash: 0xFA437FA0738C370C | Since: 1207
     */
    function _0xFA437FA0738C370C(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA7DAAE3959E6C7B | Since: 1207
     */
    function _0xFA7DAAE3959E6C7B(): void;
    /**
     * Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
     * followMode:
     * HORSEFOLLOWMODE_AUTO = 0,
     * HORSEFOLLOWMODE_SIDE_ONLY,
     * HORSEFOLLOWMODE_BEHIND_ONLY,
     * HORSEFOLLOWMODE_BEHIND_AND_SIDE,
     * HORSEFOLLOWMODE_BEHIND_CLOSE
     * followPriority:
     * HORSEFOLLOWPRIORITY_STEER_ASSIST = 0,
     * HORSEFOLLOWPRIORITY_AMBIENT,
     * HORSEFOLLOWPRIORITY_NORMAL,
     * HORSEFOLLOWPRIORITY_HIGH
     *
     * Hash: 0xAC22AA6DF4D1C1DE | Since: 1207
     */
    function addPlayerAsFollowTarget(player: number | string | Player, ped: number | Ped, followMode: number, followPriority: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F2A81C09DA9124A | Since: 1207
     */
    function clearBountyTarget(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x40AB73092C95B5F5 | Since: 1207
     */
    function eagleEyeDisableTrackingTrail(entity: number | Entity, trail: string): void;
    /**
     * false: default eagleeye color
     * true: green eagleeye color
     *
     * Hash: 0x2C41D93F550D5E37 | Since: 1207
     */
    function eagleEyeSetColor(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x907B16B3834C69E2 | Since: 1207
     */
    function eagleEyeSetCustomDistance(entity: number | Entity, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0D6C2A146A5C993 | Since: 1207
     */
    function eagleEyeSetDrainRateModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2AF423D6ECB2C485 | Since: 1207
     */
    function eagleEyeSetFocusOnAssociatedClueTrail(player: number | string | Player, linkedWaypointPed: number | Entity): void;
    /**
     * Sets the behavior of sprinting while the Eagleeye feature is active, determining whether sprinting cancels the effect based on the specified parameter.
     * old name was _EAGLE_EYE_SET_PLUS_FLAG_DISABLED this native can still be used as its declared.
     *
     * Hash: 0xCE285A4413B00B7F | Since: 1207
     */
    function eagleeyeSetSprintBehavior(player: number | string | Player, disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFC85C5199045026 | Since: 1207
     */
    function eagleEyeSetTrackingUpgrade(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FA957D1B55941C1 | Since: 1311
     */
    function eagleEyeSetTrackingUpgrade2(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x95EE1DEE1DCD9070 | Since: 1207
     */
    function enableCustomDeadeyeAbility(player: number | string | Player, enable: boolean): void;
    /**
     * (Un)lock Eagle Eye functionality
     *
     * Hash: 0xA63FCAD3A6FEC6D2 | Since: 1207
     */
    function enableEagleeye(player: number | string | Player, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5A3DD2FF84E1A4B | Since: 1232
     */
    function forceRestScenario(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B6193813E03E4E9 | Since: 1207
     */
    function formatPlayerNameString(string: string): string;
    /**
     * No comment provided
     *
     * Hash: 0x46FA0AE18F4C7FA9 | Since: 1207
     */
    function getActiveHorseForPlayer(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x2E78D822208E740A | Since: 1207
     */
    function getAiPlayerDefenseModifierAgainstAi(player: number | string | Player): number;
    /**
     * p0: mostly Ped Hashes
     *
     * Hash: 0x8E84119A23C16623 | Since: 1207
     */
    function getConstructedDiscoveredCharacterName(model: boolean, outfit: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xCCE7C695C164C35F | Since: 1207
     */
    function getDeadeyeAbilityLevel(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x0772F87D7B07719A | Since: 1207
     */
    function getHasPlayerDiscoveredCharacterNameSp(player: number | string | Player, discoveryHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x32348719DCED2969 | Since: 1207
     */
    function getIsDeadeyeTaggingEnabled(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCCD9B77F70D31C9D | Since: 1207
     */
    function getNumMarkedDeadeyeTargets(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF66A37936D5F3D9 | Since: 1207
     */
    function getPlayerCachedDeadEyeAmount(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xA81D24AE0AF99A5E | Since: 1207
     */
    function getPlayerDeadEye(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x3A6AE4EEE30370FE | Since: 1207
     */
    function getPlayerDeadEyeMeterLevel(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x0317C947D062854E | Since: 1207
     */
    function getPlayerHealth(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x22CD23BB0C45E0CD | Since: 1207
     */
    function getPlayerHealthRechargeMultiplier(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CA6BBD4A7D8145E | Since: 1207
     */
    function getPlayerHuntingWagon(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x592F58BC4D2A2CF3 | Since: 1207
     */
    function getPlayerMaxDeadEye(player: number | string | Player): number;
    /**
     * See _SET_PLAYER_MOOD
     *
     * Hash: 0x054473164C012699 | Since: 1207
     */
    function getPlayerMood(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD03B03737CE6810 | Since: 1207
     */
    function getPlayerOwnerOfMount(mount: number | Ped): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x7C803BDC8343228D | Since: 1207
     */
    function getPlayerOwnerOfVehicle(vehicle: number | Vehicle): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x5EBE38A20BC51C27 | Since: 1207
     */
    function getPlayerPed2(player: number | string | Player): number;
    /**
     * If player has less Dead Eye than required, Dead Eye cant be triggered.
     *
     * Hash: 0x811A748B1BE231BA | Since: 1207
     */
    function getPlayerRequiredDeadEyeAmount(player: number | string | Player): number;
    /**
     * playerResetFlag: See 0x9F9A829C6751F3C7
     *
     * Hash: 0xFE691E89C08937B6 | Since: 1207
     */
    function getPlayerResetFlag(player: number | string | Player, playerResetFlag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAB3773E7AA1E9DCC | Since: 1207
     */
    function getPlayerSpecialAbilityMultiplier(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x0FF421E467373FCF | Since: 1207
     */
    function getPlayerStamina(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x68A0389E0718AC8F | Since: 1207
     */
    function getPlayerStaminaDepletionMultiplier(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x617D3494AD58200F | Since: 1207
     */
    function getPlayerStaminaRechargeMultiplier(player: number | string | Player): number;
    /**
     * Returns true if PromptType is enabled for ped (mount)
     * Params: See 0x0751D461F06E41CE
     *
     * Hash: 0xEA8F168A76A0B9BC | Since: 1207
     */
    function getPlayerUiPromptForPedIsEnabled(player: number | string | Player, ped: number | Ped, promptType: number, promptMode: number): boolean;
    /**
     * Returns false if PromptType is enabled
     * Params: See 0x0751D461F06E41CE
     *
     * Hash: 0x6614F9039BD31931 | Since: 1207
     */
    function getPlayerUiPromptIsDisabled(player: number | string | Player, promptType: number, promptMode: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFE0304050261442C | Since: 1207
     */
    function getPlayerWeaponDamage(player: number | string | Player, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xB48050D326E9A2F3 | Since: 1207
     */
    function getSaddleHorseForPlayer(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xD3F7445CEA2E5035 | Since: 1207
     */
    function getTempPlayerHorse(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xB9050A97594C8832 | Since: 1207
     */
    function getVehicleOwnedByPlayer(player: number | string | Player): number;
    /**
     * Returns -1.0f if no multiplier has been set
     *
     * Hash: 0xA82964B9D8D6A983 | Since: 1207
     */
    function getWantedLevelMultiplier(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A0643B0B4CA276B | Since: 1207
     */
    function isDeadeyeAbilityLocked(player: number | string | Player, abilityType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E6846476906C9DD | Since: 1207
     */
    function isEagleEyeRegisteredForEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE24C64D9ADED2EF5 | Since: 1207
     */
    function isPlayerFollowingTarget(player: number | string | Player, ped: number | Ped): boolean;
    /**
     * Checks if player is focused on any entity
     *
     * Hash: 0x1A51BFE60708E482 | Since: 1207
     */
    function isPlayerFreeFocusing(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x04D7F33640662FA2 | Since: 1207
     */
    function isPlayerInScope(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x45AB66D02B601FA7 | Since: 1207
     */
    function isSecondarySpecialAbilityActive(player: number | string | Player): boolean;
    /**
     * Returns true if eagle eye is enabled for the player
     *
     * Hash: 0xE022CC1B545F1D9F | Since: 1207
     */
    function isSecondarySpecialAbilityEnabled(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB16223CB7DA965F0 | Since: 1207
     */
    function isSpecialAbilityActive(player: number | string | Player): boolean;
    /**
     * Toggle handles wether Deadeye and Eagleeye are infinite or not.
     *
     * Hash: 0x28A13BF6B05C3D83 | Since: 1207
     */
    function modifyInfiniteTrailVision(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB0E622B401884D3 | Since: 1207
     */
    function modifyPlayerDiscoveredCharacterNameMpSetUndiscovered(discoveryHash: number | string): void;
    /**
     * Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
     * promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
     *
     * Hash: 0x0751D461F06E41CE | Since: 1207
     */
    function modifyPlayerUiPrompt(player: number | string | Player, promptType: number, promptMode: number, disabled: boolean): void;
    /**
     * Params: See 0x0751D461F06E41CE
     *
     * Hash: 0xA3DB37EDF9A74635 | Since: 1207
     */
    function modifyPlayerUiPromptForPed(player: number | string | Player, ped: number | Ped, promptType: number, promptMode: number, enabled: boolean): void;
    /**
     * Returns true if the given player has a valid ped.
     *
     * Hash: 0x0760D6F70EBCC05C | Since: 1207
     */
    function networkHasPlayerValidPed(player: number | string | Player): boolean;
    /**
     * Used for setting up eagle eye for entity
     * Params: p2 = re-register or not?
     *
     * Hash: 0x543DFE14BE720027 | Since: 1207
     */
    function registerEagleEyeForEntity(player: number | string | Player, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC67098A1E54ABB0 | Since: 1207
     */
    function registerEagleEyeTrailsForEntity(player: number | string | Player, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C6B89876262A99D | Since: 1207
     */
    function removePlayerAsFollowTarget(player: number | string | Player, ped: number | Ped): void;
    /**
     * Activates EagleEye, called together with 0x28A13BF6B05C3D83
     *
     * Hash: 0x1710BC33CFB83634 | Since: 1207
     */
    function secondarySpecialAbilitySetActive(player: number | string | Player): void;
    /**
     * Deactivates EagleEye, called together with 0xC0B21F235C02139C
     *
     * Hash: 0x64FF4BF9AF59E139 | Since: 1207
     */
    function secondarySpecialAbilitySetDisabled(player: number | string | Player, disabled: boolean): void;
    /**
     * Sets Player's Defense against AI modifier
     *
     * Hash: 0x914071FF93AF2692 | Since: 1207
     */
    function setAiPlayerDefenseModifierAgainstAi(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6ADF821FBF21920E | Since: 1207
     */
    function setBountyTarget(player: number | string | Player, target: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE0C524970892D41 | Since: 1207
     */
    function setBowDrawReductionTimeInDeadeye(player: number | string | Player, drawReductionTime: number): void;
    /**
     * Decreases Stamina bar drain speed by % when drawing a bow.
     *
     * Hash: 0xFE7C9CF376D23342 | Since: 1207
     */
    function setBowStaminaDrainSpeed(player: number | string | Player, staminaDrain: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7761A30432C91297 | Since: 1207
     */
    function setDamageCloseDistanceBonus(player: number | string | Player, closeRangeLowerBound: number, closeRangeUpperBound: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5006C36652D6EC56 | Since: 1207
     */
    function setDamageCloseDistanceBonusTotal(player: number | string | Player, closeDamageBonus: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED591CB17C8BA216 | Since: 1207
     */
    function setDamageFarDistanceBonus(player: number | string | Player, farRangeLowerBound: number, farRangeUpperBound: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F0E3A4434565F8F | Since: 1207
     */
    function setDamageFarDistanceBonusTotal(player: number | string | Player, farDamageBonus: number): void;
    /**
     * Only used in R* SP Script short_update
     *
     * Hash: 0x870634493CB4372C | Since: 1207
     */
    function setDeadeyeAbilityDepletionDelay(player: number | string | Player, delay: number): void;
    /**
     * Max level is 5.
     *
     * Hash: 0xF0FE8E790BFEB5BB | Since: 1207
     */
    function setDeadeyeAbilityLevel(player: number | string | Player, level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2797B8D66DD0EBB8 | Since: 1207
     */
    function setDeadeyeAbilityLocked(player: number | string | Player, abilityType: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x83FCD6921FC8FD05 | Since: 1207
     */
    function setDeadeyeTaggingConfig(player: number | string | Player, filter: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B5DDFB967E5073D | Since: 1207
     */
    function setDeadeyeTaggingEnabled(player: number | string | Player, toggle: boolean): void;
    /**
     * Disables the players ability to be wanted by lawmen
     *
     * Hash: 0x8674D138391FFB1B | Since: 1207
     */
    function setDisablePlayerWantedLevel(player: number | string | Player, disable: boolean): void;
    /**
     * see personaabilities.meta
     * enum ePersonaAbilityFlag
     * {
     * PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
     * PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
     * PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
     * PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
     * PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
     * PERSONA_DEADEYE_INSTANT_RELOAD,
     * PERSONA_USE_PHOSPHOROUS_ROUNDS,
     * PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
     * PERSONA_CONT_DEADEYE_ON_RELOAD,
     * PERSONA_CONT_DEADEYE_ON_SHOOTING,
     * PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
     * PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
     * PERSONA_CONT_DEADEYE_ON_RAGDOLL,
     * PERSONA_USE_EXPLOSIVE_ROUNDS,
     * PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
     * PERSONA_CARRY_TWO_MONEYBAGS,
     * PERSONA_ABILITY_LONG_PICK_HERBS,
     * PERSONA_ABILITY_UNBREAKABLE_LASSO,
     * PERSONA_CONT_DEADEYE_ON_SPRINTING,
     * PERSONA_CANT_DEAL_HEADSHOTS,
     * PERSONA_HANGMAN,
     * PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
     * PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
     * PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
     * PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
     * PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
     * PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
     * PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
     * PERSONA_CONT_EAGLEEYE_ON_SPRINT,
     * PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
     * };
     *
     * Hash: 0x7146CF430965927C | Since: 1207
     */
    function setLocalPlayerPersonaAbilityFlag(flagId: number, toggle: boolean): void;
    /**
     * Focus Fire VFX start for player: p1 = focusfire
     *
     * Hash: 0x5F8E0303C229C84B | Since: 1207
     */
    function setLockonFocusFireVfx(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA6DE0CD15AECBE2 | Since: 1207
     */
    function setMaxWantedLevel2(maxWantedLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B9813ECF7633FE8 | Since: 1207
     */
    function setMountPromptDisabled(disabled: boolean): void;
    /**
     * Seems to work similar to 0xD2CB0FB0FDCB473D
     *
     * Hash: 0x8FBF9EDB378CCB8C | Since: 1207
     */
    function setPedActivePlayerHorse(player: number | string | Player, horse: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2CB0FB0FDCB473D | Since: 1207
     */
    function setPedAsSaddleHorseForPlayer(player: number | string | Player, mount: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x39363DFD04E91496 | Since: 1311
     */
    function setPlayerCanMercyKill(player: number | string | Player, toggle: boolean): void;
    /**
     * damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
     *
     * Hash: 0x78B3D19AF6391A55 | Since: 1207
     */
    function setPlayerDamageInfoOverride(player: number | string | Player, damageInfo: string): void;
    /**
     * Sets stamina core drains peed using ranged damage scale and melee damage scale
     *
     * Hash: 0x497A6539BB0E8787 | Since: 1207
     */
    function setPlayerDefenseModifier(player: number | string | Player, weaponDefenseMod: number, meleeDefenseMod: number): void;
    /**
     * bullet damage modifier: type = 4
     * explosive damage Defense mod: type = 7
     * fire damage Defense mod: type = 8, 15
     *
     * Hash: 0x93F499CAE53FCD05 | Since: 1207
     */
    function setPlayerDefenseTypeModifier(player: number | string | Player, type: number, defenseModifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D3ACE3DE0A2B622 | Since: 1207
     */
    function setPlayerExplosiveWeaponDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C32191D9FB2BDEA | Since: 1207
     */
    function setPlayerHasDiscoveredCharacterNameMp(discoveryHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x946D46CD6DFB9742 | Since: 1207
     */
    function setPlayerHasDiscoveredCharacterNameSp(player: number | string | Player, discoveryHash: number | string): void;
    /**
     * Setting player's Health recharge time to zero forces immediate health regen
     *
     * Hash: 0x535ED4605F89AB6E | Since: 1207
     */
    function setPlayerHealthRechargeTimeModifier(player: number | string | Player, modifier: number): void;
    /**
     * Only applies to HUNTERCART01
     *
     * Hash: 0x6A4404BDFA62CE2C | Since: 1207
     */
    function setPlayerHuntingWagon(player: number | string | Player, wagon: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x98CD760DE43B612E | Since: 1207
     */
    function setPlayerInteractionNegativeResponse(player: number | string | Player, speech: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6366A585659D15C | Since: 1207
     */
    function setPlayerInteractionPositiveResponse(player: number | string | Player, speech: string): void;
    /**
     * Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
     * see SET_PLAYER_TARGETING_MODE for eTargetingMode
     *
     * Hash: 0x19B4F71703902238 | Since: 1207
     */
    function setPlayerInVehicleTargetingMode(targetMode: number): void;
    /**
     * _SET_PLAYER_A* - _SET_PLAYER_C*
     *
     * Hash: 0x43F50A7CD2482156 | Since: 1207
     */
    function setPlayerLassoDamagePerSecond(player: number | string | Player, damage: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4EA69188FBCE6A7D | Since: 1207
     */
    function setPlayerLocalAccuracyFloorModifier(player: number | string | Player, accuracy: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x292F0B6EDC82E3A4 | Since: 1207
     */
    function setPlayerManageBuffSuperJump(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xE133C1EC5300F740 | Since: 1207
     */
    function setPlayerMaxAmmoOverrideForAmmoType(player: number | string | Player, ammoType: number | string, amount: number): void;
    /**
     * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedMood
     *
     * Hash: 0x39BED552DB46FFA9 | Since: 1207
     */
    function setPlayerMood(player: number | string | Player, mood: number): void;
    /**
     * Name could potentially be inaccurate.
     * Used in Script Function HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = true)
     * _SET_PLAYER_L* - _SET_PLAYER_M*
     *
     * Hash: 0xDF93973251FB2CA5 | Since: 1207
     */
    function setPlayerMountStateActive(player: number | string | Player, active: boolean): void;
    /**
     * Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
     *
     * Hash: 0xE6D4E435B56D5BD0 | Since: 1207
     */
    function setPlayerOwnsMount(player: number | string | Player, mount: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0E02AA618020D17 | Since: 1207
     */
    function setPlayerOwnsVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEE80FEDFDD43C9B | Since: 1207
     */
    function setPlayerRemoteAccuracyFloorModifier(player: number | string | Player, accuracy: number): void;
    /**
     * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePlayerResetFlags
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
     *
     * Hash: 0x9F9A829C6751F3C7 | Since: 1207
     */
    function setPlayerResetFlag(player: number | string | Player, playerResetFlag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBADFB5E5E5766FB | Since: 1207
     */
    function setPlayerStaminaSprintDepletionMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * Sets the aura color for entities that the player can target in Deadeye mode, based on a specific hash value. This Native was previously named `SetPlayerStatFlagHash`, but it has been re-evaluated and renamed to better reflect its function in controlling the Deadeye aura color for targeted entities
     * some colors
     * 0: Default aura
     * 1014693585
     * 1936842089
     * 1979474018
     *
     * Hash: 0x768E81AE285A4B67 | Since: 1207
     */
    function setPlayerDeadEyeAuraByHash(player: number | string | Player, auraColorHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x967FF5BC0CFE6D26 | Since: 1207
     */
    function setPlayerTotalAccuracyModifier(player: number | string | Player, accuracy: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF341032E97FB061 | Since: 1207
     */
    function setPlayerTrampleDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x59F0AFF3E0A1B019 | Since: 1207
     */
    function setPlayerWeaponGroupAsInstantKill(player: number | string | Player, weaponGroup: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC79DCC94D0A5897 | Since: 1207
     */
    function setPlayerWeaponGroupDamageModifier(player: number | string | Player, weaponGroup: number | string, modifier: number): void;
    /**
     * Decreases the damage the player receives while on horseback
     * Previous name: _SET_RECEIVED_HORSEBACK_DAMAGE_DECREASE
     *
     * Hash: 0xB427911EA6DFFEF3 | Since: 1207
     */
    function setReceivedDamageTakenOnHorsebackModifier(player: number | string | Player, damageDecrease: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC68829BB3F37023 | Since: 1207
     */
    function setShowInfoCard(player: number | string | Player, showingInfoCard: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE4BCC79C587EBBF | Since: 1207
     */
    function setSpecialAbilityActivationCost(player: number | string | Player, activationCost: number): void;
    /**
     * Only used in R* SP Script short_update
     *
     * Hash: 0xC0B1C05B313693D1 | Since: 1207
     */
    function setSpecialAbilityDisableTimer(player: number | string | Player, timer: number): void;
    /**
     * durationCost: per second
     *
     * Hash: 0xB783F75940B23014 | Since: 1207
     */
    function setSpecialAbilityDurationCost(player: number | string | Player, durationCost: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A498FCA232F71E1 | Since: 1207
     */
    function setSpecialAbilityMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * SPECIAL_ABILITY_NONE = -1,
     * SPECIAL_ABILITY_CAR_SLOWDOWN,
     * SPECIAL_ABILITY_RAGE,
     * SPECIAL_ABILITY_BULLET_TIME,
     * SPECIAL_ABILITY_SNAPSHOT,
     * SPECIAL_ABILITY_INSULT,
     * SPECIAL_ABILITY_DEADEYE,
     * SPECIAL_ABILITY_REVIVE
     *
     * Hash: 0x00BA333DA05ADC23 | Since: 1207
     */
    function setSpecialAbilityType(player: number | string | Player, type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E1DB1F8F5B561DC | Since: 1207
     */
    function setUsedItemEffect(health: number, stamina: number, deadeye: number, healthCore: number, staminaCore: number, deadeyeCore: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x11A7FF918EF6BC66 | Since: 1207
     */
    function setWeaponDegradationModifier(player: number | string | Player, modifier: number): void;
    /**
     * Drains Deadeye by given amount.
     *
     * Hash: 0x200114E99552462B | Since: 1207
     */
    function specialAbilityDrainByAmount(player: number | string | Player, amount: number): void;
    /**
     * Returns Deadeye value from player
     *
     * Hash: 0x029884FB65821B07 | Since: 1207
     */
    function specialAbilityGetAmountCached(player: number | string | Player): number;
    /**
     * Restores Deadeye by given amount.
     * Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
     *
     * Hash: 0x51345AE20F22C261 | Since: 1207
     */
    function specialAbilityRestoreByAmount(player: number | string | Player, amount: number): void;
    /**
     * Only used in R* SP Script short_update
     * Restores Deadeye Outer Ring
     *
     * Hash: 0x2498035289B5688F | Since: 1207
     */
    function specialAbilityRestoreOuterRing(player: number | string | Player, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE637BB8EF017875 | Since: 1207
     */
    function specialAbilitySetDisabled(player: number | string | Player, disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0B21F235C02139C | Since: 1207
     */
    function specialAbilitySetEagleEyeDisabled(player: number | string | Player): void;
    /**
     * Params: p1 = -1 in R* Scripts
     *
     * Hash: 0x1D77B47AFA584E90 | Since: 1207
     */
    function specialAbilityStartRestore(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DAE1380CC5C6451 | Since: 1207
     */
    function unregisterEagleEyeForEntity(player: number | string | Player, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A957912CE2EABD1 | Since: 1207
     */
    function unregisterEagleEyeTrailsForEntity(player: number | string | Player, entity: number | Entity): void;
}
export declare namespace population {
    /**
     * No comment provided
     *
     * Hash: 0x217A54DE2D200305 | Since: 1207
     */
    function clearSpawnerInfoPriority(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6DCC2A3A8825C85 | Since: 1207
     */
    function disableAmbientRoadPopulation(unk: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC90BDF4E5228EA1 | Since: 1207
     */
    function enableAmbientRoadPopulation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1E3171ED0E47564 | Since: 1207
     */
    function getNumModelsInPopulationSet(popSetHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3EAFA1C533B7139E | Since: 1207
     */
    function getPedModelNameInPopulationSet(popSetHash: number | string, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x6B12ED8C77E8567B | Since: 1207
     */
    function getRandomModelFromPopulationSet(popSetHash: number | string, flags: number, pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E6A49D9B519E85C | Since: 1207
     */
    function setPopzonePopulationSet(popZone: any, populationSetHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x60CDE717A6D47769 | Since: 1207
     */
    function setSpawnerInfoPriority(priority: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x08892122769770D5 | Since: 1207
     */
    function _0x08892122769770D5(popZone: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F1861101C9A9944 | Since: 1207
     */
    function _0x0F1861101C9A9944(popZone: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x2161278C6322F740 | Since: 1207
     */
    function _0x2161278C6322F740(includeFlags: number, excludeFlags: number, volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x247F86595D396344 | Since: 1207
     */
    function _0x247F86595D396344(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2660E7720EDC4BD0 | Since: 1311
     */
    function _0x2660E7720EDC4BD0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x324AB2A68AD8AEE5 | Since: 1207
     */
    function _0x324AB2A68AD8AEE5(): void;
    /**
     * No comment provided
     *
     * Hash: 0x578E2FA64E847C60 | Since: 1207
     */
    function _0x578E2FA64E847C60(popZone: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x638FCFC6042A9473 | Since: 1207
     */
    function _0x638FCFC6042A9473(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E6BC0B94F5928F0 | Since: 1207
     */
    function _0x7E6BC0B94F5928F0(popZone: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EC7CD701F872F87 | Since: 1207
     */
    function _0x8EC7CD701F872F87(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4533E3E87125C9E | Since: 1207
     */
    function _0xC4533E3E87125C9E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBBF12EA7C1029B2 | Since: 1207
     */
    function _0xDBBF12EA7C1029B2(): void;
    /**
     * Only used for Special Event (XMAS).
     * _SET_P*
     *
     * Hash: 0xEC116EDB683AD479 | Since: 1207
     */
    function _0xEC116EDB683AD479(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF45E46DEECF7DF6E | Since: 1207
     */
    function _0xF45E46DEECF7DF6E(bitFlag: number): void;
    /**
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
     *
     * Hash: 0xB56D41A694E42E86 | Since: 1207
     */
    function addAmbientAvoidanceRestriction(volume: number, includeFlags: number, excludeFlags: number): void;
    /**
     * flags: see 0xB56D41A694E42E86
     *
     * Hash: 0x18262CAFEBB5FBE1 | Since: 1207
     */
    function addAmbientSpawnRestriction(volume: number, includeFlags: number, excludeFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AC1C64FE46B6D09 | Since: 1207
     */
    function createPopzoneFromVolume(volume: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xA6E6A66FC4CA4224 | Since: 1207
     */
    function deleteScriptPopzone(popZone: any): void;
    /**
     * Returns model hash of the closest fish
     *
     * Hash: 0x595478B3BBC3076D | Since: 1207
     */
    function getRandomFishTypeForLocation(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA5BD585005EFCAD4 | Since: 1207
     */
    function isPopzoneValid(popZone: any): boolean;
    /**
     * flags: see 0xB56D41A694E42E86
     *
     * Hash: 0x74C2B3DC0B294102 | Since: 1207
     */
    function removeAmbientAvoidanceRestriction(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1CFB35069D23C23 | Since: 1207
     */
    function removeAmbientSpawnRestriction(volume: number): void;
    /**
     * Params: p1 = 1 & 2 in R* Scripts, 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
     *
     * Hash: 0xF74E134F40192884 | Since: 1207
     */
    function setPedShouldIgnoreAvoidanceVolumes(ped: number | Ped): void;
}
export declare namespace posse {
    /**
     * No comment provided
     *
     * Hash: 0xC088FF658B2E51DA | Since: 1207
     */
    function posseGetPosseMembershipCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC06CFF658B2E51DA | Since: 1207
     */
    function _0xC06CFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC07CFF658B2E51DA | Since: 1207
     */
    function _0xC07CFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E52DA | Since: 1207
     */
    function _0xC084FF658B2E52DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E53DA | Since: 1207
     */
    function _0xC084FF658B2E53DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E54DA | Since: 1207
     */
    function _0xC084FF658B2E54DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E55DA | Since: 1207
     */
    function _0xC084FF658B2E55DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E61DA | Since: 1207
     */
    function _0xC084FF658B2E61DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E71DA | Since: 1207
     */
    function _0xC084FF658B2E71DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC084FF658B2E81DA | Since: 1207
     */
    function _0xC084FF658B2E81DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC086FF658B2E51DA | Since: 1207
     */
    function _0xC086FF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC086FF658B2E51DB | Since: 1207
     */
    function _0xC086FF658B2E51DB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC087FF658B2E51DA | Since: 1207
     */
    function _0xC087FF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC089FF658B2E51DA | Since: 1207
     */
    function _0xC089FF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08AFF658B2E51DA | Since: 1207
     */
    function _0xC08AFF658B2E51DA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC08AFF658B2E51DB | Since: 1207
     */
    function _0xC08AFF658B2E51DB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC08BFF658B2E51DA | Since: 1207
     */
    function _0xC08BFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08CFF658B2E51DA | Since: 1207
     */
    function _0xC08CFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08DEF658B2E51DA | Since: 1207
     */
    function _0xC08DEF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08DFF658B2E51DA | Since: 1207
     */
    function _0xC08DFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08DFF658B2E51DB | Since: 1207
     */
    function _0xC08DFF658B2E51DB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08EFF658B2E51DB | Since: 1207
     */
    function _0xC08EFF658B2E51DB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08FFF658B2E51DA | Since: 1207
     */
    function _0xC08FFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC08FFF658B2E51DB | Since: 1207
     */
    function _0xC08FFF658B2E51DB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC09CFF658B2E51DA | Since: 1207
     */
    function _0xC09CFF658B2E51DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC184FF658B2E55DA | Since: 1207
     */
    function _0xC184FF658B2E55DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC284FF658B2E55DA | Since: 1207
     */
    function _0xC284FF658B2E55DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC394FF658B2E55DA | Since: 1207
     */
    function _0xC394FF658B2E55DA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC484FF658B2E55DA | Since: 1207
     */
    function _0xC484FF658B2E55DA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC584FF658B2E55DA | Since: 1207
     */
    function _0xC584FF658B2E55DA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC684FF658B2E55DA | Since: 1207
     */
    function _0xC684FF658B2E55DA(): void;
}
export declare namespace propset {
    /**
     * No comment provided
     *
     * Hash: 0x9609DBDDE18FAD8C | Since: 1207
     */
    function createPropSetInstanceAttachedToEntity(hash: number | string, pos: Vector3, entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x7DDDCF815E650FF5 | Since: 1207
     */
    function doesPropSetExist(propSet: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF42DB680A8B2A4D9 | Since: 1207
     */
    function isPropSetFullyLoaded(propSet: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x58E0B01D45CA7357 | Since: 1207
     */
    function _0x58E0B01D45CA7357(): void;
    /**
     * Relocates an existing prop set to specified coordinates and adjusts its heading (rotation) without affecting the prop set's internal layout or structure. The `propSet` parameter identifies the prop set to move. The parameters (`coordsX`, `coordsY`, `coordsZ`) set the new central position of the prop set, while `heading` specifies its rotation around the Z-axis (in degrees). When `onGroundProperly` is true, the prop set automatically aligns accurately with the terrain
     *
     * Hash: 0xC4B67EF3FD65622D | Since: 1207
     */
    function modifyPropsetCoordsAndHeading(propset: number, pos: Vector3, onGroundProperly: boolean, heading: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
     *
     * Hash: 0x75F90E4051CC084C | Since: 1207
     */
    function addAdditionalPropSetForVehicle(vehicle: number | Vehicle, propset: number | string): void;
    /**
     * To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
     * 0xA6A9712955F53D9C returns lightPropset Hashes
     * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
     *
     * Hash: 0xC0F0417A90402742 | Since: 1207
     */
    function addLightPropSetToVehicle(vehicle: number | Vehicle, lightPropset: number | string): void;
    /**
     * List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
     *
     * Hash: 0xD80FAF919A2E56EA | Since: 1207
     */
    function addPropSetForVehicle(vehicle: number | Vehicle, propset: number | string): void;
    /**
     * propsetType: https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
     * placementType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PlacementType
     *
     * Hash: 0xE65C5CBA95F0E510 | Since: 1207
     */
    function createPropSet(propsetType: number | string, pos: Vector3, placementType: number, heading: number, zProbe: number, useVegMod: boolean): any;
    /**
     * Same as _CREATE_PROP_SET
     *
     * Hash: 0x899C97A1CCE7D483 | Since: 1207
     */
    function createPropSet2(propsetType: number | string, pos: Vector3, placementType: number, heading: number, zProbe: number, useVegMod: boolean): any;
    /**
     * Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
     *
     * Hash: 0xACA7FB30269096D4 | Since: 1207
     */
    function createPropSetInstanceAttachedToEntity2(hash: number | string, pos: Vector3, entity: number | Entity): any;
    /**
     * No comment provided
     *
     * Hash: 0x58AC173A55D9D7B4 | Since: 1207
     */
    function deletePropSet(propSet: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x72068021F498E6E3 | Since: 1207
     */
    function doesPropSetOfTypeExistNearCoords(propsetHash: number | string, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC9B4B3A36F81FD75 | Since: 1207
     */
    function doesVehicleHaveAnyLightPropSet(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x53784CEA0159439B | Since: 1207
     */
    function doesVehicleHaveAnyPropSet(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x738271B660FE0695 | Since: 1207
     */
    function getEntitiesFromPropSet(propSet: any, itemSet: any, model: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC061E50F8D299F95 | Since: 1207
     */
    function getPropSetAtCoords(propsetHash: number | string, pos: Vector3): any;
    /**
     * No comment provided
     *
     * Hash: 0xA6A9712955F53D9C | Since: 1207
     */
    function getPropSetModel(propSet: any): number;
    /**
     * Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
     *
     * Hash: 0xCFC0BD09BB1B73FF | Since: 1207
     */
    function getTrainCarriagePropSet(trainCarriage: number | Entity): any;
    /**
     * Returns PropSet handle to be used with _GET_PROP_SET_MODEL
     *
     * Hash: 0xA079300AF757FB1A | Since: 1207
     */
    function getVehicleLightPropSet(vehicle: number | Vehicle): any;
    /**
     * No comment provided
     *
     * Hash: 0xCE2ACD6F602803E5 | Since: 1207
     */
    function getVehiclePropSet(vehicle: number | Vehicle): any;
    /**
     * No comment provided
     *
     * Hash: 0x36F69E7A22655653 | Since: 1207
     */
    function getVehiclePropSetHash(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x48A88FC684C55FDC | Since: 1207
     */
    function hasPropSetLoaded(hash: number | string): boolean;
    /**
     * Same as _HAS_PROP_SET_LOADED
     *
     * Hash: 0xD090ABEF4D6A7D96 | Since: 1207
     */
    function hasPropSetLoaded2(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F3333F0A6900B3C | Since: 1207
     */
    function hasVehicleTrailerPropSetLoaded(vehicle: number | Vehicle, wagonIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CE8AAFE9E433A23 | Since: 1207
     */
    function isPropSetVisible(propSet: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0790473EEE1977D3 | Since: 1207
     */
    function isVehicleLightPropSetLoaded(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x155B2FBE72D7D1D0 | Since: 1207
     */
    function isVehiclePropSetLoaded(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7264F9CA87A9830B | Since: 1207
     */
    function isVehiclePropSetLoadedAdditional(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1964A83B345B4AB | Since: 1207
     */
    function releasePropSet(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE31C0CB1C3186D40 | Since: 1207
     */
    function removeVehicleLightPropSets(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x3BCF32FF37EA9F1D | Since: 1207
     */
    function removeVehiclePropSets(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3DE57A46D5585E9 | Since: 1207
     */
    function requestPropSet(hash: number | string): boolean;
    /**
     * Same as _REQUEST_PROP_SET
     *
     * Hash: 0xE72F591958F3ACAB | Since: 1207
     */
    function requestPropSet2(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x909E3C7FAE539FB1 | Since: 1207
     */
    function setPropSetAsNoLongerNeeded(propSet: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1AB7EEFD3E6EE49 | Since: 1207
     */
    function setPropSetFlag(propSet: any, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D096A5BD02F953E | Since: 1207
     */
    function setPropSetVisible(propSet: any, toggle: boolean): void;
}
export declare namespace queue {
    /**
     * No comment provided
     *
     * Hash: 0x402B5D7D269FF796 | Since: 1207
     */
    function eventQueueIsEmpty(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD87DF294B049211D | Since: 1207
     */
    function eventQueuePop(hash: number | string): void;
}
export declare namespace recording {
    /**
     * nullsub, doesn't do anything
     *
     * Old name: _STOP_RECORDING_THIS_FRAME
     *
     * Hash: 0xA8C44C13419634F2 | Since: 1207
     */
    function replayPreventRecordingThisFrame(): void;
}
export declare namespace replay {
    /**
     * Hardcoded to return true.
     *
     * Hash: 0xCEEC64BD27A59312 | Since: 1207
     */
    function closeVideoEditor(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x9EEB007317FA3B9C | Since: 1207
     */
    function isVideoEditorRunning(): boolean;
    /**
     * Hardcoded to return true.
     *
     * Hash: 0xB3F2829907403C13 | Since: 1207
     */
    function openVideoEditor(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Old name: _IS_INTERIOR_RENDERING_DISABLED
     *
     * Hash: 0x0F838D47DE58EDB2 | Since: 1207
     */
    function replaySystemHasRequestedAScriptCleanup(): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x57C6525034E76EB0 | Since: 1207
     */
    function setScriptsHaveCleanedUpForReplaySystem(): void;
}
export declare namespace save {
    /**
     * No comment provided
     *
     * Hash: 0x3CF46F55C6585590 | Since: 1207
     */
    function savegameIsSavePending(): boolean;
    /**
     * See SAVEGAME_SAVE_SP
     *
     * Hash: 0x1840F3B30ED0105F | Since: 1207
     */
    function savegameSaveMp(savegameType: number | string): boolean;
    /**
     * enum eSavegameType : Hash
     * {
     * SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
     * SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
     * SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
     * SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
     * SAVEGAMETYPE_END_MATCH = 0xE470ED50,
     * SAVEGAMETYPE_END_MISSION = 0x9A444E54,
     * SAVEGAMETYPE_END_SESSION = 0x6D23956C,
     * SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
     * SAVEGAMETYPE_RANKUP = 0xE25F8017,
     * SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
     * SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
     * SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
     * SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
     * };
     *
     * Hash: 0x62C9EB51656D68CE | Since: 1207
     */
    function savegameSaveSp(savegameType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1431540BCA1A1BD2 | Since: 1207
     */
    function savegameHasSaveFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x443174C20B8B9E7F | Since: 1207
     */
    function _0x443174C20B8B9E7F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4FB5869E2B37FC00 | Since: 1207
     */
    function _0x4FB5869E2B37FC00(): void;
    /**
     * No comment provided
     *
     * Hash: 0x81F4E92BE3958364 | Since: 1207
     */
    function _0x81F4E92BE3958364(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E8FFB9E4AD051D2 | Since: 1207
     */
    function _0x8E8FFB9E4AD051D2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BB83C4DD7BE0802 | Since: 1207
     */
    function _0x9BB83C4DD7BE0802(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7ECEBAFBAF997A5 | Since: 1436
     */
    function _0xA7ECEBAFBAF997A5(savegameType: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xA844FEB5C22C2C74 | Since: 1207
     */
    function _0xA844FEB5C22C2C74(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB00CE33465B5406D | Since: 1207
     */
    function _0xB00CE33465B5406D(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC0ABF784590798A9 | Since: 1207
     */
    function _0xC0ABF784590798A9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0B45E983BFC0768 | Since: 1207
     */
    function _0xE0B45E983BFC0768(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8346E62FD7FB962 | Since: 1207
     */
    function _0xE8346E62FD7FB962(): void;
    /**
     * No comment provided
     *
     * Hash: 0xED4B0C1057892B2E | Since: 1207
     */
    function _0xED4B0C1057892B2E(): void;
    /**
     * Does the exact same as 0x529B9CCD0972AF4E
     *
     * Hash: 0xBB7F4273C186BC4B | Since: 1207
     */
    function savegameGetBool(variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x35DEFECAE36D4FAE | Since: 1207
     */
    function savegameGetFloat(variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x529B9CCD0972AF4E | Since: 1207
     */
    function savegameGetInt(variableName: string): void;
    /**
     * Does the exact same as 0x529B9CCD0972AF4E
     * Commonly used with time/timestamps
     *
     * Hash: 0x529B9CCD0972AF4D | Since: 1207
     */
    function savegameGetInt2(variableName: string): void;
    /**
     * Does the exact same as 0x529B9CCD0972AF4E
     * Commonly used with enums and flags
     *
     * Hash: 0xB25B5A375BE5BE26 | Since: 1207
     */
    function savegameGetInt3(variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A10D6506B2F2C63 | Since: 1207
     */
    function savegameGetTextLabel23(variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4845E7E7643A908C | Since: 1207
     */
    function savegameGetTextLabel31(variableName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x186608A2AC6F9E88 | Since: 1207
     */
    function savegameGetTextLabel63(variableName: string): void;
}
export declare namespace scripts {
    /**
     * No comment provided
     *
     * Hash: 0xAC8FAB22A914AE34 | Since: 1207
     */
    function awardsGetResultItem(rpcGuid: any, awardHash: number | string, itemIndex: number, outResultItem: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC2C927F5C264243 | Since: 1207
     */
    function bailToLandingPage(bailCode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE98204D3C25AE14C | Since: 1207
     */
    function bailWithPassThroughParams(params: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AE1DFF337A86FDE | Since: 1207
     */
    function bgDoesLaunchParamExist(scriptIndex: number): boolean;
    /**
     * Deletes the given context from the background scripts context map.
     *
     * Hash: 0x3ABF7BA1C3E2C8CF | Since: 1207
     */
    function bgEndContext(contextName: string): void;
    /**
     * Hashed version of BG_END_CONTEXT
     *
     * Hash: 0x6D1431744182CDE8 | Since: 1207
     */
    function bgEndContextHash(contextHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x55C40B7592BAD213 | Since: 1207
     */
    function bgGetLaunchParamValue(scriptIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x829CD22E043A2577 | Since: 1207
     */
    function bgGetScriptIdFromNameHash(): number;
    /**
     * Returns true if GtaThread+0x77C is equal to 1.
     *
     * Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
     *
     * Hash: 0x2238EC3EC631AB1F | Since: 1207
     */
    function bgIsExitflagSet(): boolean;
    /**
     * Sets bit 0 in GtaThread+0x784
     *
     * Hash: 0x4858148E3B8A75D0 | Since: 1207
     */
    function bgSetExitflagResponse(): void;
    /**
     * Inserts the given context into the background scripts context map.
     *
     * Hash: 0x49BA5678BA040CA7 | Since: 1207
     */
    function bgStartContext(contextName: string): void;
    /**
     * Hashed version of BG_START_CONTEXT
     *
     * Hash: 0x2EB67D564DCC09D5 | Since: 1207
     */
    function bgStartContextHash(contextHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F050A3FF8738245 | Since: 1207
     */
    function countParticipantBits(value: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x462C687BEA254BD9 | Since: 1207
     */
    function countPlayerBits(value: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x552B171E3F69E5AE | Since: 1207
     */
    function doesScriptExist(scriptName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA34E89749F628284 | Since: 1207
     */
    function doesScriptWithNameHashExist(scriptHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF975BC4435A0FA3 | Since: 1207
     */
    function doesThreadExist(threadId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFA3B530A5CC693D5 | Since: 1207
     */
    function getBlockOfPlayerBits(value: any): number;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
     *
     * Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
     *
     * Hash: 0xA85E614430EFF816 | Since: 1207
     */
    function getEventAtIndex(eventGroup: number, eventIndex: number): number;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
     *
     * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
     *
     * https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
     *
     * Hash: 0x57EC5FA4D4D6AFCA | Since: 1207
     */
    function getEventData(eventGroup: number, eventIndex: number, eventData: any, eventDataSize: number): boolean;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
     *
     * Hash: 0xC9F59C0A710ECD34 | Since: 1207
     */
    function getEventExists(eventGroup: number, eventType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC2C927F5C264960 | Since: 1207
     */
    function getHashOfThisScriptName(): number;
    /**
     * No comment provided
     *
     * Hash: 0x55525C346BEF6960 | Since: 1207
     */
    function getIdOfThisThread(): number;
    /**
     * No comment provided
     *
     * Hash: 0x323DAF00687E0F28 | Since: 1207
     */
    function getNoLoadingScreen(): boolean;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
     *
     * Hash: 0x5CE8DE5909565748 | Since: 1207
     */
    function getNumberOfEvents(eventGroup: number): number;
    /**
     * Gets the number of instances of the specified script is currently running.
     *
     * Actually returns numRefs - 1.
     * if (program)
     * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
     * return v3;
     *
     * Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
     *
     * Hash: 0x8E34C953364A76DD | Since: 1207
     */
    function getNumberOfThreadsRunningTheScriptWithThisHash(scriptHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD92FA81B64920E85 | Since: 1207
     */
    function getThreadExistenceDetails(threadId: number, threadExists: boolean, hasScriptHandler: boolean): void;
    /**
     * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
     *
     * Hash: 0xE97BD36574F8B0A6 | Since: 1207
     */
    function hasScriptLoaded(scriptName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA5D8E0C2F3C7EEBC | Since: 1207
     */
    function hasScriptWithNameHashLoaded(scriptHash: number | string): boolean;
    /**
     * Waiting for child scripts to terminate / waiting for collapse of child scripts
     *
     * Hash: 0x380FFA15B72408FB | Since: 1207
     */
    function haveAllChildScriptsTerminated(): boolean;
    /**
     * Same as GET_IS_LOADING_SCREEN_ACTIVE
     *
     * Hash: 0xB54ADBE65D528FCB | Since: 1207
     */
    function isLoadingScreenVisible(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x46E9AE36D8FA6417 | Since: 1207
     */
    function isThreadActive(threadId: number, ignoreKilledState: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9E4EF615E307FBBE | Since: 1207
     */
    function isThreadExitRequested(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x46ED607DDD40D7FE | Since: 1207
     */
    function requestScript(scriptName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6B9CE3F8D5B9B74 | Since: 1207
     */
    function requestScriptWithNameHash(scriptHash: number | string): void;
    /**
     * If the function returns 0, the end of the iteration has been reached.
     *
     * Hash: 0x3CE3FB167E837D7C | Since: 1207
     */
    function scriptThreadIteratorGetNextThreadId(): number;
    /**
     * Starts a new iteration of the current threads.
     * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
     *
     * Hash: 0x39382EB8DCD8684D | Since: 1207
     */
    function scriptThreadIteratorReset(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6DFB8C04C86D5A5 | Since: 1207
     */
    function setBlockOfPlayerBits(value: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x4768D5252EAEB76F | Since: 1207
     */
    function setEventFlagForDeletion(eventGroup: number, eventIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CB83156AA038F95 | Since: 1207
     */
    function setNoLoadingScreen(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0086D3067E1CFD1C | Since: 1207
     */
    function setScriptAsNoLongerNeeded(scriptName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x50723A1567C8361E | Since: 1207
     */
    function setScriptWithNameHashAsNoLongerNeeded(scriptHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC179D7E8886DADF | Since: 1207
     */
    function shutdownLoadingScreen(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE81651AD79516E48 | Since: 1207
     */
    function startNewScript(scriptName: string, stackSize: number): number;
    /**
     * return : script thread id, 0 if failed
     * Pass pointer to struct of args in p1, size of struct goes into p2
     *
     * Hash: 0xB8BA7F44DF1575E1 | Since: 1207
     */
    function startNewScriptWithArgs(scriptName: string, args: any, argCount: number, stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xEB1C67C3A5333A92 | Since: 1207
     */
    function startNewScriptWithNameHash(scriptHash: number | string, stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC4BB298BD441BE78 | Since: 1207
     */
    function startNewScriptWithNameHashAndArgs(scriptHash: number | string, args: any, argCount: number, stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x778D4733E0F2F265 | Since: 1207
     */
    function stopDisplayingMpTransitionLoadingScreens(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E8B6D17FF91CD59 | Since: 1207
     */
    function terminateThisThread(): void;
    /**
     * No comment provided
     *
     * Hash: 0x87ED52AE40EA1A52 | Since: 1207
     */
    function terminateThread(threadId: number): void;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
     *
     * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
     *
     * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
     *
     * Hash: 0x5AE99C571D5BBE5D | Since: 1207
     */
    function triggerScriptEvent(eventGroup: number, eventData: any, eventDataSize: number, scriptMetadataIndex: number, playerBits: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A79C81C418F5D38 | Since: 1207
     */
    function _0x0A79C81C418F5D38(): any;
    /**
     * Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
     *
     * Hash: 0x11B0A0B282FA9B10 | Since: 1207
     */
    function _0x11B0A0B282FA9B10(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BDB5A07307F6929 | Since: 1207
     */
    function _0x1BDB5A07307F6929(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C5EB3C27F7508CB | Since: 1207
     */
    function _0x1C5EB3C27F7508CB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x29FB4CE89472C3CB | Since: 1207
     */
    function _0x29FB4CE89472C3CB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x42A429CDFED6D99D | Since: 1207
     */
    function _0x42A429CDFED6D99D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5827BE85A87B073D | Since: 1207
     */
    function _0x5827BE85A87B073D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x64F765D9A1F8F02C | Since: 1207
     */
    function _0x64F765D9A1F8F02C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F700A4BF7C3331B | Since: 1207
     */
    function _0x6F700A4BF7C3331B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x76CBCD9EADC00955 | Since: 1207
     */
    function _0x76CBCD9EADC00955(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA88E1D7FA1E20080 | Since: 1207
     */
    function _0xA88E1D7FA1E20080(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE4ABE20DCE7C7CFE | Since: 1207
     */
    function _0xE4ABE20DCE7C7CFE(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7282390542F570D | Since: 1207
     */
    function _0xE7282390542F570D(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF9E951A1E5517C06 | Since: 1207
     */
    function _0xF9E951A1E5517C06(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFDDF802279BE128 | Since: 1207
     */
    function _0xFFDDF802279BE128(): void;
    /**
     * goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
     *
     * Hash: 0x7D654266025E921B | Since: 1207
     */
    function activateGoalContext(goalContext: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9467E41DAB1CF2C | Since: 1207
     */
    function awardsGetUnlockClaimData(rpcGuid: any, awardHash: number | string, dataIndex: number, outUnlockData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE7D814CFA181B56 | Since: 1207
     */
    function bgReloadAllBackgroundScripts(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE544B7EC0C187CC | Since: 1207
     */
    function clearAllPlayerBits(value: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xD426E2E3288469D6 | Since: 1207
     */
    function clearPlayerBitAtIndex(value: any, bitIndex: number): void;
    /**
     * goalContext: see _ACTIVATE_GOAL_CONTEXT
     *
     * Hash: 0x50B72A754EE64A71 | Since: 1207
     */
    function deactivateGoalContext(goalContext: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E5B70E53DB661E5 | Since: 1207
     */
    function displayLoadingScreens(gamemodeName: string, title: string, subtitle: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x66EE5B93C308F734 | Since: 1207
     */
    function doesCompressedGlobalBlockBufferExist(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42A7EB5C814C2DE0 | Since: 1207
     */
    function getGlobalBlockCanBeAccessed(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x724CB89D35B283D0 | Since: 1207
     */
    function getHashOfThread(threadId: number): number;
    /**
     * enum eThreadExitReason
     * {
     * THREAD_EXIT_REASON_NONE,
     * THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
     * THREAD_EXIT_REASON_SESSION_MERGE,
     * THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
     * THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
     * };
     *
     * Hash: 0x54AE4FDEEFEAB77E | Since: 1207
     */
    function getThreadExitReason(): number;
    /**
     * No comment provided
     *
     * Hash: 0x179A6F0EE2E79026 | Since: 1207
     */
    function isAnyPlayerBitSet(playerBits: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x20B7F69B40C6B755 | Since: 1207
     */
    function isBackgroundScript(threadId: number): boolean;
    /**
     * goalContext: see _ACTIVATE_GOAL_CONTEXT
     *
     * Hash: 0x7409669C5ED50144 | Since: 1207
     */
    function isGoalContextActive(goalContext: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x72B2E00C9BAC6789 | Since: 1207
     */
    function isPlayerBitSetAtIndex(value: any, bitIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30BED53646C86D11 | Since: 1207
     */
    function isThreadExitRequestedForThreadWithThisId(threadId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF1E9045F5AA9E428 | Since: 1311
     */
    function lootGetLootClaimData(rpcGuid: any, dataIndex: number, outLootData: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4293B44A855F82CC | Since: 1207
     */
    function lootGetResultItem(rpcGuid: any, itemIndex: number, outResultItem: any): boolean;
    /**
     * Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
     *
     * Hash: 0xAC9FF854BD4BA9B5 | Since: 1311
     */
    function netRpcGuidToString(netRpcGuid: any): string;
    /**
     * No comment provided
     *
     * Hash: 0x7DE4643157AD646C | Since: 1207
     */
    function requestThreadExit(threadId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7423F7835770F619 | Since: 1207
     */
    function requestThreadExitForAllThreadsWithThisName(nameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC3914A99B4A5FDF | Since: 1207
     */
    function restoreGlobalBlock(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x11986B05885564D2 | Since: 1207
     */
    function setAllGlobalBlocksHaveBeenLoaded(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x20F4CB76689ACDBC | Since: 1207
     */
    function setAllPlayerBits(value: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xE66F392BFCE734AF | Since: 1207
     */
    function setGlobalBlockCanBeAccessed(index: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x31010318BA9897AC | Since: 1207
     */
    function setPlayerBitAtIndex(value: any, bitIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB952A3AC41D58F2F | Since: 1207
     */
    function storeGlobalBlock(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8B61C950A148FFA2 | Since: 1207
     */
    function triggerScriptEvent2(eventData: any, eventDataSize: number, scriptMetadataIndex: number, threadId: number): void;
}
export declare namespace shapetest {
    /**
     * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
     *
     * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
     *
     * enum eShapeTestStatus
     * {
     * SHAPETEST_STATUS_NONEXISTENT,
     * SHAPETEST_STATUS_RESULTS_NOTREADY,
     * SHAPETEST_STATUS_RESULTS_READY
     * };
     *
     * Hash: 0xEDE8AC7C5108FB1D | Since: 1207
     */
    function getShapeTestResult(shapeTestHandle: number, hit: boolean, endCoords: Vector3, surfaceNormal: Vector3, entityHit: number | Entity): number;
    /**
     * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
     *
     * Hash: 0x377906D8A31E5586 | Since: 1207
     */
    function startExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entityToIgnore: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xFE466162C4401D18 | Since: 1207
     */
    function startShapeTestBox(pos: Vector3, dimensionsX: number, dimensionsY: number, dimensionsZ: number, rot: Vector3, rotationOrder: number, flags: number, entityToIgnore: number | Entity, options: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x28579D1B8F8AAC80 | Since: 1207
     */
    function startShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entityToIgnore: number | Entity): number;
    /**
     * Asynchronously starts a line-of-sight (raycast) world probe shape test.
     *
     * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
     *
     * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used. flags used are mostly 83 and 3167
     *
     * Hash: 0x7EE9F5D83DD4F90E | Since: 1207
     */
    function startShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
    /**
     * Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
     *
     * Hash: 0x9839013D8B6014F1 | Since: 1207
     */
    function startShapeTestMouseCursorLosProbe(pVec1: Vector3, pVec2: Vector3, flag: number, entity: number | Entity, flag2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAA5B7C8309F73230 | Since: 1207
     */
    function startShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x04AA59CA40571C2E | Since: 1207
     */
    function _0x04AA59CA40571C2E(): any;
}
export declare namespace socialclub {
    /**
     * No comment provided
     *
     * Hash: 0x89D9BDE7334B110F | Since: 1207
     */
    function scCommunityEventGetDisplayName(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x11EA52CAD1B55910 | Since: 1207
     */
    function scCommunityEventGetDisplayNameById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85EA0BEC7B1F7622 | Since: 1207
     */
    function scCommunityEventGetDisplayNameForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD635DF6BAA5A6017 | Since: 1207
     */
    function scCommunityEventGetEventId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x03C03ABBABBEF752 | Since: 1207
     */
    function scCommunityEventGetEventIdForType(): number;
    /**
     * No comment provided
     *
     * Hash: 0x060BBAD634C2B44B | Since: 1207
     */
    function scCommunityEventGetExtraDataFloat(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x91C9E2A0F9DD6DD4 | Since: 1207
     */
    function scCommunityEventGetExtraDataFloatById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1BDB56DB258F052D | Since: 1207
     */
    function scCommunityEventGetExtraDataFloatForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4411D4D6B81438E | Since: 1207
     */
    function scCommunityEventGetExtraDataInt(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7C981DE05A7403A0 | Since: 1207
     */
    function scCommunityEventGetExtraDataIntById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3519CC3525319A96 | Since: 1207
     */
    function scCommunityEventGetExtraDataIntForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9F6DCD0C939C71E9 | Since: 1207
     */
    function scCommunityEventGetExtraDataString(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x049D2196D9D11184 | Since: 1207
     */
    function scCommunityEventGetExtraDataStringById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8FC3B2432E8229D | Since: 1207
     */
    function scCommunityEventGetExtraDataStringForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCBF743C984695CF3 | Since: 1207
     */
    function scCommunityEventIsActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62B384FEFDE06817 | Since: 1207
     */
    function scCommunityEventIsActiveById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x09937EB0CEBC2F9F | Since: 1207
     */
    function scCommunityEventIsActiveForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74CF39E030A382C4 | Since: 1207
     */
    function scInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF92537C4DDC1241 | Since: 1207
     */
    function scInboxGetMessageTypeAtIndex(msgIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x8EF0F633280C0663 | Since: 1207
     */
    function scInboxGetTotalNumMessages(): number;
    /**
     * No comment provided
     *
     * Hash: 0x95BB39C4DA99F348 | Since: 1207
     */
    function scInboxMessageGetDataInt(context: string, out: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x66F77FD58506FF6B | Since: 1207
     */
    function scInboxMessageGetDataString(context: string, out: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x176D077685CD83E4 | Since: 1207
     */
    function scInboxMessageGetRawTypeAtIndex(): string;
    /**
     * No comment provided
     *
     * Hash: 0x63CAC501FFF66DC4 | Since: 1207
     */
    function scInboxSetMessageAsReadAtIndex(msgIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA31DAFCDC33775E9 | Since: 1207
     */
    function scPresenceAttrSetFloat(attrHash: number | string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00000000467F4CAA | Since: 1207
     */
    function scPresenceAttrSetFloatEx(attrName: string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0000000085488C49 | Since: 1207
     */
    function scPresenceAttrSetIntEx(attrName: string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00000000EB2D93B3 | Since: 1207
     */
    function scPresenceAttrSetStringEx(attrName: string, value: string): boolean;
    /**
     * Starts a task to check an entered string for profanity on the ROS/Social Club services.
     *
     * Hash: 0x9C74AC9D87B3FFF4 | Since: 1207
     */
    function scProfanityCheckString(string: string, token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A10BCD0C8AA0B82 | Since: 1207
     */
    function scProfanityGetCheckIsPending(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x08C8052AF40C4247 | Since: 1207
     */
    function scProfanityGetCheckIsValid(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF302973BB8BE70E6 | Since: 1207
     */
    function scProfanityGetStringPassed(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CF3BFB99EBBE5B1 | Since: 1207
     */
    function scProfanityGetStringStatus(token: number): number;
}
export declare namespace socialclubfeed {
    /**
     * No comment provided
     *
     * Hash: 0x068332D20CB6F897 | Since: 1232
     */
    function scFeedHubHasNewData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFB64240F6B17817 | Since: 1207
     */
    function scFeedSubmitPresetMessage(type: number, subType: number): number;
}
export declare namespace spactionproxy {
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC98BEF | Since: 1207
     */
    function spactionproxyGetNextPendingBuyAction(data: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC97BEF | Since: 1207
     */
    function spactionproxyGetNextPendingCraftingAction(data: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC91BEC | Since: 1207
     */
    function spactionproxyManagerIsFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC91BED | Since: 1207
     */
    function spactionproxyManagerIsReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC94BEF | Since: 1207
     */
    function spactionproxyProcessAction(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC91BEE | Since: 1207
     */
    function spactionproxyStartManager(): boolean;
}
export declare namespace stats {
    /**
     * No comment provided
     *
     * Hash: 0x808712E428F697B8 | Since: 1232
     */
    function chalAchievementGetProgressInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0x77B97A827739D434 | Since: 1232
     */
    function chalAchievementIsComplete(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x86922D8C02FB7703 | Since: 1207
     */
    function chalAddGoalProgressFloat(chalHash: number | string, goalHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x86922D8C02FB7705 | Since: 1232
     */
    function chalAddGoalProgressFloatByScoreId(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDBD560745B1EE9A | Since: 1207
     */
    function chalAddGoalProgressInt(chalHash: number | string, goalHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDBD560745B1EE9C | Since: 1207
     */
    function chalAddGoalProgressIntByScoreId(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x58CB53DB63F84DEA | Since: 1207
     */
    function chalGetMaxRanks(chalHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x58CB53DB63F84DE9 | Since: 1207
     */
    function chalGetNumRanksCompleted(chalHash: number | string): number;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
     *
     * Hash: 0x04DAC3929796EB87 | Since: 1207
     */
    function chalIsGoalActive(chalHash: number | string, goalHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x97E18E7C098626DE | Since: 1207
     */
    function chalMissionAddGoalProgressInt(missionHash: number | string, goalHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B0576DD3A75E58D | Since: 1207
     */
    function chalMissionGetNumGoals(missionHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA785A52B59B7E7B2 | Since: 1207
     */
    function chalMissionGetNumGoalsComplete(missionHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC0BB774787BBF301 | Since: 1207
     */
    function chalMissionIsGoalComplete(missionHash: number | string, goalHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4ABF7E4DB6279E8F | Since: 1207
     */
    function chalNetStartChal(chalHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3FCB47344DCB638 | Since: 1207
     */
    function chalNetStartGoal(chalHash: number | string, goalHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x43B0163154A50C86 | Since: 1207
     */
    function chalNetStopChal(chalHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x00CE6A93324A590B | Since: 1207
     */
    function chalNetStopGoal(chalHash: number | string, goalHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF63DF9EE16393343 | Since: 1436
     */
    function chalSetGoalDisabled(chalHash: number | string, goalHash: number | string, disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDBD560745B1EE9B | Since: 1207
     */
    function chalSetGoalProgressInt(chalHash: number | string, goalHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2A38826E5886E83 | Since: 1207
     */
    function statstrackerDeedStarted(): void;
    /**
     * No comment provided
     *
     * Hash: 0x01F4D242765C6B24 | Since: 1207
     */
    function statstrackerIsInitialized(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6B1044FDC2B09101 | Since: 1207
     */
    function statAddBountyTarget(unlockHash: number | string, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x262EF7CF49CF1EB9 | Since: 1207
     */
    function statBountyCaptured(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB22F05732F72F70C | Since: 1207
     */
    function statBountyEscaped(ped: number | Ped): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x11B5E6D2AE73F48F | Since: 1207
     */
    function statIdGetBool(statId: any, value: boolean): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x8B0FACEFC36C824C | Since: 1207
     */
    function statIdGetDate(statId: any, date: any): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0xD7AE6C9C9C6AC54D | Since: 1207
     */
    function statIdGetFloat(statId: any, value: number): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x767FBC2AC802EF3E | Since: 1207
     */
    function statIdGetInt(statId: any): boolean;
    /**
     * struct StatId
     * {
     * alignas(8) Hash BaseId;
     * alignas(8) Hash PermutationId;
     * }
     *
     * Hash: 0xC48FE1971C9743FF | Since: 1207
     */
    function statIdIsValid(statId: any): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x3B5107353267D7A1 | Since: 1207
     */
    function statIdSetBool(statId: any, value: boolean): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x1FAE9B2FAA2DFE06 | Since: 1207
     */
    function statIdSetDate(statId: any, date: any): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x481BDF6A10C5EF68 | Since: 1207
     */
    function statIdSetFloat(statId: any, value: number): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x05060A54834F2382 | Since: 1207
     */
    function statIdSetGxtLabel(statId: any, label: string): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0xA4DDF5DF95E65EEE | Since: 1207
     */
    function statIdSetInt(statId: any, value: number): boolean;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x34B22DE38477EDB4 | Since: 1207
     */
    function statIdSetToPosseId(statId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D31051A4CA83787 | Since: 1311
     */
    function statPhotographTaken(itemset: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD0D69C65BB0E8B9 | Since: 1311
     */
    function statRegisterLegendaryAnimalDeed(deedHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA61BA6205A3F5A8 | Since: 1207
     */
    function weeklyCollectibleGetItemInSet(chalHash: number | string, setIndex: number, itemIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x610783F646894D25 | Since: 1207
     */
    function weeklyCollectibleGetItemSetBuyAward(chalHash: number | string, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBFFA88522FF0F730 | Since: 1207
     */
    function weeklyCollectibleGetItemSetLabel(chalHash: number | string, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x7D675C9DDDB365BE | Since: 1207
     */
    function weeklyCollectibleGetNumItemsInSet(chalHash: number | string, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x8F5317729F791D10 | Since: 1207
     */
    function weeklyCollectibleGetNumSets(chalHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x025E98E317652CDD | Since: 1207
     */
    function _0x025E98E317652CDD(): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x0FEE2561120F3333 | Since: 1207
     */
    function _0x0FEE2561120F3333(statId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x218F7710A139D012 | Since: 1207
     */
    function _0x218F7710A139D012(): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x302E71C1D9EE75B9 | Since: 1207
     */
    function _0x302E71C1D9EE75B9(statId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x378D3B1B11D9385B | Since: 1207
     */
    function _0x378D3B1B11D9385B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AEABAE3F3C7600C | Since: 1207
     */
    function _0x3AEABAE3F3C7600C(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3EB2791A1FBC8A42 | Since: 1207
     */
    function _0x3EB2791A1FBC8A42(statItem: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F6FD87D2030ADC6 | Since: 1207
     */
    function _0x3F6FD87D2030ADC6(): string;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x4DAC398297981B87 | Since: 1207
     */
    function _0x4DAC398297981B87(): boolean;
    /**
     * Only used in R* Script net_char_creator
     *
     * Hash: 0x4E463A3CDEFFFE96 | Since: 1207
     */
    function _0x4E463A3CDEFFFE96(): void;
    /**
     * Only used in R* Script net_char_creator
     *
     * Hash: 0x4F2D5FA23DB992DE | Since: 1207
     */
    function _0x4F2D5FA23DB992DE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4FCBCC0584CD08E9 | Since: 1207
     */
    function _0x4FCBCC0584CD08E9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6123E2832C34243D | Since: 1207
     */
    function _0x6123E2832C34243D(): void;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x8312F09C56149A8A | Since: 1207
     */
    function _0x8312F09C56149A8A(animalType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BA3D7B1E83EF803 | Since: 1207
     */
    function _0x8BA3D7B1E83EF803(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8C889E4CBB4B2356 | Since: 1207
     */
    function _0x8C889E4CBB4B2356(ped: number | Ped): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x91A4F58E01ED5E4C | Since: 1207
     */
    function _0x91A4F58E01ED5E4C(statId: any, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x99230691875FC218 | Since: 1207
     */
    function _0x99230691875FC218(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D0F5D2E1951CD84 | Since: 1207
     */
    function _0x9D0F5D2E1951CD84(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA2E2BEA4E83F6270 | Since: 1207
     */
    function _0xA2E2BEA4E83F6270(): any;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0xA59590050F80FF2E | Since: 1207
     */
    function _0xA59590050F80FF2E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA596890CF55B5095 | Since: 1436
     */
    function _0xA596890CF55B5095(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB112B9262EC29C20 | Since: 1207
     */
    function _0xB112B9262EC29C20(): string;
    /**
     * No comment provided
     *
     * Hash: 0xB5E2EDA2135E0FA1 | Since: 1207
     */
    function _0xB5E2EDA2135E0FA1(scheduleLocation: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE66B26B6529E943 | Since: 1311
     */
    function _0xBE66B26B6529E943(unlockHash: number | string, ped: number | Ped, animalType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA1F0B5103936891 | Since: 1207
     */
    function _0xCA1F0B5103936891(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA41E86545413B5B | Since: 1207
     */
    function _0xCA41E86545413B5B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD64DBC8B0424135F | Since: 1207
     */
    function _0xD64DBC8B0424135F(ped: number | Ped, animalType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA26263C07CCE9C2 | Since: 1207
     */
    function _0xDA26263C07CCE9C2(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDBD560745B1EE98 | Since: 1207
     */
    function _0xDDBD560745B1EE98(chalHash: number | string, goalHash: number | string, player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF95DF488A645CE7 | Since: 1207
     */
    function _0xDF95DF488A645CE7(): void;
    /**
     * statId: see STAT_ID_IS_VALID
     * Only used in R* SP Scripts
     * _STAT_ID_SET_*
     *
     * Hash: 0xE141F6B40B1E3683 | Since: 1207
     */
    function _0xE141F6B40B1E3683(statId: any, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5A680A5D8B1F687 | Since: 1207
     */
    function _0xE5A680A5D8B1F687(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF21A5D66874FCEDD | Since: 1207
     */
    function _0xF21A5D66874FCEDD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2B5ABDE09958689 | Since: 1311
     */
    function _0xF2B5ABDE09958689(unlockHash: number | string, ped1: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8181B5EF156862C | Since: 1207
     */
    function _0xF8181B5EF156862C(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5910ECF81A2278C | Since: 1207
     */
    function statstrackerDeedStatus(deedType: number, deedHash: number | string, missionStatus: number, data: any): void;
    /**
     * Related to animal tagging
     *
     * Hash: 0x90E9A5DADBABC918 | Since: 1355
     */
    function statAddAnimalSampleTarget(animalType: number | string): void;
    /**
     * Calculation: (value / 1000) / 60 % 60
     *
     * Hash: 0x1E7384AB5D4F4581 | Since: 1207
     */
    function statCalculateCooldown(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x831BF01C56149A8A | Since: 1207
     */
    function statCarriedSatchelItemFromPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C2ABF6E556B21FC | Since: 1207
     */
    function statDonateIncrementItem(item: number, slot: number): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0xBD861AE8A5181ED7 | Since: 1207
     */
    function statIdDecrementInt(statId: any, value: number): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x4A47E38EA3D60939 | Since: 1207
     */
    function statIdIncrementFloat(statId: any, value: number): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x6A0184E904CDF25E | Since: 1207
     */
    function statIdIncrementInt(statId: any, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA26263C87CCE9C1 | Since: 1207
     */
    function statItemFishCaught(fish: number | Ped, weight: number, category: number | string, subcategory: number | string): void;
    /**
     * statId: see STAT_ID_IS_VALID
     *
     * Hash: 0x5420D398A42917FC | Since: 1311
     */
    function statPheromoneCooldownLegendaryAnimal(entity: number | Entity, statId: any): boolean;
}
export declare namespace streaming {
    /**
     * No comment provided
     *
     * Hash: 0x0360710033BE60D9 | Since: 1207
     */
    function beginSrl(): void;
    /**
     * No comment provided
     *
     * Hash: 0x86CCAF7CE493EFBE | Since: 1207
     */
    function clearFocus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD83B22434E52728D | Since: 1207
     */
    function clearHdArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x537F44CB0D7F150D | Since: 1207
     */
    function doesAnimDictExist(animDict: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1CE71FB33CA079FE | Since: 1207
     */
    function endSrl(): void;
    /**
     * No comment provided
     *
     * Hash: 0x30CCCC4D88E654CA | Since: 1207
     */
    function getNumberOfStreamingRequests(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A3945405B31048F | Since: 1207
     */
    function getPopulationBudgetMultiplier(): number;
    /**
     * No comment provided
     *
     * Hash: 0x27FF6FE8009B40CA | Since: 1207
     */
    function hasAnimDictLoaded(animDict: string): boolean;
    /**
     * Alias for HAS_ANIM_SET_LOADED.
     *
     * Hash: 0x1F23D6B6DA1CC3B2 | Since: 1207
     */
    function hasClipSetLoaded(clipSet: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x210A79C9EC89778F | Since: 1207
     */
    function hasCollisionForModelLoaded(model: number | string): boolean;
    /**
     * Checks if the specified model has loaded into memory.
     *
     * Hash: 0x1283B8B89DD5D1B6 | Since: 1207
     */
    function hasModelLoaded(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2C04D89A0FB4E244 | Since: 1207
     */
    function hasMoveNetworkDefLoaded(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x65BB72F29138F5D6 | Since: 1207
     */
    function hasNamedPtfxAssetLoaded(fxNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x13A3F30A9ED0BC31 | Since: 1207
     */
    function hasPtfxAssetLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x31108BB5715D035F | Since: 1207
     */
    function iplGroupSwapCancel(): void;
    /**
     * No comment provided
     *
     * Hash: 0x040EE319EFD1D3B5 | Since: 1207
     */
    function iplGroupSwapFinish(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC464598F6EE97B0 | Since: 1207
     */
    function iplGroupSwapIsActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC2C05DEFE85A0B64 | Since: 1207
     */
    function iplGroupSwapIsReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x20D504994FDC4412 | Since: 1207
     */
    function iplGroupSwapStart(iplName1: string, iplName2: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF87DE697E9A06EC6 | Since: 1207
     */
    function isEntityFocus(entity: number | Entity): boolean;
    /**
     * Old name: _IS_IMAP_ACTIVE_2
     *
     * Hash: 0x93AC1B91CB6D9913 | Since: 1207
     */
    function isIplActiveByHash(iplHash: number | string): boolean;
    /**
     * Old name: _IS_IMAP_ACTIVE
     *
     * Hash: 0xD779B9B910BD3B7C | Since: 1207
     */
    function isIplActiveHash(iplHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF45DF50C7775F2A | Since: 1207
     */
    function isLoadSceneActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0909F71B5C070797 | Since: 1207
     */
    function isLoadSceneLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC3F09DE9D6D17DDA | Since: 1207
     */
    function isModelAPed(model: number | string): boolean;
    /**
     * Returns whether the specified model represents a vehicle.
     *
     * Hash: 0x354F62672DE7DB0A | Since: 1207
     */
    function isModelAVehicle(model: number | string): boolean;
    /**
     * Returns whether the specified model exists in the game.
     *
     * Hash: 0xD6F3B6D7716CFF8E | Since: 1207
     */
    function isModelInCdimage(model: number | string): boolean;
    /**
     * Returns whether the specified model is valid
     *
     * Hash: 0x392C8D8E07B70EFC | Since: 1207
     */
    function isModelValid(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xED20CB1F5297791D | Since: 1207
     */
    function isPlayerSwitchInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x45BF3A6239A576B7 | Since: 1207
     */
    function isRenderedSceneLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C2C88512CF6DAFB | Since: 1207
     */
    function isSrlLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x387AD749E3B69B70 | Since: 1207
     */
    function loadSceneStart(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number, radius: number, controlFlags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x513F8AA5BF2F17CF | Since: 1207
     */
    function loadSceneStartSphere(pos: Vector3, radius: number, controlFlags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A8B01199C3E79C3 | Since: 1207
     */
    function loadSceneStop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x354837E5A5BAA5AF | Since: 1207
     */
    function prefetchSrl(srl: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4763145053A33D46 | Since: 1207
     */
    function removeAnimDict(animDict: string): void;
    /**
     * Alias for REMOVE_ANIM_SET.
     *
     * Hash: 0x817FA1B1EE7CD6F0 | Since: 1207
     */
    function removeClipSet(clipSet: string): void;
    /**
     * Old name: _REMOVE_IMAP_2
     *
     * Hash: 0x431E3AB760629B34 | Since: 1207
     */
    function removeIplByHash(iplHash: number | string): void;
    /**
     * Old name: _REMOVE_IMAP
     *
     * Hash: 0x5A3E5CF7B4014B96 | Since: 1207
     */
    function removeIplHash(iplHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x57A197AD83F66BBF | Since: 1207
     */
    function removeMoveNetworkDef(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF20866829E1C81A2 | Since: 1207
     */
    function removeNamedPtfxAsset(fxNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x042F9049EA419E86 | Since: 1207
     */
    function removePtfxAsset(): void;
    /**
     * No comment provided
     *
     * Hash: 0x83A8D71650D1894F | Since: 1311
     */
    function requestAdditionalCollisionAtCoord(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xA862A2AD321F94B4 | Since: 1207
     */
    function requestAnimDict(animDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF7611B57A820126 | Since: 1207
     */
    function requestClipSet(clipSet: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A3720F162A033C9 | Since: 1207
     */
    function requestCollisionAtCoord(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1767BE37F661551 | Since: 1207
     */
    function requestCollisionForModel(model: number | string): void;
    /**
     * Old name: _REQUEST_IMAP_2
     *
     * Hash: 0x9E211A378F95C97C | Since: 1207
     */
    function requestIplByHash(iplHash: number | string): void;
    /**
     * Old name: _REQUEST_IMAP
     *
     * Hash: 0x59767C5A7A9AE6DA | Since: 1207
     */
    function requestIplHash(iplHash: number | string): void;
    /**
     * Request a model to be loaded into memory.
     *
     * Hash: 0xFA28FE3A6246FC30 | Since: 1207
     */
    function requestModel(model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B6529C54D29037A | Since: 1207
     */
    function requestMoveNetworkDef(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2B2353BBC0D4E8F | Since: 1207
     */
    function requestNamedPtfxAsset(fxNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x001FF43843028E0C | Since: 1207
     */
    function requestPtfxAsset(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x19ABCC581D28E6F9 | Since: 1207
     */
    function setAllMapdataCulled(): void;
    /**
     * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
     *
     * Hash: 0x955AEDD58F4BD309 | Since: 1207
     */
    function setFocusEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x25F6EF88664540E2 | Since: 1207
     */
    function setFocusPosAndVel(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3BC8250F4FE8B63 | Since: 1207
     */
    function setGamePausesForStreaming(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB88B905AFA35CB4D | Since: 1207
     */
    function setHdArea(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3CACC83F6FED837C | Since: 1207
     */
    function setMapdatacullboxEnabled(name: string, toggle: boolean): void;
    /**
     * Marks the model as no longer needed.
     *
     * Hash: 0x4AD96EF928BD4F9A | Since: 1207
     */
    function setModelAsNoLongerNeeded(model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F9AC754FE179D58 | Since: 1207
     */
    function setPopulationBudgetMultiplier(fBudgetMultiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA03A6812529AD9C8 | Since: 1207
     */
    function setSceneStreamingTracksCamPosThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C907E8A725E5FD2 | Since: 1207
     */
    function setSrlLongJumpMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD346248C1DCE0D76 | Since: 1207
     */
    function setSrlReadaheadTimes(): void;
    /**
     * No comment provided
     *
     * Hash: 0x18231AEF458BCFF2 | Since: 1207
     */
    function setSrlTime(): void;
    /**
     * _SET_E* or _SET_F*
     *
     * Hash: 0x032A14D082A9B269 | Since: 1207
     */
    function _0x032A14D082A9B269(): void;
    /**
     * No comment provided
     *
     * Hash: 0x03DDBF2D73799F9E | Since: 1207
     */
    function _0x03DDBF2D73799F9E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x05DD384F39DE1C8C | Since: 1207
     */
    function _0x05DD384F39DE1C8C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x071769BCB24379E5 | Since: 1207
     */
    function _0x071769BCB24379E5(): any;
    /**
     * No comment provided
     *
     * Hash: 0x07559B29950301FF | Since: 1207
     */
    function _0x07559B29950301FF(): void;
    /**
     * No comment provided
     *
     * Hash: 0x09FBF15D73EFC900 | Since: 1207
     */
    function _0x09FBF15D73EFC900(): void;
    /**
     * No comment provided
     *
     * Hash: 0x198B85CC3C7A4593 | Since: 1207
     */
    function _0x198B85CC3C7A4593(): any;
    /**
     * No comment provided
     *
     * Hash: 0x27AF48C62B281341 | Since: 1207
     */
    function _0x27AF48C62B281341(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2A6D1DAAB9EBB262 | Since: 1207
     */
    function _0x2A6D1DAAB9EBB262(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2E24C27B112B5B12 | Since: 1311
     */
    function _0x2E24C27B112B5B12(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F4D53023F826FF0 | Since: 1207
     */
    function _0x2F4D53023F826FF0(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5288B7F0690F7C1F | Since: 1207
     */
    function _0x5288B7F0690F7C1F(): any;
    /**
     * No comment provided
     *
     * Hash: 0x53764309C4618087 | Since: 1207
     */
    function _0x53764309C4618087(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5D5E2102B174B8D2 | Since: 1207
     */
    function _0x5D5E2102B174B8D2(): any;
    /**
     * No comment provided
     *
     * Hash: 0x62D5F0588915B277 | Since: 1207
     */
    function _0x62D5F0588915B277(): void;
    /**
     * No comment provided
     *
     * Hash: 0x66BC28E50E85270E | Since: 1207
     */
    function _0x66BC28E50E85270E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6A6E79FBE8678C98 | Since: 1207
     */
    function _0x6A6E79FBE8678C98(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B8C2B846C05E5AD | Since: 1207
     */
    function _0x7B8C2B846C05E5AD(): any;
    /**
     * No comment provided
     *
     * Hash: 0x80B3E0597366ADF1 | Since: 1207
     */
    function _0x80B3E0597366ADF1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x85B8F04555AB49B8 | Since: 1207
     */
    function _0x85B8F04555AB49B8(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8D56BDA343D9519F | Since: 1207
     */
    function _0x8D56BDA343D9519F(): any;
    /**
     * No comment provided
     *
     * Hash: 0x99F92061EFE908BA | Since: 1207
     */
    function _0x99F92061EFE908BA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9F348DE670423460 | Since: 1207
     */
    function _0x9F348DE670423460(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA0AE7653E8181725 | Since: 1207
     */
    function _0xA0AE7653E8181725(): any;
    /**
     * No comment provided
     *
     * Hash: 0xAE00387E53B1E9FC | Since: 1207
     */
    function _0xAE00387E53B1E9FC(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFA87A7D41EE346A | Since: 1207
     */
    function _0xAFA87A7D41EE346A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB223249B7798EEED | Since: 1207
     */
    function _0xB223249B7798EEED(): any;
    /**
     * Sorts some unknown data.
     *
     * Likely SORT_*
     *
     * Hash: 0xB9B9E47EDB9D63DB | Since: 1207
     */
    function _0xB9B9E47EDB9D63DB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE8DAA9D8D01DA6A | Since: 1207
     */
    function _0xBE8DAA9D8D01DA6A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC61D8D6C19D9F14 | Since: 1207
     */
    function _0xCC61D8D6C19D9F14(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6E39DC5D46DF4AB | Since: 1207
     */
    function _0xD6E39DC5D46DF4AB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD840C130D7AACFA5 | Since: 1207
     */
    function _0xD840C130D7AACFA5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9F2FF4AF394D926 | Since: 1207
     */
    function _0xD9F2FF4AF394D926(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA7FDEFF4DE86839 | Since: 1207
     */
    function _0xDA7FDEFF4DE86839(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDABFE48BA0D457AA | Since: 1207
     */
    function _0xDABFE48BA0D457AA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDEEE1F265B7ECEF5 | Since: 1311
     */
    function _0xDEEE1F265B7ECEF5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5B76E5B56CD77DD | Since: 1207
     */
    function _0xE5B76E5B56CD77DD(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEF1A8A484118735E | Since: 1207
     */
    function _0xEF1A8A484118735E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF01D21DF39554115 | Since: 1207
     */
    function _0xF01D21DF39554115(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF11D7CB962FCD747 | Since: 1207
     */
    function _0xF11D7CB962FCD747(): void;
    /**
     * Outputs IPL position and radius (previously wrongly named heading)
     * https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
     *
     * Hash: 0x9C77964B0E07B633 | Since: 1207
     */
    function getIplBoundingSphere(iplHash: number | string, position: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA8B2EAF29E872E2 | Since: 1207
     */
    function hasCollisionLoadedAtCoord(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9427C94D2E4094A4 | Since: 1207
     */
    function hasScenarioTypeLoaded(scenarioType: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x274EE1B90CFA669E | Since: 1207
     */
    function isModelAnObject(model: number | string): boolean;
    /**
     * Returns true if IPL is streamed in (?)
     *
     * Hash: 0x73B40D97D7BAAD77 | Since: 1207
     */
    function isPositionInsideIplStreamingExtents(iplHash: number | string, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4EDDD9E9CA5AF985 | Since: 1207
     */
    function removeScenarioAsset(scenarioType: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xAC37644A538F7524 | Since: 1207
     */
    function requestClipSetByHash(clipSetHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8432A14D4DC2101 | Since: 1207
     */
    function requestMetadataAtCoord(pos: Vector3): void;
    /**
     * p1 seems to be some kind of flag? p2 can be 0 or entity model accepts hash joaat("a_c_bear_01") or with GetEntityModel(entity) p3 can be 0 or pass the conditional anim or using _GET_ACTIVE_DYNAMIC_SCENARIO
     *
     * Hash: 0x19A6BE7D9C6884D3 | Since: 1207
     */
    function requestScenarioType(scenarioType: number | string, entityModel: number | string, conditionalAnim: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x74E2261D2A66849A | Since: 1207
     */
    function setGuarmaWorldhorizonActive(toggle: boolean): void;
}
export declare namespace task {
    /**
     * No comment provided
     *
     * Hash: 0x45C597097DD7CB81 | Since: 1207
     */
    function addCoverBlockingArea(playerX: number, playerY: number, playerZ: number, radiusX: number, radiusY: number, radiusZ: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5C12A75C7B9497F | Since: 1207
     */
    function addCoverPoint(): number;
    /**
     * Params: p2 is always -1.f in R* Scripts
     *
     * Hash: 0x3923EC958249657D | Since: 1207
     */
    function addFleeTargetPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x23083260DEC3A551 | Since: 1207
     */
    function addPatrolRouteLink(node1: number, node2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EDF950167586B7C | Since: 1207
     */
    function addPatrolRouteNode(nodeId: number, scenarioName: string, pos: Vector3, lookPosX: number, lookPosY: number, lookPosZ: number, duration: number): void;
    /**
     * Returns true when requested asset is loaded
     *
     * Hash: 0x5E5D96BE25E9DF68 | Since: 1207
     */
    function areCompositeLootableEntityDefAssetsLoaded(asset: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x60F9A4393A21F741 | Since: 1207
     */
    function assistedMovementIsRouteLoaded(route: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3548536485DD792B | Since: 1207
     */
    function assistedMovementRemoveRoute(route: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5002D78B7162E1B | Since: 1207
     */
    function assistedMovementSetRouteProperties(route: string, props: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D19BC4DF626CBE7 | Since: 1207
     */
    function canStartItemInteraction(ped: number | Ped, itemHash: number | string, interactionAnimHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC35B5CDB2824CF69 | Since: 1207
     */
    function clearDrivebyTaskUnderneathDrivingTask(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x176CECF6F920D707 | Since: 1207
     */
    function clearPedSecondaryTask(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1EF3C1216AFF2CD | Since: 1207
     */
    function clearPedTasks(ped: number | Ped): void;
    /**
     * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
     *
     * resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
     *
     * Hash: 0xAAA34F8A7CB32098 | Since: 1207
     */
    function clearPedTasksImmediately(ped: number | Ped, resetCrouch: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3841422E9C488D8C | Since: 1207
     */
    function clearSequenceTask(taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB043ECA801B8CBC1 | Since: 1207
     */
    function closePatrolRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x39E72BC99E6360CB | Since: 1207
     */
    function closeSequenceTask(taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF8A443CCC8018DC | Since: 1207
     */
    function createPatrolRoute(): void;
    /**
     * Returns scenario
     *
     * Hash: 0x94B745CE41DB58A1 | Since: 1207
     */
    function createScenarioPointHash(scenarioHash: number | string, pos: Vector3, heading: number): number;
    /**
     * Returns scenario
     *
     * Hash: 0x794AB1379A74064D | Since: 1207
     */
    function createScenarioPointHashAttachedToEntity(entity: number | Entity, scenarioHash: number | string, pos: Vector3, heading: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x7767DD9D65E91319 | Since: 1207
     */
    function deletePatrolRoute(patrolRoute: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A59271FFADD33C1 | Since: 1207
     */
    function doesScenarioExistInArea(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9034C136C9E00D3 | Since: 1207
     */
    function doesScenarioGroupExist(scenarioGroup: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6EEAD6AF637DA752 | Since: 1207
     */
    function doesScenarioOfTypeExistInAreaHash(pos: Vector3, typeHash: number | string, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x841475AC96E794D1 | Since: 1207
     */
    function doesScenarioPointExist(scenario: number): boolean;
    /**
     * Checks if there is a cover point at position
     *
     * Hash: 0xA98B8E3C088E5A31 | Since: 1207
     */
    function doesScriptedCoverPointExistAtCoords(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEED08A3A98B847E2 | Since: 1207
     */
    function endDuel(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF533D68FF970D190 | Since: 1207
     */
    function findScenarioOfTypeHash(pos: Vector3, scenarioType: number | string, distance: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x444C910A5058E568 | Since: 1207
     */
    function forceScenarioGroupPriority(): void;
    /**
     * No comment provided
     *
     * Hash: 0x534AEBA6E5ED4CAB | Since: 1207
     */
    function getActiveVehicleMissionType(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x0CCFE72B43C9CF96 | Since: 1207
     */
    function getIsCarriableEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8785E6E40C7A8819 | Since: 1207
     */
    function getIsPedAimingInTheAir(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB0760331C7AA4155 | Since: 1207
     */
    function getIsTaskActive(ped: number | Ped, taskIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCB4E8BE8A0063C5D | Since: 1207
     */
    function getIsWaypointRecordingLoaded(waypointRecording: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x804425C4BBD00883 | Since: 1207
     */
    function getItemInteractionItemId(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xBC864A70AD55E0C1 | Since: 1207
     */
    function getItemInteractionPromptProgress(ped: number | Ped, inputContext: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x6AA3DCA2C6F5EB6D | Since: 1207
     */
    function getItemInteractionState(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x8517D4A6CA8513ED | Since: 1207
     */
    function getPedDesiredMoveBlendRatio(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xE6A877C64CAF1BC5 | Since: 1207
     */
    function getPedWaypointDistance(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xD39A2F3E7FCAFF08 | Since: 1207
     */
    function getPedWaypointOverrideSpeed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x2720AAA75001E094 | Since: 1207
     */
    function getPedWaypointProgress(ped: number | Ped): number;
    /**
     * Old name: _GET_SCENARIO_POINT_ENTITY
     *
     * Hash: 0x295514F198EFD0CA | Since: 1207
     */
    function getPropForScenarioPoint(scenarioPoint: number, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD04241BBF6D03A5E | Since: 1207
     */
    function getRansackScenarioPointPedIsUsing(ped: number | Ped): any;
    /**
     * Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
     *
     * Hash: 0x345EC3B7EBDE1CB5 | Since: 1207
     */
    function getScenarioPointsInArea(pos: Vector3, radius: number, scenariosInRadius: any, size: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x594A1028FC2A3E85 | Since: 1207
     */
    function getScriptedCoverPointCoords(coverpoint: number): Vector3;
    /**
     * Gets the status of a script-assigned task, and returns an int between 0-8
     * taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt
     *
     * WAITING_TO_START_TASK = 0,
     * PERFORMING_TASK
     * DORMANT_TASK
     * VACANT_STAGE
     * GROUP_TASK_STAGE
     * ATTRACTOR_SCRIPT_TASK_STAGE
     * SECONDARY_TASK_STAGE
     * TASK_NOT_FOUND
     * FINISHED_TASK
     *
     * Hash: 0x77F1BEB8863288D5 | Since: 1207
     */
    function getScriptTaskStatus(ped: number | Ped, taskHash: number | string): number;
    /**
     * returned values:
     * 0 to 7 = task that's currently in progress, 0 meaning the first one.
     * -1 no task sequence in progress.
     *
     * Hash: 0x00A9010CFE1E3533 | Since: 1207
     */
    function getSequenceProgress(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xB4F47213DF45A64C | Since: 1207
     */
    function getTaskMoveNetworkEvent(ped: number | Ped, eventName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x717E4D1F2048376D | Since: 1207
     */
    function getTaskMoveNetworkState(ped: number | Ped): string;
    /**
     * No comment provided
     *
     * Hash: 0x3DC971EB22F73447 | Since: 1207
     */
    function getVehicleWaypointPlaybackOverrideSpeed(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9824CFF8FC66E159 | Since: 1207
     */
    function getVehicleWaypointProgress(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x416B62AC8B9E5BBD | Since: 1207
     */
    function getVehicleWaypointTargetPoint(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA5B769058763E497 | Since: 1207
     */
    function getWaypointDistanceAlongRoute(waypointRecording: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8785E6E40C7A8818 | Since: 1207
     */
    function isDrivebyTaskUnderneathDrivingTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF9B71C0AF824036 | Since: 1355
     */
    function isEmoteTaskRunning(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA320EF046186FA3B | Since: 1207
     */
    function isMountedWeaponTaskUnderneathDrivingTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4D8636C0199A939 | Since: 1207
     */
    function isMoveBlendRatioRunning(moveBlendRatio: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24A2AD74FA9814E2 | Since: 1207
     */
    function isMoveBlendRatioSprinting(moveBlendRatio: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x349CE7B56DAFD95C | Since: 1207
     */
    function isMoveBlendRatioStill(moveBlendRatio: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF133BBBE91E1691F | Since: 1207
     */
    function isMoveBlendRatioWalking(moveBlendRatio: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA135F9482C82CC3 | Since: 1207
     */
    function isPedActiveInScenario(ped: number | Ped, scenario: number): boolean;
    /**
     * This function is hard-coded to always return false.
     *
     * Hash: 0x90A09F3A45FED688 | Since: 1207
     */
    function isPedBeingArrested(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74E559B3BC910685 | Since: 1207
     */
    function isPedCuffed(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C3CB2E600C8977D | Since: 1207
     */
    function isPedExitingScenario(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A74E1D5F2F00EEC | Since: 1207
     */
    function isPedGettingUp(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF330A5C062B29BED | Since: 1207
     */
    function isPedInHitReact(ped: number | Ped): boolean;
    /**
     * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
     *
     * Hash: 0xDEB6D52126E7D640 | Since: 1207
     */
    function isPedInWrithe(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC5286FFC176F28A2 | Since: 1207
     */
    function isPedRunning(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x038B1F1674F0E242 | Since: 1207
     */
    function isPedRunningInspectionTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC7E480FF8BD0BED | Since: 1207
     */
    function isPedRunningTaskItemInteraction(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x916B8E075ABC8B4E | Since: 1207
     */
    function isPedScenarioReactLooking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57E457CD2C0FC168 | Since: 1207
     */
    function isPedSprinting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAC29253EEF8F0180 | Since: 1207
     */
    function isPedStill(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE4C184B2B9B071A | Since: 1207
     */
    function isPedWalking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x367A09DED4E05B99 | Since: 1207
     */
    function isScenarioGroupEnabled(scenarioGroup: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x788756D73AC2E07C | Since: 1207
     */
    function isScenarioOccupied(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A815DB3EA088722 | Since: 1207
     */
    function isScenarioTypeEnabled(scenarioType: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x921CE12C489C4C41 | Since: 1207
     */
    function isTaskMoveNetworkActive(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30ED88D5E0C56A37 | Since: 1207
     */
    function isTaskMoveNetworkReadyForTransition(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x559A6F8C5133B4EE | Since: 1207
     */
    function isTeamCarriableEntity(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE03B3F2D3DC59B64 | Since: 1207
     */
    function isWaypointPlaybackGoingOnForPed(ped: number | Ped, waypointRecording: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF5134943EA29868C | Since: 1207
     */
    function isWaypointPlaybackGoingOnForVehicle(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67BFCED22909834D | Since: 1207
     */
    function makeObjectNotCarriable(object: number | Object): void;
    /**
     * Note: patrolRoute must be prefixed with 'miss_' for it to be valid
     *
     * Hash: 0xA36BFB5EE89F3D82 | Since: 1207
     */
    function openPatrolRoute(patrolRoute: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8854A4326B9E12B | Since: 1207
     */
    function openSequenceTask(taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x295E3CCEC879CCD7 | Since: 1207
     */
    function pedHasUseScenarioTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x748040460F8DF5DC | Since: 1207
     */
    function playAnimOnRunningScenario(ped: number | Ped, animDict: string, animName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x77A1EEC547E7FCF1 | Since: 1207
     */
    function playEntityScriptedAnim(entity: number | Entity, args: any): void;
    /**
     * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
     *
     * exitAnimation: LOOK_RETURN_GENERIC = 1,
     * LOOK_RETURN_DISMISSIVE = 2,
     * LOOK_RETURN_RELIEVED = 3
     *
     * Hash: 0xE7FA07624574B79A | Since: 1207
     */
    function reactLookAt(ped: number | Ped, targetPed: number | Ped, lookIntensity: number, exitAnimation: number, duration: number, targetPed2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x541E5B41DCA45828 | Since: 1207
     */
    function reactLookAtEnd(ped: number | Ped, exitAnimation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB6708C0B46F56D8 | Since: 1207
     */
    function removeAllCoverBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE287C923D891715 | Since: 1207
     */
    function removeCoverPoint(coverpoint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF1B8B4AA1C25DC8 | Since: 1207
     */
    function removeWaypointRecording(waypointRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD01015C7316AE176 | Since: 1207
     */
    function requestTaskMoveNetworkStateTransition(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9EEFB62EB27B5792 | Since: 1207
     */
    function requestWaypointRecording(waypointRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD902D0349AFAD3A | Since: 1207
     */
    function resetScenarioGroupsEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D40EE2A7F2B2D6D | Since: 1207
     */
    function resetScenarioTypesEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x87B66D77D545DB66 | Since: 1207
     */
    function setAnimFilter(entity: number | Entity, filterName: string, priority: number, secondary: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x032D49C5E359C847 | Since: 1207
     */
    function setAnimRate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5B302114D8162EE | Since: 1207
     */
    function setDrivebyTaskTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C9B84BD7D31D908 | Since: 1207
     */
    function setDriveTaskCruiseSpeed(driver: number | Ped, cruiseSpeed: number): void;
    /**
     * Not implemented.
     *
     * Hash: 0x404A5AA9B9F0B746 | Since: 1207
     */
    function setDriveTaskMaxCruiseSpeed(ped: number | Ped, maxCruiseSpeed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x295F03DC97BEEBC1 | Since: 1207
     */
    function setEnableSpeedRestrainForWaypointRecordingLeader(): void;
    /**
     * clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
     * clipset can also be 0
     *
     * Hash: 0x1BF9D36A5EAFFBAE | Since: 1207
     */
    function setEnhancedBreakFree(ped: number | Ped, clipset: string): boolean;
    /**
     * Makes the ped ragdoll like when falling from a great height
     *
     * Hash: 0x8C825BDC7741D37C | Since: 1207
     */
    function setHighFallTask(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E982AC8716912C5 | Since: 1207
     */
    function setPedDesiredMoveBlendRatio(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4455517B28441E60 | Since: 1207
     */
    function setPedPathAvoidFire(ped: number | Ped, avoidFire: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE361C5C71C431A4F | Since: 1207
     */
    function setPedPathCanDropFromHeight(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E06A6FE76C9EFF4 | Since: 1207
     */
    function setPedPathCanUseClimbovers(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x77A5B103C87F476E | Since: 1207
     */
    function setPedPathCanUseLadders(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x88E32DB8C1A4AA4B | Since: 1207
     */
    function setPedPathClimbCostModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8C296B75EACC357 | Since: 1207
     */
    function setPedPathDeepSnowCostModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AD8EFF9703BE657 | Since: 1207
     */
    function setPedPathFoliageCostModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF35425A4204367EC | Since: 1207
     */
    function setPedPathMayEnterWater(ped: number | Ped, mayEnterWater: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x38FE1EC73743793C | Since: 1207
     */
    function setPedPathPreferToAvoidWater(ped: number | Ped, avoidWater: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xED98E10B0AFCE4B4 | Since: 1207
     */
    function setPedWaypointRouteOffset(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x02C8E5B49848664E | Since: 1207
     */
    function setScenarioGroupEnabled(scenarioGroup: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB47EC4E34FB7EE1 | Since: 1207
     */
    function setScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
    /**
     * repeatMode: 0 = REPEAT_NOT; 1 = REPEAT_FOREVER
     *
     * Hash: 0x58C70CF3A41E4AE7 | Since: 1207
     */
    function setSequenceToRepeat(taskSequenceId: number, repeatMode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0A6CFD2C69C1088 | Since: 1207
     */
    function setTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5BB4025AE449A4E | Since: 1207
     */
    function setTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x545BF19F86E80F11 | Since: 1207
     */
    function setTeamCarriableEntity(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5C51DD544F14F58 | Since: 1207
     */
    function setUpSpeedRestrainInformationForPlayerFollower(): void;
    /**
     * Params: p3 = 0, 1; p5 = 0.0f, -1.0f
     * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
     *
     * Hash: 0xAE72E7DF013AAA61 | Since: 1207
     */
    function startTaskItemInteraction(ped: number | Ped, itemHash: number | string, interactionAnimHash: number | string, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE08C992D238C5D1 | Since: 1207
     */
    function stopAnimPlayback(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x97FF36A1D40EA00A | Since: 1207
     */
    function stopAnimTask(ped: number | Ped, animDictionary: string, animationName: string): void;
    /**
     * Makes the specified ped achieve the specified heading.
     *
     * pedHandle: The handle of the ped to assign the task to.
     * heading: The desired heading.
     * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
     *
     * Hash: 0x93B93A37987F1F3D | Since: 1207
     */
    function taskAchieveHeading(ped: number | Ped, heading: number, timeout: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AF1D73861212F52 | Since: 1207
     */
    function taskAimAtCoord(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF7569BD0FB480A0 | Since: 1207
     */
    function taskAimAtEntity(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6671F3EEC681BDA1 | Since: 1207
     */
    function taskAimGunAtCoord(ped: number | Ped, pos: Vector3, time: number): void;
    /**
     * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
     *
     * Hash: 0x9B53BB6E8943AF53 | Since: 1207
     */
    function taskAimGunAtEntity(ped: number | Ped, targetEntity: number | Entity, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B39D8F9D0FE7749 | Since: 1207
     */
    function taskAmbientAnimalHunt(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x37C13863ABA1B4A3 | Since: 1207
     */
    function taskAmbientAnimalStalk(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x979D93372FC8C565 | Since: 1207
     */
    function taskAnimalAlerted(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA899B61C66F09134 | Since: 1207
     */
    function taskAnimalFlee(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
     *
     * Hash: 0xCD181A959CFDD7F4 | Since: 1207
     */
    function taskAnimalInteraction(ped: number | Ped, targetPed: number | Ped, interactionType: number | string, interactionModel: number | string, skipIdleAnimationClip: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x21FDF9A25CFE1CE5 | Since: 1207
     */
    function taskAnimalUnalerted(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C038A39C4A4B6D6 | Since: 1207
     */
    function taskAnimalWrithe(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3B9A78A178572B1 | Since: 1207
     */
    function taskArrestPed(ped: number | Ped, target: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x83BFC1F836B2F3F2 | Since: 1207
     */
    function taskBark(ped: number | Ped, barkAtTarget: number | Ped, mood: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x15C86013127CE63F | Since: 1207
     */
    function taskBoatMission(pedDriver: number | Ped, boat: number | Vehicle, pos: Vector3, maxSpeed: number, drivingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB28D1BC9EA8A6A5 | Since: 1207
     */
    function taskBreakVehicleDoorLock(ped: number | Ped, vehicle: number | Vehicle): void;
    /**
     * carriableSlot:
     * 7 > Back of a horse
     * 6 > Right side of a horse
     * 5 > Left side of a horse
     * flags:
     * 512: enables the prompt being the name of the item when using a generic item
     *
     * Hash: 0xF0B4F759F35CC7F5 | Since: 1207
     */
    function taskCarriable(entity: number | Entity, carryConfig: number | string, carrier: number | Ped, carriableSlot: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x95A6C46A31D1917D | Since: 1207
     */
    function taskClearDefensiveArea(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F804F1DB19B9689 | Since: 1207
     */
    function taskClearLookAt(ped: number | Ped): void;
    /**
     * Climbs or vaults the nearest thing.
     *
     * Hash: 0x89D9FCC2435112F1 | Since: 1207
     */
    function taskClimb(ped: number | Ped, unused: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6C987F9285A3814 | Since: 1207
     */
    function taskClimbLadder(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE3AA414CF99F368 | Since: 1207
     */
    function taskCombatAnimalChargePed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF960F3D57B660E96 | Since: 1207
     */
    function taskCombatAnimalWarn(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8182B561A29BD597 | Since: 1207
     */
    function taskCombatHatedTargets(ped: number | Ped, radius: number): void;
    /**
     * Despite its name, it only attacks ONE hated target. The one closest hated target.
     *
     * Hash: 0x7BF835BB9E2698C8 | Since: 1207
     */
    function taskCombatHatedTargetsAroundPed(ped: number | Ped, radius: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BBA30B854534A0C | Since: 1207
     */
    function taskCombatHatedTargetsAroundPedTimed(ped: number | Ped, radius: number, time: number, flags: number): void;
    /**
     * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
     *
     * Hash: 0x4CF5F55DAC3280A0 | Since: 1207
     */
    function taskCombatHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5BC69D9C4060BC3 | Since: 1207
     */
    function taskCombatHatedTargetsNoLosTest(ped: number | Ped, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF166E48407BAC484 | Since: 1207
     */
    function taskCombatPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x944F30DCB7096BDE | Since: 1207
     */
    function taskCombatPedTimed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE017CF6E2527FE4F | Since: 1207
     */
    function taskCompanionAmbient(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A2A2071DF5CC569 | Since: 1207
     */
    function taskConfront(ped: number | Ped, targetPed: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3EB1FE9E8E908E15 | Since: 1207
     */
    function taskCower(ped: number | Ped, duration: number, pedToCowerFrom: number | Ped): void;
    /**
     * flags: See TASK_ENTER_VEHICLE
     *
     * Hash: 0x0A11F3BDEC03ED5F | Since: 1207
     */
    function taskDisembarkNearestTrainCarriage(ped: number | Ped, flags: number): void;
    /**
     * Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
     * flags: See TASK_ENTER_VEHICLE
     *
     * Hash: 0x48E92D3DDE23C23A | Since: 1207
     */
    function taskDismountAnimal(rider: number | Ped, taskFlag: number, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F8AF0E82773A171 | Since: 1207
     */
    function taskDriveBy(driverPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA14B5FBF986BAC23 | Since: 1207
     */
    function taskDuck(ped: number | Ped, time: number): void;
    /**
     * Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
     *
     * Hash: 0x5D5B0D5BC3626E5A | Since: 1207
     */
    function taskDuel(ped: number | Ped, entity: number | Entity, vPosOpponentX: number, vPosOpponentY: number, vPosOpponentZ: number, fOpponentHead: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x17CA98707B15926A | Since: 1207
     */
    function taskDumpCarriableFromParent(ped: number | Ped, ped2: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD7949BD07299672 | Since: 1207
     */
    function taskEat(ped: number | Ped): void;
    /**
     * flags:
     * MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
     * DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
     * SKIP_NAVIGATION = (1 << 2),
     * TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
     * FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
     * ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
     *
     * Hash: 0xC2329B0206426644 | Since: 1207
     */
    function taskEnterAnimScene(ped: number | Ped, animScene: any, entityName: string, playbackListName: string, enterSpeed: number, bAutoStart: boolean, flag: number): void;
    /**
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
     *
     * Hash: 0xC20E50AA46D09CA8 | Since: 1207
     */
    function taskEnterVehicle(ped: number | Ped, vehicle: number | Vehicle, timeout: number, seat: number, speed: number, flag: number): void;
    /**
     * `Params: p2 is returned by BUILTIN::SHIFT_LEFT`
     *
     * Hash: 0x5F22926E1BCE9B08 | Since: 1207
     */
    function taskEvasiveAnim(ped1: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F1C49F275BD25B3 | Since: 1207
     */
    function taskEveryoneLeaveVehicleInOrder(vehicle: number | Vehicle): void;
    /**
     * Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
     *
     * A maximum of 8 points can be added.
     *
     * Hash: 0x1E7889778264843A | Since: 1207
     */
    function taskExtendRoute(pos: Vector3): void;
    /**
     * Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
     * fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
     *
     * Hash: 0x58428248BF4B64E4 | Since: 1207
     */
    function taskFleeCoord(ped: number | Ped, pos: Vector3, fleeStyle: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x390E0B697D25EAF5 | Since: 1207
     */
    function taskFleeCoordVia(): void;
    /**
     * Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
     * fleeStyle: see TASK_FLEE_COORD
     *
     * Hash: 0xFD45175A6DFD7CE9 | Since: 1207
     */
    function taskFleePed(ped: number | Ped, fleeFromTarget: number | Ped, fleeStyle: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5802E0F910E4CF1D | Since: 1207
     */
    function taskFleePedVia(): void;
    /**
     * Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
     *
     * Hash: 0x841142A1376E9006 | Since: 1207
     */
    function taskFlushRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x72997893BFB8ECCC | Since: 1207
     */
    function taskFlyingCircle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE86A537B5A3C297C | Since: 1207
     */
    function taskFlyAway(ped: number | Ped, fleeFromTarget: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6CFC2D59DA72042 | Since: 1207
     */
    function taskFlyToCoord(ped: number | Ped, travelMbr: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x489FFCCCE7392B55 | Since: 1207
     */
    function taskFollowAndConverseWithPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D2B787BAE9AB760 | Since: 1207
     */
    function taskFollowEntityAlongWaypointRecordingAtOffset(ped0: number | Ped, ped1: number | Ped, waypointRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D532EAA142CF83F | Since: 1207
     */
    function taskFollowEntityWhileAimingAtEntity(ped: number | Ped): void;
    /**
     * If no timeout, set timeout to -1.
     *
     * Hash: 0x15D3A79D4E44B913 | Since: 1207
     */
    function taskFollowNavMeshToCoord(ped: number | Ped, pos: Vector3, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x17F58B88D085DBAC | Since: 1207
     */
    function taskFollowNavMeshToCoordAdvanced(ped: number | Ped, pos: Vector3, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, entity: number | Entity, unk: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B1475414E70DD8E | Since: 1207
     */
    function taskFollowPavementToCoord(ped: number | Ped, args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E14C5550DC3CD1D | Since: 1207
     */
    function taskFollowPointRoute(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E3676282C18A692 | Since: 1207
     */
    function taskFollowToOffsetOfCoord(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x304AE42E357B8C7E | Since: 1207
     */
    function taskFollowToOffsetOfEntity(ped: number | Ped, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean, walkOnly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0759591819534F7B | Since: 1207
     */
    function taskFollowWaypointRecording(ped: number | Ped, waypointRecording: string, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CFC13EBC19BCA52 | Since: 1207
     */
    function taskFollowWaypointRecordingAdvanced(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE9B0520BD7C445B | Since: 1207
     */
    function taskFollowWaypointRecordingAtOffset(ped: number | Ped, waypointRecording: string): void;
    /**
     * motionStateHash: see FORCE_PED_MOTION_STATE
     *
     * Hash: 0x4F056E1AFFEF17AB | Since: 1207
     */
    function taskForceMotionState(ped: number | Ped, motionStateHash: number | string): void;
    /**
     * ped = Ped you want to perform this task.
     * target = the Entity they should aim at.
     * distanceToStopAt = distance from the target, where the ped should stop to aim.
     * StartAimingDist = distance where the ped should start to aim.
     *
     * Hash: 0xA9DA48FAB8A76C12 | Since: 1207
     */
    function taskGotoEntityAiming(ped: number | Ped, target: number | Entity, distanceToStopAt: number, StartAimingDist: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE39B4FF4FDEBDE27 | Since: 1207
     */
    function taskGotoEntityOffset(ped: number | Ped, entity: number | Entity, pos: Vector3, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x338E7EF52B6095A9 | Since: 1207
     */
    function taskGotoEntityOffsetXy(ped: number | Ped, entity: number | Entity, duration: number, targetRadius: number, xOffset: number, yOffset: number, moveBlendRatio: number, offsetFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA6DA9D151769392 | Since: 1311
     */
    function taskGotoEntityOffsetXyz(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x41B0832CA96B5351 | Since: 1207
     */
    function taskGotoEntityOffsetXyzAiming(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x901BD69984400F62 | Since: 1207
     */
    function taskGotoEntityOffsetXyAiming(ped: number | Ped): void;
    /**
     * Tells the ped to go to a coord, without using the navemesh. if timeBeforeTeleport is -1 the ped will never warp, p8 is always 0 or 1 still unknown
     *
     * Hash: 0xD76B57B44F1E6F8B | Since: 1207
     */
    function taskGoStraightToCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, timeBeforeTeleport: number, finalHeading: number, targetRadius: number): void;
    /**
     * Tells the ped to go to an offset coord from an entity, without using the navmesh. if timeBeforeTeleport is -1 the ped will never warp, p7 is 1 or 0 still unknown param
     *
     * Hash: 0x61E360B7E040D12E | Since: 1207
     */
    function taskGoStraightToCoordRelativeToEntity(ped: number | Ped, entity: number | Entity, xOffset: number, Yoffset: number, zOffset: number, moveBlendRatio: number, timeBeforeTeleport: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA55547801EB331FC | Since: 1207
     */
    function taskGoToCoordAndAimAtHatedEntitiesNearCoord(ped: number | Ped, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, unkTrue: boolean, unkFlag: number, aimingFlag: number, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x87BD711FC31EA273 | Since: 1207
     */
    function taskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BC448CB78FA3E88 | Since: 1207
     */
    function taskGoToCoordAnyMeans(ped: number | Ped, pos: Vector3, speed: number, entity: number | Entity, walkingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DD45F9ECFDB1BC9 | Since: 1207
     */
    function taskGoToCoordAnyMeansExtraParams(ped: number | Ped, pos: Vector3, speed: number, walkingStyle: number): void;
    /**
     * This native allows to control the cruise speed of where you want the ped to go
     * 3rd param might be the entity ped is in? like boat or wagon, 12th param might be the cruiseSpeed of the entity ped is in?
     * EXAMPLE: TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(PlayerPedId(), vector3(x, y, z), 3.0, entity, 1, 0, -1082130432, 0, 101004800, 520, 3.0, 1082130432, 0)
     *
     * Hash: 0xB8ECD61F531A7B02 | Since: 1207
     */
    function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number | Ped, gotoCoords: Vector3, cruiseSpeed: number, entity: number | Entity, cruiseSpeed_2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x11315AB3385B8AC0 | Since: 1207
     */
    function taskGoToCoordWhileAimingAtCoord(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x639C0425A0B4E77E | Since: 1207
     */
    function taskGoToCoordWhileAimingAtCoordUsingCombatStyle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2A16444EAD9AE47 | Since: 1207
     */
    function taskGoToCoordWhileAimingAtEntity(ped1: number | Ped, pos: Vector3, ped2: number | Ped, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x78426D0982D083C9 | Since: 1207
     */
    function taskGoToCoordWhileAimingAtEntityUsingCombatStyle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A071245EB0D1882 | Since: 1207
     */
    function taskGoToEntity(ped: number | Ped, target: number | Entity, duration: number, distance: number, speed: number): void;
    /**
     * shootatEntity:
     * If true, peds will shoot at Entity till it is dead.
     * If false, peds will just walk till they reach the entity and will cease shooting.
     *
     * Hash: 0x97465886D35210E9 | Since: 1207
     */
    function taskGoToEntityWhileAimingAtEntity(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEF0117C233026AD | Since: 1207
     */
    function taskGoToEntityWhileAimingAtEntityUsingCombatStyle(ped: number | Ped): void;
    /**
     * enum eWhistleType
     * {
     * WHISTLE_MAIN,
     * WHISTLE_SECONDARY,
     * WHISTLE_DOUBLE,
     * WHISTLE_URGENT,
     * WHISTLE_LONG
     * };
     *
     * Hash: 0xBAD6545608CECA6E | Since: 1207
     */
    function taskGoToWhistle(ped: number | Ped, whistleType: number): void;
    /**
     * grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
     *
     * Hash: 0x779A2FFACEFAEA7B | Since: 1207
     */
    function taskGrapple(ped: number | Ped, targetPed: number | Ped, grappleStyle: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB9FB242EACCAF30F | Since: 1207
     */
    function taskGuard(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2A207EEBDF9889B | Since: 1207
     */
    function taskGuardAssignedDefensiveArea(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A58A47A72E3FCB4 | Since: 1207
     */
    function taskGuardCurrentPosition(ped: number | Ped): void;
    /**
     * flags: 0 = HANDS_UP_NOTHING; 1 = HANDS_UP_STRAIGHT_TO_LOOP
     *
     * Hash: 0xF2EAB31979A7F910 | Since: 1207
     */
    function taskHandsUp(ped: number | Ped, duration: number, facingPed: number | Ped, timeToFacePed: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9030AD4B6207BFE8 | Since: 1207
     */
    function taskHitchAnimal(ped: number | Ped, scenarioPoint: number, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6AFD8FE0D723328F | Since: 1207
     */
    function taskHogtieable(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x27829AFD3E03AC1A | Since: 1207
     */
    function taskHogtieTargetPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
     * Params: p2, p3 are set to 0 in R* Scripts
     *
     * Hash: 0xA09CFD29100F06C3 | Since: 1207
     */
    function taskHorseAction(ped: number | Ped, action: number, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C8514540D27FBFB | Since: 1207
     */
    function taskInvestigate(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AE4086104E067B1 | Since: 1207
     */
    function taskJump(ped: number | Ped, unused: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF90427F00A495A28 | Since: 1207
     */
    function taskKnockedOut(ped: number | Ped, permanently: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x42AC6401ABB8C7E5 | Since: 1207
     */
    function taskKnockedOutAndHogtied(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC716EB2BD16370A3 | Since: 1207
     */
    function taskLassoPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA19711D33C6708C | Since: 1207
     */
    function taskLeadAndConverse(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A7A4A54596FE09D | Since: 1207
     */
    function taskLeadHorse(ped: number | Ped, horse: number | Ped): void;
    /**
     * flags: See TASK_ENTER_VEHICLE
     *
     * Hash: 0x504D54DF3F6F2247 | Since: 1207
     */
    function taskLeaveAnyVehicle(ped: number | Ped, taskFlag: number): void;
    /**
     * flags: See TASK_ENTER_VEHICLE
     *
     * Hash: 0xD3DBCE61A490BE02 | Since: 1207
     */
    function taskLeaveVehicle(ped: number | Ped, vehicle: number | Vehicle, flags: number, unkPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FA46612594F7973 | Since: 1207
     */
    function taskLookAtCoord(ped: number | Ped, pos: Vector3, duration: number, flags: number): void;
    /**
     * param3: duration in ms, use -1 to look forever
     * param4: using 2048 is fine
     * param5: using 3 is fine
     *
     * Hash: 0x69F4BE8C8CC4796C | Since: 1207
     */
    function taskLookAtEntity(ped: number | Ped, lookAtTarget: number | Entity, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x48FAE038401A2888 | Since: 1207
     */
    function taskLootEntity(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF1501CBC4059412 | Since: 1207
     */
    function taskLootNearestEntity(ped: number | Ped, pos: Vector3): void;
    /**
     * Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
     *
     * Hash: 0x482C99D0B38D1B0A | Since: 1207
     */
    function taskMelee(ped: number | Ped, targetPed: number | Ped): boolean;
    /**
     * timer: in ms, if it reaches 0 it will auto warp the ped on the horse
     * mountStyle: See TASK_ENTER_VEHICLE
     * Flags will still apply to mountStyle
     *
     * Hash: 0x92DB0739813C5186 | Since: 1207
     */
    function taskMountAnimal(ped: number | Ped, mount: number | Ped, timer: number, seatIndex: number, pedSpeed: number, mountStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AA5AA97C65E4A2F | Since: 1207
     */
    function taskMoveBeInFormation(ped: number | Ped): void;
    /**
     * Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
     *
     * Hash: 0x79482C12482A860D | Since: 1207
     */
    function taskMoveFollowRoadUsingNavmesh(ped: number | Ped, moveBlendRatio: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AA1593AEC087A29 | Since: 1207
     */
    function taskMoveInTraffic(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x13DED0BC45600FE1 | Since: 1207
     */
    function taskMoveInTrafficAwayFromEntity(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCA3A13F7A45338B | Since: 1207
     */
    function taskMoveInTrafficToDestination(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B6A04F98BBAFB2C | Since: 1207
     */
    function taskMoveNetworkAdvancedByNameWithInitParams(ped: number | Ped, moveNetworkDefName: string, taskData: any, pos: Vector3, rot: Vector3, flag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF92171093BCABED4 | Since: 1207
     */
    function taskMoveNetworkAdvancedByNameWithInitParamsAttached(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D537BA194896636 | Since: 1207
     */
    function taskMoveNetworkByName(ped: number | Ped, task: string, multiplier: number, animDict: string, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x139805C2A67C4795 | Since: 1207
     */
    function taskMoveNetworkByNameWithInitParams(ped: number | Ped, moveNetworkDefName: string, taskData: any, animDict: string, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDA5DF49D080FE4E | Since: 1207
     */
    function taskPatrol(ped: number | Ped, patrolRoute: string): void;
    /**
     * This tasks the ped to do nothing for the specified amount of milliseconds.
     * This is useful if you want to add a delay between tasks when using a sequence task.
     *
     * Hash: 0xE73A266DB0CA9042 | Since: 1207
     */
    function taskPause(ped: number | Ped, ms: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD04FE6765D990A06 | Since: 1207
     */
    function taskPedSlideToCoord(ped: number | Ped, pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5ABA3986D90D8A3B | Since: 1207
     */
    function taskPerformSequence(ped: number | Ped, taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x89221B16730234F0 | Since: 1207
     */
    function taskPerformSequenceFromProgress(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4391700CBD89C3D8 | Since: 1207
     */
    function taskPersistentCharacter(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x502EC17B1BED4BFA | Since: 1207
     */
    function taskPickupCarriableEntity(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x55B0ECFD98596624 | Since: 1207
     */
    function taskPickUpWeapon(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7F0B43DCDC57E3D | Since: 1207
     */
    function taskPlaceCarriedEntityAtCoord(ped: number | Ped, entity: number | Entity, pos: Vector3, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D3D87C57B3D52C7 | Since: 1207
     */
    function taskPlaceCarriedEntityOnMount(ped: number | Ped, entity: number | Entity, mount: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x965FEC691D55E9BF | Since: 1207
     */
    function taskPlantBomb(ped: number | Ped, pos: Vector3, heading: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/animations
     * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
     * ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags
     *
     * Hash: 0xEA47FE3719165B94 | Since: 1207
     */
    function taskPlayAnim(ped: number | Ped, animDict: string, animName: string, speed: number, speedMultiplier: number, duration: number, flags: number, playbackRate: number, ikFlags: number, taskFilter: string): void;
    /**
     * flags: see TASK_PLAY_ANIM
     * ikFlags: see TASK_PLAY_ANIM
     *
     * Hash: 0x83CDB10EA29B370B | Since: 1207
     */
    function taskPlayAnimAdvanced(ped: number | Ped, animDict: string, animName: string, pos: Vector3, rot: Vector3, speed: number, speedMultiplier: number, duration: number, flags: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
     * emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
     *
     * enum eEmoteType
     * {
     * EMOTE_TYPE_INVALID = -1,
     * EMOTE_TYPE_REACT,
     * EMOTE_TYPE_ACTION,
     * EMOTE_TYPE_TAUNT,
     * EMOTE_TYPE_GREET,
     * EMOTE_TYPE_TWIRL_GUN,
     * EMOTE_TYPE_DANCE_FLOOR
     * };
     *
     * enum eEmotePlaybackMode
     * {
     * EMOTE_PM_INVALID = -1,
     * EMOTE_PM_UPPERBODY,
     * EMOTE_PM_UPPERBODY_LOOP,
     * EMOTE_PM_FULLBODY,
     * };
     *
     * Hash: 0xB31A277C1AC7B7FF | Since: 1207
     */
    function taskPlayEmoteWithHash(ped: number | Ped, emoteType: number, playbackMode: number, emote: number | string, isSecondaryTask: boolean, canBreakOut: boolean, disableEarlyOutAnimTag: boolean, ignoreInvalidMainTask: boolean, destroyProps: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD67214236AB1CFE | Since: 1207
     */
    function taskPlayUpperAnimFacingEntity(ped: number | Ped, animDict: string, animName: string, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x87BE56724650408E | Since: 1207
     */
    function taskPolice(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4172393E6BE1FECE | Since: 1207
     */
    function taskPutPedDirectlyIntoCover(ped: number | Ped, pos: Vector3, timeout: number, coverpoint: number): void;
    /**
     * grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
     *
     * Hash: 0xA05F3F20889D7A5B | Since: 1207
     */
    function taskPutPedDirectlyIntoGrapple(ped: number | Ped, grappleTarget: number | Ped, grappleStyle: number | string): void;
    /**
     * meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
     *
     * Hash: 0x1C6CD14A876FFE39 | Since: 1207
     */
    function taskPutPedDirectlyIntoMelee(ped: number | Ped, meleeTarget: number | Ped, meleeStyle: number | string, animBlendRatio: number): void;
    /**
     * Makes a ped react to an entity.
     * Params: reactingTo Entity can be 0, p8 is always 4
     *
     * Hash: 0xC4C32C31920E1B70 | Since: 1207
     */
    function taskReact(ped: number | Ped, reactingTo: number | Entity, pos: Vector3, reactionName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x62D2916F56B9CD2D | Since: 1207
     */
    function taskReloadWeapon(ped: number | Ped, unused: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x356088527D9EBAAD | Since: 1207
     */
    function taskReviveTarget(ped: number | Ped, reviver: number | Ped, tool: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x37FB1C870E2EC2C6 | Since: 1207
     */
    function taskRideTrain(ped: number | Ped, train: number | Vehicle, scenarioPoint: number, scenarioHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7BB967F85D8CCBDB | Since: 1207
     */
    function taskRobPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x126EF75F1E17ABE5 | Since: 1207
     */
    function taskScriptedAnimation(ped: number | Ped, args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D7F2A63688C20A4 | Since: 1207
     */
    function taskSeekClearLosToEntity(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x84D32B3BEC531324 | Since: 1207
     */
    function taskSeekCoverFromPed(ped: number | Ped, fromPed: number | Ped, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x75AC2B60386D89F2 | Since: 1207
     */
    function taskSeekCoverFromPos(ped: number | Ped, pos: Vector3, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x39246A6958EF072C | Since: 1207
     */
    function taskSeekCoverToCoords(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD43D95C7A869447F | Since: 1207
     */
    function taskSeekCoverToCoverPoint(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x90D2156198831D69 | Since: 1207
     */
    function taskSetBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x17293C633C8AC019 | Since: 1207
     */
    function taskSetCrouchMovement(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x933C06518B52A9A4 | Since: 1207
     */
    function taskSetSphereDefensiveArea(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C3FA937B44A90FA | Since: 1207
     */
    function taskSetStealthMovement(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x452419CBD838065B | Since: 1207
     */
    function taskShockingEventReact(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x46A6CC01E0826106 | Since: 1207
     */
    function taskShootAtCoord(ped: number | Ped, pos: Vector3, duration: number, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x08DA95E8298AE772 | Since: 1207
     */
    function taskShootAtEntity(entity: number | Entity, targetEntity: number | Entity, duration: number, firingPattern: number | string, affectCockedState: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x08AA95E8298AE772 | Since: 1207
     */
    function taskShootWithWeapon(ped: number | Ped, args: any): void;
    /**
     * Makes the specified ped shuffle to the next vehicle seat.
     * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
     *
     * Hash: 0x7AA80209BDA643EB | Since: 1207
     */
    function taskShuffleToNextVehicleSeat(ped: number | Ped, vehicle: number | Vehicle): void;
    /**
     * Makes the specified ped flee the specified distance from the specified position.
     * fleeType: see TASK_FLEE_COORD
     *
     * Hash: 0x94587F17E9C365D5 | Since: 1207
     */
    function taskSmartFleeCoord(ped: number | Ped, pos: Vector3, distance: number, time: number, fleeType: number, fleeSpeed: number): void;
    /**
     * Makes a ped run away from another ped (fleeFromTarget)
     *
     * fleeDistance = ped will flee this distance
     * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
     * fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
     * fleeSpeed = mostly 3f, rarely 1f in R* Scripts
     *
     * Hash: 0x22B0D0E37CCB840D | Since: 1207
     */
    function taskSmartFleePed(ped: number | Ped, fleeFromTarget: number | Ped, fleeDistance: number, fleeTime: number, fleeType: number, fleeSpeed: number, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE032F8BBA959E90 | Since: 1207
     */
    function taskStandGuard(ped: number | Ped, pos: Vector3, heading: number, scenarioName: string): void;
    /**
     * Makes the specified ped stand still for (time) milliseconds.
     *
     * Hash: 0x919BE13EED931959 | Since: 1207
     */
    function taskStandStill(ped: number | Ped, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D1F61FC34AF3CD1 | Since: 1207
     */
    function taskStartScenarioAtPosition(ped: number | Ped, scenarioHash: number | string, pos: Vector3, heading: number, duration: number, sittingScenario: boolean, teleport: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
     * Params: duration in milliseconds
     *
     * conditionalHash (optionally):
     * 0 = play random conditional anim.
     * Every conditional anim has requirements to play it.
     * If requirements are not met, ped plays random allowed conditional anim or can be stuck.
     * For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
     *
     * Hash: 0x524B54361229154F | Since: 1207
     */
    function taskStartScenarioInPlaceHash(ped: number | Ped, scenarioHash: number | string, duration: number, playEnterAnim: boolean, conditionalHash: number | string, heading: number): void;
    /**
     * Makes the ped run to take cover
     *
     * Hash: 0xE5DA8615A6180789 | Since: 1207
     */
    function taskStayInCover(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xED27560703F37258 | Since: 1207
     */
    function taskStopLeadingHorse(ped: number | Ped): void;
    /**
     * Baits: see 0x9B0C7FA063E67629
     *
     * Hash: 0x2C28AC30A72722DA | Since: 1207
     */
    function taskSwapFishingBait(ped: number | Ped, bait: string, withoutBuoy: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA21C51255B205245 | Since: 1207
     */
    function taskSwapWeapon(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7285951DBF6B5A51 | Since: 1207
     */
    function taskThrowProjectile(ped: number | Ped): void;
    /**
     * duration in milliseconds
     *
     * Hash: 0x1DDA930A0AC38571 | Since: 1207
     */
    function taskTurnPedToFaceCoord(ped: number | Ped, pos: Vector3, duration: number): void;
    /**
     * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
     *
     * Hash: 0x5AD23D40115353AC | Since: 1207
     */
    function taskTurnPedToFaceEntity(ped: number | Ped, targetEntity: number | Entity, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84179419DBDD36F2 | Since: 1207
     */
    function taskTurnToFaceClosestPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FDA1B3D7E7028B3 | Since: 1207
     */
    function taskUseNearestScenarioChainToCoord(ped: number | Ped, pos: Vector3, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x97A28E63F0BA5631 | Since: 1207
     */
    function taskUseNearestScenarioChainToCoordWarp(ped: number | Ped, pos: Vector3, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x58E2E0F23F6B76C3 | Since: 1207
     */
    function taskUseNearestScenarioToCoordWarp(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3774B03456DD6106 | Since: 1207
     */
    function taskUseNearestTrainScenarioToCoordWarp(ped: number | Ped, pos: Vector3, distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x14747F4A5971DE4E | Since: 1207
     */
    function taskUseRandomScenarioInGroup(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCDAE6324B6A821C | Since: 1207
     */
    function taskUseScenarioPoint(ped: number | Ped, scenario: number, conditionalAnim: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x447C1E9EF844BC0F | Since: 1207
     */
    function taskVehicleAimAtCoord(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xE41885592B08B097 | Since: 1207
     */
    function taskVehicleAimAtPed(ped: number | Ped, target: number | Ped): void;
    /**
     * Old name: _TASK_VEHICLE_DRIVE_TO_POINT
     * flag: 524419 and 0 in shop_horse_shop R* Script
     *
     * Hash: 0x089FF2FB965F0A29 | Since: 1207
     */
    function taskVehicleDriveStraightToPoint(driver: number | Ped, vehicle: number | Vehicle, pos: Vector3, flag: number): void;
    /**
     * stopRange: how close vehicle will get to destination before stopping, default 4.0
     * straightLineDist: distance at which AI switches to heading for target directly instead of following nodes, default -1
     *
     * Hash: 0xE2A2AA2F659D77A7 | Since: 1207
     */
    function taskVehicleDriveToCoord(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, style: any, vehicleModel: number | string, drivingMode: number, stopRange: number, straightLineDist: number): void;
    /**
     * flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
     * p7 = 6 or 3
     * p8 = x coordinate
     * p9 - 8.f
     * p10 = false
     *
     * Hash: 0x7F241A0D14354583 | Since: 1207
     */
    function taskVehicleDriveToDestination(driver: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, drivingFlags: number, stoppingRange1: number, stoppingRange2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x480142959D337D00 | Since: 1207
     */
    function taskVehicleDriveWander(ped: number | Ped, vehicle: number | Vehicle, speed: number, drivingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FA6E4B75F302400 | Since: 1207
     */
    function taskVehicleEscort(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, mode: number, speed: number, drivingStyle: number, minDistance: number, noRoadsDistance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3123FAA6DB1CF7ED | Since: 1207
     */
    function taskVehicleFollowWaypointRecording(ped: number | Ped, vehicle: number | Vehicle, waypointRecording: string, drivingMode: number, eWaypoint: number, flag: number, stoppingDist: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x195AEEB13CEFE2EE | Since: 1207
     */
    function taskVehicleGotoNavmesh(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, behaviorFlag: number, stoppingRange: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x659427E0EF36BCDE | Since: 1207
     */
    function taskVehicleMission(driver: number | Ped, vehicle: number | Vehicle, vehicleTarget: number | Vehicle, missionType: number, DriveAgainstTraffic: boolean): void;
    /**
     * See TASK_VEHICLE_MISSION
     *
     * Hash: 0x9454528DF15D657A | Since: 1207
     */
    function taskVehicleMissionPedTarget(ped: number | Ped, vehicle: number | Vehicle, pedTarget: number | Ped, mode: number, maxSpeed: number, drivingStyle: number, minDistance: number, DriveAgainstTraffic: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5190796ED39C9B6D | Since: 1207
     */
    function taskVehicleShootAtCoord(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x10AB107B887214D8 | Since: 1207
     */
    function taskVehicleShootAtPed(ped: number | Ped, target: number | Ped): void;
    /**
     * Documentation from GTA V, might be the same in RDR:
     *
     * '1 - brake
     * '3 - brake + reverse
     * '4 - turn left 90 + braking
     * '5 - turn right 90 + braking
     * '6 - brake strong (handbrake?) until time ends
     * '7 - turn left + accelerate
     * '7 - turn right + accelerate
     * '9 - weak acceleration
     * '10 - turn left + restore wheel pos to center in the end
     * '11 - turn right + restore wheel pos to center in the end
     * '13 - turn left + go reverse
     * '14 - turn left + go reverse
     * '16 - crash the game after like 2 seconds :)
     * '17 - keep actual state, game crashed after few tries
     * '18 - game crash
     * '19 - strong brake + turn left/right
     * '20 - weak brake + turn left then turn right
     * '21 - weak brake + turn right then turn left
     * '22 - brake + reverse
     * '23 - accelerate fast
     * '24 - brake
     * '25 - brake turning left then when almost stopping it turns left more
     * '26 - brake turning right then when almost stopping it turns right more
     * '27 - brake until car stop or until time ends
     * '28 - brake + strong reverse acceleration
     * '30 - performs a burnout (brake until stop + brake and accelerate)
     * '31 - accelerate + handbrake
     * '32 - accelerate very strong
     *
     * Seems to be this:
     * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
     *
     * Hash: 0xC429DCEEB339E129 | Since: 1207
     */
    function taskVehicleTempAction(driver: number | Ped, vehicle: number | Vehicle, action: number, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x04ACFAC71E6858F9 | Since: 1207
     */
    function taskWalkAway(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AC76D1408731732 | Since: 1207
     */
    function taskWanderAndConverseWithPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE054346CA3A0F315 | Since: 1207
     */
    function taskWanderInArea(ped: number | Ped, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FDA168777B28424 | Since: 1207
     */
    function taskWanderInVolume(ped: number | Ped, volume: number): void;
    /**
     * Makes ped walk around the area the params p1 p2 seems to not affect anything but p2 is either 0 or 1 and p1 is mostly 1.0 or ped heading
     *
     * Hash: 0xBB9CE077274F6A1B | Since: 1207
     */
    function taskWanderStandard(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x527EA3DB8BC7F03B | Since: 1207
     */
    function taskWanderSwim(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A7D091411C5F684 | Since: 1207
     */
    function taskWarpPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seat: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7157B82D60E4BC46 | Since: 1207
     */
    function taskWeapon(ped: number | Ped): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
     * p2: UNSPECIFIED
     *
     * Hash: 0xD6401A1B2F63BED6 | Since: 1207
     */
    function taskWhistleAnim(ped: number | Ped, audPedWhistleType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x67406F2C8F87FC4F | Since: 1207
     */
    function uncuffPed(ped: number | Ped): void;
    /**
     * getupSetHash: see nm_blend_out_sets.meta
     *
     * Hash: 0x79559BAD83CCD038 | Since: 1207
     */
    function unhogtiePed(ped: number | Ped, flags: number, getupSetHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA98FCAFD7893C834 | Since: 1207
     */
    function updateTaskHandsUpDuration(ped: number | Ped, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A353B8E6B1095B5 | Since: 1207
     */
    function useWaypointRecordingAsAssistedMovementRoute(waypointRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D6D30AB18B0B089 | Since: 1207
     */
    function vehicleWaypointPlaybackGetIsPaused(): any;
    /**
     * No comment provided
     *
     * Hash: 0x121F0593E0A431D7 | Since: 1207
     */
    function vehicleWaypointPlaybackOverrideSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A4E6AC373666BC5 | Since: 1207
     */
    function vehicleWaypointPlaybackPause(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC04FCAA7839D492 | Since: 1207
     */
    function vehicleWaypointPlaybackResume(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CEB25A7D2848963 | Since: 1207
     */
    function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xD73A5D1F0325C71C | Since: 1207
     */
    function waypointPlaybackGetIsAiming(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x701375A7D43F01CB | Since: 1207
     */
    function waypointPlaybackGetIsPaused(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA5B94DF8AF058F46 | Since: 1207
     */
    function waypointPlaybackGetIsShooting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7D7D2B47FA788E85 | Since: 1207
     */
    function waypointPlaybackOverrideSpeed(ped: number | Ped, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F342546AA06FED5 | Since: 1207
     */
    function waypointPlaybackPause(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x244F70C84C547D2D | Since: 1207
     */
    function waypointPlaybackResume(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8968400D900ED8B3 | Since: 1207
     */
    function waypointPlaybackStartAimingAtCoord(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F158205E0C74385 | Since: 1207
     */
    function waypointPlaybackStartAimingAtEntity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20E330937C399D29 | Since: 1207
     */
    function waypointPlaybackStartAimingAtPed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x057A25CFCC9DB671 | Since: 1207
     */
    function waypointPlaybackStartShootingAtCoord(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AF458F71C1196D2 | Since: 1207
     */
    function waypointPlaybackStartShootingAtEntity(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE70BA7B90F8390DC | Since: 1207
     */
    function waypointPlaybackStartShootingAtPed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x47EFA040EBB8E2EA | Since: 1207
     */
    function waypointPlaybackStopAimingOrShooting(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6599D834B12D0800 | Since: 1207
     */
    function waypointPlaybackUseDefaultSpeed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB629A298081F876F | Since: 1207
     */
    function waypointRecordingGetClosestWaypoint(waypointRecording: string, pos: Vector3, point: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2FB897405C90B361 | Since: 1207
     */
    function waypointRecordingGetCoord(waypointRecording: string, point: number, coord: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5343532C01A07234 | Since: 1207
     */
    function waypointRecordingGetNumPoints(waypointRecording: string, points: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x005622AEBC33ACA9 | Since: 1207
     */
    function waypointRecordingGetSpeedAtPoint(waypointRecording: string, point: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0000A8ACDC2E1B6A | Since: 1207
     */
    function _0x0000A8ACDC2E1B6A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x00FFE0F85253C572 | Since: 1207
     */
    function _0x00FFE0F85253C572(): any;
    /**
     * No comment provided
     *
     * Hash: 0x01AF8A3729231A43 | Since: 1207
     */
    function _0x01AF8A3729231A43(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0365000D8BF86531 | Since: 1207
     */
    function _0x0365000D8BF86531(): any;
    /**
     * No comment provided
     *
     * Hash: 0x03D741CB4052E26C | Since: 1232
     */
    function _0x03D741CB4052E26C(): any;
    /**
     * No comment provided
     *
     * Hash: 0x06ECF3925BC2ABAE | Since: 1311
     */
    function setPedPathMayUseSlidingSurfaces(ped: number | Ped, useSlidingSurfaces: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x098036CAB8373D36 | Since: 1207
     */
    function _0x098036CAB8373D36(): void;
    /**
     * No comment provided
     *
     * Hash: 0x098CAA6DBE7D8D82 | Since: 1207
     */
    function _0x098CAA6DBE7D8D82(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A98A362C5A19A43 | Since: 1207
     */
    function _0x0A98A362C5A19A43(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0D322AEF8878B8FE | Since: 1207
     */
    function _0x0D322AEF8878B8FE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E184495B27BB57D | Since: 1207
     */
    function _0x0E184495B27BB57D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F4F6C4CE471259D | Since: 1207
     */
    function _0x0F4F6C4CE471259D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FE797DD9F70DFA6 | Since: 1207
     */
    function _0x0FE797DD9F70DFA6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x10ADFDF07B7DFFBA | Since: 1207
     */
    function _0x10ADFDF07B7DFFBA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x10C44F633E2D6D9E | Since: 1207
     */
    function _0x10C44F633E2D6D9E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11C7CE1AE38911B5 | Since: 1207
     */
    function _0x11C7CE1AE38911B5(): any;
    /**
     * No comment provided
     *
     * Hash: 0x12990818C1D35886 | Since: 1207
     */
    function setPedPathPreferToAvoidFoliage(ped: number | Ped, preferAvoidFoliage: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x141BC64C8D7C5529 | Since: 1207
     */
    function _0x141BC64C8D7C5529(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x152664AA3188B193 | Since: 1207
     */
    function _0x152664AA3188B193(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1632EB9386CDBE64 | Since: 1207
     */
    function _0x1632EB9386CDBE64(): void;
    /**
     * No comment provided
     *
     * Hash: 0x19BC99C678FBA139 | Since: 1207
     */
    function _0x19BC99C678FBA139(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A7D63CB1B0BB223 | Since: 1207
     */
    function _0x1A7D63CB1B0BB223(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1AC5A8AB50CFAA33 | Since: 1207
     */
    function _0x1AC5A8AB50CFAA33(): any;
    /**
     * Checks whether a specified scenario is currently being used (actively played) by any entity (player or ped). Returns true if the scenario is already occupied, otherwise false.
     *
     * Hash: 0x1ACBC313966C21F3 | Since: 1436
     */
    function isScenarioInUse(scenarioHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1D125814EBC517EB | Since: 1207
     */
    function _0x1D125814EBC517EB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1ECF56C040FD839C | Since: 1207
     */
    function _0x1ECF56C040FD839C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F298C7BD30D1240 | Since: 1207
     */
    function _0x1F298C7BD30D1240(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F7A9A9C38C13A56 | Since: 1207
     */
    function _0x1F7A9A9C38C13A56(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2064B33F6E6B92D4 | Since: 1207
     */
    function _0x2064B33F6E6B92D4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x216343750545A486 | Since: 1207
     */
    function setPedPathPreferHorseWalkable(ped: number | Ped, preferHorseWalkable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x22CD2C33ED4467A1 | Since: 1207
     */
    function _0x22CD2C33ED4467A1(): any;
    /**
     * No comment provided
     *
     * Hash: 0x22CDBF317C40A122 | Since: 1207
     */
    function _0x22CDBF317C40A122(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x23767D80C7EED7C6 | Since: 1311
     */
    function _0x23767D80C7EED7C6(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2416EC2F31F75266 | Since: 1207
     */
    function _0x2416EC2F31F75266(entity: number | Entity, targetEntity: number | Entity, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x244430C13BA5258E | Since: 1207
     */
    function _0x244430C13BA5258E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x28EF780BDEA8A639 | Since: 1207
     */
    function _0x28EF780BDEA8A639(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2948235DB2058E99 | Since: 1207
     */
    function _0x2948235DB2058E99(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A10538D0A005E81 | Since: 1207
     */
    function _0x2A10538D0A005E81(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B8AF29A78024BD3 | Since: 1207
     */
    function _0x2B8AF29A78024BD3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C497BDEF897C6DF | Since: 1207
     */
    function _0x2C497BDEF897C6DF(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2D657B10F211C572 | Since: 1207
     */
    function _0x2D657B10F211C572(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x2E1D6D87346BB7D2 | Since: 1207
     */
    function _0x2E1D6D87346BB7D2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2EB977293923C723 | Since: 1207
     */
    function _0x2EB977293923C723(): void;
    /**
     * No comment provided
     *
     * Hash: 0x30146C25686B7836 | Since: 1207
     */
    function _0x30146C25686B7836(): any;
    /**
     * No comment provided
     *
     * Hash: 0x30B391915538EBE2 | Since: 1207
     */
    function _0x30B391915538EBE2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x31BB338F64D5C861 | Since: 1207
     */
    function _0x31BB338F64D5C861(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x351F74ED6177EBE7 | Since: 1207
     */
    function _0x351F74ED6177EBE7(): any;
    /**
     * No comment provided
     *
     * Hash: 0x358A1A751B335A11 | Since: 1207
     */
    function _0x358A1A751B335A11(): void;
    /**
     * No comment provided
     *
     * Hash: 0x370F57C47F68EBCA | Since: 1207
     */
    function _0x370F57C47F68EBCA(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3ACC128510142B9D | Since: 1207
     */
    function _0x3ACC128510142B9D(waypointRecording: string, pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x3BBEECC5B8F35318 | Since: 1207
     */
    function _0x3BBEECC5B8F35318(): void;
    /**
     * Used for HORSE_REVIVE
     *
     * Hash: 0x3F8387DB1B9F31B7 | Since: 1207
     */
    function _0x3F8387DB1B9F31B7(scriptStruct: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FEB770D8ED9047A | Since: 1207
     */
    function _0x3FEB770D8ED9047A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3FFCD7BBA074CC80 | Since: 1207
     */
    function _0x3FFCD7BBA074CC80(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x41323F4E0C4AE94B | Since: 1207
     */
    function _0x41323F4E0C4AE94B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4161648394262FDF | Since: 1207
     */
    function _0x4161648394262FDF(): void;
    /**
     * _SET_PED_*
     *
     * Hash: 0x41D1331AFAD5A091 | Since: 1207
     */
    function _0x41D1331AFAD5A091(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x42CFD8FD8CC8DC69 | Since: 1207
     */
    function setPedPathNeverUseInteriors(ped: number | Ped, neverUseInteriors: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x450080DDEDB91258 | Since: 1207
     */
    function _0x450080DDEDB91258(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A7D73989F52EB37 | Since: 1207
     */
    function _0x4A7D73989F52EB37(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4BA972D0E5AD8122 | Since: 1207
     */
    function _0x4BA972D0E5AD8122(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E806A395D43A458 | Since: 1207
     */
    function _0x4E806A395D43A458(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F57397388E1DFF8 | Since: 1207
     */
    function _0x4F57397388E1DFF8(): void;
    /**
     * Only used in R* SP Scripts
     * Params: p4 = 1.0f - 30.0f
     *
     * Hash: 0x508F5053E3F6F0C4 | Since: 1207
     */
    function _0x508F5053E3F6F0C4(ped: number | Ped, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x50AA09A0DA64E73C | Since: 1207
     */
    function _0x50AA09A0DA64E73C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x517D01BF27B682D1 | Since: 1207
     */
    function _0x517D01BF27B682D1(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x5217B7B6DB78E1F3 | Since: 1207
     */
    function _0x5217B7B6DB78E1F3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x583AE9AF9CEE0958 | Since: 1207
     */
    function _0x583AE9AF9CEE0958(vehicle: number | Vehicle, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5952DFA38FA529FE | Since: 1232
     */
    function _0x5952DFA38FA529FE(): any;
    /**
     * Returns the entity coverpoint with offset.
     *
     * Hash: 0x59872EA4CBD11C56 | Since: 1207
     */
    function getCoverpointFromEntityWithOffset(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, heading: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x59AE5CA4FFB4E378 | Since: 1207
     */
    function _0x59AE5CA4FFB4E378(): any;
    /**
     * No comment provided
     *
     * Hash: 0x59AEA4DC640814B9 | Since: 1207
     */
    function _0x59AEA4DC640814B9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B68D0007D9C92EB | Since: 1207
     */
    function _0x5B68D0007D9C92EB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D9B0BAAF04CF65B | Since: 1207
     */
    function _0x5D9B0BAAF04CF65B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EA655F01D93667A | Since: 1207
     */
    function _0x5EA655F01D93667A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x615DC4A82E90BB48 | Since: 1207
     */
    function _0x615DC4A82E90BB48(): void;
    /**
     * No comment provided
     *
     * Hash: 0x640A602946A8C972 | Since: 1207
     */
    function _0x640A602946A8C972(): any;
    /**
     * No comment provided
     *
     * Hash: 0x643FD1556F621772 | Since: 1207
     */
    function _0x643FD1556F621772(): any;
    /**
     * No comment provided
     *
     * Hash: 0x651F0530083C0E5A | Since: 1207
     */
    function _0x651F0530083C0E5A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x65D281985F2BDFC2 | Since: 1207
     */
    function _0x65D281985F2BDFC2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x673A8779D229BA5A | Since: 1207
     */
    function _0x673A8779D229BA5A(): void;
    /**
     * Only used in R* SP Script beat_washed_ashore
     * `Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2`
     *
     * Hash: 0x678D3226CF70B9C8 | Since: 1207
     */
    function _0x678D3226CF70B9C8(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6A1AF481407BF6E9 | Since: 1207
     */
    function _0x6A1AF481407BF6E9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6AFD84AEAA3EA538 | Since: 1207
     */
    function _0x6AFD84AEAA3EA538(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6AFDA2264925BD11 | Since: 1207
     */
    function _0x6AFDA2264925BD11(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BA606AB3A83BC4D | Since: 1207
     */
    function _0x6BA606AB3A83BC4D(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6C269F673C47031E | Since: 1207
     */
    function _0x6C269F673C47031E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6C50B9DCCCA70023 | Since: 1207
     */
    function isEntityRevivable(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6DAC799857EF3F11 | Since: 1311
     */
    function _0x6DAC799857EF3F11(): any;
    /**
     * No comment provided
     *
     * Hash: 0x722D6A49200174FE | Since: 1207
     */
    function _0x722D6A49200174FE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x748D5E0D2A1A4C61 | Since: 1207
     */
    function _0x748D5E0D2A1A4C61(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74F0209674864CBD | Since: 1207
     */
    function _0x74F0209674864CBD(): any;
    /**
     * No comment provided
     *
     * Hash: 0x756C7B4C43DF0422 | Since: 1207
     */
    function _0x756C7B4C43DF0422(): any;
    /**
     * No comment provided
     *
     * Hash: 0x764DB5A48390FBAD | Since: 1207
     */
    function _0x764DB5A48390FBAD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x76610D12A838EBDE | Since: 1311
     */
    function _0x76610D12A838EBDE(): any;
    /**
     * No comment provided
     *
     * Hash: 0x78D8C1D4EB80C588 | Since: 1207
     */
    function _0x78D8C1D4EB80C588(): any;
    /**
     * No comment provided
     *
     * Hash: 0x79197F7D2BB5E73A | Since: 1207
     */
    function _0x79197F7D2BB5E73A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7C015D8BCEC72CF4 | Since: 1207
     */
    function setPedPathAvoidTraffic(ped: number | Ped, avoidTraffic: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CB99FADDE73CD1B | Since: 1311
     */
    function _0x7CB99FADDE73CD1B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7FB78B2199C10E92 | Since: 1207
     */
    function _0x7FB78B2199C10E92(): void;
    /**
     * No comment provided
     *
     * Hash: 0x801BD27403F3CBA0 | Since: 1207
     */
    function _0x801BD27403F3CBA0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x816A3ACD265E2297 | Since: 1207
     */
    function _0x816A3ACD265E2297(): void;
    /**
     * No comment provided
     *
     * Hash: 0x827A58CED9D4D5B4 | Since: 1207
     */
    function _0x827A58CED9D4D5B4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x82ED59F095056550 | Since: 1207
     */
    function _0x82ED59F095056550(): void;
    /**
     * No comment provided
     *
     * Hash: 0x849791EBBDBA0362 | Since: 1207
     */
    function _0x849791EBBDBA0362(): any;
    /**
     * No comment provided
     *
     * Hash: 0x865732725536EE39 | Since: 1207
     */
    function _0x865732725536EE39(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x8798CF6815B8FE0F | Since: 1207
     */
    function _0x8798CF6815B8FE0F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x885D19AC2B6FBFF4 | Since: 1207
     */
    function _0x885D19AC2B6FBFF4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x88FD60D846D9CD63 | Since: 1207
     */
    function _0x88FD60D846D9CD63(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B1FDF63C3193EDA | Since: 1207
     */
    function _0x8B1FDF63C3193EDA(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BB283A7888AD1AD | Since: 1207
     */
    function setPedPathPreferToAvoidMud(ped: number | Ped, preferAvoidMud: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E1DDE26D270CC5E | Since: 1207
     */
    function _0x8E1DDE26D270CC5E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F8C84363810691A | Since: 1207
     */
    function _0x8F8C84363810691A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9050DF2C53801208 | Since: 1207
     */
    function _0x9050DF2C53801208(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x90703A8F75EE4ABD | Since: 1207
     */
    function _0x90703A8F75EE4ABD(): any;
    /**
     * No comment provided
     *
     * Hash: 0x908BB14BCE85C80E | Since: 1207
     */
    function _0x908BB14BCE85C80E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x91CB5E431F579BA1 | Since: 1207
     */
    function _0x91CB5E431F579BA1(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x920684BE432875B1 | Since: 1311
     */
    function _0x920684BE432875B1(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9420FB11B8D77948 | Since: 1207
     */
    function _0x9420FB11B8D77948(): any;
    /**
     * No comment provided
     *
     * Hash: 0x954451EA2D2120FB | Since: 1207
     */
    function _0x954451EA2D2120FB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9585FF23C4B8EDE0 | Since: 1207
     */
    function _0x9585FF23C4B8EDE0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9667CCE29BFA0780 | Since: 1207
     */
    function _0x9667CCE29BFA0780(): void;
    /**
     * No comment provided
     *
     * Hash: 0x974DA3408DEC4E79 | Since: 1207
     */
    function _0x974DA3408DEC4E79(): any;
    /**
     * No comment provided
     *
     * Hash: 0x9ADDBB9242179D56 | Since: 1207
     */
    function _0x9ADDBB9242179D56(object: number | Object, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B6A58FDB0024F12 | Since: 1207
     */
    function _0x9B6A58FDB0024F12(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C8F42A5D1859DC1 | Since: 1207
     */
    function _0x9C8F42A5D1859DC1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9EBD34958AB6F824 | Since: 1207
     */
    function _0x9EBD34958AB6F824(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FF5F9B24E870748 | Since: 1207
     */
    function _0x9FF5F9B24E870748(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA052608A12559BBB | Since: 1207
     */
    function _0xA052608A12559BBB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA21AA2F0C2180125 | Since: 1207
     */
    function _0xA21AA2F0C2180125(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA263ADBBC8056214 | Since: 1207
     */
    function _0xA263ADBBC8056214(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA42DC7919159CCCF | Since: 1207
     */
    function _0xA42DC7919159CCCF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6A76D666A281F2D | Since: 1207
     */
    function _0xA6A76D666A281F2D(item: number | string): void;
    /**
     * _SET_SCENARIO_*
     *
     * Hash: 0xA7479FB665361EDB | Since: 1207
     */
    function _0xA7479FB665361EDB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9E7672F8C6C6F74 | Since: 1207
     */
    function _0xA9E7672F8C6C6F74(): any;
    /**
     * No comment provided
     *
     * Hash: 0xAC5045AB7F1A34FD | Since: 1207
     */
    function _0xAC5045AB7F1A34FD(): any;
    /**
     * _SET_SCENARIO_POINT_*
     *
     * Hash: 0xADC45010BC17AF0E | Since: 1207
     */
    function _0xADC45010BC17AF0E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF2EF28CE3084505 | Since: 1207
     */
    function _0xAF2EF28CE3084505(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2D15D3551FE4FAE | Since: 1311
     */
    function _0xB2D15D3551FE4FAE(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2F47A1AFDFCC595 | Since: 1207
     */
    function _0xB2F47A1AFDFCC595(): void;
    /**
     * All Interaction states
     * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION#-4-item_interaction_state_name--item_interaction_propid--1
     *
     * Hash: 0xB35370D5353995CB | Since: 1207
     */
    function setItemInteractionState(ped: number | Ped, itemInteractionState: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB520DBDA7FCF573F | Since: 1207
     */
    function _0xB520DBDA7FCF573F(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB79817DB31FF72B9 | Since: 1207
     */
    function _0xB79817DB31FF72B9(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8E213D02F37947D | Since: 1207
     */
    function _0xB8E213D02F37947D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8E3486D107F4194 | Since: 1207
     */
    function _0xB8E3486D107F4194(): void;
    /**
     * list of carriable configs  https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70
     *
     * Hash: 0xB8F52A3F84A7CC59 | Since: 1207
     */
    function hasCarriableConfigHashLoaded(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBAAB791AA72C2821 | Since: 1207
     */
    function _0xBAAB791AA72C2821(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC3F847AE2C3DC65 | Since: 1207
     */
    function _0xBC3F847AE2C3DC65(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD1C3C0F271C39D3 | Since: 1207
     */
    function _0xBD1C3C0F271C39D3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD70108D01875299 | Since: 1207
     */
    function _0xBD70108D01875299(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBEDBE39B5FD98FD6 | Since: 1207
     */
    function _0xBEDBE39B5FD98FD6(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBEEFBB608D2AA68A | Since: 1207
     */
    function _0xBEEFBB608D2AA68A(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6170856E54557B2 | Since: 1207
     */
    function setPedPathPreferStayInWater(ped: number | Ped, preferStayInWater: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE4E669400E5F8AA | Since: 1207
     */
    function _0xCE4E669400E5F8AA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0ABC4EA3B5E21A0 | Since: 1311
     */
    function _0xD0ABC4EA3B5E21A0(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD508FA229F1C4900 | Since: 1207
     */
    function _0xD508FA229F1C4900(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD999E379265A4501 | Since: 1207
     */
    function _0xD999E379265A4501(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE0C8B145EA466FF | Since: 1207
     */
    function _0xDE0C8B145EA466FF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF56A2B50C04DEA4 | Since: 1207
     */
    function _0xDF56A2B50C04DEA4(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDF94844D474F31E5 | Since: 1207
     */
    function _0xDF94844D474F31E5(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE01C8DC8EDD28D31 | Since: 1207
     */
    function _0xE01C8DC8EDD28D31(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE01F55B2896F6B37 | Since: 1207
     */
    function _0xE01F55B2896F6B37(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE05A5D39BE6E93AF | Since: 1207
     */
    function _0xE05A5D39BE6E93AF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE116F6F2DA2D777E | Since: 1207
     */
    function _0xE116F6F2DA2D777E(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xE1C105E6BBA48270 | Since: 1207
     */
    function _0xE1C105E6BBA48270(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE2CF104ADD49D4BF | Since: 1207
     */
    function _0xE2CF104ADD49D4BF(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE55478C5EDF70AC2 | Since: 1207
     */
    function _0xE55478C5EDF70AC2(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE5831AA1E2FD147C | Since: 1207
     */
    function _0xE5831AA1E2FD147C(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE62754D09354F6CF | Since: 1207
     */
    function _0xE62754D09354F6CF(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE69FDA40AAC3EFC0 | Since: 1207
     */
    function _0xE69FDA40AAC3EFC0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6A151364C600B24 | Since: 1207
     */
    function _0xE6A151364C600B24(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE7BBC4E56B989449 | Since: 1207
     */
    function _0xE7BBC4E56B989449(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE9225354FB7437A7 | Since: 1207
     */
    function _0xE9225354FB7437A7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9A6400D1A0E7A55 | Since: 1207
     */
    function _0xE9A6400D1A0E7A55(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEAF87DA2BE78A15B | Since: 1207
     */
    function _0xEAF87DA2BE78A15B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB67D4E056C85A81 | Since: 1207
     */
    function _0xEB67D4E056C85A81(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEBA2081E0A5F4D17 | Since: 1207
     */
    function _0xEBA2081E0A5F4D17(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC516FE805D2CB2D | Since: 1207
     */
    function _0xEC516FE805D2CB2D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFD875C2791EBEFD | Since: 1207
     */
    function _0xEFD875C2791EBEFD(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF3C3503276F4A034 | Since: 1436
     */
    function _0xF3C3503276F4A034(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xF40A109B4B79A848 | Since: 1207
     */
    function _0xF40A109B4B79A848(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF718931A82EEB898 | Since: 1207
     */
    function _0xF718931A82EEB898(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF948F4356F010F11 | Since: 1207
     */
    function _0xF948F4356F010F11(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF97F462779B31786 | Since: 1207
     */
    function _0xF97F462779B31786(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFA30E2254461ADEB | Since: 1207
     */
    function _0xFA30E2254461ADEB(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC7F71CF49F70B6B | Since: 1207
     */
    function _0xFC7F71CF49F70B6B(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDECCA06E8B81346 | Since: 1207
     */
    function _0xFDECCA06E8B81346(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0xFE5D28B9B7837CC1 | Since: 1207
     */
    function _0xFE5D28B9B7837CC1(): any;
    /**
     * https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70 carriable config list
     *
     * Hash: 0xFF745B0346E19E2C | Since: 1207
     */
    function loadCarriableConfigHash(hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF8AFCA532B500D4 | Since: 1207
     */
    function _0xFF8AFCA532B500D4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFB520A3E16F7B7B | Since: 1207
     */
    function _0xFFB520A3E16F7B7B(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB2ED1DC3AEC0654 | Since: 1207
     */
    function addCoverBlockingVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8F1A5B4CED3725A | Since: 1207
     */
    function addFleeTargetCoords(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x8360C47380B6F351 | Since: 1207
     */
    function associatePropWithScenario(scenario: number, entity: number | Entity, propName: string): boolean;
    /**
     * groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
     * p7: -1 in R* Scripts
     * Returns compositeId
     *
     * Hash: 0x5B4BBE80AD5972DC | Since: 1207
     */
    function createHerbComposites(asset: number | string, pos: Vector3, heading: number, groundSetting: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5C885E0978B6AD60 | Since: 1207
     */
    function createWaypointPath(pathName: string, nodes: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7981037A96E7D174 | Since: 1207
     */
    function cuffPed(ped: number | Ped): void;
    /**
     * Params: p1 is always false except in script nb_egg_protector
     *
     * Hash: 0x5758B1EE0C3FD4AC | Since: 1207
     */
    function deletePatchObjectsFromHerbComposites(compositeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x81948DFE4F5A0283 | Since: 1207
     */
    function deleteScenarioPoint(scenario: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x36D188AECB26094B | Since: 1207
     */
    function detachCarriablePed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6EF4E31B4D5D2DA0 | Since: 1207
     */
    function disassociatePropFromScenario(scenario: number, propName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76E98B52369A289C | Since: 1207
     */
    function doesScenarioGroupExistHash(scenarioGroup: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA31F199A73801D3 | Since: 1207
     */
    function doesScenarioPointHaveProps(scenario: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE47DD64B9F02677D | Since: 1207
     */
    function findModelForItem(item: number | string): number;
    /**
     * Flowers, Stalks or whatever the composite has
     *
     * Hash: 0x96C6ED22FB742C3E | Since: 1207
     */
    function getHerbCompositeNumEntities(compositeId: number, outEntities: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x4687E69D258BBE41 | Since: 1207
     */
    function getHogtieEscapeTimer(ped: number | Ped): number;
    /**
     * item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
     * http://prntscr.com/1qtp3bz
     * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
     *
     * Hash: 0x05A0100EA714DB68 | Since: 1207
     */
    function getItemInteractionEntityFromPed(ped: number | Ped, item: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xED1F514AF4732258 | Since: 1207
     */
    function getLedHorseFromPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1948BBE561A2375A | Since: 1207
     */
    function getPedIsIgnoringDeadBodies(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5BA659955369B0E2 | Since: 1207
     */
    function getPedUsingScenarioPoint(scenario: number): number;
    /**
     * Returns m_eContainerState
     *
     * Hash: 0xB219612B5568E9EC | Since: 1207
     */
    function getScenarioContainerOpeningState(entity: number | Entity): boolean;
    /**
     * Params: p1 is always true in R* Scripts
     *
     * Hash: 0xA8452DD321607029 | Since: 1207
     */
    function getScenarioPointCoords(scenario: number): Vector3;
    /**
     * Note: The current name for this native is the old name of 0x295514F198EFD0CA
     * Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
     *
     * Hash: 0x7467165EE97D3C68 | Since: 1207
     */
    function getScenarioPointEntity(scenario: number): number;
    /**
     * Params: p1 is always true in R* Scripts
     *
     * Hash: 0xB93EA7184BAA85C3 | Since: 1207
     */
    function getScenarioPointHeading(scenario: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF7993356F52359A | Since: 1207
     */
    function getScenarioPointPedIsUsing(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6718F40313A2B5A6 | Since: 1207
     */
    function getScenarioPointRadius(scenario: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xA92450B5AE687AAF | Since: 1207
     */
    function getScenarioPointType(scenario: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D0571BB55879DA2 | Since: 1207
     */
    function getScenarioPointTypePedIsUsing(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xA710DC5D25F8B942 | Since: 1207
     */
    function getScriptTaskActionTime(ped: number | Ped, task: number | string): number;
    /**
     * Fishing Research: https://pastebin.com/NmK5ZLVs
     * Only used in R* Scripts fishing_core and av_fishing_river
     *
     * Hash: 0xF3735ACD11ACD500 | Since: 1207
     */
    function getTaskFishing(ped: number | Ped): boolean;
    /**
     * Returns hash of the underlying move network def, see move_networks.xml
     * https://alloc8or.re/rdr3/doc/misc/move_networks.txt
     *
     * Hash: 0xCACC2F9D994504B7 | Since: 1207
     */
    function getTaskMoveNetworkId(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x844CEEE428EA35B0 | Since: 1207
     */
    function getTaskMoveNetworkPhaseFloat(ped: number | Ped, phaseName: string): number;
    /**
     * Returns true while a hat is being picked up
     * _IS_A* - _IS_D*
     *
     * Hash: 0x11CD066F54DA0133 | Since: 1207
     */
    function isHatBeingPickedUp(hatObject: number | Object): boolean;
    /**
     * Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
     * _IS_A* - _IS_D*
     *
     * Hash: 0x4ECCC2815CA79AE2 | Since: 1207
     */
    function isHatBeingPickedUp2(hatObject: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9CC7856D52DBD25 | Since: 1207
     */
    function isPedArrestingAnyPed(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8B29D18022EA2B7 | Since: 1207
     */
    function isPedDuelling(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFC4303DDC6E60D3 | Since: 1207
     */
    function isPedLeadingHorse(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDCC374913DE6AAA6 | Since: 1207
     */
    function isScenarioGroupEnabledHash(scenarioGroup: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CC36D4156006509 | Since: 1207
     */
    function isScenarioPointActive(scenario: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8569C38D2FB80650 | Since: 1207
     */
    function isScenarioPointFlagSet(scenario: number, flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x78B4567E18B54480 | Since: 1207
     */
    function makeObjectCarriable(object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A52076D26E09004 | Since: 1207
     */
    function pedFishingrodHookEntity(ped: number | Ped, entity: number | Entity): void;
    /**
     * Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
     *
     * Hash: 0xCE71C2F9BAA3F975 | Since: 1207
     */
    function pedFishingrodHookObject(ped: number | Ped, object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x02EBBB3989B7E695 | Since: 1207
     */
    function pedIsInScenarioBase(ped: number | Ped): boolean;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
     *
     * Hash: 0x73F0D0327BFA0812 | Since: 1207
     */
    function requestHerbCompositeAsset(asset: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E20878FD208A68E | Since: 1207
     */
    function resetScenarioForEntity(scenario: number, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A40040BB5AE3EA2 | Since: 1207
     */
    function resetScenarioScript(scenario: number): void;
    /**
     * Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
     *
     * Hash: 0x9B0C7FA063E67629 | Since: 1207
     */
    function setFishingBait(ped: number | Ped, bait: string, withoutBuoy: boolean, instantly: boolean): void;
    /**
     * Sets the time it takes for a hogtied ped to escape
     * -1.0f for ped to never escape
     *
     * Hash: 0xAB591AE6B48B913E | Since: 1207
     */
    function setHogtieEscapeTimer(ped: number | Ped, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x34C0010188D7C54A | Since: 1207
     */
    function setPedClearAimingInTheAir(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x013A7BA5015C1372 | Since: 1207
     */
    function setPedIgnoreDeadBodies(ped: number | Ped, toggle: boolean): void;
    /**
     * _SET_PED_PATH_P*
     *
     * Hash: 0x70F7A1EAB1AE3AA8 | Since: 1232
     */
    function setPedPathLadderCostModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DE63896B176EA94 | Since: 1207
     */
    function setPedPathMayEnterDeepWater(ped: number | Ped, mayEnterDeepWater: boolean): void;
    /**
     * Opens/closes containers: ChestDugUp
     *
     * Hash: 0x188F8071F244B9B8 | Since: 1207
     */
    function setScenarioContainerOpeningState(entity: number | Entity, open: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9925EDDB6EAB88CD | Since: 1207
     */
    function setScenarioGroupEnabledHash(scenarioGroup: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEE4829304F93EEE | Since: 1207
     */
    function setScenarioPointActive(scenario: number, active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2056AB38DF06825C | Since: 1207
     */
    function setScenarioPointCoords(scenario: number, pos: Vector3): void;
    /**
     * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
     *
     * Hash: 0x5AF19B6CC2115D34 | Since: 1207
     */
    function setScenarioPointFlag(scenario: number, flag: number, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3A0DA8F91612C6E | Since: 1207
     */
    function setScenarioPointHeading(scenario: number, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC47D9080A9A8856A | Since: 1207
     */
    function setScenarioPointRadius(scenario: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD00E50E673802D71 | Since: 1207
     */
    function setScenarioTypeEnabledHash(scenarioType: number | string, toggle: boolean): void;
    /**
     * Only used in R* Scripts fishing_core and av_fishing_river
     *
     * Hash: 0xF3735ACD11ACD501 | Since: 1207
     */
    function setTaskFishing(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x099D4A855D53B03B | Since: 1207
     */
    function setTaskMoveNetworkSignalFloat2(ped: number | Ped, signalName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4662BFE01938D98D | Since: 1207
     */
    function setTaskMoveNetworkSignalVector(ped: number | Ped, signalName: string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x30A768C30D385EC5 | Since: 1207
     */
    function taskAnimalBleedOut(ped: number | Ped, killer: number | Ped, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE53D17AD837CBF7C | Since: 1207
     */
    function taskBoardVehicle(ped: number | Ped, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE41A09C8DDFF7AA4 | Since: 1207
     */
    function taskBoardVehicle2(ped: number | Ped, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF1D85BCAF60D537 | Since: 1207
     */
    function taskClimb2(ped: number | Ped, heading: number): void;
    /**
     * Coords: volume coords used in R* Script smuggler2
     * p4/p5 = 0 in R* Scripts previous name TASK_COMBAT_PED_3
     *
     * Hash: 0xC624414FA748B9BA | Since: 1207
     */
    function taskCombatPedAtCoords(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x81D16C4FF3A77ADF | Since: 1207
     */
    function taskCutFreeHogtiedTargetPed(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x525421A507216084 | Since: 1207
     */
    function taskCutFreeHogtiedTargetPed2(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7C6854BB5A4192A | Since: 1207
     */
    function taskDisembarkVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDFEEB7600BCD938 | Since: 1207
     */
    function taskEmoteOutro(ped: number | Ped): void;
    /**
     * _A*
     *
     * Hash: 0xAA0AF6025160243A | Since: 1207
     */
    function taskEquipHat(hatObject: number | Object, ped: number | Ped): void;
    /**
     * fleeType: see TASK_FLEE_COORD
     *
     * Hash: 0x6879FF208ED87F2A | Since: 1207
     */
    function taskFleeFromCoord(): void;
    /**
     * fleeType: see TASK_FLEE_COORD
     *
     * Hash: 0x7B74D8EEDE9B5727 | Since: 1207
     */
    function taskFleeFromPed(ped: number | Ped, fleeFromTarget: number | Ped, pos: Vector3, distance: number, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FC9B33976BACD6C | Since: 1207
     */
    function taskGuardAssignedDefensiveArea2(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x648B75D44930D6BD | Since: 1207
     */
    function taskIntimidated(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x933ACC1A1771A288 | Since: 1207
     */
    function taskIntimidated2(victim: number | Ped, attacker: number | Ped, everyFrame: boolean, flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x72F52AA2D2B172CC | Since: 1207
     */
    function taskItemInteraction2(ped: number | Ped, propNameGxt: number | string, prop: number | Object, propId: number | string, itemInteractionState: number | string): void;
    /**
     * Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
     *
     * Hash: 0xD61D5E1AD9876DEB | Since: 1207
     */
    function taskItemInteraction3(ped: number | Ped, item: number | string, guid: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x91083103137D7254 | Since: 1207
     */
    function taskJump2(ped: number | Ped, pos: Vector3, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x964B06C88E4C86DB | Since: 1207
     */
    function taskPatrol2(): void;
    /**
     * Old name: _TASK_PERFORM_SEQUENCE_2
     *
     * Hash: 0x4FC0AF869D6E309D | Since: 1207
     */
    function taskPerformSequenceLocally(): void;
    /**
     * Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
     *
     * Hash: 0x884E3436CC1F41DD | Since: 1207
     */
    function taskPlayEmote(ped: number | Ped, emoteType: number, playbackMode: number, emote: number | string, isSecondaryTask: boolean, canBreakOut: boolean, disableEarlyOutAnimTag: boolean, ignoreInvalidMainTask: boolean, destroyProps: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF8A5855B9F9A97B | Since: 1207
     */
    function taskPutPedDirectlyIntoCoverFromCoords(ped: number | Ped, pos: Vector3, fromX: number, fromY: number, fromZ: number, timeout: number): void;
    /**
     * Takes scenario point handle instead of hash
     *
     * Hash: 0xA917E39F2CEFD215 | Since: 1207
     */
    function taskStartScenarioInPlace2(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7282356DFF6B5A51 | Since: 1207
     */
    function taskThrowProjectile2(): void;
    /**
     * No comment provided
     *
     * Hash: 0x322BFDEA666E2B0E | Since: 1207
     */
    function taskUseNearestScenarioToCoord(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F6641449DD86FBE | Since: 1207
     */
    function taskUseScenarioPoint2(ped: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF0108F01FB105DA2 | Since: 1207
     */
    function taskVehicleDriveToCoord2(ped: number | Ped): void;
    /**
     * Tasks vehicle towards owner
     *
     * Hash: 0x391073B9D3CCE2BA | Since: 1207
     */
    function taskVehicleDriveToDestination2(vehicle: number | Vehicle, pos: Vector3, speed: number): void;
    /**
     * Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
     *
     * Hash: 0x6524A8981E8BE7C9 | Since: 1207
     */
    function taskVehicleDriveToPoint2(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * Vehicle Auto Drive (?)
     * p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
     * Speed: usually 8f
     * Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
     *
     * Hash: 0x55CD5FDDD4335C1E | Since: 1207
     */
    function taskVehicleFleeOnCleanup(vehicle: number | Vehicle, speed: number, type: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x041D17A9E221AE30 | Since: 1207
     */
    function taskVehicleFollowWaypointRecording2(): void;
}
export declare namespace telemetry {
    /**
     * No comment provided
     *
     * Hash: 0x3180E991D4B8F248 | Since: 1207
     */
    function analyticsPlaytimeFreemodeEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9F24081D84931B8 | Since: 1207
     */
    function analyticsPlaytimeFreemodeStart(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF516E598D966D06 | Since: 1207
     */
    function telemetryCampDonate(transactionId: any, slotId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF9052BC7A3B7D33 | Since: 1207
     */
    function telemetryPersonalVehicleMount(): void;
    /**
     * No comment provided
     *
     * Hash: 0x076C5843371EB889 | Since: 1311
     */
    function telemetryPlayerMenuPin(): void;
    /**
     * Note: this native was added in build 1491.50
     *
     * Hash: 0x6F5BC5C4EAB42B15 | Since: 1491
     */
    function _0x6F5BC5C4EAB42B15(linkID: number, type: number, contentId: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC0BD8736DCAF841 | Since: 1207
     */
    function _0xEC0BD8736DCAF841(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x32D5898C4898CD95 | Since: 1207
     */
    function clearTelemetryShopUi(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3145044F3990D321 | Since: 1207
     */
    function telemetryAmbientVignette(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7581972ADF5D699A | Since: 1207
     */
    function telemetryAnimalSkinned(type: number | string, items: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x52FA31DB8F3AD25D | Since: 1207
     */
    function telemetryBountyTarget(data: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x565EAA726B2CE3B7 | Since: 1207
     */
    function telemetryCampCreated(): void;
    /**
     * No comment provided
     *
     * Hash: 0x217F47761376E16E | Since: 1207
     */
    function telemetryCampSupplies(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7207AD471BC9278C | Since: 1355
     */
    function telemetryCharCreator(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6CB05DDAEE43AFD | Since: 1207
     */
    function telemetryCollect(transactionId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x621D719C4836292B | Since: 1232
     */
    function telemetryCoupon(): void;
    /**
     * No comment provided
     *
     * Hash: 0x78C2E029DB205A3A | Since: 1207
     */
    function telemetryCraftItem(quantity: any): void;
    /**
     * Works in MP only.
     *
     * Hash: 0xE692D336F8A2A97F | Since: 1207
     */
    function telemetryCreateUuid(uuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40914CCF2A1AB531 | Since: 1207
     */
    function telemetryCustom(args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xE57529D23541D2DD | Since: 1207
     */
    function telemetryDefensive(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5EAD898EF387E73 | Since: 1207
     */
    function telemetryDiscoverable(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C24AF8EEEEF8A55 | Since: 1207
     */
    function telemetryEmoteAddCategoryToSave(emote: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CEF4AC79F7E7FAD | Since: 1207
     */
    function telemetryFastTravel(): void;
    /**
     * No comment provided
     *
     * Hash: 0x16B23D4F7A1F50D9 | Since: 1207
     */
    function telemetryFavorEmote(): void;
    /**
     * No comment provided
     *
     * Hash: 0x51EC204A6E5B5A1A | Since: 1207
     */
    function telemetryGameProgress(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6DC9B21AC7A8729 | Since: 1207
     */
    function telemetryGangShares(): void;
    /**
     * No comment provided
     *
     * Hash: 0x536B6025E94AC48F | Since: 1207
     */
    function telemetryGoldStore(): void;
    /**
     * No comment provided
     *
     * Hash: 0x415FE28ED44BFF14 | Since: 1207
     */
    function telemetryGunLocker(): void;
    /**
     * No comment provided
     *
     * Hash: 0x317D9C9560529CC2 | Since: 1207
     */
    function telemetryGunLockerWeaponRemoved(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3ADF4880784FA9C | Since: 1207
     */
    function telemetryGunLockerWeaponStored(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE693EC3A178F6C2 | Since: 1207
     */
    function telemetryHerbPicked(herbType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6B763C7F4902201 | Since: 1207
     */
    function telemetryHonor(): void;
    /**
     * No comment provided
     *
     * Hash: 0x25CC50EC1A6F3A96 | Since: 1232
     */
    function telemetryHubNavigation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x37AA282163B0D2C4 | Since: 1232
     */
    function telemetryHubOffers(couponItem: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B554723799245F4 | Since: 1355
     */
    function telemetryIntroSkip(): void;
    /**
     * No comment provided
     *
     * Hash: 0xECD67E9FA677CCCF | Since: 1207
     */
    function telemetryLobbyProgression(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF63EF77B0DF0397 | Since: 1207
     */
    function telemetryLoot(): void;
    /**
     * No comment provided
     *
     * Hash: 0x330029E121380CEB | Since: 1355
     */
    function telemetryMatchNomination(args: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2058154357726BB | Since: 1207
     */
    function telemetryMatchOver(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C08D2B6D8BE17E4 | Since: 1311
     */
    function telemetryMatchQueue(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF620F47B4F4A78C4 | Since: 1207
     */
    function telemetryMatchStarted(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF3C68F56BAD7B69 | Since: 1207
     */
    function telemetryMatchVote(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3255D4D2082C6339 | Since: 1207
     */
    function telemetryMenuNavigation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EC7890D446BD9C1 | Since: 1207
     */
    function telemetryMissionCheckpoint(): void;
    /**
     * _TELEMETRY_C* - _TELEMETRY_G*
     *
     * Hash: 0x6571E4327390EC0B | Since: 1207
     */
    function telemetryMissionFailedToLaunch(pos: Vector3, reason: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA323F5E1A4DA2F1 | Since: 1207
     */
    function telemetryMissionIloOption(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD894437E12C17AEC | Since: 1207
     */
    function telemetryMissionOver(): void;
    /**
     * No comment provided
     *
     * Hash: 0x15B0CC1B36F1DE29 | Since: 1207
     */
    function telemetryMissionStarted(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5013EFBB5516867 | Since: 1232
     */
    function telemetryMoonshineBrew(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA72773C3134F9A57 | Since: 1207
     */
    function telemetryNetCamp(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE26970A7AE0F28E9 | Since: 1207
     */
    function telemetryNotoriety(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF37A2149BC9A8A27 | Since: 1207
     */
    function telemetryParleyFeud(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE67AF24C5A3B6058 | Since: 1207
     */
    function telemetryPersonalVehicleWagon(): void;
    /**
     * No comment provided
     *
     * Hash: 0xED22BE4C5A399E63 | Since: 1207
     */
    function telemetryPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0777D65EE8A17517 | Since: 1311
     */
    function telemetryPhotoCam(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DA4718DF897EB25 | Since: 1207
     */
    function telemetryPlayerSpawned(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8127C5AA05C5A210 | Since: 1207
     */
    function telemetryPokerOver(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB204BF9F30298D77 | Since: 1207
     */
    function telemetryPrison(transactionId: any, bountyAmount: any, ped: number | Ped, completionType: any, jailTimeServed: any, jailTimeLeft: any, posseRole: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD6F8A0335D821F9 | Since: 1207
     */
    function telemetryRegion(regionHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB43D1C80B5E9500 | Since: 1207
     */
    function telemetryRoleBounty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AC38DFD286DAD14 | Since: 1207
     */
    function telemetryRoleCollector(transactionId: any, collectible: any, category: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x99D40C5D74BC88E9 | Since: 1232
     */
    function telemetryRoleMoonshiner(transactionId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FB9EA308F302922 | Since: 1311
     */
    function telemetryRoleNaturalist(transactionId: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x32C2939564D74BFF | Since: 1207
     */
    function telemetryRoleTokenTransaction(): void;
    /**
     * No comment provided
     *
     * Hash: 0x476038B5A0734C10 | Since: 1207
     */
    function telemetryRoleTrader(transactionId: any): void;
    /**
     * Creation of the metric is related to attribute filling, i. e. at camp fires, when the ped is resting.
     * _TELEMETRY_C* - _TELEMETRY_P*
     *
     * Hash: 0x7E002A36AEFCFB55 | Since: 1207
     */
    function telemetryRpgGlobalCalculateAttributeCoreDelta(): void;
    /**
     * No comment provided
     *
     * Hash: 0x61559675D23D8BD1 | Since: 1311
     */
    function telemetrySample(transactionId: any, animal: any, bSampled: any, bTranq: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BEE018A63FFFAD9 | Since: 1207
     */
    function telemetrySetIsFlow(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA9E42F437625A85 | Since: 1232
     */
    function telemetrySetShopForTransaction(transactionId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0B19B56697836F5 | Since: 1311
     */
    function telemetryShopCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x775B2ED944E44973 | Since: 1207
     */
    function telemetryShopEntry(shopType: any, shopRegion: any, region: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xF78E669FDC202E73 | Since: 1207
     */
    function telemetryShopExit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A374E6F0075EE81 | Since: 1207
     */
    function telemetryShopPurchase(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BD8A9D0A774A6F8 | Since: 1207
     */
    function telemetryShopSell(centSalePrice: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9F14080D80937BD | Since: 1207
     */
    function telemetrySleep(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF0D54E0651DD7E07 | Since: 1207
     */
    function telemetryStartGunLockerInteraction(): void;
    /**
     * Returns false when transaction request is failing
     *
     * Hash: 0x80A02D9F948A8BCA | Since: 1207
     */
    function telemetryTriggerTransactionRequest(requestId: any, transactionId: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF184B3ECE36219CF | Since: 1207
     */
    function tryGetTelemetryIdFromTransactionId(transactionId: any, requestId: any): boolean;
}
export declare namespace txd {
    /**
     * No comment provided
     *
     * Hash: 0x7332461FC59EB7EC | Since: 1207
     */
    function doesStreamedTextureDictExist(textureDict: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBA0163B277C2D2D0 | Since: 1207
     */
    function doesStreamedTxdExist(txdHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x54D6900929CCF162 | Since: 1207
     */
    function hasStreamedTextureDictLoaded(textureDict: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE72591D1509FFE4 | Since: 1207
     */
    function hasStreamedTxdLoaded(txdHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC1BA29DF5631B0F8 | Since: 1207
     */
    function requestStreamedTextureDict(textureDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB1BD07FB464584D | Since: 1207
     */
    function requestStreamedTxd(txdHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4ACA10A91F66F1E2 | Since: 1207
     */
    function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8232F37DF762ACB2 | Since: 1207
     */
    function setStreamedTxdAsNoLongerNeeded(txdHash: number | string): void;
}
export declare namespace uiapps {
    /**
     * No comment provided
     *
     * Hash: 0xE555EC27D65EDE80 | Since: 1207
     */
    function canLaunchUiappByHash(appNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x16F47D434B6086BF | Since: 1207
     */
    function canLaunchUiappByHashWithEntry(appNameHash: number | string, entryHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAC959AB99AAF3D9F | Since: 1207
     */
    function isAnyUiappActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB30BEC7A7A5CBD3 | Since: 1207
     */
    function isAnyUiappRunning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25B7A0206BDFAC76 | Since: 1207
     */
    function isUiappActiveByHash(appNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE4A9B35D028979F | Since: 1232
     */
    function isUiappRunning(appName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4E511D093A86AD49 | Since: 1207
     */
    function isUiappRunningByHash(appNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42095B886D30DE66 | Since: 1232
     */
    function isUiappTransitioningByHash(appNameHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8FC7F4E4CF4F581 | Since: 1207
     */
    function launchUiappByHash(appNameHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC1BCF31E975B3195 | Since: 1207
     */
    function launchUiappByHashWithEntry(appNameHash: number | string, entryHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7B2027BAC5C8EC89 | Since: 1207
     */
    function launchUiappWithEntry(appName: string, entry: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7689CD255655BFD7 | Since: 1207
     */
    function requestUiappTransitionByHash(appNameHash: number | string, transitionHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAD7B70F7230C5A12 | Since: 1207
     */
    function closeAllUiapps(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12769EEB8DBD7A7B | Since: 1207
     */
    function closeAllUiappsImmediate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x818C6CA9B659E8EC | Since: 1207
     */
    function closeUiapp(appName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FF10C9C3F92277E | Since: 1207
     */
    function closeUiappByHash(appNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x04428420A248A354 | Since: 1207
     */
    function closeUiappByHashImmediate(appNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3015635426D1B17C | Since: 1207
     */
    function closeUiappImmediate(appName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x96FD694FE5BE55DC | Since: 1207
     */
    function getUiappCurrentActivityByHash(appNameHash: number | string): number;
}
export declare namespace uidebug {
    /**
     * Note: you must use VAR_STRING
     *
     * Hash: 0x16794E044C9EFB58 | Since: 1355
     */
    function bgDisplayText(text: string, x: number, y: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
     *
     * Hash: 0x16FA5CE47F184F1E | Since: 1355
     */
    function bgSetTextColor(red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1253A3C870B6843 | Since: 1355
     */
    function bgSetTextScale(scaleX: number, scaleY: number): void;
}
export declare namespace uievents {
    /**
     * eventData:
     * struct UI_SCRIPT_EVENT
     * {
     * alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
     * alignas(8) int intParam;
     * alignas(8) Hash hashParam;
     * alignas(8) Hash datastoreParam;
     * };
     *
     * Old name: _EVENT_MANAGER_GET_EVENT
     *
     * Hash: 0xE24E957294241444 | Since: 1207
     */
    function eventsUiGetMessage(hash: number | string, eventData: any): boolean;
    /**
     * Old name: _EVENT_MANAGER_IS_EVENT_PENDING
     *
     * Hash: 0x67ED5A7963F2F722 | Since: 1207
     */
    function eventsUiIsPending(hash: number | string): boolean;
    /**
     * eventData: see EVENTS_UI_GET_MESSAGE
     *
     * Old name: _EVENT_MANAGER_PEEK_EVENT
     *
     * Hash: 0x90237103F27F7937 | Since: 1207
     */
    function eventsUiPeekMessage(hash: number | string, eventData: any): boolean;
    /**
     * Old name: _EVENT_MANAGER_POP_EVENT
     *
     * Hash: 0x8E8A2369F48EC839 | Since: 1207
     */
    function eventsUiPopMessage(hash: number | string): void;
}
export declare namespace uifeed {
    /**
     * feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
     *
     * Hash: 0xDD1232B332CBB9E7 | Since: 1207
     */
    function uiFeedClearChannel(feedChannel: number): void;
    /**
     * feedChannel: see UI_FEED_CLEAR_CHANNEL
     * Returns feedMessage
     *
     * Hash: 0xC17F69E1418CD11F | Since: 1207
     */
    function uiFeedGetCurrentMessage(feedChannel: number): number;
    /**
     * Only used in R* SP Script beat_animal_attack
     * Returns feedMessage
     *
     * Hash: 0x0FD07141AD048AAE | Since: 1207
     */
    function _0x0FD07141AD048AAE(): number;
    /**
     * Only used in R* SP Scripts
     *
     * Hash: 0x18D6869FBFFEC0F8 | Since: 1207
     */
    function _0x18D6869FBFFEC0F8(): number;
    /**
     * Returns feedMessage
     *
     * Hash: 0x4E88A65968A55C78 | Since: 1207
     */
    function _0x4E88A65968A55C78(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6D85126F6CCF02C9 | Since: 1207
     */
    function _0x6D85126F6CCF02C9(feedChannel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFF5BE9BA496CE40 | Since: 1207
     */
    function _0xAFF5BE9BA496CE40(collectableCategory: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xB7223B91CD6B7E07 | Since: 1207
     */
    function _0xB7223B91CD6B7E07(feedChannel: number): boolean;
    /**
     * Hides Toast Notifications
     *
     * Hash: 0x6035E8FBCA32AC5E | Since: 1207
     */
    function uiFeedClearAllChannels(): void;
    /**
     * Clears help text
     *
     * Hash: 0x2F901291EF177B02 | Since: 1207
     */
    function uiFeedClearHelpTextFeed(feedMessage: number): void;
    /**
     * Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
     *
     * Hash: 0x59FA676177DBE4C9 | Since: 1207
     */
    function uiFeedGetMessageState(feedMessage: number): number;
    /**
     * Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
     *
     * Hash: 0xB2920B9760F0F36B | Since: 1207
     */
    function uiFeedPostFeedTicker(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8D1249BD28791878 | Since: 1207
     */
    function uiFeedPostGameUpdateShard(): number;
    /**
     * Example : https://pastebin.com/GvdBp8Dh
     *
     * Hash: 0x049D5C615BD38BAD | Since: 1207
     */
    function uiFeedPostHelpText(): number;
    /**
     * Example : https://pastebin.com/h1YzycuR
     *
     * Hash: 0xD05590C1AB38F068 | Since: 1207
     */
    function uiFeedPostLocationShard(duration: any, data: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x2024F4F333095FB1 | Since: 1207
     */
    function uiFeedPostMissionName(): number;
    /**
     * Example : https://pastebin.com/13tuRa63
     *
     * Hash: 0xCEDBF17EFCC0E4A4 | Since: 1207
     */
    function uiFeedPostObjective(): number;
    /**
     * No comment provided
     *
     * Hash: 0x860DDFE97CC94DF0 | Since: 1207
     */
    function uiFeedPostOneTextShard(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3F9FDDBA79117C69 | Since: 1207
     */
    function uiFeedPostRankupToast(): number;
    /**
     * No comment provided
     *
     * Hash: 0x893128CDB4B81FBB | Since: 1207
     */
    function uiFeedPostReticleMessage(): number;
    /**
     * Example : https://pastebin.com/kAtEMQTD
     *
     * Hash: 0xC927890AA64E9661 | Since: 1207
     */
    function uiFeedPostSampleNotification(): number;
    /**
     * Example : https://pastebin.com/YZMBkAmW
     *
     * Hash: 0x26E87218390E6729 | Since: 1207
     */
    function uiFeedPostSampleToast(): number;
    /**
     * No comment provided
     *
     * Hash: 0xB249EBCB30DD88E0 | Since: 1207
     */
    function uiFeedPostSampleToastRight(): number;
    /**
     * No comment provided
     *
     * Hash: 0x38838A646FB30AAE | Since: 1311
     */
    function uiFeedPostSampleToastWithAppLink(): number;
    /**
     * No comment provided
     *
     * Hash: 0x02BCC0FE9EBA3529 | Since: 1207
     */
    function uiFeedPostThreeTextShard(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA6F4216AB10EB08E | Since: 1207
     */
    function uiFeedPostTwoTextShard(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC48152BC6B3E821C | Since: 1207
     */
    function uiFeedPostVoiceChatFeed(): number;
}
export declare namespace uilog {
    /**
     * No comment provided
     *
     * Hash: 0x2A4765812202E671 | Since: 1207
     */
    function _0x2A4765812202E671(): any;
    /**
     * No comment provided
     *
     * Hash: 0x763637F9B838B0A7 | Since: 1207
     */
    function _0x763637F9B838B0A7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA20398536B7F1134 | Since: 1207
     */
    function _0xA20398536B7F1134(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA49D6D503E3EA847 | Since: 1207
     */
    function _0xA49D6D503E3EA847(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA0A30153FCC0FFD | Since: 1207
     */
    function _0xDA0A30153FCC0FFD(): void;
    /**
     * No comment provided
     *
     * Hash: 0x69D5479982355D8F | Since: 1207
     */
    function uilogAddEntryHash(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x49C63FDF69744A27 | Since: 1207
     */
    function uilogAddItemToTaskList(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB43163388484CC87 | Since: 1207
     */
    function uilogAddOrUpdateObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0x60C59968E8E87E6B | Since: 1207
     */
    function uilogAddTotalTakeEntry(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB95B4EA6B1EDF035 | Since: 1207
     */
    function uilogClearAllEntries(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFF0D417277B41F8 | Since: 1207
     */
    function uilogClearCachedObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3108D6981A5CADB | Since: 1207
     */
    function uilogClearHasDisplayedCachedObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0x15A4461BEB788096 | Since: 1207
     */
    function uilogGetCachedObjective(): string;
    /**
     * No comment provided
     *
     * Hash: 0xCC48FFBB45B54F71 | Since: 1207
     */
    function uilogHasDisplayedCachedObjective(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB8188CCF52202475 | Since: 1207
     */
    function uilogIsEntryRegistered(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3920574CF0A2B7B6 | Since: 1207
     */
    function uilogMarkAllEntriesAvailability(): void;
    /**
     * No comment provided
     *
     * Hash: 0x13E8D7DD08543482 | Since: 1207
     */
    function uilogMarkEntryAvailability(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE31D66D1E54C471 | Since: 1207
     */
    function uilogMarkMissionCompleted(): void;
    /**
     * No comment provided
     *
     * Hash: 0x49E58FE6EF40B987 | Since: 1207
     */
    function uilogPostNotification(data: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xE9990552DEC71600 | Since: 1207
     */
    function uilogPrintCachedObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD594A19BE09A75C6 | Since: 1207
     */
    function uilogRemoveEntry(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA233F8FE190514C | Since: 1207
     */
    function uilogSetCachedObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA31013798FADCADC | Since: 1207
     */
    function uilogSetDisplayCompletionRating(logEntryType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x69684D9936958D8F | Since: 1207
     */
    function uilogSetEntryBriefTexture(texture: number | string, textureDictionary: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6965469934958D8F | Since: 1207
     */
    function uilogSetEntryIconTexture(icon: number | string, iconDictionary: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x72A5CD214B342568 | Since: 1207
     */
    function uilogSetEntryPinned(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3108D6981A5CADC | Since: 1207
     */
    function uilogSetHasDisplayedCachedObjective(): void;
    /**
     * No comment provided
     *
     * Hash: 0x136A027CF37B0A4F | Since: 1207
     */
    function uilogSetPendingDetailsId(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD106B211EF1B8F04 | Since: 1207
     */
    function uilogSetTotalTakeSummary(): void;
    /**
     * No comment provided
     *
     * Hash: 0x80D6524190258C3E | Since: 1207
     */
    function uilogUpdateEntrySubheader(): void;
}
export declare namespace uipinning {
    /**
     * No comment provided
     *
     * Hash: 0x3138582E0A13BFAB | Since: 1207
     */
    function uipinningGetTooltipText(hash: number | string): string;
}
export declare namespace uistatemachine {
    /**
     * No comment provided
     *
     * Hash: 0xF7C180F57F85D0B8 | Since: 1207
     */
    function uiStateMachineCanRequestTransition(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4C6F2C4B7A03A266 | Since: 1207
     */
    function uiStateMachineCreate(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4EB122210A90E2D8 | Since: 1207
     */
    function uiStateMachineDestroy(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2738D68D2B4E09E7 | Since: 1207
     */
    function uiStateMachineDestroyAndClear(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D15569C0FEBF757 | Since: 1207
     */
    function uiStateMachineExists(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6B9FE4F0BA521A19 | Since: 1207
     */
    function uiStateMachineRequestExit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EA9C3547E80350E | Since: 1207
     */
    function uiStateMachineRequestTransition(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3B7519720C9DCB45 | Since: 1207
     */
    function uiflowblockEnter(): any;
    /**
     * No comment provided
     *
     * Hash: 0x10A93C057B6BD944 | Since: 1207
     */
    function uiflowblockIsLoaded(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF320A77DD5F781DF | Since: 1207
     */
    function uiflowblockRelease(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0081B34E395CE48 | Since: 1207
     */
    function uiflowblockRequest(): any;
    /**
     * No comment provided
     *
     * Hash: 0x11E73195E735B25B | Since: 1207
     */
    function uiStateMachineIsExited(): boolean;
}
export declare namespace uistickyfeed {
    /**
     * No comment provided
     *
     * Hash: 0x00A15B94CBA4F76F | Since: 1207
     */
    function uiStickyFeedClearMessage(msgId: number): void;
    /**
     * Example: https://pastebin.com/JygJShNU
     *
     * Hash: 0x815C4065AE6E6071 | Since: 1207
     */
    function uiStickyFeedCreateDeathFailMessage(): number;
    /**
     * Example: https://pastebin.com/EJD7ytnz
     *
     * Hash: 0x9F2CC2439A04E7BA | Since: 1207
     */
    function uiStickyFeedCreateErrorMessage(): number;
    /**
     * Example: https://pastebin.com/6mLtee2S
     *
     * Hash: 0x339E16B41780FC35 | Since: 1207
     */
    function uiStickyFeedCreateWarningMessage(): number;
    /**
     * Returns state of sticky feed message, see 0x59FA676177DBE4C9
     *
     * Hash: 0x07954320D77F6A3D | Since: 1207
     */
    function uiStickyFeedGetMessageState(msgId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF8806EC3FF840FDC | Since: 1207
     */
    function uiStickyFeedIsAlertScreenActive(): boolean;
    /**
     * stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
     *
     * Hash: 0xC5C395C60B542A3C | Since: 1207
     */
    function uiStickyFeedIsChannelActive(stickyFeedChannel: number): boolean;
    /**
     * Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
     * Example: https://pastebin.com/nDrJyWq2
     *
     * Hash: 0xBC6F454E310124DA | Since: 1207
     */
    function uiStickyFeedUpdateMessage(msgId: number): void;
}
export declare namespace uitutorial {
    /**
     * No comment provided
     *
     * Hash: 0x2CC24A2A7A1489C4 | Since: 1207
     */
    function uitutorialGetIsThreatIndicatorCapableRadarShown(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC2E0A5E9ED4E1B4 | Since: 1207
     */
    function uitutorialGetIsThreatIndicatorOn(): boolean;
    /**
     * enum eRpgIcons
     * {
     * ICON_STAMINA,
     * ICON_STAMINA_CORE,
     * ICON_DEADEYE,
     * ICON_DEADEYE_CORE,
     * ICON_HEALTH,
     * ICON_HEALTH_CORE,
     * ICON_HORSE_HEALTH,
     * ICON_HORSE_HEALTH_CORE,
     * ICON_HORSE_STAMINA,
     * ICON_HORSE_STAMINA_CORE,
     * ICON_HORSE_COURAGE,
     * ICON_HORSE_COURAGE_CORE
     * };
     *
     * enum eRpgIconVisibility
     * {
     * ICON_VISIBILITY_WAIT_TO_HIDE,
     * ICON_VISIBILITY_ALWAYS_SHOW,
     * ICON_VISIBILITY_ALWAYS_HIDE,
     * ICON_VISIBILITY_ALWAYS_BLINK
     * };
     *
     * Hash: 0xC116E6DF68DCE667 | Since: 1207
     */
    function uitutorialSetRpgIconVisibility(rpgIcon: number, visibility: number): void;
}
export declare namespace unlock {
    /**
     * No comment provided
     *
     * Hash: 0xC4B660C7B6040E75 | Since: 1207
     */
    function unlockIsUnlocked(unlockHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8588A14B75AF096B | Since: 1207
     */
    function unlockIsVisible(unlockHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1B7C5ADA8A6910A0 | Since: 1207
     */
    function unlockSetUnlocked(unlockHash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x46B901A8ECDB5A61 | Since: 1207
     */
    function unlockSetVisible(unlockHash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C1C2062CFAD06FE | Since: 1207
     */
    function unlockGetItemRoleUnlockInfo(unlockHash: number | string, outData: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x66BF197E066050DE | Since: 1207
     */
    function unlockIsLootable(unlockHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x644166BA7AA49DEA | Since: 1207
     */
    function unlockIsNew(unlockHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6B6369647F26F09F | Since: 1207
     */
    function unlockIsUnlockFlagSet(unlockHash: number | string, flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6D79C7AEF870A99 | Since: 1207
     */
    function unlockSetNew(unlockHash: number | string, toggle: boolean): void;
}
export declare namespace vehicle {
    /**
     * No comment provided
     *
     * Hash: 0x4C221BAC54D735C3 | Since: 1207
     */
    function addRoadNodeSpeedZone(): number;
    /**
     * Returns false if every seat is occupied.
     *
     * Hash: 0xA0A424505A1B6429 | Since: 1207
     */
    function areAnyVehicleSeatsFree(vehicle: number | Vehicle): boolean;
    /**
     * This native makes the vehicle stop immediately
     *
     * distance defines how far it will travel until stopping.
     *
     * Hash: 0x260BE8F09E326A20 | Since: 1207
     */
    function bringVehicleToHalt(vehicle: number | Vehicle, distance: number, duration: number, unknown: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC075176CFB8B4128 | Since: 1207
     */
    function canAnchorBoatHere(vehicle: number | Vehicle): boolean;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0xF8B2D32A2231FD24 | Since: 1207
     */
    function canShuffleSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EFC5DC62E67609B | Since: 1207
     */
    function clearLastDrivenVehicle(): void;
    /**
     * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
     *
     * Hash: 0xDBC28A8C683CD80B | Since: 1207
     */
    function copyVehicleDamages(sourceVehicle: number | Vehicle, targetVehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF35D0D2583051B0 | Since: 1207
     */
    function createVehicle(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean, bDontAutoCreateDraftAnimals: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xA3120A1385F17FF7 | Since: 1207
     */
    function deleteAllTrains(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D3630FB07E8B570 | Since: 1207
     */
    function deleteMissionTrain(train: number | Vehicle): void;
    /**
     * Deletes a vehicle.
     * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
     *
     * eg how to use:
     * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
     * DELETE_VEHICLE(&vehicle);
     *
     * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0xE20A909D8C4A70F8 | Since: 1207
     */
    function deleteVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x94B1E71B144356A5 | Since: 1207
     */
    function disableVehicleWeapon(disabled: boolean, weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF5E7E9A7620FFB5 | Since: 1207
     */
    function doesExtraExist(vehicle: number | Vehicle, extraId: number): boolean;
    /**
     * Explodes a selected vehicle.
     *
     * Vehicle vehicle = Vehicle you want to explode.
     * BOOL isAudible = If explosion makes a sound.
     * BOOL isInvisible = If the explosion is invisible or not.
     *
     * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
     *
     * Hash: 0x75DCED9EEC5769D7 | Since: 1207
     */
    function explodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean): void;
    /**
     * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
     *
     * Hash: 0x59ECA796021B0539 | Since: 1207
     */
    function forcePlaybackRecordedVehicleUpdate(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x52F45D033645181B | Since: 1207
     */
    function getClosestVehicle(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
    /**
     * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
     *
     * Hash: 0x86FA6D8B48667D75 | Since: 1207
     */
    function getCurrentStationForTrain(train: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA19447D83294E29F | Since: 1207
     */
    function getDraftAnimalCount(vehicle: number | Vehicle, expected: number, actual: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2963B5C1637E8A27 | Since: 1207
     */
    function getDriverOfVehicle(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA94F3E0AB9695E19 | Since: 1207
     */
    function getLastDrivenVehicle(): number;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0x74583B19FEEAFDA7 | Since: 1207
     */
    function getLastPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0xBB40DD2270B65366 | Since: 1207
     */
    function getPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
    /**
     * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x1A00961A1BE94E5E | Since: 1207
     */
    function getPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
    /**
     * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x61787DD28B8CC0D5 | Since: 1207
     */
    function getRotationOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x233B51C7913FA031 | Since: 1207
     */
    function getTimePositionInRecording(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x865FEC2FA899F29C | Since: 1207
     */
    function getTrackIndexOfTrain(train: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xD0FB093A4CDB932C | Since: 1207
     */
    function getTrainCarriage(train: number | Vehicle, trailerNumber: number): number;
    /**
     * Seems related to vehicle health, like the one in IV.
     * Max 1000, min 0.
     * Vehicle does not necessarily explode or become undrivable at 0.
     *
     * Hash: 0x42113B857E33C16E | Since: 1207
     */
    function getVehicleBodyHealth(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xFA2CDDFEB8BC898B | Since: 1207
     */
    function getVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC867FD144F2469D3 | Since: 1207
     */
    function getVehicleDoorLockStatus(vehicle: number | Vehicle): number;
    /**
     * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
     *
     * Minimum: -4000
     * Maximum: 1000
     *
     * -4000: Engine is destroyed
     * 0 and below: Engine catches fire and health rapidly declines
     * 300: Engine is smoking and losing functionality
     * 1000: Engine is perfect
     *
     * Hash: 0x90DBFFAC43B22081 | Since: 1207
     */
    function getVehicleEngineHealth(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xFE52F34491529F0B | Since: 1207
     */
    function getVehicleEstimatedMaxSpeed(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA9C55F1C15E62E06 | Since: 1207
     */
    function getVehicleMaxNumberOfPassengers(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x9A578736FF3A17C3 | Since: 1207
     */
    function getVehicleModelNumberOfSeats(modelHash: number | string): number;
    /**
     * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
     *
     * Hash: 0x59F3F16577CD79B2 | Since: 1207
     */
    function getVehicleNumberOfPassengers(vehicle: number | Vehicle): number;
    /**
     * 1000 is max health
     *
     * Hash: 0x1E5A9B356D5098BE | Since: 1207
     */
    function getVehiclePetrolTankHealth(vehicle: number | Vehicle): number;
    /**
     * Gets the trailer of a vehicle and puts it into the trailer parameter.
     *
     * Hash: 0xCF867A239EC30741 | Since: 1207
     */
    function getVehicleTrailerVehicle(vehicle: number | Vehicle, trailer: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2701D01D5E18FC31 | Since: 1207
     */
    function hasInstantFillVehiclePopulationFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB935F3154BC913C8 | Since: 1207
     */
    function hasVehicleAssetLoaded(vehicleAsset: number | string): boolean;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0xBA9325BE372AB6EA | Since: 1207
     */
    function hasVehicleRecordingBeenLoaded(recording: number, script: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1FF00DB43026B12F | Since: 1207
     */
    function instantlyFillVehiclePopulation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5698BA4FD04D39C4 | Since: 1207
     */
    function isAnyVehicleNearPoint(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA44E97849E9F3DD | Since: 1207
     */
    function isDraftVehicle(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x80DDCCB2F4A3EB57 | Since: 1207
     */
    function isEntryPointForSeatClear(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, side: boolean, onEnter: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02774B3A9034278F | Since: 1207
     */
    function isPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A7472606EC5B7C1 | Since: 1207
     */
    function isPlaybackUsingAiGoingOnForVehicle(vehicle: number | Vehicle): boolean;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     *
     * Hash: 0x7892685BF6D9775E | Since: 1207
     */
    function isSeatWarpOnly(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x799CFC7C5B743B15 | Since: 1207
     */
    function isThisModelABoat(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC08C8F8C1EDF174 | Since: 1207
     */
    function isThisModelATrain(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE887BD31D97793F6 | Since: 1207
     */
    function isTrainWaitingAtStation(train: number | Vehicle): boolean;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x7AE191143C7A9107 | Since: 1207
     */
    function isVehicleDoorFullyOpen(vehicle: number | Vehicle, doorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB86D29B10F627379 | Since: 1207
     */
    function isVehicleDriveable(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFA9A55D9C4351625 | Since: 1207
     */
    function isVehicleExtraTurnedOn(vehicle: number | Vehicle, extraId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F5029A8FC060C48 | Since: 1207
     */
    function isVehicleInBurnout(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0045A54EC7A22455 | Since: 1207
     */
    function isVehicleModel(vehicle: number | Vehicle, model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0D5D119529654EE0 | Since: 1207
     */
    function isVehicleOnAllWheels(vehicle: number | Vehicle): boolean;
    /**
     * seatIndex: see CREATE_PED_INSIDE_VEHICLE
     * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
     *
     * Hash: 0xE052C1B1CAA4ECE4 | Since: 1207
     */
    function isVehicleSeatFree(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
     *
     * For some vehicles it returns true if the current speed is <= 0.00039999999.
     *
     * Hash: 0x78C3311A73135241 | Since: 1207
     */
    function isVehicleStopped(vehicle: number | Vehicle): boolean;
    /**
     * VEH_STUCK_ON_ROOF = 0,
     * VEH_STUCK_ON_SIDE,
     * VEH_STUCK_HUNG_UP,
     * VEH_STUCK_JAMMED
     *
     * Hash: 0x1ABA9753939503C5 | Since: 1207
     */
    function isVehicleStuckTimerUp(vehicle: number | Vehicle, stuckType: number, ms: number): boolean;
    /**
     * Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
     *
     * Hash: 0x424910CD5DE8C246 | Since: 1207
     */
    function isVehicleVisible(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E7910A63E05B12C | Since: 1436
     */
    function isVehicleWindowIntact(vehicle: number | Vehicle, windowIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDBEA5506C848227 | Since: 1207
     */
    function isVehicleWrecked(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1EF36558FBDE2DAA | Since: 1207
     */
    function lockDoorsWhenNoLongerNeeded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x35AD938C74CACD6A | Since: 1207
     */
    function modifyVehicleTopSpeed(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE9AB3354ACE6C9C | Since: 1207
     */
    function removeRoadNodeSpeedZone(speedzone: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC619A44639BC0CB4 | Since: 1207
     */
    function removeVehiclesFromGeneratorsInArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x888A4E675B38F5AD | Since: 1207
     */
    function removeVehicleAsset(vehicleAsset: number | string): void;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x139E35755418F6AA | Since: 1207
     */
    function removeVehicleRecording(): void;
    /**
     * windowIndex:
     * 0 = Front Right Window
     * 1 = Front Left Window
     * 2 = Back Right Window
     * 3 = Back Left Window
     *
     * Hash: 0x745F15A215F2DDF1 | Since: 1207
     */
    function removeVehicleWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x81A15811460FAB3A | Since: 1207
     */
    function requestVehicleAsset(vehicleHash: number | string, vehicleAsset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84B81EF78BD22357 | Since: 1207
     */
    function requestVehicleHighDetailModel(vehicle: number | Vehicle): void;
    /**
     * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
     * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
     * (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
     *
     * Hash: 0xC474CF16EDA45DC9 | Since: 1207
     */
    function requestVehicleRecording(recording: number, script: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x23298B468F7D88B6 | Since: 1207
     */
    function resetVehicleStuckTimer(vehicle: number | Vehicle, nullAttributes: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D3230A0ED7DE39F | Since: 1207
     */
    function setAllowVehicleExplodesOnContact(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D596E6E88A02C24 | Since: 1207
     */
    function setAllVehicleGeneratorsActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBB134FB9D50C0CC | Since: 1207
     */
    function setAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAEAB044F05B92659 | Since: 1207
     */
    function setBoatAnchor(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Value: mostly 99999.9f
     *
     * Old name: _SET_BOAT_MOVEMENT_RESISTANCE
     *
     * Hash: 0xE3261532550D6A9F | Since: 1207
     */
    function setBoatLowLodAnchorDistance(vehicle: number | Vehicle, value: number): void;
    /**
     * Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
     *
     * Hash: 0x286771F3059A37A7 | Since: 1207
     */
    function setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x62A6D317A011EA1D | Since: 1207
     */
    function setBoatSinksWhenWrecked(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC4735F48CD983EF | Since: 1207
     */
    function setBreakableVehicleLocksUnbreakable(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xD4288603E8766FF7 | Since: 1207
     */
    function setDisableRandomTrainsThisFrame(toggle: boolean): void;
    /**
     * Old name: _SET_DISABLE_SUPERDUMMY_MODE
     *
     * Hash: 0x1716D787D9B94202 | Since: 1232
     */
    function setDisableSuperdummy(vehicle: number | Vehicle, disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD146EE5F2B06B95E | Since: 1207
     */
    function setDisableVehicleEngineFires(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x5795FBE7A2001C14 | Since: 1207
     */
    function setDisableVehiclePetrolTankDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB70986AB19B04AFF | Since: 1207
     */
    function setDisableVehiclePetrolTankFires(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x63DC1F22C903B709 | Since: 1207
     */
    function setDontAllowPlayerToEnterVehicleIfLockedForPlayer(vehicle: number | Vehicle): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Old name: _SET_VEHICLE_DOOR_CAN_BREAK
     *
     * Hash: 0x081FB9D6422F804C | Since: 1207
     */
    function setDoorAllowedToBeBrokenOff(vehicle: number | Vehicle, doorId: number, isBreakable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x73F1E4F6DF26FE30 | Since: 1207
     */
    function setEnableVehicleSlipstreaming(): void;
    /**
     * No comment provided
     *
     * Hash: 0x373CB1283308BD7B | Since: 1207
     */
    function setForceHdVehicle(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
     *
     * Hash: 0x75B49ACD73617437 | Since: 1207
     */
    function setForceLowLodAnchorMode(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F8E2B131E1DCA6C | Since: 1207
     */
    function setForceVehicleEngineDamageByBullet(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * flags = 0: DEFAULT; 1: KEEP_OLD_SPEED
     *
     * Hash: 0xBBE7648349B49BE8 | Since: 1207
     */
    function setMissionTrainAsNoLongerNeeded(train: number | Vehicle, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7632755962AB9922 | Since: 1207
     */
    function setMissionTrainCoords(train: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEDFA97638D61D4A | Since: 1207
     */
    function setParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x838C216C2B05A009 | Since: 1207
     */
    function setPedOwnsVehicle(ped: number | Ped, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xD78084EED4CD94C6 | Since: 1207
     */
    function setPlaybackSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF44D446D4E36DB87 | Since: 1207
     */
    function setRandomBoats(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1156C6EE7E82A98A | Since: 1207
     */
    function setRandomTrains(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F91D44490E1EA0C | Since: 1207
     */
    function setRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x01021EB2E96B793C | Since: 1207
     */
    function setTrainCruiseSpeed(train: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EC47DD4300BF063 | Since: 1207
     */
    function setTrainOffsetFromStation(train: number | Vehicle, offset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFBA6BBFF7CCAFBB | Since: 1207
     */
    function setTrainSpeed(train: number | Vehicle, speed: number): void;
    /**
     * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
     *
     * Hash: 0x0893DAFBFA67110E | Since: 1207
     */
    function setVehicleAiCanUseExclusiveSeats(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1240E8596A8308B9 | Since: 1207
     */
    function setVehicleAllowHomingMissleLockon(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Makes the vehicle accept no passengers.
     *
     * Hash: 0xECB9E9BC887E8060 | Since: 1207
     */
    function setVehicleAllowNoPassengersLockon(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x501354951CD942DE | Since: 1207
     */
    function setVehicleAutomaticallyAttaches(vehicle: number | Vehicle): any;
    /**
     * No comment provided
     *
     * Hash: 0x55CCAAE4F28C67A0 | Since: 1207
     */
    function setVehicleBodyHealth(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEC4CA2CAB8FA98C | Since: 1207
     */
    function setVehicleBrokenPartsDontAffectAiHandling(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x05254BA0B44ADC16 | Since: 1207
     */
    function setVehicleCanBeTargetted(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE42952510F84AFDB | Since: 1207
     */
    function setVehicleCanBeUsedByFleeingPeds(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4BF8131AE811541C | Since: 1207
     */
    function setVehicleCanBeVisiblyDamaged(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5ED9D59B4646611 | Since: 1207
     */
    function setVehicleCanBreak(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x065D03A9D6B2C6B5 | Since: 1207
     */
    function setVehicleCanEjectPassengersIfLocked(vehicle: number | Vehicle): void;
    /**
     * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
     *
     * Radius of effect damage applied in a sphere at impact location
     *
     * Hash: 0x1D7678F81452BB41 | Since: 1207
     */
    function setVehicleDamage(vehicle: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x606374EBFC27B133 | Since: 1207
     */
    function setVehicleDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x758C3460EE915D0A | Since: 1207
     */
    function setVehicleDirtLevel(vehicle: number | Vehicle, dirtLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x96F78A6A075D55D9 | Since: 1207
     */
    function setVehicleDoorsLocked(vehicle: number | Vehicle, doorLockStatus: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2381977DA948F8DC | Since: 1207
     */
    function setVehicleDoorsLockedForAllPlayers(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x359A8EA1FB8D6F0F | Since: 1207
     */
    function setVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE712BC978770F105 | Since: 1207
     */
    function setVehicleDoorsLockedForTeam(vehicle: number | Vehicle, team: number, toggle: boolean): void;
    /**
     * Closes all doors of a vehicle:
     *
     * Hash: 0xA4FFCD645B11F25A | Since: 1207
     */
    function setVehicleDoorsShut(vehicle: number | Vehicle, closeInstantly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x362CEDD2A41E0747 | Since: 1232
     */
    function setVehicleDoorsToOpenAtAnyDistance(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x9666CF20A1C6D780 | Since: 1207
     */
    function setVehicleDoorBroken(vehicle: number | Vehicle, doorId: number, deleteDoor: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xD57F10EBBA814ECF | Since: 1207
     */
    function setVehicleDoorControl(vehicle: number | Vehicle, doorId: number, speed: number, angle: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x06F8A202EB312A3C | Since: 1207
     */
    function setVehicleDoorLatched(vehicle: number | Vehicle, doorId: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     * Can also be used on trains and its wagons
     *
     * Hash: 0x550CE392A4672412 | Since: 1207
     */
    function setVehicleDoorOpen(vehicle: number | Vehicle, doorId: number, loose: boolean, openInstantly: boolean): void;
    /**
     * doorId: enum eDoorId
     * {
     * VEH_EXT_DOOR_INVALID_ID = -1,
     * VEH_EXT_DOOR_DSIDE_F,
     * VEH_EXT_DOOR_DSIDE_M,
     * VEH_EXT_DOOR_DSIDE_M1,
     * VEH_EXT_DOOR_DSIDE_M2,
     * VEH_EXT_DOOR_DSIDE_R,
     * VEH_EXT_DOOR_PSIDE_F,
     * VEH_EXT_DOOR_PSIDE_M,
     * VEH_EXT_DOOR_PSIDE_M1,
     * VEH_EXT_DOOR_PSIDE_M2,
     * VEH_EXT_DOOR_PSIDE_R,
     * VEH_EXT_BONNET,
     * VEH_EXT_BOOT
     * };
     *
     * Hash: 0x6A3C24B91FD0EA09 | Since: 1207
     */
    function setVehicleDoorShut(vehicle: number | Vehicle, doorId: number, closeInstantly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x48E4C137A71C2688 | Since: 1207
     */
    function setVehicleEngineCanDegrade(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * 1000 is max health
     * Begins leaking gas at around 650 health
     * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
     *
     * -------------------------
     * Minimum: -4000
     * Maximum: 1000
     *
     * -4000: Engine is destroyed
     * 0 and below: Engine catches fire and health rapidly declines
     * 300: Engine is smoking and losing functionality
     * 1000: Engine is perfect
     *
     * Hash: 0x8BDC5B998B4654EF | Since: 1207
     */
    function setVehicleEngineHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * Starts or stops the engine on the specified vehicle.
     *
     * vehicle: The vehicle to start or stop the engine on.
     * value: true to turn the vehicle on; false to turn it off.
     * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
     *
     * Hash: 0xB64CFA14CB9A2E78 | Since: 1207
     */
    function setVehicleEngineOn(vehicle: number | Vehicle, value: boolean, instantly: boolean): void;
    /**
     * index: 0 - 1
     *
     * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
     *
     * Hash: 0xC6B9BF123B9463B6 | Since: 1207
     */
    function setVehicleExclusiveDriver(vehicle: number | Vehicle, ped: number | Ped, index: number): void;
    /**
     * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
     *
     * Hash: 0xA402939C6761E1A3 | Since: 1207
     */
    function setVehicleExplodesOnHighExplosionDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Note: only some vehicle have extras
     * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
     *
     * Hash: 0xBB6F89150BC9D16B | Since: 1207
     */
    function setVehicleExtra(vehicle: number | Vehicle, extraId: number, disable: boolean): void;
    /**
     * This fixes a vehicle.
     * If the vehicle's engine's broken then you cannot fix it with this native.
     *
     * Hash: 0x79811282A9D1AE56 | Since: 1207
     */
    function setVehicleFixed(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9F92AF49F12F6E7 | Since: 1207
     */
    function setVehicleForwardSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x91BE51AEC4E99710 | Since: 1207
     */
    function setVehicleHandbrake(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB5A3FA8ED3979C5 | Since: 1207
     */
    function setVehicleHasBeenOwnedByPlayer(vehicle: number | Vehicle, owned: boolean): void;
    /**
     * if true, axles won't bend.
     *
     * Hash: 0x252253C8A45AA1FC | Since: 1207
     */
    function setVehicleHasStrongAxles(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC903855E028A05F2 | Since: 1207
     */
    function setVehicleHasUnbreakableLights(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x4EA71B4C9DB3C3F1 | Since: 1207
     */
    function setVehicleInactiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xA9F1D75195CC40F6 | Since: 1207
     */
    function setVehicleIndividualDoorsLocked(vehicle: number | Vehicle, doorId: number, doorLockStatus: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1842F40FD501DA2 | Since: 1207
     */
    function setVehicleInfluencesWantedLevel(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
     *
     * Hash: 0x54800D386C5825E5 | Since: 1207
     */
    function setVehicleIsConsideredByPlayer(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C32FC81DFF25C9A | Since: 1207
     */
    function setVehicleIsStolen(vehicle: number | Vehicle, isStolen: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1549BA7FE83A2383 | Since: 1207
     */
    function setVehicleKeepEngineOnWhenAbandoned(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sets the vehicle's lights state.
     *
     * Hash: 0x629F0A0E952CAE7D | Since: 1207
     */
    function setVehicleLights(vehicle: number | Vehicle, state: number): void;
    /**
     * _SET_VEHICLE_LI*
     *
     * Hash: 0x8F75941C86EEBFCA | Since: 1207
     */
    function setVehicleLimitSpeedWhenPlayerInactive(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F5E2B1B9EAECC0F | Since: 1207
     */
    function setVehicleLodMultiplier(vehicle: number | Vehicle, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7549B9E841940695 | Since: 1207
     */
    function setVehicleMayBeUsedByGotoPointAnyMeans(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x09C970AE59ABF6B2 | Since: 1207
     */
    function setVehicleNotStealableAmbiently(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x7263332501E07F52 | Since: 1207
     */
    function setVehicleOnGroundProperly(vehicle: number | Vehicle): boolean;
    /**
     * 1000 is max health
     *
     * Hash: 0x6AB2918EE3BEC94C | Since: 1207
     */
    function setVehiclePetrolTankHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x652712478F1721F4 | Since: 1207
     */
    function setVehicleProvidesCover(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x33992A808DF1C1BA | Since: 1207
     */
    function setVehicleRespectsLocksWhenHasDriver(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xB79BE78C665B3E6D | Since: 1207
     */
    function setVehicleShootAtTarget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x23A3AB86E0807721 | Since: 1207
     */
    function setVehicleStaysFrozenWhenCleanedUp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Locks the vehicle's steering to the desired angle, explained below.
     *
     * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
     *
     * Steer bias:
     * -1.0 = full right
     * 0.0 = centered steering
     * 1.0 = full left
     *
     * Hash: 0x84DAAE11E9EE4FC3 | Since: 1207
     */
    function setVehicleSteerBias(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC84E138448507567 | Since: 1207
     */
    function setVehicleStopInstantlyWhenPlayerInactive(vehicle: number | Vehicle): void;
    /**
     * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
     *
     * Hash: 0xAB315515C9F8803D | Since: 1207
     */
    function setVehicleStrong(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Allows you to toggle bulletproof tires.
     *
     * Hash: 0xEBD0A4E935106FE5 | Since: 1207
     */
    function setVehicleTyresCanBurst(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E884BAB713A2A94 | Since: 1207
     */
    function setVehicleUndriveable(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x839137C40275FB77 | Since: 1207
     */
    function setVehicleWheelsCanBreak(vehicle: number | Vehicle, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC462C79379ABBCB1 | Since: 1207
     */
    function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
     *
     * Hash: 0x5F5E6379C59EFC56 | Since: 1207
     */
    function skipTimeInPlaybackRecordedVehicle(vehicle: number | Vehicle, time: number): void;
    /**
     * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x4932B84E3276508E | Since: 1207
     */
    function startPlaybackRecordedVehicle(vehicle: number | Vehicle, recording: number, script: string): void;
    /**
     * Sounds the horn for the specified vehicle.
     *
     * vehicle: The vehicle to activate the horn for.
     * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
     * duration: The duration to sound the horn, in milliseconds.
     *
     * Note: If a player is in the vehicle, it will only sound briefly.
     *
     * Hash: 0xB4E3BFC39CA16057 | Since: 1207
     */
    function startVehicleHorn(vehicle: number | Vehicle, duration: number, mode: number | string, forever: boolean): void;
    /**
     * Old name: _STOP_BRING_VEHICLE_TO_HALT
     *
     * Hash: 0x7C06330BFDDA182E | Since: 1207
     */
    function stopBringingVehicleToHalt(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF9B4D6267E8C26D | Since: 1207
     */
    function stopPlaybackRecordedVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F3969B140DEE157 | Since: 1207
     */
    function trackVehicleVisibility(vehicle: number | Vehicle): void;
    /**
     * Only used in SP Scripts.
     * Related to Vehicle Speed.
     *
     * Hash: 0x012701ED938B85DE | Since: 1207
     */
    function _0x012701ED938B85DE(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0355FE37240E2C77 | Since: 1207
     */
    function _0x0355FE37240E2C77(): void;
    /**
     * _SET_VEHICLE_*
     *
     * Hash: 0x04F0579DBDD32F34 | Since: 1207
     */
    function _0x04F0579DBDD32F34(vehicle: number | Vehicle): void;
    /**
     * Takes value returned from 0x45853F4E17D847D5
     *
     * Hash: 0x0516FAE561276EFC | Since: 1207
     */
    function _0x0516FAE561276EFC(trackIndex: number): boolean;
    /**
     * _SET_TRAIN_*
     *
     * Hash: 0x06A09A6E0C6D2A84 | Since: 1207
     */
    function _0x06A09A6E0C6D2A84(train: number | Vehicle): void;
    /**
     * _SET_VEHICLE_S*
     *
     * Hash: 0x0794199B25E499E1 | Since: 1207
     */
    function _0x0794199B25E499E1(wagon: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x07E2E21E799080A0 | Since: 1207
     */
    function _0x07E2E21E799080A0(): void;
    /**
     * Outputs track hash and junction index on given train vehicle handle.
     * _RESET_VEHICLE_* (?)
     *
     * Hash: 0x09034479E6E3E269 | Since: 1207
     */
    function returnTrainInfoFromHandle(train: number | Vehicle, trainTrack: number | string, junctionIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BA4250D20007C2E | Since: 1207
     */
    function _0x0BA4250D20007C2E(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0CD7914D17A970AB | Since: 1207
     */
    function _0x0CD7914D17A970AB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D5FDF0D36FA10CD | Since: 1207
     */
    function _0x0D5FDF0D36FA10CD(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E558D3A49D759D6 | Since: 1207
     */
    function _0x0E558D3A49D759D6(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0F7F603BDE08C4D3 | Since: 1207
     */
    function _0x0F7F603BDE08C4D3(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FDDEE66E3465726 | Since: 1207
     */
    function _0x0FDDEE66E3465726(): any;
    /**
     * No comment provided
     *
     * Hash: 0x104D9A7B1C0D0783 | Since: 1207
     */
    function _0x104D9A7B1C0D0783(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1121B07088ED3013 | Since: 1207
     */
    function _0x1121B07088ED3013(): any;
    /**
     * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
     * _GET_N* (NEAREST_STATION_FOR_TRAIN?)
     *
     * Hash: 0x1180A2974D251B7B | Since: 1207
     */
    function _0x1180A2974D251B7B(train: number | Vehicle): number;
    /**
     * Params: coords = GET_ENTITY_VELOCITY
     * _SET_VELOCITY*
     *
     * Hash: 0x12F6C6ED3EFF42DE | Since: 1207
     */
    function _0x12F6C6ED3EFF42DE(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x13C190302369308B | Since: 1207
     */
    function _0x13C190302369308B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x13EB275BF81636D1 | Since: 1207
     */
    function _0x13EB275BF81636D1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x14DA8C4BC2CCD90A | Since: 1207
     */
    function _0x14DA8C4BC2CCD90A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x15206E88FF7617DF | Since: 1207
     */
    function _0x15206E88FF7617DF(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x15CC8C33D7FFCC4A | Since: 1436
     */
    function _0x15CC8C33D7FFCC4A(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x160C1B5AB48AB87C | Since: 1207
     */
    function _0x160C1B5AB48AB87C(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x165BE2001E5E4B75 | Since: 1207
     */
    function _0x165BE2001E5E4B75(): void;
    /**
     * No comment provided
     *
     * Hash: 0x16B86A49E072AA85 | Since: 1207
     */
    function _0x16B86A49E072AA85(): void;
    /**
     * No comment provided
     *
     * Hash: 0x172E9DD35858DCD7 | Since: 1207
     */
    function _0x172E9DD35858DCD7(): void;
    /**
     * returns true if any wheel is destroyed/detached
     *
     * Hash: 0x18714953CCED17D3 | Since: 1207
     */
    function areAnyVehicleWheelsDestroyed(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1A861F899EBBE17C | Since: 1207
     */
    function _0x1A861F899EBBE17C(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BFBAFCC6760FF02 | Since: 1207
     */
    function _0x1BFBAFCC6760FF02(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x2045429505158D1A | Since: 1207
     */
    function _0x2045429505158D1A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2200AB13CBD10F4E | Since: 1207
     */
    function _0x2200AB13CBD10F4E(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x23F66C36F8E5EAAB | Since: 1207
     */
    function _0x23F66C36F8E5EAAB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x27E3F2B57209FA54 | Since: 1207
     */
    function _0x27E3F2B57209FA54(): void;
    /**
     * No comment provided
     *
     * Hash: 0x288CBB414C3C2FBB | Since: 1207
     */
    function _0x288CBB414C3C2FBB(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2A7413168F6CD5A8 | Since: 1207
     */
    function _0x2A7413168F6CD5A8(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BB2B5BCF0DF8008 | Since: 1207
     */
    function _0x2BB2B5BCF0DF8008(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C46D2A591D8C322 | Since: 1207
     */
    function _0x2C46D2A591D8C322(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3053064F909B5F42 | Since: 1207
     */
    function _0x3053064F909B5F42(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3137EDC899E6DAE4 | Since: 1355
     */
    function _0x3137EDC899E6DAE4(): void;
    /**
     * Returns trackIndex
     *
     * Hash: 0x331CBD247FC5DAA8 | Since: 1207
     */
    function _0x331CBD247FC5DAA8(configHash: number | string, pos: Vector3, direction: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x34BCF6209B9668A7 | Since: 1207
     */
    function _0x34BCF6209B9668A7(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x37D238BE69F7378A | Since: 1207
     */
    function _0x37D238BE69F7378A(trackIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x38E7DD70A242D5CB | Since: 1207
     */
    function _0x38E7DD70A242D5CB(trackIndex: number): void;
    /**
     * Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
     *
     * Hash: 0x3ABFA128F5BF5A70 | Since: 1207
     */
    function _0x3ABFA128F5BF5A70(trainTrack: number | string, junctionIndex: number, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3D86997A86FEEF0D | Since: 1207
     */
    function _0x3D86997A86FEEF0D(): void;
    /**
     * No comment provided
     *
     * Hash: 0x41365DB586CD9E8E | Since: 1207
     */
    function _0x41365DB586CD9E8E(trackIndex: number): void;
    /**
     * _H*
     *
     * Hash: 0x41F0B254DDF71473 | Since: 1207
     */
    function _0x41F0B254DDF71473(wagon: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x42404D57D621601A | Since: 1207
     */
    function _0x42404D57D621601A(): any;
    /**
     * No comment provided
     *
     * Hash: 0x427C919E9809E370 | Since: 1207
     */
    function _0x427C919E9809E370(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x485B05EF05B9AEE9 | Since: 1207
     */
    function _0x485B05EF05B9AEE9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C05B42A8D937796 | Since: 1207
     */
    function _0x4C05B42A8D937796(): void;
    /**
     * Params: p1 usually true in R* Scripts
     * _SET_DRAFT_VEHICLE_*
     *
     * Hash: 0x4C60C333F9CCA2B6 | Since: 1207
     */
    function _0x4C60C333F9CCA2B6(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x51C7694E140FAE43 | Since: 1207
     */
    function _0x51C7694E140FAE43(): any;
    /**
     * No comment provided
     *
     * Hash: 0x5AADC7BBBB1BCEEB | Since: 1207
     */
    function _0x5AADC7BBBB1BCEEB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x615B3B8E73634509 | Since: 1207
     */
    function _0x615B3B8E73634509(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x63509DDF102E08E8 | Since: 1207
     */
    function _0x63509DDF102E08E8(trackIndex: number): void;
    /**
     * Only used in R* Script beat_train_holdup: p1 = 1
     *
     * Hash: 0x6355602C02EDC6DF | Since: 1207
     */
    function _0x6355602C02EDC6DF(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6703872EC09BC158 | Since: 1207
     */
    function _0x6703872EC09BC158(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6835AFEA10E186F4 | Since: 1207
     */
    function _0x6835AFEA10E186F4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x68830738A6BFB370 | Since: 1207
     */
    function _0x68830738A6BFB370(): void;
    /**
     * No comment provided
     *
     * Hash: 0x697DF68F3A761A50 | Since: 1207
     */
    function _0x697DF68F3A761A50(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B34BE961F639E21 | Since: 1207
     */
    function _0x6B34BE961F639E21(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B53F4B811E583D2 | Since: 1207
     */
    function _0x6B53F4B811E583D2(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns trackIndex
     *
     * Hash: 0x6C87F49BFA181DB5 | Since: 1207
     */
    function _0x6C87F49BFA181DB5(pos: Vector3): number;
    /**
     * _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
     *
     * Hash: 0x6DE072AC8A95FFC1 | Since: 1207
     */
    function _0x6DE072AC8A95FFC1(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x6EA1273D525427F4 | Since: 1207
     */
    function _0x6EA1273D525427F4(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FD7BDF10304363A | Since: 1207
     */
    function _0x6FD7BDF10304363A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x703D4FB366DA4452 | Since: 1207
     */
    function _0x703D4FB366DA4452(): void;
    /**
     * No comment provided
     *
     * Hash: 0x718EB706B6E998A0 | Since: 1207
     */
    function _0x718EB706B6E998A0(trackIndex: number): void;
    /**
     * _SET_VEHICLE_WHEELS_*
     *
     * Hash: 0x73118A3EE9C9B6DB | Since: 1207
     */
    function _0x73118A3EE9C9B6DB(wagon: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x7408B5C66BA31ADB | Since: 1207
     */
    function _0x7408B5C66BA31ADB(): void;
    /**
     * No comment provided
     *
     * Hash: 0x750D42C013F64AE7 | Since: 1207
     */
    function _0x750D42C013F64AE7(): void;
    /**
     * Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
     *
     * Hash: 0x762FDC4C19E5A981 | Since: 1207
     */
    function _0x762FDC4C19E5A981(trainCarriage: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7840576C50A13DBA | Since: 1207
     */
    function _0x7840576C50A13DBA(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x785639D89F8451AB | Since: 1207
     */
    function _0x785639D89F8451AB(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x7BE0746539DEF0C8 | Since: 1207
     */
    function _0x7BE0746539DEF0C8(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8379E05871AD24E0 | Since: 1207
     */
    function _0x8379E05871AD24E0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x850CE59DEC2028F3 | Since: 1207
     */
    function _0x850CE59DEC2028F3(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x873AAF600CC36DAC | Since: 1207
     */
    function _0x873AAF600CC36DAC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x877EA24EB1614495 | Since: 1207
     */
    function _0x877EA24EB1614495(): any;
    /**
     * No comment provided
     *
     * Hash: 0x87B974E54C71BA7B | Since: 1207
     */
    function _0x87B974E54C71BA7B(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x8878FF3EEE2868A9 | Since: 1207
     */
    function _0x8878FF3EEE2868A9(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8DECD262602548B9 | Since: 1207
     */
    function _0x8DECD262602548B9(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x9868C0D0134855F7 | Since: 1207
     */
    function _0x9868C0D0134855F7(): void;
    /**
     * No comment provided
     *
     * Hash: 0x98A7598C579EE871 | Since: 1207
     */
    function _0x98A7598C579EE871(): void;
    /**
     * _GET_P - _GET_T*
     *
     * Hash: 0x9CC94A948EAF5372 | Since: 1207
     */
    function _0x9CC94A948EAF5372(trackIndex: number, stationIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D12796EF4BF9EA9 | Since: 1207
     */
    function _0x9D12796EF4BF9EA9(): void;
    /**
     * Forcing high LOD buoyancy for vehicle: p1 = false
     * _SET_A*
     *
     * Hash: 0x9E8711C81AA17876 | Since: 1207
     */
    function _0x9E8711C81AA17876(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xA13028E22564A1BD | Since: 1207
     */
    function _0xA13028E22564A1BD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA230A5DDE12ED374 | Since: 1207
     */
    function _0xA230A5DDE12ED374(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA72B1BF3857B94D7 | Since: 1207
     */
    function _0xA72B1BF3857B94D7(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7966807953A18EE | Since: 1207
     */
    function _0xA7966807953A18EE(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9E185D498B9AC67 | Since: 1207
     */
    function _0xA9E185D498B9AC67(): any;
    /**
     * _SET_TRAIN_*
     *
     * Hash: 0xAE7E66A61E7C17A5 | Since: 1207
     */
    function _0xAE7E66A61E7C17A5(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xB4241AD8F5AEE9ED | Since: 1207
     */
    function _0xB4241AD8F5AEE9ED(trackIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB42C87521D1BDD2F | Since: 1207
     */
    function _0xB42C87521D1BDD2F(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xB961DD799A837BD7 | Since: 1207
     */
    function _0xB961DD799A837BD7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2E62678D602853C | Since: 1207
     */
    function _0xC2E62678D602853C(): void;
    /**
     * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
     *
     * Hash: 0xC325A6BAA62CF8A2 | Since: 1207
     */
    function _0xC325A6BAA62CF8A2(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xC351394B932A6A50 | Since: 1207
     */
    function _0xC351394B932A6A50(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC399CC89FBA05DA0 | Since: 1207
     */
    function _0xC399CC89FBA05DA0(vehicle: number | Vehicle): void;
    /**
     * _SET_DRAFT_VEHICLE_(STOP?)*
     *
     * Hash: 0xC4A2C11FC0D41916 | Since: 1207
     */
    function _0xC4A2C11FC0D41916(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCACAB2B123BBDBD6 | Since: 1207
     */
    function _0xCACAB2B123BBDBD6(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCAFF2C9747103C02 | Since: 1207
     */
    function _0xCAFF2C9747103C02(): any;
    /**
     * No comment provided
     *
     * Hash: 0xCBC7B6F9A56B79F6 | Since: 1207
     */
    function _0xCBC7B6F9A56B79F6(): void;
    /**
     * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
     *
     * Hash: 0xCBF88256E44D5D39 | Since: 1207
     */
    function _0xCBF88256E44D5D39(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEB1F1EED484A5B4 | Since: 1207
     */
    function _0xCEB1F1EED484A5B4(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF342503CA4C8DF1 | Since: 1207
     */
    function _0xCF342503CA4C8DF1(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF9DA72002FC16BF | Since: 1207
     */
    function requestVehicleAssetAnims(ped: number | Ped, entity: number | Entity, vehicleAsset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0116DF21E6C7B36 | Since: 1207
     */
    function _0xD0116DF21E6C7B36(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD0AABE5B9F8FA589 | Since: 1207
     */
    function _0xD0AABE5B9F8FA589(trackIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0BA1853D76683C8 | Since: 1207
     */
    function _0xD0BA1853D76683C8(trackIndex: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1DF5E54F4ACBE1A | Since: 1207
     */
    function _0xD1DF5E54F4ACBE1A(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD1EFA8D68BF5D63D | Since: 1207
     */
    function _0xD1EFA8D68BF5D63D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD21A3D421E7F09F7 | Since: 1207
     */
    function _0xD21A3D421E7F09F7(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4907EF4334C7602 | Since: 1207
     */
    function _0xD4907EF4334C7602(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD826690B5CF3BEFF | Since: 1207
     */
    function _0xD826690B5CF3BEFF(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9BF3ED8EFB67EA3 | Since: 1207
     */
    function _0xD9BF3ED8EFB67EA3(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDC0556D0F484ECAA | Since: 1207
     */
    function _0xDC0556D0F484ECAA(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC69F6913CCA0B99 | Since: 1207
     */
    function _0xDC69F6913CCA0B99(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD100CE1EBBF37E3 | Since: 1207
     */
    function _0xDD100CE1EBBF37E3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE8C5B9F65017FA1 | Since: 1207
     */
    function _0xDE8C5B9F65017FA1(train: number | Vehicle): any;
    /**
     * No comment provided
     *
     * Hash: 0xE12F5ED49F44D40D | Since: 1207
     */
    function _0xE12F5ED49F44D40D(): void;
    /**
     * Only used in R* SP Script rcm_abigail31: p1 = 5
     * _GET_VEHICLE_T* - _GET_VO*
     *
     * Hash: 0xE1C0F8781BF130C2 | Since: 1207
     */
    function _0xE1C0F8781BF130C2(wagon: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE682002DB1F30669 | Since: 1207
     */
    function _0xE682002DB1F30669(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6BD7DD3FD474415 | Since: 1207
     */
    function _0xE6BD7DD3FD474415(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE777DDF3E78397E8 | Since: 1207
     */
    function _0xE777DDF3E78397E8(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE78993FF9022C064 | Since: 1207
     */
    function _0xE78993FF9022C064(): void;
    /**
     * _SET_TRAIN_*
     *
     * Hash: 0xEF28A614B4B264B8 | Since: 1207
     */
    function _0xEF28A614B4B264B8(train: number | Vehicle): void;
    /**
     * _IS_* (related to CREATE_MISSION_TRAIN)
     *
     * Hash: 0xF05DFAF1ADFEF2CD | Since: 1207
     */
    function _0xF05DFAF1ADFEF2CD(trainConfig: number | string, pos: Vector3, direction: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF57DB8E83DCD8349 | Since: 1207
     */
    function _0xF57DB8E83DCD8349(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF5EA41C1408695FB | Since: 1207
     */
    function _0xF5EA41C1408695FB(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF6E3D38869D0F7AD | Since: 1207
     */
    function _0xF6E3D38869D0F7AD(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8F7DA13CFBD4532 | Since: 1207
     */
    function _0xF8F7DA13CFBD4532(trackIndex: number): void;
    /**
     * _SET_DRAFT_VEHICLE_*
     *
     * Hash: 0xFC4F15A7DDDC47B1 | Since: 1207
     */
    function _0xFC4F15A7DDDC47B1(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF2B1F59FB892F14 | Since: 1207
     */
    function _0xFF2B1F59FB892F14(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFFE15B433300B8C | Since: 1207
     */
    function _0xFFFE15B433300B8C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x41503629D1139ABC | Since: 1207
     */
    function addTrainTemporaryStop(train: number | Vehicle, trackIndex: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x316CDB5B6E8F4110 | Since: 1207
     */
    function attachDraftVehicleHarnessPed(mount: number | Ped, draft: number | Vehicle, harnessId: number): boolean;
    /**
     * Params: destroyingForce is usually 100f in R* Scripts
     * Similar to 0xD4F5EFB55769D272, _A*
     *
     * Hash: 0xC372B6A88F6E4AD8 | Since: 1207
     */
    function breakOffDraftWheel(vehicle: number | Vehicle, wheelIndex: number, destroyingForce: number): void;
    /**
     * wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
     *
     * Hash: 0xD4F5EFB55769D272 | Since: 1207
     */
    function breakOffVehicleWheel(vehicle: number | Vehicle, wheelIndex: number): number;
    /**
     * Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
     *
     * Hash: 0x214651FB1DFEBA89 | Since: 1207
     */
    function createDraftVehicle(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean, bDontAutoCreateDraftAnimals: boolean, draftAnimalPopGroup: number | string): number;
    /**
     * configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
     * For more information, see trainconfigs.ymt
     * To make the train AI controlled, set conductor to true and set the speed once.
     *
     * Hash: 0xC239DBD9A57D2A71 | Since: 1207
     */
    function createMissionTrain(configHash: number | string, pos: Vector3, direction: boolean, passengers: boolean, conductor: boolean): number;
    /**
     * Spawn without lanterns set
     *
     * Hash: 0xE1A83D4A3B5D7938 | Since: 1207
     */
    function deleteVehicleLanterns(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4402960666000E62 | Since: 1207
     */
    function detachDraftVehicleHarnessFromIndex(draft: number | Vehicle, harnessId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB36D3EC70963BE60 | Since: 1207
     */
    function detachDraftVehicleHarnessPed(draft: number | Vehicle, ped: number | Ped): boolean;
    /**
     * Only used in train_robbery4 R* Script
     * _C* - _DEL*
     *
     * Hash: 0x54CBDD6E1B4CB4DF | Since: 1207
     */
    function detachWagonEntityFromTrain(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xC29996A337BDD099 | Since: 1207
     */
    function doesTrainExistOnTrack(trackIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x35DC1877312FBA0F | Since: 1207
     */
    function fadeAndDestroyVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE015CF1F2C0959D8 | Since: 1207
     */
    function getBreakableVehicleLocksState(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x58F2244C1286D09A | Since: 1207
     */
    function getBreakableVehicleLockObject(vehicle: number | Vehicle, index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x35D302397E524939 | Since: 1207
     */
    function getCheckpointTrainSpawnLocation(trackIndex: number, pos: Vector3, distance: number, direction: boolean): Vector3;
    /**
     * Returns p0 for 0xBA958F68031DDBFC (trackIndex)
     *
     * Hash: 0xAF787E081AC4A8EE | Since: 1207
     */
    function getCurrentTrackForTrain(train: number | Vehicle): number;
    /**
     * `Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.`
     *
     * Hash: 0xC6D7DDC843176701 | Since: 1207
     */
    function getDraftVehicleDesiredSpeed(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x6DE03BCC15E81710 | Since: 1207
     */
    function getNearestTrainTrackPosition(pos: Vector3): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x2FA86833E3617E2D | Since: 1207
     */
    function getNumBreakableVehicleLockObjects(vehicle: number | Vehicle): number;
    /**
     * Returns amount for CAN_REGISTER_MISSION_VEHICLES
     *
     * Hash: 0x635423D55CA84FC8 | Since: 1207
     */
    function getNumCarsFromTrainConfig(trainConfig: number | string): number;
    /**
     * Returns number of horses a wagon can have
     *
     * Hash: 0x5B1A26BB18E7D451 | Since: 1207
     */
    function getNumDraftVehicleHarnessPed(modelHash: number | string): number;
    /**
     * enum eDraftHarness
     * {
     * DRAFT_HARNESS_LR,
     * DRAFT_HARNESS_RR,
     * DRAFT_HARNESS_LM,
     * DRAFT_HARNESS_RM,
     * DRAFT_HARNESS_LF,
     * DRAFT_HARNESS_RF,
     * DRAFT_HARNESS_COUNT
     * };
     *
     * Hash: 0xA8BA0BAE0173457B | Since: 1207
     */
    function getPedInDraftHarness(vehicle: number | Vehicle, harnessId: number): number;
    /**
     * Returns handles of boat paddles entities.
     *
     * Hash: 0xA6E210FB4283B767 | Since: 1207
     */
    function getRowingOars(vehicle: number | Vehicle, left: number | Entity, right: number | Entity): void;
    /**
     * Returns Coords of vStation
     * p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
     * _GET_P* - _GET_T*
     *
     * Hash: 0xBA958F68031DDBFC | Since: 1207
     */
    function getStationCoordsFromTrainStationData(trackIndex: number, stationIndex: number): Vector3;
    /**
     * Returns trackIndex
     * _E* - _F*
     *
     * Hash: 0x85D39F5E3B6D7EB0 | Since: 1207
     */
    function getTrackIndexFromCoords(pos: Vector3): number;
    /**
     * Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
     *
     * Hash: 0x671A07C9A1CD50A5 | Since: 1207
     */
    function getTrainCar(train: number | Vehicle): number;
    /**
     * Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
     * _C* (O, P, Q, R)
     *
     * Hash: 0x60B7D1DCC312697D | Since: 1207
     */
    function getTrainCarriageTrailerNumber(train: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x3C9628A811CBD724 | Since: 1207
     */
    function getTrainDirection(train: number | Vehicle): boolean;
    /**
     * https://i.imgur.com/1rHibjW.jpg
     *
     * Hash: 0x67995318F5FAA496 | Since: 1207
     */
    function getTrainDirectionFromIndex(trackIndex: number): boolean;
    /**
     * Returns modelHash
     *
     * Hash: 0x8DF5F6A19F99F0D5 | Since: 1207
     */
    function getTrainModelFromTrainConfigByCarIndex(trainConfig: number | string, trainCarIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E8A921112891651 | Since: 1207
     */
    function getTrainPositionOnTrack(trackIndex: number): Vector3;
    /**
     * Returns trackIndex
     *
     * Hash: 0x45853F4E17D847D5 | Since: 1207
     */
    function getTrainTrackFromTrainVehicle(train: number | Vehicle): number;
    /**
     * Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
     *
     * Hash: 0x86AFC343CF7F0B34 | Since: 1207
     */
    function getTrainTrackJunctionAtCoords(trainTrack: number | string, pos: Vector3, junctionIndex: number): boolean;
    /**
     * Returns train
     *
     * Hash: 0x6E585A616ABB8401 | Since: 1207
     */
    function getTrainVehicleFromTrackIndex(trackIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xDD1E1393D966D39A | Since: 1207
     */
    function getVehicleDoorsLockedForTeam(vehicle: number | Vehicle, team: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD798DF5DB67B1659 | Since: 1207
     */
    function getVehicleIsPropSetApplied(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB765B8FD49A796C | Since: 1207
     */
    function getVehicleLivery(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xB729679356A889AE | Since: 1207
     */
    function getVehicleOwner(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA44D65E6C624526F | Since: 1207
     */
    function getVehicleTint(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xFF5791B7639C2A46 | Since: 1207
     */
    function getVehicleTurretSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBD3C4A2ED509205E | Since: 1207
     */
    function hasTrainLoaded(train: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x201B8ED4FF7FE9F5 | Since: 1207
     */
    function hideHorseReins(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x30D86B2B7622D0EB | Since: 1207
     */
    function isBoatGrounded(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB213D2A560B2E48B | Since: 1207
     */
    function isPedExclusiveDriverOfVehicle(ped: number | Ped, vehicle: number | Vehicle, outIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB9D5BDDA88E1BB66 | Since: 1207
     */
    function isThisModelADraftVehicle(model: number | string): boolean;
    /**
     * Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
     *
     * Hash: 0x404527BC03DA0E6C | Since: 1207
     */
    function isVehicleBroughtToHalt(vehicle: number | Vehicle): boolean;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xE979BB5602AD3402 | Since: 1207
     */
    function isVehicleDoorBroken(vehicle: number | Vehicle, doorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5136B284B67B35C7 | Since: 1207
     */
    function isVehicleFadingOut(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E3BF7ED4169EC43 | Since: 1207
     */
    function isVehicleOnFire(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCB2CA620C48BC875 | Since: 1207
     */
    function isVehicleWheelDestroyed(vehicle: number | Vehicle, wheel: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x138398153824E332 | Since: 1207
     */
    function setAllJunctionsCleared(): void;
    /**
     * No comment provided
     *
     * Hash: 0x424FFCB9F0D2D4B5 | Since: 1207
     */
    function setAllVehicleGeneratorsDisabledForVolume(volume: number, toggle: boolean): void;
    /**
     * Params: 1.0f will make balloon hover
     *
     * Hash: 0x7C9E45A4CED2E8DA | Since: 1207
     */
    function setBalloonHoverState(balloon: number | Vehicle): void;
    /**
     * Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
     * Screenshot: https://imgur.com/a/nsomtiv
     *
     * Hash: 0x31F343383F19C987 | Since: 1207
     */
    function setBatchTarpHeight(vehicle: number | Vehicle, height: number, immediately: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C6D9A399126C194 | Since: 1207
     */
    function setDraftAnimalRandomSeed(vehicle: number | Vehicle, seed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x87344305778E5415 | Since: 1207
     */
    function setDraftVehicleAllowDraftAnimalAutoCreation(vehicle: number | Vehicle, allow: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6090A031C69F384E | Since: 1207
     */
    function setDraftVehicleAnimalsCanDetach(draft: number | Vehicle, canDetach: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C3F0F7F92CA847C | Since: 1207
     */
    function setDraftVehicleDesiredSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x226C6A4E3346D288 | Since: 1207
     */
    function setDraftVehicleYokeCanBreak(draft: number | Vehicle, canBreak: boolean): void;
    /**
     * Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
     *
     * Hash: 0xF489F94BFEE12BB0 | Since: 1207
     */
    function setForceCoachRobberyLoot(vehicle: number | Vehicle, coachrobberyLoot: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1098CDA477890165 | Since: 1207
     */
    function setForceHighLodVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5FFB08976911B50 | Since: 1207
     */
    function setHorseTrafficGroupingDistribution(): void;
    /**
     * Notice: BOOL p4 was wrongly named takePassengers (?)
     * Can be used to rotate the train by setting the BOOL direction
     *
     * Hash: 0xC9EA26893C9E4024 | Since: 1207
     */
    function setMissionTrainWarpToCoords(train: number | Vehicle, pos: Vector3, direction: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3660BCAB3A6BB734 | Since: 1207
     */
    function setTrainHalt(train: number | Vehicle): void;
    /**
     * Restarts the train
     *
     * Hash: 0x787E43477746876F | Since: 1207
     */
    function setTrainLeaveStation(train: number | Vehicle): void;
    /**
     * Maximum possible speed is 30.0 (108 km/h)
     *
     * Hash: 0x9F29999DFDF2AEB8 | Since: 1207
     */
    function setTrainMaxSpeed(train: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4182C037AA1F0091 | Since: 1207
     */
    function setTrainStopsForStations(train: number | Vehicle, toggle: boolean): void;
    /**
     * trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
     *
     * Hash: 0xE6C5E2125EB210C1 | Since: 1207
     */
    function setTrainTrackJunctionSwitch(trainTrack: number | string, junctionIndex: number, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E5DA070BAD3279E | Since: 1207
     */
    function setVehicleDeterioration(vehicle: number | Vehicle, amount: number): void;
    /**
     * dirtLevel: 0.0 - 1.0
     *
     * Hash: 0xBAE0EEDF93F05EAA | Since: 1207
     */
    function setVehicleDirtLevel2(vehicle: number | Vehicle, dirtLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE1531927AD6C9F8 | Since: 1207
     */
    function setVehicleIsInHurry(vehicle: number | Vehicle, enabled: boolean): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
     *
     * Hash: 0xF89D82A0582E46ED | Since: 1207
     */
    function setVehicleLivery(vehicle: number | Vehicle, liveryIndex: number): void;
    /**
     * Ranges from -1 to 2? (internal type is int8)
     * https://imgur.com/a/bPzHcft
     *
     * Hash: 0x3FA7D7D1E0EA809E | Since: 1207
     */
    function setVehicleLodLevel(vehicle: number | Vehicle, lodLevel: number): void;
    /**
     * mudLevel: 0.0 - 1.0
     *
     * Hash: 0x4D15E49764CB328A | Since: 1207
     */
    function setVehicleMudLevel(vehicle: number | Vehicle, mudLevel: number): void;
    /**
     * snowLevel: 0.0 - 1.0
     *
     * Hash: 0x6F73EFAB11651D7F | Since: 1207
     */
    function setVehicleSnowLevel(vehicle: number | Vehicle, snowLevel: number): void;
    /**
     * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
     *
     * Hash: 0x8268B098F6FCA4E2 | Since: 1207
     */
    function setVehicleTint(vehicle: number | Vehicle, tintId: number): void;
    /**
     * wetLevel: 0.0 - 1.0
     *
     * Hash: 0x5AABB09F6FBD1F87 | Since: 1207
     */
    function setVehicleWetLevel(vehicle: number | Vehicle, wetLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x41CDA90EE3450921 | Since: 1207
     */
    function showHorseReins(vehicle: number | Vehicle): void;
    /**
     * whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
     * p2 = true seems to mute the sound
     *
     * Hash: 0xCFE122EC635CC2B2 | Since: 1207
     */
    function triggerTrainWhistle(train: number | Vehicle, whistleSequence: string): void;
}
export declare namespace voice {
    /**
     * No comment provided
     *
     * Hash: 0x08797A8C03868CB8 | Since: 1207
     */
    function _0x08797A8C03868CB8(threshold: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0DED260A1958A82E | Since: 1207
     */
    function _0x0DED260A1958A82E(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1C38C3577901AF1F | Since: 1207
     */
    function _0x1C38C3577901AF1F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FBF7F5BA7E4BE3A | Since: 1207
     */
    function _0x1FBF7F5BA7E4BE3A(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F82CAB262C8AE26 | Since: 1207
     */
    function _0x2F82CAB262C8AE26(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x356135B9B10A2A82 | Since: 1207
     */
    function _0x356135B9B10A2A82(gamerHandle: any): boolean;
    /**
     * Params: p1 = 2; p2 = 3 in R* Script net_main_offline
     *
     * Hash: 0x4791899615D70FA2 | Since: 1207
     */
    function _0x4791899615D70FA2(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x49623BCFC3A3D829 | Since: 1207
     */
    function _0x49623BCFC3A3D829(player: number | string | Player, muted: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x58125B691F6827D5 | Since: 1207
     */
    function _0x58125B691F6827D5(proximity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CA7FB7D6DE49DCC | Since: 1207
     */
    function _0x5CA7FB7D6DE49DCC(player: number | string | Player): number;
    /**
     * Returns p2 value of 0x4791899615D70FA2
     *
     * Hash: 0x767931C727DF2ED7 | Since: 1207
     */
    function _0x767931C727DF2ED7(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x79F478FF5F9F4F05 | Since: 1207
     */
    function _0x79F478FF5F9F4F05(enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E462DB1EAA9C47C | Since: 1207
     */
    function _0x8E462DB1EAA9C47C(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x919AF2D93E9AA89D | Since: 1207
     */
    function _0x919AF2D93E9AA89D(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA35FD9ABAB490A3 | Since: 1207
     */
    function _0xAA35FD9ABAB490A3(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB3E8841F6BDAF83E | Since: 1207
     */
    function _0xB3E8841F6BDAF83E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6E79850B759A30E | Since: 1207
     */
    function _0xB6E79850B759A30E(teamId: number, allow: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB779F4FA19269AEC | Since: 1207
     */
    function _0xB779F4FA19269AEC(flag: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCF71FCFA0070B1A | Since: 1207
     */
    function _0xCCF71FCFA0070B1A(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB622ECD3DCBE078 | Since: 1207
     */
    function _0xDB622ECD3DCBE078(player: number | string | Player): any;
    /**
     * No comment provided
     *
     * Hash: 0xDC9B361CB7776673 | Since: 1207
     */
    function _0xDC9B361CB7776673(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC8703E4536A9952 | Since: 1207
     */
    function _0xEC8703E4536A9952(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF6F2A35FAAF2ED7 | Since: 1207
     */
    function _0xEF6F2A35FAAF2ED7(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF8938CF3984092A5 | Since: 1207
     */
    function _0xF8938CF3984092A5(player: number | string | Player): void;
}
export declare namespace volume {
    /**
     * No comment provided
     *
     * Hash: 0x59F6F5C1D129F106 | Since: 1207
     */
    function createVolumeAggregate(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF85637F22706891 | Since: 1207
     */
    function createVolumeBox(pos: Vector3, rot: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x0522D4774B82E3E6 | Since: 1207
     */
    function createVolumeCylinder(pos: Vector3, rot: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xB3FB80A32BAE3065 | Since: 1207
     */
    function createVolumeSphere(pos: Vector3, rot: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x43F867EF5C463A53 | Since: 1207
     */
    function deleteVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x397769175A7DBB30 | Since: 1207
     */
    function doesVolumeCollideWithAnyVolumeLock(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x92A78D0BEDB332A3 | Since: 1207
     */
    function doesVolumeExist(volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF70F00013A62F866 | Since: 1207
     */
    function getVolumeCoords(volume: number): Vector3;
    /**
     * enum eVolumeLockRequestStatus
     * {
     * VOLUME_LOCK_REQUEST_STATUS_INVALID,
     * VOLUME_LOCK_REQUEST_STATUS_READY,
     * VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
     * VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
     * VOLUME_LOCK_REQUEST_STATUS_FAILED
     * };
     *
     * Hash: 0xB33A604345F58202 | Since: 1207
     */
    function getVolumeLockRequestStatus(volLockRequestId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x18675BC914891122 | Since: 1207
     */
    function getVolumeRotation(volume: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x3E2A25B2416DD67E | Since: 1207
     */
    function getVolumeScale(volume: number): Vector3;
    /**
     * Old name: _IS_POSITION_INSIDE_VOLUME
     *
     * Hash: 0xF256A75210C5C0EB | Since: 1207
     */
    function isPointInVolume(volume: number, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA4A4359320345B34 | Since: 1207
     */
    function isVolumeLockRequestValid(volLockRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF14BCEF290F869E1 | Since: 1207
     */
    function requestVolumeLock(pos: Vector3, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x183C0B6CFEFFCAE4 | Since: 1207
     */
    function requestVolumeLockWithArgs(args: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x541B8576615C33DE | Since: 1207
     */
    function setVolumeCoords(volume: number, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE2BE6FFA4A13CBB0 | Since: 1207
     */
    function setVolumeOwnerPersistentCharacter(volume: number, persChar: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xA07CF1B21B56F041 | Since: 1207
     */
    function setVolumeRotation(volume: number, rot: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA46E98BDC407E23D | Since: 1207
     */
    function setVolumeScale(volume: number, scale: Vector3): boolean;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x128FC3A893BF853A | Since: 1207
     */
    function _0x128FC3A893BF853A(): void;
    /**
     * Indexes items (including entyties and peds) in a set volume
     * Counts up as its the return value of how many items it writes to given itemSet
     *
     * Hash: 0x2B32B11520626229 | Since: 1207
     */
    function getVolumeAmountOfIndexedItems(pos: Vector3, radius: number, itemSet: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x351D71B8B72B858B | Since: 1207
     */
    function _0x351D71B8B72B858B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x3EFABB21E14A6BD1 | Since: 1207
     */
    function _0x3EFABB21E14A6BD1(): void;
    /**
     * No comment provided
     *
     * Hash: 0x40F769D31A00D5A0 | Since: 1207
     */
    function _0x40F769D31A00D5A0(): any;
    /**
     * No comment provided
     *
     * Hash: 0x4A8FEFC43FD8AC9B | Since: 1207
     */
    function _0x4A8FEFC43FD8AC9B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x51E52C9687FCDEEC | Since: 1207
     */
    function _0x51E52C9687FCDEEC(): any;
    /**
     * No comment provided
     *
     * Hash: 0x52572B331E693AED | Since: 1207
     */
    function _0x52572B331E693AED(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53D05D60E5F5B40C | Since: 1207
     */
    function _0x53D05D60E5F5B40C(): void;
    /**
     * No comment provided
     *
     * Hash: 0x695DAC2DB928F308 | Since: 1207
     */
    function _0x695DAC2DB928F308(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D5F9E69BA1BE783 | Since: 1207
     */
    function _0x6D5F9E69BA1BE783(): void;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0x748C5F51A18CB8F0 | Since: 1207
     */
    function _0x748C5F51A18CB8F0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7FD78DFD0C5D7B9B | Since: 1207
     */
    function _0x7FD78DFD0C5D7B9B(): any;
    /**
     * No comment provided
     *
     * Hash: 0x870E9981ED27C815 | Since: 1207
     */
    function _0x870E9981ED27C815(): any;
    /**
     * No comment provided
     *
     * Hash: 0x998202B206872672 | Since: 1207
     */
    function _0x998202B206872672(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA9EE2AAFC717623 | Since: 1207
     */
    function _0xAA9EE2AAFC717623(): any;
    /**
     * No comment provided
     *
     * Hash: 0xAC355980681A7F89 | Since: 1207
     */
    function _0xAC355980681A7F89(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB440F4E35393FC39 | Since: 1207
     */
    function _0xB440F4E35393FC39(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB469CFD9E065EB99 | Since: 1207
     */
    function _0xB469CFD9E065EB99(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4019CF9AE8E931A | Since: 1207
     */
    function _0xC4019CF9AE8E931A(volLockRequestId: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xC61E2FD926DBB406 | Since: 1311
     */
    function _0xC61E2FD926DBB406(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA5C90D40665D5CE | Since: 1207
     */
    function _0xCA5C90D40665D5CE(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD460135C98940274 | Since: 1207
     */
    function _0xD460135C98940274(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4FA73FE628FEC63 | Since: 1207
     */
    function _0xD4FA73FE628FEC63(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD52DF30355EA7C8E | Since: 1207
     */
    function _0xD52DF30355EA7C8E(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD882C5B3991575B7 | Since: 1207
     */
    function _0xD882C5B3991575B7(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xEBA87B9273835CF3 | Since: 1207
     */
    function _0xEBA87B9273835CF3(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE1D6FF54CAF7714 | Since: 1207
     */
    function _0xEE1D6FF54CAF7714(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF3A2FBA5985C8CD5 | Since: 1207
     */
    function _0xF3A2FBA5985C8CD5(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6CE6F9C3897804E | Since: 1207
     */
    function _0xF6CE6F9C3897804E(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF6F5447D418DAA82 | Since: 1207
     */
    function _0xF6F5447D418DAA82(): any;
    /**
     * nullsub, doesn't do anything
     *
     * Hash: 0xFA15C9A320E707B0 | Since: 1207
     */
    function _0xFA15C9A320E707B0(): void;
    /**
     * _ADD_R* - _ADD_V(OLUME?)*
     *
     * Hash: 0x6E0D3C3F828DA773 | Since: 1207
     */
    function addBoundsToAggregateVolume(volume: number, aggregate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x39816F6F94F385AD | Since: 1207
     */
    function addBoxVolumeToVolumeAggregate(aggregate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCE668AAF83608BE | Since: 1207
     */
    function addCylinderVolumeToVolumeAggregate(aggregate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x58D3803FA639A3BB | Since: 1311
     */
    function addEntryVolumeLock(args: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B7D7BF36D2DE18B | Since: 1207
     */
    function addSphereVolumeToVolumeAggregate(aggregate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x12FCAA23F2320422 | Since: 1207
     */
    function addVolumeToVolumeAggregate(aggregate: number, typeHash: number | string, pos: Vector3, rot: Vector3, scale: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EB78C2B156635B1 | Since: 1207
     */
    function createAntiGriefVolume(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0xBBE768E3AE76E07C | Since: 1207
     */
    function createSpeedVolume(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D580DE6398BB162 | Since: 1207
     */
    function createVolumeAggregateWithCustomName(name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF68485C7495D848E | Since: 1207
     */
    function createVolumeBoxWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x502022FA1AF9DC86 | Since: 1207
     */
    function createVolumeByHash(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x1F85E4AC774A201E | Since: 1207
     */
    function createVolumeByHashWithCustomName(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF1E350EDDF06E59 | Since: 1207
     */
    function createVolumeCylinderWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
    /**
     * Params: p5 is always 0
     *
     * Hash: 0x00BBF7CEAE8C666A | Since: 1207
     */
    function createVolumeLock(pos: Vector3, radius: number, flag: number): number;
    /**
     * Params: p3 is always 0
     *
     * Hash: 0xF383E96C4904DF0C | Since: 1207
     */
    function createVolumeLockAttachedToEntity(entity: number | Entity, radius: number, flag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x10157BC3247FF3BA | Since: 1207
     */
    function createVolumeSphereWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xFD0E389CD44434B6 | Since: 1207
     */
    function createWalkAndTalkVolume(): number;
    /**
     * No comment provided
     *
     * Hash: 0x77A6E4AD0C496F81 | Since: 1207
     */
    function findVolumeLockRequestIdWithArgs(args: any): number;
    /**
     * No comment provided
     *
     * Hash: 0x5737199AF2DC609F | Since: 1207
     */
    function getVolumeBounds(volume: number, min: Vector3, max: Vector3): void;
    /**
     * Returns relationshipGroup Hash
     *
     * Hash: 0x666C2F53ABEFC952 | Since: 1207
     */
    function getVolumeRelationship(volume: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFEFF01B5725BCD22 | Since: 1207
     */
    function isAggregateVolume(volume: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x769BB7626B8CDB06 | Since: 1207
     */
    function isPointNearVolumeLockCenter(pos: Vector3, radius: number, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF6A8A652A6B186CD | Since: 1207
     */
    function isVolumeLockRequestValid2(volLockRequestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC43C2FFB70E3F30 | Since: 1207
     */
    function modifyVolumeLockLocation(volLock: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDFECC6EE4491E11 | Since: 1207
     */
    function releaseLockVolume(volLockRequestId: number): void;
    /**
     * _REMOVE_E* - _REMOVE_R*
     *
     * Hash: 0xF92FA8890DECECF6 | Since: 1207
     */
    function removeBoundsFromAggregateVolume(volume: number, aggregate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE551C2CC421185D | Since: 1207
     */
    function setAntiGriefVolumeBlocksHorse(volume: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B23DFF8E0948BB2 | Since: 1207
     */
    function setAntiGriefVolumeBlocksPlayer(volume: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD010A2154B40676 | Since: 1207
     */
    function setVolumeRelationship(volume: number, relationshipGroup: number | string): void;
}
export declare namespace water {
    /**
     * Must be called every frame to take full effect.
     *
     * Hash: 0x754616EC6965D1FB | Since: 1207
     */
    function disableWaterLookup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x754616EC6965D1BF | Since: 1207
     */
    function enableWaterLookup(): void;
    /**
     * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
     *
     * Hash: 0xFCA8B23F28813F69 | Since: 1207
     */
    function getWaterHeight(pos: Vector3, height: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDCF3690AA262C03F | Since: 1207
     */
    function getWaterHeightNoWaves(pos: Vector3, height: number): boolean;
    /**
     * Only used in rcm_crackpot1 R* Script: p0 = 0
     *
     * Hash: 0x4BEF8DD75AF6C71C | Since: 1207
     */
    function removeExtraCalmingQuad(index: number): void;
    /**
     * enum eScriptWaterTestResult
     * {
     * SCRIPT_WATER_TEST_RESULT_NONE,
     * SCRIPT_WATER_TEST_RESULT_WATER,
     * SCRIPT_WATER_TEST_RESULT_BLOCKED,
     * };
     *
     * Hash: 0x8974647ED222EA5F | Since: 1207
     */
    function testProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, intersectionPos: Vector3): number;
    /**
     * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
     *
     * See TEST_PROBE_AGAINST_ALL_WATER.
     *
     * Hash: 0x2B3451FA1E3142E2 | Since: 1207
     */
    function testVerticalProbeAgainstAllWater(pos: Vector3, flags: number, waterHeight: number): number;
    /**
     * Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
     * _REMOVE_*
     *
     * Hash: 0x09A1C7DFDCE54FBC | Since: 1207
     */
    function _0x09A1C7DFDCE54FBC(): void;
    /**
     * Only used in native_son1 R* Script: p1 = 1
     *
     * Hash: 0x0DCEC6A92E497E17 | Since: 1207
     */
    function _0x0DCEC6A92E497E17(entity: number | Entity): void;
    /**
     * Only used in fishing_core R* Script
     *
     * Hash: 0xA33F5069B0CB89B8 | Since: 1207
     */
    function _0xA33F5069B0CB89B8(): void;
    /**
     * Used in bounty1, fanale3, sean1 R* Scripts
     *
     * Hash: 0xB34A6009A0DB80B8 | Since: 1207
     */
    function _0xB34A6009A0DB80B8(entity: number | Entity): void;
    /**
     * Only used in fussar1 / train_robbery2 R* Script
     *
     * Hash: 0xE8126623008372AA | Since: 1207
     */
    function _0xE8126623008372AA(): void;
    /**
     * Only used in fishing_core R* Script
     *
     * Hash: 0xF0FBF193F1F5C0EA | Since: 1207
     */
    function _0xF0FBF193F1F5C0EA(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x189739A7631C1867 | Since: 1207
     */
    function getWorldWaterType(): number;
    /**
     * Only used in guama1 / guama3 R* Script
     * _REQUEST_* or _RESET_*
     *
     * Hash: 0xC63540AEF8384769 | Since: 1207
     */
    function resetGuarmaWaterState(): void;
    /**
     * Only used in R* Script guama1 this native allows to modify the ocean water in the guarma island. wave direction accepts 0, 1 and 2 values.
     *
     * Hash: 0xC63540AEF8384732 | Since: 1207
     */
    function setOceanGuarmaWaterQuadrant(wavesHeight: number, waveDirection: number, waveAmmount: number, waveSpeed: number, wavesStrength: number): void;
    /**
     * 0 = World
     * 1 = Guarma
     *
     * Hash: 0xE8770EE02AEE45C2 | Since: 1207
     */
    function setWorldWaterType(waterType: number): void;
}
export declare namespace weapon {
    /**
     * No comment provided
     *
     * Hash: 0x918990BD9CE08582 | Since: 1207
     */
    function getAllowDualWield(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E1202248937775C | Since: 1207
     */
    function getAmmoInClip(ped: number | Ped, ammo: number, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x015A522136D7F951 | Since: 1207
     */
    function getAmmoInPedWeapon(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF52BD94B47CCF736 | Since: 1207
     */
    function getBestPedShortarmGuid(ped: number | Ped, outGUID: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x8483E98E8B888AE2 | Since: 1207
     */
    function getBestPedWeapon(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1017582BCD3832DC | Since: 1207
     */
    function getCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
    /**
     * attachPoint: see SET_CURRENT_PED_WEAPON
     *
     * Hash: 0x3A87E44BB9A01D54 | Since: 1207
     */
    function getCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, attachPoint: number): boolean;
    /**
     * Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
     *
     * Hash: 0x3B390A939AF0B5FC | Since: 1207
     */
    function getCurrentPedWeaponEntityIndex(ped: number | Ped, attachPoint: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xDC16122C7A20C933 | Since: 1207
     */
    function getMaxAmmo(ped: number | Ped, ammo: number, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA38DCFFCEA8962FA | Since: 1207
     */
    function getMaxAmmoInClip(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x39D22031557946C1 | Since: 1207
     */
    function getPedAmmoByType(ped: number | Ped, ammoType: number | string): number;
    /**
     * Returns the current ammo type of the specified ped's specified weapon.
     *
     * Hash: 0x7FEAD38B326B9F74 | Since: 1207
     */
    function getPedAmmoTypeFromWeapon(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC71FE230A513C30F | Since: 1207
     */
    function getPedBackupWeapon(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x6C4D0409BA1A2BC2 | Since: 1207
     */
    function getPedLastWeaponImpactCoord(ped: number | Ped, coords: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6929E22158E52265 | Since: 1207
     */
    function getPedWeaponGuidAtAttachPoint(ped: number | Ped, attachPoint: number, weaponGuid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEDCA14CA5199FF25 | Since: 1207
     */
    function getWeapontypeGroup(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD3750CCC00635FC2 | Since: 1207
     */
    function getWeaponClipSize(weaponHash: number | string): number;
    /**
     * 0.0: good condition, 1.0: poor condition
     *
     * Hash: 0x0D78E1097F89E637 | Since: 1207
     */
    function getWeaponDegradation(weaponObject: number | Object): number;
    /**
     * Related to rust of weapons
     *
     * Hash: 0xD56E5F336C675EFA | Since: 1207
     */
    function getWeaponPermanentDegradation(weaponObject: number | Object): number;
    /**
     * addReason: see _ADD_AMMO_TO_PED
     *
     * Hash: 0xB282DC6EBD803C75 | Since: 1207
     */
    function giveDelayedWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, addReason: number | string): void;
    /**
     * Gives the ped the weapon.
     * List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
     *
     * Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
     * attachPoint: see SET_CURRENT_PED_WEAPON
     * addReason: see _ADD_AMMO_TO_PED
     * permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
     *
     * Hash: 0x5E3BDDBCB83F3D84 | Since: 1207
     */
    function giveWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, bForceInHand: boolean, bForceInHolster: boolean, attachPoint: number, bAllowMultipleCopies: boolean, addReason: number | string, bIgnoreUnlocks: boolean, permanentDegradation: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBE7E42B07FD317AC | Since: 1207
     */
    function giveWeaponToPedWithOptions(ped: number | Ped, data: any, outData: any): boolean;
    /**
     * onlyCheckPlayerInventory: If true, it will only check the players current inventory. If false, it also checks your horse inventory
     *
     * Hash: 0x8DECB02F88F428BC | Since: 1207
     */
    function hasPedGotWeapon(ped: number | Ped, weaponHash: number | string, onlyCheckPlayerInventory: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76A18844E743BF91 | Since: 1207
     */
    function hasWeaponGotWeaponComponent(weapon: number | Object, addonHash: number | string): boolean;
    /**
     * Hides the ped's weapon during a cutscene.
     *
     * Hash: 0x6F6981D2253C208F | Since: 1207
     */
    function hidePedWeaponForScriptedCutscene(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB690F680A3EA971 | Since: 1207
     */
    function isPedArmed(ped: number | Ped, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF29A186ED428B552 | Since: 1207
     */
    function isPedCarryingWeapon(ped: number | Ped, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB80CA294F2F26749 | Since: 1207
     */
    function isPedWeaponReadyToShoot(ped: number | Ped): boolean;
    /**
     * `Returns true if CWeaponInfoFlags::Flags::Gun is set.`
     *
     * Hash: 0x705BE297EEBDB95D | Since: 1207
     */
    function isWeaponAGun(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC4DEC3CA8C365A5D | Since: 1207
     */
    function isWeaponBow(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x959383DCD42040DA | Since: 1207
     */
    function isWeaponMeleeWeapon(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDC64F5E31EEDAB6 | Since: 1207
     */
    function isWeaponPistol(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDB2578E95EF7138 | Since: 1207
     */
    function isWeaponRepeater(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC212F1D05A8232BB | Since: 1207
     */
    function isWeaponRevolver(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A82317B7EBFC420 | Since: 1207
     */
    function isWeaponRifle(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC75386174ECE95D5 | Since: 1207
     */
    function isWeaponShotgun(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x937C71165CF334B3 | Since: 1207
     */
    function isWeaponValid(weaponHash: number | string): boolean;
    /**
     * Old name: _DROP_CURRENT_PED_WEAPON
     *
     * Hash: 0xCEF4C65DE502D367 | Since: 1207
     */
    function makePedDropWeapon(ped: number | Ped, attachPoint: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF25DF915FA38C5F3 | Since: 1207
     */
    function removeAllPedWeapons(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7D82B0D66777611 | Since: 1207
     */
    function removeWeaponComponentFromWeaponObject(weaponObject: number | Object, component: number | string): void;
    /**
     * removeReason:
     * enum eRemoveItemReason : Hash
     * {
     * REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
     * REMOVE_REASON_COALESCE = 0x2ABE393E,
     * REMOVE_REASON_DEBUG = 0xA07362E6,
     * REMOVE_REASON_DEFAULT = 0xF77DE93D,
     * REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
     * REMOVE_REASON_DROPPED = 0xEC7FB5D5,
     * REMOVE_REASON_DUPLICATE = 0x19047132,
     * REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
     * REMOVE_REASON_GIVEN = 0xAD5377D4,
     * REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
     * REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
     * REMOVE_REASON_LOADOUT = 0x1B94E3BA,
     * REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
     * REMOVE_REASON_SOLD = 0x76C4B482,
     * REMOVE_REASON_USED = 0x2188E0A3,
     * REMOVE_REASON_USE_FAILED = 0x671F9EAD
     * };
     *
     * Hash: 0x4899CB088EDF59B8 | Since: 1207
     */
    function removeWeaponFromPed(ped: number | Ped, weaponHash: number | string, removeReason: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x78030C7867D8B9B6 | Since: 1207
     */
    function setAllowAnyWeaponDrop(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCD2A934D65CB497 | Since: 1207
     */
    function setAmmoInClip(ped: number | Ped, weaponHash: number | string, ammo: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x75C55983C2C39DAA | Since: 1207
     */
    function setCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
    /**
     * attachPoint:
     * enum eWeaponAttachPoint
     * {
     * WEAPON_ATTACH_POINT_INVALID = -1,
     * WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
     * WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
     * WEAPON_ATTACH_POINT_PISTOL_R = 2,
     * MAX_HAND_WEAPON_ATTACH_POINTS = 2,
     * WEAPON_ATTACH_POINT_PISTOL_L = 3,
     * WEAPON_ATTACH_POINT_KNIFE = 4,
     * WEAPON_ATTACH_POINT_LASSO = 5,
     * WEAPON_ATTACH_POINT_THROWER = 6,
     * WEAPON_ATTACH_POINT_BOW = 7,
     * WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
     * WEAPON_ATTACH_POINT_RIFLE = 9,
     * WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
     * WEAPON_ATTACH_POINT_LANTERN = 11,
     * WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
     * WEAPON_ATTACH_POINT_MELEE = 13,
     * MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
     * WEAPON_ATTACH_POINT_HIP = 14,
     * WEAPON_ATTACH_POINT_BOOT = 15,
     * WEAPON_ATTACH_POINT_BACK = 16,
     * WEAPON_ATTACH_POINT_FRONT = 17,
     * WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
     * WEAPON_ATTACH_POINT_LEFTBREAST = 19,
     * WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
     * WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
     * WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
     * WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
     * WEAPON_ATTACH_POINT_SATCHEL = 24,
     * WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
     * WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
     * WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
     * WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
     * MAX_WEAPON_ATTACH_POINTS = 29
     * };
     *
     * Hash: 0xADF692B254977C0C | Since: 1207
     */
    function setCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, equipNow: boolean, attachPoint: number): void;
    /**
     * Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
     *
     * Hash: 0x12FB95FE3D579238 | Since: 1207
     */
    function setCurrentPedWeaponByGuid(ped: number | Ped, weaponUid: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x739B9C6D0E7F7F93 | Since: 1207
     */
    function setInstantlyEquipWeaponPickups(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x14E56BC5B5DB6A19 | Since: 1207
     */
    function setPedAmmo(ped: number | Ped, weaponHash: number | string, ammo: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5FD1E1F011E76D7E | Since: 1207
     */
    function setPedAmmoByType(ped: number | Ped, ammoType: number | string, ammo: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4EFEF9440A5B0EF | Since: 1207
     */
    function setPedAmmoToDrop(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x0725A4CCFDED9A70 | Since: 1207
     */
    function setPedCurrentWeaponVisible(ped: number | Ped, visible: boolean, deselectWeapon: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x208A1888007FC0E6 | Since: 1207
     */
    function setPedDropsInventoryWeapon(ped: number | Ped, weaponHash: number | string, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x476AE72C1D19D1A8 | Since: 1207
     */
    function setPedDropsWeaponsWhenDead(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EDCB0505123623B | Since: 1207
     */
    function setPedInfiniteAmmo(ped: number | Ped, toggle: boolean, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC1F85DA51D3D6C4 | Since: 1232
     */
    function setPlayerPedQuickSwapWeaponByGuid(ped: number | Ped, guidPrimary: any, guidSecondary: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x194D877FC5597B7D | Since: 1207
     */
    function setVehicleWeaponHeading(vehicle: number | Vehicle, seatIndex: number, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C83212A7AA51D3D | Since: 1207
     */
    function shouldWeaponBeDiscardedWhenSwapped(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x000FA7A4A8443AF7 | Since: 1207
     */
    function _0x000FA7A4A8443AF7(): void;
    /**
     * Returns whether the specified ped is holding a weapon with the given hash.
     * only these weapons below return true
     * WEAPON_BOW, WEAPON_KIT_METAL_DETECTOR, WEAPON_MELEE_CLEAVER, WEAPON_MELEE_DAVY_LANTERN, WEAPON_MELEE_HATCHET, WEAPON_MELEE_HATCHET_HUNTER, WEAPON_MELEE_KNIFE_JAWBONE, WEAPON_MELEE_LANTERN WEAPON_MELEE_TORCH, WEAPON_MOONSHINEJUG_MP, WEAPON_RIFLE_BOLTACTION, WEAPON_SHOTGUN_PUMP, WEAPON_THROWN_BOLAS, WEAPON_THROWN_MOLOTOV
     *
     * Hash: 0x07E1C35F0078C3F9 | Since: 1207
     */
    function isPedHoldingWeapon(ped: number | Ped, weapon: number | string): boolean;
    /**
     * _GET_D* - _GET_L*
     *
     * Hash: 0x0DE0944ECCB3DF5D | Since: 1232
     */
    function _0x0DE0944ECCB3DF5D(ped: number | Ped): boolean;
    /**
     * Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
     * _A* or _B*
     *
     * Hash: 0x14FF0C2545527F9B | Since: 1207
     */
    function _0x14FF0C2545527F9B(horse: number | Ped, weaponHash: number | string, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x16D9841A85FA627E | Since: 1207
     */
    function _0x16D9841A85FA627E(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x183CE355115B6E75 | Since: 1207
     */
    function _0x183CE355115B6E75(): void;
    /**
     * No comment provided
     *
     * Hash: 0x23BF601A42F329A0 | Since: 1207
     */
    function _0x23BF601A42F329A0(): any;
    /**
     * _SET_A* - _SET_B*
     *
     * Hash: 0x2EBF70E1D8C06683 | Since: 1207
     */
    function _0x2EBF70E1D8C06683(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3799EFCC3C8CD5E1 | Since: 1207
     */
    function _0x3799EFCC3C8CD5E1(): any;
    /**
     * No comment provided
     *
     * Hash: 0x404514D231DB27A0 | Since: 1207
     */
    function _0x404514D231DB27A0(): void;
    /**
     * No comment provided
     *
     * Hash: 0x431240A58484D5D0 | Since: 1207
     */
    function _0x431240A58484D5D0(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x44C8F4908F1B2622 | Since: 1207
     */
    function _0x44C8F4908F1B2622(ped: number | Ped, ammoHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x457B16951AD77C1B | Since: 1436
     */
    function _0x457B16951AD77C1B(): void;
    /**
     * No comment provided
     *
     * Hash: 0x45E57FDD531C9477 | Since: 1207
     */
    function _0x45E57FDD531C9477(ped: number | Ped, toggle: boolean): void;
    /**
     * returns the amount of peds that were restrained with the weapon thrown bolas
     *
     * Hash: 0x46D42883E873C1D7 | Since: 1232
     */
    function getNumPedsRestrainedFromWeaponBolas(ped: number | Ped): number;
    /**
     * Holster the holded shoulder weapon. Precisions: 0 means with anim while 1 means direct holster
     *
     * Hash: 0x4820A6939D7CEF28 | Since: 1207
     */
    function setPedWeaponOnBack(ped: number | Ped, disableAnim: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4823F13A21F51964 | Since: 1207
     */
    function _0x4823F13A21F51964(): any;
    /**
     * No comment provided
     *
     * Hash: 0x486C96A0DCD2BC92 | Since: 1232
     */
    function _0x486C96A0DCD2BC92(): any;
    /**
     * Returns whether the ped has a repeater p1: 0 or 1
     *
     * Hash: 0x495A04CAEC263AF8 | Since: 1207
     */
    function doesPedHaveRepeater(ped: number | Ped): boolean;
    /**
     * Returns whether the weapon has multiple ammo types or not.
     *
     * Hash: 0x58425FCA3D3A2D15 | Since: 1207
     */
    function getWeaponHasMultipleAmmoTypes(weaponHash: number | string): boolean;
    /**
     * Returns true if ped is on a horse while inside of a town
     * Params: p1 = 0
     * GET_L* - GET_MA*
     *
     * Hash: 0x5A695BD328586B44 | Since: 1207
     */
    function _0x5A695BD328586B44(ped: number | Ped): boolean;
    /**
     * Returns whether the ped has a revolver p1: 0 or 1
     *
     * Hash: 0x5B235F24472F2C3B | Since: 1207
     */
    function doesPedHaveRevolver(ped: number | Ped): boolean;
    /**
     * Only used in R* Script fme_escaped_convicts, p0 = 0
     *
     * Hash: 0x63B83A526329AFBC | Since: 1207
     */
    function _0x63B83A526329AFBC(): void;
    /**
     * No comment provided
     *
     * Hash: 0x641351E9AD103890 | Since: 1207
     */
    function _0x641351E9AD103890(): void;
    /**
     * Returns the attachpoint for a weapon hash. (returns -1 for melee as they can't be attached)
     *
     * Hash: 0x65DC4AC5B96614CB | Since: 1311
     */
    function getDefaultWeaponAttachPoint(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x74C2365FDD1BB48F | Since: 1207
     */
    function _0x74C2365FDD1BB48F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74C8000FDD1BB111 | Since: 1207
     */
    function _0x74C8000FDD1BB111(): any;
    /**
     * No comment provided
     *
     * Hash: 0x74C8000FDD1BB222 | Since: 1207
     */
    function _0x74C8000FDD1BB222(): any;
    /**
     * No comment provided
     *
     * Hash: 0x74C9080FDD1BB48E | Since: 1207
     */
    function _0x74C9080FDD1BB48E(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74C9080FDD1BB48F | Since: 1207
     */
    function _0x74C9080FDD1BB48F(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74C90AAACC1DD48F | Since: 1207
     */
    function _0x74C90AAACC1DD48F(): void;
    /**
     * Returns whether the ped has a sniper p1: 0 or 1
     *
     * Hash: 0x80BB243789008A82 | Since: 1207
     */
    function doesPedHaveSniper(ped: number | Ped): boolean;
    /**
     * Only used in R* SP Scripts native_son2, native_son3 and smuggler2
     * Params: p2 = -1
     *
     * Hash: 0x8A779706DA5CA3DD | Since: 1207
     */
    function _0x8A779706DA5CA3DD(ped: number | Ped): void;
    /**
     * Only used in R* SP Script guama3
     *
     * Hash: 0x9409C62504A8F9E9 | Since: 1207
     */
    function _0x9409C62504A8F9E9(vehicle: number | Vehicle): void;
    /**
     * Returns whether the ped has a rifle p1: 0 or 1
     *
     * Hash: 0x95CA12E2C68043E5 | Since: 1207
     */
    function doesPedHaveRifle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9CCA3131E6B53C68 | Since: 1207
     */
    function _0x9CCA3131E6B53C68(): any;
    /**
     * this native gets the weapon hash from the default ped weapon collection (see GetDefaultPedWeaponCollection for more info) will randomly return one of it's weapons
     *
     * Hash: 0x9EEFD670F10656D7 | Since: 1207
     */
    function getWeaponFromDefaultPedWeaponCollection(weaponCollection: number, weaponGroup: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9F0E1892C7F228A8 | Since: 1207
     */
    function _0x9F0E1892C7F228A8(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA2091482ED42EF85 | Since: 1207
     */
    function _0xA2091482ED42EF85(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA3716A77DCF17424 | Since: 1207
     */
    function _0xA3716A77DCF17424(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA769D753922B031B | Since: 1207
     */
    function _0xA769D753922B031B(): void;
    /**
     * Returns whether the ped has a shotgun p1: 0 or 1
     *
     * Hash: 0xABC18A28BAD4B46F | Since: 1207
     */
    function doesPedHaveShotgun(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAFFD0CCF31F469B8 | Since: 1207
     */
    function _0xAFFD0CCF31F469B8(): any;
    /**
     * No comment provided
     *
     * Hash: 0xB0FB9B196A3D13F0 | Since: 1207
     */
    function _0xB0FB9B196A3D13F0(): void;
    /**
     * Stores longarms to your horse on dismount
     * Params: p2 = 0
     * SET_[I - M]*
     *
     * Hash: 0xB832F1A686B9B810 | Since: 1207
     */
    function setInstantlyStoreLongarmsOnDismount(ped: number | Ped, storeLongarms: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC9444F2FF94A9C0 | Since: 1355
     */
    function _0xBC9444F2FF94A9C0(): any;
    /**
     * Returns whether the ped has a pistol p1: 0 or 1
     *
     * Hash: 0xBFCA7AFABF9D7967 | Since: 1207
     */
    function doesPedHavePistol(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC5899C4CD2E2495D | Since: 1207
     */
    function _0xC5899C4CD2E2495D(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2209866B0CB72EA | Since: 1207
     */
    function _0xD2209866B0CB72EA(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD4C6E24D955FF061 | Since: 1311
     */
    function _0xD4C6E24D955FF061(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD53846B9C931C181 | Since: 1207
     */
    function _0xD53846B9C931C181(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD63B4BA3A02A99E0 | Since: 1207
     */
    function _0xD63B4BA3A02A99E0(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9B3FEC825668291 | Since: 1207
     */
    function _0xE9B3FEC825668291(): void;
    /**
     * _IS_WEAPON_CLOSE_RANGE?
     * returns true when it's lassos , melee, thrown weapons (matchetes and unarmed return false)
     * all guns ,bows and animal weapons return false
     *
     * Hash: 0xEA522F991E120D45 | Since: 1207
     */
    function isWeaponCloseRange(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC97101A8F311282 | Since: 1207
     */
    function _0xEC97101A8F311282(): any;
    /**
     * No comment provided
     *
     * Hash: 0xECBB26529A737EF6 | Since: 1207
     */
    function _0xECBB26529A737EF6(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF08D8FEB455F2C8C | Since: 1207
     */
    function _0xF08D8FEB455F2C8C(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF252A85B8F3F8C58 | Since: 1207
     */
    function _0xF252A85B8F3F8C58(weaponCollection: number | string, dualwieldVariant: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF2F585411E748B9C | Since: 1207
     */
    function _0xF2F585411E748B9C(): any;
    /**
     * Returns weaponHash
     *
     * Hash: 0xF8204EF17410BF43 | Since: 1207
     */
    function _0xF8204EF17410BF43(weaponGroupHash: number | string): number;
    /**
     * addReason:
     * enum eAddItemReason : Hash
     * {
     * ADD_REASON_AWARDS = 0xB784AD1E,
     * ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
     * ADD_REASON_DEBUG = 0x5C05C64D,
     * ADD_REASON_DEFAULT = 0x2CD419DC,
     * ADD_REASON_GET_INVENTORY = 0xD8188685,
     * ADD_REASON_INCENTIVE = 0x8ADC2E95,
     * ADD_REASON_LOADOUT = 0xCA3454E6,
     * ADD_REASON_LOAD_SAVEGAME = 0x56212906,
     * ADD_REASON_LOOTED = 0xCA806A55,
     * ADD_REASON_MELEE = 0x7B9BDCE7,
     * ADD_REASON_MP_MISSION = 0xEC0E0194,
     * ADD_REASON_NOTIFICATION = 0xC56292D2,
     * ADD_REASON_PICKUP = 0x1A770E22,
     * ADD_REASON_PURCHASED = 0x4A6726C9,
     * ADD_REASON_SET_AMOUNT = 0x4504731E,
     * ADD_REASON_SYNCING = 0x8D4B4FF4,
     * ADD_REASON_USE_FAILED = 0xD385B670
     * };
     *
     * Hash: 0xB190BCA3F4042F95 | Since: 1207
     */
    function addAmmoToPed(ped: number | Ped, weaponHash: number | string, amount: number, addReason: number | string): void;
    /**
     * addReason: see _ADD_AMMO_TO_PED
     *
     * Hash: 0x106A811C6D3035F3 | Since: 1207
     */
    function addAmmoToPedByType(ped: number | Ped, ammoType: number | string, amount: number, addReason: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x087D8F4BC65F68E4 | Since: 1207
     */
    function clearPedLastWeaponDamage(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9888652B8BA77F73 | Since: 1207
     */
    function createWeaponObject(weaponHash: number | string, ammoCount: number, pos: Vector3, showWorldModel: boolean, scale: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAA5A52204E077883 | Since: 1207
     */
    function disableAmmoTypeForPed(ped: number | Ped, ammoHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF0D728EEA3C99775 | Since: 1207
     */
    function disableAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B7B7908B7ADFB4B | Since: 1207
     */
    function enableAmmoTypeForPed(ped: number | Ped, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x23FB9FACA28779C1 | Since: 1207
     */
    function enableAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC395355843BE134B | Since: 1207
     */
    function enableWeaponRestore(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x678F00858980F516 | Since: 1207
     */
    function getAmmoInClipByInventoryUid(ped: number | Ped, ammo: number, inventoryUid: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C2EA6C44F515F34 | Since: 1207
     */
    function getAmmoTypeForWeapon(weaponHash: number | string): number;
    /**
     * If near your horse when called, weapons stored on your horse will be considered
     * Returns weaponHash
     *
     * Hash: 0x9F67929D98E7C6E8 | Since: 1207
     */
    function getBestPedWeaponInGroup(ped: number | Ped, weaponGroup: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7B98500614C8E8B8 | Since: 1232
     */
    function getBestPedWeaponInInventory(ped: number | Ped, guidPrimary: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x6554ECCE226F2A2A | Since: 1207
     */
    function getCanTwirlWeapon(weaponHash: number | string): boolean;
    /**
     * _GET_BEST_* - _GET_CLOSEST_*
     *
     * Hash: 0xCD356B42C57BFE01 | Since: 1355
     */
    function getCorrectKitEmoteTwirlGun(ped: number | Ped, weaponGuid: any): boolean;
    /**
     * Returns ammoHash
     *
     * Hash: 0xAF9D167A5656D6A6 | Since: 1207
     */
    function getCurrentAmmoTypeFromGuid(ped: number | Ped, weaponGuid: any): number;
    /**
     * Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
     *
     * Hash: 0x7E7B19A4355FEE13 | Since: 1207
     */
    function getCurrentPedWeaponAmmoType(ped: number | Ped, weaponObject: number | Object): number;
    /**
     * Returns weaponCollection Hash
     * Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
     *
     * Hash: 0xD42514C182121C23 | Since: 1207
     */
    function getDefaultPedWeaponCollection(pedModel: number | string): number;
    /**
     * Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
     * Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
     *
     * Hash: 0x08FF1099ED2E6E21 | Since: 1207
     */
    function getDefaultUnarmedWeaponHash(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x79B1A6E780266DB0 | Since: 1207
     */
    function getMaxLockonDistanceOfCurrentPedWeapon(ped: number | Ped): number;
    /**
     * Returns eCurrentHeldWeapon
     * _GET_R* - _GET_T*
     *
     * Hash: 0x8425C5F057012DAB | Since: 1207
     */
    function getPedCurrentHeldWeapon(ped: number | Ped): number;
    /**
     * Returns emote Hash
     *
     * Hash: 0x2C4FEC3D0EFA9FC0 | Since: 1355
     */
    function getPedGunSpinningEquippedKitEmoteTwirl(ped: number | Ped): number;
    /**
     * Returns iSpinHash / iVariationSpin
     *
     * Hash: 0xF3B1620B920D1708 | Since: 1355
     */
    function getPedGunSpinningHashFromWeaponEmoteVariation(ped: number | Ped, weaponEmoteVariation: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x90EB1CB189923587 | Since: 1207
     */
    function getPedHogtieWeapon(ped: number | Ped): number;
    /**
     * slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
     *
     * Hash: 0xDBC4B552B2AE9A83 | Since: 1207
     */
    function getPedWeaponInSlot(ped: number | Ped, slotHash: number | string): number;
    /**
     * _GET_M* - _GET_PED_A*
     *
     * Hash: 0x6CA484C9A7377E4F | Since: 1207
     */
    function getPedWeaponObject(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xDA37A053C1522F5D | Since: 1207
     */
    function getPedWorstWeapon(ped: number | Ped): number;
    /**
     * Outputs cached guids
     *
     * Hash: 0xB7E52A058B07C7E2 | Since: 1232
     */
    function getPlayerPedQuickSwapWeaponByGuid(ped: number | Ped, guidPrimary: any, guidSecondary: any): void;
    /**
     * Gets the model hash from the weapon hash.
     *
     * Hash: 0xF70825EB340E7D15 | Since: 1207
     */
    function getWeapontypeModel(weaponHash: number | string): number;
    /**
     * Returns hash where WEAPON_ is replaced with SLOT_
     *
     * Hash: 0x46F032B8DDF46CDE | Since: 1207
     */
    function getWeapontypeSlot(weaponHash: number | string): number;
    /**
     * Returns WeaponAttachPoint
     *
     * Hash: 0xCAD4FE9398820D24 | Since: 1207
     */
    function getWeaponAttachPoint(ped: number | Ped, attachPoint: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x59DE03442B6C9598 | Since: 1207
     */
    function getWeaponComponentTypeModel(componentHash: number | string): number;
    /**
     * Related to weapon visual damage, not actual damage.
     *
     * Hash: 0x904103D5D2333977 | Since: 1207
     */
    function getWeaponDamage(weaponObject: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x810E8AE9AFEA7E54 | Since: 1207
     */
    function getWeaponDirt(weaponObject: number | Object): number;
    /**
     * Returns weaponEmoteVariation
     *
     * WEAPON_EMOTE_VARIATION_INVALID = -2,
     * WEAPON_EMOTE_VARIATION_BASE,
     * WEAPON_EMOTE_VARIATION_A,
     * WEAPON_EMOTE_VARIATION_B,
     * WEAPON_EMOTE_VARIATION_C,
     * WEAPON_EMOTE_VARIATION_D,
     * WEAPON_EMOTE_VARIATION_PREVIEW,
     * WEAPON_EMOTE_NUM_VARIATIONS
     *
     * Hash: 0x86147D05FA831D3A | Since: 1355
     */
    function getWeaponEmoteVariation(ped: number | Ped, variation: number): number;
    /**
     * Returns iSpinHash
     *
     * Hash: 0xF4601C1203B1A78D | Since: 1207
     */
    function getWeaponGunSpinningWeaponEmoteTrickTypeHash(emote: number | string, weaponEmoteTrickType: number): number;
    /**
     * Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
     *
     * Hash: 0x89CF5FF3D363311E | Since: 1207
     */
    function getWeaponName(weaponHash: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x6D3AC61694A791C5 | Since: 1207
     */
    function getWeaponName2(weaponHash: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x7A56D66C78D8EF8E | Since: 1207
     */
    function getWeaponNameWithPermanentDegradation(weaponHash: number | string, permanentDegradationLevel: number): string;
    /**
     * Detaches the weapon from the ped and actually removes the ped's weapon
     *
     * Hash: 0xC6A6789BB405D11C | Since: 1207
     */
    function getWeaponObjectFromPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x22084CA699219624 | Since: 1207
     */
    function getWeaponScale(weaponObject: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x4BF66F8878F67663 | Since: 1207
     */
    function getWeaponSoot(weaponObject: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x8EC44AE8DECFF841 | Since: 1207
     */
    function getWeaponStatId(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7AA043F6C41D151E | Since: 1207
     */
    function getWeaponTypeFromAmmoType(ammoType: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x865F36299079FB75 | Since: 1207
     */
    function getWeaponUnlock(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x899A04AFCC725D04 | Since: 1207
     */
    function giveWeaponCollectionToPed(ped: number | Ped, weaponCollection: number | string): void;
    /**
     * entity can be a ped or weapon object.
     *
     * Hash: 0x74C9090FDD1BB48E | Since: 1207
     */
    function giveWeaponComponentToEntity(entity: number | Entity, componentHash: number | string, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A47699E8D533E8F | Since: 1207
     */
    function giveWeaponComponentToWeaponObject(weaponObject: number | Object, ped: number | Ped, componentHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCF06D0CDFF68424 | Since: 1207
     */
    function hasEntityBeenDamagedByWeapon(entity: number | Entity, weaponName: number | string, weaponType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9E2D5D6BC97A5F1E | Since: 1207
     */
    function hasEntityBeenDamagedByWeaponRecently(entity: number | Entity, weaponHash: number | string, ms: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBBC67A6F965C688A | Since: 1207
     */
    function hasPedGotWeaponComponent(ped: number | Ped, componentHash: number | string, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF07CF465F48B830 | Since: 1207
     */
    function hasWeaponAssetLoaded(weaponHash: number | string): boolean;
    /**
     * Unequip current weapon and set current weapon to WEAPON_UNARMED.
     * p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
     * immediately: if true it will instantly switch to unarmed
     *
     * Hash: 0xFCCC886EDE3C63EC | Since: 1207
     */
    function hidePedWeapons(ped: number | Ped, immediately: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x94A3C1B804D291EC | Since: 1207
     */
    function holsterPedWeapons(ped: number | Ped, immediately: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2866CBA797E872E | Since: 1232
     */
    function isAmmoSilent(ammoHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7EFACC589B98C488 | Since: 1207
     */
    function isAmmoSilent2(ammoHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC570B881754DF609 | Since: 1207
     */
    function isAmmoTypeValidForWeapon(weaponHash: number | string, ammoHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F7977C9101F807F | Since: 1207
     */
    function isAmmoValid(ammoHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBDD9C235D8D1052E | Since: 1207
     */
    function isPedCurrentWeaponHolstered(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D50F43298AB9545 | Since: 1232
     */
    function isTargetPedConstrainedByPedUsingBolas(ped: number | Ped, targetPed: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC853230E76A152DF | Since: 1207
     */
    function isWeaponBinoculars(weaponHash: number | string): boolean;
    /**
     * Returns true if the ped is currently holstering or unholstering a weapon
     *
     * Hash: 0x2387D6E9C6B478AA | Since: 1207
     */
    function isWeaponHolsterStateChanging(ped: number | Ped): boolean;
    /**
     * Returns true when the weapon passed is either a lasso, the camera or the binoculars
     * _IS_WEAPON_M* - _IS_WEAPON_P*
     *
     * Hash: 0x6ABAD7B0A854F8FB | Since: 1207
     */
    function isWeaponKit(weaponHash: number | string): boolean;
    /**
     * Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
     * _IS_WEAPON_M* - _IS_WEAPON_P*
     *
     * Hash: 0x49E40483948AF062 | Since: 1207
     */
    function isWeaponKit2(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x792E3EF76C911959 | Since: 1207
     */
    function isWeaponKnife(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x79407D33328286C6 | Since: 1207
     */
    function isWeaponLantern(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E4E1A82081EABED | Since: 1207
     */
    function isWeaponLasso(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD955FEE4B87AFA07 | Since: 1207
     */
    function isWeaponOneHanded(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5809DBCA0A37C82B | Since: 1207
     */
    function isWeaponSilent(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6AD66548840472E5 | Since: 1207
     */
    function isWeaponSniper(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30E7C16B12DA8211 | Since: 1207
     */
    function isWeaponThrowable(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x506F1DE1BFC75304 | Since: 1207
     */
    function isWeaponTorch(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0556E9D2ECF39D01 | Since: 1207
     */
    function isWeaponTwoHanded(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA5D3F2C6DD5B5D4 | Since: 1207
     */
    function listenProjectileHitEvents(listen: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x79E1E511FF7EFB13 | Since: 1207
     */
    function makePedReload(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0xDF4A3404D022ADDE | Since: 1207
     */
    function refillAmmoInClip(ped: number | Ped, clipInventoryUid: any): any;
    /**
     * No comment provided
     *
     * Hash: 0x0A2AB7B7ABC055F4 | Since: 1207
     */
    function refillAmmoInCurrentPedWeapon(ped: number | Ped): any;
    /**
     * No comment provided
     *
     * Hash: 0x1B83C0DEEBCBB214 | Since: 1207
     */
    function removeAllPedAmmo(ped: number | Ped): void;
    /**
     * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
     *
     * removeReason: see REMOVE_WEAPON_FROM_PED
     *
     * Hash: 0xF4823C813CB8277D | Since: 1207
     */
    function removeAmmoFromPed(ped: number | Ped, weaponHash: number | string, amount: number, removeReason: number | string): void;
    /**
     * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
     *
     * removeReason: see REMOVE_WEAPON_FROM_PED
     *
     * Hash: 0xB6CFEC32E3742779 | Since: 1207
     */
    function removeAmmoFromPedByType(ped: number | Ped, ammoHash: number | string, amount: number, removeReason: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3896D03E2852236 | Since: 1207
     */
    function removeWeaponAsset(weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x19F70C4D80494FF8 | Since: 1207
     */
    function removeWeaponComponentFromPed(ped: number | Ped, componentHash: number | string, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x51C3B71591811485 | Since: 1311
     */
    function removeWeaponFromPedByGuid(ped: number | Ped, weaponGuid: any, removeReason: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x72D4CB5DB927009C | Since: 1207
     */
    function requestWeaponAsset(weaponHash: number | string): void;
    /**
     * Appears to just send specified weapon to your horse holster without having to be close
     * However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
     *
     * Hash: 0xE9BD19F8121ADE3E | Since: 1207
     */
    function sendWeaponToInventory(ped: number | Ped, weaponHash: number | string): void;
    /**
     * emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
     *
     * Hash: 0xCBCFFF805F1B4596 | Since: 1311
     */
    function setActiveGunSpinningEquipKitEmoteTwirl(ped: number | Ped, emote: number | string): void;
    /**
     * spinHash can be -1, 0 to disable
     *
     * Hash: 0x01F661BB9C71B465 | Since: 1207
     */
    function setActiveGunSpinningKitEmoteTwirl(ped: number | Ped, weaponEmoteTrickType: number, spin: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x83B8D50EB9446BBA | Since: 1207
     */
    function setAllowDualWield(ped: number | Ped, allow: boolean): void;
    /**
     * turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
     *
     * Hash: 0xBDDA0C290C228159 | Since: 1207
     */
    function setAmmoInTurret(vehicle: number | Vehicle, turretHash: number | string, ammo: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC9C4393523833E2 | Since: 1207
     */
    function setAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBE46B501BC3FBCF | Since: 1207
     */
    function setAmmoTypeForPedWeaponInventory(ped: number | Ped, weaponInventoryUid: any, ammoHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE711B14A159E84F | Since: 1207
     */
    function setForceAutoEquip(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5230D3F6EE56CFE6 | Since: 1207
     */
    function setForceCurrentWeaponIntoCockedState(ped: number | Ped, attachPoint: number): void;
    /**
     * _STOP_* - _TEST_*
     *
     * Hash: 0x408CF580C5E96D49 | Since: 1355
     */
    function setGunSpinningInventorySlotIdActivate(ped: number | Ped, emoteType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F806A6CFED89468 | Since: 1207
     */
    function setPedAllWeaponsVisibility(ped: number | Ped, visible: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFBAA1E06B6BCA741 | Since: 1207
     */
    function setPedInfiniteAmmoClip(ped: number | Ped, toggle: boolean): void;
    /**
     * attachPoint: see SET_CURRENT_PED_WEAPON
     *
     * Hash: 0x67E21ACC5C0C970C | Since: 1207
     */
    function setPedWeaponAttachPointVisibility(ped: number | Ped, attachPoint: number, visible: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x56CB3B4305A4F7CE | Since: 1207
     */
    function setVehicleWeaponHeadingLimits(vehicle: number | Vehicle, minHeading: number, maxHeading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF5987E1CDE63501 | Since: 1207
     */
    function setVehicleWeaponHeadingLimits2(vehicle: number | Vehicle, minHeading: number, maxHeading: number): any;
    /**
     * Related to weapon visual damage, not actual damage.
     *
     * Hash: 0xE22060121602493B | Since: 1207
     */
    function setWeaponDamage(weaponObject: number | Object, level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7A57E89E965D839 | Since: 1207
     */
    function setWeaponDegradation(weaponObject: number | Object, level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x812CE61DEBCAB948 | Since: 1207
     */
    function setWeaponDirt(weaponObject: number | Object, level: number): void;
    /**
     * every other level will have the max value of (brokeLevel - threshold)
     *
     * Hash: 0xD4071EFC83794B2F | Since: 1207
     */
    function setWeaponLevelThreshold(weaponObject: number | Object, threshold: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3544AD0522E69B4 | Since: 1207
     */
    function setWeaponScale(weaponObject: number | Object, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9EF4AD10BDDDB57 | Since: 1207
     */
    function setWeaponSoot(weaponObject: number | Object, level: number): void;
}
export declare namespace zone {
    /**
     * Returns name hash, see common:/data/levels/rdr3/mapzones.meta
     *
     * type (-1 matches any type):
     * class CMapZone
     * {
     * public:
     * enum class Type
     * {
     * STATE,
     * TOWN,
     * LAKE,
     * RIVER,
     * OIL_SPILL,
     * SWAMP,
     * OCEAN,
     * CREEK,
     * POND,
     * GLACIER,
     * DISTRICT,
     * TEXT_PRINTED,
     * TEXT_WRITTEN
     * };
     * };
     *
     * https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
     *
     * Hash: 0x43AD8FC02B429D33 | Since: 1207
     */
    function getMapZoneAtCoords(pos: Vector3, type: number): number;
    /**
     * Returns the zone's name hash if its type matches one of the following:
     * - LAKE
     * - RIVER
     * - OIL_SPILL
     * - SWAMP
     * - OCEAN
     * - CREEK
     * - POND
     * - GLACIER
     *
     * Hash: 0x5BA7A68A346A5A91 | Since: 1207
     */
    function getWaterMapZoneAtCoords(pos: Vector3): number;
}
export declare namespace _namespace4 {
    /**
     * nullsub, doesn't do anything
     * however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
     * badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
     *
     * Hash: 0xC31C44C43B48FDE3 | Since: 1207
     */
    function reportPlayerBadSportBehavior(gamerHandle: any, badSportBehaviorType: number): void;
}
/**
 * No comment provided
 *
 * Hash: 0x4972A022AE6DAFA1 | Since: 1207
 *
 * @deprecated Use aicoverpoint.taskEnterCover() instead
 */
export declare function taskEnterCover(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2BC4A6D92D140112 | Since: 1207
 *
 * @deprecated Use aicoverpoint.taskExitCover() instead
 */
export declare function taskExitCover(ped: number | Ped): void;
/**
 * weaponHash can also be -1
 *
 * Hash: 0x140B3CB1D424A945 | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x140B3CB1D424A945() instead
 */
export declare function _0x140B3CB1D424A945(ped: number | Ped, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3C7A9C2C953128FE | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x3C7A9C2C953128FE() instead
 */
export declare function _0x3C7A9C2C953128FE(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x53E4D0C079CA6855 | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x53E4D0C079CA6855() instead
 */
export declare function _0x53E4D0C079CA6855(handle: number): number;
/**
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 *
 * Hash: 0x64340DC208D671D5 | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x64340DC208D671D5() instead
 */
export declare function _0x64340DC208D671D5(coverLayer: string): void;
/**
 * coverLayer: see levels_0/levels/rdr3/coverlayers
 *
 * Hash: 0x7A1FDCF35EAA140F | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x7A1FDCF35EAA140F() instead
 */
export declare function _0x7A1FDCF35EAA140F(coverLayer: string): void;
/**
 * No comment provided
 *
 * Hash: 0x957D7E750216D74B | Since: 1207
 *
 * @deprecated Use aicoverpoint._0x957D7E750216D74B() instead
 */
export declare function _0x957D7E750216D74B(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xEBA51A294C73292E | Since: 1207
 *
 * @deprecated Use aicoverpoint._0xEBA51A294C73292E() instead
 */
export declare function _0xEBA51A294C73292E(args: any): void;
/**
 * No comment provided
 *
 * Hash: 0x975BD6351648935F | Since: 1207
 *
 * @deprecated Use aicoverpoint.addScriptedCoverPoint() instead
 */
export declare function addScriptedCoverPoint(data: any): number;
/**
 * No comment provided
 *
 * Hash: 0x8CBE916CFC64AD5C | Since: 1207
 *
 * @deprecated Use aicoverpoint.areLoadCoverAnimsLoaded() instead
 */
export declare function areLoadCoverAnimsLoaded(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC276FE69DDA22BAD | Since: 1207
 *
 * @deprecated Use aicoverpoint.doesCoverPointExist() instead
 */
export declare function doesCoverPointExist(handle: number): boolean;
/**
 * 1 = In cover while crouched
 * 2 = In cover while standing
 * 3 = Not in cover
 *
 * Hash: 0x5F5B1B7E8E8F94C6 | Since: 1207
 *
 * @deprecated Use aicoverpoint.getCoverPointStateFromPed() instead
 */
export declare function getCoverPointStateFromPed(ped: number | Ped): number;
/**
 * Makes ped flinch (if in cover) like they have been shot at
 *
 * Hash: 0x2A31D13C5F021D0D | Since: 1207
 *
 * @deprecated Use aicoverpoint.requestFlinchCoverAnim() instead
 */
export declare function requestFlinchCoverAnim(ped: number | Ped): void;
/**
 * Stops running cover anims and releases them
 * _STOP_RENDERING_* - _STOP_SCRIPTED*
 *
 * Hash: 0x1A7A802B2301EDC0 | Since: 1207
 *
 * @deprecated Use aicoverpoint.stopRunningCoverAnims() instead
 */
export declare function stopRunningCoverAnims(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x89783FDDF079C88D | Since: 1207
 *
 * @deprecated Use aicoverpoint.taskAiSeekCoverToCoverPoint() instead
 */
export declare function taskAiSeekCoverToCoverPoint(args: any): void;
/**
 * flagId: see SET_TRANSPORT_CONFIG_FLAG
 *
 * Hash: 0xF382C92CCC1CCDBC | Since: 1207
 *
 * @deprecated Use aitransport.getTransportConfigFlag() instead
 */
export declare function getTransportConfigFlag(transportEntity: number | Entity, flagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x619E63980BFC0096 | Since: 1207
 *
 * @deprecated Use aitransport.isPedEnteringTransport() instead
 */
export declare function isPedEnteringTransport(ped: number | Ped, transportEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x660639BC60157048 | Since: 1207
 *
 * @deprecated Use aitransport.isPedExitingTransport() instead
 */
export declare function isPedExitingTransport(ped: number | Ped, transportEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8886D83A430537FD | Since: 1207
 *
 * @deprecated Use aitransport.setPedOffTransportSeat() instead
 */
export declare function setPedOffTransportSeat(ped: number | Ped, flags: number): void;
/**
 * seat: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0xE588B5A8A005CB5E | Since: 1207
 *
 * @deprecated Use aitransport.setPedOnTransportSeat() instead
 */
export declare function setPedOnTransportSeat(ped: number | Ped, transportEntity: number | Entity, seat: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDD0660C997DE94FD | Since: 1207
 *
 * @deprecated Use aitransport.setTransportAccessibleSeatFlags() instead
 */
export declare function setTransportAccessibleSeatFlags(transportEntity: number | Entity, flags: number): void;
/**
 * flagId:
 * enum eTransportConfigFlags
 * {
 * TCF_NotConsideredForEntryByLocalPlayer,
 * TCF_0xB78D6624,
 * TCF_0xA9700425,
 * TCF_0x8D7E4641,
 * TCF_0xF24BAA1F,
 * TCF_0x63B77935,
 * TCF_NotConsideredForEntryByAllPlayers,
 * TCF_0xD17A2AFD,
 * TCF_0xD4E4FDD5,
 * TCF_0x8227C929,
 * TCF_0x812C1070,
 * TCF_0x0E1AB26F,
 * TCF_0xBF4EC863,
 * TCF_0x75660C36,
 * TCF_0xA2539E20,
 * TCF_0x9162C633,
 * TCF_DisableHonorModifiers,
 * TCF_0xF9E71CB6,
 * TCF_0x933ECD3F,
 * TCF_0x18513A34
 * };
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
 *
 * Hash: 0xBA8818212633500A | Since: 1207
 *
 * @deprecated Use aitransport.setTransportConfigFlag() instead
 */
export declare function setTransportConfigFlag(transportEntity: number | Entity, flagId: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAEE3ADD08829CB6F | Since: 1207
 *
 * @deprecated Use aitransport.taskEnterTransport() instead
 */
export declare function taskEnterTransport(args: any): void;
/**
 * No comment provided
 *
 * Hash: 0xC273A5B8488F7838 | Since: 1207
 *
 * @deprecated Use aitransport.taskExitTransport() instead
 */
export declare function taskExitTransport(args: any): void;
/**
 * _SET_TRANSPORT_*
 *
 * Hash: 0x4248AB2EEB3C75AD | Since: 1207
 *
 * @deprecated Use aitransport._0x4248AB2EEB3C75AD() instead
 */
export declare function _0x4248AB2EEB3C75AD(transportEntity: number | Entity, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4B6C9A43F7D9109B | Since: 1207
 *
 * @deprecated Use aitransport._0x4B6C9A43F7D9109B() instead
 */
export declare function _0x4B6C9A43F7D9109B(): void;
/**
 * _CLEAR_A*
 *
 * Hash: 0x5639FBEA922788DA | Since: 1207
 *
 * @deprecated Use aitransport._0x5639FBEA922788DA() instead
 */
export declare function _0x5639FBEA922788DA(transportEntity: number | Entity): void;
/**
 * _SET_TRANSPORT_*
 *
 * Hash: 0x8C8371EDFAF014A0 | Since: 1207
 *
 * @deprecated Use aitransport._0x8C8371EDFAF014A0() instead
 */
export declare function _0x8C8371EDFAF014A0(ped: number | Ped): void;
/**
 * _SET_TRANSPORT_*
 *
 * Hash: 0xF8C20282B237E3F7 | Since: 1207
 *
 * @deprecated Use aitransport._0xF8C20282B237E3F7() instead
 */
export declare function _0xF8C20282B237E3F7(ped: number | Ped): void;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0xFFEC4B0A1A3ED515 | Since: 1207
 *
 * @deprecated Use aitransport.getPedInTransportSeat() instead
 */
export declare function getPedInTransportSeat(transportEntity: number | Entity, seatIndex: number): number;
/**
 * See _SET_TRANSPORT_USAGE_FLAGS
 *
 * Hash: 0xE195C5A82156321D | Since: 1207
 *
 * @deprecated Use aitransport.getTransportUsageFlags() instead
 */
export declare function getTransportUsageFlags(transportEntity: number | Entity, flags: number): any;
/**
 * Checks if ped is placed on target transportEntity
 *
 * Hash: 0x159EF5B6EDCE00E8 | Since: 1207
 *
 * @deprecated Use aitransport.isPedOnTransportEntity() instead
 */
export declare function isPedOnTransportEntity(ped: number | Ped, transportEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC44F405A6B98D03 | Since: 1207
 *
 * @deprecated Use aitransport.isPedOnTransportSeat() instead
 */
export declare function isPedOnTransportSeat(ped: number | Ped): boolean;
/**
 * Called together with IS_VEHICLE_SEAT_FREE
 *
 * Hash: 0x43FF27FC1829C202 | Since: 1207
 *
 * @deprecated Use aitransport.isTransportSeatFree() instead
 */
export declare function isTransportSeatFree(transportEntity: number | Entity, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E2E06023D07631E | Since: 1207
 *
 * @deprecated Use aitransport.isTransportSeatOccupied() instead
 */
export declare function isTransportSeatOccupied(transportEntity: number | Entity, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67F7CEAC2391E114 | Since: 1207
 *
 * @deprecated Use aitransport.setAiCanUseTransport() instead
 */
export declare function setAiCanUseTransport(transportEntity: number | Entity, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB7079F4C72896756 | Since: 1207
 *
 * @deprecated Use aitransport.setPedUseTransportSeatPreference() instead
 */
export declare function setPedUseTransportSeatPreference(ped: number | Ped, transportEntity: number | Entity, preferenceSlot: number, seatIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x13F138225C202F66 | Since: 1207
 *
 * @deprecated Use aitransport.setTransportPrioritySeat() instead
 */
export declare function setTransportPrioritySeat(transportEntity: number | Entity, seatIndex: number): void;
/**
 * enum eTransportUsageFlags
 * {
 * TUF_INVALID = 0,
 * TUF_ALLOW_DRIVER_ME = (1 << 0),
 * TUF_ALLOW_DRIVER_GANG = (1 << 1),
 * TUF_ALLOW_DRIVER_CREW = (1 << 2),
 * TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
 * TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
 * TUF_ALLOW_PASSENGER_ME = (1 << 5),
 * TUF_ALLOW_PASSENGER_GANG = (1 << 6),
 * TUF_ALLOW_PASSENGER_CREW = (1 << 7),
 * TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
 * TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
 * TUF_ALLOW_ACCESS_AI = (1 << 10)
 * };
 *
 * Hash: 0xE2487779957FE897 | Since: 1207
 *
 * @deprecated Use aitransport.setTransportUsageFlags() instead
 */
export declare function setTransportUsageFlags(transportEntity: number | Entity, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x718CF1328D20C2B3 | Since: 1207
 *
 * @deprecated Use animscene.abortAnimScene() instead
 */
export declare function abortAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0xDC418495DBA327A1 | Since: 1207
 *
 * @deprecated Use animscene.attachAnimSceneToEntity() instead
 */
export declare function attachAnimSceneToEntity(animScene: any, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x1C0B105C3F30B88D | Since: 1207
 *
 * @deprecated Use animscene.attachAnimSceneToEntityPreservingLocation() instead
 */
export declare function attachAnimSceneToEntityPreservingLocation(animScene: any, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x1B70811D3BF75DB9 | Since: 1207
 *
 * @deprecated Use animscene.blockAnimSceneFadingNextFrame() instead
 */
export declare function blockAnimSceneFadingNextFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x661B8683611B9B97 | Since: 1207
 *
 * @deprecated Use animscene.checkOwnershipOfAnimScene() instead
 */
export declare function checkOwnershipOfAnimScene(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x73616E64696C616E | Since: 1207
 *
 * @deprecated Use animscene.couldAnimSceneEntityReachExitNextFrame() instead
 */
export declare function couldAnimSceneEntityReachExitNextFrame(animScene: any, entityName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6843A1AA3A336DFF | Since: 1207
 *
 * @deprecated Use animscene.detachAnimScene() instead
 */
export declare function detachAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0xA2507C4948C83D2E | Since: 1207
 *
 * @deprecated Use animscene.detachAnimScenePreservingLocation() instead
 */
export declare function detachAnimScenePreservingLocation(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x25557E324489393C | Since: 1207
 *
 * @deprecated Use animscene.doesAnimSceneExist() instead
 */
export declare function doesAnimSceneExist(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA41351EA2A18A0AD | Since: 1207
 *
 * @deprecated Use animscene.fadeAnimSceneAudioIn() instead
 */
export declare function fadeAnimSceneAudioIn(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x323E3AD772BA5D57 | Since: 1207
 *
 * @deprecated Use animscene.fadeAnimSceneAudioOut() instead
 */
export declare function fadeAnimSceneAudioOut(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x07A6F6447ECA9B64 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneBool() instead
 */
export declare function getAnimSceneBool(animScene: any, name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4822A65D5AF64E69 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneCurrentActiveCameraCount() instead
 */
export declare function getAnimSceneCurrentActiveCameraCount(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0x8398438D8F14F56D | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneEntityLocationData() instead
 */
export declare function getAnimSceneEntityLocationData(animScene: any, entityName: string, matrix: Vector3, playbackListName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCC24CB07F60B496E | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneFloat() instead
 */
export declare function getAnimSceneFloat(animScene: any, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x2B7277484CC095FD | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneInt() instead
 */
export declare function getAnimSceneInt(animScene: any, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xADF1D53F3B1FE0A7 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneOrigin() instead
 */
export declare function getAnimSceneOrigin(animScene: any, position: Vector3, rotation: Vector3, order: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3FBC3F51BF12DFBF | Since: 1207
 *
 * @deprecated Use animscene.getAnimScenePhase() instead
 */
export declare function getAnimScenePhase(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0xF94692EB9DC15D74 | Since: 1207
 *
 * @deprecated Use animscene.hasAnimSceneExited() instead
 */
export declare function hasAnimSceneExited(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB89FCFF19DAFFF28 | Since: 1207
 *
 * @deprecated Use animscene.hasEntityExitedAnimScene() instead
 */
export declare function hasEntityExitedAnimScene(animScene: any, entityName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCDC5512A407CF08D | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneExitingThisFrame() instead
 */
export declare function isAnimSceneExitingThisFrame(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD8254CB2C586412B | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneFinished() instead
 */
export declare function isAnimSceneFinished(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D81E7824B7753F7 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneInSection() instead
 */
export declare function isAnimSceneInSection(animScene: any, sectionName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x477122B8D05E7968 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneLoaded() instead
 */
export declare function isAnimSceneLoaded(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95531A4A20CCE7BC | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneMetadataLoaded() instead
 */
export declare function isAnimSceneMetadataLoaded(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCBFC7725DE6CE2E0 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneRunning() instead
 */
export declare function isAnimSceneRunning(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x005E6F28DD7ED58D | Since: 1207
 *
 * @deprecated Use animscene.isEntityExitingAnimSceneThisFrame() instead
 */
export declare function isEntityExitingAnimSceneThisFrame(animScene: any, entityName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3AB6C7B0BB0DF4B1 | Since: 1207
 *
 * @deprecated Use animscene.isEntityPlayingAnimScene() instead
 */
export declare function isEntityPlayingAnimScene(entity: number | Entity, animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF068580194D9DC7 | Since: 1207
 *
 * @deprecated Use animscene.loadAnimScene() instead
 */
export declare function loadAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x2BF96692C67F3E53 | Since: 1207
 *
 * @deprecated Use animscene.removeAnimSceneEntity() instead
 */
export declare function removeAnimSceneEntity(animScene: any, entityName: string, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xDF7B5144E25CD3FE | Since: 1207
 *
 * @deprecated Use animscene.requestAnimScenePlayList() instead
 */
export declare function requestAnimScenePlayList(animScene: any, playlistName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8FDF221F13537936 | Since: 1207
 *
 * @deprecated Use animscene.resetAnimScene() instead
 */
export declare function resetAnimScene(animScene: any, playbackListName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8E1BA705F63C1925 | Since: 1207
 *
 * @deprecated Use animscene.resumeAnimSceneFromLastCheckpoint() instead
 */
export declare function resumeAnimSceneFromLastCheckpoint(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x519E96C2C68B404B | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneBool() instead
 */
export declare function setAnimSceneBool(animScene: any, name: string, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8B720AD451CA2AB3 | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneEntity() instead
 */
export declare function setAnimSceneEntity(animScene: any, entityName: string, entity: number | Entity, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6BC5104E68CBEFE8 | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneFloat() instead
 */
export declare function setAnimSceneFloat(animScene: any, name: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3A379D2166CF5B92 | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneInt() instead
 */
export declare function setAnimSceneInt(animScene: any, name: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x020894BF17A02EF2 | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneOrigin() instead
 */
export declare function setAnimSceneOrigin(animScene: any, pos: Vector3, rot: Vector3, order: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD6824B7D24DC0CE0 | Since: 1207
 *
 * @deprecated Use animscene.setAnimScenePaused() instead
 */
export declare function setAnimScenePaused(animScene: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAB5E7CAB074D6B84 | Since: 1207
 *
 * @deprecated Use animscene.setAnimScenePlaybackList() instead
 */
export declare function setAnimScenePlaybackList(animScene: any, playbackListName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x15598CFB25F3DC7E | Since: 1207
 *
 * @deprecated Use animscene.setAnimScenePlayList() instead
 */
export declare function setAnimScenePlayList(animScene: any, playlistName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x75820B801CFF262A | Since: 1207
 *
 * @deprecated Use animscene.setAnimSceneRate() instead
 */
export declare function setAnimSceneRate(animScene: any, rate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF4D94AF761768700 | Since: 1207
 *
 * @deprecated Use animscene.startAnimScene() instead
 */
export declare function startAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0xF7A4C571E572D237 | Since: 1207
 *
 * @deprecated Use animscene.takeOwnershipOfAnimScene() instead
 */
export declare function takeOwnershipOfAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x4B85B3CF9197AEDF | Since: 1207
 *
 * @deprecated Use animscene.triggerAnimSceneSkip() instead
 */
export declare function triggerAnimSceneSkip(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0xEF324E9550A394D5 | Since: 1207
 *
 * @deprecated Use animscene.wasAnimSceneSkipped() instead
 */
export declare function wasAnimSceneSkipped(animScene: any): boolean;
/**
 * Used in SP R* Scripts only
 * Params: p1 = 2B-LowHonor, 2A-HighHonor
 *
 * Hash: 0x1407F5115FB9583E | Since: 1207
 *
 * @deprecated Use animscene._0x1407F5115FB9583E() instead
 */
export declare function _0x1407F5115FB9583E(animScene: any): boolean;
/**
 * Used in braithwaites2 SP R* Scripts only
 * _A*
 *
 * Hash: 0x1AD896BF43619551 | Since: 1207
 *
 * @deprecated Use animscene._0x1AD896BF43619551() instead
 */
export declare function _0x1AD896BF43619551(): void;
/**
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_P*
 *
 * Hash: 0x1C5D33A4293E6DDE | Since: 1207
 *
 * @deprecated Use animscene._0x1C5D33A4293E6DDE() instead
 */
export declare function _0x1C5D33A4293E6DDE(animScene: any, phaseName: string): boolean;
/**
 * Used in SP R* Scripts only
 * _IS_PED_* - _IS_SC*
 *
 * Hash: 0x2DB524750DC41ED4 | Since: 1207
 *
 * @deprecated Use animscene._0x2DB524750DC41ED4() instead
 */
export declare function _0x2DB524750DC41ED4(): boolean;
/**
 * p2: MINIGAME_GET_SECONDARY_VOICE_STRING
 * _SET_*
 *
 * Hash: 0x3641FCD53E59B335 | Since: 1207
 *
 * @deprecated Use animscene._0x3641FCD53E59B335() instead
 */
export declare function _0x3641FCD53E59B335(mgmHandle: number, ped: number | Ped, secondaryVoiceString: string): void;
/**
 * Used in SP R* Scripts only
 * _IS_*
 *
 * Hash: 0x3B393716C3FD8237 | Since: 1207
 *
 * @deprecated Use animscene._0x3B393716C3FD8237() instead
 */
export declare function _0x3B393716C3FD8237(ped: number | Ped): boolean;
/**
 * Used in Script Function CUTSCENE_MANAGE_SKIP
 * _CHECK_* (?)
 *
 * Hash: 0x4B85B3CF91972222 | Since: 1207
 *
 * @deprecated Use animscene._0x4B85B3CF91972222() instead
 */
export declare function _0x4B85B3CF91972222(animScene: any): boolean;
/**
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
 *
 * Hash: 0x5D7BFDA2290B4E39 | Since: 1207
 *
 * @deprecated Use animscene._0x5D7BFDA2290B4E39() instead
 */
export declare function _0x5D7BFDA2290B4E39(): boolean;
/**
 * Only used in tg_p R* Script
 * Returns true when mgm event success
 * _PREPARE_* - _REGISTER_*
 *
 * Hash: 0x61B2AAEF645DDAF0 | Since: 1207
 *
 * @deprecated Use animscene._0x61B2AAEF645DDAF0() instead
 */
export declare function _0x61B2AAEF645DDAF0(mgmEventHandle: number, seatId: number): boolean;
/**
 * Used in SP R* Scripts only
 * _CO* - _CR*
 *
 * Hash: 0x73616E64696C132E | Since: 1207
 *
 * @deprecated Use animscene._0x73616E64696C132E() instead
 */
export declare function _0x73616E64696C132E(animScene: any): boolean;
/**
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 *
 * Hash: 0x9AAE3C1148A09BCA | Since: 1207
 *
 * @deprecated Use animscene._0x9AAE3C1148A09BCA() instead
 */
export declare function _0x9AAE3C1148A09BCA(animScene: any): boolean;
/**
 * Used in SP R* Scripts only
 * _WAS_ANIM_SCENE_*
 *
 * Hash: 0xA96619FE85159ED2 | Since: 1207
 *
 * @deprecated Use animscene._0xA96619FE85159ED2() instead
 */
export declare function _0xA96619FE85159ED2(animScene: any): boolean;
/**
 * _UNLOAD_* - _WAS_ANIM_SCENE_*
 *
 * Hash: 0xAE6DE22DE0ED4554 | Since: 1207
 *
 * @deprecated Use animscene._0xAE6DE22DE0ED4554() instead
 */
export declare function _0xAE6DE22DE0ED4554(mgmHandle: number, ped: number | Ped): void;
/**
 * _PREPARE_* - _REGISTER_*
 *
 * Hash: 0xB1A196BAFE650402 | Since: 1207
 *
 * @deprecated Use animscene._0xB1A196BAFE650402() instead
 */
export declare function _0xB1A196BAFE650402(mgmHandle: number, ped: number | Ped): void;
/**
 * Used in SP R* Scripts only
 * _RESUME_* - _SET_A*
 *
 * Hash: 0xC1193521E3B9FADD | Since: 1207
 *
 * @deprecated Use animscene._0xC1193521E3B9FADD() instead
 */
export declare function _0xC1193521E3B9FADD(entity: number | Entity): void;
/**
 * Used in SP R* Scripts only
 * _SET_P*
 *
 * Hash: 0xCDCD7B2D49AEE73A | Since: 1207
 *
 * @deprecated Use animscene._0xCDCD7B2D49AEE73A() instead
 */
export declare function _0xCDCD7B2D49AEE73A(): void;
/**
 * Used in SP R* Scripts only
 * _IS_ANIM_SCENE_*
 *
 * Hash: 0xD70C7A30412F8FA0 | Since: 1207
 *
 * @deprecated Use animscene._0xD70C7A30412F8FA0() instead
 */
export declare function _0xD70C7A30412F8FA0(animScene: any): boolean;
/**
 * Used in SP R* Scripts only
 * _SET_B* - _SET_C*
 *
 * Hash: 0xE12D7B4B959644CD | Since: 1207
 *
 * @deprecated Use animscene._0xE12D7B4B959644CD() instead
 */
export declare function _0xE12D7B4B959644CD(): void;
/**
 * Used in SP R* Scripts only
 * _PAUSE_* - _PLAY_*
 *
 * Hash: 0xEA41D44A8D42057B | Since: 1207
 *
 * @deprecated Use animscene._0xEA41D44A8D42057B() instead
 */
export declare function _0xEA41D44A8D42057B(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8A8208AE92BF87A5 | Since: 1207
 *
 * @deprecated Use animscene.clearAnimSceneWasSkipped() instead
 */
export declare function clearAnimSceneWasSkipped(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0xBC781D24AA11F179 | Since: 1207
 *
 * @deprecated Use animscene.clearBreakoutArchetype() instead
 */
export declare function clearBreakoutArchetype(ped: number | Ped): void;
/**
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
 *
 * Hash: 0x1FCA98E33C1437B3 | Since: 1207
 *
 * @deprecated Use animscene.createAnimScene() instead
 */
export declare function createAnimScene(animDict: string, flags: number, playbackListName: string): any;
/**
 * Returns mgmHandle
 *
 * Hash: 0xA1300DE03E5D1973 | Since: 1207
 *
 * @deprecated Use animscene.createMgmSystem() instead
 */
export declare function createMgmSystem(mgmFilename: string): number;
/**
 * No comment provided
 *
 * Hash: 0x84EEDB2C6E650000 | Since: 1207
 *
 * @deprecated Use animscene.deleteAnimScene() instead
 */
export declare function deleteAnimScene(animScene: any): void;
/**
 * No comment provided
 *
 * Hash: 0x53CB3970BA02E3CC | Since: 1207
 *
 * @deprecated Use animscene.deleteMgmSystem() instead
 */
export declare function deleteMgmSystem(mgmHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9D1ECA9337BE9FC3 | Since: 1207
 *
 * @deprecated Use animscene.doesAnimSceneOwnershipOfEntityExist() instead
 */
export declare function doesAnimSceneOwnershipOfEntityExist(animScene: any, entityName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9016536015DE29D | Since: 1207
 *
 * @deprecated Use animscene.doesAnimScenePlayListExist() instead
 */
export declare function doesAnimScenePlayListExist(animScene: any, playbackListName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F1F0B17109309DA | Since: 1207
 *
 * @deprecated Use animscene.doesEntityWithIdExistInAnimScene() instead
 */
export declare function doesEntityWithIdExistInAnimScene(animScene: any, entityId: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAE5ADA4FE3E21ADC | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneDict() instead
 */
export declare function getAnimSceneDict(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0x49F1D143ADE32656 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneDuration() instead
 */
export declare function getAnimSceneDuration(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0xFB5674687A1B2814 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneObject() instead
 */
export declare function getAnimSceneObject(animScene: any, name: string, isNetwork: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xE5822422197BBBA3 | Since: 1207
 *
 * @deprecated Use animscene.getAnimScenePed() instead
 */
export declare function getAnimScenePed(animScene: any, name: string, isNetwork: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x9E036D5204FFBBC8 | Since: 1207
 *
 * @deprecated Use animscene.getAnimScenePlaybackListPhaseAudioLoadStress() instead
 */
export declare function getAnimScenePlaybackListPhaseAudioLoadStress(animScene: any, phaseName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x43C21623E42B821B | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneRate() instead
 */
export declare function getAnimSceneRate(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0x61BE7D6186260002 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneTime() instead
 */
export declare function getAnimSceneTime(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0x430EE0A19BC5A287 | Since: 1207
 *
 * @deprecated Use animscene.getAnimSceneVehicle() instead
 */
export declare function getAnimSceneVehicle(animScene: any, name: string, isNetwork: boolean): number;
/**
 * _HAS_L* (?)
 *
 * Hash: 0x337F1CC8EE895601 | Since: 1207
 *
 * @deprecated Use animscene.hasEntityEnteredAnimScene() instead
 */
export declare function hasEntityEnteredAnimScene(animScene: any, entityName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x34A0671BE613D3D0 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneAborted() instead
 */
export declare function isAnimSceneAborted(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59606519FF9D3EC2 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneLoading() instead
 */
export declare function isAnimSceneLoading(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF8D1D2DAB6007EEF | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneMetadataAssetInRangeLoading() instead
 */
export declare function isAnimSceneMetadataAssetInRangeLoading(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4B4038796F0D6566 | Since: 1207
 *
 * @deprecated Use animscene.isAnimScenePaused() instead
 */
export declare function isAnimScenePaused(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F0E401031E20146 | Since: 1207
 *
 * @deprecated Use animscene.isAnimScenePlaybackListPhaseActive() instead
 */
export declare function isAnimScenePlaybackListPhaseActive(animScene: any, phaseName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x23E33CB9F4A3F547 | Since: 1207
 *
 * @deprecated Use animscene.isAnimScenePlaybackListPhaseLoaded() instead
 */
export declare function isAnimScenePlaybackListPhaseLoaded(animScene: any, phaseName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0DF57F86FE71DBE5 | Since: 1207
 *
 * @deprecated Use animscene.isAnimScenePlaybackListPhaseLoading() instead
 */
export declare function isAnimScenePlaybackListPhaseLoading(animScene: any, phaseName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4CDFFE3189EBDBD0 | Since: 1207
 *
 * @deprecated Use animscene.isAnimSceneSkippable() instead
 */
export declare function isAnimSceneSkippable(animScene: any): boolean;
/**
 * MGM stands for MiniGameMoments.
 *
 * Hash: 0xFDFC14799373283F | Since: 1207
 *
 * @deprecated Use animscene.isMgmSystemLoaded() instead
 */
export declare function isMgmSystemLoaded(mgmFilename: string): boolean;
/**
 * Used to request MiniGameMoments Assets.
 *
 * mgmFilename's:
 * Poker
 * PokerArthur
 * PokerArthurCamp
 * PokerJohn
 * PokerJohnCamp
 *
 * Hash: 0xB727A847862CB00A | Since: 1207
 *
 * @deprecated Use animscene.loadMgmAssets() instead
 */
export declare function loadMgmAssets(mgmFilename: string): boolean;
/**
 * Pauses all script threads except the one that called it.
 *
 * Hash: 0x37C1257849DEF24A | Since: 1207
 *
 * @deprecated Use animscene.pauseScriptThreads() instead
 */
export declare function pauseScriptThreads(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAE6ADA8FE7E84ACC | Since: 1207
 *
 * @deprecated Use animscene.releaseAnimScenePlayList() instead
 */
export declare function releaseAnimScenePlayList(animScene: any, playlistName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x41AFA5F228B0B6B0 | Since: 1207
 *
 * @deprecated Use animscene.requestPhotoModeDefreeze() instead
 */
export declare function requestPhotoModeDefreeze(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C709C01D43D94CD | Since: 1207
 *
 * @deprecated Use animscene.requestPhotoModeFreeze() instead
 */
export declare function requestPhotoModeFreeze(): void;
/**
 * No comment provided
 *
 * Hash: 0x99B2A2E3655DEAF1 | Since: 1207
 *
 * @deprecated Use animscene.setBreakoutArchetype() instead
 */
export declare function setBreakoutArchetype(ped: number | Ped, archetype: string): void;
/**
 * No comment provided
 *
 * Hash: 0x07706C4CC9C6CC9E | Since: 1207
 *
 * @deprecated Use animscene.setMgmEvent() instead
 */
export declare function setMgmEvent(mgmEventHandle: number, seatId: any): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x75415EE0CB583760 | Since: 1207
 *
 * @deprecated Use attribute.addAttributePoints() instead
 */
export declare function addAttributePoints(ped: number | Ped, attributeIndex: number): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0xF8DAC3D85636C241 | Since: 1207
 *
 * @deprecated Use attribute.disableAttributeOverpower() instead
 */
export declare function disableAttributeOverpower(ped: number | Ped, attributeIndex: number): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
 *
 * Hash: 0xF6A7C08DF2E28B28 | Since: 1207
 *
 * @deprecated Use attribute.enableAttributeOverpower() instead
 */
export declare function enableAttributeOverpower(ped: number | Ped, attributeIndex: number, value: number, makeSound: boolean): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x147149F2E909323C | Since: 1207
 *
 * @deprecated Use attribute.getAttributeBaseRank() instead
 */
export declare function getAttributeBaseRank(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x0EFA71F4B4330E04 | Since: 1207
 *
 * @deprecated Use attribute.getAttributeBonusRank() instead
 */
export declare function getAttributeBonusRank(ped: number | Ped, coreIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x219DA04BAA9CB065 | Since: 1207
 *
 * @deprecated Use attribute.getAttributePoints() instead
 */
export declare function getAttributePoints(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0xA4C8E23E29040DE0 | Since: 1207
 *
 * @deprecated Use attribute.getAttributeRank() instead
 */
export declare function getAttributeRank(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x94A7F191DB49A44D | Since: 1207
 *
 * @deprecated Use attribute.getDefaultAttributePointsNeededForRank() instead
 */
export declare function getDefaultAttributePointsNeededForRank(modelHash: number | string, attributeIndex: number, rank: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x958DD43D41F89A47 | Since: 1207
 *
 * @deprecated Use attribute.getDefaultAttributeRank() instead
 */
export declare function getDefaultAttributeRank(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x7C059C55AD940CB4 | Since: 1207
 *
 * @deprecated Use attribute.getDefaultMaxAttributeRank() instead
 */
export declare function getDefaultMaxAttributeRank(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x223BF310F854871C | Since: 1207
 *
 * @deprecated Use attribute.getMaxAttributePoints() instead
 */
export declare function getMaxAttributePoints(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x704674A0535A471D | Since: 1207
 *
 * @deprecated Use attribute.getMaxAttributeRank() instead
 */
export declare function getMaxAttributeRank(ped: number | Ped, attributeIndex: number): number;
/**
 * attributeIndex:
 * enum ePedAttribute
 * {
 * PA_HEALTH,
 * PA_STAMINA,
 * PA_SPECIALABILITY,
 * PA_COURAGE,
 * PA_AGILITY,
 * PA_SPEED,
 * PA_ACCELERATION,
 * PA_BONDING,
 * SA_HUNGER,
 * SA_FATIGUED,
 * SA_INEBRIATED,
 * SA_POISONED,
 * SA_BODYHEAT,
 * SA_BODYWEIGHT,
 * SA_OVERFED,
 * SA_SICKNESS,
 * SA_DIRTINESS,
 * SA_DIRTINESSHAT,
 * MTR_STRENGTH,
 * MTR_GRIT,
 * MTR_INSTINCT,
 * PA_UNRULINESS,
 * SA_DIRTINESSSKIN
 * };
 *
 * Hash: 0x5DA12E025D47D4E5 | Since: 1207
 *
 * @deprecated Use attribute.setAttributeBaseRank() instead
 */
export declare function setAttributeBaseRank(ped: number | Ped, attributeIndex: number, newValue: number): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x920F9488BD115EFB | Since: 1207
 *
 * @deprecated Use attribute.setAttributeBonusRank() instead
 */
export declare function setAttributeBonusRank(ped: number | Ped, attributeIndex: number, newValue: number): void;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x09A59688C26D88DF | Since: 1207
 *
 * @deprecated Use attribute.setAttributePoints() instead
 */
export declare function setAttributePoints(ped: number | Ped, attributeIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD962F8579D702DB5 | Since: 1207
 *
 * @deprecated Use attribute.stopItemPreview() instead
 */
export declare function stopItemPreview(): void;
/**
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 *
 * Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
 *
 * Hash: 0x4AF5A4C7B9157D14 | Since: 1207
 *
 * @deprecated Use attribute.enableAttributeCoreOverpower() instead
 */
export declare function enableAttributeCoreOverpower(ped: number | Ped, coreIndex: number, value: number, makeSound: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB429F58803D285B1 | Since: 1207
 *
 * @deprecated Use attribute.getAttributeCoreOverpowerSecondsLeft() instead
 */
export declare function getAttributeCoreOverpowerSecondsLeft(ped: number | Ped, coreIndex: number): number;
/**
 * Gets the ped's core value on a scale of 0 to 100.
 * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
 *
 * Hash: 0x36731AC041289BB1 | Since: 1207
 *
 * @deprecated Use attribute.getAttributeCoreValue() instead
 */
export declare function getAttributeCoreValue(ped: number | Ped, coreIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4C9F782180712742 | Since: 1207
 *
 * @deprecated Use attribute.getAttributeOverpowerSecondsLeft() instead
 */
export declare function getAttributeOverpowerSecondsLeft(ped: number | Ped, attributeIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x200373A8DF081F22 | Since: 1207
 *
 * @deprecated Use attribute.isAttributeCoreOverpowered() instead
 */
export declare function isAttributeCoreOverpowered(ped: number | Ped, coreIndex: number): boolean;
/**
 * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
 *
 * Hash: 0x103C2F885ABEB00B | Since: 1207
 *
 * @deprecated Use attribute.isAttributeOverpowered() instead
 */
export declare function isAttributeOverpowered(ped: number | Ped, attributeIndex: number): boolean;
/**
 * coreIndex:
 * enum eAttributeCore
 * {
 * ATTRIBUTE_CORE_HEALTH,
 * ATTRIBUTE_CORE_STAMINA,
 * ATTRIBUTE_CORE_DEADEYE
 * };
 *
 * Hash: 0xC6258F41D86676E0 | Since: 1207
 *
 * @deprecated Use attribute.setAttributeCoreValue() instead
 */
export declare function setAttributeCoreValue(ped: number | Ped, coreIndex: number, value: number): void;
/**
 * Displays status effects on core icons (includes warnings).
 *
 * enum eUiRpgStatusEffect
 * {
 * STATUS_NONE,
 * STATUS_COLD,
 * STATUS_HOT,
 * STATUS_OVERFED,
 * STATUS_DIRTY,
 * STATUS_SNAKE_VENOM,
 * STATUS_ARROW_WOUNDED,
 * STATUS_ARROW_DRAINED,
 * STATUS_ARROW_DISORIENTED,
 * STATUS_ARROW_TRACKED,
 * STATUS_ARROW_CONFUSION,
 * STATUS_UNDERWEIGHT,
 * STATUS_OVERWEIGHT,
 * STATUS_SICK_1,
 * STATUS_SICK_2,
 * STATUS_PREDATOR_INVULNERABLE
 * };
 *
 * Hash: 0xA4D3A1C008F250DF | Since: 1207
 *
 * @deprecated Use attribute.setStatusEffectCoreIcon() instead
 */
export declare function setStatusEffectCoreIcon(statusEffectType: number): void;
/**
 * Starts core periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 *
 * Hash: 0xFB6E111908502871 | Since: 1207
 *
 * @deprecated Use attribute.setStatusEffectPeriodicIcon() instead
 */
export declare function setStatusEffectPeriodicIcon(statusEffectType: number): void;
/**
 * Params: p1 is related to satchel_category
 *
 * Hash: 0x7E2C766ADB2C5F1A | Since: 1207
 *
 * @deprecated Use attribute.startItemPreview() instead
 */
export declare function startItemPreview(): void;
/**
 * Stops periodic icon.
 * statusEffectType: see 0xA4D3A1C008F250DF
 *
 * Hash: 0x3FC4C027FD0936F4 | Since: 1207
 *
 * @deprecated Use attribute.stopStatusEffectPeriodicIcon() instead
 */
export declare function stopStatusEffectPeriodicIcon(statusEffectType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x153973AB99FE8980 | Since: 1207
 *
 * @deprecated Use audio.addEntityToAudioMixGroup() instead
 */
export declare function addEntityToAudioMixGroup(entity: number | Entity, groupName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x95D9F4BC443956E7 | Since: 1207
 *
 * @deprecated Use audio.addPedToConversation() instead
 */
export declare function addPedToConversation(convoRoot: string, ped: number | Ped, characterName: string): void;
/**
 * Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
 *
 * Hash: 0x845FFC3A4FEEFA3E | Since: 1207
 *
 * @deprecated Use audio.audioIsMusicPlaying() instead
 */
export declare function audioIsMusicPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x374F0E716BFCDE82 | Since: 1207
 *
 * @deprecated Use audio.audioTriggerExplosion() instead
 */
export declare function audioTriggerExplosion(name: string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x5B17A90291133DA5 | Since: 1207
 *
 * @deprecated Use audio.cancelMusicEvent() instead
 */
export declare function cancelMusicEvent(eventName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x120C48C614909FA4 | Since: 1207
 *
 * @deprecated Use audio.clearAmbientZoneListState() instead
 */
export declare function clearAmbientZoneListState(ambientZone: string): void;
/**
 * No comment provided
 *
 * Hash: 0x218DD44AAAC964FF | Since: 1207
 *
 * @deprecated Use audio.clearAmbientZoneState() instead
 */
export declare function clearAmbientZoneState(zoneName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x33D51F801CB16E4F | Since: 1207
 *
 * @deprecated Use audio.clearConversationHistory() instead
 */
export declare function clearConversationHistory(): void;
/**
 * No comment provided
 *
 * Hash: 0xD2C91A0B572AAE56 | Since: 1207
 *
 * @deprecated Use audio.createNewScriptedConversation() instead
 */
export declare function createNewScriptedConversation(convoRoot: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9A41C1E940FB0E8 | Since: 1207
 *
 * @deprecated Use audio.disablePedPainAudio() instead
 */
export declare function disablePedPainAudio(ped: number | Ped, toggle: boolean): void;
/**
 * Checks if the ped can play the speech or has the speech file, last parameter is usually false.
 *
 * Hash: 0x49B99BF3FDA89A7A | Since: 1207
 *
 * @deprecated Use audio.doesContextExistForThisPed() instead
 */
export declare function doesContextExistForThisPed(ped: number | Ped, speechName: string, unk: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x062D5EAD4DA2FA6A | Since: 1207
 *
 * @deprecated Use audio.forcePedPanicWalla() instead
 */
export declare function forcePedPanicWalla(): void;
/**
 * Old name: _FORCE_VEHICLE_ENGINE_AUDIO
 *
 * Hash: 0x4F0C413926060B38 | Since: 1207
 *
 * @deprecated Use audio.forceUseAudioGameObject() instead
 */
export declare function forceUseAudioGameObject(vehicle: number | Vehicle, audioName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x480357EE890C295A | Since: 1207
 *
 * @deprecated Use audio.getCurrentScriptedConversationLine() instead
 */
export declare function getCurrentScriptedConversationLine(): number;
/**
 * No comment provided
 *
 * Hash: 0xE7A0D23DC414507B | Since: 1207
 *
 * @deprecated Use audio.getMusicPlaytime() instead
 */
export declare function getMusicPlaytime(): number;
/**
 * No comment provided
 *
 * Hash: 0x430386FE9BF80B45 | Since: 1207
 *
 * @deprecated Use audio.getSoundId() instead
 */
export declare function getSoundId(): number;
/**
 * No comment provided
 *
 * Hash: 0x932C2D096A2C3FFF | Since: 1207
 *
 * @deprecated Use audio.isAmbientSpeechDisabled() instead
 */
export declare function isAmbientSpeechDisabled(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9072C8B49907BFAD | Since: 1207
 *
 * @deprecated Use audio.isAmbientSpeechPlaying() instead
 */
export declare function isAmbientSpeechPlaying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC265DF9FB44A9FBD | Since: 1207
 *
 * @deprecated Use audio.isAnimalVocalizationPlaying() instead
 */
export declare function isAnimalVocalizationPlaying(pedHandle: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x729072355FA39EC9 | Since: 1207
 *
 * @deprecated Use audio.isAnySpeechPlaying() instead
 */
export declare function isAnySpeechPlaying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB65B60556E2A9225 | Since: 1207
 *
 * @deprecated Use audio.isAudioSceneActive() instead
 */
export declare function isAudioSceneActive(scene: string): boolean;
/**
 * Checks whether the horn of a vehicle is currently played.
 *
 * Hash: 0x9D6BFC12B05C6121 | Since: 1207
 *
 * @deprecated Use audio.isHornActive() instead
 */
export declare function isHornActive(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x049E937F18F4020C | Since: 1207
 *
 * @deprecated Use audio.isPedInCurrentConversation() instead
 */
export declare function isPedInCurrentConversation(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF0D54BE7A776737 | Since: 1207
 *
 * @deprecated Use audio.isScriptedConversationLoaded() instead
 */
export declare function isScriptedConversationLoaded(convoRoot: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1ECC76792F661CF5 | Since: 1207
 *
 * @deprecated Use audio.isScriptedConversationPlaying() instead
 */
export declare function isScriptedConversationPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCC9AA18DCC7084F4 | Since: 1207
 *
 * @deprecated Use audio.isScriptedSpeechPlaying() instead
 */
export declare function isScriptedSpeechPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD11FA52EB849D978 | Since: 1207
 *
 * @deprecated Use audio.isStreamPlaying() instead
 */
export declare function isStreamPlaying(streamId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F1F957154EC51DF | Since: 1207
 *
 * @deprecated Use audio.loadStream() instead
 */
export declare function loadStream(streamName: string, soundSet: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8530AD776CD72B12 | Since: 1207
 *
 * @deprecated Use audio.pauseScriptedConversation() instead
 */
export declare function pauseScriptedConversation(): void;
/**
 * Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
 *
 * Hash: 0xED640017ED337E45 | Since: 1207
 *
 * @deprecated Use audio.playAmbientSpeechFromPositionNative() instead
 */
export declare function playAmbientSpeechFromPositionNative(pos: Vector3, params: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEE066C7006C49C0A | Since: 1207
 *
 * @deprecated Use audio.playAnimalVocalization() instead
 */
export declare function playAnimalVocalization(ped: number | Ped, vocalizationName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCD536C4D33DCC900 | Since: 1207
 *
 * @deprecated Use audio.playEndCreditsMusic() instead
 */
export declare function playEndCreditsMusic(play: boolean): void;
/**
 * Valid pain IDs: 0..12  these names are not official, but here is a list of the IDs:
 * 1 burning,
 * 2 drowning,
 * 3 coughing,
 * 4 nothing,
 * 5 nothing,
 * 6 coughing_2,
 * 7 nothing,
 * 8 nothing,
 * 9 hurtingSick?,
 * 10 hurtingFall?,
 * 11 nothing,
 * 12 choking
 *
 * Hash: 0xBC9AE166038A5CEC | Since: 1207
 *
 * @deprecated Use audio.playPain() instead
 */
export declare function playPain(ped: number | Ped, painId: number, isNetwork: boolean): void;
/**
 * struct ScriptedSpeechParams
 * {
 * const char* speechName;
 * const char* voiceName;
 * alignas(8) int variation;
 * alignas(8) Hash speechParamHash;
 * alignas(8) Ped listenerPed;
 * alignas(8) BOOL syncOverNetwork;
 * alignas(8) int v7;
 * alignas(8) int v8;
 * };
 *
 * static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
 *
 *
 * Example:
 *
 * ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, joaat("SPEECH_PARAMS_BEAT_SHOUTED_CLEAR"), 0, true, 1, 1};
 * PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
 *
 * Old name: _PLAY_AMBIENT_SPEECH1
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
 *
 * Hash: 0x8E04FEDD28D42462 | Since: 1207
 *
 * @deprecated Use audio.playPedAmbientSpeechNative() instead
 */
export declare function playPedAmbientSpeechNative(speaker: number | Ped, params: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7FF4944CC209192D | Since: 1207
 *
 * @deprecated Use audio.playSound() instead
 */
export declare function playSound(audioName: string, audioRef: string): void;
/**
 * No comment provided
 *
 * Hash: 0x6FB1DA3CA9DA7D90 | Since: 1207
 *
 * @deprecated Use audio.playSoundFromEntity() instead
 */
export declare function playSoundFromEntity(audioName: string, entity: number | Entity, audioRef: string, isNetwork: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
 *
 * Hash: 0x67C540AA08E4A6F5 | Since: 1207
 *
 * @deprecated Use audio.playSoundFrontend() instead
 */
export declare function playSoundFrontend(audioName: string, audioRef: string): void;
/**
 * No comment provided
 *
 * Hash: 0x89049DD63C08B5D1 | Since: 1207
 *
 * @deprecated Use audio.playStreamFromPed() instead
 */
export declare function playStreamFromPed(ped: number | Ped, streamId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x21442F412E8DE56B | Since: 1207
 *
 * @deprecated Use audio.playStreamFromPosition() instead
 */
export declare function playStreamFromPosition(pos: Vector3, streamId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x58FCE43488F9F5F4 | Since: 1207
 *
 * @deprecated Use audio.playStreamFrontend() instead
 */
export declare function playStreamFrontend(streamId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3B3CAD6166916D87 | Since: 1207
 *
 * @deprecated Use audio.preloadScriptConversation() instead
 */
export declare function preloadScriptConversation(convoRoot: string, clone: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1E5185B72EF5158A | Since: 1207
 *
 * @deprecated Use audio.prepareMusicEvent() instead
 */
export declare function prepareMusicEvent(eventName: string): boolean;
/**
 * soundId maybe be incorrect name for param p2, in the decompiles is always -2
 *
 * Hash: 0xE368E8422C860BA7 | Since: 1207
 *
 * @deprecated Use audio.prepareSound() instead
 */
export declare function prepareSound(soundName: string, soundsetName: string, soundId: number): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
 *
 * Hash: 0xD9130842D7226045 | Since: 1207
 *
 * @deprecated Use audio.prepareSoundset() instead
 */
export declare function prepareSoundset(soundsetName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4AD019591E94C064 | Since: 1207
 *
 * @deprecated Use audio.prepareSoundWithEntity() instead
 */
export declare function prepareSoundWithEntity(soundName: string, entity: number | Entity, soundsetName: string, soundId: number): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xC6ED9D5092438D91 | Since: 1207
 *
 * @deprecated Use audio.registerScriptWithAudio() instead
 */
export declare function registerScriptWithAudio(): void;
/**
 * No comment provided
 *
 * Hash: 0x77ED170667F50170 | Since: 1207
 *
 * @deprecated Use audio.releaseNamedScriptAudioBank() instead
 */
export declare function releaseNamedScriptAudioBank(audioBank: string): void;
/**
 * No comment provided
 *
 * Hash: 0x7A2D8AD0A9EB9C3F | Since: 1207
 *
 * @deprecated Use audio.releaseScriptAudioBank() instead
 */
export declare function releaseScriptAudioBank(): void;
/**
 * No comment provided
 *
 * Hash: 0x353FC880830B88FA | Since: 1207
 *
 * @deprecated Use audio.releaseSoundId() instead
 */
export declare function releaseSoundId(soundId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x18EB48CFC41F2EA0 | Since: 1207
 *
 * @deprecated Use audio.removeEntityFromAudioMixGroup() instead
 */
export declare function removeEntityFromAudioMixGroup(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB4BBFD9CD8B3922B | Since: 1207
 *
 * @deprecated Use audio.removePortalSettingsOverride() instead
 */
export declare function removePortalSettingsOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F844A8B08D76685 | Since: 1207
 *
 * @deprecated Use audio.requestScriptAudioBank() instead
 */
export declare function requestScriptAudioBank(audioBank: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9AEB285D1818C9AC | Since: 1207
 *
 * @deprecated Use audio.restartScriptedConversation() instead
 */
export declare function restartScriptedConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C8065A3B780185B | Since: 1207
 *
 * @deprecated Use audio.setAmbientVoiceName() instead
 */
export declare function setAmbientVoiceName(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9748FA4DE50CCE3E | Since: 1207
 *
 * @deprecated Use audio.setAmbientZoneListState() instead
 */
export declare function setAmbientZoneListState(ambientZone: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF3638DAE8C4045E1 | Since: 1207
 *
 * @deprecated Use audio.setAmbientZoneListStatePersistent() instead
 */
export declare function setAmbientZoneListStatePersistent(ambientZone: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBDA07E5950085E46 | Since: 1207
 *
 * @deprecated Use audio.setAmbientZoneState() instead
 */
export declare function setAmbientZoneState(zoneName: string, isEnabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1D6650420CEC9D3B | Since: 1207
 *
 * @deprecated Use audio.setAmbientZoneStatePersistent() instead
 */
export declare function setAmbientZoneStatePersistent(ambientZone: string): void;
/**
 * Not implemented.
 *
 * Hash: 0xCC97B29285B1DC3B | Since: 1207
 *
 * @deprecated Use audio.setAnimalMood() instead
 */
export declare function setAnimalMood(animal: number | Ped, mood: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
 *
 * Hash: 0xB9EFD5C25018725A | Since: 1207
 *
 * @deprecated Use audio.setAudioFlag() instead
 */
export declare function setAudioFlag(flagName: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9B1FC259187C97C0 | Since: 1207
 *
 * @deprecated Use audio.setAudioOnlineTransitionStage() instead
 */
export declare function setAudioOnlineTransitionStage(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF21A9EF089A2668 | Since: 1207
 *
 * @deprecated Use audio.setAudioSceneVariable() instead
 */
export declare function setAudioSceneVariable(scene: string, variable: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE5564483E407F914 | Since: 1207
 *
 * @deprecated Use audio.setAudioVehiclePriority() instead
 */
export declare function setAudioVehiclePriority(vehicle: number | Vehicle): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x3BD3F52BA9B1E4E8 | Since: 1207
 *
 * @deprecated Use audio.setGpsActive() instead
 */
export declare function setGpsActive(active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x76D683C108594D0E | Since: 1207
 *
 * @deprecated Use audio.setHornEnabled() instead
 */
export declare function setHornEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB2DE3AEBE31150E2 | Since: 1207
 *
 * @deprecated Use audio.setIsScriptedSpeechDisabled() instead
 */
export declare function setIsScriptedSpeechDisabled(ped: number | Ped, disabled: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0x8BF907833BE275DE | Since: 1207
 *
 * @deprecated Use audio.setPedInteriorWallaDensity() instead
 */
export declare function setPedInteriorWallaDensity(): void;
/**
 * No comment provided
 *
 * Hash: 0x95D2D383D5396B8A | Since: 1207
 *
 * @deprecated Use audio.setPedIsDrunk() instead
 */
export declare function setPedIsDrunk(ped: number | Ped, toggle: boolean): void;
/**
 * https://en.m.wikipedia.org/wiki/Walla
 *
 * Hash: 0x149AEE66F0CB3A99 | Since: 1207
 *
 * @deprecated Use audio.setPedWallaDensity() instead
 */
export declare function setPedWallaDensity(): void;
/**
 * No comment provided
 *
 * Hash: 0x044DBAD7A7FA2BE5 | Since: 1207
 *
 * @deprecated Use audio.setPortalSettingsOverride() instead
 */
export declare function setPortalSettingsOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x399D2D3B33F1B8EB | Since: 1207
 *
 * @deprecated Use audio.setStaticEmitterEnabled() instead
 */
export declare function setStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9663FE6B7A61EB00 | Since: 1207
 *
 * @deprecated Use audio.skipToNextScriptedConversationLine() instead
 */
export declare function skipToNextScriptedConversationLine(): void;
/**
 * No comment provided
 *
 * Hash: 0x013A80FC08F6E4F2 | Since: 1207
 *
 * @deprecated Use audio.startAudioScene() instead
 */
export declare function startAudioScene(scene: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x23641AFE870AF385 | Since: 1207
 *
 * @deprecated Use audio.startPreloadedConversation() instead
 */
export declare function startPreloadedConversation(convoRoot: string): void;
/**
 * No comment provided
 *
 * Hash: 0x6B17C62C9635D2DC | Since: 1207
 *
 * @deprecated Use audio.startScriptConversation() instead
 */
export declare function startScriptConversation(convoRoot: string, clone: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDFE8422B3B94E688 | Since: 1207
 *
 * @deprecated Use audio.stopAudioScene() instead
 */
export declare function stopAudioScene(scene: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBAC7FC81A75EC1A1 | Since: 1207
 *
 * @deprecated Use audio.stopAudioScenes() instead
 */
export declare function stopAudioScenes(): void;
/**
 * No comment provided
 *
 * Hash: 0xB8BEC0CA6F0EDB0F | Since: 1207
 *
 * @deprecated Use audio.stopCurrentPlayingAmbientSpeech() instead
 */
export declare function stopCurrentPlayingAmbientSpeech(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x79D2F0E66F81D90D | Since: 1207
 *
 * @deprecated Use audio.stopCurrentPlayingSpeech() instead
 */
export declare function stopCurrentPlayingSpeech(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9D64D7405520E3D3 | Since: 1207
 *
 * @deprecated Use audio.stopPedSpeaking() instead
 */
export declare function stopPedSpeaking(ped: number | Ped, shaking: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD79DEEFB53455EBA | Since: 1207
 *
 * @deprecated Use audio.stopScriptedConversation() instead
 */
export declare function stopScriptedConversation(): number;
/**
 * No comment provided
 *
 * Hash: 0xA4718A1419D18151 | Since: 1207
 *
 * @deprecated Use audio.stopStream() instead
 */
export declare function stopStream(streamId: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
 *
 * Hash: 0x706D57B0F50DA710 | Since: 1207
 *
 * @deprecated Use audio.triggerMusicEvent() instead
 */
export declare function triggerMusicEvent(eventName: string): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xA8638BE228D4751A | Since: 1207
 *
 * @deprecated Use audio.unregisterScriptWithAudio() instead
 */
export declare function unregisterScriptWithAudio(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF4DC1784BE94DFA | Since: 1207
 *
 * @deprecated Use audio.useFootstepScriptSweeteners() instead
 */
export declare function useFootstepScriptSweeteners(ped: number | Ped, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x017492B2201E3428 | Since: 1207
 *
 * @deprecated Use audio._0x017492B2201E3428() instead
 */
export declare function _0x017492B2201E3428(): void;
/**
 * No comment provided
 *
 * Hash: 0x018ABE833CA64D2A | Since: 1232
 *
 * @deprecated Use audio._0x018ABE833CA64D2A() instead
 */
export declare function _0x018ABE833CA64D2A(): void;
/**
 * No comment provided
 *
 * Hash: 0x06C5DF5EE444BC6B | Since: 1207
 *
 * @deprecated Use audio._0x06C5DF5EE444BC6B() instead
 */
export declare function _0x06C5DF5EE444BC6B(): void;
/**
 * No comment provided
 *
 * Hash: 0x078F77FD1A43EAB3 | Since: 1207
 *
 * @deprecated Use audio._0x078F77FD1A43EAB3() instead
 */
export declare function _0x078F77FD1A43EAB3(): void;
/**
 * No comment provided
 *
 * Hash: 0x0CB3D1919E8D7CBA | Since: 1207
 *
 * @deprecated Use audio._0x0CB3D1919E8D7CBA() instead
 */
export declare function _0x0CB3D1919E8D7CBA(convoRoot: string): boolean;
/**
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
 * p1 is possibly naSpeechAudibility, naSpeechType, or naSpeechEventTypeRequestPriority
 * SKIP_* - START_*
 *
 * Hash: 0x0D7FD6A55FD63AEF | Since: 1207
 *
 * @deprecated Use audio._0x0D7FD6A55FD63AEF() instead
 */
export declare function _0x0D7FD6A55FD63AEF(speechEventType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0FAF7171BF613B80 | Since: 1207
 *
 * @deprecated Use audio._0x0FAF7171BF613B80() instead
 */
export declare function _0x0FAF7171BF613B80(): void;
/**
 * No comment provided
 *
 * Hash: 0x131EC9247E7A2903 | Since: 1207
 *
 * @deprecated Use audio._0x131EC9247E7A2903() instead
 */
export declare function _0x131EC9247E7A2903(): any;
/**
 * No comment provided
 *
 * Hash: 0x138ADB94F8B90616 | Since: 1207
 *
 * @deprecated Use audio._0x138ADB94F8B90616() instead
 */
export declare function _0x138ADB94F8B90616(): void;
/**
 * No comment provided
 *
 * Hash: 0x139A4B9DF2D26CBF | Since: 1232
 *
 * @deprecated Use audio._0x139A4B9DF2D26CBF() instead
 */
export declare function _0x139A4B9DF2D26CBF(): void;
/**
 * No comment provided
 *
 * Hash: 0x152ED1B56E8F1F50 | Since: 1207
 *
 * @deprecated Use audio._0x152ED1B56E8F1F50() instead
 */
export declare function _0x152ED1B56E8F1F50(currentScriptedConvoLine: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1E6F9A9FE1A99F36 | Since: 1207
 *
 * @deprecated Use audio._0x1E6F9A9FE1A99F36() instead
 */
export declare function _0x1E6F9A9FE1A99F36(audSpeechEvent: string): void;
/**
 * No comment provided
 *
 * Hash: 0x254B0241E964B450 | Since: 1207
 *
 * @deprecated Use audio._0x254B0241E964B450() instead
 */
export declare function _0x254B0241E964B450(currentScriptedConvoLine: number): number;
/**
 * No comment provided
 *
 * Hash: 0x259ACC5B52A2B2D9 | Since: 1207
 *
 * @deprecated Use audio._0x259ACC5B52A2B2D9() instead
 */
export declare function _0x259ACC5B52A2B2D9(): void;
/**
 * No comment provided
 *
 * Hash: 0x2651DDC0EA269073 | Since: 1207
 *
 * @deprecated Use audio._0x2651DDC0EA269073() instead
 */
export declare function _0x2651DDC0EA269073(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x295859EB18F48D82 | Since: 1207
 *
 * @deprecated Use audio._0x295859EB18F48D82() instead
 */
export declare function _0x295859EB18F48D82(): number;
/**
 * No comment provided
 *
 * Hash: 0x2B101AD9F651243A | Since: 1207
 *
 * @deprecated Use audio._0x2B101AD9F651243A() instead
 */
export declare function _0x2B101AD9F651243A(): any;
/**
 * No comment provided
 *
 * Hash: 0x2B9C37C01BF25EDB | Since: 1207
 *
 * @deprecated Use audio._0x2B9C37C01BF25EDB() instead
 */
export declare function _0x2B9C37C01BF25EDB(): any;
/**
 * No comment provided
 *
 * Hash: 0x2FFF4A78384AFFDF | Since: 1436
 *
 * @deprecated Use audio._0x2FFF4A78384AFFDF() instead
 */
export declare function _0x2FFF4A78384AFFDF(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x341CDD17EFC2472E | Since: 1207
 *
 * @deprecated Use audio._0x341CDD17EFC2472E() instead
 */
export declare function _0x341CDD17EFC2472E(): void;
/**
 * No comment provided
 *
 * Hash: 0x35B8C070E0C16E2F | Since: 1207
 *
 * @deprecated Use audio._0x35B8C070E0C16E2F() instead
 */
export declare function _0x35B8C070E0C16E2F(): void;
/**
 * No comment provided
 *
 * Hash: 0x380A2E353AD30917 | Since: 1207
 *
 * @deprecated Use audio._0x380A2E353AD30917() instead
 */
export declare function _0x380A2E353AD30917(): void;
/**
 * No comment provided
 *
 * Hash: 0x3A00D87B20A2A5E4 | Since: 1207
 *
 * @deprecated Use audio._0x3A00D87B20A2A5E4() instead
 */
export declare function _0x3A00D87B20A2A5E4(): void;
/**
 * No comment provided
 *
 * Hash: 0x3A3BE6B920525237 | Since: 1207
 *
 * @deprecated Use audio._0x3A3BE6B920525237() instead
 */
export declare function _0x3A3BE6B920525237(): void;
/**
 * No comment provided
 *
 * Hash: 0x3D0BBCCF401B5FDB | Since: 1207
 *
 * @deprecated Use audio._0x3D0BBCCF401B5FDB() instead
 */
export declare function _0x3D0BBCCF401B5FDB(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E93DDDCBB6111E4 | Since: 1207
 *
 * @deprecated Use audio._0x3E93DDDCBB6111E4() instead
 */
export declare function _0x3E93DDDCBB6111E4(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E98AC9D8C56C62C | Since: 1207
 *
 * @deprecated Use audio._0x3E98AC9D8C56C62C() instead
 */
export declare function _0x3E98AC9D8C56C62C(): void;
/**
 * No comment provided
 *
 * Hash: 0x40CA665AB9D8D505 | Since: 1207
 *
 * @deprecated Use audio._0x40CA665AB9D8D505() instead
 */
export declare function _0x40CA665AB9D8D505(convoRoot: string, singleLineIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x43037ABFE214A851 | Since: 1207
 *
 * @deprecated Use audio._0x43037ABFE214A851() instead
 */
export declare function _0x43037ABFE214A851(): void;
/**
 * No comment provided
 *
 * Hash: 0x448F2647DD6F2E27 | Since: 1232
 *
 * @deprecated Use audio._0x448F2647DD6F2E27() instead
 */
export declare function _0x448F2647DD6F2E27(): void;
/**
 * No comment provided
 *
 * Hash: 0x44A5EEF54F62E823 | Since: 1207
 *
 * @deprecated Use audio._0x44A5EEF54F62E823() instead
 */
export declare function _0x44A5EEF54F62E823(): any;
/**
 * No comment provided
 *
 * Hash: 0x4A98E228A936DBCC | Since: 1207
 *
 * @deprecated Use audio._0x4A98E228A936DBCC() instead
 */
export declare function _0x4A98E228A936DBCC(): any;
/**
 * No comment provided
 *
 * Hash: 0x4BE3EC91C01F0FE8 | Since: 1207
 *
 * @deprecated Use audio._0x4BE3EC91C01F0FE8() instead
 */
export declare function _0x4BE3EC91C01F0FE8(): void;
/**
 * No comment provided
 *
 * Hash: 0x569ABC36E28DDEAA | Since: 1207
 *
 * @deprecated Use audio._0x569ABC36E28DDEAA() instead
 */
export declare function _0x569ABC36E28DDEAA(): void;
/**
 * _IS_SOUND_RUNNING(?)
 *
 * Hash: 0x580D71DFE0088E34 | Since: 1207
 *
 * @deprecated Use audio._0x580D71DFE0088E34() instead
 */
export declare function _0x580D71DFE0088E34(audioName: string, audioRef: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A13586A9447931F | Since: 1207
 *
 * @deprecated Use audio._0x5A13586A9447931F() instead
 */
export declare function _0x5A13586A9447931F(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AE0CB5F35F034FD | Since: 1207
 *
 * @deprecated Use audio._0x5AE0CB5F35F034FD() instead
 */
export declare function _0x5AE0CB5F35F034FD(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BC885EBD75FAA7D | Since: 1207
 *
 * @deprecated Use audio._0x5BC885EBD75FAA7D() instead
 */
export declare function _0x5BC885EBD75FAA7D(): void;
/**
 * No comment provided
 *
 * Hash: 0x5E3CCF03995388B5 | Since: 1207
 *
 * @deprecated Use audio._0x5E3CCF03995388B5() instead
 */
export declare function _0x5E3CCF03995388B5(): void;
/**
 * No comment provided
 *
 * Hash: 0x62377977E4F08668 | Since: 1436
 *
 * @deprecated Use audio._0x62377977E4F08668() instead
 */
export declare function _0x62377977E4F08668(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x64B956F4E761DF5C | Since: 1207
 *
 * @deprecated Use audio._0x64B956F4E761DF5C() instead
 */
export declare function _0x64B956F4E761DF5C(): void;
/**
 * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType
 * SKIP_* - START_*
 *
 * Hash: 0x660A8F876DF1D4F8 | Since: 1207
 *
 * @deprecated Use audio._0x660A8F876DF1D4F8() instead
 */
export declare function _0x660A8F876DF1D4F8(speechEventType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6652B0C8F3D414D0 | Since: 1207
 *
 * @deprecated Use audio._0x6652B0C8F3D414D0() instead
 */
export declare function _0x6652B0C8F3D414D0(): void;
/**
 * _STOP_AUDIO_*
 *
 * Hash: 0x6AB944DF68B512D3 | Since: 1207
 *
 * @deprecated Use audio._0x6AB944DF68B512D3() instead
 */
export declare function _0x6AB944DF68B512D3(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B7A88A61B41E589 | Since: 1207
 *
 * @deprecated Use audio._0x6B7A88A61B41E589() instead
 */
export declare function _0x6B7A88A61B41E589(): void;
/**
 * Gets the hash for the last played speech line.
 *
 * Hash: 0x6BFFB7C276866996 | Since: 1207
 *
 * @deprecated Use audio.getLastPlayedSpeechForPed() instead
 */
export declare function getLastPlayedSpeechForPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6DA15746D5CC1A92 | Since: 1207
 *
 * @deprecated Use audio._0x6DA15746D5CC1A92() instead
 */
export declare function _0x6DA15746D5CC1A92(): void;
/**
 * No comment provided
 *
 * Hash: 0x72E4D1C4639BC465 | Since: 1207
 *
 * @deprecated Use audio._0x72E4D1C4639BC465() instead
 */
export declare function _0x72E4D1C4639BC465(): any;
/**
 * _AUDIO_IS_* - _AUDIO_TRIGGER*
 *
 * Hash: 0x7455CD705F7E933E | Since: 1207
 *
 * @deprecated Use audio._0x7455CD705F7E933E() instead
 */
export declare function _0x7455CD705F7E933E(): void;
/**
 * No comment provided
 *
 * Hash: 0x7678FE0455ED1145 | Since: 1207
 *
 * @deprecated Use audio._0x7678FE0455ED1145() instead
 */
export declare function _0x7678FE0455ED1145(): any;
/**
 * Only used in R* SP Script cv_mus_shared
 *
 * Hash: 0x79F9C57B8D0DFE90 | Since: 1207
 *
 * @deprecated Use audio._0x79F9C57B8D0DFE90() instead
 */
export declare function _0x79F9C57B8D0DFE90(convoRoot: string, animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7E176C676F8652A9 | Since: 1207
 *
 * @deprecated Use audio._0x7E176C676F8652A9() instead
 */
export declare function _0x7E176C676F8652A9(): void;
/**
 * No comment provided
 *
 * Hash: 0x821C32C728B24477 | Since: 1207
 *
 * @deprecated Use audio._0x821C32C728B24477() instead
 */
export declare function _0x821C32C728B24477(): void;
/**
 * No comment provided
 *
 * Hash: 0x839C9F124BE74D94 | Since: 1207
 *
 * @deprecated Use audio._0x839C9F124BE74D94() instead
 */
export declare function _0x839C9F124BE74D94(): void;
/**
 * No comment provided
 *
 * Hash: 0x847748AE5D7B1071 | Since: 1207
 *
 * @deprecated Use audio._0x847748AE5D7B1071() instead
 */
export declare function _0x847748AE5D7B1071(): boolean;
/**
 * Not implemented.
 *
 * Hash: 0x864A842B86993851 | Since: 1207
 *
 * @deprecated Use audio._0x864A842B86993851() instead
 */
export declare function _0x864A842B86993851(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x886657C5B3D8EDE3 | Since: 1232
 *
 * @deprecated Use audio._0x886657C5B3D8EDE3() instead
 */
export declare function _0x886657C5B3D8EDE3(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x8D29FDF565DED9AE | Since: 1232
 *
 * @deprecated Use audio._0x8D29FDF565DED9AE() instead
 */
export declare function _0x8D29FDF565DED9AE(): void;
/**
 * No comment provided
 *
 * Hash: 0x8E901B65206C2D3E | Since: 1207
 *
 * @deprecated Use audio._0x8E901B65206C2D3E() instead
 */
export declare function _0x8E901B65206C2D3E(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x935DBD96D4A3DA1F | Since: 1207
 *
 * @deprecated Use audio._0x935DBD96D4A3DA1F() instead
 */
export declare function _0x935DBD96D4A3DA1F(currentScriptedConvoLine: number): number;
/**
 * No comment provided
 *
 * Hash: 0x9D6DEC9791A4E501 | Since: 1207
 *
 * @deprecated Use audio._0x9D6DEC9791A4E501() instead
 */
export declare function _0x9D6DEC9791A4E501(): any;
/**
 * No comment provided
 *
 * Hash: 0x9EB779765E68C52E | Since: 1207
 *
 * @deprecated Use audio._0x9EB779765E68C52E() instead
 */
export declare function _0x9EB779765E68C52E(): void;
/**
 * No comment provided
 *
 * Hash: 0xA2323A2EAE32A290 | Since: 1207
 *
 * @deprecated Use audio._0xA2323A2EAE32A290() instead
 */
export declare function _0xA2323A2EAE32A290(listeningToPed: number | Ped, ped: number | Ped, listenerName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xA2B851605748AD0E | Since: 1207
 *
 * @deprecated Use audio._0xA2B851605748AD0E() instead
 */
export declare function _0xA2B851605748AD0E(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6847BBA4FCDD13F | Since: 1207
 *
 * @deprecated Use audio._0xA6847BBA4FCDD13F() instead
 */
export declare function _0xA6847BBA4FCDD13F(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6A3A3F96B8B030E | Since: 1207
 *
 * @deprecated Use audio._0xA6A3A3F96B8B030E() instead
 */
export declare function _0xA6A3A3F96B8B030E(): any;
/**
 * No comment provided
 *
 * Hash: 0xABDB4863D3D72021 | Since: 1207
 *
 * @deprecated Use audio._0xABDB4863D3D72021() instead
 */
export declare function _0xABDB4863D3D72021(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB18FEC133C7C6C69 | Since: 1207
 *
 * @deprecated Use audio._0xB18FEC133C7C6C69() instead
 */
export declare function _0xB18FEC133C7C6C69(): any;
/**
 * Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
 *
 * Hash: 0xB93A769B8B726950 | Since: 1207
 *
 * @deprecated Use audio._0xB93A769B8B726950() instead
 */
export declare function _0xB93A769B8B726950(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xBC07CA8FD710E7FD | Since: 1232
 *
 * @deprecated Use audio._0xBC07CA8FD710E7FD() instead
 */
export declare function _0xBC07CA8FD710E7FD(): void;
/**
 * Checks for MOONSHINE_BAND
 *
 * Hash: 0xBE28DB99556FF8D9 | Since: 1207
 *
 * @deprecated Use audio._0xBE28DB99556FF8D9() instead
 */
export declare function _0xBE28DB99556FF8D9(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xC369E2234E34A0CA | Since: 1207
 *
 * @deprecated Use audio._0xC369E2234E34A0CA() instead
 */
export declare function _0xC369E2234E34A0CA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC4CFCE4C656EF480 | Since: 1207
 *
 * @deprecated Use audio._0xC4CFCE4C656EF480() instead
 */
export declare function _0xC4CFCE4C656EF480(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC68C02DE259C927C | Since: 1232
 *
 * @deprecated Use audio._0xC68C02DE259C927C() instead
 */
export declare function _0xC68C02DE259C927C(): any;
/**
 * No comment provided
 *
 * Hash: 0xC886CD666ADD42E1 | Since: 1207
 *
 * @deprecated Use audio._0xC886CD666ADD42E1() instead
 */
export declare function _0xC886CD666ADD42E1(): void;
/**
 * No comment provided
 *
 * Hash: 0xCBF2BEBB468A34F3 | Since: 1207
 *
 * @deprecated Use audio._0xCBF2BEBB468A34F3() instead
 */
export declare function _0xCBF2BEBB468A34F3(): void;
/**
 * No comment provided
 *
 * Hash: 0xCFAD2C8CD1054523 | Since: 1207
 *
 * @deprecated Use audio._0xCFAD2C8CD1054523() instead
 */
export declare function _0xCFAD2C8CD1054523(): void;
/**
 * No comment provided
 *
 * Hash: 0xD05A460328560477 | Since: 1232
 *
 * @deprecated Use audio._0xD05A460328560477() instead
 */
export declare function _0xD05A460328560477(): any;
/**
 * _IS_SCRIPTED_CONVERSATION_*
 *
 * Hash: 0xD0730C1FA40348D9 | Since: 1207
 *
 * @deprecated Use audio._0xD0730C1FA40348D9() instead
 */
export declare function _0xD0730C1FA40348D9(convoRoot: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD47D47EFBF103FB8 | Since: 1207
 *
 * @deprecated Use audio._0xD47D47EFBF103FB8() instead
 */
export declare function _0xD47D47EFBF103FB8(): void;
/**
 * No comment provided
 *
 * Hash: 0xD733528B6C35647A | Since: 1207
 *
 * @deprecated Use audio._0xD733528B6C35647A() instead
 */
export declare function _0xD733528B6C35647A(): void;
/**
 * No comment provided
 *
 * Hash: 0xDAD6CD07CAA4F382 | Since: 1207
 *
 * @deprecated Use audio._0xDAD6CD07CAA4F382() instead
 */
export declare function _0xDAD6CD07CAA4F382(): void;
/**
 * No comment provided
 *
 * Hash: 0xDC2F83A0612CA34D | Since: 1207
 *
 * @deprecated Use audio._0xDC2F83A0612CA34D() instead
 */
export declare function _0xDC2F83A0612CA34D(): any;
/**
 * No comment provided
 *
 * Hash: 0xDC93F0948F2C28F4 | Since: 1207
 *
 * @deprecated Use audio._0xDC93F0948F2C28F4() instead
 */
export declare function _0xDC93F0948F2C28F4(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF947FE0D551684E | Since: 1207
 *
 * @deprecated Use audio._0xDF947FE0D551684E() instead
 */
export declare function _0xDF947FE0D551684E(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE600F61F54A444A6 | Since: 1207
 *
 * @deprecated Use audio._0xE600F61F54A444A6() instead
 */
export declare function _0xE600F61F54A444A6(): any;
/**
 * No comment provided
 *
 * Hash: 0xE7E6CB8B713ED190 | Since: 1207
 *
 * @deprecated Use audio._0xE7E6CB8B713ED190() instead
 */
export declare function _0xE7E6CB8B713ED190(): void;
/**
 * No comment provided
 *
 * Hash: 0xE891504B2F0E2DBA | Since: 1207
 *
 * @deprecated Use audio._0xE891504B2F0E2DBA() instead
 */
export declare function _0xE891504B2F0E2DBA(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9694B2D6CB87B06 | Since: 1232
 *
 * @deprecated Use audio._0xE9694B2D6CB87B06() instead
 */
export declare function _0xE9694B2D6CB87B06(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xEA546C31FD45F8CD | Since: 1207
 *
 * @deprecated Use audio._0xEA546C31FD45F8CD() instead
 */
export declare function _0xEA546C31FD45F8CD(): void;
/**
 * No comment provided
 *
 * Hash: 0xEB4D592620B8C209 | Since: 1207
 *
 * @deprecated Use audio._0xEB4D592620B8C209() instead
 */
export declare function _0xEB4D592620B8C209(): void;
/**
 * Name: ROPE_SETTINGS_DEFAULT
 *
 * Hash: 0xF092B6030D6FD49C | Since: 1207
 *
 * @deprecated Use audio._0xF092B6030D6FD49C() instead
 */
export declare function _0xF092B6030D6FD49C(ropeId: number, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF0EE69F500952FA5 | Since: 1207
 *
 * @deprecated Use audio._0xF0EE69F500952FA5() instead
 */
export declare function _0xF0EE69F500952FA5(): any;
/**
 * No comment provided
 *
 * Hash: 0xF232C2C546AC16D0 | Since: 1207
 *
 * @deprecated Use audio._0xF232C2C546AC16D0() instead
 */
export declare function _0xF232C2C546AC16D0(): void;
/**
 * No comment provided
 *
 * Hash: 0xF336E9F989B3518F | Since: 1207
 *
 * @deprecated Use audio._0xF336E9F989B3518F() instead
 */
export declare function _0xF336E9F989B3518F(): number;
/**
 * No comment provided
 *
 * Hash: 0xF64034D533CE8AAC | Since: 1207
 *
 * @deprecated Use audio._0xF64034D533CE8AAC() instead
 */
export declare function _0xF64034D533CE8AAC(): void;
/**
 * No comment provided
 *
 * Hash: 0xFCDEC42B1C78B7F8 | Since: 1207
 *
 * @deprecated Use audio._0xFCDEC42B1C78B7F8() instead
 */
export declare function _0xFCDEC42B1C78B7F8(): void;
/**
 * No comment provided
 *
 * Hash: 0xFD461D0ABA5559B1 | Since: 1207
 *
 * @deprecated Use audio._0xFD461D0ABA5559B1() instead
 */
export declare function _0xFD461D0ABA5559B1(): void;
/**
 * No comment provided
 *
 * Hash: 0xFE5C6177064BD390 | Since: 1207
 *
 * @deprecated Use audio._0xFE5C6177064BD390() instead
 */
export declare function _0xFE5C6177064BD390(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFFE9C53DEEA3DB0B | Since: 1207
 *
 * @deprecated Use audio._0xFFE9C53DEEA3DB0B() instead
 */
export declare function _0xFFE9C53DEEA3DB0B(pos: Vector3, isSrlLoaded: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0x6378A235374B852F | Since: 1207
 *
 * @deprecated Use audio.blockSpeechContext() instead
 */
export declare function blockSpeechContext(context: string, block: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEF51242E35242B47 | Since: 1207
 *
 * @deprecated Use audio.clearConversationHistoryForScriptedConversation() instead
 */
export declare function clearConversationHistoryForScriptedConversation(convoRoot: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8B25A18E390F75BF | Since: 1207
 *
 * @deprecated Use audio.getEntityAudioMixGroup() instead
 */
export declare function getEntityAudioMixGroup(entity: number | Entity): number;
/**
 * Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
 * https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
 *
 * Hash: 0x0556C784FA056628 | Since: 1207
 *
 * @deprecated Use audio.getLoadedStreamIdFromCreation() instead
 */
export declare function getLoadedStreamIdFromCreation(streamName: string, soundSet: string): number;
/**
 * No comment provided
 *
 * Hash: 0x2DBBF0C5E19383EE | Since: 1232
 *
 * @deprecated Use audio.getPedSongIndexHost() instead
 */
export declare function getPedSongIndexHost(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x714A0EA7DE1167BE | Since: 1207
 *
 * @deprecated Use audio.hasSoundAudioNameFinished() instead
 */
export declare function hasSoundAudioNameFinished(audioName: string, soundsetName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x84848E1C0FC67DBB | Since: 1207
 *
 * @deprecated Use audio.hasSoundIdFinished() instead
 */
export declare function hasSoundIdFinished(soundId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA2CAC9DEF0195E6F | Since: 1207
 *
 * @deprecated Use audio.isAnyConversationPlaying() instead
 */
export declare function isAnyConversationPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x54B187F111D9C6F8 | Since: 1207
 *
 * @deprecated Use audio.isPedInAnyConversation() instead
 */
export declare function isPedInAnyConversation(ped: number | Ped): boolean;
/**
 * item: FUSE, value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 *
 * Hash: 0x6DF942C4179BE5AB | Since: 1207
 *
 * @deprecated Use audio.isScriptedAudioCustom() instead
 */
export declare function isScriptedAudioCustom(item: number | string, soundSet: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD89504D9D7D5057D | Since: 1207
 *
 * @deprecated Use audio.isScriptedConversationCreated() instead
 */
export declare function isScriptedConversationCreated(convoRoot: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF01C570E0A0A1E67 | Since: 1207
 *
 * @deprecated Use audio.isScriptedConversionOngoing() instead
 */
export declare function isScriptedConversionOngoing(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E53530D9B2DB01D | Since: 1311
 *
 * @deprecated Use audio.playAnimalVocalizationPheromoneVialResponse() instead
 */
export declare function playAnimalVocalizationPheromoneVialResponse(ped: number | Ped): void;
/**
 * Params: p5 seems to be always 0
 *
 * Hash: 0xF1C5310FEAA36B48 | Since: 1207
 *
 * @deprecated Use audio.playSoundFromEntityWithSet() instead
 */
export declare function playSoundFromEntityWithSet(soundId: number, soundName: string, entity: number | Entity, soundsetName: string): void;
/**
 * item: value returned from 0x2E1CDC1FF3B8473E
 * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
 *
 * Hash: 0xE8EAFF7B41EDD291 | Since: 1207
 *
 * @deprecated Use audio.playSoundFromItem() instead
 */
export declare function playSoundFromItem(item: number | string, soundSet: number | string): void;
/**
 * Old name: _PLAY_SOUND_FROM_POSITION
 *
 * Hash: 0xCCE219C922737BFA | Since: 1207
 *
 * @deprecated Use audio.playSoundFromCoord() instead
 */
export declare function playSoundFromCoord(SoundName: string, positionX: number, positionY: number, positionZ: number, SetName: string, bOverNetwork: boolean, nNetworkRange: number, isExteriorLoc: boolean): void;
/**
 * Starts Audio Loop
 * _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
 *
 * Hash: 0xDCF5BA95BBF0FABA | Since: 1207
 *
 * @deprecated Use audio.playSoundFromPositionWithId() instead
 */
export declare function playSoundFromPositionWithId(soundId: number, soundName: string, pos: Vector3, soundsetName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCE5D0FFE83939AF1 | Since: 1207
 *
 * @deprecated Use audio.playSoundFrontendWithSoundId() instead
 */
export declare function playSoundFrontendWithSoundId(soundId: number, name: string, soundSet: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9D746964E0CF2C5F | Since: 1207
 *
 * @deprecated Use audio.releaseShardSounds() instead
 */
export declare function releaseShardSounds(soundName: string, soundsetName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x531A78D6BF27014B | Since: 1207
 *
 * @deprecated Use audio.releaseSoundset() instead
 */
export declare function releaseSoundset(soundsetName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3743CE6948194349 | Since: 1207
 *
 * @deprecated Use audio.setAmbientZonePosition() instead
 */
export declare function setAmbientZonePosition(ambientZone: string, pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAC84686C06184B0D | Since: 1207
 *
 * @deprecated Use audio.setAudioSceneset() instead
 */
export declare function setAudioSceneset(audioName: string, sceneset: string): boolean;
/**
 * p1: Entity.Relationship
 * p2: Player, Enemy, Teammate, Neutral
 *
 * Hash: 0x2E31ACA7477CF00F | Since: 1207
 *
 * @deprecated Use audio.setSoundRelationshipOnPed() instead
 */
export declare function setSoundRelationshipOnPed(ped: number | Ped): void;
/**
 * Old Name: _SET_VARIABLE_ON_SOUND_WITH_ID
 *
 * Hash: 0x503703EC1781B7D6 | Since: 1207
 *
 * @deprecated Use audio.setVariableOnSound() instead
 */
export declare function setVariableOnSound(soundId: number, variableName: string, variableValue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9821B68CD3E05F2B | Since: 1207
 *
 * @deprecated Use audio.setVariableOnSoundWithName() instead
 */
export declare function setVariableOnSoundWithName(variableName: string, variableValue: number, audioName: string, audioRef: string): void;
/**
 * Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
 *
 * Hash: 0x2703EFB583F0949A | Since: 1207
 *
 * @deprecated Use audio.setVofxPedVoice() instead
 */
export declare function setVofxPedVoice(ped: number | Ped, voice: number | string): void;
/**
 * whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
 *
 * Hash: 0x9963681A8BC69BF3 | Since: 1207
 *
 * @deprecated Use audio.setWhistleConfigForPed() instead
 */
export declare function setWhistleConfigForPed(ped: number | Ped, whistleConfig: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6339C1EA3979B5F7 | Since: 1207
 *
 * @deprecated Use audio.startAudioSceneset() instead
 */
export declare function startAudioSceneset(audioName: string, sceneset: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E399EAFBEEA74D5 | Since: 1207
 *
 * @deprecated Use audio.stopAllScriptedAudioSounds() instead
 */
export declare function stopAllScriptedAudioSounds(): void;
/**
 * No comment provided
 *
 * Hash: 0x36559148B78853B3 | Since: 1207
 *
 * @deprecated Use audio.stopAllScriptedConversions() instead
 */
export declare function stopAllScriptedConversions(): void;
/**
 * No comment provided
 *
 * Hash: 0x9428447DED71FC7E | Since: 1207
 *
 * @deprecated Use audio.stopAudioSceneset() instead
 */
export declare function stopAudioSceneset(sceneset: string): void;
/**
 * Old Name: _STOP_SOUND_WITH_ID
 *
 * Hash: 0x3210BCB36AF7621B | Since: 1207
 *
 * @deprecated Use audio.stopSound() instead
 */
export declare function stopSound(soundId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F2A2175734926D8 | Since: 1207
 *
 * @deprecated Use audio.stopSoundWithName() instead
 */
export declare function stopSoundWithName(audioName: string, audioRef: string): void;
/**
 * No comment provided
 *
 * Hash: 0x05D6195FB4D428F4 | Since: 1207
 *
 * @deprecated Use audio.triggerMusicEventWithHash() instead
 */
export declare function triggerMusicEventWithHash(eventName: number | string): any;
/**
 * _UNLOAD_[A-C]* - USE_*
 *
 * Hash: 0x87E6302FC61208CC | Since: 1207
 *
 * @deprecated Use audio.unloadSpeechContext() instead
 */
export declare function unloadSpeechContext(speechContext: string): void;
/**
 * Only used in R* SP Scripts
 * Old Name: _UPDATE_SOUND_POSITION
 *
 * Hash: 0x0286617C8FC50A53 | Since: 1207
 *
 * @deprecated Use audio.updateSoundCoord() instead
 */
export declare function updateSoundCoord(soundId: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x4EF23E04A0C8FF51 | Since: 1207
 *
 * @deprecated Use bounty.bountyGetBountyOnPlayer() instead
 */
export declare function bountyGetBountyOnPlayer(gamerHandle: any, bountyData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8FAF4D262FABA99C | Since: 1207
 *
 * @deprecated Use bounty.bountyGetCooldownCollection() instead
 */
export declare function bountyGetCooldownCollection(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85E4D7B225A30ED1 | Since: 1207
 *
 * @deprecated Use bounty.bountyGetLegendaryTarget() instead
 */
export declare function bountyGetLegendaryTarget(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB395A44A0C7CA615 | Since: 1207
 *
 * @deprecated Use bounty.bountyGetWantedPosterSlot() instead
 */
export declare function bountyGetWantedPosterSlot(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC81D7C7A151CFAA | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestBeginLegendaryMission() instead
 */
export declare function bountyRequestBeginLegendaryMission(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x48E4E23F1739E197 | Since: 1311
 *
 * @deprecated Use bounty.bountyRequestBeginLegendaryMissionForPosse() instead
 */
export declare function bountyRequestBeginLegendaryMissionForPosse(outRpcGuid: any): boolean;
/**
 * _BOUNTY_IS_* or _BOUNTY_REQUEST_*
 *
 * Hash: 0x27D3A0E1FE090A43 | Since: 1207
 *
 * @deprecated Use bounty._0x27D3A0E1FE090A43() instead
 */
export declare function _0x27D3A0E1FE090A43(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x81847C2134039BDC | Since: 1207
 *
 * @deprecated Use bounty._0x81847C2134039BDC() instead
 */
export declare function _0x81847C2134039BDC(): boolean;
/**
 * _BOUNTY_C* or _BOUNTY_GET_*
 *
 * Hash: 0x86EC5F83867C4B70 | Since: 1436
 *
 * @deprecated Use bounty._0x86EC5F83867C4B70() instead
 */
export declare function _0x86EC5F83867C4B70(): boolean;
/**
 * _BOUNTY_GET_*
 *
 * Hash: 0xD6A67E2FF373D0E3 | Since: 1355
 *
 * @deprecated Use bounty._0xD6A67E2FF373D0E3() instead
 */
export declare function _0xD6A67E2FF373D0E3(): number;
/**
 * _BOUNTY_GET_*
 *
 * Hash: 0xF8BCC5ECA33AC9C1 | Since: 1207
 *
 * @deprecated Use bounty._0xF8BCC5ECA33AC9C1() instead
 */
export declare function _0xF8BCC5ECA33AC9C1(): number;
/**
 * No comment provided
 *
 * Hash: 0x2BA1BCC99826CDA2 | Since: 1207
 *
 * @deprecated Use bounty.bountyCancelLegendaryMission() instead
 */
export declare function bountyCancelLegendaryMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A9DF0FCD0C87FF9 | Since: 1207
 *
 * @deprecated Use bounty.bountyCancelWantedPoster() instead
 */
export declare function bountyCancelWantedPoster(): void;
/**
 * No comment provided
 *
 * Hash: 0xA59D1997ECD99F0A | Since: 1207
 *
 * @deprecated Use bounty.bountyClearBeingBountyHunter() instead
 */
export declare function bountyClearBeingBountyHunter(): void;
/**
 * No comment provided
 *
 * Hash: 0x932DB3C05A7465D1 | Since: 1207
 *
 * @deprecated Use bounty.bountyClearBeingTarget() instead
 */
export declare function bountyClearBeingTarget(): void;
/**
 * No comment provided
 *
 * Hash: 0x03B61CD51097DE60 | Since: 1207
 *
 * @deprecated Use bounty.bountyIsRequestPending() instead
 */
export declare function bountyIsRequestPending(rpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB096547D61868254 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestBecomeTargetOfCharacterBountyHunt() instead
 */
export declare function bountyRequestBecomeTargetOfCharacterBountyHunt(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFFA13742E43507E3 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestBeginWantedPoster() instead
 */
export declare function bountyRequestBeginWantedPoster(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x28717806D3BDD0D0 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestBribeJailGuard() instead
 */
export declare function bountyRequestBribeJailGuard(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9C3B0F746375162 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestClaimCharacterBounty() instead
 */
export declare function bountyRequestClaimCharacterBounty(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA7309AC0DCF6D950 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestCompleteLegendaryMission() instead
 */
export declare function bountyRequestCompleteLegendaryMission(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBD137BF0EC50FC9 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestCompleteSplitWantedPoster() instead
 */
export declare function bountyRequestCompleteSplitWantedPoster(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x727AB6F008BB9F29 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestCompleteWantedPoster() instead
 */
export declare function bountyRequestCompleteWantedPoster(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x12E981D53B07BF48 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestEscapedCharacterBountyHunt() instead
 */
export declare function bountyRequestEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x537CE992BD2D7BCB | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestPayOffBounty() instead
 */
export declare function bountyRequestPayOffBounty(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x587BCEC31D64F382 | Since: 1232
 *
 * @deprecated Use bounty.bountyRequestPayOffBountyEx() instead
 */
export declare function bountyRequestPayOffBountyEx(outRpcGuid: any, costType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B53CA0E2AC3FF45 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestPosseLeaderClaimCharacterBounty() instead
 */
export declare function bountyRequestPosseLeaderClaimCharacterBounty(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2D874BA20E8E1F20 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestPosseLeaderEscapedCharacterBountyHunt() instead
 */
export declare function bountyRequestPosseLeaderEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x22D3A61CE053270C | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestPosseMemberClaimCharacterBountyShare() instead
 */
export declare function bountyRequestPosseMemberClaimCharacterBountyShare(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8521C2E235558278 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestPosseMemberEscapedCharacterBountyHunt() instead
 */
export declare function bountyRequestPosseMemberEscapedCharacterBountyHunt(outRpcGuid: any): boolean;
/**
 * crimeType: see _REPORT_CRIME
 *
 * Hash: 0x188B748861B5BA17 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestSelfReportCrime() instead
 */
export declare function bountyRequestSelfReportCrime(outRpcGuid: any, crimeType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB462D69D406A2602 | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestSelfReportKilledByBountyHunter() instead
 */
export declare function bountyRequestSelfReportKilledByBountyHunter(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F73AED12A5EF0FF | Since: 1207
 *
 * @deprecated Use bounty.bountyRequestServedFullJailSentence() instead
 */
export declare function bountyRequestServedFullJailSentence(outRpcGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F44EA613A5B2676 | Since: 1207
 *
 * @deprecated Use brain.disableScriptBrainSet() instead
 */
export declare function disableScriptBrainSet(brainSet: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1CF6E5C6750EADBD | Since: 1207
 *
 * @deprecated Use brain.enableScriptBrainSet() instead
 */
export declare function enableScriptBrainSet(brainSet: number): void;
/**
 * Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
 * Alternative name _REGISTER_SCRIPT_BRAIN
 *
 * Old name: _PREPARE_SCRIPT_BRAIN
 *
 * Hash: 0xA32B0B05EFF75730 | Since: 1207
 *
 * @deprecated Use brain.reactivateAllObjectBrainsThatAreWaitingTillOutOfRange() instead
 */
export declare function reactivateAllObjectBrainsThatAreWaitingTillOutOfRange(): void;
/**
 * No comment provided
 *
 * Hash: 0x74C333E34DF74E8A | Since: 1207
 *
 * @deprecated Use brain.reactivateNamedObjectBrainsWaitingTillOutOfRange() instead
 */
export declare function reactivateNamedObjectBrainsWaitingTillOutOfRange(scriptName: string): void;
/**
 * Registers a script for any object with a specific model hash.
 *
 * Hash: 0x16AF9B4EEAC3B305 | Since: 1207
 *
 * @deprecated Use brain.registerObjectScriptBrain() instead
 */
export declare function registerObjectScriptBrain(scriptName: string, modelHash: number | string, activationRange: number): void;
/**
 * Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
 * _SET_SCRIPT_BRAIN*
 *
 * Hash: 0x4AA5EA1EDFB25786 | Since: 1207
 *
 * @deprecated Use brain._0x4AA5EA1EDFB25786() instead
 */
export declare function _0x4AA5EA1EDFB25786(flag: number): void;
/**
 * Common flags: 250, 99999
 * _SET_SCRIPT_BRAIN*
 *
 * Hash: 0xA6AC35DB4A7957A8 | Since: 1207
 *
 * @deprecated Use brain._0xA6AC35DB4A7957A8() instead
 */
export declare function _0xA6AC35DB4A7957A8(flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6818D1A194E29983 | Since: 1207
 *
 * @deprecated Use brain.getScriptBrainEntity() instead
 */
export declare function getScriptBrainEntity(): number;
/**
 * No comment provided
 *
 * Hash: 0x38F1E09224EECA09 | Since: 1311
 *
 * @deprecated Use brain.removeScriptBrainEntity() instead
 */
export declare function removeScriptBrainEntity(entity: number | Entity): void;
/**
 * Returns threadId
 *
 * Hash: 0x4E4507CC5E4DB869 | Since: 1207
 *
 * @deprecated Use brain.startPreloadedScriptBrain() instead
 */
export declare function startPreloadedScriptBrain(entity: number | Entity, scriptName: string, scriptStackSize: number): number;
/**
 * Returns threadId
 *
 * Hash: 0x6F62FAE266DCFC81 | Since: 1207
 *
 * @deprecated Use brain.startScriptBrain() instead
 */
export declare function startScriptBrain(entity: number | Entity, scriptName: string): number;
/**
 * Rounds a float value up to the next whole number
 *
 * Hash: 0x11E019C8F43ACC8A | Since: 1207
 *
 * @deprecated Use builtin.ceil() instead
 */
export declare function ceil(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD0FFB162F40A139C | Since: 1207
 *
 * @deprecated Use builtin.cos() instead
 */
export declare function cos(value: number): number;
/**
 * Rounds a float value down to the next whole number
 *
 * Hash: 0xF34EE736CF047844 | Since: 1207
 *
 * @deprecated Use builtin.floor() instead
 */
export declare function floor(value: number): number;
/**
 * Old name: _LOG10
 *
 * Hash: 0xE816E655DE37FE20 | Since: 1232
 *
 * @deprecated Use builtin.log10() instead
 */
export declare function log10(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE3621CC40F31FE2E | Since: 1207
 *
 * @deprecated Use builtin.pow() instead
 */
export declare function pow(base: number, exponent: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF2DB717A73826179 | Since: 1207
 *
 * @deprecated Use builtin.round() instead
 */
export declare function round(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC1B1E9A034A63A62 | Since: 1207
 *
 * @deprecated Use builtin.settimera() instead
 */
export declare function settimera(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5AE11BC36633DE4E | Since: 1207
 *
 * @deprecated Use builtin.settimerb() instead
 */
export declare function settimerb(value: number): void;
/**
 * THREAD_PRIO_HIGHEST = 0
 * THREAD_PRIO_NORMAL = 1
 * THREAD_PRIO_LOWEST = 2
 * THREAD_PRIO_MANUAL_UPDATE = 100
 *
 * Hash: 0x42B65DEEF2EDF2A1 | Since: 1207
 *
 * @deprecated Use builtin.setThisThreadPriority() instead
 */
export declare function setThisThreadPriority(priority: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEDD95A39E5544DE8 | Since: 1207
 *
 * @deprecated Use builtin.shiftLeft() instead
 */
export declare function shiftLeft(value: number, bitShift: number): number;
/**
 * No comment provided
 *
 * Hash: 0x97EF1E5BCE9DC075 | Since: 1207
 *
 * @deprecated Use builtin.shiftRight() instead
 */
export declare function shiftRight(value: number, bitShift: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0BADBFA3B172435F | Since: 1207
 *
 * @deprecated Use builtin.sin() instead
 */
export declare function sin(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x71D93B57D07F9804 | Since: 1207
 *
 * @deprecated Use builtin.sqrt() instead
 */
export declare function sqrt(value: number): number;
/**
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 *
 * Hash: 0x83666F9FB8FEBD4B | Since: 1207
 *
 * @deprecated Use builtin.timera() instead
 */
export declare function timera(): number;
/**
 * No comment provided
 *
 * Hash: 0xC9D9444186B5A374 | Since: 1207
 *
 * @deprecated Use builtin.timerb() instead
 */
export declare function timerb(): number;
/**
 * Gets the current frame time.
 *
 * Hash: 0x0000000050597EE2 | Since: 1207
 *
 * @deprecated Use builtin.timestep() instead
 */
export declare function timestep(): number;
/**
 * No comment provided
 *
 * Hash: 0xBBDA792448DB5A89 | Since: 1207
 *
 * @deprecated Use builtin.toFloat() instead
 */
export declare function toFloat(value: number): number;
/**
 * Calculates distance between vectors.
 * The value returned will be in meters.
 *
 * Hash: 0x2A488C176D52CCA5 | Since: 1207
 *
 * @deprecated Use builtin.vdist() instead
 */
export declare function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
 * The value returned will be in RAGE units.
 *
 * Hash: 0xB7A628320EFF8E47 | Since: 1207
 *
 * @deprecated Use builtin.vdist2() instead
 */
export declare function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * Calculates the magnitude of a vector.
 *
 * Hash: 0x652D2EEEF1D3E62C | Since: 1207
 *
 * @deprecated Use builtin.vmag() instead
 */
export declare function vmag(pos: Vector3): number;
/**
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 *
 * Hash: 0xA8CEACB4F35AE058 | Since: 1207
 *
 * @deprecated Use builtin.vmag2() instead
 */
export declare function vmag2(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x4EDE34FBADD967A6 | Since: 1207
 *
 * @deprecated Use builtin.wait() instead
 */
export declare function wait(ms: number): void;
/**
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 *
 * p8 big values ~100 will slow down the camera movement before reaching this node
 *
 * p9 != 0 seems to override the rotation/pitch (bool?)
 *
 * Hash: 0xF1F57F9D230F9CD1 | Since: 1207
 *
 * @deprecated Use cam.addCamSplineNode() instead
 */
export declare function addCamSplineNode(camera: number, pos: Vector3, rot: Vector3, length: number): void;
/**
 * No comment provided
 *
 * Hash: 0x42ED56B02E05D109 | Since: 1207
 *
 * @deprecated Use cam.allowMotionBlurDecay() instead
 */
export declare function allowMotionBlurDecay(cam: number): void;
/**
 * Last param determines if its relative to the Entity
 *
 * Hash: 0xFDC0DF7F6FB0A592 | Since: 1207
 *
 * @deprecated Use cam.attachCamToEntity() instead
 */
export declare function attachCamToEntity(cam: number, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 *
 * Hash: 0xDFC1E4A44C0324CA | Since: 1207
 *
 * @deprecated Use cam.attachCamToPedBone() instead
 */
export declare function attachCamToPedBone(cam: number, ped: number | Ped, boneIndex: number, pos: Vector3, heading: boolean): void;
/**
 * Only used in R* Script fm_mission_controller
 *
 * Hash: 0x0B0F914459731F60 | Since: 1311
 *
 * @deprecated Use cam.cinematicLocationOverrideTargetEntityThisUpdate() instead
 */
export declare function cinematicLocationOverrideTargetEntityThisUpdate(name: string, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6D4D25C2137FF511 | Since: 1207
 *
 * @deprecated Use cam.cinematicLocationStopScriptedShotEvent() instead
 */
export declare function cinematicLocationStopScriptedShotEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0x02389579A53C3276 | Since: 1207
 *
 * @deprecated Use cam.cinematicLocationTriggerScriptedShotEvent() instead
 */
export declare function cinematicLocationTriggerScriptedShotEvent(dictionary: string, shotName: string, cameraName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE72CDBA7F0A02DD6 | Since: 1207
 *
 * @deprecated Use cam.createCam() instead
 */
export declare function createCam(camName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x57CDF879EA466C46 | Since: 1207
 *
 * @deprecated Use cam.createCamera() instead
 */
export declare function createCamera(camHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x98B99B9F27E2D60B | Since: 1207
 *
 * @deprecated Use cam.createCameraWithParams() instead
 */
export declare function createCameraWithParams(camHash: number | string, pos: Vector3, rot: Vector3, fov: number): number;
/**
 * No comment provided
 *
 * Hash: 0x40C23491CE83708E | Since: 1207
 *
 * @deprecated Use cam.createCamWithParams() instead
 */
export declare function createCamWithParams(camName: string, pos: Vector3, rot: Vector3, fov: number): number;
/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * Hash: 0x163600D6E136C9F8 | Since: 1207
 *
 * @deprecated Use cam.destroyAllCams() instead
 */
export declare function destroyAllCams(): void;
/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * Hash: 0x4E67E0B6D7FD5145 | Since: 1207
 *
 * @deprecated Use cam.destroyCam() instead
 */
export declare function destroyCam(cam: number): void;
/**
 * No comment provided
 *
 * Hash: 0x05B41DDBEB559556 | Since: 1207
 *
 * @deprecated Use cam.detachCam() instead
 */
export declare function detachCam(cam: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7E3F546ACFE6C8D9 | Since: 1207
 *
 * @deprecated Use cam.disableCamCollisionForObject() instead
 */
export declare function disableCamCollisionForObject(entity: number | Entity): void;
/**
 * Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
 *
 * Hash: 0xA5929C2E57AC90D1 | Since: 1207
 *
 * @deprecated Use cam.disableCinematicBonnetCameraThisUpdate() instead
 */
export declare function disableCinematicBonnetCameraThisUpdate(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x77D65669A05D1A1A | Since: 1207
 *
 * @deprecated Use cam.disableFirstPersonFlashEffectThisUpdate() instead
 */
export declare function disableFirstPersonFlashEffectThisUpdate(): void;
/**
 * Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
 *
 * Hash: 0x9C473089A934C930 | Since: 1207
 *
 * @deprecated Use cam.disableOnFootFirstPersonViewThisUpdate() instead
 */
export declare function disableOnFootFirstPersonViewThisUpdate(): void;
/**
 * Returns whether or not the passed camera handle exists.
 *
 * Hash: 0x153AD457764FD704 | Since: 1207
 *
 * @deprecated Use cam.doesCamExist() instead
 */
export declare function doesCamExist(cam: number): boolean;
/**
 * Fades the screen in.
 *
 * duration: The time the fade should take, in milliseconds.
 *
 * Hash: 0x6A053CF596F67DF7 | Since: 1207
 *
 * @deprecated Use cam.doScreenFadeIn() instead
 */
export declare function doScreenFadeIn(duration: number): void;
/**
 * Fades the screen out.
 *
 * duration: The time the fade should take, in milliseconds.
 *
 * Hash: 0x40C719A5E410B9E4 | Since: 1207
 *
 * @deprecated Use cam.doScreenFadeOut() instead
 */
export declare function doScreenFadeOut(duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x702B75DC9D3EDE56 | Since: 1207
 *
 * @deprecated Use cam.forceCinematicRenderingThisUpdate() instead
 */
export declare function forceCinematicRenderingThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B12F11C2A9F0344 | Since: 1207
 *
 * @deprecated Use cam.getCamCoord() instead
 */
export declare function getCamCoord(cam: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x8101D32A0A6B0F60 | Since: 1207
 *
 * @deprecated Use cam.getCamFov() instead
 */
export declare function getCamFov(cam: number): number;
/**
 * rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
 *
 * Hash: 0x9BF96B57254E7889 | Since: 1207
 *
 * @deprecated Use cam.getCamRot() instead
 */
export declare function getCamRot(cam: number, rotationOrder: number): Vector3;
/**
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 *
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 *
 * Hash: 0x095EDCD24D90033A | Since: 1207
 *
 * @deprecated Use cam.getCamSplinePhase() instead
 */
export declare function getCamSplinePhase(cam: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5352E025EC2B416F | Since: 1207
 *
 * @deprecated Use cam.getFinalRenderedCamCoord() instead
 */
export declare function getFinalRenderedCamCoord(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x04AF77971E508F6A | Since: 1207
 *
 * @deprecated Use cam.getFinalRenderedCamFov() instead
 */
export declare function getFinalRenderedCamFov(): number;
/**
 * No comment provided
 *
 * Hash: 0x602685BD85DD26CA | Since: 1207
 *
 * @deprecated Use cam.getFinalRenderedCamRot() instead
 */
export declare function getFinalRenderedCamRot(rotationOrder: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xB4132CA1B0EE1365 | Since: 1207
 *
 * @deprecated Use cam.getFirstPersonAimCamZoomFactor() instead
 */
export declare function getFirstPersonAimCamZoomFactor(): number;
/**
 * No comment provided
 *
 * Hash: 0x595320200B98596E | Since: 1207
 *
 * @deprecated Use cam.getGameplayCamCoord() instead
 */
export declare function getGameplayCamCoord(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xF6A96E5ACEEC6E50 | Since: 1207
 *
 * @deprecated Use cam.getGameplayCamFov() instead
 */
export declare function getGameplayCamFov(): number;
/**
 * No comment provided
 *
 * Hash: 0xC4ABF536048998AA | Since: 1207
 *
 * @deprecated Use cam.getGameplayCamRelativeHeading() instead
 */
export declare function getGameplayCamRelativeHeading(): number;
/**
 * No comment provided
 *
 * Hash: 0x99AADEBBA803F827 | Since: 1207
 *
 * @deprecated Use cam.getGameplayCamRelativePitch() instead
 */
export declare function getGameplayCamRelativePitch(): number;
/**
 * No comment provided
 *
 * Hash: 0x0252D2B5582957A6 | Since: 1207
 *
 * @deprecated Use cam.getGameplayCamRot() instead
 */
export declare function getGameplayCamRot(rotationOrder: number): Vector3;
/**
 * More info: see HAS_LETTER_BOX
 *
 * Hash: 0xA2B1C7EF759A63CE | Since: 1207
 *
 * @deprecated Use cam.getLetterBoxRatio() instead
 */
export declare function getLetterBoxRatio(): number;
/**
 * No comment provided
 *
 * Hash: 0x03A8931ECC8015D6 | Since: 1207
 *
 * @deprecated Use cam.getRenderingCam() instead
 */
export declare function getRenderingCam(): number;
/**
 * More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
 *
 * Hash: 0x81DCFD13CF39920E | Since: 1207
 *
 * @deprecated Use cam.hasLetterBox() instead
 */
export declare function hasLetterBox(): boolean;
/**
 * Old name: _INVALIDATE_VEHICLE_IDLE_CAM
 *
 * Hash: 0x634F4A0562CF19B8 | Since: 1207
 *
 * @deprecated Use cam.invalidateCinematicVehicleIdleMode() instead
 */
export declare function invalidateCinematicVehicleIdleMode(): void;
/**
 * No comment provided
 *
 * Hash: 0x698F456FB909E077 | Since: 1232
 *
 * @deprecated Use cam.isAimCamActive() instead
 */
export declare function isAimCamActive(): boolean;
/**
 * Returns whether or not the passed camera handle is active.
 *
 * Hash: 0x63EFCC7E1810B8E6 | Since: 1207
 *
 * @deprecated Use cam.isCamActive() instead
 */
export declare function isCamActive(cam: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x578F8F1CAA17BD2B | Since: 1207
 *
 * @deprecated Use cam.isCamInterpolating() instead
 */
export declare function isCamInterpolating(cam: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4415F8A6C536D39F | Since: 1207
 *
 * @deprecated Use cam.isCamRendering() instead
 */
export declare function isCamRendering(cam: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2EEB402BD7320159 | Since: 1207
 *
 * @deprecated Use cam.isCamShaking() instead
 */
export declare function isCamShaking(cam: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBF7C780731AADBF8 | Since: 1207
 *
 * @deprecated Use cam.isCinematicCamRendering() instead
 */
export declare function isCinematicCamRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x139EFB0A71DD9011 | Since: 1207
 *
 * @deprecated Use cam.isDeathFailCameraRunning() instead
 */
export declare function isDeathFailCameraRunning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF63134C54B6EC212 | Since: 1207
 *
 * @deprecated Use cam.isFirstPersonAimCamActive() instead
 */
export declare function isFirstPersonAimCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA24C1D341C6E0D53 | Since: 1207
 *
 * @deprecated Use cam.isFirstPersonCameraActive() instead
 */
export declare function isFirstPersonCameraActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA40C2F51FB589E9A | Since: 1207
 *
 * @deprecated Use cam.isFollowVehicleCamActive() instead
 */
export declare function isFollowVehicleCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8FE0D24FFD04D5A2 | Since: 1207
 *
 * @deprecated Use cam.isGameplayCamLookingBehind() instead
 */
export declare function isGameplayCamLookingBehind(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8660EA714834E412 | Since: 1207
 *
 * @deprecated Use cam.isGameplayCamRendering() instead
 */
export declare function isGameplayCamRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA4C5F4AA0A4DBEF | Since: 1207
 *
 * @deprecated Use cam.isGameplayCamShaking() instead
 */
export declare function isGameplayCamShaking(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E04AB5FEE042D4A | Since: 1207
 *
 * @deprecated Use cam.isGameplayHintActive() instead
 */
export declare function isGameplayHintActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x251241CAEC707106 | Since: 1207
 *
 * @deprecated Use cam.isInterpolatingFromScriptCams() instead
 */
export declare function isInterpolatingFromScriptCams(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x43AB9D5A7D415478 | Since: 1207
 *
 * @deprecated Use cam.isInterpolatingToScriptCams() instead
 */
export declare function isInterpolatingToScriptCams(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x37F9A426FBCF4AF2 | Since: 1207
 *
 * @deprecated Use cam.isScreenFadedIn() instead
 */
export declare function isScreenFadedIn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF5472C80DF2FF847 | Since: 1207
 *
 * @deprecated Use cam.isScreenFadedOut() instead
 */
export declare function isScreenFadedOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CECCC63FFA2EF24 | Since: 1207
 *
 * @deprecated Use cam.isScreenFadingIn() instead
 */
export declare function isScreenFadingIn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02F39BEFE7B88D00 | Since: 1207
 *
 * @deprecated Use cam.isScreenFadingOut() instead
 */
export declare function isScreenFadingOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E941B5FFA2989C6 | Since: 1207
 *
 * @deprecated Use cam.isSphereVisible() instead
 */
export declare function isSphereVisible(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA263DDF694D563F6 | Since: 1207
 *
 * @deprecated Use cam.playCamAnim() instead
 */
export declare function playCamAnim(cam: number, animName: string, animDictionary: string, pos: Vector3, rot: Vector3, animFlags: number, rotOrder: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x948B39341C3A40C2 | Since: 1207
 *
 * @deprecated Use cam.pointCamAtCoord() instead
 */
export declare function pointCamAtCoord(cam: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xFC2867E6074D3A61 | Since: 1207
 *
 * @deprecated Use cam.pointCamAtEntity() instead
 */
export declare function pointCamAtEntity(cam: number, entity: number | Entity): void;
/**
 * ease - smooth transition between the camera's positions
 * easeTime - Time in milliseconds for the transition to happen
 *
 * If you have created a script (rendering) camera, and want to go back to the
 * character (gameplay) camera, call this native with render set to FALSE.
 * Setting ease to TRUE will smooth the transition.
 *
 * Hash: 0x33281167E4942E4F | Since: 1207
 *
 * @deprecated Use cam.renderScriptCams() instead
 */
export declare function renderScriptCams(render: boolean, ease: boolean, easeTime: number): void;
/**
 * Set camera as active/inactive.
 *
 * Hash: 0x87295BCA613800C8 | Since: 1207
 *
 * @deprecated Use cam.setCamActive() instead
 */
export declare function setCamActive(cam: number, active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8B15AE2987C1AC8F | Since: 1207
 *
 * @deprecated Use cam.setCamActiveWithInterp() instead
 */
export declare function setCamActiveWithInterp(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number): void;
/**
 * Allows you to aim and shoot at the direction the camera is facing.
 *
 * Hash: 0x3CB9E8BDE5E76F33 | Since: 1207
 *
 * @deprecated Use cam.setCamAffectsAiming() instead
 */
export declare function setCamAffectsAiming(cam: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1B8F3CE5A6001298 | Since: 1207
 *
 * @deprecated Use cam.setCamControlsMiniMapHeading() instead
 */
export declare function setCamControlsMiniMapHeading(cam: number): void;
/**
 * Sets the position of the cam.
 *
 * Hash: 0xF9EE7D419EE49DE6 | Since: 1207
 *
 * @deprecated Use cam.setCamCoord() instead
 */
export declare function setCamCoord(cam: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x5E32817BF6302111 | Since: 1207
 *
 * @deprecated Use cam.setCamFarClip() instead
 */
export declare function setCamFarClip(cam: number, farClip: number): void;
/**
 * Sets the field of view of the cam.
 *
 * Min: 1.0f
 * Max: 130.0f
 *
 * Hash: 0x27666E5988D9D429 | Since: 1207
 *
 * @deprecated Use cam.setCamFov() instead
 */
export declare function setCamFov(cam: number, fieldOfView: number): void;
/**
 * No comment provided
 *
 * Hash: 0x45FD891364181F9E | Since: 1207
 *
 * @deprecated Use cam.setCamMotionBlurStrength() instead
 */
export declare function setCamMotionBlurStrength(cam: number, strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA924028272A61364 | Since: 1207
 *
 * @deprecated Use cam.setCamNearClip() instead
 */
export declare function setCamNearClip(cam: number, nearClip: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA47BBFFFB83D4D0A | Since: 1207
 *
 * @deprecated Use cam.setCamParams() instead
 */
export declare function setCamParams(cam: number, pos: Vector3, rot: Vector3, fieldOfView: number): void;
/**
 * Sets the rotation of the cam.
 *
 * Hash: 0x63DFA6810AD78719 | Since: 1207
 *
 * @deprecated Use cam.setCamRot() instead
 */
export declare function setCamRot(cam: number, rot: Vector3, rotationOrder: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFF6311652CA91015 | Since: 1207
 *
 * @deprecated Use cam.setCamSplineDuration() instead
 */
export declare function setCamSplineDuration(cam: number, timeDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF1898A68E7C15636 | Since: 1207
 *
 * @deprecated Use cam.setCamSplinePhase() instead
 */
export declare function setCamSplinePhase(cam: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84B3645618E726B0 | Since: 1207
 *
 * @deprecated Use cam.setCamSplineSmoothingStyle() instead
 */
export declare function setCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB90411F480457A6C | Since: 1207
 *
 * @deprecated Use cam.setCinematicButtonActive() instead
 */
export declare function setCinematicButtonActive(): void;
/**
 * No comment provided
 *
 * Hash: 0xCE7A90B160F75046 | Since: 1207
 *
 * @deprecated Use cam.setCinematicModeActive() instead
 */
export declare function setCinematicModeActive(): void;
/**
 * No comment provided
 *
 * Hash: 0x05BD5E4088B30A66 | Since: 1207
 *
 * @deprecated Use cam.setFirstPersonAimCamRelativeHeadingLimitsThisUpdate() instead
 */
export declare function setFirstPersonAimCamRelativeHeadingLimitsThisUpdate(): void;
/**
 * Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
 *
 * Hash: 0x715B7F5E8BED32A2 | Since: 1207
 *
 * @deprecated Use cam.setFirstPersonAimCamRelativePitchLimitsThisUpdate() instead
 */
export declare function setFirstPersonAimCamRelativePitchLimitsThisUpdate(): void;
/**
 * Forces gameplay cam to specified ped as if you were the ped or spectating it
 *
 * Hash: 0x82E41D6ADE924FCA | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamFollowPedThisUpdate() instead
 */
export declare function setGameplayCamFollowPedThisUpdate(ped: number | Ped): void;
/**
 * Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
 *
 * Hash: 0xD904F75DBD7AB865 | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamIgnoreEntityCollisionThisUpdate() instead
 */
export declare function setGameplayCamIgnoreEntityCollisionThisUpdate(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x8459B3E64257B21D | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamMaxMotionBlurStrengthThisUpdate() instead
 */
export declare function setGameplayCamMaxMotionBlurStrengthThisUpdate(): void;
/**
 * Sets the camera position relative to heading in float from -360 to +360.
 *
 * Heading is always 0 in aiming camera.
 *
 * Hash: 0x5D1EB123EAC5D071 | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamRelativeHeading() instead
 */
export declare function setGameplayCamRelativeHeading(heading: number): void;
/**
 * Sets the camera pitch.
 *
 * Parameters:
 * x = pitches the camera on the x axis.
 * Value2 = always seems to be hex 0x3F800000 (1.000000 float).
 *
 * Hash: 0xFB760AF4F537B8BF | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamRelativePitch() instead
 */
export declare function setGameplayCamRelativePitch(x: number, Value2: number): void;
/**
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
 *
 * Hash: 0x570E35F5C4A44838 | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamShakeAmplitude() instead
 */
export declare function setGameplayCamShakeAmplitude(amplitude: number): void;
/**
 * Hash used in finale1.ysc: 1726668277
 *
 * Hash: 0xFA33B8C69A4A6A0F | Since: 1207
 *
 * @deprecated Use cam.setGameplayCoordHint() instead
 */
export declare function setGameplayCoordHint(pos: Vector3, duration: number, blendOutDuration: number, blendInDuration: number): void;
/**
 * p6 & p7 - possibly length or time
 *
 * Hash: 0xD1F7F32640ADFD12 | Since: 1207
 *
 * @deprecated Use cam.setGameplayEntityHint() instead
 */
export declare function setGameplayEntityHint(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x421192A2DA48FD01 | Since: 1207
 *
 * @deprecated Use cam.setGameplayHintBaseOrbitPitchOffset() instead
 */
export declare function setGameplayHintBaseOrbitPitchOffset(): void;
/**
 * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
 *
 * Hash: 0xF86B6F93727C59C9 | Since: 1207
 *
 * @deprecated Use cam.setGameplayHintCameraRelativeSideOffset() instead
 */
export declare function setGameplayHintCameraRelativeSideOffset(): void;
/**
 * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
 *
 * Hash: 0x29E74F819150CC32 | Since: 1207
 *
 * @deprecated Use cam.setGameplayHintCameraRelativeVerticalOffset() instead
 */
export declare function setGameplayHintCameraRelativeVerticalOffset(): void;
/**
 * No comment provided
 *
 * Hash: 0xDDDC54181868F81F | Since: 1207
 *
 * @deprecated Use cam.setGameplayHintFollowDistanceScalar() instead
 */
export declare function setGameplayHintFollowDistanceScalar(): void;
/**
 * No comment provided
 *
 * Hash: 0x661E58BC6F00A49A | Since: 1207
 *
 * @deprecated Use cam.setGameplayHintFov() instead
 */
export declare function setGameplayHintFov(FOV: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC40551D65F2BF297 | Since: 1207
 *
 * @deprecated Use cam.setGameplayObjectHint() instead
 */
export declare function setGameplayObjectHint(): void;
/**
 * No comment provided
 *
 * Hash: 0x90FB951648851733 | Since: 1207
 *
 * @deprecated Use cam.setGameplayPedHint() instead
 */
export declare function setGameplayPedHint(x1: number, y1: number, z1: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE2B2BB7DAC280515 | Since: 1207
 *
 * @deprecated Use cam.setGameplayVehicleHint() instead
 */
export declare function setGameplayVehicleHint(): void;
/**
 * Forces gameplay cam to specified vehicle as if you were in it
 *
 * Hash: 0xFA1D5E8D1C3CCD67 | Since: 1207
 *
 * @deprecated Use cam.setInVehicleCamStateThisUpdate() instead
 */
export declare function setInVehicleCamStateThisUpdate(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1DD95A8D6B24A0C9 | Since: 1207
 *
 * @deprecated Use cam.setScriptedCameraIsFirstPersonThisFrame() instead
 */
export declare function setScriptedCameraIsFirstPersonThisFrame(): void;
/**
 * Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
 *
 * Hash: 0x2126C740A4AC370B | Since: 1207
 *
 * @deprecated Use cam.setThirdPersonCamOrbitDistanceLimitsThisUpdate() instead
 */
export declare function setThirdPersonCamOrbitDistanceLimitsThisUpdate(distance: number): void;
/**
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 *
 * Clamps the gameplay camera's current yaw.
 *
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 *
 * Old name: _CLAMP_GAMEPLAY_CAM_YAW
 *
 * Hash: 0x14F3947318CA8AD2 | Since: 1207
 *
 * @deprecated Use cam.setThirdPersonCamRelativeHeadingLimitsThisUpdate() instead
 */
export declare function setThirdPersonCamRelativeHeadingLimitsThisUpdate(minimum: number, maximum: number): void;
/**
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 *
 * Clamps the gameplay camera's current pitch.
 *
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 *
 * Old name: _CLAMP_GAMEPLAY_CAM_PITCH
 *
 * Hash: 0x326C7AA308F3DF6A | Since: 1207
 *
 * @deprecated Use cam.setThirdPersonCamRelativePitchLimitsThisUpdate() instead
 */
export declare function setThirdPersonCamRelativePitchLimitsThisUpdate(minimum: number, maximum: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD7F4D54CF80AFA34 | Since: 1207
 *
 * @deprecated Use cam.setWidescreenBorders() instead
 */
export declare function setWidescreenBorders(): void;
/**
 * No comment provided
 *
 * Hash: 0xF9A7BCF5D050D4E7 | Since: 1207
 *
 * @deprecated Use cam.shakeCam() instead
 */
export declare function shakeCam(cam: number, type: string, amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD9B31B4650520529 | Since: 1207
 *
 * @deprecated Use cam.shakeGameplayCam() instead
 */
export declare function shakeGameplayCam(shakeName: string, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCA1B30A3357C71F1 | Since: 1207
 *
 * @deprecated Use cam.stopCamPointing() instead
 */
export declare function stopCamPointing(cam: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB78CC4B4706614B0 | Since: 1207
 *
 * @deprecated Use cam.stopCamShaking() instead
 */
export declare function stopCamShaking(cam: number): void;
/**
 * No comment provided
 *
 * Hash: 0x93759A83D0D844E7 | Since: 1207
 *
 * @deprecated Use cam.stopCodeGameplayHint() instead
 */
export declare function stopCodeGameplayHint(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0DE43D290FB65F9 | Since: 1207
 *
 * @deprecated Use cam.stopGameplayCamShaking() instead
 */
export declare function stopGameplayCamShaking(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BCEC33D54CFCA8A | Since: 1207
 *
 * @deprecated Use cam.stopGameplayHint() instead
 */
export declare function stopGameplayHint(): void;
/**
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 * blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
 *
 * Hash: 0x8C7C7FF7CF0E5153 | Since: 1207
 *
 * @deprecated Use cam.stopRenderingScriptCamsUsingCatchUp() instead
 */
export declare function stopRenderingScriptCamsUsingCatchUp(render: boolean, distance: number, blendBackSmoothingType: number): void;
/**
 * shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
 * _IS_GAMEPLAY_*
 *
 * Hash: 0x0060B31968E60E41 | Since: 1207
 *
 * @deprecated Use cam._0x0060B31968E60E41() instead
 */
export declare function _0x0060B31968E60E41(shakeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x04084490CC302CFB | Since: 1207
 *
 * @deprecated Use cam._0x04084490CC302CFB() instead
 */
export declare function _0x04084490CC302CFB(): void;
/**
 * No comment provided
 *
 * Hash: 0x06557F6D96C86881 | Since: 1207
 *
 * @deprecated Use cam._0x06557F6D96C86881() instead
 */
export declare function _0x06557F6D96C86881(): void;
/**
 * Not official name
 * This native allows to move the gameplay cam with the given speed, enableSlide will allow to move the cam to the slideOffset, enableZoom will allow to move the cam to the zoomOffset.
 *
 * EXAMPLE:
 * Citizen.InvokeNative(0x066167c63111d8cf,1.0, true, -1.0, true, 2.0)
 *
 * Hash: 0x066167C63111D8CF | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamParamsThisUpdate() instead
 */
export declare function setGameplayCamParamsThisUpdate(camSpeed: number, enableSlide: boolean, slideOffset: number, enableZoom: boolean, zoomOffset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0961B089947BA6D0 | Since: 1207
 *
 * @deprecated Use cam._0x0961B089947BA6D0() instead
 */
export declare function _0x0961B089947BA6D0(): void;
/**
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 *
 * Hash: 0x0F1FFEF5D54AE832 | Since: 1207
 *
 * @deprecated Use cam._0x0F1FFEF5D54AE832() instead
 */
export declare function _0x0F1FFEF5D54AE832(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FF7125F07DEB84F | Since: 1207
 *
 * @deprecated Use cam._0x0FF7125F07DEB84F() instead
 */
export declare function _0x0FF7125F07DEB84F(): void;
/**
 * Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
 * _IS_SC(REEN_)* (?)
 *
 * Hash: 0x1204EB53A5FBC63D | Since: 1207
 *
 * @deprecated Use cam._0x1204EB53A5FBC63D() instead
 */
export declare function _0x1204EB53A5FBC63D(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x14C4A49E36C29E49 | Since: 1207
 *
 * @deprecated Use cam._0x14C4A49E36C29E49() instead
 */
export declare function _0x14C4A49E36C29E49(): any;
/**
 * No comment provided
 *
 * Hash: 0x16E9ABDD34DDD931 | Since: 1207
 *
 * @deprecated Use cam._0x16E9ABDD34DDD931() instead
 */
export declare function _0x16E9ABDD34DDD931(): void;
/**
 * No comment provided
 *
 * Hash: 0x1811A02277A9E49D | Since: 1207
 *
 * @deprecated Use cam._0x1811A02277A9E49D() instead
 */
export declare function _0x1811A02277A9E49D(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x18C3DFAC458783BB | Since: 1207
 *
 * @deprecated Use cam._0x18C3DFAC458783BB() instead
 */
export declare function _0x18C3DFAC458783BB(): void;
/**
 * No comment provided
 *
 * Hash: 0x190F7DA1AC09A8EF | Since: 1207
 *
 * @deprecated Use cam._0x190F7DA1AC09A8EF() instead
 */
export declare function _0x190F7DA1AC09A8EF(): any;
/**
 * No comment provided
 *
 * Hash: 0x1D931B7CC0EE3956 | Since: 1436
 *
 * @deprecated Use cam._0x1D931B7CC0EE3956() instead
 */
export declare function _0x1D931B7CC0EE3956(dictionary: string, shotName: string, cameraName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1D9F72DD4FD9A9D7 | Since: 1207
 *
 * @deprecated Use cam._0x1D9F72DD4FD9A9D7() instead
 */
export declare function _0x1D9F72DD4FD9A9D7(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F6EBD94680252CE | Since: 1207
 *
 * @deprecated Use cam._0x1F6EBD94680252CE() instead
 */
export declare function _0x1F6EBD94680252CE(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FC6C727D30FFDDE | Since: 1207
 *
 * @deprecated Use cam._0x1FC6C727D30FFDDE() instead
 */
export declare function _0x1FC6C727D30FFDDE(): void;
/**
 * No comment provided
 *
 * Hash: 0x29E6655DF3590B0D | Since: 1207
 *
 * @deprecated Use cam._0x29E6655DF3590B0D() instead
 */
export declare function _0x29E6655DF3590B0D(): void;
/**
 * No comment provided
 *
 * Hash: 0x2AB7C81B3F70570C | Since: 1207
 *
 * @deprecated Use cam._0x2AB7C81B3F70570C() instead
 */
export declare function _0x2AB7C81B3F70570C(): any;
/**
 * No comment provided
 *
 * Hash: 0x2DD3149DC34A3F4C | Since: 1207
 *
 * @deprecated Use cam._0x2DD3149DC34A3F4C() instead
 */
export declare function _0x2DD3149DC34A3F4C(): void;
/**
 * No comment provided
 *
 * Hash: 0x39073DA4EDDBC91D | Since: 1207
 *
 * @deprecated Use cam._0x39073DA4EDDBC91D() instead
 */
export declare function _0x39073DA4EDDBC91D(): void;
/**
 * No comment provided
 *
 * Hash: 0x3B8E3AD9677CE12B | Since: 1207
 *
 * @deprecated Use cam._0x3B8E3AD9677CE12B() instead
 */
export declare function _0x3B8E3AD9677CE12B(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C486E334520579D | Since: 1207
 *
 * @deprecated Use cam._0x3C486E334520579D() instead
 */
export declare function _0x3C486E334520579D(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C8F74E8FE751614 | Since: 1207
 *
 * @deprecated Use cam._0x3C8F74E8FE751614() instead
 */
export declare function _0x3C8F74E8FE751614(): void;
/**
 * No comment provided
 *
 * Hash: 0x4138EE36BC3DC0A7 | Since: 1207
 *
 * @deprecated Use cam._0x4138EE36BC3DC0A7() instead
 */
export declare function _0x4138EE36BC3DC0A7(): any;
/**
 * No comment provided
 *
 * Hash: 0x41E452A3C580D1A7 | Since: 1207
 *
 * @deprecated Use cam._0x41E452A3C580D1A7() instead
 */
export declare function _0x41E452A3C580D1A7(): void;
/**
 * No comment provided
 *
 * Hash: 0x450769C833D58844 | Since: 1207
 *
 * @deprecated Use cam._0x450769C833D58844() instead
 */
export declare function _0x450769C833D58844(): any;
/**
 * No comment provided
 *
 * Hash: 0x465F04F68AD38197 | Since: 1207
 *
 * @deprecated Use cam._0x465F04F68AD38197() instead
 */
export declare function _0x465F04F68AD38197(dictionary: string, shotName: string, duration: number): any;
/**
 * No comment provided
 *
 * Hash: 0x4D2F46D1B28D90FB | Since: 1207
 *
 * @deprecated Use cam._0x4D2F46D1B28D90FB() instead
 */
export declare function _0x4D2F46D1B28D90FB(): void;
/**
 * No comment provided
 *
 * Hash: 0x5060FA977CEA4455 | Since: 1207
 *
 * @deprecated Use cam._0x5060FA977CEA4455() instead
 */
export declare function _0x5060FA977CEA4455(): any;
/**
 * No comment provided
 *
 * Hash: 0x5B637D6F3B67716A | Since: 1207
 *
 * @deprecated Use cam._0x5B637D6F3B67716A() instead
 */
export declare function _0x5B637D6F3B67716A(): void;
/**
 * No comment provided
 *
 * Hash: 0x6072B7420A83A03F | Since: 1207
 *
 * @deprecated Use cam._0x6072B7420A83A03F() instead
 */
export declare function _0x6072B7420A83A03F(): any;
/**
 * Zooms in the gameplay camera to the next zoom level?
 * USE_* - WAS_*
 *
 * Hash: 0x632BE8D84846FA56 | Since: 1207
 *
 * @deprecated Use cam._0x632BE8D84846FA56() instead
 */
export declare function _0x632BE8D84846FA56(): void;
/**
 * Maintains the death camera after respawn
 *
 * Hash: 0x63E5841A9264D016 | Since: 1207
 *
 * @deprecated Use cam._0x63E5841A9264D016() instead
 */
export declare function _0x63E5841A9264D016(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x641092322A8852AB | Since: 1207
 *
 * @deprecated Use cam._0x641092322A8852AB() instead
 */
export declare function _0x641092322A8852AB(): void;
/**
 * No comment provided
 *
 * Hash: 0x6519238858AF5479 | Since: 1207
 *
 * @deprecated Use cam._0x6519238858AF5479() instead
 */
export declare function _0x6519238858AF5479(): void;
/**
 * No comment provided
 *
 * Hash: 0x6CAB0BA160B168D2 | Since: 1207
 *
 * @deprecated Use cam._0x6CAB0BA160B168D2() instead
 */
export declare function _0x6CAB0BA160B168D2(): void;
/**
 * No comment provided
 *
 * Hash: 0x6DFD37E586D4F44F | Since: 1207
 *
 * @deprecated Use cam._0x6DFD37E586D4F44F() instead
 */
export declare function _0x6DFD37E586D4F44F(): any;
/**
 * No comment provided
 *
 * Hash: 0x70A6658D476C6187 | Since: 1207
 *
 * @deprecated Use cam._0x70A6658D476C6187() instead
 */
export declare function _0x70A6658D476C6187(): void;
/**
 * Forces camera position to closest 3rd person
 *
 * Hash: 0x718C6ECF5E8CBDD4 | Since: 1207
 *
 * @deprecated Use cam.forceThirdPersonCloseThisFrame() instead
 */
export declare function forceThirdPersonCloseThisFrame(): void;
/**
 * Zooms in the third person camera closer to ground level.
 * Must be called every frame to interpolate.
 * Pass false to reset.
 *
 * Hash: 0x71D71E08A7ED5BD7 | Since: 1207
 *
 * @deprecated Use cam._0x71D71E08A7ED5BD7() instead
 */
export declare function _0x71D71E08A7ED5BD7(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x728491FB3DFFEF99 | Since: 1207
 *
 * @deprecated Use cam._0x728491FB3DFFEF99() instead
 */
export declare function _0x728491FB3DFFEF99(): void;
/**
 * No comment provided
 *
 * Hash: 0x73FF6BE63DC18819 | Since: 1207
 *
 * @deprecated Use cam._0x73FF6BE63DC18819() instead
 */
export declare function _0x73FF6BE63DC18819(): any;
/**
 * No comment provided
 *
 * Hash: 0x796085220ADCC847 | Since: 1207
 *
 * @deprecated Use cam._0x796085220ADCC847() instead
 */
export declare function _0x796085220ADCC847(): any;
/**
 * No comment provided
 *
 * Hash: 0x7CE9DC58E3E4755F | Since: 1207
 *
 * @deprecated Use cam._0x7CE9DC58E3E4755F() instead
 */
export declare function _0x7CE9DC58E3E4755F(): any;
/**
 * No comment provided
 *
 * Hash: 0x7E40A01B11398FCB | Since: 1207
 *
 * @deprecated Use cam._0x7E40A01B11398FCB() instead
 */
export declare function _0x7E40A01B11398FCB(): void;
/**
 * No comment provided
 *
 * Hash: 0x80D7A3E39B120BC4 | Since: 1207
 *
 * @deprecated Use cam._0x80D7A3E39B120BC4() instead
 */
export declare function _0x80D7A3E39B120BC4(): any;
/**
 * No comment provided
 *
 * Hash: 0x8505E05FC8822843 | Since: 1207
 *
 * @deprecated Use cam._0x8505E05FC8822843() instead
 */
export declare function _0x8505E05FC8822843(): void;
/**
 * UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
 * Return type char in ida
 * _SET_GAMEPLAY_HINT_*
 *
 * Hash: 0x88544C0E3291DCAE | Since: 1207
 *
 * @deprecated Use cam._0x88544C0E3291DCAE() instead
 */
export declare function _0x88544C0E3291DCAE(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B1A5FE7E41E52B2 | Since: 1311
 *
 * @deprecated Use cam._0x8B1A5FE7E41E52B2() instead
 */
export declare function _0x8B1A5FE7E41E52B2(): any;
/**
 * No comment provided
 *
 * Hash: 0x8E036B41C37D0E5F | Since: 1207
 *
 * @deprecated Use cam._0x8E036B41C37D0E5F() instead
 */
export declare function _0x8E036B41C37D0E5F(): void;
/**
 * _IS_SCRIPTED_S*
 *
 * Hash: 0x975F6EBB62632FE3 | Since: 1207
 *
 * @deprecated Use cam._0x975F6EBB62632FE3() instead
 */
export declare function _0x975F6EBB62632FE3(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9AC65A36D3C0C189 | Since: 1207
 *
 * @deprecated Use cam._0x9AC65A36D3C0C189() instead
 */
export declare function _0x9AC65A36D3C0C189(): void;
/**
 * No comment provided
 *
 * Hash: 0xA54D643D0773EB65 | Since: 1207
 *
 * @deprecated Use cam._0xA54D643D0773EB65() instead
 */
export declare function _0xA54D643D0773EB65(dictionary: string, shotName: string, duration: number): void;
/**
 * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
 * _DISABLE_*
 *
 * Hash: 0xA8BA2E0204D8486F | Since: 1355
 *
 * @deprecated Use cam._0xA8BA2E0204D8486F() instead
 */
export declare function _0xA8BA2E0204D8486F(): void;
/**
 * No comment provided
 *
 * Hash: 0xAC77757C05DE9E5A | Since: 1207
 *
 * @deprecated Use cam._0xAC77757C05DE9E5A() instead
 */
export declare function _0xAC77757C05DE9E5A(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0xB6A80E1E3A5444F1 | Since: 1311
 *
 * @deprecated Use cam._0xB6A80E1E3A5444F1() instead
 */
export declare function _0xB6A80E1E3A5444F1(): any;
/**
 * No comment provided
 *
 * Hash: 0xB85C13E0BF1F2A1C | Since: 1207
 *
 * @deprecated Use cam._0xB85C13E0BF1F2A1C() instead
 */
export declare function _0xB85C13E0BF1F2A1C(): void;
/**
 * No comment provided
 *
 * Hash: 0xC205B3C54C6A4E37 | Since: 1207
 *
 * @deprecated Use cam._0xC205B3C54C6A4E37() instead
 */
export declare function _0xC205B3C54C6A4E37(): void;
/**
 * No comment provided
 *
 * Hash: 0xC252C0CC969AF79A | Since: 1207
 *
 * @deprecated Use cam._0xC252C0CC969AF79A() instead
 */
export declare function _0xC252C0CC969AF79A(): void;
/**
 * No comment provided
 *
 * Hash: 0xC285FD21294A1C49 | Since: 1207
 *
 * @deprecated Use cam._0xC285FD21294A1C49() instead
 */
export declare function _0xC285FD21294A1C49(cameraDictionary: string): boolean;
/**
 * Camera will be or is running
 *
 * Hash: 0xC3742F1FDF0A6824 | Since: 1355
 *
 * @deprecated Use cam._0xC3742F1FDF0A6824() instead
 */
export declare function _0xC3742F1FDF0A6824(): void;
/**
 * No comment provided
 *
 * Hash: 0xC3AEBB276825A359 | Since: 1436
 *
 * @deprecated Use cam._0xC3AEBB276825A359() instead
 */
export declare function _0xC3AEBB276825A359(dictionary: string, shotName: string, duration: number): boolean;
/**
 * shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
 * _RES*
 *
 * Hash: 0xC3E9E5D4F413B773 | Since: 1207
 *
 * @deprecated Use cam._0xC3E9E5D4F413B773() instead
 */
export declare function _0xC3E9E5D4F413B773(shakeName: string, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCF69EA05CD9C33C9 | Since: 1207
 *
 * @deprecated Use cam._0xCF69EA05CD9C33C9() instead
 */
export declare function _0xCF69EA05CD9C33C9(): void;
/**
 * No comment provided
 *
 * Hash: 0xDB382FE20C2DA222 | Since: 1207
 *
 * @deprecated Use cam._0xDB382FE20C2DA222() instead
 */
export declare function _0xDB382FE20C2DA222(): void;
/**
 * No comment provided
 *
 * Hash: 0xDC62CD70658E7A02 | Since: 1207
 *
 * @deprecated Use cam._0xDC62CD70658E7A02() instead
 */
export declare function _0xDC62CD70658E7A02(): any;
/**
 * No comment provided
 *
 * Hash: 0xDF7F5BE9150E47E4 | Since: 1207
 *
 * @deprecated Use cam._0xDF7F5BE9150E47E4() instead
 */
export declare function _0xDF7F5BE9150E47E4(): void;
/**
 * No comment provided
 *
 * Hash: 0xE28F73212A813E82 | Since: 1207
 *
 * @deprecated Use cam._0xE28F73212A813E82() instead
 */
export declare function _0xE28F73212A813E82(): void;
/**
 * No comment provided
 *
 * Hash: 0xE2BB2D6A9FE2ECDE | Since: 1207
 *
 * @deprecated Use cam._0xE2BB2D6A9FE2ECDE() instead
 */
export declare function _0xE2BB2D6A9FE2ECDE(): void;
/**
 * No comment provided
 *
 * Hash: 0xE4B7945EF4F1BFB2 | Since: 1207
 *
 * @deprecated Use cam._0xE4B7945EF4F1BFB2() instead
 */
export declare function _0xE4B7945EF4F1BFB2(cam: number, args: any): void;
/**
 * No comment provided
 *
 * Hash: 0xE6F364DE6C2FDEFE | Since: 1207
 *
 * @deprecated Use cam._0xE6F364DE6C2FDEFE() instead
 */
export declare function _0xE6F364DE6C2FDEFE(): void;
/**
 * No comment provided
 *
 * Hash: 0xEA113BF9B0C0C5D7 | Since: 1207
 *
 * @deprecated Use cam._0xEA113BF9B0C0C5D7() instead
 */
export declare function _0xEA113BF9B0C0C5D7(dictionary: string, shotName: string, duration: number): any;
/**
 * No comment provided
 *
 * Hash: 0xEF9A3132A0AA6B19 | Since: 1207
 *
 * @deprecated Use cam._0xEF9A3132A0AA6B19() instead
 */
export declare function _0xEF9A3132A0AA6B19(): any;
/**
 * No comment provided
 *
 * Hash: 0xF1A6FEEDF3776EF9 | Since: 1207
 *
 * @deprecated Use cam._0xF1A6FEEDF3776EF9() instead
 */
export declare function _0xF1A6FEEDF3776EF9(): void;
/**
 * No comment provided
 *
 * Hash: 0xF48664E9C83825E3 | Since: 1207
 *
 * @deprecated Use cam._0xF48664E9C83825E3() instead
 */
export declare function _0xF48664E9C83825E3(): void;
/**
 * No comment provided
 *
 * Hash: 0xF824530B612FE0CE | Since: 1207
 *
 * @deprecated Use cam._0xF824530B612FE0CE() instead
 */
export declare function _0xF824530B612FE0CE(): any;
/**
 * No comment provided
 *
 * Hash: 0xFC3F638BE2B6BB02 | Since: 1207
 *
 * @deprecated Use cam._0xFC3F638BE2B6BB02() instead
 */
export declare function _0xFC3F638BE2B6BB02(): void;
/**
 * No comment provided
 *
 * Hash: 0xFEB8646818294C75 | Since: 1207
 *
 * @deprecated Use cam._0xFEB8646818294C75() instead
 */
export declare function _0xFEB8646818294C75(): void;
/**
 * _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
 *
 * Hash: 0xFEFDDC6E8FDF8A75 | Since: 1207
 *
 * @deprecated Use cam._0xFEFDDC6E8FDF8A75() instead
 */
export declare function _0xFEFDDC6E8FDF8A75(shakeName: string, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB8B207C34285E978 | Since: 1207
 *
 * @deprecated Use cam.camCreate() instead
 */
export declare function camCreate(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0x7B0279170961A73F | Since: 1207
 *
 * @deprecated Use cam.camCreate2() instead
 */
export declare function camCreate2(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0A5A4F1979ABB40E | Since: 1207
 *
 * @deprecated Use cam.camDestroy() instead
 */
export declare function camDestroy(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0E94C95EC3185FA9 | Since: 1207
 *
 * @deprecated Use cam.cinematicLocationSetLocationAndRotation() instead
 */
export declare function cinematicLocationSetLocationAndRotation(name: string, pos: Vector3, rot: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xBC016635D6A73B31 | Since: 1207
 *
 * @deprecated Use cam.cinematicLocationTriggerScriptedShotEvent2() instead
 */
export declare function cinematicLocationTriggerScriptedShotEvent2(dictionary: string, shotName: string, duration: number): void;
/**
 * Creates Kill Cam for specified Ped Handle
 *
 * Hash: 0x2F994CC29CAA9D22 | Since: 1207
 *
 * @deprecated Use cam.createKillCam() instead
 */
export declare function createKillCam(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8910C24B7E0046EC | Since: 1207
 *
 * @deprecated Use cam.disableCinematicModeThisFrame() instead
 */
export declare function disableCinematicModeThisFrame(): void;
/**
 * Does the same as 0x9C473089A934C930 (DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE)
 *
 * Hash: 0x05AB44D906738426 | Since: 1207
 *
 * @deprecated Use cam.disableOnFootFirstPersonViewThisUpdate2() instead
 */
export declare function disableOnFootFirstPersonViewThisUpdate2(): void;
/**
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * Params: targetPed = death cam focuses on it
 *
 * Hash: 0xE3639DB78B3B5400 | Since: 1207
 *
 * @deprecated Use cam.forceCinematicDeathCamOnPed() instead
 */
export declare function forceCinematicDeathCamOnPed(targetPed: number | Ped): void;
/**
 * Returns true if first person camera is active in saloon1.ysc
 *
 * Hash: 0x90DA5BA5C2635416 | Since: 1207
 *
 * @deprecated Use cam.forceFirstPersonCamThisFrame() instead
 */
export declare function forceFirstPersonCamThisFrame(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC64ABC0676AF262B | Since: 1207
 *
 * @deprecated Use cam.forceLetterBoxThisUpdate() instead
 */
export declare function forceLetterBoxThisUpdate(): void;
/**
 * Forces camera position to furthest 3rd person
 *
 * Hash: 0x1CFB749AD4317BDE | Since: 1207
 *
 * @deprecated Use cam.forceThirdPersonCamFarThisFrame() instead
 */
export declare function forceThirdPersonCamFarThisFrame(): void;
/**
 * Forces camera position to second furthest 3rd person
 *
 * Hash: 0x8370D34BD2E60B73 | Since: 1207
 *
 * @deprecated Use cam.forceThirdPersonCamThisFrame() instead
 */
export declare function forceThirdPersonCamThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x027CAB2C3AF27010 | Since: 1207
 *
 * @deprecated Use cam.freezeGameplayCamThisFrame() instead
 */
export declare function freezeGameplayCamThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x4653A741D17F2CD0 | Since: 1207
 *
 * @deprecated Use cam.getPhotoModeDof() instead
 */
export declare function getPhotoModeDof(): number;
/**
 * No comment provided
 *
 * Hash: 0x2533BAFFBE737E54 | Since: 1207
 *
 * @deprecated Use cam.getPhotoModeFocalLength() instead
 */
export declare function getPhotoModeFocalLength(): number;
/**
 * No comment provided
 *
 * Hash: 0x18FC740FFDCD7454 | Since: 1207
 *
 * @deprecated Use cam.getPhotoModeFocusDistance() instead
 */
export declare function getPhotoModeFocusDistance(): number;
/**
 * Only used in R* Script camera_photomode
 *
 * Hash: 0x20389408F0E93B9A | Since: 1207
 *
 * @deprecated Use cam.isAnimSceneCamActive() instead
 */
export declare function isAnimSceneCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x927B810E43E99932 | Since: 1207
 *
 * @deprecated Use cam.isCameraAvailable() instead
 */
export declare function isCameraAvailable(cameraDictionary: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDD0B7C5AE58F721D | Since: 1207
 *
 * @deprecated Use cam.isCamDataDictLoaded() instead
 */
export declare function isCamDataDictLoaded(cameraDictionary: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA14D5FE82BCB1D9E | Since: 1207
 *
 * @deprecated Use cam.isCamPhotofxRunning() instead
 */
export declare function isCamPhotofxRunning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA235E2F2C09E952 | Since: 1207
 *
 * @deprecated Use cam.isCinematicCamLocationLoaded() instead
 */
export declare function isCinematicCamLocationLoaded(sLocationDictName: string): boolean;
/**
 * Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
 *
 * Hash: 0x595550376B7EA230 | Since: 1207
 *
 * @deprecated Use cam.isCinematicCamLocationLoaded2() instead
 */
export declare function isCinematicCamLocationLoaded2(locationDictName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74F1D22EFA71FAB8 | Since: 1207
 *
 * @deprecated Use cam.isInCinematicMode() instead
 */
export declare function isInCinematicMode(): boolean;
/**
 * Returns true if player is in first person
 *
 * Hash: 0xD1BA66940E94C547 | Since: 1207
 *
 * @deprecated Use cam.isInFullFirstPersonMode() instead
 */
export declare function isInFullFirstPersonMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A4D224FC7643941 | Since: 1207
 *
 * @deprecated Use cam.loadCameraDataDict() instead
 */
export declare function loadCameraDataDict(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1B3C2D961F5FC0E1 | Since: 1207
 *
 * @deprecated Use cam.loadCinematicCamLocation() instead
 */
export declare function loadCinematicCamLocation(locationDictName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9F97E85EC142255E | Since: 1207
 *
 * @deprecated Use cam.pauseCameraFocus() instead
 */
export declare function pauseCameraFocus(cam: number, pause: boolean): void;
/**
 * Used to enable headshot kill replay when you headshot set ped.
 * Params: p1 seems to be 0 or 1 in R* Scripts
 *
 * Hash: 0x986F7A51EE3E1F92 | Since: 1207
 *
 * @deprecated Use cam.reactivatePedHeadshotExecuteSlowcam() instead
 */
export declare function reactivatePedHeadshotExecuteSlowcam(ped: number | Ped): void;
/**
 * Creates Cinematic Black Bars (at top and bottom)
 * Disable instantly: false/false, Enable instantly: true/true
 *
 * Hash: 0x69D65E89FFD72313 | Since: 1207
 *
 * @deprecated Use cam.requestLetterBoxNow() instead
 */
export declare function requestLetterBoxNow(): void;
/**
 * No comment provided
 *
 * Hash: 0xE296208C273BD7F0 | Since: 1207
 *
 * @deprecated Use cam.requestLetterBoxOvertime() instead
 */
export declare function requestLetterBoxOvertime(): void;
/**
 * No comment provided
 *
 * Hash: 0x11F32BB61B756732 | Since: 1207
 *
 * @deprecated Use cam.setCamFocusDistance() instead
 */
export declare function setCamFocusDistance(cam: number, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6C1053C433A573CF | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamInitialHeading() instead
 */
export declare function setGameplayCamInitialHeading(camInitialHeading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x449995EA846D3FC2 | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamInitialPitch() instead
 */
export declare function setGameplayCamInitialPitch(camInitialPitch: number): void;
/**
 * Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
 *
 * Hash: 0xBCDA0BA8762FACB9 | Since: 1207
 *
 * @deprecated Use cam.setGameplayCamInitialZoom() instead
 */
export declare function setGameplayCamInitialZoom(camInitialZoom: number): void;
/**
 * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
 * _SET_P* - _SET_S*
 *
 * Hash: 0x6E969927CF632608 | Since: 1207
 *
 * @deprecated Use cam.setStartCinematicDeathCam() instead
 */
export declare function setStartCinematicDeathCam(): void;
/**
 * [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
 * p0: struct<32> \/\*256\*\/
 *
 * Hash: 0x65B205BF30C13DDB | Since: 1207
 *
 * @deprecated Use cam.startCameraOrbit() instead
 */
export declare function startCameraOrbit(): void;
/**
 * script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
 * script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
 * _STOP_GAMEPLAY_CAM* - _STOP_I*
 *
 * Hash: 0x4285804FD65D8066 | Since: 1207
 *
 * @deprecated Use cam.stopGameplayCamShakingWithName() instead
 */
export declare function stopGameplayCamShakingWithName(shakeName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9A92C06ACBAF9731 | Since: 1207
 *
 * @deprecated Use cam.triggerMissionFailedCam() instead
 */
export declare function triggerMissionFailedCam(): void;
/**
 * No comment provided
 *
 * Hash: 0x798BE43C9393632B | Since: 1207
 *
 * @deprecated Use cam.unloadCameraDataDict() instead
 */
export declare function unloadCameraDataDict(cameraDictionary: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2412216FCC7B4E3E | Since: 1207
 *
 * @deprecated Use cam.unloadCinematicCameraLocation() instead
 */
export declare function unloadCinematicCameraLocation(dictionaryName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xAB7C251C7701D336 | Since: 1207
 *
 * @deprecated Use clock.addToClockTime() instead
 */
export declare function addToClockTime(hours: number, minutes: number, seconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0184750AE88D0B1D | Since: 1207
 *
 * @deprecated Use clock.advanceClockTimeTo() instead
 */
export declare function advanceClockTimeTo(hour: number, minute: number, second: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF2FD796C54480A5 | Since: 1207
 *
 * @deprecated Use clock.getClockDayOfMonth() instead
 */
export declare function getClockDayOfMonth(): number;
/**
 * Gets the current day of the week.
 *
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 *
 * Hash: 0x4DD02D4C7FB30076 | Since: 1207
 *
 * @deprecated Use clock.getClockDayOfWeek() instead
 */
export declare function getClockDayOfWeek(): number;
/**
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 *
 * Hash: 0xC82CF208C2B19199 | Since: 1207
 *
 * @deprecated Use clock.getClockHours() instead
 */
export declare function getClockHours(): number;
/**
 * Gets the current ingame clock minute.
 *
 * Hash: 0x4E162231B823DBBF | Since: 1207
 *
 * @deprecated Use clock.getClockMinutes() instead
 */
export declare function getClockMinutes(): number;
/**
 * No comment provided
 *
 * Hash: 0x2D44E8FC79EAB1AC | Since: 1207
 *
 * @deprecated Use clock.getClockMonth() instead
 */
export declare function getClockMonth(): number;
/**
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
 *
 * Hash: 0xB6101ABE62B5F080 | Since: 1207
 *
 * @deprecated Use clock.getClockSeconds() instead
 */
export declare function getClockSeconds(): number;
/**
 * No comment provided
 *
 * Hash: 0xE136DCA28C4A48BA | Since: 1207
 *
 * @deprecated Use clock.getClockYear() instead
 */
export declare function getClockYear(): number;
/**
 * No comment provided
 *
 * Hash: 0xE4CB8D126501EC52 | Since: 1207
 *
 * @deprecated Use clock.getMillisecondsPerGameMinute() instead
 */
export declare function getMillisecondsPerGameMinute(): number;
/**
 * No comment provided
 *
 * Hash: 0x90338AD4A784E455 | Since: 1207
 *
 * @deprecated Use clock.getPosixTime() instead
 */
export declare function getPosixTime(year: number, month: number, day: number, hour: number, minute: number, second: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4D1A590C92BF377E | Since: 1207
 *
 * @deprecated Use clock.pauseClock() instead
 */
export declare function pauseClock(toggle: boolean, unused: any): void;
/**
 * No comment provided
 *
 * Hash: 0x02AD3092562941E2 | Since: 1207
 *
 * @deprecated Use clock.setClockDate() instead
 */
export declare function setClockDate(day: number, month: number, year: number): void;
/**
 * SET_CLOCK_TIME(12, 34, 56);
 *
 * Hash: 0x3A52C59FFB2DEED8 | Since: 1207
 *
 * @deprecated Use clock.setClockTime() instead
 */
export declare function setClockTime(hour: number, minute: number, second: number): void;
/**
 * No comment provided
 *
 * Hash: 0x28EEACE9B43D9597 | Since: 1207
 *
 * @deprecated Use clock.addTimeToDateTime() instead
 */
export declare function addTimeToDateTime(inDateTime: any, timeToAdd: any, outDateTime: any): void;
/**
 * Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
 *
 * Hash: 0x86A68E84E5884951 | Since: 1207
 *
 * @deprecated Use clock.getPosixTimeStruct() instead
 */
export declare function getPosixTimeStruct(outTime: any): void;
/**
 * Base year is 1898.
 *
 * Hash: 0x78FD8BE812E436B2 | Since: 1207
 *
 * @deprecated Use clock.getSecondsSinceBaseYear() instead
 */
export declare function getSecondsSinceBaseYear(): number;
/**
 * No comment provided
 *
 * Hash: 0x568D998A9FF96774 | Since: 1207
 *
 * @deprecated Use clock.pauseClockThisFrame() instead
 */
export declare function pauseClockThisFrame(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x04EEDB3848DACF68 | Since: 1207
 *
 * @deprecated Use clock.setMillisecondsPerGameMinute() instead
 */
export declare function setMillisecondsPerGameMinute(ms: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B6D275D2F242E17 | Since: 1207
 *
 * @deprecated Use collection.collectableCategorySetHasReceivedList() instead
 */
export declare function collectableCategorySetHasReceivedList(): void;
/**
 * collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
 *
 * Hash: 0xCC644BC1DD655269 | Since: 1207
 *
 * @deprecated Use collection.collectableGetCategoryItemSetBuyAward() instead
 */
export declare function collectableGetCategoryItemSetBuyAward(collectableCategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x33825A7388A6B9F6 | Since: 1207
 *
 * @deprecated Use collection._0x33825A7388A6B9F6() instead
 */
export declare function _0x33825A7388A6B9F6(collectableCategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3FD91F1A148A0468 | Since: 1232
 *
 * @deprecated Use collection._0x3FD91F1A148A0468() instead
 */
export declare function _0x3FD91F1A148A0468(collectableCategory: number | string): any;
/**
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * Hash: 0x61BEFBA3CE7A3BC8 | Since: 1232
 *
 * @deprecated Use collection._0x61BEFBA3CE7A3BC8() instead
 */
export declare function _0x61BEFBA3CE7A3BC8(collectableCategory: number | string): boolean;
/**
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * Hash: 0x6BAB7ACED1017204 | Since: 1207
 *
 * @deprecated Use collection._0x6BAB7ACED1017204() instead
 */
export declare function _0x6BAB7ACED1017204(collectableCategory: number | string): boolean;
/**
 * Returns p2 (index?) for 0xB9020EC89C07DF04
 *
 * Hash: 0x755901C7598B97BC | Since: 1207
 *
 * @deprecated Use collection._0x755901C7598B97BC() instead
 */
export declare function _0x755901C7598B97BC(collectableCategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x775FA1FC87666847 | Since: 1232
 *
 * @deprecated Use collection._0x775FA1FC87666847() instead
 */
export declare function _0x775FA1FC87666847(collectableCategory: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x93F2E7B5DB85657B | Since: 1207
 *
 * @deprecated Use collection._0x93F2E7B5DB85657B() instead
 */
export declare function _0x93F2E7B5DB85657B(): any;
/**
 * Params: collectableCategory = WEEKLY_COLLECTABLES
 *
 * Hash: 0x9ADEE485726025D4 | Since: 1207
 *
 * @deprecated Use collection._0x9ADEE485726025D4() instead
 */
export declare function _0x9ADEE485726025D4(collectableCategory: number | string): number;
/**
 * Accepts more hashes than 0xCC644BC1DD655269
 * Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
 *
 * Hash: 0xB9020EC89C07DF04 | Since: 1207
 *
 * @deprecated Use collection._0xB9020EC89C07DF04() instead
 */
export declare function _0xB9020EC89C07DF04(collectableCategory: number | string, index: number): any;
/**
 * No comment provided
 *
 * Hash: 0xC3CA424E1F12ED0C | Since: 1232
 *
 * @deprecated Use collection._0xC3CA424E1F12ED0C() instead
 */
export declare function _0xC3CA424E1F12ED0C(collectableCategory: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xC4AC39719C1BB559 | Since: 1232
 *
 * @deprecated Use collection._0xC4AC39719C1BB559() instead
 */
export declare function _0xC4AC39719C1BB559(collectableCategory: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xD1806FB3EDED6D11 | Since: 1232
 *
 * @deprecated Use collection._0xD1806FB3EDED6D11() instead
 */
export declare function _0xD1806FB3EDED6D11(collectableCategory: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xD297F68928A58130 | Since: 1232
 *
 * @deprecated Use collection._0xD297F68928A58130() instead
 */
export declare function _0xD297F68928A58130(collectableCategory: number | string): any;
/**
 * Returns discoveredItemHash
 * _COLLECTABLE_C* - _COLLECTABLE_G*
 *
 * Hash: 0xEC3959E9950BF56B | Since: 1207
 *
 * @deprecated Use collection.collectableSetItemHashDiscovered() instead
 */
export declare function collectableSetItemHashDiscovered(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xFC832B06127D8E99 | Since: 1207
 *
 * @deprecated Use collection._0xFC832B06127D8E99() instead
 */
export declare function _0xFC832B06127D8E99(collectableCategory: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62CAB7DB62EAD434 | Since: 1207
 *
 * @deprecated Use collection.collectableCategoryGetNumCollectables() instead
 */
export declare function collectableCategoryGetNumCollectables(collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5461C821D00FE15A | Since: 1207
 *
 * @deprecated Use collection.collectableCategoryGetNumFound() instead
 */
export declare function collectableCategoryGetNumFound(collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3A65F4844913A047 | Since: 1207
 *
 * @deprecated Use collection.collectableCategoryGetNumTurnedIn() instead
 */
export declare function collectableCategoryGetNumTurnedIn(collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x13AAECDA43318BFE | Since: 1207
 *
 * @deprecated Use collection.collectableCategoryGetToastTextureDictionary() instead
 */
export declare function collectableCategoryGetToastTextureDictionary(collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD52D20B0C76BB26D | Since: 1207
 *
 * @deprecated Use collection.collectableCategoryGetToastTextureName() instead
 */
export declare function collectableCategoryGetToastTextureName(collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
 * Returns collectableCategory Hash
 *
 * Hash: 0x725D52F21A5E9EF6 | Since: 1207
 *
 * @deprecated Use collection.collectableGetCategory() instead
 */
export declare function collectableGetCategory(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x126CBEBBA46693CF | Since: 1207
 *
 * @deprecated Use collection.collectableGetCollectableItemHash() instead
 */
export declare function collectableGetCollectableItemHash(index: number, collectableCategory: number | string, collectableSubcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x922A79CD4A033B8B | Since: 1207
 *
 * @deprecated Use collection.collectableGetIpl() instead
 */
export declare function collectableGetIpl(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF83D3DDA4D3C8169 | Since: 1207
 *
 * @deprecated Use collection.collectableGetNumFound() instead
 */
export declare function collectableGetNumFound(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x9A03F22AD446EEAC | Since: 1207
 *
 * @deprecated Use collection.collectableGetNumTurnedIn() instead
 */
export declare function collectableGetNumTurnedIn(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x1F1DD794908C2BFA | Since: 1207
 *
 * @deprecated Use collection.collectableGetPlacementLocation() instead
 */
export declare function collectableGetPlacementLocation(collectableItem: number | string): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x6052B4DE6657684F | Since: 1207
 *
 * @deprecated Use collection.collectableGetSubcategory() instead
 */
export declare function collectableGetSubcategory(collectableItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3EA62E56F386C997 | Since: 1207
 *
 * @deprecated Use collection.collectableIncrementNumFound() instead
 */
export declare function collectableIncrementNumFound(collectableItem: number | string, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x398FAB9C96A81924 | Since: 1207
 *
 * @deprecated Use collection.collectableIncrementNumTurnedIn() instead
 */
export declare function collectableIncrementNumTurnedIn(collectableItem: number | string, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A8FD91EDE7B328A | Since: 1207
 *
 * @deprecated Use companion._0x0A8FD91EDE7B328A() instead
 */
export declare function _0x0A8FD91EDE7B328A(): void;
/**
 * No comment provided
 *
 * Hash: 0x0C6A00DAE896614C | Since: 1207
 *
 * @deprecated Use companion._0x0C6A00DAE896614C() instead
 */
export declare function _0x0C6A00DAE896614C(): void;
/**
 * No comment provided
 *
 * Hash: 0x0DE02DA3C0F66955 | Since: 1207
 *
 * @deprecated Use companion._0x0DE02DA3C0F66955() instead
 */
export declare function _0x0DE02DA3C0F66955(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2917E634206B9E17 | Since: 1207
 *
 * @deprecated Use companion._0x2917E634206B9E17() instead
 */
export declare function _0x2917E634206B9E17(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3CAAD93FA5B9579A | Since: 1207
 *
 * @deprecated Use companion._0x3CAAD93FA5B9579A() instead
 */
export declare function _0x3CAAD93FA5B9579A(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x61BDA07407754A5C | Since: 1207
 *
 * @deprecated Use companion._0x61BDA07407754A5C() instead
 */
export declare function _0x61BDA07407754A5C(): void;
/**
 * No comment provided
 *
 * Hash: 0x722FBE08EF5B87BD | Since: 1207
 *
 * @deprecated Use companion._0x722FBE08EF5B87BD() instead
 */
export declare function _0x722FBE08EF5B87BD(): any;
/**
 * No comment provided
 *
 * Hash: 0x7274F84B1501B523 | Since: 1207
 *
 * @deprecated Use companion._0x7274F84B1501B523() instead
 */
export declare function _0x7274F84B1501B523(): void;
/**
 * No comment provided
 *
 * Hash: 0x8FB98B719AA0075A | Since: 1207
 *
 * @deprecated Use companion._0x8FB98B719AA0075A() instead
 */
export declare function _0x8FB98B719AA0075A(): void;
/**
 * No comment provided
 *
 * Hash: 0x991E3346D788F20F | Since: 1207
 *
 * @deprecated Use companion._0x991E3346D788F20F() instead
 */
export declare function _0x991E3346D788F20F(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C902084F48D2E6C | Since: 1207
 *
 * @deprecated Use companion._0x9C902084F48D2E6C() instead
 */
export declare function _0x9C902084F48D2E6C(): void;
/**
 * No comment provided
 *
 * Hash: 0xA079FF7CFB9AC8BD | Since: 1207
 *
 * @deprecated Use companion._0xA079FF7CFB9AC8BD() instead
 */
export declare function _0xA079FF7CFB9AC8BD(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF6583E926D13890 | Since: 1207
 *
 * @deprecated Use companion._0xBF6583E926D13890() instead
 */
export declare function _0xBF6583E926D13890(): void;
/**
 * No comment provided
 *
 * Hash: 0xCE27824B5968B79A | Since: 1207
 *
 * @deprecated Use companion._0xCE27824B5968B79A() instead
 */
export declare function _0xCE27824B5968B79A(): void;
/**
 * No comment provided
 *
 * Hash: 0xD428C3F92FC3F6F8 | Since: 1207
 *
 * @deprecated Use companion._0xD428C3F92FC3F6F8() instead
 */
export declare function _0xD428C3F92FC3F6F8(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD55A871E1CE3481B | Since: 1207
 *
 * @deprecated Use companion._0xD55A871E1CE3481B() instead
 */
export declare function _0xD55A871E1CE3481B(): void;
/**
 * No comment provided
 *
 * Hash: 0xD730281E496621FB | Since: 1207
 *
 * @deprecated Use companion._0xD730281E496621FB() instead
 */
export declare function _0xD730281E496621FB(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD747979C053EFA7A | Since: 1207
 *
 * @deprecated Use companion._0xD747979C053EFA7A() instead
 */
export declare function _0xD747979C053EFA7A(): void;
/**
 * No comment provided
 *
 * Hash: 0xF06CBB8CCCA823C0 | Since: 1207
 *
 * @deprecated Use companion._0xF06CBB8CCCA823C0() instead
 */
export declare function _0xF06CBB8CCCA823C0(): void;
/**
 * No comment provided
 *
 * Hash: 0xCBD9EC60495C728C | Since: 1207
 *
 * @deprecated Use companion.activateCompanionAnalysis() instead
 */
export declare function activateCompanionAnalysis(groupId: number): void;
/**
 * Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
 *
 * Hash: 0xDEB369F6AD168C58 | Since: 1207
 *
 * @deprecated Use companion.addCompanionFlag() instead
 */
export declare function addCompanionFlag(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x72B7F65F11FC8896 | Since: 1207
 *
 * @deprecated Use companion.deactivateCompanionAnalysis() instead
 */
export declare function deactivateCompanionAnalysis(groupId: number): void;
/**
 * enum _0x18F77396
 *
 * Hash: 0xB7E0590C86E1711F | Since: 1207
 *
 * @deprecated Use companion.getCompanionActivity() instead
 */
export declare function getCompanionActivity(groupId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1740E3DEE0AE4D27 | Since: 1207
 *
 * @deprecated Use companion.removeCompanionFlag() instead
 */
export declare function removeCompanionFlag(ped: number | Ped): void;
/**
 * enum _0x18F77396
 *
 * Hash: 0x0F1CD8CA9E65D5F6 | Since: 1207
 *
 * @deprecated Use companion.setCompanionActivity() instead
 */
export declare function setCompanionActivity(groupId: number, activity: number | string): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x29C733459A9011EB | Since: 1207
 *
 * @deprecated Use compapp._0x29C733459A9011EB() instead
 */
export declare function _0x29C733459A9011EB(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x74BCCEB233AD95B2 | Since: 1207
 *
 * @deprecated Use compapp._0x74BCCEB233AD95B2() instead
 */
export declare function _0x74BCCEB233AD95B2(): void;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x7AF1BB4504EA5ED9 | Since: 1207
 *
 * @deprecated Use compapp._0x7AF1BB4504EA5ED9() instead
 */
export declare function _0x7AF1BB4504EA5ED9(): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xB6FD96420C0126A1 | Since: 1207
 *
 * @deprecated Use compapp._0xB6FD96420C0126A1() instead
 */
export declare function _0xB6FD96420C0126A1(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xCCB4635A071FB62D | Since: 1207
 *
 * @deprecated Use compapp._0xCCB4635A071FB62D() instead
 */
export declare function _0xCCB4635A071FB62D(): void;
/**
 * No comment provided
 *
 * Hash: 0x4E4ACAE1C671A9DA | Since: 1311
 *
 * @deprecated Use compendium.compendiumAnimalGetSampleInventoryItem() instead
 */
export declare function compendiumAnimalGetSampleInventoryItem(compendiumEntry: number): any;
/**
 * No comment provided
 *
 * Hash: 0x6FC24625E4FCAC27 | Since: 1311
 *
 * @deprecated Use compendium.compendiumAnimalHasSample() instead
 */
export declare function compendiumAnimalHasSample(compendiumEntry: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBCF569FC32FFF456 | Since: 1311
 *
 * @deprecated Use compendium.compendiumAnimalHasStamp() instead
 */
export declare function compendiumAnimalHasStamp(compendiumEntry: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x725D52F26A5E9E10 | Since: 1207
 *
 * @deprecated Use compendium.compendiumAnimalObservedByStatName() instead
 */
export declare function compendiumAnimalObservedByStatName(animalType: number | string, disableCompendiumToast: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x67F35C7C9F2BDCFE | Since: 1311
 *
 * @deprecated Use compendium.compendiumAnimalSetDiscovered() instead
 */
export declare function compendiumAnimalSetDiscovered(compendiumEntry: number): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E00 | Since: 1207
 *
 * @deprecated Use compendium.compendiumFishCaught() instead
 */
export declare function compendiumFishCaught(ped: number | Ped, category: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E81 | Since: 1207
 *
 * @deprecated Use compendium.compendiumFishGetLureSuitabilityByStatItem() instead
 */
export declare function compendiumFishGetLureSuitabilityByStatItem(animalType: number | string, baitType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E04 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangAmbushSurvived() instead
 */
export declare function compendiumGangAmbushSurvived(): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E06 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangBountyCaptured() instead
 */
export declare function compendiumGangBountyCaptured(): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E03 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangCampFound() instead
 */
export declare function compendiumGangCampFound(): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E05 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangEncountered() instead
 */
export declare function compendiumGangEncountered(): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E08 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangHideoutFound() instead
 */
export declare function compendiumGangHideoutFound(): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E07 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGangMemberKilled() instead
 */
export declare function compendiumGangMemberKilled(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CEB63B2E3D9895F | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetEntryByIndexInSubcategory() instead
 */
export declare function compendiumGetEntryByIndexInSubcategory(category: number | string, subcategory: number | string, count: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1CFA0219D8E1CF25 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetEntryByPedIndex() instead
 */
export declare function compendiumGetEntryByPedIndex(category: number | string, ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x66EC938394D76C85 | Since: 1355
 *
 * @deprecated Use compendium.compendiumGetEntryByStatItem() instead
 */
export declare function compendiumGetEntryByStatItem(category: number | string, animalType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x729D54121A5E9E20 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGetMapDiscoverableFromStatItem() instead
 */
export declare function compendiumGetMapDiscoverableFromStatItem(animalStatItem: number | string, pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xF58A0C0E086E8E36 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetNumEntriesInSubcategory() instead
 */
export declare function compendiumGetNumEntriesInSubcategory(category: number | string, subcategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x6C5E5D48E48B4C65 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGetShortDescriptionFromPed() instead
 */
export declare function compendiumGetShortDescriptionFromPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x9F678782720349E4 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetStudyAwardId() instead
 */
export declare function compendiumGetStudyAwardId(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x9B657550DF55EC96 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetSubcategoryPedIsIn() instead
 */
export declare function compendiumGetSubcategoryPedIsIn(category: number | string, ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x59D4D68CDB82427C | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetSubcategorySampleToastDescComplete() instead
 */
export declare function compendiumGetSubcategorySampleToastDescComplete(category: number | string, subcategory: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x82BFB5B367957699 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetSubcategorySampleToastDescProgress() instead
 */
export declare function compendiumGetSubcategorySampleToastDescProgress(category: number | string, subcategory: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x5E50C67EB60951E6 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetSubcategorySampleToastTitle() instead
 */
export declare function compendiumGetSubcategorySampleToastTitle(category: number | string, subcategory: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x2BF30D9D4D680112 | Since: 1311
 *
 * @deprecated Use compendium.compendiumGetSubcategoryToastAppId() instead
 */
export declare function compendiumGetSubcategoryToastAppId(category: number | string, subcategory: number | string): any;
/**
 * herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
 * Vector3: Player Location
 *
 * Hash: 0x725D52F21A5E9E09 | Since: 1207
 *
 * @deprecated Use compendium.compendiumHerbPicked() instead
 */
export declare function compendiumHerbPicked(herbType: number | string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x725D52F21A5E9E50 | Since: 1207
 *
 * @deprecated Use compendium.compendiumHorseBonding() instead
 */
export declare function compendiumHorseBonding(ped: number | Ped, bondingLevel: number): void;
/**
 * Only gets called if bSetObserved is true and animalType is matching
 *
 * Hash: 0x725D58F2125E5E50 | Since: 1207
 *
 * @deprecated Use compendium.compendiumHorseObserved() instead
 */
export declare function compendiumHorseObserved(ped: number | Ped, disableCompendiumToast: boolean): void;
/**
 * NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
 *
 * Hash: 0x725852D21A2E9E50 | Since: 1207
 *
 * @deprecated Use compendium.compendiumHorseWildBroken() instead
 */
export declare function compendiumHorseWildBroken(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x23B5E9C5160BC04F | Since: 1311
 *
 * @deprecated Use compendium.compendiumWasAnimalObserved() instead
 */
export declare function compendiumWasAnimalObserved(ped: number | Ped): boolean;
/**
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_*
 *
 * Hash: 0x725D52F21A5E9E22 | Since: 1207
 *
 * @deprecated Use compendium._0x725D52F21A5E9E22() instead
 */
export declare function _0x725D52F21A5E9E22(category: number | string): number;
/**
 * Only used in R* SP Scripts, category = GANGS
 * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_*
 *
 * Hash: 0x729D52461AEA9E22 | Since: 1207
 *
 * @deprecated Use compendium._0x729D52461AEA9E22() instead
 */
export declare function _0x729D52461AEA9E22(category: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x729D52F61A5A9E22 | Since: 1207
 *
 * @deprecated Use compendium.compendiumGetNumOfEntriesInCategory() instead
 */
export declare function compendiumGetNumOfEntriesInCategory(category: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xCD278B6BFBDBDC22 | Since: 1355
 *
 * @deprecated Use compendium.compendiumGetSubcategoryHashFromAnimalType() instead
 */
export declare function compendiumGetSubcategoryHashFromAnimalType(category: number | string, animalType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x0FD3ECF9D0C8655F | Since: 1207
 *
 * @deprecated Use crashlog._0x0FD3ECF9D0C8655F() instead
 */
export declare function _0x0FD3ECF9D0C8655F(): void;
/**
 * No comment provided
 *
 * Hash: 0x23CCAB8F40B9CBEE | Since: 1207
 *
 * @deprecated Use crashlog._0x23CCAB8F40B9CBEE() instead
 */
export declare function _0x23CCAB8F40B9CBEE(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x33C1D63E55FA4284 | Since: 1207
 *
 * @deprecated Use crashlog._0x33C1D63E55FA4284() instead
 */
export declare function _0x33C1D63E55FA4284(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A66F1963B223F61 | Since: 1207
 *
 * @deprecated Use crashlog._0x3A66F1963B223F61() instead
 */
export declare function _0x3A66F1963B223F61(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4E42CA5BCD45444A | Since: 1207
 *
 * @deprecated Use crashlog._0x4E42CA5BCD45444A() instead
 */
export declare function _0x4E42CA5BCD45444A(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C680FF55617F82F | Since: 1207
 *
 * @deprecated Use crashlog._0x7C680FF55617F82F() instead
 */
export declare function _0x7C680FF55617F82F(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x87F005C969EF1563 | Since: 1207
 *
 * @deprecated Use crashlog._0x87F005C969EF1563() instead
 */
export declare function _0x87F005C969EF1563(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA67F0B039D9CD513 | Since: 1207
 *
 * @deprecated Use crashlog._0xA67F0B039D9CD513() instead
 */
export declare function _0xA67F0B039D9CD513(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA0BAC376C541978 | Since: 1207
 *
 * @deprecated Use crashlog._0xCA0BAC376C541978() instead
 */
export declare function _0xCA0BAC376C541978(): void;
/**
 * No comment provided
 *
 * Hash: 0xD8E3D22AA4F0E0A5 | Since: 1207
 *
 * @deprecated Use crashlog._0xD8E3D22AA4F0E0A5() instead
 */
export declare function _0xD8E3D22AA4F0E0A5(): boolean;
/**
 * unused = true
 *
 * Hash: 0xDA05310EA94DC8C6 | Since: 1436
 *
 * @deprecated Use crashlog._0xDA05310EA94DC8C6() instead
 */
export declare function _0xDA05310EA94DC8C6(): void;
/**
 * No comment provided
 *
 * Hash: 0xE72E234B30DA7B7A | Since: 1207
 *
 * @deprecated Use crashlog._0xE72E234B30DA7B7A() instead
 */
export declare function _0xE72E234B30DA7B7A(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0D545C1EEAD614A | Since: 1207
 *
 * @deprecated Use crashlog._0xF0D545C1EEAD614A() instead
 */
export declare function _0xF0D545C1EEAD614A(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC90BEF | Since: 1207
 *
 * @deprecated Use crew.networkClanGetLocalMembershipsCount() instead
 */
export declare function networkClanGetLocalMembershipsCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x48DE78AF2C8885B8 | Since: 1207
 *
 * @deprecated Use crew.networkClanGetMembershipDesc() instead
 */
export declare function networkClanGetMembershipDesc(memberDesc: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA134777FF7F33331 | Since: 1207
 *
 * @deprecated Use crew.networkClanIsEmblemReady() instead
 */
export declare function networkClanIsEmblemReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEEE6EACBE8874FBA | Since: 1207
 *
 * @deprecated Use crew.networkClanPlayerGetDesc() instead
 */
export declare function networkClanPlayerGetDesc(clanDesc: any, bufferSize: number, gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB124B57F571D8F18 | Since: 1207
 *
 * @deprecated Use crew.networkClanPlayerIsActive() instead
 */
export declare function networkClanPlayerIsActive(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x113E6E3E50E286B0 | Since: 1207
 *
 * @deprecated Use crew.networkClanReleaseEmblem() instead
 */
export declare function networkClanReleaseEmblem(): void;
/**
 * No comment provided
 *
 * Hash: 0x13518FF1C6B28938 | Since: 1207
 *
 * @deprecated Use crew.networkClanRequestEmblem() instead
 */
export declare function networkClanRequestEmblem(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x579CCED0265D4896 | Since: 1207
 *
 * @deprecated Use crew.networkClanServiceIsValid() instead
 */
export declare function networkClanServiceIsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE532D6811B3A4D2A | Since: 1207
 *
 * @deprecated Use crew.networkFindGamersInCrew() instead
 */
export declare function networkFindGamersInCrew(crewId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9AA46BADAD0E27ED | Since: 1207
 *
 * @deprecated Use crew.networkGetPrimaryClanDataClear() instead
 */
export declare function networkGetPrimaryClanDataClear(): any;
/**
 * No comment provided
 *
 * Hash: 0xC080FF658B2E41DA | Since: 1207
 *
 * @deprecated Use crew.networkGetPrimaryClanDataNew() instead
 */
export declare function networkGetPrimaryClanDataNew(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB5074DB804E28CE7 | Since: 1207
 *
 * @deprecated Use crew.networkGetPrimaryClanDataPending() instead
 */
export declare function networkGetPrimaryClanDataPending(): any;
/**
 * No comment provided
 *
 * Hash: 0xCE86D8191B762107 | Since: 1207
 *
 * @deprecated Use crew.networkGetPrimaryClanDataStart() instead
 */
export declare function networkGetPrimaryClanDataStart(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B4F04F19376A0BA | Since: 1207
 *
 * @deprecated Use crew.networkGetPrimaryClanDataSuccess() instead
 */
export declare function networkGetPrimaryClanDataSuccess(): any;
/**
 * No comment provided
 *
 * Hash: 0x58D378AF2C8765B7 | Since: 1207
 *
 * @deprecated Use crew._0x58D378AF2C8765B7() instead
 */
export declare function _0x58D378AF2C8765B7(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8E2143144B8E188D | Since: 1207
 *
 * @deprecated Use crew.networkAcceptClanInvite() instead
 */
export declare function networkAcceptClanInvite(crewInviteIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC685B014CE3D988B | Since: 1207
 *
 * @deprecated Use crew.networkClanInvitePlayer() instead
 */
export declare function networkClanInvitePlayer(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC080FF658B2E51DA | Since: 1207
 *
 * @deprecated Use crew.networkClanSetActive() instead
 */
export declare function networkClanSetActive(): any;
/**
 * No comment provided
 *
 * Hash: 0x1E7130793AAAAB8D | Since: 1207
 *
 * @deprecated Use databinding.databindingIsEntryValid() instead
 */
export declare function databindingIsEntryValid(entryId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x570784D782597512 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadInt() instead
 */
export declare function databindingReadInt(): number;
/**
 * No comment provided
 *
 * Hash: 0x4FF713B2F17A391E | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteStringFromParent() instead
 */
export declare function databindingWriteStringFromParent(): void;
/**
 * No comment provided
 *
 * Hash: 0x02B21B6BEEDD83CC | Since: 1207
 *
 * @deprecated Use databinding._0x02B21B6BEEDD83CC() instead
 */
export declare function _0x02B21B6BEEDD83CC(entryId: number | string): any;
/**
 * _DATABINDING_WRITE_DATA_*
 *
 * Hash: 0x05AC9E1E02975AFB | Since: 1207
 *
 * @deprecated Use databinding._0x05AC9E1E02975AFB() instead
 */
export declare function _0x05AC9E1E02975AFB(): void;
/**
 * No comment provided
 *
 * Hash: 0x1919D59E60FD516E | Since: 1207
 *
 * @deprecated Use databinding._0x1919D59E60FD516E() instead
 */
export declare function _0x1919D59E60FD516E(): void;
/**
 * No comment provided
 *
 * Hash: 0x294AF5323F44B053 | Since: 1207
 *
 * @deprecated Use databinding._0x294AF5323F44B053() instead
 */
export declare function _0x294AF5323F44B053(): any;
/**
 * No comment provided
 *
 * Hash: 0x3BF0767CF33FCC88 | Since: 1207
 *
 * @deprecated Use databinding._0x3BF0767CF33FCC88() instead
 */
export declare function _0x3BF0767CF33FCC88(entryId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x422179C7F6AD9304 | Since: 1207
 *
 * @deprecated Use databinding._0x422179C7F6AD9304() instead
 */
export declare function _0x422179C7F6AD9304(gamerHandle: any): void;
/**
 * No comment provided
 *
 * Hash: 0x6318FB3BE37E11B3 | Since: 1207
 *
 * @deprecated Use databinding._0x6318FB3BE37E11B3() instead
 */
export declare function _0x6318FB3BE37E11B3(entryId: number | string, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6329C34BEE5BFF4B | Since: 1207
 *
 * @deprecated Use databinding._0x6329C34BEE5BFF4B() instead
 */
export declare function _0x6329C34BEE5BFF4B(): any;
/**
 * No comment provided
 *
 * Hash: 0x7FC60C94C83C5CD7 | Since: 1207
 *
 * @deprecated Use databinding._0x7FC60C94C83C5CD7() instead
 */
export declare function _0x7FC60C94C83C5CD7(): void;
/**
 * No comment provided
 *
 * Hash: 0xB138CA787F3DD858 | Since: 1207
 *
 * @deprecated Use databinding._0xB138CA787F3DD858() instead
 */
export declare function _0xB138CA787F3DD858(): void;
/**
 * _DATABINDING_WRITE_DATA_*
 *
 * Hash: 0xBFC83DA249BEFCC9 | Since: 1207
 *
 * @deprecated Use databinding._0xBFC83DA249BEFCC9() instead
 */
export declare function _0xBFC83DA249BEFCC9(): void;
/**
 * No comment provided
 *
 * Hash: 0xC900CEC8A172375B | Since: 1207
 *
 * @deprecated Use databinding._0xC900CEC8A172375B() instead
 */
export declare function _0xC900CEC8A172375B(): void;
/**
 * No comment provided
 *
 * Hash: 0xD48993A61938C64D | Since: 1207
 *
 * @deprecated Use databinding._0xD48993A61938C64D() instead
 */
export declare function _0xD48993A61938C64D(): any;
/**
 * p0 seems to always be empty string, p1 is the hash of the path
 *
 * Hash: 0xD7DB94AB78E8EBE4 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataContainerFromPathByHash() instead
 */
export declare function databindingAddDataContainerFromPathByHash(path: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xE6AAB897120492D6 | Since: 1207
 *
 * @deprecated Use databinding._0xE6AAB897120492D6() instead
 */
export declare function _0xE6AAB897120492D6(): any;
/**
 * No comment provided
 *
 * Hash: 0xE6AAB897120492D7 | Since: 1207
 *
 * @deprecated Use databinding._0xE6AAB897120492D7() instead
 */
export declare function _0xE6AAB897120492D7(): void;
/**
 * No comment provided
 *
 * Hash: 0xF47E33F8D2523825 | Since: 1207
 *
 * @deprecated Use databinding._0xF47E33F8D2523825() instead
 */
export declare function _0xF47E33F8D2523825(): any;
/**
 * No comment provided
 *
 * Hash: 0x58BAA5F635DA2FF4 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataBool() instead
 */
export declare function databindingAddDataBool(): any;
/**
 * No comment provided
 *
 * Hash: 0xBC95D3AE2ECA70D6 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataBoolByHash() instead
 */
export declare function databindingAddDataBoolByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x37BB86A751148A6A | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataBoolFromPath() instead
 */
export declare function databindingAddDataBoolFromPath(): any;
/**
 * Returns entryId Hash
 *
 * Hash: 0xEB4F9A3537EEABCD | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataContainer() instead
 */
export declare function databindingAddDataContainer(entryId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x98BB14345BB68257 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataContainerByHash() instead
 */
export declare function databindingAddDataContainerByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x0C827D175F1292F4 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataContainerFromPath() instead
 */
export declare function databindingAddDataContainerFromPath(): any;
/**
 * No comment provided
 *
 * Hash: 0x5154228273ADB9A6 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataFloat() instead
 */
export declare function databindingAddDataFloat(): any;
/**
 * No comment provided
 *
 * Hash: 0x7D0F2014DB28DD00 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataGangId() instead
 */
export declare function databindingAddDataGangId(gangId: any): any;
/**
 * No comment provided
 *
 * Hash: 0x8538F1205D60ECA6 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataHash() instead
 */
export declare function databindingAddDataHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x8E173DFB041993C6 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataHashByHash() instead
 */
export declare function databindingAddDataHashByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x307A3247C5457BDE | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataInt() instead
 */
export declare function databindingAddDataInt(): any;
/**
 * No comment provided
 *
 * Hash: 0x267F9527F4350ADE | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataIntByHash() instead
 */
export declare function databindingAddDataIntByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x7D0F2014DB28DD01 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataPosseId() instead
 */
export declare function databindingAddDataPosseId(posseId: any): any;
/**
 * No comment provided
 *
 * Hash: 0x617FCA1C5652BBAD | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataString() instead
 */
export declare function databindingAddDataString(): any;
/**
 * No comment provided
 *
 * Hash: 0xEAD09E76E22630C3 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataStringByHash() instead
 */
export declare function databindingAddDataStringByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0xA381DE86EE170C4A | Since: 1207
 *
 * @deprecated Use databinding.databindingAddDataStringFromPath() instead
 */
export declare function databindingAddDataStringFromPath(): any;
/**
 * No comment provided
 *
 * Hash: 0x52F5F08278EA5D75 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddHashArray() instead
 */
export declare function databindingAddHashArray(): any;
/**
 * No comment provided
 *
 * Hash: 0x1B23E0627BDBFE85 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddStringArray() instead
 */
export declare function databindingAddStringArray(): any;
/**
 * No comment provided
 *
 * Hash: 0xFE74FA57E0CE6824 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddUiItemList() instead
 */
export declare function databindingAddUiItemList(): any;
/**
 * No comment provided
 *
 * Hash: 0x3C7799283325181B | Since: 1207
 *
 * @deprecated Use databinding.databindingAddUiItemListByHash() instead
 */
export declare function databindingAddUiItemListByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0xDB5B9A474148F699 | Since: 1207
 *
 * @deprecated Use databinding.databindingAddUiItemListFromPath() instead
 */
export declare function databindingAddUiItemListFromPath(): any;
/**
 * No comment provided
 *
 * Hash: 0xA1F15C1D03DF802D | Since: 1207
 *
 * @deprecated Use databinding.databindingClearBindingArray() instead
 */
export declare function databindingClearBindingArray(entryId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD23F5DE04FE717E2 | Since: 1207
 *
 * @deprecated Use databinding.databindingGetArrayCount() instead
 */
export declare function databindingGetArrayCount(entryId: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x0C827D175F1292F3 | Since: 1207
 *
 * @deprecated Use databinding.databindingGetDataContainerFromChildIndex() instead
 */
export declare function databindingGetDataContainerFromChildIndex(entryId: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x0C827D175F1292F2 | Since: 1207
 *
 * @deprecated Use databinding.databindingGetDataContainerFromPath() instead
 */
export declare function databindingGetDataContainerFromPath(): any;
/**
 * No comment provided
 *
 * Hash: 0xE96D7F9FEFCC105F | Since: 1207
 *
 * @deprecated Use databinding.databindingGetItemContextByIndex() instead
 */
export declare function databindingGetItemContextByIndex(index: number): any;
/**
 * No comment provided
 *
 * Hash: 0xEE97A05C05F16E41 | Since: 1207
 *
 * @deprecated Use databinding.databindingInsertUiItemToListFromContextHashAlias() instead
 */
export declare function databindingInsertUiItemToListFromContextHashAlias(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5859E970794D92F3 | Since: 1207
 *
 * @deprecated Use databinding.databindingInsertUiItemToListFromContextStringAlias() instead
 */
export declare function databindingInsertUiItemToListFromContextStringAlias(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5740774F608E4FC8 | Since: 1207
 *
 * @deprecated Use databinding.databindingInsertUiItemToListFromPathStringAlias() instead
 */
export declare function databindingInsertUiItemToListFromPathStringAlias(): void;
/**
 * No comment provided
 *
 * Hash: 0x5EEFBD4B6D7CD6EB | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataBool() instead
 */
export declare function databindingReadDataBool(): any;
/**
 * No comment provided
 *
 * Hash: 0xA8EDE09FE07BD77F | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataBoolFromParent() instead
 */
export declare function databindingReadDataBoolFromParent(): any;
/**
 * No comment provided
 *
 * Hash: 0x4CDC3FDDFAE07EB3 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataBoolFromParentByHash() instead
 */
export declare function databindingReadDataBoolFromParentByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x9B535990B01B62DE | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataHashStringFromParent() instead
 */
export declare function databindingReadDataHashStringFromParent(): any;
/**
 * No comment provided
 *
 * Hash: 0x1F43BC25A119B252 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataHashStringFromParentByHash() instead
 */
export declare function databindingReadDataHashStringFromParentByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0xFFC566A4801F6B40 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataIntFromParent() instead
 */
export declare function databindingReadDataIntFromParent(): any;
/**
 * No comment provided
 *
 * Hash: 0xB5F668B648EC0970 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataIntFromParentByHash() instead
 */
export declare function databindingReadDataIntFromParentByHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x3D290B5FFA7C5151 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataString() instead
 */
export declare function databindingReadDataString(): any;
/**
 * No comment provided
 *
 * Hash: 0x6323AD277C4A2AFB | Since: 1207
 *
 * @deprecated Use databinding.databindingReadDataStringFromParent() instead
 */
export declare function databindingReadDataStringFromParent(): any;
/**
 * No comment provided
 *
 * Hash: 0x5FE444EB67C70AD4 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadFloat() instead
 */
export declare function databindingReadFloat(entryId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x81D7183E7A8ECA72 | Since: 1207
 *
 * @deprecated Use databinding.databindingReadHash() instead
 */
export declare function databindingReadHash(entryId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF68B1726EAF7B285 | Since: 1207
 *
 * @deprecated Use databinding.databindingRemoveBindingArrayItemByDataContextId() instead
 */
export declare function databindingRemoveBindingArrayItemByDataContextId(entryId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0AE9938D0541F2DA | Since: 1207
 *
 * @deprecated Use databinding.databindingRemoveDataEntry() instead
 */
export declare function databindingRemoveDataEntry(entryId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0AE7138D0541F2DE | Since: 1207
 *
 * @deprecated Use databinding.databindingSetTemplatedUiItemHashAlias() instead
 */
export declare function databindingSetTemplatedUiItemHashAlias(): void;
/**
 * No comment provided
 *
 * Hash: 0xFE74FA57E0CE6825 | Since: 1207
 *
 * @deprecated Use databinding.databindingSetTemplatedUiItemListSize() instead
 */
export declare function databindingSetTemplatedUiItemListSize(): void;
/**
 * No comment provided
 *
 * Hash: 0xAB888B4B91046770 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataBool() instead
 */
export declare function databindingWriteDataBool(): void;
/**
 * No comment provided
 *
 * Hash: 0xBDFE546E4C2D0E21 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataBoolFromParent() instead
 */
export declare function databindingWriteDataBoolFromParent(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF504BECEB15DA93 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataFloat() instead
 */
export declare function databindingWriteDataFloat(): void;
/**
 * No comment provided
 *
 * Hash: 0xC70041408E16BE2D | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataGangId() instead
 */
export declare function databindingWriteDataGangId(gangId: any): void;
/**
 * No comment provided
 *
 * Hash: 0xACDEF586BD71B1FD | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataHashString() instead
 */
export declare function databindingWriteDataHashString(): void;
/**
 * No comment provided
 *
 * Hash: 0x0971F04E1EAA7AE8 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataHashStringFromParent() instead
 */
export declare function databindingWriteDataHashStringFromParent(): void;
/**
 * No comment provided
 *
 * Hash: 0x20209529689E0953 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataHashStringFromParentByHash() instead
 */
export declare function databindingWriteDataHashStringFromParentByHash(): void;
/**
 * No comment provided
 *
 * Hash: 0x335C3F6B3766B8D9 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataInt() instead
 */
export declare function databindingWriteDataInt(): void;
/**
 * No comment provided
 *
 * Hash: 0x9EFA98238BA08FC4 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataIntFromParent() instead
 */
export declare function databindingWriteDataIntFromParent(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D6E10A41D6ED6EC | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataIntFromParentByHash() instead
 */
export declare function databindingWriteDataIntFromParentByHash(): void;
/**
 * No comment provided
 *
 * Hash: 0xC70041408E16BE2E | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataPosseId() instead
 */
export declare function databindingWriteDataPosseId(posseId: any): void;
/**
 * No comment provided
 *
 * Hash: 0xAB888B4B91046771 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataScriptVariables() instead
 */
export declare function databindingWriteDataScriptVariables(...params: string[]): void;
/**
 * No comment provided
 *
 * Hash: 0xE1BD342F2872AEE9 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteDataString() instead
 */
export declare function databindingWriteDataString(): void;
/**
 * No comment provided
 *
 * Hash: 0xA3BD6FF95E713EE5 | Since: 1207
 *
 * @deprecated Use databinding.databindingWriteStringFromHash() instead
 */
export declare function databindingWriteStringFromHash(): void;
/**
 * No comment provided
 *
 * Hash: 0x37963B56755BFB35 | Since: 1207
 *
 * @deprecated Use databinding.virtualCollectionExists() instead
 */
export declare function virtualCollectionExists(): any;
/**
 * No comment provided
 *
 * Hash: 0x6DCBF187221CF73D | Since: 1207
 *
 * @deprecated Use databinding.virtualCollectionItemAdd() instead
 */
export declare function virtualCollectionItemAdd(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x09D95666ED2B5F60 | Since: 1207
 *
 * @deprecated Use databinding.virtualCollectionReset() instead
 */
export declare function virtualCollectionReset(): void;
/**
 * No comment provided
 *
 * Hash: 0x49A8447533308BCF | Since: 1207
 *
 * @deprecated Use databinding.virtualCollectionSetInterestIndex() instead
 */
export declare function virtualCollectionSetInterestIndex(interestIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9DCE9B01A93B58BC | Since: 1207
 *
 * @deprecated Use databinding.virtualCollectionSetSize() instead
 */
export declare function virtualCollectionSetSize(size: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAB1231D2DE52F2D3 | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetBool() instead
 */
export declare function dataarrayGetBool(arrayData: any, arrayIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A885BF69239E539 | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetCount() instead
 */
export declare function dataarrayGetCount(arrayData: any): number;
/**
 * No comment provided
 *
 * Hash: 0xA010655985853485 | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetDict() instead
 */
export declare function dataarrayGetDict(arrayData: any, arrayIndex: number): any;
/**
 * No comment provided
 *
 * Hash: 0xA9D003CF419CB81E | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetFloat() instead
 */
export declare function dataarrayGetFloat(arrayData: any, arrayIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x96DEA500B6EBBE53 | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetInt() instead
 */
export declare function dataarrayGetInt(arrayData: any, arrayIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB6790A8FF80F889F | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetString() instead
 */
export declare function dataarrayGetString(arrayData: any, arrayIndex: number): string;
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * Hash: 0x151DAFE6B3B9888F | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetType() instead
 */
export declare function dataarrayGetType(arrayData: any, arrayIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x850DA2750DA14E9A | Since: 1207
 *
 * @deprecated Use datafile.dataarrayGetVector() instead
 */
export declare function dataarrayGetVector(arrayData: any, arrayIndex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x1B5447CF18544B18 | Since: 1207
 *
 * @deprecated Use datafile.datadictGetArray() instead
 */
export declare function datadictGetArray(objectData: any, key: string): any;
/**
 * No comment provided
 *
 * Hash: 0x175E915A486EE548 | Since: 1207
 *
 * @deprecated Use datafile.datadictGetBool() instead
 */
export declare function datadictGetBool(objectData: any, key: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D7A30130F46AC9C | Since: 1207
 *
 * @deprecated Use datafile.datadictGetDict() instead
 */
export declare function datadictGetDict(objectData: any, key: string): any;
/**
 * No comment provided
 *
 * Hash: 0x814643ECA258ADF5 | Since: 1207
 *
 * @deprecated Use datafile.datadictGetFloat() instead
 */
export declare function datadictGetFloat(objectData: any, key: string): number;
/**
 * No comment provided
 *
 * Hash: 0x9D896A3B87D96E2B | Since: 1207
 *
 * @deprecated Use datafile.datadictGetInt() instead
 */
export declare function datadictGetInt(objectData: any, key: string): number;
/**
 * No comment provided
 *
 * Hash: 0xE37B38C0B4E95DFA | Since: 1207
 *
 * @deprecated Use datafile.datadictGetString() instead
 */
export declare function datadictGetString(objectData: any, key: string): string;
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * Hash: 0x92E11E3CA4C7CDF0 | Since: 1207
 *
 * @deprecated Use datafile.datadictGetType() instead
 */
export declare function datadictGetType(objectData: any, key: string): number;
/**
 * No comment provided
 *
 * Hash: 0xE459C941431E0FFA | Since: 1207
 *
 * @deprecated Use datafile.datadictGetVector() instead
 */
export declare function datadictGetVector(objectData: any, key: string): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xB04B69CF277D15C0 | Since: 1207
 *
 * @deprecated Use datafile.datadictIsArrayValid() instead
 */
export declare function datadictIsArrayValid(fileDict: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4607D57C5F7D332A | Since: 1207
 *
 * @deprecated Use datafile.datadictIsDictValid() instead
 */
export declare function datadictIsDictValid(fileDict: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26FDF5E99AA2F3E9 | Since: 1207
 *
 * @deprecated Use datafile.datadictSetInt() instead
 */
export declare function datadictSetInt(objectData: any, key: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56B7291FB953DD51 | Since: 1207
 *
 * @deprecated Use datafile.datafileCreate() instead
 */
export declare function datafileCreate(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9FB90EEDEA9F2D5C | Since: 1207
 *
 * @deprecated Use datafile.datafileDelete() instead
 */
export declare function datafileDelete(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x604B8ED1A482F9DF | Since: 1207
 *
 * @deprecated Use datafile.datafileDeleteRequestedFile() instead
 */
export declare function datafileDeleteRequestedFile(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBBD8CF823CAE557C | Since: 1207
 *
 * @deprecated Use datafile.datafileGetFileDict() instead
 */
export declare function datafileGetFileDict(index: number): any;
/**
 * No comment provided
 *
 * Hash: 0x17279C820464CEE0 | Since: 1207
 *
 * @deprecated Use datafile.datafileHasLoadedFileData() instead
 */
export declare function datafileHasLoadedFileData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE60100389E50EADE | Since: 1207
 *
 * @deprecated Use datafile.datafileHasValidFileData() instead
 */
export declare function datafileHasValidFileData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x46102A0989AD80B5 | Since: 1207
 *
 * @deprecated Use datafile.datafileSelectActiveFile() instead
 */
export declare function datafileSelectActiveFile(): boolean;
/**
 * Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
 *
 * Hash: 0x790EC421078F5C4E | Since: 1207
 *
 * @deprecated Use datafile.datafileUgcSelectData() instead
 */
export declare function datafileUgcSelectData(ugcRequestId: any, index: number): any;
/**
 * Adds the given request ID to the watch list.
 *
 * Hash: 0xA5834834CA8FD7FC | Since: 1207
 *
 * @deprecated Use datafile.datafileWatchRequestId() instead
 */
export declare function datafileWatchRequestId(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x603AC35FD4602C76 | Since: 1207
 *
 * @deprecated Use datafile.parseddataIsFileLoaded() instead
 */
export declare function parseddataIsFileLoaded(fileHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7907969497EA92F5 | Since: 1207
 *
 * @deprecated Use datafile.parseddataIsFileValid() instead
 */
export declare function parseddataIsFileValid(fileHandle: number): boolean;
/**
 * Old name: _DATAFILE_GET_HASH
 *
 * Hash: 0xFBFF3FF2F5E80C0B | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutHash() instead
 */
export declare function parseddataRqFilloutHash(): boolean;
/**
 * Old name: _DATAFILE_GET_DATA_NODE_INDEX
 *
 * Hash: 0x83C3ED532B6E5D07 | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutNode() instead
 */
export declare function parseddataRqFilloutNode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x951327435DC5164B | Since: 1232
 *
 * @deprecated Use datafile.parseddataRqFilloutString127() instead
 */
export declare function parseddataRqFilloutString127(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE79C70E77E0973C7 | Since: 1207
 *
 * @deprecated Use datafile.ugc2SetPlayerData() instead
 */
export declare function ugc2SetPlayerData(): any;
/**
 * No comment provided
 *
 * Hash: 0x1C65CC931C0F946F | Since: 1207
 *
 * @deprecated Use datafile._0x1C65CC931C0F946F() instead
 */
export declare function _0x1C65CC931C0F946F(): void;
/**
 * No comment provided
 *
 * Hash: 0x277251C161B4C3F4 | Since: 1207
 *
 * @deprecated Use datafile._0x277251C161B4C3F4() instead
 */
export declare function _0x277251C161B4C3F4(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x3168BA5D6DECE323 | Since: 1207
 *
 * @deprecated Use datafile._0x3168BA5D6DECE323() instead
 */
export declare function _0x3168BA5D6DECE323(): void;
/**
 * No comment provided
 *
 * Hash: 0x4F9E3ED7617123AC | Since: 1207
 *
 * @deprecated Use datafile._0x4F9E3ED7617123AC() instead
 */
export declare function _0x4F9E3ED7617123AC(): any;
/**
 * No comment provided
 *
 * Hash: 0x7681B677400C7071 | Since: 1207
 *
 * @deprecated Use datafile._0x7681B677400C7071() instead
 */
export declare function _0x7681B677400C7071(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F130129EBC31B34 | Since: 1207
 *
 * @deprecated Use datafile._0x9F130129EBC31B34() instead
 */
export declare function _0x9F130129EBC31B34(): void;
/**
 * No comment provided
 *
 * Hash: 0xBC0DF006A4952C68 | Since: 1207
 *
 * @deprecated Use datafile._0xBC0DF006A4952C68() instead
 */
export declare function _0xBC0DF006A4952C68(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA56DD6AB7A39F64 | Since: 1207
 *
 * @deprecated Use datafile._0xCA56DD6AB7A39F64() instead
 */
export declare function _0xCA56DD6AB7A39F64(): any;
/**
 * No comment provided
 *
 * Hash: 0xE13634BB6BAF0734 | Since: 1207
 *
 * @deprecated Use datafile._0xE13634BB6BAF0734() instead
 */
export declare function _0xE13634BB6BAF0734(): number;
/**
 * No comment provided
 *
 * Hash: 0xA63CD20F19B961AB | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetBool() instead
 */
export declare function parseddataGetBool(): boolean;
/**
 * Returns false when there are no entries.
 *
 * Hash: 0xED4413CEE1BF142C | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetEntries() instead
 */
export declare function parseddataGetEntries(): boolean;
/**
 * Opens file.
 *
 * Hash: 0x91DED5DD64BB2691 | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetFile() instead
 */
export declare function parseddataGetFile(): void;
/**
 * No comment provided
 *
 * Hash: 0xB2B42607F7867576 | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetFloat() instead
 */
export declare function parseddataGetFloat(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52FC26D2D2FC2987 | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetInt() instead
 */
export declare function parseddataGetInt(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6BEB168D5195E7AB | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetNumChildren() instead
 */
export declare function parseddataGetNumChildren(): any;
/**
 * No comment provided
 *
 * Hash: 0x44B3A36933AC009C | Since: 1207
 *
 * @deprecated Use datafile.parseddataGetSection() instead
 */
export declare function parseddataGetSection(section: number | string): boolean;
/**
 * LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
 * Returns parseddata script fileHandle
 *
 * Hash: 0xD97D8D905F1562F2 | Since: 1207
 *
 * @deprecated Use datafile.parseddataLoadFileHash() instead
 */
export declare function parseddataLoadFileHash(): number;
/**
 * No comment provided
 *
 * Hash: 0xAE156A747C39A741 | Since: 1207
 *
 * @deprecated Use datafile.parseddataRegisterQuery() instead
 */
export declare function parseddataRegisterQuery(): any;
/**
 * Old name: _DATAFILE_GET_BOOL
 *
 * Hash: 0x0D9138F3F8261DF7 | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutBool() instead
 */
export declare function parseddataRqFilloutBool(): boolean;
/**
 * Old name: _DATAFILE_GET_FLOAT
 *
 * Hash: 0x7F034FC3E891B57A | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutFloat() instead
 */
export declare function parseddataRqFilloutFloat(): boolean;
/**
 * Old name: _DATAFILE_GET_INT
 *
 * Hash: 0xEF44ACC657352A35 | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutInt() instead
 */
export declare function parseddataRqFilloutInt(): boolean;
/**
 * Old name: _DATAFILE_GET_STRING
 *
 * Hash: 0x08EAF8E9F2EB7B2E | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutString63() instead
 */
export declare function parseddataRqFilloutString63(): boolean;
/**
 * Old name: _DATAFILE_GET_VECTOR
 *
 * Hash: 0x06FBF89B12DA279C | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqFilloutVector() instead
 */
export declare function parseddataRqFilloutVector(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF01B1F7A886B42D | Since: 1207
 *
 * @deprecated Use datafile.parseddataRqGetNumNodes() instead
 */
export declare function parseddataRqGetNumNodes(): any;
/**
 * No comment provided
 *
 * Hash: 0x129567F0C05F81B9 | Since: 1207
 *
 * @deprecated Use datafile.parseddataUnloadFile() instead
 */
export declare function parseddataUnloadFile(fileHandle: number): void;
/**
 * Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
 *
 * Old name: _GET_GAME_BUILD_STRING
 *
 * Hash: 0x05A5F662AD35C573 | Since: 1207
 *
 * @deprecated Use debug.getGameVersionName() instead
 */
export declare function getGameVersionName(): string;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xA8D970D8A72640A6 | Since: 1207
 *
 * @deprecated Use debug._0xA8D970D8A72640A6() instead
 */
export declare function _0xA8D970D8A72640A6(): any;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xACF9CB705BEFA8CB | Since: 1207
 *
 * @deprecated Use debug._0xACF9CB705BEFA8CB() instead
 */
export declare function _0xACF9CB705BEFA8CB(): any;
/**
 * Returns whether or not the specified property is set for the entity.
 *
 * Hash: 0xD9D1CDBF3464DCDF | Since: 1207
 *
 * @deprecated Use decorator.decorExistOn() instead
 */
export declare function decorExistOn(entity: number | Entity, propertyName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDEF3F1B071ABB197 | Since: 1207
 *
 * @deprecated Use decorator.decorGetBool() instead
 */
export declare function decorGetBool(entity: number | Entity, propertyName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE5FF70CD842CA9D4 | Since: 1207
 *
 * @deprecated Use decorator.decorGetFloat() instead
 */
export declare function decorGetFloat(entity: number | Entity, propertyName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x44DB62727762FD9B | Since: 1207
 *
 * @deprecated Use decorator.decorGetInt() instead
 */
export declare function decorGetInt(entity: number | Entity, propertyName: string): number;
/**
 * type: see DECOR_REGISTER
 *
 * Hash: 0x72355278C069F272 | Since: 1207
 *
 * @deprecated Use decorator.decorIsRegisteredAsType() instead
 */
export declare function decorIsRegisteredAsType(propertyName: string, type: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0B253D644E3C36B3 | Since: 1207
 *
 * @deprecated Use decorator.decorRegister() instead
 */
export declare function decorRegister(propertyName: string, type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2BA7F5877A088A1D | Since: 1207
 *
 * @deprecated Use decorator.decorRemove() instead
 */
export declare function decorRemove(entity: number | Entity, propertyName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x88942780E0ADEA42 | Since: 1207
 *
 * @deprecated Use decorator.decorRemoveAll() instead
 */
export declare function decorRemoveAll(entity: number | Entity): boolean;
/**
 * This function sets metadata of type bool to specified entity.
 *
 *
 * Hash: 0xFE26E4609B1C3772 | Since: 1207
 *
 * @deprecated Use decorator.decorSetBool() instead
 */
export declare function decorSetBool(entity: number | Entity, propertyName: string, value: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x238F8B0C1C7FE834 | Since: 1207
 *
 * @deprecated Use decorator.decorSetFloat() instead
 */
export declare function decorSetFloat(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * Sets property to int.
 *
 * Hash: 0xE88F4D7F52A6090F | Since: 1207
 *
 * @deprecated Use decorator.decorSetInt() instead
 */
export declare function decorSetInt(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0671C1A3FF7AFDFC | Since: 1207
 *
 * @deprecated Use decorator.decorSetString() instead
 */
export declare function decorSetString(entity: number | Entity, propertyName: string, value: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1682B2443F0540B | Since: 1207
 *
 * @deprecated Use decorator.decorGetUint8() instead
 */
export declare function decorGetUint8(entity: number | Entity, propertyName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x4587374F88B7F6C2 | Since: 1207
 *
 * @deprecated Use decorator.decorRegister2() instead
 */
export declare function decorRegister2(propertyName: string, type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4BDC83150D43772D | Since: 1207
 *
 * @deprecated Use decorator.decorSetUint8() instead
 */
export declare function decorSetUint8(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x71D4BF5890659B0C | Since: 1207
 *
 * @deprecated Use dlc.getIsLoadingScreenActive() instead
 */
export declare function getIsLoadingScreenActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2763DC12BBE2BB6F | Since: 1207
 *
 * @deprecated Use dlc.isDlcPresent() instead
 */
export declare function isDlcPresent(dlcHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1DB9D61E505AE3FC | Since: 1207
 *
 * @deprecated Use dlc.getSpecialEditionCashCampBonusEnabled() instead
 */
export declare function getSpecialEditionCashCampBonusEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA16B4FBA7887D7BA | Since: 1207
 *
 * @deprecated Use dlc.getSpecialEditionCoreStatsBonusEnabled() instead
 */
export declare function getSpecialEditionCoreStatsBonusEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF15E8F5D333F09C4 | Since: 1207
 *
 * @deprecated Use entity.applyForceToEntity() instead
 */
export declare function applyForceToEntity(entity: number | Entity, forceFlags: number, pos: Vector3, offX: number, offY: number, offZ: number, boneIndex: number, isDirectionRel: boolean, ignoreUpVec: boolean, isForceRel: boolean): void;
/**
 * p6/relative - makes the xyz force not relative to world coords, but to something else
 * p7/highForce - setting false will make the force really low
 *
 * Hash: 0x31DA7CEC5334DB37 | Since: 1207
 *
 * @deprecated Use entity.applyForceToEntityCenterOfMass() instead
 */
export declare function applyForceToEntityCenterOfMass(entity: number | Entity, forceType: number, pos: Vector3, component: number, isDirectionRel: boolean, isForceRel: boolean): void;
/**
 * Attaches entity1 to bone (boneIndex) of entity2.
 *
 * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 *
 * useSoftPinning - if set to false attached entity will not detach when fixed
 * collision - controls collision between the two entities (FALSE disables collision).
 * isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
 * vertexIndex - position of vertex
 * fixedRot - if false it ignores entity vector
 *
 * Hash: 0x6B9BBD38AB0796DF | Since: 1207
 *
 * @deprecated Use entity.attachEntityToEntity() instead
 */
export declare function attachEntityToEntity(entity1: number | Entity, entity2: number | Entity, boneIndex: number, pos: Vector3, rot: Vector3, useSoftPinning: boolean, collision: boolean, isPed: boolean, vertexIndex: number, fixedRot: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB629A43CA1643481 | Since: 1207
 *
 * @deprecated Use entity.attachEntityToEntityPhysically() instead
 */
export declare function attachEntityToEntityPhysically(entity1: number | Entity, entity2: number | Entity, boneIndex: number, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB19AC7D4DCEFD0F | Since: 1207
 *
 * @deprecated Use entity.clearEntityLastDamageEntity() instead
 */
export declare function clearEntityLastDamageEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x0961A905AFBC34C7 | Since: 1207
 *
 * @deprecated Use entity.createForcedObject() instead
 */
export declare function createForcedObject(pos: Vector3, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x069848B3FB3C4426 | Since: 1207
 *
 * @deprecated Use entity.createModelHide() instead
 */
export declare function createModelHide(pos: Vector3, radius: number, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD136090A9AAAB17D | Since: 1207
 *
 * @deprecated Use entity.createModelHideExcludingScriptObjects() instead
 */
export declare function createModelHideExcludingScriptObjects(pos: Vector3, radius: number, model: number | string): void;
/**
 * Only works with objects!
 *
 * Hash: 0x10B2218320B6F5AC | Since: 1207
 *
 * @deprecated Use entity.createModelSwap() instead
 */
export declare function createModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
/**
 * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0x4CD38C78BD19A497 | Since: 1207
 *
 * @deprecated Use entity.deleteEntity() instead
 */
export declare function deleteEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x64CDE9D6BF8ECAD3 | Since: 1207
 *
 * @deprecated Use entity.detachEntity() instead
 */
export declare function detachEntity(entity: number | Entity, collision: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x622B1980CBE13332 | Since: 1207
 *
 * @deprecated Use entity.doesEntityBelongToThisScript() instead
 */
export declare function doesEntityBelongToThisScript(entity: number | Entity): boolean;
/**
 * Checks if the Entity exists
 *
 * Hash: 0xD42BD6EB2E0F1677 | Since: 1207
 *
 * @deprecated Use entity.doesEntityExist() instead
 */
export declare function doesEntityExist(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x20487F0DA9AF164A | Since: 1207
 *
 * @deprecated Use entity.doesEntityHaveDrawable() instead
 */
export declare function doesEntityHaveDrawable(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA512B3F1B2A0B51C | Since: 1207
 *
 * @deprecated Use entity.doesEntityHavePhysics() instead
 */
export declare function doesEntityHavePhysics(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42718CC559BD7776 | Since: 1207
 *
 * @deprecated Use entity.findAnimEventPhase() instead
 */
export declare function findAnimEventPhase(animDictionary: string, animName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C9E96473D4F1A88 | Since: 1207
 *
 * @deprecated Use entity.forceEntityAiAndAnimationUpdate() instead
 */
export declare function forceEntityAiAndAnimationUpdate(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7D9EFB7AD6B19754 | Since: 1207
 *
 * @deprecated Use entity.freezeEntityPosition() instead
 */
export declare function freezeEntityPosition(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9FFAF4940A54CC09 | Since: 1207
 *
 * @deprecated Use entity.getAnimDuration() instead
 */
export declare function getAnimDuration(animDict: string, animName: string): number;
/**
 * enum eCarriableState
 * {
 * CARRIABLE_STATE_NONE,
 * CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
 * CARRIABLE_STATE_CARRIABLE_INTRO,
 * CARRIABLE_STATE_CARRIABLE,
 * CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
 * CARRIABLE_STATE_CARRIED_BY_HUMAN,
 * CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
 * CARRIABLE_STATE_CARRIED_BY_MOUNT,
 * CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
 * CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
 * CARRIABLE_STATE_BEING_CUT_FREE,
 * CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
 * CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
 * };
 *
 * Hash: 0x61914209C36EFDDB | Since: 1207
 *
 * @deprecated Use entity.getCarriableEntityState() instead
 */
export declare function getCarriableEntityState(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x1BB501624FAF2BEA | Since: 1207
 *
 * @deprecated Use entity.getEntityAlpha() instead
 */
export declare function getEntityAlpha(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x56D713888A566481 | Since: 1207
 *
 * @deprecated Use entity.getEntityAttachedTo() instead
 */
export declare function getEntityAttachedTo(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xBACA8FE9C76C124E | Since: 1207
 *
 * @deprecated Use entity.getEntityBoneIndexByName() instead
 */
export declare function getEntityBoneIndexByName(entity: number | Entity, boneName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xAA2FADD30F45A9DA | Since: 1207
 *
 * @deprecated Use entity.getEntityCollisionDisabled() instead
 */
export declare function getEntityCollisionDisabled(entity: number | Entity): boolean;
/**
 * Gets the current coordinates for a specified entity.
 * `entity` = The entity to get the coordinates from.
 * `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
 *
 * If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
 *
 * Hash: 0xA86D5F069399F44D | Since: 1207
 *
 * @deprecated Use entity.getEntityCoords() instead
 */
export declare function getEntityCoords(entity: number | Entity, alive: boolean, realCoords: boolean): Vector3;
/**
 * Gets the entity's forward vector in XY(Z) eulers.
 *
 * Hash: 0x2412D9C05BB09B97 | Since: 1207
 *
 * @deprecated Use entity.getEntityForwardVector() instead
 */
export declare function getEntityForwardVector(entity: number | Entity): Vector3;
/**
 * Gets the X-component of the entity's forward vector.
 *
 * Hash: 0xDB0954E9960F6457 | Since: 1207
 *
 * @deprecated Use entity.getEntityForwardX() instead
 */
export declare function getEntityForwardX(entity: number | Entity): number;
/**
 * Gets the Y-component of the entity's forward vector.
 *
 * Hash: 0x9A5C073ECBDA7EE7 | Since: 1207
 *
 * @deprecated Use entity.getEntityForwardY() instead
 */
export declare function getEntityForwardY(entity: number | Entity): number;
/**
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 *
 * Hash: 0xC230DD956E2F5507 | Since: 1207
 *
 * @deprecated Use entity.getEntityHeading() instead
 */
export declare function getEntityHeading(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x82368787EA73C0F7 | Since: 1207
 *
 * @deprecated Use entity.getEntityHealth() instead
 */
export declare function getEntityHealth(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x296DEBC84474B375 | Since: 1207
 *
 * @deprecated Use entity.getEntityHeight() instead
 */
export declare function getEntityHeight(entity: number | Entity, pos: Vector3, atTop: boolean, inWorldCoords: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x0D3B5BAEA08F63E9 | Since: 1207
 *
 * @deprecated Use entity.getEntityHeightAboveGround() instead
 */
export declare function getEntityHeightAboveGround(entity: number | Entity): number;
/**
 * Returns the LOD distance of an entity.
 *
 * Hash: 0xDF240D0C2A948683 | Since: 1207
 *
 * @deprecated Use entity.getEntityLodDist() instead
 */
export declare function getEntityLodDist(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x3A9B1120AF13FBF2 | Since: 1207
 *
 * @deprecated Use entity.getEntityMatrix() instead
 */
export declare function getEntityMatrix(entity: number | Entity, rightVector: Vector3, forwardVector: Vector3, upVector: Vector3, position: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x15D757606D170C3C | Since: 1207
 *
 * @deprecated Use entity.getEntityMaxHealth() instead
 */
export declare function getEntityMaxHealth(entity: number | Entity): number;
/**
 * Returns the model hash from the entity
 *
 * Hash: 0xDA76A9F39210D365 | Since: 1207
 *
 * @deprecated Use entity.getEntityModel() instead
 */
export declare function getEntityModel(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xEF355ABEFF7F5005 | Since: 1207
 *
 * @deprecated Use entity.getEntityPitch() instead
 */
export declare function getEntityPitch(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xADE28862B6D7B85B | Since: 1207
 *
 * @deprecated Use entity.getEntityPopulationType() instead
 */
export declare function getEntityPopulationType(entity: number | Entity): number;
/**
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 *
 * Hash: 0xBF966536FA8B6879 | Since: 1207
 *
 * @deprecated Use entity.getEntityRoll() instead
 */
export declare function getEntityRoll(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xE09CAF86C32CB48F | Since: 1207
 *
 * @deprecated Use entity.getEntityRotation() instead
 */
export declare function getEntityRotation(entity: number | Entity, rotationOrder: number): Vector3;
/**
 * Result is in meters per second (m/s)
 *
 * Hash: 0xFB6BA510A533DF81 | Since: 1207
 *
 * @deprecated Use entity.getEntitySpeed() instead
 */
export declare function getEntitySpeed(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xF2DB09816A419DC5 | Since: 1207
 *
 * @deprecated Use entity.getEntitySpeedVector() instead
 */
export declare function getEntitySpeedVector(entity: number | Entity, relative: boolean): Vector3;
/**
 * Get how much of the entity is submerged.  1.0f is whole entity.
 *
 * Hash: 0x4A77C3F73FD9E831 | Since: 1207
 *
 * @deprecated Use entity.getEntitySubmergedLevel() instead
 */
export declare function getEntitySubmergedLevel(entity: number | Entity): number;
/**
 * Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
 *
 * Hash: 0x97F696ACA466B4E0 | Since: 1207
 *
 * @deprecated Use entity.getEntityType() instead
 */
export declare function getEntityType(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x56398BE65160C3BE | Since: 1207
 *
 * @deprecated Use entity.getEntityUprightValue() instead
 */
export declare function getEntityUprightValue(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x4805D2B1D8CF94A9 | Since: 1207
 *
 * @deprecated Use entity.getEntityVelocity() instead
 */
export declare function getEntityVelocity(entity: number | Entity): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x9A100F1CF4546629 | Since: 1207
 *
 * @deprecated Use entity.getIsAnimal() instead
 */
export declare function getIsAnimal(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x84CCF9A12942C83D | Since: 1207
 *
 * @deprecated Use entity.getMatchingEntities() instead
 */
export declare function getMatchingEntities(volume: number, itemSet: any, entityType: number): number;
/**
 * No comment provided
 *
 * Hash: 0x6888A43C35A5F630 | Since: 1207
 *
 * @deprecated Use entity.getNearestParticipantToEntity() instead
 */
export declare function getNearestParticipantToEntity(entity: number | Entity): number | string;
/**
 * No comment provided
 *
 * Hash: 0x990E294FC387FB88 | Since: 1207
 *
 * @deprecated Use entity.getNearestPlayerToEntity() instead
 */
export declare function getNearestPlayerToEntity(entity: number | Entity, playerPedToIgnore: number | Ped, flags: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0xB2C30C3B4AFF718C | Since: 1207
 *
 * @deprecated Use entity.getNearestPlayerToEntityOnTeam() instead
 */
export declare function getNearestPlayerToEntityOnTeam(entity: number | Entity, team: number, playerPedToIgnore: number | Ped, flags: number): number | string;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x280BBE5601EAA983 | Since: 1207
 *
 * @deprecated Use entity.getObjectIndexFromEntityIndex() instead
 */
export declare function getObjectIndexFromEntityIndex(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x497C6B1A2C9AE69C | Since: 1207
 *
 * @deprecated Use entity.getOffsetFromEntityGivenWorldCoords() instead
 */
export declare function getOffsetFromEntityGivenWorldCoords(entity: number | Entity, pos: Vector3): Vector3;
/**
 * Offset values are relative to the entity.
 *
 * x = left/right
 * y = forward/backward
 * z = up/down
 *
 * Hash: 0x1899F328B0E12848 | Since: 1207
 *
 * @deprecated Use entity.getOffsetFromEntityInWorldCoords() instead
 */
export declare function getOffsetFromEntityInWorldCoords(entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x0F16D042BD640EA3 | Since: 1207
 *
 * @deprecated Use entity.getPedIndexFromEntityIndex() instead
 */
export declare function getPedIndexFromEntityIndex(entity: number | Entity): number;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0xDF1E5AAC561AFC59 | Since: 1207
 *
 * @deprecated Use entity.getVehicleIndexFromEntityIndex() instead
 */
export declare function getVehicleIndexFromEntityIndex(entity: number | Entity): number;
/**
 * Returns the coordinates of an entity-bone.
 * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
 *
 * Hash: 0x82CFA50E34681CA5 | Since: 1207
 *
 * @deprecated Use entity.getWorldPositionOfEntityBone() instead
 */
export declare function getWorldPositionOfEntityBone(entity: number | Entity, boneIndex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x5851CC48405F4A07 | Since: 1207
 *
 * @deprecated Use entity.hasAnimEventFired() instead
 */
export declare function hasAnimEventFired(entity: number | Entity, actionHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBEB1600952B9CF5C | Since: 1207
 *
 * @deprecated Use entity.hasCollisionLoadedAroundEntity() instead
 */
export declare function hasCollisionLoadedAroundEntity(entity: number | Entity): boolean;
/**
 * Old name: _HAS_COLLISION_LOADED_AT_COORDS
 *
 * Hash: 0x6BFBDC46139C45AB | Since: 1207
 *
 * @deprecated Use entity.hasCollisionLoadedAroundPosition() instead
 */
export declare function hasCollisionLoadedAroundPosition(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAEB40615337EF1E3 | Since: 1207
 *
 * @deprecated Use entity.hasEntityAnimFinished() instead
 */
export declare function hasEntityAnimFinished(entity: number | Entity, animDict: string, animName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x73BB763880CD23A6 | Since: 1207
 *
 * @deprecated Use entity.hasEntityBeenDamagedByAnyObject() instead
 */
export declare function hasEntityBeenDamagedByAnyObject(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9934E9C42D52D87E | Since: 1207
 *
 * @deprecated Use entity.hasEntityBeenDamagedByAnyPed() instead
 */
export declare function hasEntityBeenDamagedByAnyPed(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x695D7C26DE65C423 | Since: 1207
 *
 * @deprecated Use entity.hasEntityBeenDamagedByAnyVehicle() instead
 */
export declare function hasEntityBeenDamagedByAnyVehicle(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7B6E7BEC1143AC86 | Since: 1207
 *
 * @deprecated Use entity.hasEntityBeenDamagedByEntity() instead
 */
export declare function hasEntityBeenDamagedByEntity(entity1: number | Entity, entity2: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C9DBF48C6BA6E4C | Since: 1207
 *
 * @deprecated Use entity.hasEntityClearLosToCoord() instead
 */
export declare function hasEntityClearLosToCoord(entity: number | Entity, pos: Vector3, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFCDFF7B72D23A1AC | Since: 1207
 *
 * @deprecated Use entity.hasEntityClearLosToEntity() instead
 */
export declare function hasEntityClearLosToEntity(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
/**
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 *
 * Hash: 0xE88F19660651D566 | Since: 1207
 *
 * @deprecated Use entity.hasEntityClearLosToEntityInFront() instead
 */
export declare function hasEntityClearLosToEntityInFront(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF18751EC74F90FF | Since: 1207
 *
 * @deprecated Use entity.hasEntityCollidedWithAnything() instead
 */
export declare function hasEntityCollidedWithAnything(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x27CFF3E5A286D3DF | Since: 1207
 *
 * @deprecated Use entity.isAnEntity() instead
 */
export declare function isAnEntity(handle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A27A546A375FDEF | Since: 1207
 *
 * @deprecated Use entity.isEntityAnObject() instead
 */
export declare function isEntityAnObject(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEE6AD63ABF59C0B7 | Since: 1207
 *
 * @deprecated Use entity.isEntityAttached() instead
 */
export declare function isEntityAttached(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x306C1F6178F01AB3 | Since: 1207
 *
 * @deprecated Use entity.isEntityAttachedToAnyObject() instead
 */
export declare function isEntityAttachedToAnyObject(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC841153DED2CA89A | Since: 1207
 *
 * @deprecated Use entity.isEntityAttachedToAnyPed() instead
 */
export declare function isEntityAttachedToAnyPed(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x12DF6E0D2E736749 | Since: 1207
 *
 * @deprecated Use entity.isEntityAttachedToAnyVehicle() instead
 */
export declare function isEntityAttachedToAnyVehicle(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x154A3C529497053E | Since: 1207
 *
 * @deprecated Use entity.isEntityAttachedToEntity() instead
 */
export declare function isEntityAttachedToEntity(from: number | Entity, to: number | Entity): boolean;
/**
 * Checks if entity is within x/y/zSize distance of x/y/z.
 *
 * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
 *
 * Hash: 0x5E58342602E94718 | Since: 1207
 *
 * @deprecated Use entity.isEntityAtCoord() instead
 */
export declare function isEntityAtCoord(entity: number | Entity, pos: Vector3, xSize: number, ySize: number, zSize: number): boolean;
/**
 * Checks if entity1 is within the box defined by x/y/zSize of entity2.
 *
 * Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
 *
 * Hash: 0xC057F02B837A27F6 | Since: 1207
 *
 * @deprecated Use entity.isEntityAtEntity() instead
 */
export declare function isEntityAtEntity(entity1: number | Entity, entity2: number | Entity, xSize: number, ySize: number, zSize: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x138190F64DB4BBD1 | Since: 1207
 *
 * @deprecated Use entity.isEntityAMissionEntity() instead
 */
export declare function isEntityAMissionEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF8176912DDA4EA5 | Since: 1207
 *
 * @deprecated Use entity.isEntityAPed() instead
 */
export declare function isEntityAPed(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC3D96AF45FCCEC4C | Since: 1207
 *
 * @deprecated Use entity.isEntityAVehicle() instead
 */
export declare function isEntityAVehicle(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D5B1F88E7504BBA | Since: 1207
 *
 * @deprecated Use entity.isEntityDead() instead
 */
export declare function isEntityDead(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x886E37EC497200B6 | Since: 1207
 *
 * @deprecated Use entity.isEntityInAir() instead
 */
export declare function isEntityInAir(entity: number | Entity): boolean;
/**
 * Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
 *
 * Angle is measured in degrees.
 *
 * Hash: 0xD3151E53134595E5 | Since: 1207
 *
 * @deprecated Use entity.isEntityInAngledArea() instead
 */
export declare function isEntityInAngledArea(entity: number | Entity, originX: number, originY: number, originZ: number, edgeX: number, edgeY: number, edgeZ: number, angle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C2634C40A16193E | Since: 1207
 *
 * @deprecated Use entity.isEntityInArea() instead
 */
export declare function isEntityInArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A5526BC09C06623 | Since: 1207
 *
 * @deprecated Use entity.isEntityInVolume() instead
 */
export declare function isEntityInVolume(entity: number | Entity, volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDE5C125AC446723 | Since: 1207
 *
 * @deprecated Use entity.isEntityInWater() instead
 */
export declare function isEntityInWater(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x140188E884645624 | Since: 1207
 *
 * @deprecated Use entity.isEntityOccluded() instead
 */
export declare function isEntityOccluded(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x613C15D5D8DB781F | Since: 1207
 *
 * @deprecated Use entity.isEntityOnScreen() instead
 */
export declare function isEntityOnScreen(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDEE49D5CA6C49148 | Since: 1207
 *
 * @deprecated Use entity.isEntityPlayingAnim() instead
 */
export declare function isEntityPlayingAnim(entity: number | Entity, animDict: string, animName: string, animType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x86468ADFA0F6B861 | Since: 1207
 *
 * @deprecated Use entity.isEntityStatic() instead
 */
export declare function isEntityStatic(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A2304A64C3C8423 | Since: 1207
 *
 * @deprecated Use entity.isEntityTouchingEntity() instead
 */
export declare function isEntityTouchingEntity(entity: number | Entity, targetEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2AE3EBC8DEB9768B | Since: 1207
 *
 * @deprecated Use entity.isEntityTouchingModel() instead
 */
export declare function isEntityTouchingModel(entity: number | Entity, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF6F6AFD8D4FB2658 | Since: 1207
 *
 * @deprecated Use entity.isEntityUpright() instead
 */
export declare function isEntityUpright(entity: number | Entity, angle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x109DE3DA41AAD94A | Since: 1207
 *
 * @deprecated Use entity.isEntityUpsidedown() instead
 */
export declare function isEntityUpsidedown(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFFC96ECB7FA404CA | Since: 1207
 *
 * @deprecated Use entity.isEntityVisible() instead
 */
export declare function isEntityVisible(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF213C724E77F321A | Since: 1207
 *
 * @deprecated Use entity.isEntityVisibleToScript() instead
 */
export declare function isEntityVisibleToScript(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5E1CC2E8DC3111DD | Since: 1207
 *
 * @deprecated Use entity.isEntityWaitingForWorldCollision() instead
 */
export declare function isEntityWaitingForWorldCollision(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1FF441D7954F8709 | Since: 1207
 *
 * @deprecated Use entity.isMapEntityPinned() instead
 */
export declare function isMapEntityPinned(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F3068258A499E52 | Since: 1207
 *
 * @deprecated Use entity.pinClosestMapEntity() instead
 */
export declare function pinClosestMapEntity(modelHash: number | string, pos: Vector3, flags: number): any;
/**
 * No comment provided
 *
 * Hash: 0x9587913B9E772D29 | Since: 1207
 *
 * @deprecated Use entity.placeEntityOnGroundProperly() instead
 */
export declare function placeEntityOnGroundProperly(entity: number | Entity): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 *
 * Hash: 0xDC6D22FAB76D4874 | Since: 1207
 *
 * @deprecated Use entity.playEntityAnim() instead
 */
export declare function playEntityAnim(entity: number | Entity, animName: string, animDict: string, loop: boolean, stayInAnim: boolean, delta: number, bitset: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x553FA683F2BCD814 | Since: 1207
 *
 * @deprecated Use entity.removeForcedObject() instead
 */
export declare function removeForcedObject(): void;
/**
 * No comment provided
 *
 * Hash: 0x3F38A98576F6213A | Since: 1207
 *
 * @deprecated Use entity.removeModelHide() instead
 */
export declare function removeModelHide(): void;
/**
 * No comment provided
 *
 * Hash: 0x824E1C26A14CB817 | Since: 1207
 *
 * @deprecated Use entity.removeModelSwap() instead
 */
export declare function removeModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x744B9EF44779D9AB | Since: 1207
 *
 * @deprecated Use entity.resetEntityAlpha() instead
 */
export declare function resetEntityAlpha(entity: number | Entity): void;
/**
 * Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
 *
 * Hash: 0x8C03CD6B5E0E85E8 | Since: 1207
 *
 * @deprecated Use entity.scriptOverrideEntityLootTablePermanent() instead
 */
export declare function scriptOverrideEntityLootTablePermanent(entity: number | Entity, lootTable: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x80646744FA88F9D7 | Since: 1207
 *
 * @deprecated Use entity.setCanAutoVaultOnEntity() instead
 */
export declare function setCanAutoVaultOnEntity(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x24AED2A608F93C4C | Since: 1207
 *
 * @deprecated Use entity.setCanClimbOnEntity() instead
 */
export declare function setCanClimbOnEntity(entity: number | Entity, toggle: boolean): void;
/**
 * skin - everything alpha except skin
 * Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
 *
 * Hash: 0x0DF7692B1D9E7BA7 | Since: 1207
 *
 * @deprecated Use entity.setEntityAlpha() instead
 */
export declare function setEntityAlpha(entity: number | Entity, alphaLevel: number, skin: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xACAD101E1FB66689 | Since: 1207
 *
 * @deprecated Use entity.setEntityAlwaysPrerender() instead
 */
export declare function setEntityAlwaysPrerender(entity: number | Entity, toggle: boolean): void;
/**
 * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
 *
 * Hash: 0xDC19C288082E586E | Since: 1207
 *
 * @deprecated Use entity.setEntityAsMissionEntity() instead
 */
export declare function setEntityAsMissionEntity(entity: number | Entity): void;
/**
 * Marks the specified entity (ped, vehicle or object) as no longer needed.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 *
 * Hash: 0x4971D2F8162B9674 | Since: 1207
 *
 * @deprecated Use entity.setEntityAsNoLongerNeeded() instead
 */
export declare function setEntityAsNoLongerNeeded(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x0D06D522B90E861F | Since: 1207
 *
 * @deprecated Use entity.setEntityCanBeDamaged() instead
 */
export declare function setEntityCanBeDamaged(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0EF1AFB18649E015 | Since: 1207
 *
 * @deprecated Use entity.setEntityCanBeDamagedByRelationshipGroup() instead
 */
export declare function setEntityCanBeDamagedByRelationshipGroup(entity: number | Entity, bCanBeDamaged: boolean, relGroup: number | string): void;
/**
 * Sets whether the entity can be targeted without being in line-of-sight.
 *
 * Hash: 0x6D09F32E284D0FB7 | Since: 1207
 *
 * @deprecated Use entity.setEntityCanBeTargetedWithoutLos() instead
 */
export declare function setEntityCanBeTargetedWithoutLos(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF66F820909453B8C | Since: 1207
 *
 * @deprecated Use entity.setEntityCollision() instead
 */
export declare function setEntityCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE0580EC84813875A | Since: 1207
 *
 * @deprecated Use entity.setEntityCompletelyDisableCollision() instead
 */
export declare function setEntityCompletelyDisableCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x06843DA7060A026B | Since: 1207
 *
 * @deprecated Use entity.setEntityCoords() instead
 */
export declare function setEntityCoords(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean, clearArea: boolean): void;
/**
 * Axis - Invert Axis Flags
 *
 * Hash: 0x239A3351AC1DA385 | Since: 1207
 *
 * @deprecated Use entity.setEntityCoordsNoOffset() instead
 */
export declare function setEntityCoordsNoOffset(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFBFC4473F66CE344 | Since: 1207
 *
 * @deprecated Use entity.setEntityDynamic() instead
 */
export declare function setEntityDynamic(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0CEDB728A1083FA7 | Since: 1207
 *
 * @deprecated Use entity.setEntityHasGravity() instead
 */
export declare function setEntityHasGravity(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCF2B9C0645C4651B | Since: 1207
 *
 * @deprecated Use entity.setEntityHeading() instead
 */
export declare function setEntityHeading(entity: number | Entity, heading: number): void;
/**
 * Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
 *
 * Hash: 0xAC2767ED8BDFAB15 | Since: 1207
 *
 * @deprecated Use entity.setEntityHealth() instead
 */
export declare function setEntityHealth(entity: number | Entity, healthAmount: number, entityKilledBy: number | Entity): void;
/**
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
 *
 * Hash: 0xA5C38736C426FCB8 | Since: 1207
 *
 * @deprecated Use entity.setEntityInvincible() instead
 */
export declare function setEntityInvincible(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0A5D170C44CB2189 | Since: 1207
 *
 * @deprecated Use entity.setEntityIsTargetPriority() instead
 */
export declare function setEntityIsTargetPriority(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x9B9EE31AED48072E | Since: 1207
 *
 * @deprecated Use entity.setEntityLoadCollisionFlag() instead
 */
export declare function setEntityLoadCollisionFlag(entity: number | Entity, toggle: boolean): void;
/**
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 *
 * Hash: 0x5FB407F0A7C877BF | Since: 1207
 *
 * @deprecated Use entity.setEntityLodDist() instead
 */
export declare function setEntityLodDist(entity: number | Entity, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x166E7CF68597D8B5 | Since: 1207
 *
 * @deprecated Use entity.setEntityMaxHealth() instead
 */
export declare function setEntityMaxHealth(entity: number | Entity, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x516C6ABD18322B63 | Since: 1207
 *
 * @deprecated Use entity.setEntityMotionBlur() instead
 */
export declare function setEntityMotionBlur(entity: number | Entity, toggle: boolean): void;
/**
 * Old name: _SET_ENTITY_DECALS_DISABLED
 *
 * Hash: 0xC64E597783BE9A1D | Since: 1207
 *
 * @deprecated Use entity.setEntityNoweapondecals() instead
 */
export declare function setEntityNoweapondecals(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE037BF068223C38D | Since: 1207
 *
 * @deprecated Use entity.setEntityNoCollisionEntity() instead
 */
export declare function setEntityNoCollisionEntity(entity1: number | Entity, entity2: number | Entity, thisFrameOnly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x473598683095D430 | Since: 1207
 *
 * @deprecated Use entity.setEntityOnlyDamagedByPlayer() instead
 */
export declare function setEntityOnlyDamagedByPlayer(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6C1F6AA2F0ADD104 | Since: 1207
 *
 * @deprecated Use entity.setEntityOnlyDamagedByRelationshipGroup() instead
 */
export declare function setEntityOnlyDamagedByRelationshipGroup(entity: number | Entity, relationshipGroup: number | string): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
 * BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
 *
 * Hash: 0xFAEE099C6F890BB8 | Since: 1207
 *
 * @deprecated Use entity.setEntityProofs() instead
 */
export declare function setEntityProofs(entity: number | Entity, proofsBitset: number, specialFlag: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x100E7007D13E3687 | Since: 1207
 *
 * @deprecated Use entity.setEntityQuaternion() instead
 */
export declare function setEntityQuaternion(entity: number | Entity, pos: Vector3, w: number): void;
/**
 * No comment provided
 *
 * Hash: 0x85B8A7534E44BC23 | Since: 1207
 *
 * @deprecated Use entity.setEntityRenderScorched() instead
 */
export declare function setEntityRenderScorched(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x850C940EE3E7B8B5 | Since: 1207
 *
 * @deprecated Use entity.setEntityRequiresMoreExpensiveRiverCheck() instead
 */
export declare function setEntityRequiresMoreExpensiveRiverCheck(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9CC8314DFEDE441E | Since: 1207
 *
 * @deprecated Use entity.setEntityRotation() instead
 */
export declare function setEntityRotation(entity: number | Entity, pitch: number, roll: number, yaw: number, rotationOrder: number): void;
/**
 * Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
 *
 * Hash: 0x740CB4F3F602C9F4 | Since: 1207
 *
 * @deprecated Use entity.setEntityShouldFreezeWaitingOnCollision() instead
 */
export declare function setEntityShouldFreezeWaitingOnCollision(entity: number | Entity, toggle: boolean): void;
/**
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 *
 * Hash: 0x1C99BB7B6E96D16F | Since: 1207
 *
 * @deprecated Use entity.setEntityVelocity() instead
 */
export declare function setEntityVelocity(entity: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x1794B4FCC84D812F | Since: 1207
 *
 * @deprecated Use entity.setEntityVisible() instead
 */
export declare function setEntityVisible(entity: number | Entity, toggle: boolean): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x3AE22DEB5BA5A3E6 | Since: 1207
 *
 * @deprecated Use entity.setObjectAsNoLongerNeeded() instead
 */
export declare function setObjectAsNoLongerNeeded(object: number | Object): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x2595DD4236549CE3 | Since: 1207
 *
 * @deprecated Use entity.setPedAsNoLongerNeeded() instead
 */
export declare function setPedAsNoLongerNeeded(ped: number | Ped): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x629BFA74418D6239 | Since: 1207
 *
 * @deprecated Use entity.setVehicleAsNoLongerNeeded() instead
 */
export declare function setVehicleAsNoLongerNeeded(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x786591D986DE9159 | Since: 1207
 *
 * @deprecated Use entity.stopEntityAnim() instead
 */
export declare function stopEntityAnim(entity: number | Entity, animation: string, animGroup: string): any;
/**
 * No comment provided
 *
 * Hash: 0x3546FAB293FF2981 | Since: 1207
 *
 * @deprecated Use entity.wouldEntityBeOccluded() instead
 */
export declare function wouldEntityBeOccluded(entityModelHash: number | string, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x002AAC783ED323ED | Since: 1207
 *
 * @deprecated Use entity._0x002AAC783ED323ED() instead
 */
export declare function _0x002AAC783ED323ED(): void;
/**
 * No comment provided
 *
 * Hash: 0x007AAC783ED323ED | Since: 1207
 *
 * @deprecated Use entity._0x007AAC783ED323ED() instead
 */
export declare function _0x007AAC783ED323ED(): void;
/**
 * No comment provided
 *
 * Hash: 0x0939E773925C4719 | Since: 1207
 *
 * @deprecated Use entity._0x0939E773925C4719() instead
 */
export declare function _0x0939E773925C4719(): void;
/**
 * No comment provided
 *
 * Hash: 0x0CCEFC6C2C95DA2A | Since: 1207
 *
 * @deprecated Use entity._0x0CCEFC6C2C95DA2A() instead
 */
export declare function _0x0CCEFC6C2C95DA2A(): any;
/**
 * No comment provided
 *
 * Hash: 0x0DB41D59E0F1502B | Since: 1207
 *
 * @deprecated Use entity._0x0DB41D59E0F1502B() instead
 */
export declare function _0x0DB41D59E0F1502B(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FD7D7C232876E72 | Since: 1207
 *
 * @deprecated Use entity._0x0FD7D7C232876E72() instead
 */
export declare function _0x0FD7D7C232876E72(): void;
/**
 * No comment provided
 *
 * Hash: 0x119A5714578F4E05 | Since: 1207
 *
 * @deprecated Use entity._0x119A5714578F4E05() instead
 */
export declare function _0x119A5714578F4E05(): void;
/**
 * No comment provided
 *
 * Hash: 0x120376C23F019C6C | Since: 1207
 *
 * @deprecated Use entity._0x120376C23F019C6C() instead
 */
export declare function _0x120376C23F019C6C(): any;
/**
 * No comment provided
 *
 * Hash: 0x16908E859C3AB698 | Since: 1207
 *
 * @deprecated Use entity._0x16908E859C3AB698() instead
 */
export declare function _0x16908E859C3AB698(): void;
/**
 * No comment provided
 *
 * Hash: 0x188736456D1DEDE6 | Since: 1207
 *
 * @deprecated Use entity._0x188736456D1DEDE6() instead
 */
export declare function _0x188736456D1DEDE6(): any;
/**
 * No comment provided
 *
 * Hash: 0x20FAEE47427A4497 | Since: 1207
 *
 * @deprecated Use entity._0x20FAEE47427A4497() instead
 */
export declare function _0x20FAEE47427A4497(): void;
/**
 * No comment provided
 *
 * Hash: 0x2A77EF9BEC8518F4 | Since: 1207
 *
 * @deprecated Use entity._0x2A77EF9BEC8518F4() instead
 */
export declare function _0x2A77EF9BEC8518F4(): any;
/**
 * No comment provided
 *
 * Hash: 0x2D40BCBFE9305DEA | Since: 1207
 *
 * @deprecated Use entity._0x2D40BCBFE9305DEA() instead
 */
export declare function _0x2D40BCBFE9305DEA(): void;
/**
 * No comment provided
 *
 * Hash: 0x350E9211074955AF | Since: 1207
 *
 * @deprecated Use entity._0x350E9211074955AF() instead
 */
export declare function _0x350E9211074955AF(): any;
/**
 * Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
 *
 * Hash: 0x371D179701D9C082 | Since: 1436
 *
 * @deprecated Use entity._0x371D179701D9C082() instead
 */
export declare function _0x371D179701D9C082(entity: number | Entity): void;
/**
 * Seems to return true if entity is burned / scorched
 * _GET_ENTITY_*
 *
 * Hash: 0x37B01666BAE8F7EF | Since: 1207
 *
 * @deprecated Use entity._0x37B01666BAE8F7EF() instead
 */
export declare function _0x37B01666BAE8F7EF(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x37CEB637BA3B1A47 | Since: 1207
 *
 * @deprecated Use entity._0x37CEB637BA3B1A47() instead
 */
export declare function _0x37CEB637BA3B1A47(): void;
/**
 * Used when checking if ped is in water
 *
 * Hash: 0x383F64263F946E45 | Since: 1207
 *
 * @deprecated Use entity._0x383F64263F946E45() instead
 */
export declare function _0x383F64263F946E45(entity: number | Entity, ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3AB3A77672F6473F | Since: 1207
 *
 * @deprecated Use entity._0x3AB3A77672F6473F() instead
 */
export declare function _0x3AB3A77672F6473F(): Vector3;
/**
 * Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
 *
 * Hash: 0x3EC28DA1FFAC9DDD | Since: 1207
 *
 * @deprecated Use entity._0x3EC28DA1FFAC9DDD() instead
 */
export declare function _0x3EC28DA1FFAC9DDD(entity1: number | Entity, entity2: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F08C6163A4AB1D6 | Since: 1207
 *
 * @deprecated Use entity._0x3F08C6163A4AB1D6() instead
 */
export declare function _0x3F08C6163A4AB1D6(): void;
/**
 * Attach an entity to coordinates physically better name may be perfered? seems to be used with boats `p_skiff02x` ? The last 6 params are always 0 everywhere in the base code. p7 = 500.0 some kind of time? p8 =1
 *
 * Hash: 0x445D7D8EA66E373E | Since: 1207
 *
 * @deprecated Use entity.attachEntityToCoordsPhysically() instead
 */
export declare function attachEntityToCoordsPhysically(entity: number | Entity, pos: Vector3, offsetx: number, offsety: number, offsetz: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56E0735D6273B227 | Since: 1207
 *
 * @deprecated Use entity._0x56E0735D6273B227() instead
 */
export declare function _0x56E0735D6273B227(): void;
/**
 * No comment provided
 *
 * Hash: 0x5744562E973E33CD | Since: 1207
 *
 * @deprecated Use entity._0x5744562E973E33CD() instead
 */
export declare function _0x5744562E973E33CD(): any;
/**
 * _REMOVE_DECALS_* - _REMOVE_FORCED*
 *
 * Hash: 0x5826EFD6D73C4DE5 | Since: 1207
 *
 * @deprecated Use entity._0x5826EFD6D73C4DE5() instead
 */
export declare function _0x5826EFD6D73C4DE5(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x582F73ACFE969571 | Since: 1207
 *
 * @deprecated Use entity._0x582F73ACFE969571() instead
 */
export declare function _0x582F73ACFE969571(): any;
/**
 * Attaches scenario to bone with an offset
 * _GET_I* - _GET_M*
 *
 * Hash: 0x5E214112806591EA | Since: 1207
 *
 * @deprecated Use entity._0x5E214112806591EA() instead
 */
export declare function _0x5E214112806591EA(entity: number | Entity, boneIndex: number): Vector3;
/**
 * sets the fill in state for some objects like for the stew, coffee mug ,poker chips, jugs ? P1 is either 0 or 2 p2 seems to be a label/name p3 is the fill in state, max seems to be for some 3.0 (most is 1.0) - 0.0
 * heres some of the labels/names found
 * tumbler_fill, Canvas, Stew_Fill, from Chip01_Ctrl to Chip10_Ctrl, from empty_jug01_Ctrl to empty_jug20_Ctrl, from full_jug01_Ctrl to full_jug20_Ctrl, CTRL_cupFill, Food_DOF_Fill, from WhiteChip_Ctrl_0 to WhiteChip_Ctrl_10, from BlueChip_Ctrl_0 to BlueChip_Ctrl_10, from BlackChip_Ctrl_0 to BlackChip_Ctrl_10, from RedChip_Ctrl_0 to RedChip_Ctrl_10,
 *
 * Hash: 0x669655FFB29EF1A9 | Since: 1207
 *
 * @deprecated Use entity.setFillInStateForEntity() instead
 */
export declare function setFillInStateForEntity(entity: number | Entity, fill: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6C31B06E91518269 | Since: 1207
 *
 * @deprecated Use entity._0x6C31B06E91518269() instead
 */
export declare function _0x6C31B06E91518269(): void;
/**
 * No comment provided
 *
 * Hash: 0x6D58167F62238284 | Since: 1207
 *
 * @deprecated Use entity._0x6D58167F62238284() instead
 */
export declare function _0x6D58167F62238284(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x7A49D40DE437BC8D | Since: 1207
 *
 * @deprecated Use entity._0x7A49D40DE437BC8D() instead
 */
export declare function _0x7A49D40DE437BC8D(): void;
/**
 * No comment provided
 *
 * Hash: 0x7F20092547B4DDEA | Since: 1207
 *
 * @deprecated Use entity._0x7F20092547B4DDEA() instead
 */
export declare function _0x7F20092547B4DDEA(): void;
/**
 * No comment provided
 *
 * Hash: 0x80FDEB3A9E9AA578 | Since: 1207
 *
 * @deprecated Use entity._0x80FDEB3A9E9AA578() instead
 */
export declare function _0x80FDEB3A9E9AA578(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x898586729DB5221D | Since: 1207
 *
 * @deprecated Use entity._0x898586729DB5221D() instead
 */
export declare function _0x898586729DB5221D(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8E10DF0FFA63FB65 | Since: 1207
 *
 * @deprecated Use entity._0x8E10DF0FFA63FB65() instead
 */
export declare function _0x8E10DF0FFA63FB65(): any;
/**
 * Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
 * _GET_ENTITY_*
 *
 * Hash: 0x8E46E18AA828334F | Since: 1207
 *
 * @deprecated Use entity._0x8E46E18AA828334F() instead
 */
export declare function _0x8E46E18AA828334F(entity: number | Entity, animDict: string, animClip: string): number;
/**
 * No comment provided
 *
 * Hash: 0x978AA2323ED32209 | Since: 1207
 *
 * @deprecated Use entity._0x978AA2323ED32209() instead
 */
export declare function _0x978AA2323ED32209(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C6906EF8CB20C5F | Since: 1436
 *
 * @deprecated Use entity._0x9C6906EF8CB20C5F() instead
 */
export declare function _0x9C6906EF8CB20C5F(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xA48E4801DEBDF7E4 | Since: 1207
 *
 * @deprecated Use entity._0xA48E4801DEBDF7E4() instead
 */
export declare function _0xA48E4801DEBDF7E4(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xA9E6D8F2DDFC4DB9 | Since: 1207
 *
 * @deprecated Use entity._0xA9E6D8F2DDFC4DB9() instead
 */
export declare function _0xA9E6D8F2DDFC4DB9(): void;
/**
 * No comment provided
 *
 * Hash: 0xAAACB74442C1BED3 | Since: 1207
 *
 * @deprecated Use entity._0xAAACB74442C1BED3() instead
 */
export declare function _0xAAACB74442C1BED3(): any;
/**
 * No comment provided
 *
 * Hash: 0xAF72EC7E1B54539B | Since: 1311
 *
 * @deprecated Use entity._0xAF72EC7E1B54539B() instead
 */
export declare function _0xAF72EC7E1B54539B(entity: number | Entity): number;
/**
 * SET_ENTITY_LO*
 *
 * Hash: 0xAF7F3099B9FEB535 | Since: 1207
 *
 * @deprecated Use entity._0xAF7F3099B9FEB535() instead
 */
export declare function _0xAF7F3099B9FEB535(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB16C780C51E51E2B | Since: 1207
 *
 * @deprecated Use entity._0xB16C780C51E51E2B() instead
 */
export declare function _0xB16C780C51E51E2B(): any;
/**
 * No comment provided
 *
 * Hash: 0xB38A29CCD5447783 | Since: 1207
 *
 * @deprecated Use entity._0xB38A29CCD5447783() instead
 */
export declare function _0xB38A29CCD5447783(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA2A089E60ED1163 | Since: 1207
 *
 * @deprecated Use entity._0xBA2A089E60ED1163() instead
 */
export declare function _0xBA2A089E60ED1163(): any;
/**
 * No comment provided
 *
 * Hash: 0xBD94CECFB2D65119 | Since: 1207
 *
 * @deprecated Use entity._0xBD94CECFB2D65119() instead
 */
export declare function _0xBD94CECFB2D65119(): void;
/**
 * SET_ENTITY_A*
 *
 * Hash: 0xC0EDEF16D90661EE | Since: 1207
 *
 * @deprecated Use entity._0xC0EDEF16D90661EE() instead
 */
export declare function _0xC0EDEF16D90661EE(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xC2E71D7E0A7B4C89 | Since: 1207
 *
 * @deprecated Use entity._0xC2E71D7E0A7B4C89() instead
 */
export declare function _0xC2E71D7E0A7B4C89(): any;
/**
 * Returns BOOL in ida
 *
 * Hash: 0xC3ABCFBC7D74AFA5 | Since: 1207
 *
 * @deprecated Use entity._0xC3ABCFBC7D74AFA5() instead
 */
export declare function _0xC3ABCFBC7D74AFA5(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC6A1A3D63F122DE7 | Since: 1311
 *
 * @deprecated Use entity._0xC6A1A3D63F122DE7() instead
 */
export declare function _0xC6A1A3D63F122DE7(): void;
/**
 * No comment provided
 *
 * Hash: 0xC76E94A78127412B | Since: 1207
 *
 * @deprecated Use entity._0xC76E94A78127412B() instead
 */
export declare function _0xC76E94A78127412B(): void;
/**
 * No comment provided
 *
 * Hash: 0xCDB682BB47C02F0A | Since: 1207
 *
 * @deprecated Use entity._0xCDB682BB47C02F0A() instead
 */
export declare function _0xCDB682BB47C02F0A(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xD21C7418C590BB40 | Since: 1207
 *
 * @deprecated Use entity._0xD21C7418C590BB40() instead
 */
export declare function _0xD21C7418C590BB40(): any;
/**
 * No comment provided
 *
 * Hash: 0xD45BB89B53FC0CFD | Since: 1207
 *
 * @deprecated Use entity._0xD45BB89B53FC0CFD() instead
 */
export declare function _0xD45BB89B53FC0CFD(): void;
/**
 * No comment provided
 *
 * Hash: 0xD4636C2EDB0DEA8A | Since: 1207
 *
 * @deprecated Use entity._0xD4636C2EDB0DEA8A() instead
 */
export declare function _0xD4636C2EDB0DEA8A(): any;
/**
 * No comment provided
 *
 * Hash: 0xD46BF94C4C66FAB0 | Since: 1207
 *
 * @deprecated Use entity._0xD46BF94C4C66FAB0() instead
 */
export declare function _0xD46BF94C4C66FAB0(): any;
/**
 * No comment provided
 *
 * Hash: 0xDD03FC2089AD093C | Since: 1207
 *
 * @deprecated Use entity._0xDD03FC2089AD093C() instead
 */
export declare function _0xDD03FC2089AD093C(): void;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0xDF8E49EA89A01DB1 | Since: 1207
 *
 * @deprecated Use entity._0xDF8E49EA89A01DB1() instead
 */
export declare function _0xDF8E49EA89A01DB1(): any;
/**
 * No comment provided
 *
 * Hash: 0xDFC2B226D56D85F6 | Since: 1207
 *
 * @deprecated Use entity._0xDFC2B226D56D85F6() instead
 */
export declare function _0xDFC2B226D56D85F6(): number;
/**
 * No comment provided
 *
 * Hash: 0xE19035EB65AB2932 | Since: 1207
 *
 * @deprecated Use entity._0xE19035EB65AB2932() instead
 */
export declare function _0xE19035EB65AB2932(): void;
/**
 * No comment provided
 *
 * Hash: 0xE31FC20319874CB3 | Since: 1207
 *
 * @deprecated Use entity._0xE31FC20319874CB3() instead
 */
export declare function _0xE31FC20319874CB3(): any;
/**
 * No comment provided
 *
 * Hash: 0xE75EEA8DB59A9F39 | Since: 1207
 *
 * @deprecated Use entity._0xE75EEA8DB59A9F39() instead
 */
export declare function _0xE75EEA8DB59A9F39(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9E7A0BAC7F57746 | Since: 1207
 *
 * @deprecated Use entity._0xE9E7A0BAC7F57746() instead
 */
export declare function _0xE9E7A0BAC7F57746(): void;
/**
 * No comment provided
 *
 * Hash: 0xEAB3D91D30A344F1 | Since: 1207
 *
 * @deprecated Use entity._0xEAB3D91D30A344F1() instead
 */
export declare function _0xEAB3D91D30A344F1(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF259AA1E097E0AD | Since: 1207
 *
 * @deprecated Use entity._0xEF259AA1E097E0AD() instead
 */
export declare function _0xEF259AA1E097E0AD(entity: number | Entity): void;
/**
 * Returns the entity that is looting a ped but only while the looting is active
 *
 * Hash: 0xEF2D9ED7CE684F08 | Since: 1207
 *
 * @deprecated Use entity.getEntityLootingPed() instead
 */
export declare function getEntityLootingPed(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xF41E2979D5BC5370 | Since: 1207
 *
 * @deprecated Use entity._0xF41E2979D5BC5370() instead
 */
export declare function _0xF41E2979D5BC5370(): void;
/**
 * No comment provided
 *
 * Hash: 0xF59FDE7B4D31A630 | Since: 1207
 *
 * @deprecated Use entity._0xF59FDE7B4D31A630() instead
 */
export declare function _0xF59FDE7B4D31A630(): any;
/**
 * No comment provided
 *
 * Hash: 0xFF83AF534156B399 | Since: 1207
 *
 * @deprecated Use entity.setEntityCanOnlyBeDamagedByScriptParticipants() instead
 */
export declare function setEntityCanOnlyBeDamagedByScriptParticipants(EntityIndex: number | Entity, bOnlyDamagedWhenRunningScript: boolean): void;
/**
 * SET_ENTITY_LO*
 *
 * Hash: 0xFF9965C47FA404DA | Since: 1207
 *
 * @deprecated Use entity._0xFF9965C47FA404DA() instead
 */
export declare function _0xFF9965C47FA404DA(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1AD922AB5038DEF3 | Since: 1207
 *
 * @deprecated Use entity.addEntityTrackingTrails() instead
 */
export declare function addEntityTrackingTrails(entity: number | Entity): void;
/**
 * Alters entity's health by 'amount'. Can be negative (to drain health).
 * In the scripts entity2 and weaponHash are unused (zero).
 *
 * Hash: 0x835F131E7DC8F97A | Since: 1207
 *
 * @deprecated Use entity.changeEntityHealth() instead
 */
export declare function changeEntityHealth(entity: number | Entity, amount: number, entity2: number | Entity, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x29BA9F78321E5A6C | Since: 1207
 *
 * @deprecated Use entity.createFootpathTrail() instead
 */
export declare function createFootpathTrail(waypointRecord: string, bUseSnowOffset: boolean, bInit: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0x0D0DB2B6AF19A987 | Since: 1207
 *
 * @deprecated Use entity.deleteCarriable() instead
 */
export declare function deleteCarriable(entity: number | Entity): void;
/**
 * Must be called from a background script, otherwise it will do nothing.
 *
 * Hash: 0x5E94EA09E7207C16 | Since: 1207
 *
 * @deprecated Use entity.deleteEntity2() instead
 */
export declare function deleteEntity2(entity: number | Entity): void;
/**
 * Returns true if calling script owns specified entity
 *
 * Hash: 0x88AD6CC10D8D35B2 | Since: 1207
 *
 * @deprecated Use entity.doesThreadOwnThisEntity() instead
 */
export declare function doesThreadOwnThisEntity(entity: number | Entity): boolean;
/**
 * Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
 *
 * Hash: 0x31FEF6A20F00B963 | Since: 1207
 *
 * @deprecated Use entity.getCarriableFromEntity() instead
 */
export declare function getCarriableFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x886171A12F400B89 | Since: 1207
 *
 * @deprecated Use entity.getEntitiesInVolume() instead
 */
export declare function getEntitiesInVolume(volume: number, itemSet: any, entityType: number): number;
/**
 * No comment provided
 *
 * Hash: 0x59B57C4B06531E1E | Since: 1207
 *
 * @deprecated Use entity.getEntitiesNearPoint() instead
 */
export declare function getEntitiesNearPoint(pos: Vector3, radius: number, itemSet: any): number;
/**
 * Returns a normalized value between 0.0f and 1.0f. You can get the actual anim time by multiplying this by GET_ANIM_DURATION
 *
 * Hash: 0x627520389E288A73 | Since: 1207
 *
 * @deprecated Use entity.getEntityAnimCurrentTime() instead
 */
export declare function getEntityAnimCurrentTime(entity: number | Entity, animDict: string, animName: string): number;
/**
 * Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
 * https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
 *
 * Hash: 0xF7424890E4A094C0 | Since: 1207
 *
 * @deprecated Use entity.getEntityByDoorhash() instead
 */
export declare function getEntityByDoorhash(doorHash: number | string): number;
/**
 * Old name: _GET_ENTITY_CAN_BE_DAMAGED
 *
 * Hash: 0x75DF9E73F2F005FD | Since: 1207
 *
 * @deprecated Use entity.getEntityCanBeDamaged() instead
 */
export declare function getEntityCanBeDamaged(entity: number | Entity): boolean;
/**
 * flagId: see _SET_ENTITY_CARRYING_FLAG
 *
 * Hash: 0x808077647856DE62 | Since: 1207
 *
 * @deprecated Use entity.getEntityCarryingFlag() instead
 */
export declare function getEntityCarryingFlag(entity: number | Entity, flagId: number): boolean;
/**
 * Returns zero if the entity is not a carriable
 *
 * Hash: 0x0FD25587BB306C86 | Since: 1207
 *
 * @deprecated Use entity.getEntityCarryConfig() instead
 */
export declare function getEntityCarryConfig(entity: number | Entity): number;
/**
 * Gets the entity's forward vector in YX(Z) eulers. Similar to GET_ENTITY_FORWARD_VECTOR
 *
 * Hash: 0x935A30AA88FB1014 | Since: 1207
 *
 * @deprecated Use entity.getEntityForwardVectorYx() instead
 */
export declare function getEntityForwardVectorYx(entity: number | Entity): Vector3;
/**
 * Returns (CUR_HEALTH / MAX_HEALTH)
 *
 * Hash: 0x96C638784DB4C815 | Since: 1207
 *
 * @deprecated Use entity.getEntityHealthFloat() instead
 */
export declare function getEntityHealthFloat(entity: number | Entity): number;
/**
 * Note: this native was removed in 1232 but added back in 1311
 * Old name: _GET_ENTITY_PROOFS
 *
 * Hash: 0x6CF0DAD7FA1088EA | Since: 1207
 *
 * @deprecated Use entity.getEntityProofs() instead
 */
export declare function getEntityProofs(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x2A08A32B6D49906F | Since: 1207
 *
 * @deprecated Use entity.getEntityScript() instead
 */
export declare function getEntityScript(entity: number | Entity, argStruct: any): number;
/**
 * No comment provided
 *
 * Hash: 0xE12F56CB25D9CE23 | Since: 1207
 *
 * @deprecated Use entity.getEntityThreatTier() instead
 */
export declare function getEntityThreatTier(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xF3FDA9A617A15145 | Since: 1207
 *
 * @deprecated Use entity.getEntityWorldPositionOfDimensions() instead
 */
export declare function getEntityWorldPositionOfDimensions(entity: number | Entity, minimum: Vector3, maximum: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC346A546612C49A9 | Since: 1207
 *
 * @deprecated Use entity.getIsBird() instead
 */
export declare function getIsBird(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x255B6DB4E3AD3C3E | Since: 1207
 *
 * @deprecated Use entity.getIsCarriablePelt() instead
 */
export declare function getIsCarriablePelt(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5594AFE9DE0C01B7 | Since: 1207
 *
 * @deprecated Use entity.getIsPredator() instead
 */
export declare function getIsPredator(entity: number | Entity): boolean;
/**
 * Valid indices: 0 - 3
 * Index 1 always returns a `hogtied` config, doesn't matter the entity.
 * It's for humans only and the ped must be resurrected first if it's dead.
 *
 * Hash: 0x34F008A7E48C496B | Since: 1207
 *
 * @deprecated Use entity.getOptimalCarryConfig() instead
 */
export declare function getOptimalCarryConfig(entity: number | Entity, index: number): number;
/**
 * Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
 * Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
 *
 * Hash: 0x964000D355219FC0 | Since: 1207
 *
 * @deprecated Use entity.getPedAnimalType() instead
 */
export declare function getPedAnimalType(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4735E2A4BB83D9DA | Since: 1207
 *
 * @deprecated Use entity.getPinnedMapEntity() instead
 */
export declare function getPinnedMapEntity(): number;
/**
 * Returns false if entity is not a ped or object.
 *
 * Hash: 0x1E804EA9B12030A4 | Since: 1207
 *
 * @deprecated Use entity.getScriptOverrideEntityLootTablePermanent() instead
 */
export declare function getScriptOverrideEntityLootTablePermanent(entity: number | Entity, lootTable: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AFFA9DDC87846F8 | Since: 1207
 *
 * @deprecated Use entity.isCarriableModel() instead
 */
export declare function isCarriableModel(model: number | string): boolean;
/**
 * Getter for FREEZE_ENTITY_POSITION
 *
 * Hash: 0x083D497D57B7400F | Since: 1207
 *
 * @deprecated Use entity.isEntityFrozen() instead
 */
export declare function isEntityFrozen(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8DE41E9902E85756 | Since: 1207
 *
 * @deprecated Use entity.isEntityFullyLooted() instead
 */
export declare function isEntityFullyLooted(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x857ACB0AB4BD0D55 | Since: 1207
 *
 * @deprecated Use entity.isEntityOnTrainTrack() instead
 */
export declare function isEntityOnTrainTrack(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA7E51B53309EAC97 | Since: 1207
 *
 * @deprecated Use entity.isEntityOwnedByPersistenceSystem() instead
 */
export declare function isEntityOwnedByPersistenceSystem(entity: number | Entity): boolean;
/**
 * Params: p1 (probably animType) = 1, 0
 *
 * Hash: 0x0B7CB1300CBFE19C | Since: 1207
 *
 * @deprecated Use entity.isEntityPlayingAnyAnim() instead
 */
export declare function isEntityPlayingAnyAnim(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4E5C1E93C466127 | Since: 1207
 *
 * @deprecated Use entity.isEntityUnderwater() instead
 */
export declare function isEntityUnderwater(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8CCDB712FBCBA92 | Since: 1207
 *
 * @deprecated Use entity.isTrackedEntityVisible() instead
 */
export declare function isTrackedEntityVisible(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x36EB4D34D4A092C5 | Since: 1207
 *
 * @deprecated Use entity.pauseEntityTracking() instead
 */
export declare function pauseEntityTracking(entity: number | Entity, pause: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA88E215CEB0435C0 | Since: 1207
 *
 * @deprecated Use entity.requestEntityLootList() instead
 */
export declare function requestEntityLootList(mount: number | Ped, argStruct: any, visiblelootslotrequestType: number | string, flag: number): boolean;
/**
 * Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
 *
 * Hash: 0x66B2B83B94B22458 | Since: 1207
 *
 * @deprecated Use entity.searchBuildingPoolForEntityWithThisModel() instead
 */
export declare function searchBuildingPoolForEntityWithThisModel(modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x11CDABDC7783B2BC | Since: 1207
 *
 * @deprecated Use entity.setEntityAnimCurrentTime() instead
 */
export declare function setEntityAnimCurrentTime(entity: number | Entity, animDict: string, animName: string, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEAA885BA3CEA4E4A | Since: 1207
 *
 * @deprecated Use entity.setEntityAnimSpeed() instead
 */
export declare function setEntityAnimSpeed(entity: number | Entity, animDict: string, animName: string, speedMultiplier: number): void;
/**
 * Changes type and quality of skins
 * type hashes: https://pastebin.com/C1WvQjCy
 *
 * Hash: 0x399657ED871B3A6C | Since: 1207
 *
 * @deprecated Use entity.setEntityCarcassType() instead
 */
export declare function setEntityCarcassType(entity: number | Entity, type: number | string): void;
/**
 * flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
 *
 * enum eCarryingFlag
 * {
 * CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
 * CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
 * CARRYING_FLAG_CAN_BE_DROPPED = 4,
 * CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
 * CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
 * CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
 * CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
 * CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
 * CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
 * CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
 * CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
 * CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
 * CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
 * };
 *
 * Hash: 0x18FF3110CF47115D | Since: 1207
 *
 * @deprecated Use entity.setEntityCarryingFlag() instead
 */
export declare function setEntityCarryingFlag(entity: number | Entity, flagId: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x203BEFFDBE12E96A | Since: 1207
 *
 * @deprecated Use entity.setEntityCoordsAndHeading() instead
 */
export declare function setEntityCoordsAndHeading(entity: number | Entity, pos: Vector3, heading: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0918E3565C20F03C | Since: 1207
 *
 * @deprecated Use entity.setEntityCoordsAndHeadingNoOffset() instead
 */
export declare function setEntityCoordsAndHeadingNoOffset(entity: number | Entity, pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x482D17E45665DA44 | Since: 1207
 *
 * @deprecated Use entity.setEntityCustomPickupRadius() instead
 */
export declare function setEntityCustomPickupRadius(entity: number | Entity, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA91E6CF94404E8C9 | Since: 1207
 *
 * @deprecated Use entity.setEntityFadeIn() instead
 */
export declare function setEntityFadeIn(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6BCF5F3D8FFE988D | Since: 1207
 *
 * @deprecated Use entity.setEntityFullyLooted() instead
 */
export declare function setEntityFullyLooted(entity: number | Entity, looted: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEBDC12861D079ABA | Since: 1207
 *
 * @deprecated Use entity.setEntityLightsEnabled() instead
 */
export declare function setEntityLightsEnabled(entity: number | Entity, enabled: boolean): void;
/**
 * tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
 *
 * Hash: 0x4B436BAC8CBE9B07 | Since: 1207
 *
 * @deprecated Use entity.setEntityThreatTier() instead
 */
export declare function setEntityThreatTier(entity: number | Entity, tier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD2B9C78537ED5759 | Since: 1207
 *
 * @deprecated Use entity.unpinMapEntity() instead
 */
export declare function unpinMapEntity(entity: number | Entity): void;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
 *
 * Hash: 0xD9F8455409B525E9 | Since: 1207
 *
 * @deprecated Use event.addShockingEventAtPosition() instead
 */
export declare function addShockingEventAtPosition(eventType: number | string, pos: Vector3): number;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0x7FD8F3BE76F89422 | Since: 1207
 *
 * @deprecated Use event.addShockingEventForEntity() instead
 */
export declare function addShockingEventForEntity(eventType: number | string, entity: number | Entity): number;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0x9DB47E16060D6354 | Since: 1207
 *
 * @deprecated Use event.isShockingEventInSphere() instead
 */
export declare function isShockingEventInSphere(eventType: number | string, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD47A168C2AB90DC4 | Since: 1207
 *
 * @deprecated Use event.removeAllShockingEvents() instead
 */
export declare function removeAllShockingEvents(): void;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0x118873DD538490B4 | Since: 1207
 *
 * @deprecated Use event.removeAllShockingEventsOfType() instead
 */
export declare function removeAllShockingEventsOfType(eventType: number | string, scriptCreatedOnly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE8BB3CC253A34559 | Since: 1207
 *
 * @deprecated Use event.removeShockingEvent() instead
 */
export declare function removeShockingEvent(event: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB249021652420C5 | Since: 1207
 *
 * @deprecated Use event.removeShockingEventSpawnBlockingAreas() instead
 */
export declare function removeShockingEventSpawnBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0x8AE2F981CDDB8FA4 | Since: 1207
 *
 * @deprecated Use event.setDecisionMaker() instead
 */
export declare function setDecisionMaker(ped: number | Ped, name: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x6B9C5C38838FB6E6 | Since: 1207
 *
 * @deprecated Use event.setDecisionMakerToDefault() instead
 */
export declare function setDecisionMakerToDefault(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x84994FAD4E4E4E69 | Since: 1207
 *
 * @deprecated Use event.suppressShockingEventsNextFrame() instead
 */
export declare function suppressShockingEventsNextFrame(): void;
/**
 * Only used in R* SP Script beat_rat_infestation and homeinvasion
 *
 * Hash: 0x18E93EBFC1FCFA48 | Since: 1207
 *
 * @deprecated Use event._0x18E93EBFC1FCFA48() instead
 */
export declare function _0x18E93EBFC1FCFA48(volume: number): any;
/**
 * AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
 *
 * Hash: 0x1A5C5D350068A673 | Since: 1207
 *
 * @deprecated Use event._0x1A5C5D350068A673() instead
 */
export declare function _0x1A5C5D350068A673(ped: number | Ped): void;
/**
 * _GET*
 *
 * Hash: 0x1D1B448D719415AB | Since: 1207
 *
 * @deprecated Use event._0x1D1B448D719415AB() instead
 */
export declare function _0x1D1B448D719415AB(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x26054EB81AC0893B | Since: 1207
 *
 * @deprecated Use event._0x26054EB81AC0893B() instead
 */
export declare function _0x26054EB81AC0893B(object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2DD42FAD06E6F19E | Since: 1207
 *
 * @deprecated Use event._0x2DD42FAD06E6F19E() instead
 */
export declare function _0x2DD42FAD06E6F19E(object: number | Object): any;
/**
 * _ADD* (_ADD_SHOCKING_EVENT_* ?)
 *
 * Hash: 0x36D0F2BA2C0D9BDE | Since: 1207
 *
 * @deprecated Use event._0x36D0F2BA2C0D9BDE() instead
 */
export declare function _0x36D0F2BA2C0D9BDE(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x4465C3D1475BD3FD | Since: 1207
 *
 * @deprecated Use event._0x4465C3D1475BD3FD() instead
 */
export declare function _0x4465C3D1475BD3FD(model: number | string): void;
/**
 * Only used in R* SP Script coachrobberies
 * _SET_S*
 *
 * Hash: 0x4B2B1A891D437CA7 | Since: 1207
 *
 * @deprecated Use event._0x4B2B1A891D437CA7() instead
 */
export declare function _0x4B2B1A891D437CA7(): void;
/**
 * Only used in R* SP Script beat_rat_infestation
 * Params: p0 = value returned by 0x18E93EBFC1FCFA48
 *
 * Hash: 0x56B3410626A473E7 | Since: 1207
 *
 * @deprecated Use event._0x56B3410626A473E7() instead
 */
export declare function _0x56B3410626A473E7(): void;
/**
 * Only used in R* SP Scripts
 * Hash only used in R* Script mob3.ysc: ROBBERY
 * _ADD_PED*
 *
 * Hash: 0x7C511E91738A0828 | Since: 1207
 *
 * @deprecated Use event._0x7C511E91738A0828() instead
 */
export declare function _0x7C511E91738A0828(ped1: number | Ped, ped2: number | Ped): void;
/**
 * _GET*
 *
 * Hash: 0x83D43F0FD5276E4D | Since: 1207
 *
 * @deprecated Use event._0x83D43F0FD5276E4D() instead
 */
export declare function _0x83D43F0FD5276E4D(entity: number | Entity): any;
/**
 * _SET_P*
 *
 * Hash: 0x9520175B35E2268D | Since: 1207
 *
 * @deprecated Use event._0x9520175B35E2268D() instead
 */
export declare function _0x9520175B35E2268D(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA86B0EE9B39D15D6 | Since: 1207
 *
 * @deprecated Use event._0xA86B0EE9B39D15D6() instead
 */
export declare function _0xA86B0EE9B39D15D6(object: number | Object): void;
/**
 * Might return time since some (?) event.
 *
 * Hash: 0xAD17A18215DD23D6 | Since: 1207
 *
 * @deprecated Use event._0xAD17A18215DD23D6() instead
 */
export declare function _0xAD17A18215DD23D6(entity: number | Entity): number;
/**
 * _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
 *
 * Hash: 0xB6F4825153920582 | Since: 1207
 *
 * @deprecated Use event._0xB6F4825153920582() instead
 */
export declare function _0xB6F4825153920582(): void;
/**
 * HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
 *
 * Hash: 0xE28D7FC9FD32ABEB | Since: 1311
 *
 * @deprecated Use event._0xE28D7FC9FD32ABEB() instead
 */
export declare function _0xE28D7FC9FD32ABEB(entity: number | Entity, eventType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE2C2FBB7825FFC66 | Since: 1207
 *
 * @deprecated Use event._0xE2C2FBB7825FFC66() instead
 */
export declare function _0xE2C2FBB7825FFC66(): void;
/**
 * Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
 *
 * Hash: 0x608AD36A644A97FE | Since: 1207
 *
 * @deprecated Use event.addModelToEventMonitor() instead
 */
export declare function addModelToEventMonitor(model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xCA1315C33B9A2847 | Since: 1207
 *
 * @deprecated Use event.createShockingEvent() instead
 */
export declare function createShockingEvent(args: any): number;
/**
 * No comment provided
 *
 * Hash: 0xAD8F2424C6E1E3A8 | Since: 1207
 *
 * @deprecated Use event.eventFlushAllEventTrackers() instead
 */
export declare function eventFlushAllEventTrackers(ped: number | Ped): void;
/**
 * Returns eventType
 *
 * Hash: 0x796EECFF0C6D39BE | Since: 1207
 *
 * @deprecated Use event.eventGetRecentEvent() instead
 */
export declare function eventGetRecentEvent(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x822A001BCEA5BD81 | Since: 1207
 *
 * @deprecated Use event.eventGetSourceEntityFromEvent() instead
 */
export declare function eventGetSourceEntityFromEvent(entity: number | Entity, eventType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x38497F139981C5C9 | Since: 1207
 *
 * @deprecated Use event.eventGetTargetEntityFromEvent() instead
 */
export declare function eventGetTargetEntityFromEvent(entity: number | Entity, eventType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC6A7DC546E94FED5 | Since: 1207
 *
 * @deprecated Use event.eventGetTimeSinceEvent() instead
 */
export declare function eventGetTimeSinceEvent(entity: number | Entity, eventType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x797B3D4D92E56094 | Since: 1207
 *
 * @deprecated Use event.isEventTrackerActive() instead
 */
export declare function isEventTrackerActive(eventName: string, shockingEvent: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4C71BA9CAB097BD | Since: 1207
 *
 * @deprecated Use event.removeAllShockingEventsInArea() instead
 */
export declare function removeAllShockingEventsInArea(pos: Vector3, radius: number): void;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0x6A648D42BF271DC7 | Since: 1207
 *
 * @deprecated Use event.removeAllShockingEventsOfTypeInArea() instead
 */
export declare function removeAllShockingEventsOfTypeInArea(eventType: number | string, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB1E41DD3D3C6250 | Since: 1207
 *
 * @deprecated Use event.setEventTrackerForPed() instead
 */
export declare function setEventTrackerForPed(ped: number | Ped, eventName: string): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
 *
 * explosionType:
 * enum eExplosionTag
 * {
 * EXP_TAG_DONTCARE = -1,
 * EXP_TAG_GRENADE,
 * EXP_TAG_STICKYBOMB,
 * EXP_TAG_MOLOTOV,
 * EXP_TAG_MOLOTOV_VOLATILE,
 * EXP_TAG_HI_OCTANE,
 * EXP_TAG_CAR,
 * EXP_TAG_PLANE,
 * EXP_TAG_PETROL_PUMP,
 * EXP_TAG_DIR_STEAM,
 * EXP_TAG_DIR_FLAME,
 * EXP_TAG_DIR_WATER_HYDRANT,
 * EXP_TAG_BOAT,
 * EXP_TAG_BULLET,
 * EXP_TAG_SMOKEGRENADE,
 * EXP_TAG_BZGAS,
 * EXP_TAG_GAS_CANISTER,
 * EXP_TAG_EXTINGUISHER,
 * EXP_TAG_TRAIN,
 * EXP_TAG_DIR_FLAME_EXPLODE,
 * EXP_TAG_VEHICLE_BULLET,
 * EXP_TAG_BIRD_CRAP,
 * EXP_TAG_FIREWORK,
 * EXP_TAG_TORPEDO,
 * EXP_TAG_TORPEDO_UNDERWATER,
 * EXP_TAG_LANTERN,
 * EXP_TAG_DYNAMITE,
 * EXP_TAG_DYNAMITESTACK,
 * EXP_TAG_DYNAMITE_VOLATILE,
 * EXP_TAG_RIVER_BLAST,
 * EXP_TAG_PLACED_DYNAMITE,
 * EXP_TAG_FIRE_ARROW,
 * EXP_TAG_DYNAMITE_ARROW,
 * EXP_TAG_PHOSPHOROUS_BULLET,
 * EXP_TAG_LIGHTNING_STRIKE,
 * EXP_TAG_TRACKING_ARROW,
 * EXP_TAG_POISON_BOTTLE
 * };
 *
 * Hash: 0x7D6F58F69DA92530 | Since: 1207
 *
 * @deprecated Use fire.addExplosion() instead
 */
export declare function addExplosion(pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * explosionType: see ADD_EXPLOSION
 * Change explosionFx (Visual Effect) for specified explosionType
 *
 * Hash: 0x53BA259F3A67A99E | Since: 1207
 *
 * @deprecated Use fire.addExplosionWithUserVfx() instead
 */
export declare function addExplosionWithUserVfx(pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0xD84A917A64D4D016 | Since: 1207
 *
 * @deprecated Use fire.addOwnedExplosion() instead
 */
export declare function addOwnedExplosion(ped: number | Ped, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB646FB657F448261 | Since: 1207
 *
 * @deprecated Use fire.getClosestFirePos() instead
 */
export declare function getClosestFirePos(outPosition: Vector3, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9617BC6FAE61E08 | Since: 1207
 *
 * @deprecated Use fire.getNumberOfFiresInRange() instead
 */
export declare function getNumberOfFiresInRange(pos: Vector3, radius: number): number;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0x8002DDAB58594D78 | Since: 1207
 *
 * @deprecated Use fire.getOwnerOfExplosionInAngledArea() instead
 */
export declare function getOwnerOfExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1BD7C371CE257C3E | Since: 1207
 *
 * @deprecated Use fire.isEntityOnFire() instead
 */
export declare function isEntityOnFire(entity: number | Entity): boolean;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0xD96E82AEBFFAAFF0 | Since: 1207
 *
 * @deprecated Use fire.isExplosionActiveInArea() instead
 */
export declare function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0x5AE661ECD18524C9 | Since: 1207
 *
 * @deprecated Use fire.isExplosionInAngledArea() instead
 */
export declare function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, angle: number): boolean;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0x8391BA4313A25AD3 | Since: 1207
 *
 * @deprecated Use fire.isExplosionInArea() instead
 */
export declare function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0xD62DD846D82CBB90 | Since: 1207
 *
 * @deprecated Use fire.isExplosionInSphere() instead
 */
export declare function isExplosionInSphere(explosionType: number, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x790125C36E194069 | Since: 1207
 *
 * @deprecated Use fire.removeScriptFire() instead
 */
export declare function removeScriptFire(fireHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC4DC7418A44D6822 | Since: 1207
 *
 * @deprecated Use fire.startEntityFire() instead
 */
export declare function startEntityFire(): void;
/**
 * Starts a fire:
 *
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 *
 * Hash: 0x6B83617E04503888 | Since: 1207
 *
 * @deprecated Use fire.startScriptFire() instead
 */
export declare function startScriptFire(pos: Vector3, soundsetName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x8390751DC40C1E98 | Since: 1207
 *
 * @deprecated Use fire.stopEntityFire() instead
 */
export declare function stopEntityFire(): void;
/**
 * No comment provided
 *
 * Hash: 0xDB38F247BD421708 | Since: 1207
 *
 * @deprecated Use fire.stopFireInRange() instead
 */
export declare function stopFireInRange(pos: Vector3, radius: number): void;
/**
 * Only used in R* SP Related Camp Scripts
 *
 * Hash: 0x24DB6B9F2B719043 | Since: 1207
 *
 * @deprecated Use fire._0x24DB6B9F2B719043() instead
 */
export declare function _0x24DB6B9F2B719043(): void;
/**
 * Add explosion with vfx and assign an entity as damage causer.
 * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
 * explosionFx: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/explosion_vfxTags.lua
 *
 * Hash: 0x34AE85C7CA4857AA | Since: 1207
 *
 * @deprecated Use fire.addExplosionWithUserVfxAndDamageCauser() instead
 */
export declare function addExplosionWithUserVfxAndDamageCauser(entity: number | Entity, pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * No comment provided
 *
 * Hash: 0x41B87A6495EE13DD | Since: 1232
 *
 * @deprecated Use fire._0x41B87A6495EE13DD() instead
 */
export declare function _0x41B87A6495EE13DD(): any;
/**
 * No comment provided
 *
 * Hash: 0x559FC1D310813031 | Since: 1232
 *
 * @deprecated Use fire.getClosestFirePosInVolume() instead
 */
export declare function getClosestFirePosInVolume(outPosition: Vector3, pos: Vector3, rot: Vector3, scale: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x68F6A75FDF5A70D6 | Since: 1207
 *
 * @deprecated Use fire._0x68F6A75FDF5A70D6() instead
 */
export declare function _0x68F6A75FDF5A70D6(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x754937C28271BC65 | Since: 1207
 *
 * @deprecated Use fire._0x754937C28271BC65() instead
 */
export declare function _0x754937C28271BC65(): void;
/**
 * this natives only returns true if entity is damaged by fire , once damaged caused to entity by fire (like burned appearance) has cleared (they clear over time) then returns false
 *
 * Hash: 0xA4454592DCF7C992 | Since: 1207
 *
 * @deprecated Use fire.isEntityDamagedByFire() instead
 */
export declare function isEntityDamagedByFire(entity: number | Entity): boolean;
/**
 * Add explosion with and assign an entity as damage causer.
 * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
 *
 * Hash: 0xB7DF150605EEDC9B | Since: 1207
 *
 * @deprecated Use fire.addExplosionWithDamageCauser() instead
 */
export declare function addExplosionWithDamageCauser(entity: number | Entity, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCDC25355C0D65963 | Since: 1207
 *
 * @deprecated Use fire.isEntityConsumedByFire() instead
 */
export declare function isEntityConsumedByFire(entity: number | Entity): boolean;
/**
 * explosionType: see ADD_EXPLOSION
 *
 * Hash: 0xE24822A4CFC9107A | Since: 1207
 *
 * @deprecated Use fire.isExplosionInVolume() instead
 */
export declare function isExplosionInVolume(explosionType: number, volume: number): boolean;
/**
 * Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
 *
 * Hash: 0xAB7993BA61A4674F | Since: 1232
 *
 * @deprecated Use fire.isPedShockingEventActive() instead
 */
export declare function isPedShockingEventActive(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB7C7BDC375AEA9A4 | Since: 1207
 *
 * @deprecated Use fire.stopFireInBox() instead
 */
export declare function stopFireInBox(pos: Vector3, rot: Vector3, scale: Vector3): void;
/**
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
 *
 * Hash: 0x1C1993824A396603 | Since: 1207
 *
 * @deprecated Use flock.getAnimalTuningBoolParam() instead
 */
export declare function getAnimalTuningBoolParam(animal: number | Ped, index: number): boolean;
/**
 * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
 *
 * Hash: 0x4BC3ECFDA0297E27 | Since: 1207
 *
 * @deprecated Use flock.getAnimalTuningFloatParam() instead
 */
export declare function getAnimalTuningFloatParam(animal: number | Ped, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE108489621422F91 | Since: 1207
 *
 * @deprecated Use flock.getSpeciesTuningFloatParam() instead
 */
export declare function getSpeciesTuningFloatParam(): number;
/**
 * No comment provided
 *
 * Hash: 0x96AA1304D30E6BC3 | Since: 1355
 *
 * @deprecated Use flock.resetAnimalTuningBoolParam() instead
 */
export declare function resetAnimalTuningBoolParam(animal: number | Ped, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE776A195488FC520 | Since: 1355
 *
 * @deprecated Use flock.resetAnimalTuningFloatParam() instead
 */
export declare function resetAnimalTuningFloatParam(animal: number | Ped, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9FF1E042FA597187 | Since: 1207
 *
 * @deprecated Use flock.setAnimalTuningBoolParam() instead
 */
export declare function setAnimalTuningBoolParam(animal: number | Ped, index: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCBDA22C87977244F | Since: 1207
 *
 * @deprecated Use flock.setAnimalTuningFloatParam() instead
 */
export declare function setAnimalTuningFloatParam(animal: number | Ped, index: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6D1D94C2459B42EE | Since: 1207
 *
 * @deprecated Use flock.setSpeciesTuningBoolParam() instead
 */
export declare function setSpeciesTuningBoolParam(): void;
/**
 * No comment provided
 *
 * Hash: 0x963240B6C252BA49 | Since: 1207
 *
 * @deprecated Use flock.setSpeciesTuningFloatParam() instead
 */
export declare function setSpeciesTuningFloatParam(): void;
/**
 * No comment provided
 *
 * Hash: 0x0816C31480764AB0 | Since: 1207
 *
 * @deprecated Use flock._0x0816C31480764AB0() instead
 */
export declare function _0x0816C31480764AB0(): void;
/**
 * No comment provided
 *
 * Hash: 0x09EE00B8F858E0BE | Since: 1207
 *
 * @deprecated Use flock._0x09EE00B8F858E0BE() instead
 */
export declare function _0x09EE00B8F858E0BE(): any;
/**
 * No comment provided
 *
 * Hash: 0x1520626FFAFFFA8F | Since: 1207
 *
 * @deprecated Use flock._0x1520626FFAFFFA8F() instead
 */
export declare function _0x1520626FFAFFFA8F(): void;
/**
 * No comment provided
 *
 * Hash: 0x17E3E5C46ECCD308 | Since: 1207
 *
 * @deprecated Use flock._0x17E3E5C46ECCD308() instead
 */
export declare function _0x17E3E5C46ECCD308(): void;
/**
 * No comment provided
 *
 * Hash: 0x19870C40C7EE15BE | Since: 1207
 *
 * @deprecated Use flock._0x19870C40C7EE15BE() instead
 */
export declare function _0x19870C40C7EE15BE(): any;
/**
 * No comment provided
 *
 * Hash: 0x1DA6CB02071055D5 | Since: 1207
 *
 * @deprecated Use flock._0x1DA6CB02071055D5() instead
 */
export declare function _0x1DA6CB02071055D5(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x2DF3D457D86F8E57 | Since: 1207
 *
 * @deprecated Use flock._0x2DF3D457D86F8E57() instead
 */
export declare function _0x2DF3D457D86F8E57(): void;
/**
 * No comment provided
 *
 * Hash: 0x34B9C4D86DF2C2F3 | Since: 1207
 *
 * @deprecated Use flock._0x34B9C4D86DF2C2F3() instead
 */
export declare function _0x34B9C4D86DF2C2F3(): any;
/**
 * No comment provided
 *
 * Hash: 0x36486AF7DA93A464 | Since: 1207
 *
 * @deprecated Use flock._0x36486AF7DA93A464() instead
 */
export declare function _0x36486AF7DA93A464(): any;
/**
 * Remove the ped from a herd.
 *
 * Hash: 0x408D1149C5E39C1E | Since: 1207
 *
 * @deprecated Use flock.removeHerdPed() instead
 */
export declare function removeHerdPed(herd: number | Entity, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x53187E563F938E76 | Since: 1207
 *
 * @deprecated Use flock._0x53187E563F938E76() instead
 */
export declare function _0x53187E563F938E76(): any;
/**
 * Clear the herd.
 *
 * Hash: 0x67A43EA3F6FE0076 | Since: 1207
 *
 * @deprecated Use flock.clearHerd() instead
 */
export declare function clearHerd(herd: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6C57BEA886A20C6B | Since: 1207
 *
 * @deprecated Use flock._0x6C57BEA886A20C6B() instead
 */
export declare function _0x6C57BEA886A20C6B(): void;
/**
 * No comment provided
 *
 * Hash: 0x706B434FEFAD6A24 | Since: 1207
 *
 * @deprecated Use flock._0x706B434FEFAD6A24() instead
 */
export declare function _0x706B434FEFAD6A24(): void;
/**
 * No comment provided
 *
 * Hash: 0x8049B17BEC937662 | Since: 1207
 *
 * @deprecated Use flock._0x8049B17BEC937662() instead
 */
export declare function _0x8049B17BEC937662(): any;
/**
 * Return whether the ped is in the herd.
 *
 * Hash: 0x9E13ACC38BA8F9C3 | Since: 1207
 *
 * @deprecated Use flock.isPedInHerd() instead
 */
export declare function isPedInHerd(herd: number | Entity, ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA881F5C77A560906 | Since: 1207
 *
 * @deprecated Use flock._0xA881F5C77A560906() instead
 */
export declare function _0xA881F5C77A560906(): void;
/**
 * No comment provided
 *
 * Hash: 0xC3D581A34BC0A1F0 | Since: 1207
 *
 * @deprecated Use flock._0xC3D581A34BC0A1F0() instead
 */
export declare function _0xC3D581A34BC0A1F0(): void;
/**
 * No comment provided
 *
 * Hash: 0xC72CE37081DAE625 | Since: 1207
 *
 * @deprecated Use flock._0xC72CE37081DAE625() instead
 */
export declare function _0xC72CE37081DAE625(): void;
/**
 * No comment provided
 *
 * Hash: 0xC95611869E14F8AF | Since: 1207
 *
 * @deprecated Use flock._0xC95611869E14F8AF() instead
 */
export declare function _0xC95611869E14F8AF(): void;
/**
 * No comment provided
 *
 * Hash: 0xCC6B5AAFC87BFC7B | Since: 1207
 *
 * @deprecated Use flock._0xCC6B5AAFC87BFC7B() instead
 */
export declare function _0xCC6B5AAFC87BFC7B(): void;
/**
 * No comment provided
 *
 * Hash: 0xD95F04A4E73BE85E | Since: 1207
 *
 * @deprecated Use flock._0xD95F04A4E73BE85E() instead
 */
export declare function _0xD95F04A4E73BE85E(): any;
/**
 * Delete and invalidate the herd.
 *
 * Hash: 0xE0961AED72642B80 | Since: 1207
 *
 * @deprecated Use flock.deleteHerd() instead
 */
export declare function deleteHerd(herd: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xE36D2CB540597EF7 | Since: 1207
 *
 * @deprecated Use flock._0xE36D2CB540597EF7() instead
 */
export declare function _0xE36D2CB540597EF7(): void;
/**
 * No comment provided
 *
 * Hash: 0xE93415B3307208E5 | Since: 1207
 *
 * @deprecated Use flock._0xE93415B3307208E5() instead
 */
export declare function _0xE93415B3307208E5(): any;
/**
 * species: SPECIES_BIRD_CROW
 *
 * Hash: 0xF2CCA7B68CFAB2B9 | Since: 1207
 *
 * @deprecated Use flock._0xF2CCA7B68CFAB2B9() instead
 */
export declare function _0xF2CCA7B68CFAB2B9(species: number | string, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA821997794F48E7 | Since: 1207
 *
 * @deprecated Use flock._0xFA821997794F48E7() instead
 */
export declare function _0xFA821997794F48E7(): void;
/**
 * No comment provided
 *
 * Hash: 0xFB16F08F47B83B4C | Since: 1207
 *
 * @deprecated Use flock._0xFB16F08F47B83B4C() instead
 */
export declare function _0xFB16F08F47B83B4C(): void;
/**
 * No comment provided
 *
 * Hash: 0xFDB008B3BCF5992F | Since: 1207
 *
 * @deprecated Use flock._0xFDB008B3BCF5992F() instead
 */
export declare function _0xFDB008B3BCF5992F(): void;
/**
 * No comment provided
 *
 * Hash: 0xFF1E339CE40EAAAF | Since: 1207
 *
 * @deprecated Use flock._0xFF1E339CE40EAAAF() instead
 */
export declare function _0xFF1E339CE40EAAAF(): void;
/**
 * No comment provided
 *
 * Hash: 0x933E5D31A7D13069 | Since: 1207
 *
 * @deprecated Use flock.addPedToFlock() instead
 */
export declare function addPedToFlock(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCB4EF7EDAE2E16F1 | Since: 1207
 *
 * @deprecated Use flock.createHerd() instead
 */
export declare function createHerd(): number;
/**
 * Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
 * Used for: REL_DOMESTICATED_ANIMAL
 *
 * Hash: 0x3B005FF0538ED2A9 | Since: 1207
 *
 * @deprecated Use flock.getAnimalIsWild() instead
 */
export declare function getAnimalIsWild(ped: number | Ped): boolean;
/**
 * enum eAnimalRarityLevel
 * {
 * ARL_COMMON,
 * ARL_RARE,
 * ARL_LEGENDARY,
 * ARL_NUMRARITYLEVELS
 * };
 *
 * Hash: 0xF8B48A361DC388AE | Since: 1207
 *
 * @deprecated Use flock.getAnimalRarity() instead
 */
export declare function getAnimalRarity(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x8D913E493BAFE0A3 | Since: 1207
 *
 * @deprecated Use flock.isHerdValid() instead
 */
export declare function isHerdValid(herdHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAEB97D84CDF3C00B | Since: 1207
 *
 * @deprecated Use flock.setAnimalIsWild() instead
 */
export declare function setAnimalIsWild(ped: number | Ped, toggle: boolean): void;
/**
 * rarityLevel: see _GET_ANIMAL_RARITY
 *
 * Hash: 0x8B6F0F59B1B99801 | Since: 1207
 *
 * @deprecated Use flock.setAnimalRarity() instead
 */
export declare function setAnimalRarity(ped: number | Ped, rarityLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x901E0DC25080C8B9 | Since: 1207
 *
 * @deprecated Use gang.networkGetGangId() instead
 */
export declare function networkGetGangId(player: number | string | Player): any;
/**
 * No comment provided
 *
 * Hash: 0x4BE6C13A45CCA8EC | Since: 1207
 *
 * @deprecated Use gang.networkGetGangLeader() instead
 */
export declare function networkGetGangLeader(gangId: any): number | string;
/**
 * No comment provided
 *
 * Hash: 0x149A2751AB66AC02 | Since: 1207
 *
 * @deprecated Use gang.networkGetNumGangMembers() instead
 */
export declare function networkGetNumGangMembers(gangId: any): number;
/**
 * No comment provided
 *
 * Hash: 0x0F99F6436528A089 | Since: 1207
 *
 * @deprecated Use gang.networkIsGangActive() instead
 */
export declare function networkIsGangActive(gangId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD6F6ACF4392187FB | Since: 1207
 *
 * @deprecated Use gang.networkIsGangIdValid() instead
 */
export declare function networkIsGangIdValid(gangId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x93A91A351A07360E | Since: 1207
 *
 * @deprecated Use gang.networkIsGangInSession() instead
 */
export declare function networkIsGangInSession(gangId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x424B17A7DC5C90BC | Since: 1207
 *
 * @deprecated Use gang.networkIsGangLeader() instead
 */
export declare function networkIsGangLeader(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F59FE6F37869576 | Since: 1207
 *
 * @deprecated Use gang.networkIsInSameGang() instead
 */
export declare function networkIsInSameGang(player1: number | string | Player, player2: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E5C9FB9ED5DFF1C | Since: 1207
 *
 * @deprecated Use gang._0x0E5C9FB9ED5DFF1C() instead
 */
export declare function _0x0E5C9FB9ED5DFF1C(): any;
/**
 * No comment provided
 *
 * Hash: 0x1F11702DDBD915C6 | Since: 1207
 *
 * @deprecated Use gang._0x1F11702DDBD915C6() instead
 */
export declare function _0x1F11702DDBD915C6(): any;
/**
 * No comment provided
 *
 * Hash: 0x2F7EB8B6F6AFE79C | Since: 1207
 *
 * @deprecated Use gang._0x2F7EB8B6F6AFE79C() instead
 */
export declare function _0x2F7EB8B6F6AFE79C(): any;
/**
 * No comment provided
 *
 * Hash: 0x3ADC71A66356D706 | Since: 1207
 *
 * @deprecated Use gang._0x3ADC71A66356D706() instead
 */
export declare function _0x3ADC71A66356D706(): any;
/**
 * No comment provided
 *
 * Hash: 0x48D82C83987E18E4 | Since: 1207
 *
 * @deprecated Use gang._0x48D82C83987E18E4() instead
 */
export declare function _0x48D82C83987E18E4(): any;
/**
 * No comment provided
 *
 * Hash: 0x51C5EF47086AA0D7 | Since: 1207
 *
 * @deprecated Use gang._0x51C5EF47086AA0D7() instead
 */
export declare function _0x51C5EF47086AA0D7(): any;
/**
 * No comment provided
 *
 * Hash: 0x53A94294FDDCF98C | Since: 1207
 *
 * @deprecated Use gang._0x53A94294FDDCF98C() instead
 */
export declare function _0x53A94294FDDCF98C(): any;
/**
 * No comment provided
 *
 * Hash: 0x6102830F764B3DE1 | Since: 1207
 *
 * @deprecated Use gang._0x6102830F764B3DE1() instead
 */
export declare function _0x6102830F764B3DE1(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x644E02F24F9D4E98 | Since: 1207
 *
 * @deprecated Use gang._0x644E02F24F9D4E98() instead
 */
export declare function _0x644E02F24F9D4E98(): any;
/**
 * No comment provided
 *
 * Hash: 0x7933754F260B428A | Since: 1207
 *
 * @deprecated Use gang._0x7933754F260B428A() instead
 */
export declare function _0x7933754F260B428A(player: number | string | Player): any;
/**
 * No comment provided
 *
 * Hash: 0x7BAA30C9BBE8AEE7 | Since: 1207
 *
 * @deprecated Use gang._0x7BAA30C9BBE8AEE7() instead
 */
export declare function _0x7BAA30C9BBE8AEE7(): any;
/**
 * No comment provided
 *
 * Hash: 0xA9CEAE8D6637FBAD | Since: 1207
 *
 * @deprecated Use gang._0xA9CEAE8D6637FBAD() instead
 */
export declare function _0xA9CEAE8D6637FBAD(): void;
/**
 * No comment provided
 *
 * Hash: 0xAD22AB64FA428DF3 | Since: 1207
 *
 * @deprecated Use gang._0xAD22AB64FA428DF3() instead
 */
export declare function _0xAD22AB64FA428DF3(): void;
/**
 * No comment provided
 *
 * Hash: 0xAFD3599A3CC5637D | Since: 1207
 *
 * @deprecated Use gang._0xAFD3599A3CC5637D() instead
 */
export declare function _0xAFD3599A3CC5637D(): any;
/**
 * No comment provided
 *
 * Hash: 0xB22B1D9F74095382 | Since: 1207
 *
 * @deprecated Use gang._0xB22B1D9F74095382() instead
 */
export declare function _0xB22B1D9F74095382(): void;
/**
 * No comment provided
 *
 * Hash: 0xB38C256498748413 | Since: 1207
 *
 * @deprecated Use gang._0xB38C256498748413() instead
 */
export declare function _0xB38C256498748413(): void;
/**
 * No comment provided
 *
 * Hash: 0xC81A9E2C8EFD28D5 | Since: 1207
 *
 * @deprecated Use gang._0xC81A9E2C8EFD28D5() instead
 */
export declare function _0xC81A9E2C8EFD28D5(): void;
/**
 * _NETWORK_GET_* or _NETWORK_IS_*
 *
 * Hash: 0xDA801F7F6A5278D3 | Since: 1207
 *
 * @deprecated Use gang._0xDA801F7F6A5278D3() instead
 */
export declare function _0xDA801F7F6A5278D3(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE4C64CD37CB176AA | Since: 1207
 *
 * @deprecated Use gang._0xE4C64CD37CB176AA() instead
 */
export declare function _0xE4C64CD37CB176AA(): any;
/**
 * No comment provided
 *
 * Hash: 0xEE4F20004D0288B7 | Since: 1207
 *
 * @deprecated Use gang._0xEE4F20004D0288B7() instead
 */
export declare function _0xEE4F20004D0288B7(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA7C5B7E087A4CEB | Since: 1207
 *
 * @deprecated Use gang._0xFA7C5B7E087A4CEB() instead
 */
export declare function _0xFA7C5B7E087A4CEB(): any;
/**
 * No comment provided
 *
 * Hash: 0xCE88A261DCBBA0D9 | Since: 1207
 *
 * @deprecated Use gang.networkGetGangLeaderHandle() instead
 */
export declare function networkGetGangLeaderHandle(gangId: any, gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD1BF325C8252A982 | Since: 1207
 *
 * @deprecated Use gang.networkGetGangMembers() instead
 */
export declare function networkGetGangMembers(gangId: any, memberHandles: any): number;
/**
 * No comment provided
 *
 * Hash: 0x9970AE8C3D706139 | Since: 1207
 *
 * @deprecated Use gang.networkGetGangPrivacy() instead
 */
export declare function networkGetGangPrivacy(): number;
/**
 * No comment provided
 *
 * Hash: 0x853B0FA4D8732C57 | Since: 1207
 *
 * @deprecated Use gang.networkGetGangSize() instead
 */
export declare function networkGetGangSize(gangId: any): number;
/**
 * No comment provided
 *
 * Hash: 0x9BE7DCB22D32CCBE | Since: 1207
 *
 * @deprecated Use gang.networkIsGangMember() instead
 */
export declare function networkIsGangMember(gangId: any, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFCF96CCBD81B24C8 | Since: 1207
 *
 * @deprecated Use gang.networkIsGangOpen() instead
 */
export declare function networkIsGangOpen(gangId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x81FB74C83C2ED69F | Since: 1207
 *
 * @deprecated Use gang.networkIsInMyGang() instead
 */
export declare function networkIsInMyGang(player: number | string | Player): boolean;
/**
 * banTimeSeconds is 120 in R* Scripts
 *
 * Hash: 0xCD9E2D9BC52FD80F | Since: 1207
 *
 * @deprecated Use gang.networkKickGangMember() instead
 */
export declare function networkKickGangMember(player: number | string | Player, banTimeSeconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A04A07BC3074EDB | Since: 1207
 *
 * @deprecated Use gang.networkLeaveGang() instead
 */
export declare function networkLeaveGang(disband: boolean): void;
/**
 * Returns true if join succeeded, false if failed.
 *
 * Hash: 0xC0474C8BCF6787AD | Since: 1207
 *
 * @deprecated Use gang.networkRequestGangJoin() instead
 */
export declare function networkRequestGangJoin(gangId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC5BF29F4035277C2 | Since: 1207
 *
 * @deprecated Use gang.networkSetGangPrivacy() instead
 */
export declare function networkSetGangPrivacy(privacyType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x833D8268D51B4522 | Since: 1207
 *
 * @deprecated Use gang.networkSetGangSize() instead
 */
export declare function networkSetGangSize(size: number): boolean;
/**
 * openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
 * openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
 *
 * campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
 *
 * Hash: 0xD1A226F2E05E58FC | Since: 1207
 *
 * @deprecated Use gang.networkStartGang() instead
 */
export declare function networkStartGang(openStatus: boolean, campSize: number): void;
/**
 * No comment provided
 *
 * Hash: 0x87BBCC4360A9BDE3 | Since: 1355
 *
 * @deprecated Use google_analytics.googleAnalyticsEndEvent() instead
 */
export declare function googleAnalyticsEndEvent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC6DE040378364798 | Since: 1207
 *
 * @deprecated Use google_analytics.googleAnalyticsPopPage() instead
 */
export declare function googleAnalyticsPopPage(pageName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD43A616AE3AC4EF6 | Since: 1207
 *
 * @deprecated Use google_analytics.googleAnalyticsPushPage() instead
 */
export declare function googleAnalyticsPushPage(pageName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1C54F031D7C0F7AC | Since: 1355
 *
 * @deprecated Use google_analytics.googleAnalyticsStartEvent() instead
 */
export declare function googleAnalyticsStartEvent(eventCategory: string, eventAction: string, eventLabel: string, eventValue: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57CB267624EF85C0 | Since: 1207
 *
 * @deprecated Use graphics.addDecal() instead
 */
export declare function addDecal(): number;
/**
 * No comment provided
 *
 * Hash: 0x73354FB6D03D2E8A | Since: 1207
 *
 * @deprecated Use graphics.addPetrolTrailDecalInfo() instead
 */
export declare function addPetrolTrailDecalInfo(pos: Vector3): void;
/**
 * Returns veg modifier handle
 *
 * Hash: 0xFA50F79257745E74 | Since: 1207
 *
 * @deprecated Use graphics.addVegModifierSphere() instead
 */
export declare function addVegModifierSphere(pos: Vector3, radius: number, modType: number, flags: number): number;
/**
 * No comment provided
 *
 * Hash: 0x7C348310A6E2FB91 | Since: 1207
 *
 * @deprecated Use graphics.allowPickupLightSync() instead
 */
export declare function allowPickupLightSync(pickupObject: number | Object, allow: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9AB192A9EF980EED | Since: 1207
 *
 * @deprecated Use graphics.animpostfxHasEventTriggeredByStackhash() instead
 */
export declare function animpostfxHasEventTriggeredByStackhash(effectNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59EA80079B86D8C7 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxIsPreloadingByStackhash() instead
 */
export declare function animpostfxIsPreloadingByStackhash(effectNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4A123E85D7C4CA0B | Since: 1207
 *
 * @deprecated Use graphics.animpostfxIsRunning() instead
 */
export declare function animpostfxIsRunning(effectName: string): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
 *
 * Hash: 0x4102732DF6B4005F | Since: 1207
 *
 * @deprecated Use graphics.animpostfxPlay() instead
 */
export declare function animpostfxPlay(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xB4FD7446BAB2F394 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxStop() instead
 */
export declare function animpostfxStop(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x66560A0D4C64FD21 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxStopAll() instead
 */
export declare function animpostfxStopAll(): void;
/**
 * No comment provided
 *
 * Hash: 0x40866A418EB8EFDE | Since: 1207
 *
 * @deprecated Use graphics.attachTvAudioToEntity() instead
 */
export declare function attachTvAudioToEntity(entity: number | Entity): void;
/**
 * Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
 *
 * Hash: 0x494A9874F17A7D50 | Since: 1207
 *
 * @deprecated Use graphics.beginCreateLowQualityCopyOfPhoto() instead
 */
export declare function beginCreateLowQualityCopyOfPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA15BFFC0A01B34E1 | Since: 1207
 *
 * @deprecated Use graphics.beginTakeHighQualityPhoto() instead
 */
export declare function beginTakeHighQualityPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0552AA3FFC5B87AA | Since: 1207
 *
 * @deprecated Use graphics.blockPickupPlacementLight() instead
 */
export declare function blockPickupPlacementLight(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF7C29D7C12C36F03 | Since: 1207
 *
 * @deprecated Use graphics.cascadeShadowsClearShadowSampleType() instead
 */
export declare function cascadeShadowsClearShadowSampleType(): void;
/**
 * When this is set to ON, shadows only draw as you get nearer.
 *
 * When OFF, they draw from a further distance.
 *
 * Hash: 0x8FBFD2AEB196B369 | Since: 1207
 *
 * @deprecated Use graphics.cascadeShadowsEnableEntityTracker() instead
 */
export declare function cascadeShadowsEnableEntityTracker(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD9EDB2E4512D563E | Since: 1207
 *
 * @deprecated Use graphics.cascadeShadowsSetCascadeBounds() instead
 */
export declare function cascadeShadowsSetCascadeBounds(): void;
/**
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_POISSON16"
 * "CSM_ST_SOFT8"
 * "CSM_ST_SOFT16"
 * "CSM_ST_SOFT32"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_ESM"
 *
 * Hash: 0xCE4774E0F9AD48D1 | Since: 1207
 *
 * @deprecated Use graphics.cascadeShadowsSetShadowSampleType() instead
 */
export declare function cascadeShadowsSetShadowSampleType(type: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0E3F4AF2D63491FB | Since: 1207
 *
 * @deprecated Use graphics.clearTimecycleModifier() instead
 */
export declare function clearTimecycleModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x175668836B44CBB0 | Since: 1207
 *
 * @deprecated Use graphics.createCheckpointWithNamehash() instead
 */
export declare function createCheckpointWithNamehash(typeHash: number | string, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, radius: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
/**
 * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
 *
 * Hash: 0xFB405CB357C69CB9 | Since: 1207
 *
 * @deprecated Use graphics.createTrackedPoint() instead
 */
export declare function createTrackedPoint(): number;
/**
 * No comment provided
 *
 * Hash: 0x0DED5B0C8EBAAE12 | Since: 1207
 *
 * @deprecated Use graphics.deleteCheckpoint() instead
 */
export declare function deleteCheckpoint(checkpoint: number): void;
/**
 * No comment provided
 *
 * Hash: 0x37A59922109F8F1C | Since: 1207
 *
 * @deprecated Use graphics.destroyTrackedPoint() instead
 */
export declare function destroyTrackedPoint(point: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5C9978A2A3DC3D0D | Since: 1207
 *
 * @deprecated Use graphics.disableEntitymask() instead
 */
export declare function disableEntitymask(): void;
/**
 * No comment provided
 *
 * Hash: 0x98A7CD5EA379A854 | Since: 1207
 *
 * @deprecated Use graphics.disableHdtexThisFrame() instead
 */
export declare function disableHdtexThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x9DD5AFF561E88F2A | Since: 1207
 *
 * @deprecated Use graphics.doesParticleFxLoopedExist() instead
 */
export declare function doesParticleFxLoopedExist(ptfxHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD2D9E04C0DF927F4 | Since: 1207
 *
 * @deprecated Use graphics.drawLightWithRange() instead
 */
export declare function drawLightWithRange(pos: Vector3, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
/**
 * nullsub, doesn't do anything (GTA5 leftover, there is no phone in RDR3)
 *
 * Hash: 0xF1142E5D64B47802 | Since: 1207
 *
 * @deprecated Use graphics.drawLowQualityPhotoToPhone() instead
 */
export declare function drawLowQualityPhotoToPhone(photoRotation: number): void;
/**
 * Draws a rectangle on the screen.
 *
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 *
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 *
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 *
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 *
 * -R: Red part of the color. (0-255)
 *
 * -G: Green part of the color. (0-255)
 *
 * -B: Blue part of the color. (0-255)
 *
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 *
 * Hash: 0x405224591DF02025 | Since: 1207
 *
 * @deprecated Use graphics.drawRect() instead
 */
export declare function drawRect(x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Draws a 2D sprite on the screen.
 *
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from
 *
 * textureName - Name of texture to load from texture dictionary
 *
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 *
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 *
 * red,green,blue - Sprite color (default = 255/255/255)
 *
 * alpha - opacity level
 *
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
 *
 * Hash: 0xC9884ECADE94CB34 | Since: 1207
 *
 * @deprecated Use graphics.drawSprite() instead
 */
export declare function drawSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC0A145540254A840 | Since: 1207
 *
 * @deprecated Use graphics.drawTvChannel() instead
 */
export declare function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFAAD23DE7A54FC14 | Since: 1207
 *
 * @deprecated Use graphics.enableEntitymask() instead
 */
export declare function enableEntitymask(): void;
/**
 * Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
 *
 * Hash: 0x6FE93BCC7BF12B63 | Since: 1207
 *
 * @deprecated Use graphics.enableMoonCycleOverride() instead
 */
export declare function enableMoonCycleOverride(strength: number): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x6FC9B065229C0787 | Since: 1207
 *
 * @deprecated Use graphics.enableMovieSubtitles() instead
 */
export declare function enableMovieSubtitles(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0E126AAE933F3B56 | Since: 1207
 *
 * @deprecated Use graphics.endPetrolTrailDecals() instead
 */
export declare function endPetrolTrailDecals(): void;
/**
 * No comment provided
 *
 * Hash: 0xD45547D8396F002A | Since: 1207
 *
 * @deprecated Use graphics.freeMemoryForHighQualityPhoto() instead
 */
export declare function freeMemoryForHighQualityPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x614682E715ADBAAC | Since: 1207
 *
 * @deprecated Use graphics.freeMemoryForLowQualityPhoto() instead
 */
export declare function freeMemoryForLowQualityPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x7DFF8F94937D2659 | Since: 1207
 *
 * @deprecated Use graphics.freeMemoryForMissionCreatorPhoto() instead
 */
export declare function freeMemoryForMissionCreatorPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0xCB50D7AFCC8B0EC6 | Since: 1207
 *
 * @deprecated Use graphics.getScreenCoordFromWorldCoord() instead
 */
export declare function getScreenCoordFromWorldCoord(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): boolean;
/**
 * Hardcoded to always set x to 1280 and y to 720.
 *
 * Hash: 0x66773C92835D0909 | Since: 1207
 *
 * @deprecated Use graphics.getScreenResolution() instead
 */
export declare function getScreenResolution(x: number, y: number): void;
/**
 * Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
 *
 * Hash: 0x13430D3D5A45F14B | Since: 1207
 *
 * @deprecated Use graphics.getStatusOfCreateLowQualityCopyOfPhoto() instead
 */
export declare function getStatusOfCreateLowQualityCopyOfPhoto(): number;
/**
 * `contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)`
 *
 * Hash: 0xC71B50AE58D07369 | Since: 1207
 *
 * @deprecated Use graphics.getStatusOfLoadMissionCreatorPhoto() instead
 */
export declare function getStatusOfLoadMissionCreatorPhoto(contentId: string): number;
/**
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 *
 * Hash: 0xD6663EC374092383 | Since: 1207
 *
 * @deprecated Use graphics.getStatusOfSaveHighQualityPhoto() instead
 */
export declare function getStatusOfSaveHighQualityPhoto(): number;
/**
 * 0 = succeeded
 * 1 = getting status
 * 2 = failed
 *
 * Hash: 0xB28894CD7408BD0C | Since: 1207
 *
 * @deprecated Use graphics.getStatusOfSortedListOperation() instead
 */
export declare function getStatusOfSortedListOperation(): number;
/**
 * No comment provided
 *
 * Hash: 0x4A3DA74C3CCB1725 | Since: 1207
 *
 * @deprecated Use graphics.getStatusOfTakeHighQualityPhoto() instead
 */
export declare function getStatusOfTakeHighQualityPhoto(): number;
/**
 * No comment provided
 *
 * Hash: 0xA705394293E2B3D3 | Since: 1207
 *
 * @deprecated Use graphics.getTimecycleModifierIndex() instead
 */
export declare function getTimecycleModifierIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x2DA67BA3C8A6755D | Since: 1207
 *
 * @deprecated Use graphics.getTimecycleTransitionModifierIndex() instead
 */
export declare function getTimecycleTransitionModifierIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x86ED21BDB2791CE8 | Since: 1207
 *
 * @deprecated Use graphics.getTogglePausedRenderphasesStatus() instead
 */
export declare function getTogglePausedRenderphasesStatus(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF90FBFD68F3C59AE | Since: 1207
 *
 * @deprecated Use graphics.getTvChannel() instead
 */
export declare function getTvChannel(): number;
/**
 * No comment provided
 *
 * Hash: 0x3E4B4E5CF5D3EEB5 | Since: 1207
 *
 * @deprecated Use graphics.isDecalAlive() instead
 */
export declare function isDecalAlive(decal: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x86076AE35CBBE55F | Since: 1355
 *
 * @deprecated Use graphics.isPhotoFrame() instead
 */
export declare function isPhotoFrame(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCBB056BA159FB48D | Since: 1207
 *
 * @deprecated Use graphics.isTrackedPointVisible() instead
 */
export declare function isTrackedPointVisible(point: number): boolean;
/**
 * Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
 *
 * Hash: 0x4D562223E0EB65F3 | Since: 1207
 *
 * @deprecated Use graphics.isTvshowCurrentlyPlaying() instead
 */
export declare function isTvshowCurrentlyPlaying(videoCliphash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x84F0BA7462FF8D58 | Since: 1207
 *
 * @deprecated Use graphics.loadMissionCreatorPhoto() instead
 */
export declare function loadMissionCreatorPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF6E67D073D2DCE2 | Since: 1207
 *
 * @deprecated Use graphics.pedshotIsAvailable() instead
 */
export declare function pedshotIsAvailable(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA42EDF1E88734A7E | Since: 1207
 *
 * @deprecated Use graphics.queueOperationToCreateSortedListOfPhotos() instead
 */
export declare function queueOperationToCreateSortedListOfPhotos(): any;
/**
 * No comment provided
 *
 * Hash: 0x49A720552EB0BB88 | Since: 1207
 *
 * @deprecated Use graphics.removeDecal() instead
 */
export declare function removeDecal(decal: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFB8972BAE0013140 | Since: 1207
 *
 * @deprecated Use graphics.removeDecalsFromObject() instead
 */
export declare function removeDecalsFromObject(obj: number | Object): void;
/**
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 *
 * Hash: 0x86DE59FA02902B40 | Since: 1207
 *
 * @deprecated Use graphics.removeDecalsInRange() instead
 */
export declare function removeDecalsInRange(pos: Vector3, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAE7BF7CA9E4BA48D | Since: 1207
 *
 * @deprecated Use graphics.removeGrassCullSphere() instead
 */
export declare function removeGrassCullSphere(handle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x459598F579C98929 | Since: 1207
 *
 * @deprecated Use graphics.removeParticleFx() instead
 */
export declare function removeParticleFx(ptfxHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x92884B4A49D81325 | Since: 1207
 *
 * @deprecated Use graphics.removeParticleFxFromEntity() instead
 */
export declare function removeParticleFxFromEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x87B5905ECA623B68 | Since: 1207
 *
 * @deprecated Use graphics.removeParticleFxInRange() instead
 */
export declare function removeParticleFxInRange(pos: Vector3, radius: number): void;
/**
 * only works by invoking and passing as pointer value Citizen.InvokeNative(0x9CF1836C03FB67A2, Citizen.PointerValueIntInitialized(vegModifierId),1) p1 is 1 or 0
 *
 * Hash: 0x9CF1836C03FB67A2 | Since: 1207
 *
 * @deprecated Use graphics.removeVegModifierSphere() instead
 */
export declare function removeVegModifierSphere(vegModifierHandle: number): void;
/**
 * Sets an unknown value related to timecycles.
 *
 * Hash: 0x297B72E2AF094742 | Since: 1207
 *
 * @deprecated Use graphics.resetAdaptation() instead
 */
export declare function resetAdaptation(unk: number): void;
/**
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 *
 * Hash: 0x274B3DABF7E72DEF | Since: 1207
 *
 * @deprecated Use graphics.resetParticleFxOverride() instead
 */
export declare function resetParticleFxOverride(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCCD9AAD85E1B559E | Since: 1207
 *
 * @deprecated Use graphics.resetPausedRenderphases() instead
 */
export declare function resetPausedRenderphases(): void;
/**
 * No comment provided
 *
 * Hash: 0x57639FD876B68A91 | Since: 1207
 *
 * @deprecated Use graphics.saveHighQualityPhoto() instead
 */
export declare function saveHighQualityPhoto(unused: number): boolean;
/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 *
 * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 *
 * Hash: 0xB2797619A7C7747B | Since: 1207
 *
 * @deprecated Use graphics.setArtificialLightsState() instead
 */
export declare function setArtificialLightsState(state: boolean): void;
/**
 * Sets the checkpoint color.
 *
 * Hash: 0xCAAFC225E33B1D15 | Since: 1207
 *
 * @deprecated Use graphics.setCheckpointRgba() instead
 */
export declare function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Sets the checkpoint icon color.
 *
 * Hash: 0x99AFF17222D4DEB4 | Since: 1207
 *
 * @deprecated Use graphics.setCheckpointRgba2() instead
 */
export declare function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x53ED07BF368EDA59 | Since: 1232
 *
 * @deprecated Use graphics.setDisablePetrolDecalsIgnitingThisFrame() instead
 */
export declare function setDisablePetrolDecalsIgnitingThisFrame(): void;
/**
 * Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
 *
 * Hash: 0x27219300C36A8D40 | Since: 1207
 *
 * @deprecated Use graphics.setGrassCullSphere() instead
 */
export declare function setGrassCullSphere(pos: Vector3): number;
/**
 * Old name: _SET_HIDOF_ENV_BLUR_PARAMS
 *
 * Hash: 0xCC23AA1A7CBFE840 | Since: 1207
 *
 * @deprecated Use graphics.setHidofOverride() instead
 */
export declare function setHidofOverride(): void;
/**
 * Related to Campfires.
 * p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
 *
 * Hash: 0x3C61B52B00848C26 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxAmbientColour() instead
 */
export declare function setParticleFxAmbientColour(entity: number | Entity, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8DCCC98DC0DBF9E4 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxBulletImpactLodrangeScale() instead
 */
export declare function setParticleFxBulletImpactLodrangeScale(): void;
/**
 * No comment provided
 *
 * Hash: 0xA53C8D7D0F8C74D0 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxBulletImpactScale() instead
 */
export declare function setParticleFxBulletImpactScale(scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2A1625858887D4E6 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxFootLodrangeScale() instead
 */
export declare function setParticleFxFootLodrangeScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x88786E76234F7054 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedAlpha() instead
 */
export declare function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x239879FC61C610CC | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedColour() instead
 */
export declare function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3674F389B0FACD80 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedEvolution() instead
 */
export declare function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9B04D471DA0AD7AA | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedFarClipDist() instead
 */
export declare function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD3A4A95FC94FE83B | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedOffsets() instead
 */
export declare function setParticleFxLoopedOffsets(ptfxHandle: number, pos: Vector3, rot: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x1A9E1C0D98D093B7 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedScale() instead
 */
export declare function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE8A35938A7026CEA | Since: 1311
 *
 * @deprecated Use graphics.setParticleFxNonLoopedAlpha() instead
 */
export declare function setParticleFxNonLoopedAlpha(alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x60B85BED6577A35B | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxNonLoopedColour() instead
 */
export declare function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBE711A169E9C7E95 | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxOverride() instead
 */
export declare function setParticleFxOverride(oldAsset: string, newAsset: string): void;
/**
 * https://imgur.com/a/I2swSDJ
 *
 * Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
 *
 * Hash: 0x7DFB49BCDB73089A | Since: 1207
 *
 * @deprecated Use graphics.setPickupLight() instead
 */
export declare function setPickupLight(object: number | Object, toggle: boolean): void;
/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
 *
 * Hash: 0x906B86E6D7896B9E | Since: 1207
 *
 * @deprecated Use graphics.setScriptGfxDrawBehindPausemenu() instead
 */
export declare function setScriptGfxDrawBehindPausemenu(toggle: boolean): void;
/**
 * Sets the draw order for script draw commands.
 *
 * Hash: 0xCFCC78391C8B3814 | Since: 1207
 *
 * @deprecated Use graphics.setScriptGfxDrawOrder() instead
 */
export declare function setScriptGfxDrawOrder(drawOrder: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
 *
 * Hash: 0xFA08722A5EA82DA7 | Since: 1207
 *
 * @deprecated Use graphics.setTimecycleModifier() instead
 */
export declare function setTimecycleModifier(modifierName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFDB74C9CC54C3F37 | Since: 1207
 *
 * @deprecated Use graphics.setTimecycleModifierStrength() instead
 */
export declare function setTimecycleModifierStrength(strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF6FDA3D4404D4F2C | Since: 1207
 *
 * @deprecated Use graphics.setTrackedPointInfo() instead
 */
export declare function setTrackedPointInfo(point: number, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB6C707F20D955D4 | Since: 1207
 *
 * @deprecated Use graphics.setTransitionOutOfTimecycleModifier() instead
 */
export declare function setTransitionOutOfTimecycleModifier(strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFF927A09F481D80C | Since: 1207
 *
 * @deprecated Use graphics.setTransitionTimecycleModifier() instead
 */
export declare function setTransitionTimecycleModifier(modifierName: string, transitionBlend: number): void;
/**
 * Probably changes tvs from being a 3d audio to being "global" audio
 *
 * Hash: 0x64437C98FCC5F291 | Since: 1207
 *
 * @deprecated Use graphics.setTvAudioFrontend() instead
 */
export declare function setTvAudioFrontend(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x593FAF7FC9401A56 | Since: 1207
 *
 * @deprecated Use graphics.setTvChannel() instead
 */
export declare function setTvChannel(channel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEC6B25F5DC8925B | Since: 1207
 *
 * @deprecated Use graphics.setTvChannelPlaylist() instead
 */
export declare function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x73A97068787D7231 | Since: 1207
 *
 * @deprecated Use graphics.setTvVolume() instead
 */
export declare function setTvVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8F90AB32E1944BDE | Since: 1207
 *
 * @deprecated Use graphics.startNetworkedParticleFxLoopedOnEntity() instead
 */
export declare function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x9C56621462FFE7A6 | Since: 1207
 *
 * @deprecated Use graphics.startNetworkedParticleFxLoopedOnEntityBone() instead
 */
export declare function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xFB97618457994A62 | Since: 1207
 *
 * @deprecated Use graphics.startNetworkedParticleFxNonLoopedAtCoord() instead
 */
export declare function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE6CFE43937061143 | Since: 1207
 *
 * @deprecated Use graphics.startNetworkedParticleFxNonLoopedOnEntity() instead
 */
export declare function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
 *
 * Hash: 0xBA32867E86125D3A | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxLoopedAtCoord() instead
 */
export declare function startParticleFxLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xBD41E1440CE39800 | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxLoopedOnEntity() instead
 */
export declare function startParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xD3BA6EC7F2FBD5E9 | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxLoopedOnEntityBone() instead
 */
export declare function startParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xE689C1B1432BB8AF | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxLoopedOnPedBone() instead
 */
export declare function startParticleFxLoopedOnPedBone(effectName: string, ped: number | Ped, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
 *
 * Hash: 0x2E80BF72EF7C87AC | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxNonLoopedAtCoord() instead
 */
export declare function startParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, eventType: number, bPeekOnly: boolean, bIsRegistered: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF4C64C513388C12 | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxNonLoopedOnEntity() instead
 */
export declare function startParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FAA72BD940C3AC0 | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxNonLoopedOnPedBone() instead
 */
export declare function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x46F246D6504F0031 | Since: 1207
 *
 * @deprecated Use graphics.startPetrolTrailDecals() instead
 */
export declare function startPetrolTrailDecals(): void;
/**
 * No comment provided
 *
 * Hash: 0x22970F3A088B133B | Since: 1207
 *
 * @deprecated Use graphics.stopParticleFxLooped() instead
 */
export declare function stopParticleFxLooped(ptfxHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEF9E1C45732F55FA | Since: 1207
 *
 * @deprecated Use graphics.togglePausedRenderphases() instead
 */
export declare function togglePausedRenderphases(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBDBACB52A03CC760 | Since: 1207
 *
 * @deprecated Use graphics.updateLightsOnEntity() instead
 */
export declare function updateLightsOnEntity(entity: number | Entity): void;
/**
 * fxName: see data_0/data/effects/ptfx/fxlists/
 *
 * Hash: 0xA10DB07FC234DD12 | Since: 1207
 *
 * @deprecated Use graphics.useParticleFxAsset() instead
 */
export declare function useParticleFxAsset(fxName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x085C5B61A0114F32 | Since: 1207
 *
 * @deprecated Use graphics._0x085C5B61A0114F32() instead
 */
export declare function _0x085C5B61A0114F32(): void;
/**
 * Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
 *
 * Hash: 0x0D5B19C34068FEE7 | Since: 1311
 *
 * @deprecated Use graphics._0x0D5B19C34068FEE7() instead
 */
export declare function _0x0D5B19C34068FEE7(): void;
/**
 * _RESET_*
 *
 * Hash: 0x1460B644397453EB | Since: 1207
 *
 * @deprecated Use graphics._0x1460B644397453EB() instead
 */
export declare function _0x1460B644397453EB(): void;
/**
 * No comment provided
 *
 * Hash: 0x171C18E994C1A395 | Since: 1207
 *
 * @deprecated Use graphics._0x171C18E994C1A395() instead
 */
export declare function _0x171C18E994C1A395(): void;
/**
 * Used in shop scripts for CATALOG_BOOK
 * false = Normal -> [CATALOG_BOOK_SHUTDOWN]
 * true = Trees flickering? -> [CATALOG_BOOK_OPEN]
 *
 * Hash: 0x1A9F09AB458D49C6 | Since: 1207
 *
 * @deprecated Use graphics._0x1A9F09AB458D49C6() instead
 */
export declare function _0x1A9F09AB458D49C6(): void;
/**
 * No comment provided
 *
 * Hash: 0x1C6306E5BC25C29C | Since: 1207
 *
 * @deprecated Use graphics._0x1C6306E5BC25C29C() instead
 */
export declare function _0x1C6306E5BC25C29C(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FF8731BE1DFC0C0 | Since: 1207
 *
 * @deprecated Use graphics._0x1FF8731BE1DFC0C0() instead
 */
export declare function _0x1FF8731BE1DFC0C0(): void;
/**
 * Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
 * Triggers the binocular scaleform
 *
 * Hash: 0x21F00E08CBB5F37B | Since: 1207
 *
 * @deprecated Use graphics._0x21F00E08CBB5F37B() instead
 */
export declare function _0x21F00E08CBB5F37B(component: string): void;
/**
 * effectName2, p2 and p3 are unused
 *
 * ANIMPOSTFX_*
 *
 * Hash: 0x26DD2FB0A88CC412 | Since: 1207
 *
 * @deprecated Use graphics._0x26DD2FB0A88CC412() instead
 */
export declare function _0x26DD2FB0A88CC412(effectName: string, effectName2: string): void;
/**
 * No comment provided
 *
 * Hash: 0x285438C26C732F9D | Since: 1207
 *
 * @deprecated Use graphics._0x285438C26C732F9D() instead
 */
export declare function _0x285438C26C732F9D(): any;
/**
 * No comment provided
 *
 * Hash: 0x32DE2BFFDA43E62A | Since: 1207
 *
 * @deprecated Use graphics._0x32DE2BFFDA43E62A() instead
 */
export declare function _0x32DE2BFFDA43E62A(): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0x38D9D50F2085E9B3 | Since: 1207
 *
 * @deprecated Use graphics._0x38D9D50F2085E9B3() instead
 */
export declare function _0x38D9D50F2085E9B3(effectNameHash: number | string): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0x3DA7A10583A4BEC0 | Since: 1207
 *
 * @deprecated Use graphics._0x3DA7A10583A4BEC0() instead
 */
export declare function _0x3DA7A10583A4BEC0(): boolean;
/**
 * Only used in R* SP Script spd_agnesdown1
 *
 * Hash: 0x402E1A61D2587FCD | Since: 1207
 *
 * @deprecated Use graphics._0x402E1A61D2587FCD() instead
 */
export declare function _0x402E1A61D2587FCD(pos: Vector3, heading: number): boolean;
/**
 * _DISABLE_*
 *
 * Hash: 0x4046493D2EEACA0E | Since: 1207
 *
 * @deprecated Use graphics._0x4046493D2EEACA0E() instead
 */
export declare function _0x4046493D2EEACA0E(): void;
/**
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 *
 * Hash: 0x41F88A85A579A61D | Since: 1207
 *
 * @deprecated Use graphics._0x41F88A85A579A61D() instead
 */
export declare function _0x41F88A85A579A61D(): void;
/**
 * No comment provided
 *
 * Hash: 0x453D16D41FC51D3E | Since: 1207
 *
 * @deprecated Use graphics._0x453D16D41FC51D3E() instead
 */
export declare function _0x453D16D41FC51D3E(): void;
/**
 * No comment provided
 *
 * Hash: 0x48FE0DB54045B975 | Since: 1311
 *
 * @deprecated Use graphics._0x48FE0DB54045B975() instead
 */
export declare function _0x48FE0DB54045B975(): void;
/**
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 *
 * Hash: 0x4BD66B4E3427689B | Since: 1207
 *
 * @deprecated Use graphics._0x4BD66B4E3427689B() instead
 */
export declare function _0x4BD66B4E3427689B(): void;
/**
 * p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
 * p2: EMIT
 * p3: either 0.0f or 1.0f
 *
 * Hash: 0x4FB67D172C4476F3 | Since: 1207
 *
 * @deprecated Use graphics._0x4FB67D172C4476F3() instead
 */
export declare function _0x4FB67D172C4476F3(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x503941F65DBA24EC | Since: 1207
 *
 * @deprecated Use graphics._0x503941F65DBA24EC() instead
 */
export declare function _0x503941F65DBA24EC(): void;
/**
 * No comment provided
 *
 * Hash: 0x519928DF02EB5101 | Since: 1355
 *
 * @deprecated Use graphics._0x519928DF02EB5101() instead
 */
export declare function _0x519928DF02EB5101(): void;
/**
 * Closes the the binocular scaleform
 *
 * Hash: 0x5AC6E0FA028369DE | Since: 1207
 *
 * @deprecated Use graphics._0x5AC6E0FA028369DE() instead
 */
export declare function _0x5AC6E0FA028369DE(): void;
/**
 * No comment provided
 *
 * Hash: 0x5C674EB487891F6B | Since: 1207
 *
 * @deprecated Use graphics._0x5C674EB487891F6B() instead
 */
export declare function _0x5C674EB487891F6B(): any;
/**
 * Only used in R* SP Script spd_agnesdown1
 *
 * Hash: 0x5C9C3A466B3296A8 | Since: 1207
 *
 * @deprecated Use graphics._0x5C9C3A466B3296A8() instead
 */
export declare function _0x5C9C3A466B3296A8(): any;
/**
 * No comment provided
 *
 * Hash: 0x5CD6A2CCE5087161 | Since: 1311
 *
 * @deprecated Use graphics.setPhotoModeExposureLocked() instead
 */
export declare function setPhotoModeExposureLocked(lock: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x62B9F9A1272AED80 | Since: 1207
 *
 * @deprecated Use graphics.changePhotoModeContrast() instead
 */
export declare function changePhotoModeContrast(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x67B0778C62E74423 | Since: 1207
 *
 * @deprecated Use graphics._0x67B0778C62E74423() instead
 */
export declare function _0x67B0778C62E74423(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C03118E9E5C1A14 | Since: 1207
 *
 * @deprecated Use graphics._0x6C03118E9E5C1A14() instead
 */
export declare function _0x6C03118E9E5C1A14(): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0x71845905BCCDE781 | Since: 1207
 *
 * @deprecated Use graphics._0x71845905BCCDE781() instead
 */
export declare function _0x71845905BCCDE781(effectNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x735762E8D7573E42 | Since: 1207
 *
 * @deprecated Use graphics._0x735762E8D7573E42() instead
 */
export declare function _0x735762E8D7573E42(): void;
/**
 * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
 * _ENABLE_*
 *
 * Hash: 0x812C1563185C6FB2 | Since: 1207
 *
 * @deprecated Use graphics._0x812C1563185C6FB2() instead
 */
export declare function _0x812C1563185C6FB2(): void;
/**
 * No comment provided
 *
 * Hash: 0x815653A42C5ABE76 | Since: 1207
 *
 * @deprecated Use graphics._0x815653A42C5ABE76() instead
 */
export declare function _0x815653A42C5ABE76(): void;
/**
 * No comment provided
 *
 * Hash: 0x8996FA6AD9FE4E90 | Since: 1207
 *
 * @deprecated Use graphics._0x8996FA6AD9FE4E90() instead
 */
export declare function _0x8996FA6AD9FE4E90(): void;
/**
 * No comment provided
 *
 * Hash: 0x910E260AEAD855DE | Since: 1207
 *
 * @deprecated Use graphics._0x910E260AEAD855DE() instead
 */
export declare function _0x910E260AEAD855DE(): void;
/**
 * Resets the exposure to the value when exposure lock was enabled
 *
 * Hash: 0x9229ED770975BD9E | Since: 1311
 *
 * @deprecated Use graphics.updatePhotoModeExposure() instead
 */
export declare function updatePhotoModeExposure(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x94B261F1F35293E1 | Since: 1207
 *
 * @deprecated Use graphics._0x94B261F1F35293E1() instead
 */
export declare function _0x94B261F1F35293E1(): void;
/**
 * No comment provided
 *
 * Hash: 0x981C7D863980FA51 | Since: 1207
 *
 * @deprecated Use graphics._0x981C7D863980FA51() instead
 */
export declare function _0x981C7D863980FA51(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D1B0B5066205692 | Since: 1207
 *
 * @deprecated Use graphics._0x9D1B0B5066205692() instead
 */
export declare function _0x9D1B0B5066205692(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F158A49B0D84C3C | Since: 1207
 *
 * @deprecated Use graphics._0x9F158A49B0D84C3C() instead
 */
export declare function _0x9F158A49B0D84C3C(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F6D859C80708B26 | Since: 1311
 *
 * @deprecated Use graphics._0x9F6D859C80708B26() instead
 */
export declare function _0x9F6D859C80708B26(): void;
/**
 * No comment provided
 *
 * Hash: 0xA04EF43030593ABC | Since: 1207
 *
 * @deprecated Use graphics._0xA04EF43030593ABC() instead
 */
export declare function _0xA04EF43030593ABC(): void;
/**
 * No comment provided
 *
 * Hash: 0xA0F4D12D6042F6D5 | Since: 1207
 *
 * @deprecated Use graphics._0xA0F4D12D6042F6D5() instead
 */
export declare function _0xA0F4D12D6042F6D5(): void;
/**
 * No comment provided
 *
 * Hash: 0xA15CCAB8AD038291 | Since: 1207
 *
 * @deprecated Use graphics._0xA15CCAB8AD038291() instead
 */
export declare function _0xA15CCAB8AD038291(): any;
/**
 * No comment provided
 *
 * Hash: 0xA1A86055792FB249 | Since: 1207
 *
 * @deprecated Use graphics._0xA1A86055792FB249() instead
 */
export declare function _0xA1A86055792FB249(personaPhotoLocalCacheType: number): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0xA201A3D0AC087C37 | Since: 1207
 *
 * @deprecated Use graphics._0xA201A3D0AC087C37() instead
 */
export declare function _0xA201A3D0AC087C37(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xA21AF60C9F99CCC5 | Since: 1207
 *
 * @deprecated Use graphics._0xA21AF60C9F99CCC5() instead
 */
export declare function _0xA21AF60C9F99CCC5(): void;
/**
 * _SET_D* or _SET_E*
 *
 * Hash: 0xB032C085D9A03907 | Since: 1207
 *
 * @deprecated Use graphics._0xB032C085D9A03907() instead
 */
export declare function _0xB032C085D9A03907(): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0xB958D97A0DFAA0C2 | Since: 1207
 *
 * @deprecated Use graphics._0xB958D97A0DFAA0C2() instead
 */
export declare function _0xB958D97A0DFAA0C2(effectName: string): boolean;
/**
 * Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
 *
 * Hash: 0xC06F2F45A73EABCD | Since: 1311
 *
 * @deprecated Use graphics._0xC06F2F45A73EABCD() instead
 */
export declare function _0xC06F2F45A73EABCD(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xC28F62AC9774FC1B | Since: 1207
 *
 * @deprecated Use graphics._0xC28F62AC9774FC1B() instead
 */
export declare function _0xC28F62AC9774FC1B(): any;
/**
 * Doesn't actually return anything.
 *
 * ANIMPOSTFX_*
 *
 * Hash: 0xC37792A3F9C90771 | Since: 1207
 *
 * @deprecated Use graphics._0xC37792A3F9C90771() instead
 */
export declare function _0xC37792A3F9C90771(): any;
/**
 * No comment provided
 *
 * Hash: 0xC489FE31AC726512 | Since: 1207
 *
 * @deprecated Use graphics._0xC489FE31AC726512() instead
 */
export declare function _0xC489FE31AC726512(): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0xC76FC4C2FC5F4405 | Since: 1207
 *
 * @deprecated Use graphics._0xC76FC4C2FC5F4405() instead
 */
export declare function _0xC76FC4C2FC5F4405(effectNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC8D0611D9A0CF5D3 | Since: 1207
 *
 * @deprecated Use graphics.changePhotoModeExposure() instead
 */
export declare function changePhotoModeExposure(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCC3B787E73E64160 | Since: 1207
 *
 * @deprecated Use graphics._0xCC3B787E73E64160() instead
 */
export declare function _0xCC3B787E73E64160(): void;
/**
 * Only used in R* Script nb_stalking_hunter
 *
 * Hash: 0xD1472AFF30C103D6 | Since: 1311
 *
 * @deprecated Use graphics._0xD1472AFF30C103D6() instead
 */
export declare function _0xD1472AFF30C103D6(): void;
/**
 * No comment provided
 *
 * Hash: 0xD543487A1F12828F | Since: 1207
 *
 * @deprecated Use graphics._0xD543487A1F12828F() instead
 */
export declare function _0xD543487A1F12828F(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9BC98B55BCFAA9B | Since: 1207
 *
 * @deprecated Use graphics._0xD9BC98B55BCFAA9B() instead
 */
export declare function _0xD9BC98B55BCFAA9B(): void;
/**
 * Returns iNumPixels, iPixelsVisible
 *
 * Hash: 0xDFE332A5DA6FE7C9 | Since: 1207
 *
 * @deprecated Use graphics._0xDFE332A5DA6FE7C9() instead
 */
export declare function _0xDFE332A5DA6FE7C9(iTrackedPoint: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE63D68F455CA0B47 | Since: 1207
 *
 * @deprecated Use graphics._0xE63D68F455CA0B47() instead
 */
export declare function _0xE63D68F455CA0B47(): any;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0xE75CDDEBF618C8FF | Since: 1207
 *
 * @deprecated Use graphics._0xE75CDDEBF618C8FF() instead
 */
export declare function _0xE75CDDEBF618C8FF(effectNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEB48CE48EEC41FD4 | Since: 1207
 *
 * @deprecated Use graphics._0xEB48CE48EEC41FD4() instead
 */
export declare function _0xEB48CE48EEC41FD4(): void;
/**
 * No comment provided
 *
 * Hash: 0xEC3D8C228FE553D7 | Since: 1207
 *
 * @deprecated Use graphics._0xEC3D8C228FE553D7() instead
 */
export declare function _0xEC3D8C228FE553D7(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC3F7F24EEEB3BA3 | Since: 1207
 *
 * @deprecated Use graphics._0xEC3F7F24EEEB3BA3() instead
 */
export declare function _0xEC3F7F24EEEB3BA3(): void;
/**
 * No comment provided
 *
 * Hash: 0xF2F543D48F319A3A | Since: 1207
 *
 * @deprecated Use graphics._0xF2F543D48F319A3A() instead
 */
export declare function _0xF2F543D48F319A3A(): void;
/**
 * No comment provided
 *
 * Hash: 0xF5793BB386E1FF9C | Since: 1207
 *
 * @deprecated Use graphics._0xF5793BB386E1FF9C() instead
 */
export declare function _0xF5793BB386E1FF9C(): void;
/**
 * _DISABLE_*
 *
 * Hash: 0xFB680A9B33D0EDBE | Since: 1207
 *
 * @deprecated Use graphics._0xFB680A9B33D0EDBE() instead
 */
export declare function _0xFB680A9B33D0EDBE(): void;
/**
 * ANIMPOSTFX_*
 *
 * Hash: 0xFBF161FCFEC8589E | Since: 1207
 *
 * @deprecated Use graphics._0xFBF161FCFEC8589E() instead
 */
export declare function _0xFBF161FCFEC8589E(effectName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC9B53C072F418E0 | Since: 1207
 *
 * @deprecated Use graphics._0xFC9B53C072F418E0() instead
 */
export declare function _0xFC9B53C072F418E0(): any;
/**
 * R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
 *
 * Hash: 0xFD05B1DDE83749FA | Since: 1207
 *
 * @deprecated Use graphics._0xFD05B1DDE83749FA() instead
 */
export declare function _0xFD05B1DDE83749FA(): boolean;
/**
 * Returns whether the 'killFX' setting is enabled.
 *
 * ANIMPOSTFX_*
 *
 * Hash: 0xFF584F097C17FA8F | Since: 1207
 *
 * @deprecated Use graphics._0xFF584F097C17FA8F() instead
 */
export declare function _0xFF584F097C17FA8F(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF8018C778349234 | Since: 1207
 *
 * @deprecated Use graphics._0xFF8018C778349234() instead
 */
export declare function _0xFF8018C778349234(): void;
/**
 * https://i.imgur.com/ULQU9US.jpg
 * More rounded and small puddle
 *
 * Hash: 0xFA2ECC78A6014D4F | Since: 1207
 *
 * @deprecated Use graphics.addBloodPool() instead
 */
export declare function addBloodPool(pos: Vector3, unused: boolean): void;
/**
 * Creates blood pools for the given ped in some interval for a few seconds.
 *
 * Hash: 0xDFCE8CE9F3EBE93F | Since: 1207
 *
 * @deprecated Use graphics.addBloodPoolsForPed() instead
 */
export declare function addBloodPoolsForPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC349EE1E6EFA494B | Since: 1207
 *
 * @deprecated Use graphics.addBloodPoolsForPedWithParams() instead
 */
export declare function addBloodPoolsForPedWithParams(ped: number | Ped, size: number): void;
/**
 * https://i.imgur.com/rPITUCV.jpg
 * More customizable and more like quadrants
 *
 * Hash: 0xF708298675ABDC6A | Since: 1207
 *
 * @deprecated Use graphics.addBloodPool2() instead
 */
export declare function addBloodPool2(pos: Vector3, size: number, permanent: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDD9DC1AB63D513CE | Since: 1207
 *
 * @deprecated Use graphics.addBloodTrailPoint() instead
 */
export declare function addBloodTrailPoint(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xF5E45CB1CF965D2D | Since: 1207
 *
 * @deprecated Use graphics.addBloodTrailSplat() instead
 */
export declare function addBloodTrailSplat(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC6F81FCD15350323 | Since: 1207
 *
 * @deprecated Use graphics.addEntityToEntityMask() instead
 */
export declare function addEntityToEntityMask(entity: number | Entity, mask: number): void;
/**
 * No comment provided
 *
 * Hash: 0x958DEBD9353C0935 | Since: 1207
 *
 * @deprecated Use graphics.addEntityToEntityMaskWithIntensity() instead
 */
export declare function addEntityToEntityMaskWithIntensity(entity: number | Entity, mask: number, intensity: number): void;
/**
 * Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
 * Returns veg modifier handle
 *
 * Hash: 0xBD3324281E8B9933 | Since: 1207
 *
 * @deprecated Use graphics.addVegModifierZone() instead
 */
export declare function addVegModifierZone(volume: number, flags: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC5CB91D65852ED7E | Since: 1207
 *
 * @deprecated Use graphics.animpostfxClearEffect() instead
 */
export declare function animpostfxClearEffect(effectName: string): void;
/**
 * Known effects: MP_Trans_SceneToPhoto
 * MP_Trans_WinLose
 * SpectateFilter
 * MP_CharacterCreatorPhoto
 * MP_Trans_PhotoToScene
 * InterrogationHit
 *
 * Hash: 0x842CCC9491FFCD9B | Since: 1207
 *
 * @deprecated Use graphics.animpostfxGetStackhash() instead
 */
export declare function animpostfxGetStackhash(effectName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xBF2DD155B2ADCD0A | Since: 1207
 *
 * @deprecated Use graphics.animpostfxHasLoaded() instead
 */
export declare function animpostfxHasLoaded(effectName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEEF83A759AE06A27 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxIsStackhashPlaying() instead
 */
export declare function animpostfxIsStackhashPlaying(effectNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2D4F9C852CE8A253 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxIsTagPlaying() instead
 */
export declare function animpostfxIsTagPlaying(effectName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9B8D5D4CB8AF58B3 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxPlayTag() instead
 */
export declare function animpostfxPlayTag(effectNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3A9A281FF71249E9 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxPlayTimed() instead
 */
export declare function animpostfxPlayTimed(effectName: string, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5199405EABFBD7F0 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxPreloadPostfx() instead
 */
export declare function animpostfxPreloadPostfx(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF3E039322BFBD4D8 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxPreloadPostfxByStackhash() instead
 */
export declare function animpostfxPreloadPostfxByStackhash(effectNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x63011D0C7C6519E0 | Since: 1311
 *
 * @deprecated Use graphics.animpostfxSetPostfxColor() instead
 */
export declare function animpostfxSetPostfxColor(effectName: string, red: number, green: number, blue: number, alpha: number): void;
/**
 * Health Core Effect Filter Potency: p1 = 1
 * Stamina Core Effect Filter Potency: p1 = 2
 * Multiple Core Effect Filter Potency: p1 = 3
 *
 * Hash: 0xF972F0AB16DC5260 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxSetPotency() instead
 */
export declare function animpostfxSetPotency(effectName: string, potency: number): void;
/**
 * must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
 *
 * Hash: 0xCAB4DD2D5B2B7246 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxSetStrength() instead
 */
export declare function animpostfxSetStrength(effectName: string, strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0x37D7BDBA89F13959 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxSetToUnload() instead
 */
export declare function animpostfxSetToUnload(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xEDA5CBECF56E1386 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxStopStackhashPostfx() instead
 */
export declare function animpostfxStopStackhashPostfx(effectNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xAD74C22A541AB987 | Since: 1207
 *
 * @deprecated Use graphics.animpostfxStopTag() instead
 */
export declare function animpostfxStopTag(effectName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x50C14328119E1DD1 | Since: 1207
 *
 * @deprecated Use graphics.blockPickupObjectLight() instead
 */
export declare function blockPickupObjectLight(pickupObject: number | Object, toggle: boolean): void;
/**
 * p1: 0.3f in R* Scripts
 *
 * Hash: 0xB9C92616929CC25D | Since: 1207
 *
 * @deprecated Use graphics.bloodTrailForWaypoint() instead
 */
export declare function bloodTrailForWaypoint(waypointRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3D084D5568FB4028 | Since: 1207
 *
 * @deprecated Use graphics.createSwatchTextureDict() instead
 */
export declare function createSwatchTextureDict(slots: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDAD7FB8402651654 | Since: 1207
 *
 * @deprecated Use graphics.destroySwatchTextureDict() instead
 */
export declare function destroySwatchTextureDict(): void;
/**
 * Only used in guama1 R* Script
 * Disables lod/distant lights when BOOL is set to true
 *
 * Hash: 0xCD284E2F6AC27EE9 | Since: 1207
 *
 * @deprecated Use graphics.disableFarArtificialLights() instead
 */
export declare function disableFarArtificialLights(disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDD0BC0EDCB2162F6 | Since: 1207
 *
 * @deprecated Use graphics.disableStaticVegModifier() instead
 */
export declare function disableStaticVegModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x4C11CCACB7C02B6E | Since: 1207
 *
 * @deprecated Use graphics.doesCheckpointHaveFx() instead
 */
export declare function doesCheckpointHaveFx(checkpoint: number): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
 * Old name: _DRAW_MARKER
 *
 * Hash: 0x2A32FAA57B937173 | Since: 1207
 *
 * @deprecated Use graphics.drawMarker() instead
 */
export declare function drawMarker(type: number | string, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDFEA23EC90113657 | Since: 1207
 *
 * @deprecated Use graphics.enableStaticVegModifier() instead
 */
export declare function enableStaticVegModifier(): void;
/**
 * Example:
 * local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
 * _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
 * metapedType: see 0xEC9A1261BF0CE510
 *
 * Hash: 0x160921255327C591 | Since: 1207
 *
 * @deprecated Use graphics.generateSwatchTexture() instead
 */
export declare function generateSwatchTexture(slotId: number, componentHash: number | string, metapedType: number): void;
/**
 * Example: https://pastebin.com/tTgpER9A
 *
 * Hash: 0x646ED1A1D28487DF | Since: 1207
 *
 * @deprecated Use graphics.generateSwatchTextureDirectly() instead
 */
export declare function generateSwatchTextureDirectly(slot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x78C56B8A7B1D000C | Since: 1207
 *
 * @deprecated Use graphics.getCurrentNumberOfLocalPhotos() instead
 */
export declare function getCurrentNumberOfLocalPhotos(): number;
/**
 * No comment provided
 *
 * Hash: 0xE8A8378BF651079C | Since: 1207
 *
 * @deprecated Use graphics.getEntityMaskLayers() instead
 */
export declare function getEntityMaskLayers(entity: number | Entity, layer0: number, layer1: number, layer2: number, layer3: number): boolean;
/**
 * Always returns 200.
 *
 * Hash: 0x8E587FCD30E05592 | Since: 1207
 *
 * @deprecated Use graphics.getMaxNumberOfLocalPhotos() instead
 */
export declare function getMaxNumberOfLocalPhotos(): number;
/**
 * _GET_C* - _GET_E*
 *
 * Hash: 0x25CA89B2A39DCC69 | Since: 1207
 *
 * @deprecated Use graphics.getModifiedVisibilityDistance() instead
 */
export declare function getModifiedVisibilityDistance(): number;
/**
 * No comment provided
 *
 * Hash: 0x98F4154989B81EC6 | Since: 1207
 *
 * @deprecated Use graphics.getPhotoModeContrast() instead
 */
export declare function getPhotoModeContrast(): number;
/**
 * No comment provided
 *
 * Hash: 0x06C0D8BB6B04A709 | Since: 1207
 *
 * @deprecated Use graphics.getPhotoModeExposure() instead
 */
export declare function getPhotoModeExposure(): number;
/**
 * Returns proxyInteriorIndex
 *
 * Hash: 0x5D1C5D8E62E8EE1C | Since: 1207
 *
 * @deprecated Use graphics.getProxyInteriorIndex() instead
 */
export declare function getProxyInteriorIndex(interiorId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x113857D66A9CABE6 | Since: 1207
 *
 * @deprecated Use graphics.isProxyInteriorIndexArtificialLightsEnabled() instead
 */
export declare function isProxyInteriorIndexArtificialLightsEnabled(proxyInteriorIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE9BAD3292AA6D5E | Since: 1207
 *
 * @deprecated Use graphics.isStaticVegModifierEnabled() instead
 */
export declare function isStaticVegModifierEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA2A51869BDED733B | Since: 1207
 *
 * @deprecated Use graphics.isTextureInDict() instead
 */
export declare function isTextureInDict(txdHash: number | string, dict: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF2FDDCC8C6BAE1B3 | Since: 1207
 *
 * @deprecated Use graphics.isTrackedPointValid() instead
 */
export declare function isTrackedPointValid(point: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC2B8164C3BE871A4 | Since: 1207
 *
 * @deprecated Use graphics.pedshotFinishCleanupData() instead
 */
export declare function pedshotFinishCleanupData(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9C24F53631F2372 | Since: 1207
 *
 * @deprecated Use graphics.pedshotGeneratePersonaPhoto() instead
 */
export declare function pedshotGeneratePersonaPhoto(texture: string, ped: number | Ped, playerSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x55285F885F662169 | Since: 1207
 *
 * @deprecated Use graphics.pedshotInitCleanupData() instead
 */
export declare function pedshotInitCleanupData(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E2FDDBE435A8787 | Since: 1207
 *
 * @deprecated Use graphics.pedshotPreviousPersonaPhotoDataCleanup() instead
 */
export declare function pedshotPreviousPersonaPhotoDataCleanup(): void;
/**
 * No comment provided
 *
 * Hash: 0x196D3ACBEBA4A44B | Since: 1207
 *
 * @deprecated Use graphics.pedshotSetPersonaPhotoType() instead
 */
export declare function pedshotSetPersonaPhotoType(personaPhotoLocalCacheType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56A786E87FF53478 | Since: 1207
 *
 * @deprecated Use graphics.removeEntityFromEntityMask() instead
 */
export declare function removeEntityFromEntityMask(entity: number | Entity): void;
/**
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
 *
 * Hash: 0xAF4D239B8903FCBE | Since: 1207
 *
 * @deprecated Use graphics.resetEntityAura() instead
 */
export declare function resetEntityAura(): void;
/**
 * No comment provided
 *
 * Hash: 0xC332C91388F5580B | Since: 1207
 *
 * @deprecated Use graphics.setCloudHeight() instead
 */
export declare function setCloudHeight(height: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB8C984C0D47F4F07 | Since: 1207
 *
 * @deprecated Use graphics.setCloudLayer() instead
 */
export declare function setCloudLayer(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFE7966DF01452F32 | Since: 1207
 *
 * @deprecated Use graphics.setCloudNoise() instead
 */
export declare function setCloudNoise(pos: Vector3): void;
/**
 * Only used in finale2, smuggler2, winter4
 * _SET_CLOUD_A* - _SET_CLOUD_H*
 *
 * Hash: 0x10C1767B93257480 | Since: 1207
 *
 * @deprecated Use graphics.setCloudPosition() instead
 */
export declare function setCloudPosition(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x9937FACBBF267244 | Since: 1207
 *
 * @deprecated Use graphics.setDistrictPhotoTakenStat() instead
 */
export declare function setDistrictPhotoTakenStat(): void;
/**
 * Used for script function RPG_GLOBAL_STATS__PRIVATE__ACTIVATE_STAT_FLAG - Quite and Inspiration Aura equip
 * Params: 0f, 2f, 2f
 *
 * Hash: 0x249CD6B7285536F2 | Since: 1207
 *
 * @deprecated Use graphics.setEntityAura() instead
 */
export declare function setEntityAura(): void;
/**
 * No comment provided
 *
 * Hash: 0xE92012611461A42A | Since: 1207
 *
 * @deprecated Use graphics.setEntityMaskLayers() instead
 */
export declare function setEntityMaskLayers(entity: number | Entity, layer0: number, layer1: number, layer2: number, layer3: number): void;
/**
 * Only used in guama1 R* SP Script while spawning the ship
 * _SET_ENTITY_QUATERNION_* - SET_ENTITY_RENDER_*
 *
 * Hash: 0xC38B4952B728397A | Since: 1207
 *
 * @deprecated Use graphics.setEntityRenderGuarmaShip() instead
 */
export declare function setEntityRenderGuarmaShip(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * https://gfycat.com/meagerfaireyra
 *
 * Hash: 0x6EC2A67962296F49 | Since: 1207
 *
 * @deprecated Use graphics.setLightsColorForEntity() instead
 */
export declare function setLightsColorForEntity(entity: number | Entity, red: number, green: number, blue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x07C0F87AAC57F2E4 | Since: 1207
 *
 * @deprecated Use graphics.setLightsIntensityForEntity() instead
 */
export declare function setLightsIntensityForEntity(entity: number | Entity, intensity: number): void;
/**
 * type must be less than or equal to 20
 *
 * Hash: 0xAB72C67163DC4DB4 | Since: 1207
 *
 * @deprecated Use graphics.setLightsTypeForEntity() instead
 */
export declare function setLightsTypeForEntity(entity: number | Entity, type: number): void;
/**
 * _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
 *
 * Hash: 0x9DDC222D85D5AF2A | Since: 1207
 *
 * @deprecated Use graphics.setParticleFxLoopedUpdateDistantSmoke() instead
 */
export declare function setParticleFxLoopedUpdateDistantSmoke(ptfxHandle: number, scalar: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56C392C2BD78B024 | Since: 1311
 *
 * @deprecated Use graphics.setParticleFxNonLoopedEmitterScale() instead
 */
export declare function setParticleFxNonLoopedEmitterScale(): void;
/**
 * Enables/disables a kind of 'shiny' effect on metals.
 *
 * Hash: 0x72E30372E7CC4415 | Since: 1207
 *
 * @deprecated Use graphics.setPearlescentFxEnabled() instead
 */
export declare function setPearlescentFxEnabled(object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFA91736933AB3D93 | Since: 1207
 *
 * @deprecated Use graphics.setPhotoInPhotomodeStat() instead
 */
export declare function setPhotoInPhotomodeStat(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B3296278328B5EB | Since: 1207
 *
 * @deprecated Use graphics.setPhotoOverlayEffectStat() instead
 */
export declare function setPhotoOverlayEffectStat(): void;
/**
 * No comment provided
 *
 * Hash: 0x2705D18C11B61046 | Since: 1207
 *
 * @deprecated Use graphics.setPhotoSelfStat() instead
 */
export declare function setPhotoSelfStat(): void;
/**
 * No comment provided
 *
 * Hash: 0x8E6AFF353C09652E | Since: 1207
 *
 * @deprecated Use graphics.setPhotoStudioStat() instead
 */
export declare function setPhotoStudioStat(): void;
/**
 * No comment provided
 *
 * Hash: 0x75D568607909333E | Since: 1232
 *
 * @deprecated Use graphics.setPlayerAppearInPhoto() instead
 */
export declare function setPlayerAppearInPhoto(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x564837D4A9EDE296 | Since: 1207
 *
 * @deprecated Use graphics.setPosseIdForPhoto() instead
 */
export declare function setPosseIdForPhoto(posseId: any): void;
/**
 * state: false disables artificial interior light sources for specific proxyInteriorIndex
 *
 * Hash: 0xBFCB17895BB99E4E | Since: 1207
 *
 * @deprecated Use graphics.setProxyInteriorIndexArtificialLightsState() instead
 */
export declare function setProxyInteriorIndexArtificialLightsState(proxyInteriorIndex: number, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1031B83AC093BC7 | Since: 1207
 *
 * @deprecated Use graphics.setRegionPhotoTakenStat() instead
 */
export declare function setRegionPhotoTakenStat(): void;
/**
 * No comment provided
 *
 * Hash: 0x6E8EB45A4F4460EB | Since: 1207
 *
 * @deprecated Use graphics.setSniperGlintsEnabled() instead
 */
export declare function setSniperGlintsEnabled(enabled: boolean): void;
/**
 * enum class eSnowCoverageType
 * {
 * Primary,
 * Secondary,
 * Xmas,
 * XmasSecondary // since b1232
 * };
 *
 * Hash: 0xF02A9C330BBFC5C7 | Since: 1207
 *
 * @deprecated Use graphics.setSnowCoverageType() instead
 */
export declare function setSnowCoverageType(type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8952E857696B8A79 | Since: 1207
 *
 * @deprecated Use graphics.setStatePhotoTakenStat() instead
 */
export declare function setStatePhotoTakenStat(): void;
/**
 * No comment provided
 *
 * Hash: 0xC695870B8A149B96 | Since: 1207
 *
 * @deprecated Use graphics.startParticleFxNonLoopedOnPedBone2() instead
 */
export declare function startParticleFxNonLoopedOnPedBone2(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
 *
 * Hash: 0x30996422DF1EE561 | Since: 1207
 *
 * @deprecated Use hud.allowPauseWhenNotInStateOfPlayThisFrame() instead
 */
export declare function allowPauseWhenNotInStateOfPlayThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x823BF7B1DF613A21 | Since: 1207
 *
 * @deprecated Use hud.busyspinnerIsOn() instead
 */
export declare function busyspinnerIsOn(): boolean;
/**
 * Removes the loading prompt at the bottom right of the screen.
 *
 * Hash: 0x58F441B90EA84D06 | Since: 1207
 *
 * @deprecated Use hud.busyspinnerOff() instead
 */
export declare function busyspinnerOff(): void;
/**
 * No comment provided
 *
 * Hash: 0x916ED8321F087059 | Since: 1207
 *
 * @deprecated Use hud.clearAllHelpMessages() instead
 */
export declare function clearAllHelpMessages(): void;
/**
 * No comment provided
 *
 * Hash: 0x53CB4B502E1C57EA | Since: 1207
 *
 * @deprecated Use hud.createFakeMpGamerTag() instead
 */
export declare function createFakeMpGamerTag(ped: number | Ped, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
/**
 * No comment provided
 *
 * Hash: 0x56CE42A528156A67 | Since: 1207
 *
 * @deprecated Use hud.disableFrontendThisFrame() instead
 */
export declare function disableFrontendThisFrame(): void;
/**
 * If Hud should be displayed
 *
 * Hash: 0xD63FE3AF9FB3D53F | Since: 1207
 *
 * @deprecated Use hud.displayHud() instead
 */
export declare function displayHud(toggle: boolean): void;
/**
 * Checks if the passed gxt name exists in the game files.
 *
 * Hash: 0x73C258C68D6F55B6 | Since: 1207
 *
 * @deprecated Use hud.doesTextLabelExist() instead
 */
export declare function doesTextLabelExist(label: string): boolean;
/**
 * Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
 * Old name: _GET_TEXT_SUBSTRING
 *
 * Hash: 0x9D7E12EC6A1EE4E5 | Since: 1207
 *
 * @deprecated Use hud.getCharacterFromAudioConversationFilename() instead
 */
export declare function getCharacterFromAudioConversationFilename(text: string, position: number, length: number): string;
/**
 * Gets a string literal from a label name.
 *
 * Old name: _GET_LABEL_TEXT
 *
 * Hash: 0xCFEDCCAD3C5BA90D | Since: 1207
 *
 * @deprecated Use hud.getFilenameForAudioConversation() instead
 */
export declare function getFilenameForAudioConversation(labelName: string): string;
/**
 * No comment provided
 *
 * Hash: 0xB39C81628EF10B42 | Since: 1207
 *
 * @deprecated Use hud.getHudScreenPositionFromWorldPosition() instead
 */
export declare function getHudScreenPositionFromWorldPosition(worldX: number, worldY: number, worldZ: number, screenX: number, screenY: number): number;
/**
 * Returns the length of the string passed (much like strlen).
 *
 * Hash: 0x481FBF588B0B76DB | Since: 1207
 *
 * @deprecated Use hud.getLengthOfLiteralString() instead
 */
export declare function getLengthOfLiteralString(string: string): number;
/**
 * No comment provided
 *
 * Hash: 0xDC5AD6B7AB8184F5 | Since: 1207
 *
 * @deprecated Use hud.getLengthOfLiteralStringInBytes() instead
 */
export declare function getLengthOfLiteralStringInBytes(string: string): number;
/**
 * No comment provided
 *
 * Hash: 0xB6762A85EE29AA60 | Since: 1207
 *
 * @deprecated Use hud.getNamedRendertargetRenderId() instead
 */
export declare function getNamedRendertargetRenderId(name: string): number;
/**
 * Returns the label text given the hash.
 *
 * Old name: _GET_LABEL_TEXT_BY_HASH
 *
 * Hash: 0xBD5DD5EAE2B6CE14 | Since: 1207
 *
 * @deprecated Use hud.getStringFromHashKey() instead
 */
export declare function getStringFromHashKey(labelHash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x36CDD81627A6FCD2 | Since: 1207
 *
 * @deprecated Use hud.hideHudAndRadarThisFrame() instead
 */
export declare function hideHudAndRadarThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xEA600AABAF4B9084 | Since: 1207
 *
 * @deprecated Use hud.hideLoadingOnFadeThisFrame() instead
 */
export declare function hideLoadingOnFadeThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x71B72B478F8189DC | Since: 1207
 *
 * @deprecated Use hud.isHudHidden() instead
 */
export declare function isHudHidden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E1C31E14C7A5F97 | Since: 1207
 *
 * @deprecated Use hud.isMpGamerTagActive() instead
 */
export declare function isMpGamerTagActive(gamerTagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x707032835FF09AE7 | Since: 1207
 *
 * @deprecated Use hud.isNamedRendertargetLinked() instead
 */
export declare function isNamedRendertargetLinked(modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3EE32F7964C40FE6 | Since: 1207
 *
 * @deprecated Use hud.isNamedRendertargetRegistered() instead
 */
export declare function isNamedRendertargetRegistered(name: string): boolean;
/**
 * Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
 *
 * Hash: 0x535384D6067BA42E | Since: 1207
 *
 * @deprecated Use hud.isPauseMenuActive() instead
 */
export declare function isPauseMenuActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1B82FD5FFA4D666E | Since: 1207
 *
 * @deprecated Use hud.isRadarHidden() instead
 */
export declare function isRadarHidden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x66F35DD9D2B58579 | Since: 1207
 *
 * @deprecated Use hud.isRadarHiddenByScript() instead
 */
export declare function isRadarHiddenByScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x81E47F0EE1F2B21E | Since: 1207
 *
 * @deprecated Use hud.isRadarPreferenceSwitchedOn() instead
 */
export declare function isRadarPreferenceSwitchedOn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7C4AC9573587F2DF | Since: 1355
 *
 * @deprecated Use hud.isSubtitlePreferenceSwitchedOn() instead
 */
export declare function isSubtitlePreferenceSwitchedOn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F506B8556242DDB | Since: 1207
 *
 * @deprecated Use hud.linkNamedRendertarget() instead
 */
export declare function linkNamedRendertarget(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x98AF2BB6F62BD588 | Since: 1207
 *
 * @deprecated Use hud.registerNamedRendertarget() instead
 */
export declare function registerNamedRendertarget(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E692EE61761361F | Since: 1207
 *
 * @deprecated Use hud.releaseNamedRendertarget() instead
 */
export declare function releaseNamedRendertarget(name: string): boolean;
/**
 * only works by invoking and passing as pointer value Citizen.InvokeNative(0x839BFD7D7E49FE09, Citizen.PointerValueIntInitialized(gamerTagId))
 *
 * Hash: 0x839BFD7D7E49FE09 | Since: 1207
 *
 * @deprecated Use hud.removeMpGamerTag() instead
 */
export declare function removeMpGamerTag(gamerTagId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCE47C21C0687EBC2 | Since: 1207
 *
 * @deprecated Use hud.setFrontendActive() instead
 */
export declare function setFrontendActive(active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x402669A4BDAA72DA | Since: 1207
 *
 * @deprecated Use hud.setMissionName() instead
 */
export declare function setMissionName(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD98630CE73C61E98 | Since: 1207
 *
 * @deprecated Use hud.setMissionNameForUgcMission() instead
 */
export declare function setMissionNameForUgcMission(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xA0D7CE5F83259663 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagBigText() instead
 */
export declare function setMpGamerTagBigText(gamerTagId: number, string: string): void;
/**
 * No comment provided
 *
 * Hash: 0xEA6F4B8D4B4B5B3E | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagName() instead
 */
export declare function setMpGamerTagName(gamerTagId: number, string: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE550CDE128D56757 | Since: 1207
 *
 * @deprecated Use hud.setTextRenderId() instead
 */
export declare function setTextRenderId(renderId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD0976CC34002DB57 | Since: 1207
 *
 * @deprecated Use hud.textBlockIsLoaded() instead
 */
export declare function textBlockIsLoaded(textBlock: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF66090013DE648D5 | Since: 1207
 *
 * @deprecated Use hud.textBlockRequest() instead
 */
export declare function textBlockRequest(textBlock: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBE1067CD1C9570F6 | Since: 1207
 *
 * @deprecated Use hud.uiGetSceneUiobject() instead
 */
export declare function uiGetSceneUiobject(): any;
/**
 * No comment provided
 *
 * Hash: 0x51DE09A2196BD951 | Since: 1207
 *
 * @deprecated Use hud.uiMovieviewSetRenderTarget() instead
 */
export declare function uiMovieviewSetRenderTarget(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BE19185B8AFE299 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsControlActionActive() instead
 */
export declare function uiPromptIsControlActionActive(controlAction: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB6857100F8FD433C | Since: 1207
 *
 * @deprecated Use hud.uiRequestScene() instead
 */
export declare function uiRequestScene(): any;
/**
 * This native accepts 1 as parameter in the decompiles
 * returns the nearest horse handle if within 2 3 meters of the player, if not close enough returns false
 *
 * NOTE: if type is 0 returns PlayerPedId always?
 *
 * Hash: 0x0501D52D24EA8934 | Since: 1207
 *
 * @deprecated Use hud.getNearHorse() instead
 */
export declare function getNearHorse(): number;
/**
 * No comment provided
 *
 * Hash: 0x052D4AC0922AF91A | Since: 1207
 *
 * @deprecated Use hud._0x052D4AC0922AF91A() instead
 */
export declare function _0x052D4AC0922AF91A(): void;
/**
 * No comment provided
 *
 * Hash: 0x066725A9D52B3641 | Since: 1232
 *
 * @deprecated Use hud._0x066725A9D52B3641() instead
 */
export declare function _0x066725A9D52B3641(): any;
/**
 * No comment provided
 *
 * Hash: 0x100157D6D7FE32CA | Since: 1207
 *
 * @deprecated Use hud._0x100157D6D7FE32CA() instead
 */
export declare function _0x100157D6D7FE32CA(): any;
/**
 * No comment provided
 *
 * Hash: 0x160825DADF1B04B3 | Since: 1207
 *
 * @deprecated Use hud._0x160825DADF1B04B3() instead
 */
export declare function _0x160825DADF1B04B3(): void;
/**
 * No comment provided
 *
 * Hash: 0x28AE29D909C8FDCE | Since: 1207
 *
 * @deprecated Use hud._0x28AE29D909C8FDCE() instead
 */
export declare function _0x28AE29D909C8FDCE(): any;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x2F7BB105144ACF30 | Since: 1207
 *
 * @deprecated Use hud._0x2F7BB105144ACF30() instead
 */
export declare function _0x2F7BB105144ACF30(): void;
/**
 * No comment provided
 *
 * Hash: 0x3FE4FB41EF7D2196 | Since: 1207
 *
 * @deprecated Use hud._0x3FE4FB41EF7D2196() instead
 */
export declare function _0x3FE4FB41EF7D2196(): void;
/**
 * No comment provided
 *
 * Hash: 0x53CE46C01A089DA1 | Since: 1207
 *
 * @deprecated Use hud._0x53CE46C01A089DA1() instead
 */
export declare function _0x53CE46C01A089DA1(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x5651516D947ABC53 | Since: 1207
 *
 * @deprecated Use hud._0x5651516D947ABC53() instead
 */
export declare function _0x5651516D947ABC53(): void;
/**
 * No comment provided
 *
 * Hash: 0x7EC0D68233E391AC | Since: 1207
 *
 * @deprecated Use hud._0x7EC0D68233E391AC() instead
 */
export declare function _0x7EC0D68233E391AC(): number;
/**
 * No comment provided
 *
 * Hash: 0x806862E5D266CF38 | Since: 1207
 *
 * @deprecated Use hud._0x806862E5D266CF38() instead
 */
export declare function _0x806862E5D266CF38(): any;
/**
 * No comment provided
 *
 * Hash: 0x8A59D44189AF2BC5 | Since: 1207
 *
 * @deprecated Use hud._0x8A59D44189AF2BC5() instead
 */
export declare function _0x8A59D44189AF2BC5(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B55B324A9123F6B | Since: 1232
 *
 * @deprecated Use hud._0x8B55B324A9123F6B() instead
 */
export declare function _0x8B55B324A9123F6B(groupId: number, volume: number): any;
/**
 * No comment provided
 *
 * Hash: 0x958278B97C4AFFD8 | Since: 1232
 *
 * @deprecated Use hud._0x958278B97C4AFFD8() instead
 */
export declare function _0x958278B97C4AFFD8(): void;
/**
 * Returns the hash of the currently highlighted item in the weapon wheel.
 * Only works while the wheel is open will return false
 *
 * Use in conjunction with IS_CONTROL_JUST_RELEASED(0, 'INPUT_OPEN_WHEEL_MENU') to detect item selection/usage.
 *
 * Hash: 0x9C409BBC492CB5B1 | Since: 1207
 *
 * @deprecated Use hud.hudWeaponWheelGetSelectedItemHash() instead
 */
export declare function hudWeaponWheelGetSelectedItemHash(): any;
/**
 * No comment provided
 *
 * Hash: 0x9D37EB5003E0F2CF | Since: 1207
 *
 * @deprecated Use hud._0x9D37EB5003E0F2CF() instead
 */
export declare function _0x9D37EB5003E0F2CF(): void;
/**
 * No comment provided
 *
 * Hash: 0xB0E8599243B3F568 | Since: 1207
 *
 * @deprecated Use hud._0xB0E8599243B3F568() instead
 */
export declare function _0xB0E8599243B3F568(): any;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xBFFF81E12A745A5F | Since: 1207
 *
 * @deprecated Use hud._0xBFFF81E12A745A5F() instead
 */
export declare function _0xBFFF81E12A745A5F(): void;
/**
 * string1 is the only string used in the scripts, the others are null (0)
 *
 * Hash: 0xCE0D2F5586627CCE | Since: 1207
 *
 * @deprecated Use hud.setCurrentUgcMissionDescription() instead
 */
export declare function setCurrentUgcMissionDescription(active: boolean, string1: string, string2: string, string3: string, string4: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD6BD313CFA41E57A | Since: 1207
 *
 * @deprecated Use hud._0xD6BD313CFA41E57A() instead
 */
export declare function _0xD6BD313CFA41E57A(): any;
/**
 * No comment provided
 *
 * Hash: 0xF1E6979C0B779985 | Since: 1207
 *
 * @deprecated Use hud._0xF1E6979C0B779985() instead
 */
export declare function _0xF1E6979C0B779985(uiscene: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7F78CD75CC4539E4 | Since: 1207
 *
 * @deprecated Use hud.busyspinnerSetText() instead
 */
export declare function busyspinnerSetText(text: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD877AF112AD2B41B | Since: 1207
 *
 * @deprecated Use hud.createMpGamerTag() instead
 */
export declare function createMpGamerTag(player: number | string | Player, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE961BF23EAB76B12 | Since: 1207
 *
 * @deprecated Use hud.createMpGamerTagOnEntity() instead
 */
export declare function createMpGamerTagOnEntity(entity: number | Entity, text: string): number;
/**
 * Old name: _DISPLAY_HUD_COMPONENT
 *
 * Hash: 0x8BC7C1F929D07BF3 | Since: 1207
 *
 * @deprecated Use hud.disableHudContext() instead
 */
export declare function disableHudContext(component: number | string): void;
/**
 * Disables reduced time scale while menus such as weapon wheel and satchel are open.
 *
 * Hash: 0xC5C7A2F6567FCCBC | Since: 1207
 *
 * @deprecated Use hud.disableReducedMenuTimeScale() instead
 */
export declare function disableReducedMenuTimeScale(): void;
/**
 * nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
 *
 * Hash: 0xD79334A4BB99BAD1 | Since: 1207
 *
 * @deprecated Use hud.displayText() instead
 */
export declare function displayText(text: string, xPos: number, yPos: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2C729F2B94CEA911 | Since: 1207
 *
 * @deprecated Use hud.doesTextBlockExist() instead
 */
export declare function doesTextBlockExist(textDatabase: string): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
 * Old name: _HIDE_HUD_COMPONENT
 *
 * Hash: 0x4CC5F2FC1332577F | Since: 1207
 *
 * @deprecated Use hud.enableHudContext() instead
 */
export declare function enableHudContext(component: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC9CAEAEEC1256E54 | Since: 1207
 *
 * @deprecated Use hud.enableHudContextThisFrame() instead
 */
export declare function enableHudContextThisFrame(component: number | string): void;
/**
 * Enables reduced time scale while menus such as weapon wheel and satchel are open.
 *
 * Hash: 0x26F6BBEA2CE3E3DC | Since: 1207
 *
 * @deprecated Use hud.enableReducedMenuTimeScale() instead
 */
export declare function enableReducedMenuTimeScale(): void;
/**
 * colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
 *
 * Hash: 0xB981DD2DFAF9B1C9 | Since: 1207
 *
 * @deprecated Use hud.getColorFromName() instead
 */
export declare function getColorFromName(colorNameHash: number | string, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3429670F9B9EF2D3 | Since: 1207
 *
 * @deprecated Use hud.getLabelText2() instead
 */
export declare function getLabelText2(label: string): string;
/**
 * Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
 *
 * Hash: 0xD8402B858F4DDD88 | Since: 1207
 *
 * @deprecated Use hud.getTextSubstring2() instead
 */
export declare function getTextSubstring2(text: string, length: number): string;
/**
 * No comment provided
 *
 * Hash: 0xBF4F34A85CA2970D | Since: 1207
 *
 * @deprecated Use hud.hideHudThisFrame() instead
 */
export declare function hideHudThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x502E1591A504F843 | Since: 1207
 *
 * @deprecated Use hud.isMpGamerTagActiveOnEntity() instead
 */
export declare function isMpGamerTagActiveOnEntity(gamerTagId: number, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF782691D91F270E | Since: 1207
 *
 * @deprecated Use hud.journalCanWriteEntry() instead
 */
export declare function journalCanWriteEntry(): any;
/**
 * No comment provided
 *
 * Hash: 0xF402978DE6F88D6E | Since: 1207
 *
 * @deprecated Use hud.journalClearAllProgress() instead
 */
export declare function journalClearAllProgress(): void;
/**
 * No comment provided
 *
 * Hash: 0x3D16ABD7A1FD8C96 | Since: 1207
 *
 * @deprecated Use hud.journalGetEntryAtIndex() instead
 */
export declare function journalGetEntryAtIndex(): any;
/**
 * No comment provided
 *
 * Hash: 0xE65B5DE53351BE22 | Since: 1207
 *
 * @deprecated Use hud.journalGetEntryCount() instead
 */
export declare function journalGetEntryCount(): any;
/**
 * No comment provided
 *
 * Hash: 0x5514C3E60673530F | Since: 1207
 *
 * @deprecated Use hud.journalGetEntryInfo() instead
 */
export declare function journalGetEntryInfo(): any;
/**
 * No comment provided
 *
 * Hash: 0xCB5945E1B855852F | Since: 1207
 *
 * @deprecated Use hud.journalGetGrimeAtIndex() instead
 */
export declare function journalGetGrimeAtIndex(): any;
/**
 * No comment provided
 *
 * Hash: 0x62CC549B3B8EA2AA | Since: 1207
 *
 * @deprecated Use hud.journalGetTextureWithLayout() instead
 */
export declare function journalGetTextureWithLayout(): any;
/**
 * No comment provided
 *
 * Hash: 0xE4509BABE59BD24E | Since: 1207
 *
 * @deprecated Use hud.journalMarkRead() instead
 */
export declare function journalMarkRead(): void;
/**
 * No comment provided
 *
 * Hash: 0x6DFDD665E416B093 | Since: 1207
 *
 * @deprecated Use hud.journalWriteEntry() instead
 */
export declare function journalWriteEntry(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F9A64C2804B3471 | Since: 1207
 *
 * @deprecated Use hud.mpGamerTagDisableReviveTopIcon() instead
 */
export declare function mpGamerTagDisableReviveTopIcon(gamerTagId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFFF6579CF0139FCE | Since: 1207
 *
 * @deprecated Use hud.mpGamerTagEnableReviveTopIcon() instead
 */
export declare function mpGamerTagEnableReviveTopIcon(gamerTagId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84BD27DDF9575816 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagColour() instead
 */
export declare function setMpGamerTagColour(gamerTagId: number, colour: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x1EA716E0628A6F44 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagNamePosse() instead
 */
export declare function setMpGamerTagNamePosse(gamerTagId: number, text: string): void;
/**
 * Found icons: SPEAKER, THROPY
 *
 * Hash: 0x95384C6CE1526EFF | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagSecondaryIcon() instead
 */
export declare function setMpGamerTagSecondaryIcon(gamerTagId: number, icon: number | string): void;
/**
 * Found icons: https://pastebin.com/xx6rEgiG
 *
 * Hash: 0x5F57522BC1EB9D9D | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagTopIcon() instead
 */
export declare function setMpGamerTagTopIcon(gamerTagId: number, icon: number | string): void;
/**
 * Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
 *
 * Hash: 0x25B9C78A25105C35 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagType() instead
 */
export declare function setMpGamerTagType(gamerTagId: number, type: number | string): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xEF7AB1A0E8C86170 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagUnkAllowLocalized() instead
 */
export declare function setMpGamerTagUnkAllowLocalized(gamerTagId: number, allow: boolean): void;
/**
 * visibility:
 * enum eUIGamertagVisibility
 * {
 * UIGAMERTAGVISIBILITY_NONE,
 * UIGAMERTAGVISIBILITY_ICON,
 * UIGAMERTAGVISIBILITY_SIMPLE,
 * UIGAMERTAGVISIBILITY_COMPLEX
 * };
 *
 * Hash: 0x93171DDDAB274EB8 | Since: 1207
 *
 * @deprecated Use hud.setMpGamerTagVisibility() instead
 */
export declare function setMpGamerTagVisibility(gamerTagId: number, visibility: number): void;
/**
 * This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
 *
 * Hash: 0x50A41AD966910F03 | Since: 1207
 *
 * @deprecated Use hud.setTextColor() instead
 */
export declare function setTextColor(r: number, g: number, b: number, a: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD4EE21B7CC7FD350 | Since: 1207
 *
 * @deprecated Use hud.showHorseCores() instead
 */
export declare function showHorseCores(state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x50C803A4CD5932C5 | Since: 1207
 *
 * @deprecated Use hud.showPlayerCores() instead
 */
export declare function showPlayerCores(state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAA03F130A637D923 | Since: 1207
 *
 * @deprecated Use hud.textBlockDelete() instead
 */
export declare function textBlockDelete(textBlock: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3CF96E16265B7DC8 | Since: 1207
 *
 * @deprecated Use hud.textBlockIsStreamed() instead
 */
export declare function textBlockIsStreamed(textBlock: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x684C96CC7C66E8EF | Since: 1207
 *
 * @deprecated Use hud.uiPromptAddGroupLink() instead
 */
export declare function uiPromptAddGroupLink(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x837972ED28159536 | Since: 1207
 *
 * @deprecated Use hud.uiPromptAddGroupReturnLink() instead
 */
export declare function uiPromptAddGroupReturnLink(prompt: any): void;
/**
 * id is the return value from 0xD9459157EB22C895.
 *
 * Hash: 0x6095358C4142932A | Since: 1207
 *
 * @deprecated Use hud.uiPromptClearHorizontalOrientation() instead
 */
export declare function uiPromptClearHorizontalOrientation(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x51259AE5C72D4A1B | Since: 1207
 *
 * @deprecated Use hud.uiPromptClearPromptPriorityPreference() instead
 */
export declare function uiPromptClearPromptPriorityPreference(): void;
/**
 * No comment provided
 *
 * Hash: 0xAE84C5EE2C384FB3 | Since: 1207
 *
 * @deprecated Use hud.uiPromptContextSetPoint() instead
 */
export declare function uiPromptContextSetPoint(prompt: any, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x0C718001B77CA468 | Since: 1207
 *
 * @deprecated Use hud.uiPromptContextSetRadius() instead
 */
export declare function uiPromptContextSetRadius(prompt: any, radius: number): void;
/**
 * Attaches a Volume
 *
 * Hash: 0x4D107406667423BE | Since: 1207
 *
 * @deprecated Use hud.uiPromptContextSetVolume() instead
 */
export declare function uiPromptContextSetVolume(prompt: any, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x29FA7910726C3889 | Since: 1207
 *
 * @deprecated Use hud.uiPromptCreate() instead
 */
export declare function uiPromptCreate(inputHash: number | string, labelName: string): any;
/**
 * No comment provided
 *
 * Hash: 0x00EDE88D4D13CF59 | Since: 1207
 *
 * @deprecated Use hud.uiPromptDelete() instead
 */
export declare function uiPromptDelete(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0xF1622CE88A1946FB | Since: 1207
 *
 * @deprecated Use hud.uiPromptDisablePromptsThisFrame() instead
 */
export declare function uiPromptDisablePromptsThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xFC094EF26DD153FA | Since: 1207
 *
 * @deprecated Use hud.uiPromptDisablePromptTypeThisFrame() instead
 */
export declare function uiPromptDisablePromptTypeThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xEB550B927B34A1BB | Since: 1207
 *
 * @deprecated Use hud.uiPromptDoesAmbientGroupExist() instead
 */
export declare function uiPromptDoesAmbientGroupExist(hash: number | string): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
 *
 * Hash: 0x06565032897BA861 | Since: 1207
 *
 * @deprecated Use hud.uiPromptEnablePromptTypeThisFrame() instead
 */
export declare function uiPromptEnablePromptTypeThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A2F820452017EA2 | Since: 1207
 *
 * @deprecated Use hud.uiPromptFilterClear() instead
 */
export declare function uiPromptFilterClear(): void;
/**
 * No comment provided
 *
 * Hash: 0xC1FCC36C3F7286C8 | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetGroupActivePage() instead
 */
export declare function uiPromptGetGroupActivePage(hash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xCB73D7521E7103F0 | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetGroupIdForScenarioPoint() instead
 */
export declare function uiPromptGetGroupIdForScenarioPoint(): number;
/**
 * No comment provided
 *
 * Hash: 0xB796970BD125FCE8 | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetGroupIdForTargetEntity() instead
 */
export declare function uiPromptGetGroupIdForTargetEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x8A9585293863B8A5 | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetMashModeProgress() instead
 */
export declare function uiPromptGetMashModeProgress(prompt: any): number;
/**
 * No comment provided
 *
 * Hash: 0x81801291806DBC50 | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetProgress() instead
 */
export declare function uiPromptGetProgress(prompt: any): number;
/**
 * No comment provided
 *
 * Hash: 0x1FBA0DABECDDB52B | Since: 1207
 *
 * @deprecated Use hud.uiPromptGetUrgentPulsingEnabled() instead
 */
export declare function uiPromptGetUrgentPulsingEnabled(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8010BEBD0D5ED5BC | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasHoldAutoFillMode() instead
 */
export declare function uiPromptHasHoldAutoFillMode(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB60C9F9ED47ABB76 | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasHoldMode() instead
 */
export declare function uiPromptHasHoldMode(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0F65F0640EF0617 | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasHoldModeCompleted() instead
 */
export declare function uiPromptHasHoldModeCompleted(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6C6A4ADB3BAC409 | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasManualMashMode() instead
 */
export declare function uiPromptHasManualMashMode(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCD072523791DDC1B | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasMashMode() instead
 */
export declare function uiPromptHasMashMode(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x845CE958416DC473 | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasMashModeCompleted() instead
 */
export declare function uiPromptHasMashModeCompleted(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25B18E530CF39D6F | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasMashModeFailed() instead
 */
export declare function uiPromptHasMashModeFailed(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3CE854D250A88DAF | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasPressedTimedModeCompleted() instead
 */
export declare function uiPromptHasPressedTimedModeCompleted(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1A17B9ECFF617562 | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasPressedTimedModeFailed() instead
 */
export declare function uiPromptHasPressedTimedModeFailed(prompt: any): boolean;
/**
 * Params: p1 is 0
 *
 * Hash: 0xC92AC953F0A982AE | Since: 1207
 *
 * @deprecated Use hud.uiPromptHasStandardModeCompleted() instead
 */
export declare function uiPromptHasStandardModeCompleted(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x546E342E01DE71CF | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsActive() instead
 */
export declare function uiPromptIsActive(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0D00EDDFB58B7F28 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsEnabled() instead
 */
export declare function uiPromptIsEnabled(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC7D70EAEF92EFF48 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsHoldModeRunning() instead
 */
export declare function uiPromptIsHoldModeRunning(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2787CC611D3FACC5 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsJustPressed() instead
 */
export declare function uiPromptIsJustPressed(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x635CC82FA297A827 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsJustReleased() instead
 */
export declare function uiPromptIsJustReleased(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x21E60E230086697F | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsPressed() instead
 */
export declare function uiPromptIsPressed(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAFC887BA7A7756D6 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsReleased() instead
 */
export declare function uiPromptIsReleased(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x347469FBDD1589A9 | Since: 1207
 *
 * @deprecated Use hud.uiPromptIsValid() instead
 */
export declare function uiPromptIsValid(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x04F97DE45A519419 | Since: 1207
 *
 * @deprecated Use hud.uiPromptRegisterBegin() instead
 */
export declare function uiPromptRegisterBegin(): any;
/**
 * No comment provided
 *
 * Hash: 0xF7AA2696A22AD8B9 | Since: 1207
 *
 * @deprecated Use hud.uiPromptRegisterEnd() instead
 */
export declare function uiPromptRegisterEnd(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x4E52C800A28F7BE8 | Since: 1207
 *
 * @deprecated Use hud.uiPromptRemoveGroup() instead
 */
export declare function uiPromptRemoveGroup(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0xDC6C55DFA2C24EE5 | Since: 1207
 *
 * @deprecated Use hud.uiPromptRestartModes() instead
 */
export declare function uiPromptRestartModes(prompt: any): void;
/**
 * Note: you must use VAR_STRING for p1 if string is not part of text database
 * tabAmount: specifies number of tabs in prompt group
 * tabDefaultIndex: specifies starting index
 * p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
 *
 * Hash: 0xC65A45D4453C2627 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetActiveGroupThisFrame() instead
 */
export declare function uiPromptSetActiveGroupThisFrame(hash: number | string, name: string, tabAmount: number, tabDefaultIndex: number, prompt: any): any;
/**
 * No comment provided
 *
 * Hash: 0x565C1CE183CB0EAF | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetAllowedAction() instead
 */
export declare function uiPromptSetAllowedAction(prompt: any, action: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x315C81D760609108 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetAmbientGroupThisFrame() instead
 */
export declare function uiPromptSetAmbientGroupThisFrame(entity: number | Entity, name: string): any;
/**
 * attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
 *
 * Hash: 0x560E76D5E2E1803F | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetAttribute() instead
 */
export declare function uiPromptSetAttribute(prompt: any, attribute: number, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF957A1654C6322FE | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetBeatMode() instead
 */
export declare function uiPromptSetBeatMode(prompt: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB487A4936FBF40AC | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetBeatModeGrayedOut() instead
 */
export declare function uiPromptSetBeatModeGrayedOut(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0xB5352B7494A08258 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetControlAction() instead
 */
export declare function uiPromptSetControlAction(prompt: any, action: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x8A0FB4D03A630D21 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetEnabled() instead
 */
export declare function uiPromptSetEnabled(prompt: any, toggle: boolean): void;
/**
 * tabIndex: specifies tab of prompt
 *
 * Hash: 0x2F11D3A254169EA4 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetGroup() instead
 */
export declare function uiPromptSetGroup(prompt: any, groupId: number, tabIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3CE932E737C145D6 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetHoldAutoFillMode() instead
 */
export declare function uiPromptSetHoldAutoFillMode(prompt: any, autoFillTimeMs: number, holdTimeMs: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA3F2149AA24F3D8E | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetHoldAutoFillWithDecayMode() instead
 */
export declare function uiPromptSetHoldAutoFillWithDecayMode(prompt: any, autoFillTimeMs: number, holdTimeMs: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEA5CCF4EEB2F82D1 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetHoldIndefinitelyMode() instead
 */
export declare function uiPromptSetHoldIndefinitelyMode(prompt: any): void;
/**
 * Params: p2 is 304000 in R* SP Script coachrobberies
 *
 * Hash: 0x94073D5CA3F16B7B | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetHoldMode() instead
 */
export declare function uiPromptSetHoldMode(prompt: any, holdTimeMs: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA520C7B05FA4EB2A | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetManualResolved() instead
 */
export declare function uiPromptSetManualResolved(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x6C39587D7CC66801 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashAutoFillMode() instead
 */
export declare function uiPromptSetMashAutoFillMode(prompt: any, autoFillTimeMs: number, mashes: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7B66E89312727274 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashIndefinitelyMode() instead
 */
export declare function uiPromptSetMashIndefinitelyMode(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x179DCF71F705DA20 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashManualCanFailMode() instead
 */
export declare function uiPromptSetMashManualCanFailMode(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x32DF729D8BD3C1C6 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashManualMode() instead
 */
export declare function uiPromptSetMashManualMode(prompt: any): void;
/**
 * standard (prompt not held) rate: 0.035f
 * fast (prompt held) rate: 0.015f
 * punitive (been hit) rate: 0.14f
 *
 * Hash: 0x7D393C247FB9B431 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashManualModeDecaySpeed() instead
 */
export declare function uiPromptSetMashManualModeDecaySpeed(prompt: any, speed: number): void;
/**
 * standard (prompt not held) rate: (1f / 128f)
 * fast (prompt held) rate: (1f / 64f)
 * punitive (been hit) rate: (1f / 128f)
 *
 * Hash: 0xA0D1D79C6036A855 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashManualModeIncreasePerPress() instead
 */
export declare function uiPromptSetMashManualModeIncreasePerPress(prompt: any, rate: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56DBB26F98582C29 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashManualModePressedGrowthSpeed() instead
 */
export declare function uiPromptSetMashManualModePressedGrowthSpeed(prompt: any, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF6423BF071C7F71 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashMode() instead
 */
export declare function uiPromptSetMashMode(prompt: any, mashes: number): void;
/**
 * For startProgress, 0.0f - 1.0f is a percentage value, so 0.5f = 50% progress. Range: 0.0f - 1.0f
 * For decreaseSpeed, 0.0f will result in the prompt not showing the mash progress at all. 0.01f - ?.0f. At speeds around 7.0f to 8.0f the prompt basically fails immediately if you don't start mashing right away.
 *
 * Hash: 0xDC0CB602DEADBA53 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashWithResistanceCanFailMode() instead
 */
export declare function uiPromptSetMashWithResistanceCanFailMode(prompt: any, mashes: number, decreaseSpeed: number, startProgress: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCD1BDFF15EFA79F5 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetMashWithResistanceMode() instead
 */
export declare function uiPromptSetMashWithResistanceMode(prompt: any, mashes: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2F385ECC5200938D | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetOrderingAsInputType() instead
 */
export declare function uiPromptSetOrderingAsInputType(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x1473D3AF51D54276 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetPressedTimedMode() instead
 */
export declare function uiPromptSetPressedTimedMode(prompt: any, depletionTimeMs: number): void;
/**
 * priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
 *
 * Hash: 0xCA24F528D0D16289 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetPriority() instead
 */
export declare function uiPromptSetPriority(prompt: any, priority: number): void;
/**
 * No comment provided
 *
 * Hash: 0x530A428705BE5DEF | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetPromptPriorityPreference() instead
 */
export declare function uiPromptSetPromptPriorityPreference(ped: number | Ped): void;
/**
 * This returns an id that can be used with 0x6095358C4142932A.
 *
 * Hash: 0xD9459157EB22C895 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetRegisterHorizontalOrientation() instead
 */
export declare function uiPromptSetRegisterHorizontalOrientation(): number;
/**
 * Used for controllers
 *
 * Hash: 0x7ABE7095FB3D2581 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetRotateMode() instead
 */
export declare function uiPromptSetRotateMode(prompt: any, counterclockwise: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x832CB510DE546282 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetSpinnerPosition() instead
 */
export declare function uiPromptSetSpinnerPosition(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0xAC6586A7FDCD4B68 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetSpinnerSpeed() instead
 */
export declare function uiPromptSetSpinnerSpeed(prompt: any): void;
/**
 * Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
 *
 * Hash: 0x74C7D7B72ED0D3CF | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetStandardizedHoldMode() instead
 */
export declare function uiPromptSetStandardizedHoldMode(prompt: any, timedEventHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xCC6656799977741B | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetStandardMode() instead
 */
export declare function uiPromptSetStandardMode(prompt: any, releaseMode: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDEC85C174751292B | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetTag() instead
 */
export declare function uiPromptSetTag(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x5F6503D9CD2754EB | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetTargetMode() instead
 */
export declare function uiPromptSetTargetMode(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x00123054BEC8A30F | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetTargetModeProgress() instead
 */
export declare function uiPromptSetTargetModeProgress(prompt: any, progress: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5E019C45DD3B6A14 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetTargetModeTarget() instead
 */
export declare function uiPromptSetTargetModeTarget(prompt: any): void;
/**
 * No comment provided
 *
 * Hash: 0x5DD02A8318420DD7 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetText() instead
 */
export declare function uiPromptSetText(prompt: any, text: string): void;
/**
 * TM_ANY = 0,
 * TM_ON_FOOT,
 * TM_IN_VEHICLE
 *
 * Hash: 0x876E4A35C73A6655 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetTransportMode() instead
 */
export declare function uiPromptSetTransportMode(prompt: any, mode: number): void;
/**
 * Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
 *
 * Hash: 0xF4A5C4509BF923B1 | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetType() instead
 */
export declare function uiPromptSetType(prompt: any, type: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC5F428EE08FA7F2C | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetUrgentPulsingEnabled() instead
 */
export declare function uiPromptSetUrgentPulsingEnabled(prompt: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x71215ACCFDE075EE | Since: 1207
 *
 * @deprecated Use hud.uiPromptSetVisible() instead
 */
export declare function uiPromptSetVisible(prompt: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1FE4788AB1430C55 | Since: 1207
 *
 * @deprecated Use hud.uiPromptWasBeatModePressedInTimeWindow() instead
 */
export declare function uiPromptWasBeatModePressedInTimeWindow(prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0B9F7A01EC50448D | Since: 1207
 *
 * @deprecated Use ik._0x0B9F7A01EC50448D() instead
 */
export declare function _0x0B9F7A01EC50448D(ped: number | Ped, args: any): void;
/**
 * No comment provided
 *
 * Hash: 0x6098139150DCC745 | Since: 1207
 *
 * @deprecated Use ik._0x6098139150DCC745() instead
 */
export declare function _0x6098139150DCC745(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x873C792E07A32C8B | Since: 1207
 *
 * @deprecated Use ik._0x873C792E07A32C8B() instead
 */
export declare function _0x873C792E07A32C8B(ped1: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x66F9EB44342BB4C5 | Since: 1207
 *
 * @deprecated Use ik.inverseKinematicsRequestLookAt() instead
 */
export declare function inverseKinematicsRequestLookAt(ped: number | Ped, args: any): void;
/**
 * Seems to disable IK on ped
 *
 * Hash: 0x0EABF182FBB63D72 | Since: 1207
 *
 * @deprecated Use ik.inverseKinematicsSetDisabledForPed() instead
 */
export declare function inverseKinematicsSetDisabledForPed(ped: number | Ped): void;
/**
 * Changes the mouse cursor's sprite.
 *
 * spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
 *
 * Old name: _SET_MOUSE_CURSOR_SPRITE
 *
 * Hash: 0x7F5858AAB5A58CCE | Since: 1207
 *
 * @deprecated Use interaction.setMouseCursorStyle() instead
 */
export declare function setMouseCursorStyle(spriteId: number): void;
/**
 * Shows the cursor on screen for one frame.
 *
 * Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
 *
 * Hash: 0xF12E4CCAF249DC10 | Since: 1207
 *
 * @deprecated Use interaction.setMouseCursorThisFrame() instead
 */
export declare function setMouseCursorThisFrame(): void;
/**
 * Returns true if player is moving mouse while cursor is active
 * _PI* - _PO*
 *
 * Hash: 0x2B8B605F2A9E64BF | Since: 1311
 *
 * @deprecated Use interaction.pointerIsBeingMoved() instead
 */
export declare function pointerIsBeingMoved(): boolean;
/**
 * Returns true if player is holding LMB while cursor is active
 * _PI* - _PO*
 *
 * Hash: 0x61CAE9D1FD055E44 | Since: 1207
 *
 * @deprecated Use interaction.pointerIsLeftButtonHeld() instead
 */
export declare function pointerIsLeftButtonHeld(): boolean;
/**
 * Returns true if player releases LMB if cursor is active
 * _PI* - _PO*
 *
 * Hash: 0xF7F51A57349739F2 | Since: 1207
 *
 * @deprecated Use interaction.pointerIsLeftButtonJustReleased() instead
 */
export declare function pointerIsLeftButtonJustReleased(): boolean;
/**
 * Allows camera to be moved if middle mouse button is held while in first person
 * Must be called every frame
 * _SET*
 *
 * Hash: 0x0546B117BB17548B | Since: 1232
 *
 * @deprecated Use interaction.setAllowFirstPersonMouseCameraMovement() instead
 */
export declare function setAllowFirstPersonMouseCameraMovement(): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
 *
 * Hash: 0x174D0AAB11CED739 | Since: 1207
 *
 * @deprecated Use interior.activateInteriorEntitySet() instead
 */
export declare function activateInteriorEntitySet(interior: number, entitySetName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xA1762D5BBFCA13A8 | Since: 1207
 *
 * @deprecated Use interior.clearRoomForEntity() instead
 */
export declare function clearRoomForEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x951A049765E0D450 | Since: 1207
 *
 * @deprecated Use interior.clearRoomForGameViewport() instead
 */
export declare function clearRoomForGameViewport(): void;
/**
 * No comment provided
 *
 * Hash: 0x33B81A2C07A51FFF | Since: 1207
 *
 * @deprecated Use interior.deactivateInteriorEntitySet() instead
 */
export declare function deactivateInteriorEntitySet(interior: number, entitySetName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3C2B92A1A07D4FCE | Since: 1207
 *
 * @deprecated Use interior.disableInterior() instead
 */
export declare function disableInterior(interior: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC29A9894C976945 | Since: 1207
 *
 * @deprecated Use interior.forceRoomForEntity() instead
 */
export declare function forceRoomForEntity(entity: number | Entity, interior: number, roomHashKey: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x115B4AA8FB28AB43 | Since: 1207
 *
 * @deprecated Use interior.forceRoomForGameViewport() instead
 */
export declare function forceRoomForGameViewport(interiorID: number, roomHashKey: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xCDD36C9E5C469070 | Since: 1207
 *
 * @deprecated Use interior.getInteriorAtCoords() instead
 */
export declare function getInteriorAtCoords(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xAAD6170AA33B13C0 | Since: 1207
 *
 * @deprecated Use interior.getInteriorAtCoordsWithType() instead
 */
export declare function getInteriorAtCoordsWithType(pos: Vector3, interiorType: string): number;
/**
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 *
 * Hash: 0x3543AEA1816D1D2B | Since: 1207
 *
 * @deprecated Use interior.getInteriorAtCoordsWithTypehash() instead
 */
export declare function getInteriorAtCoordsWithTypehash(pos: Vector3, typeHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5054D1A5218FA696 | Since: 1207
 *
 * @deprecated Use interior.getInteriorFromCollision() instead
 */
export declare function getInteriorFromCollision(pos: Vector3): number;
/**
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 *
 * Hash: 0xB417689857646F61 | Since: 1207
 *
 * @deprecated Use interior.getInteriorFromEntity() instead
 */
export declare function getInteriorFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xBC8A281FF125C655 | Since: 1207
 *
 * @deprecated Use interior.getInteriorFromPrimaryView() instead
 */
export declare function getInteriorFromPrimaryView(): number;
/**
 * No comment provided
 *
 * Hash: 0x8451E87D3C2B0286 | Since: 1207
 *
 * @deprecated Use interior.getInteriorLocationAndNamehash() instead
 */
export declare function getInteriorLocationAndNamehash(interior: number, position: Vector3, nameHash: number | string): void;
/**
 * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
 *
 * Hash: 0x27D7B6F79E1F4603 | Since: 1207
 *
 * @deprecated Use interior.getKeyForEntityInRoom() instead
 */
export declare function getKeyForEntityInRoom(entity: number | Entity): number;
/**
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 *
 * Hash: 0x076E46E0EB52AFC6 | Since: 1207
 *
 * @deprecated Use interior.getRoomKeyFromEntity() instead
 */
export declare function getRoomKeyFromEntity(entity: number | Entity): number;
/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 *
 * Hash: 0xF291396B517E25B2 | Since: 1207
 *
 * @deprecated Use interior.isCollisionMarkedOutside() instead
 */
export declare function isCollisionMarkedOutside(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x32810CA2125F5842 | Since: 1207
 *
 * @deprecated Use interior.isInteriorEntitySetActive() instead
 */
export declare function isInteriorEntitySetActive(interior: number, entitySetName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x941560D2D45DBFC8 | Since: 1207
 *
 * @deprecated Use interior.isInteriorReady() instead
 */
export declare function isInteriorReady(interior: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4200F14D6F840A9A | Since: 1207
 *
 * @deprecated Use interior.isInteriorScene() instead
 */
export declare function isInteriorScene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x017C1B3159F79F6C | Since: 1207
 *
 * @deprecated Use interior.isValidInterior() instead
 */
export declare function isValidInterior(interior: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBD3D33EABF680168 | Since: 1207
 *
 * @deprecated Use interior.pinInteriorInMemory() instead
 */
export declare function pinInteriorInMemory(interior: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5BD616735F16BF5C | Since: 1207
 *
 * @deprecated Use interior.retainEntityInInterior() instead
 */
export declare function retainEntityInInterior(entity: number | Entity, interior: number): void;
/**
 * Actually returns void in IDA but the script header defines a BOOL return type
 *
 * Hash: 0xB5EF6FEF2DC9EBED | Since: 1207
 *
 * @deprecated Use interior.setInteriorInUse() instead
 */
export declare function setInteriorInUse(interior: number): boolean;
/**
 * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
 *
 * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
 *
 * Hash: 0x07FD1A0B814F6055 | Since: 1207
 *
 * @deprecated Use interior.unpinInterior() instead
 */
export declare function unpinInterior(interior: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2533F2AB0EB9C6F9 | Since: 1207
 *
 * @deprecated Use interior._0x2533F2AB0EB9C6F9() instead
 */
export declare function _0x2533F2AB0EB9C6F9(): void;
/**
 * No comment provided
 *
 * Hash: 0xFE2B3D5500B1B2E4 | Since: 1207
 *
 * @deprecated Use interior._0xFE2B3D5500B1B2E4() instead
 */
export declare function _0xFE2B3D5500B1B2E4(): void;
/**
 * No comment provided
 *
 * Hash: 0x3039BE60B3749716 | Since: 1207
 *
 * @deprecated Use interior.getInteriorMinimapHash() instead
 */
export declare function getInteriorMinimapHash(interior: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2C9746D0CA15BE1C | Since: 1207
 *
 * @deprecated Use interior.getInteriorPosition() instead
 */
export declare function getInteriorPosition(interior: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xD56FF170710FC826 | Since: 1207
 *
 * @deprecated Use interior.isInteriorEntitySetValid() instead
 */
export declare function isInteriorEntitySetValid(interior: number, entitySetName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x644CCB76A76CFBD6 | Since: 1207
 *
 * @deprecated Use inventory.inventoryCopyMpInventoryToMissionInventory() instead
 */
export declare function inventoryCopyMpInventoryToMissionInventory(bCopySatchelItems: boolean, bCopyEmotes: boolean, bCopyHorse: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE1F389F03DC83673 | Since: 1311
 *
 * @deprecated Use inventory.inventoryDisableMissionInventoryPickups() instead
 */
export declare function inventoryDisableMissionInventoryPickups(): void;
/**
 * No comment provided
 *
 * Hash: 0x033EE4B89F3AC545 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetChildrenInSlotCount() instead
 */
export declare function inventoryGetChildrenInSlotCount(inventoryId: number, guid: any, slotId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x886DFD3E185C8A89 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetGuidFromItemid() instead
 */
export declare function inventoryGetGuidFromItemid(inventoryId: number, guid: any, slotId: number | string, outGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9700E8EFC4AB9089 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItem() instead
 */
export declare function inventoryGetInventoryItem(inventoryId: number, inData: any, outData: any): boolean;
/**
 * Params: p0 is only 0 or 1
 * Only used in R* SP Scripts
 *
 * Hash: 0x0349404A22736740 | Since: 1207
 *
 * @deprecated Use inventory._0x0349404A22736740() instead
 */
export declare function _0x0349404A22736740(inventoryId: number, guid: any): void;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x112BCA290D2EB53C | Since: 1207
 *
 * @deprecated Use inventory._0x112BCA290D2EB53C() instead
 */
export declare function _0x112BCA290D2EB53C(inventoryId: number, year: number, month: number, day: number, hour: number, minute: number, second: number): boolean;
/**
 * eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
 * Only used in R* SP Scripts
 *
 * Hash: 0x46743BBFEDBC859E | Since: 1207
 *
 * @deprecated Use inventory.inventoryUseSatchelItem() instead
 */
export declare function inventoryUseSatchelItem(inventoryId: number, eInventoryItem: number | string): void;
/**
 * Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
 *
 * Hash: 0x46DB71883EE9D5AF | Since: 1207
 *
 * @deprecated Use inventory._0x46DB71883EE9D5AF() instead
 */
export declare function _0x46DB71883EE9D5AF(data: any, stats: string, guid: any, ped: number | Ped): number;
/**
 * removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
 * `Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel`
 * Only used in R* SP Scripts
 *
 * Hash: 0x5D6182F3BCE1333B | Since: 1207
 *
 * @deprecated Use inventory.inventoryRemoveInventoryItems() instead
 */
export declare function inventoryRemoveInventoryItems(inventoryId: number, removeReason: number | string): boolean;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x6862E4D93F64CF01 | Since: 1207
 *
 * @deprecated Use inventory._0x6862E4D93F64CF01() instead
 */
export declare function _0x6862E4D93F64CF01(inventoryId: number, guid: any): boolean;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x6968CE7AC32F6788 | Since: 1207
 *
 * @deprecated Use inventory._0x6968CE7AC32F6788() instead
 */
export declare function _0x6968CE7AC32F6788(inventoryId: number): void;
/**
 * Apply the weapon stats to the CatalogItemInspection stats entry id. get entryId with _INVENTORY_GET_CATALOG_ITEM_INSPECTION_STATS_ENTRY
 *
 * Hash: 0x75CFAC49301E134E | Since: 1207
 *
 * @deprecated Use inventory.inventoryApplyWeaponStatsToEntry() instead
 */
export declare function inventoryApplyWeaponStatsToEntry(entryId: number, weapon: number | string, ped: number | Ped): void;
/**
 * p1, p2: 0
 *
 * Hash: 0x75CFAC49301E134F | Since: 1207
 *
 * @deprecated Use inventory._0x75CFAC49301E134F() instead
 */
export declare function _0x75CFAC49301E134F(databindingEntryId: number | string): void;
/**
 * p0: value returned by 0x46DB71883EE9D5AF
 *
 * Hash: 0x951847CEF3D829FF | Since: 1207
 *
 * @deprecated Use inventory._0x951847CEF3D829FF() instead
 */
export declare function _0x951847CEF3D829FF(outGuid: any, ped: number | Ped): void;
/**
 * p1 (out) and p2 (in) are both script arrays?
 * item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
 *
 * Hash: 0x9AC53CB6907B4428 | Since: 1207
 *
 * @deprecated Use inventory._0x9AC53CB6907B4428() instead
 */
export declare function _0x9AC53CB6907B4428(item: number | string): boolean;
/**
 * Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
 * INVENTORY_A*
 *
 * Hash: 0x9B4E793B1CB6550A | Since: 1207
 *
 * @deprecated Use inventory._0x9B4E793B1CB6550A() instead
 */
export declare function _0x9B4E793B1CB6550A(): void;
/**
 * Returns effects entry id of CatalogItemInspection container.
 *
 * Hash: 0x9D21B185ABC2DBC4 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetCatalogItemInspectionEffectsEntry() instead
 */
export declare function inventoryGetCatalogItemInspectionEffectsEntry(entryId: number, name: string, unk1: boolean, unk2: boolean): number;
/**
 * Returns stats entry id of CatalogItemInspection container
 *
 * Hash: 0x9D21B185ABC2DBC5 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetCatalogItemInspectionStatsEntry() instead
 */
export declare function inventoryGetCatalogItemInspectionStatsEntry(entryId: number, name: string, unk1: number, playerid: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x9E58207B194488AC | Since: 1207
 *
 * @deprecated Use inventory._0x9E58207B194488AC() instead
 */
export declare function _0x9E58207B194488AC(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB1DD74A1F5536622 | Since: 1311
 *
 * @deprecated Use inventory._0xB1DD74A1F5536622() instead
 */
export declare function _0xB1DD74A1F5536622(inventoryId: number, itemGUID: any): boolean;
/**
 * Params: p3 returns an int between 0 and 20 (?)
 * Only used in R* SP Scripts
 *
 * Hash: 0xD08685BA892DBFAB | Since: 1207
 *
 * @deprecated Use inventory._0xD08685BA892DBFAB() instead
 */
export declare function _0xD08685BA892DBFAB(inventoryId: number, guid: any): boolean;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0xE1F45A67A9F0DCBC | Since: 1207
 *
 * @deprecated Use inventory._0xE1F45A67A9F0DCBC() instead
 */
export declare function _0xE1F45A67A9F0DCBC(inventoryId: number): void;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0xE36D4A38D28D9CFB | Since: 1207
 *
 * @deprecated Use inventory.inventoryUseBackupInventory() instead
 */
export declare function inventoryUseBackupInventory(): void;
/**
 * p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
 * Returns slot hash
 *
 * Hash: 0x6452B1D357D81742 | Since: 1207
 *
 * @deprecated Use inventory.getDefaultItemSlotInfo() instead
 */
export declare function getDefaultItemSlotInfo(item: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xADDD1E7C0ECF7D95 | Since: 1207
 *
 * @deprecated Use inventory.getItemRoleMaxLevelCount() instead
 */
export declare function getItemRoleMaxLevelCount(inventoryId: number, eRoleMaxLevel: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE80E50BEE276A54A | Since: 1207
 *
 * @deprecated Use inventory.getItemSlotMaxCount() instead
 */
export declare function getItemSlotMaxCount(provision: number | string, slotId: number | string): number;
/**
 * inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
 *
 * Hash: 0xCB5D11F9508A928D | Since: 1207
 *
 * @deprecated Use inventory.inventoryAddItemWithGuid() instead
 */
export declare function inventoryAddItemWithGuid(inventoryId: number, guid1: any, guid2: any, item: number | string, inventoryItemSlot: number | string, addReason: number | string): boolean;
/**
 * inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
 *
 * Hash: 0x0FBBFFC891A97C81 | Since: 1207
 *
 * @deprecated Use inventory.inventoryAreLocalChangesAllowed() instead
 */
export declare function inventoryAreLocalChangesAllowed(inventoryId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C543D5DFCD2DAFD | Since: 1207
 *
 * @deprecated Use inventory.inventoryCompareGuids() instead
 */
export declare function inventoryCompareGuids(guid1: any, guid2: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC04F47D488EF9EBA | Since: 1207
 *
 * @deprecated Use inventory.inventoryCopyItemToInventory() instead
 */
export declare function inventoryCopyItemToInventory(inventoryId: number, inventoryIdCloned: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3112ADB9D5F3426B | Since: 1207
 *
 * @deprecated Use inventory.inventoryCopyItemToMissionInventory() instead
 */
export declare function inventoryCopyItemToMissionInventory(guid: any): void;
/**
 * filterName (collections): "ALL", "ALL SATCHEL", "ALL HORSES", "ALL COACHES", "ALL MOUNTS", "ALL CLOTHING", "ALL WEAPONS", "ALL SATCHEL EXCLUDING CLOTHING", "ALL EXCLUDING CLOTHING"
 * slotId: -1591664384
 * p3: outCollectionSize (?)
 * Returns collectionId
 *
 * Hash: 0x80D78BDC9D88EF07 | Since: 1207
 *
 * @deprecated Use inventory.inventoryCreateItemCollection() instead
 */
export declare function inventoryCreateItemCollection(inventoryId: number, filterName: string, slotId: number | string, size: number): number;
/**
 * Returns collectionId
 *
 * Hash: 0x97A3646645727F42 | Since: 1232
 *
 * @deprecated Use inventory.inventoryCreateItemCollection2() instead
 */
export declare function inventoryCreateItemCollection2(collectionSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0x640F890C3E5A3FFD | Since: 1207
 *
 * @deprecated Use inventory.inventoryCreateItemCollectionWithFilter() instead
 */
export declare function inventoryCreateItemCollectionWithFilter(inventoryId: number, filter: any, numInCollection: number): number;
/**
 * p1: 32
 * Returns collectionId
 *
 * Hash: 0xBB7F968675B34B0C | Since: 1311
 *
 * @deprecated Use inventory.inventoryCreateSortedCollection() instead
 */
export declare function inventoryCreateSortedCollection(inventoryId: number, size: number): number;
/**
 * Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
 *
 * Hash: 0x766315A564594401 | Since: 1207
 *
 * @deprecated Use inventory.inventoryDisableItem() instead
 */
export declare function inventoryDisableItem(inventoryId: number, item: number | string, gtxReason: number | string): void;
/**
 * Params: p1 = 0
 *
 * Hash: 0xE3A46370F70F3607 | Since: 1207
 *
 * @deprecated Use inventory.inventoryDisableWeapons() instead
 */
export declare function inventoryDisableWeapons(inventoryId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x88B58B83A43A8CAB | Since: 1207
 *
 * @deprecated Use inventory.inventoryDoesItemOwnEquipment() instead
 */
export declare function inventoryDoesItemOwnEquipment(inventoryId: number, guid: any, item: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A564540FAC12211 | Since: 1207
 *
 * @deprecated Use inventory.inventoryEnableItem() instead
 */
export declare function inventoryEnableItem(inventoryId: number, item: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD5D72F1624F3BA7C | Since: 1207
 *
 * @deprecated Use inventory.inventoryEnableWeapons() instead
 */
export declare function inventoryEnableWeapons(inventoryId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x734311E2852760D0 | Since: 1207
 *
 * @deprecated Use inventory.inventoryEquipItemWithGuid() instead
 */
export declare function inventoryEquipItemWithGuid(inventoryId: number, guid: any, bEquipped: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x780C5B9AE2819807 | Since: 1207
 *
 * @deprecated Use inventory.inventoryFitsSlotId() instead
 */
export declare function inventoryFitsSlotId(item: number | string, slotId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE843D21A8E2498AA | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetChildrenCount() instead
 */
export declare function inventoryGetChildrenCount(inventoryId: number, parentGuid: any): number;
/**
 * No comment provided
 *
 * Hash: 0x025A1B1FB03FBF61 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetFullInventoryItemData() instead
 */
export declare function inventoryGetFullInventoryItemData(inventoryId: number, guid: any): boolean;
/**
 * Returns a unique inventory ID for this ped.
 * For the local player ped, it is an eInventories value.
 * For other peds, it is the inventory address casted to unsigned int.
 *
 * enum eInventories
 * {
 * INVENTORY_INVALID,
 * INVENTORY_SP_PLAYER,
 * INVENTORY_MP_PLAYER,
 * INVENTORY_MP_MISSION,
 * INVENTORY_SECOND_SCREEN,
 * INVENTORY_SP_BACKUP,
 * INVENTORY_SP_SNAPSHOT,
 * INVENTORY_0xDE2AE452,
 * INVENTORY_0x399D9B3A,
 * INVENTORY_0x4BD43FA7,
 * INVENTORY_0x9529D251,
 * INVENTORY_0xA75776AC,
 * INVENTORY_MAX_ID = 11,
 * INVENTORY_IDS_COUNT
 * };
 *
 * Hash: 0x13D234A2A3F66E63 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryIdFromPed() instead
 */
export declare function inventoryGetInventoryIdFromPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xCD9A485F2B383B44 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemChild() instead
 */
export declare function inventoryGetInventoryItemChild(inventoryId: number, parentGuid: any, childIndex: any, outInventoryItem: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC97E0D2302382211 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemCountWithGuid() instead
 */
export declare function inventoryGetInventoryItemCountWithGuid(inventoryId: number, guid: any): number;
/**
 * No comment provided
 *
 * Hash: 0xE787F05DFC977BDE | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemCountWithItemid() instead
 */
export declare function inventoryGetInventoryItemCountWithItemid(inventoryId: number, eInventoryItem: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA4550FE9C512E3DD | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemDescriptionHash() instead
 */
export declare function inventoryGetInventoryItemDescriptionHash(item: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xBE012571B25F5ACA | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemEquippedInSlot() instead
 */
export declare function inventoryGetInventoryItemEquippedInSlot(inventoryId: number, guid: any, slotId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x22E590F108289A9D | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemEquippedInSlotByRef() instead
 */
export declare function inventoryGetInventoryItemEquippedInSlotByRef(inventoryId: number, guid: any, slotId: number | string, outGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB991FE166FAF84FD | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemFitSlot() instead
 */
export declare function inventoryGetInventoryItemFitSlot(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9933164965533B7 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemHidden() instead
 */
export declare function inventoryGetInventoryItemHidden(inventoryId: number, guid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C093C1787F18519 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemInspectionInfo() instead
 */
export declare function inventoryGetInventoryItemInspectionInfo(item: number | string, info: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x70E3A884ED000A01 | Since: 1311
 *
 * @deprecated Use inventory.inventoryGetInventoryItemInUse() instead
 */
export declare function inventoryGetInventoryItemInUse(inventoryId: number, guid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4AEF1FB5B9011D75 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemIsAnimalPelt() instead
 */
export declare function inventoryGetInventoryItemIsAnimalPelt(item: number | string): boolean;
/**
 * soundType: see 0x2BAE4880DCDD560B
 * Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
 *
 * Hash: 0x2E1CDC1FF3B8473E | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemSound() instead
 */
export declare function inventoryGetInventoryItemSound(item: number | string, soundType: number): number;
/**
 * Returns CopyID
 *
 * Hash: 0xAB5F12746A099A0E | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetInventoryItemWeaponCopyId() instead
 */
export declare function inventoryGetInventoryItemWeaponCopyId(inventoryId: number, guid: any): number;
/**
 * soundType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CItemInfoSoundsInterface__sSoundsInfo__eSoundType
 *
 * Hash: 0x2BAE4880DCDD560B | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetIsInventoryItemSoundValid() instead
 */
export declare function inventoryGetIsInventoryItemSoundValid(item: number | string, soundType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4A606C17276E1BCC | Since: 1232
 *
 * @deprecated Use inventory.inventoryGetItemExpiryTime() instead
 */
export declare function inventoryGetItemExpiryTime(itemGUID: any): number;
/**
 * collectionId is < outCollectionSize
 *
 * Hash: 0x82FA24C3D3FCD9B7 | Since: 1207
 *
 * @deprecated Use inventory.inventoryGetItemFromCollectionIndex() instead
 */
export declare function inventoryGetItemFromCollectionIndex(collectionId: number, itemIndex: number, itemData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB881CA836CC4B6D4 | Since: 1207
 *
 * @deprecated Use inventory.inventoryIsGuidValid() instead
 */
export declare function inventoryIsGuidValid(guid: any): boolean;
/**
 * Alternative Name: _INVENTORY_IS_ITEM_DISABLED
 *
 * Hash: 0x3D10D7179D7034AF | Since: 1207
 *
 * @deprecated Use inventory.inventoryIsInventoryItemEquipped() instead
 */
export declare function inventoryIsInventoryItemEquipped(inventoryId: number, item: number | string): boolean;
/**
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
 * 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
 *
 * Hash: 0x245D07651B1D183B | Since: 1207
 *
 * @deprecated Use inventory.inventoryIsInventoryItemFlagEnabled() instead
 */
export declare function inventoryIsInventoryItemFlagEnabled(item: number | string, flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0137C77A2EC64536 | Since: 1232
 *
 * @deprecated Use inventory.inventoryIsItemExpired() instead
 */
export declare function inventoryIsItemExpired(itemGUID: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC7563F482781A3D | Since: 1207
 *
 * @deprecated Use inventory.inventoryIsPlayerInventoryMirroringTransactions() instead
 */
export declare function inventoryIsPlayerInventoryMirroringTransactions(): boolean;
/**
 * guid1: old parent GUID
 * guid2: new parent GUID
 * guid3: new item GUID (out param)
 *
 * Hash: 0xDCCAA7C3BFD88862 | Since: 1207
 *
 * @deprecated Use inventory.inventoryMoveInventoryItem() instead
 */
export declare function inventoryMoveInventoryItem(inventoryId: number, guid1: any, guid2: any, slotId: number | string, quantity: number, outGuid: any): boolean;
/**
 * Max num of collections is 5, so release your unused ones.
 *
 * Hash: 0x42A2F33A1942E865 | Since: 1207
 *
 * @deprecated Use inventory.inventoryReleaseItemCollection() instead
 */
export declare function inventoryReleaseItemCollection(collectionId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3E4E811480B3AE79 | Since: 1207
 *
 * @deprecated Use inventory.inventoryRemoveInventoryItemWithGuid() instead
 */
export declare function inventoryRemoveInventoryItemWithGuid(inventoryId: number, guid: any, quantity: number, removeReason: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4158C8C9A3B5DCE | Since: 1207
 *
 * @deprecated Use inventory.inventoryRemoveInventoryItemWithItemid() instead
 */
export declare function inventoryRemoveInventoryItemWithItemid(inventoryId: number, item: number | string, quantity: number, removeReason: number | string): boolean;
/**
 * Used with CClothingItem
 *
 * Hash: 0x9A113C660AEA3832 | Since: 1207
 *
 * @deprecated Use inventory.inventorySetInventoryItemHidden() instead
 */
export declare function inventorySetInventoryItemHidden(inventoryId: number, guid: any, hidden: boolean): void;
/**
 * Used with CSatchelItem, R* Script usage: fisihing_core
 *
 * Hash: 0xD740F11FBC8AEF43 | Since: 1207
 *
 * @deprecated Use inventory.inventorySetInventoryItemHidden2() instead
 */
export declare function inventorySetInventoryItemHidden2(inventoryId: number, guid: any, hidden: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x227522FD59DDB7E8 | Since: 1207
 *
 * @deprecated Use inventory.inventorySetInventoryItemInspectionEnabled() instead
 */
export declare function inventorySetInventoryItemInspectionEnabled(inventoryId: number, enabled: boolean): boolean;
/**
 * Only works on CClothingItem
 *
 * Hash: 0x65A5F70F4A292EBE | Since: 1207
 *
 * @deprecated Use inventory.inventorySetInventoryItemInUse() instead
 */
export declare function inventorySetInventoryItemInUse(inventoryId: number, guid: any, inUse: boolean): void;
/**
 * OWE_INVALID = -1,
 * OWE_GOOD_IN_HOT
 * OWE_GOOD_IN_NONE
 * OWE_GOOD_IN_COLD
 * OWE_GOOD_IN_ALL
 *
 * Hash: 0x6D2F987736A42D4C | Since: 1207
 *
 * @deprecated Use inventory.inventorySetInventoryItemWeatherEffectiveness() instead
 */
export declare function inventorySetInventoryItemWeatherEffectiveness(inventoryId: number, guid: any, weatherEffectiveness: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF2753D691BCDA314 | Since: 1207
 *
 * @deprecated Use inventory.inventorySwapInventoryItem() instead
 */
export declare function inventorySwapInventoryItem(inventoryId: number, guid1: any, guid2: any): boolean;
/**
 * Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
 *
 * Hash: 0xD80A8854DB5CFBA5 | Since: 1207
 *
 * @deprecated Use inventory.inventoryUpdateInventoryItem() instead
 */
export declare function inventoryUpdateInventoryItem(inventoryId: number, guid1: any, guid2: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6AA9F56BC6CFF58 | Since: 1207
 *
 * @deprecated Use inventory.inventoryUseMissionInventory() instead
 */
export declare function inventoryUseMissionInventory(enable: boolean, mirrorTransactions: boolean): void;
/**
 * old name _INVENTORY_USE_SP_BACKUP
 *
 * Hash: 0x7C7E4AB748EA3B07 | Since: 1207
 *
 * @deprecated Use inventory.inventoryIsUsingBackupInventory() instead
 */
export declare function inventoryIsUsingBackupInventory(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF666EF30F4F0AC4E | Since: 1207
 *
 * @deprecated Use inventory.setCarriableCarryActionPromptOverride() instead
 */
export declare function setCarriableCarryActionPromptOverride(data: any): void;
/**
 * No comment provided
 *
 * Hash: 0xFD41D1D4350F6413 | Since: 1207
 *
 * @deprecated Use inventory.setItemPromptInfoRequest() instead
 */
export declare function setItemPromptInfoRequest(): void;
/**
 * This native has no functionality.
 *
 * Hash: 0x597F571DDEE3FFAC | Since: 1207
 *
 * @deprecated Use inventory.setUseMissionInventory() instead
 */
export declare function setUseMissionInventory(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2A610BEE7D341CC4 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutItemByName() instead
 */
export declare function itemdatabaseFilloutItemByName(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF2D360D27FD1ABF | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutItemEffectIdInfo() instead
 */
export declare function itemdatabaseFilloutItemEffectIdInfo(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFE90ABBCBFDC13B2 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutItemInfo() instead
 */
export declare function itemdatabaseFilloutItemInfo(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4CE753203FA42214 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsBuyableAwardValid() instead
 */
export declare function itemdatabaseIsBuyableAwardValid(award: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x17721003A66C72BF | Since: 1207
 *
 * @deprecated Use itemdatabase._0x17721003A66C72BF() instead
 */
export declare function _0x17721003A66C72BF(shopType: number | string, key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1FC25AEB5F76B38D | Since: 1311
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAwardAcquireCost() instead
 */
export declare function itemdatabaseGetAwardAcquireCost(award: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x388088BFF3681189 | Since: 1232
 *
 * @deprecated Use itemdatabase._0x388088BFF3681189() instead
 */
export declare function _0x388088BFF3681189(bundle: number | string, costtype: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3A0B667ABFF87F6E | Since: 1207
 *
 * @deprecated Use itemdatabase._0x3A0B667ABFF87F6E() instead
 */
export declare function _0x3A0B667ABFF87F6E(): boolean;
/**
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 *
 * Hash: 0x48229CE0C7938237 | Since: 1207
 *
 * @deprecated Use itemdatabase._0x48229CE0C7938237() instead
 */
export declare function _0x48229CE0C7938237(award: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x537A0555F62CA01A | Since: 1436
 *
 * @deprecated Use itemdatabase._0x537A0555F62CA01A() instead
 */
export declare function _0x537A0555F62CA01A(key: number | string): boolean;
/**
 * Returns Item Count
 *
 * Hash: 0x799FCD53358ED5FA | Since: 1355
 *
 * @deprecated Use itemdatabase._0x799FCD53358ED5FA() instead
 */
export declare function _0x799FCD53358ED5FA(bundle: any): number;
/**
 * No comment provided
 *
 * Hash: 0x7A35A72A692BE9DB | Since: 1207
 *
 * @deprecated Use itemdatabase._0x7A35A72A692BE9DB() instead
 */
export declare function _0x7A35A72A692BE9DB(): number;
/**
 * No comment provided
 *
 * Hash: 0x8870895BA5ED9385 | Since: 1232
 *
 * @deprecated Use itemdatabase._0x8870895BA5ED9385() instead
 */
export declare function _0x8870895BA5ED9385(key: number | string, tagType: number | string, outData: any): number;
/**
 * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
 *
 * Hash: 0x8D029948CA29409B | Since: 1207
 *
 * @deprecated Use itemdatabase._0x8D029948CA29409B() instead
 */
export declare function _0x8D029948CA29409B(award: number | string, index: number, outData: any): boolean;
/**
 * Returns Pathset Hash
 *
 * Hash: 0xAA29A5F13B2C20B2 | Since: 1232
 *
 * @deprecated Use itemdatabase._0xAA29A5F13B2C20B2() instead
 */
export declare function _0xAA29A5F13B2C20B2(): number;
/**
 * No comment provided
 *
 * Hash: 0xC4146375D8A0B374 | Since: 1355
 *
 * @deprecated Use itemdatabase._0xC4146375D8A0B374() instead
 */
export declare function _0xC4146375D8A0B374(bundle: any, index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD076DB9B96FAADF1 | Since: 1311
 *
 * @deprecated Use itemdatabase._0xD076DB9B96FAADF1() instead
 */
export declare function _0xD076DB9B96FAADF1(award: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDBEADA0DF5F9AB9F | Since: 1355
 *
 * @deprecated Use itemdatabase._0xDBEADA0DF5F9AB9F() instead
 */
export declare function _0xDBEADA0DF5F9AB9F(layout: number | string, index: number, outMenuKey: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x856FF92C57742AE5 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseCanEquipItemOnCategory() instead
 */
export declare function itemdatabaseCanEquipItemOnCategory(key: number | string, category: number | string, slotId: number | string): boolean;
/**
 * Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
 *
 * Hash: 0x71EFA7999AE79408 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseCreateItemCollection() instead
 */
export declare function itemdatabaseCreateItemCollection(data: any, size: number, comparisonType: number): number;
/**
 * Params: tag = TAG_ITEM_PROPERTY (tagType(?))
 *
 * Hash: 0x99C6EA66DFE73757 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseDoesBundleHaveTag() instead
 */
export declare function itemdatabaseDoesBundleHaveTag(bundle: number | string, tag: number | string, tagType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF5FB5605AD56856 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseDoesItemHaveTag() instead
 */
export declare function itemdatabaseDoesItemHaveTag(item: number | string, tag: number | string, tagType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74F7928816E4E181 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutAcquireCost() instead
 */
export declare function itemdatabaseFilloutAcquireCost(key: number | string, costtype: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF27F01BBF5ACD3F3 | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutAwardAcquireCost() instead
 */
export declare function itemdatabaseFilloutAwardAcquireCost(award: number | string, costtype: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x121D2005DD64496B | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutAwardItemInfo() instead
 */
export declare function itemdatabaseFilloutAwardItemInfo(award: number | string, index: number, outData: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB542632693D53408 | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutBundle() instead
 */
export declare function itemdatabaseFilloutBundle(bundle: number | string, costtype: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74C3B1093728D263 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutBundleUiData() instead
 */
export declare function itemdatabaseFilloutBundleUiData(bundle: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB52E20F6767A09A2 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutBuyAwardAcquireCosts() instead
 */
export declare function itemdatabaseFilloutBuyAwardAcquireCosts(award: number | string, outData: any, outUnk: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF8D09EF8CE61D7BF | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutBuyAwardUiData() instead
 */
export declare function itemdatabaseFilloutBuyAwardUiData(award: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAD73B614DF26CF8A | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutItem() instead
 */
export declare function itemdatabaseFilloutItem(key: number | string, costtype: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9379BE60DC55BBE6 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutItemEffectIds() instead
 */
export declare function itemdatabaseFilloutItemEffectIds(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x60614A0AB580A2B5 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutModifier() instead
 */
export declare function itemdatabaseFilloutModifier(key: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40C5D95818823C94 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutPriceModifierByKey() instead
 */
export declare function itemdatabaseFilloutPriceModifierByKey(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4776EFD78F75C23F | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutSatchelData() instead
 */
export declare function itemdatabaseFilloutSatchelData(key: number | string, outSatchelItemSize: number): boolean;
/**
 * Params: sellType = SELL_SHOP_DEFAULT
 *
 * Hash: 0x7A62A2EEDE1C3766 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutSellPrice() instead
 */
export declare function itemdatabaseFilloutSellPrice(key: number | string, sellType: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A11D6EEA17165B0 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutTagData() instead
 */
export declare function itemdatabaseFilloutTagData(key: number | string, outData: any, outIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB86F7CC2DC67AC60 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseFilloutUiData() instead
 */
export declare function itemdatabaseFilloutUiData(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6772A83C67A25775 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAcquireCost() instead
 */
export declare function itemdatabaseGetAcquireCost(key: number | string, index: number, outData: any): boolean;
/**
 * Returns the number of <Item>s <acquirecosts> has from the key in catalog_sp.ymt
 *
 * Hash: 0x01FDDAD392D04144 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAcquireCostsCount() instead
 */
export declare function itemdatabaseGetAcquireCostsCount(key: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xDEE7B3C76ED664BE | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAcquireCostsCountFromCostType() instead
 */
export declare function itemdatabaseGetAcquireCostsCountFromCostType(key: number | string, costtype: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x12DF9C58201DD19A | Since: 1311
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAwardAcquireCostCount() instead
 */
export declare function itemdatabaseGetAwardAcquireCostCount(key: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF540239F9937033B | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAwardAcquireCostCountFromCostType() instead
 */
export declare function itemdatabaseGetAwardAcquireCostCountFromCostType(award: number | string, costtype: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE81D0378A384E755 | Since: 1232
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAwardCostModifiers() instead
 */
export declare function itemdatabaseGetAwardCostModifiers(award: number | string, outData: any): boolean;
/**
 * Returns iAwardItemCount
 *
 * Hash: 0x3FAA928A79591761 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetAwardItemCount() instead
 */
export declare function itemdatabaseGetAwardItemCount(award: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA97EE5E4589FCF5A | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetBundleAcquireCostModifiers() instead
 */
export declare function itemdatabaseGetBundleAcquireCostModifiers(bundle: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x891A45960B6B768A | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetBundleId() instead
 */
export declare function itemdatabaseGetBundleId(bundle: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3332695B01015DF9 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetBundleItemCount() instead
 */
export declare function itemdatabaseGetBundleItemCount(bundleId: number, data: any): number;
/**
 * No comment provided
 *
 * Hash: 0x5D48A77E4B668B57 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetBundleItemInfo() instead
 */
export declare function itemdatabaseGetBundleItemInfo(bundleId: number, data: any, index: number, outBundle: number | string): boolean;
/**
 * Returns (collection?) size/index (?)
 * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
 *
 * Hash: 0xD389A2549C4EFB30 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetCollectionSize() instead
 */
export declare function itemdatabaseGetCollectionSize(collectionId: number): number;
/**
 * Params: p2 can be a component item hash
 *
 * Hash: 0x8750F69A720C2E41 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetComponentItem() instead
 */
export declare function itemdatabaseGetComponentItem(collectionId: number, index: number, outKey: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2970D1D6BFCF9B46 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetFitsSlotCount() instead
 */
export declare function itemdatabaseGetFitsSlotCount(category: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x77210C146CED5261 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetFitsSlotInfo() instead
 */
export declare function itemdatabaseGetFitsSlotInfo(category: number | string, index: number, outSlotId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x44915068579D7710 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetHasSlotCount() instead
 */
export declare function itemdatabaseGetHasSlotCount(category: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x8A9BD0DB7E8376CF | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetHasSlotInfo() instead
 */
export declare function itemdatabaseGetHasSlotInfo(category: number | string, index: number, outSlotId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF4452CE83118C738 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetItemPathset() instead
 */
export declare function itemdatabaseGetItemPathset(key: number | string, defaultPathset: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x4EB37AAB79AB0C48 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetItemPriceModifiers() instead
 */
export declare function itemdatabaseGetItemPriceModifiers(key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6111B8F9413F413A | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetItemTagType() instead
 */
export declare function itemdatabaseGetItemTagType(item: number | string, tag: number | string): number;
/**
 * Returns an alternative cost hash to COST_SHOP_DEFAULT
 *
 * Hash: 0xCB92EC9C004732B4 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetModifiedPrice() instead
 */
export declare function itemdatabaseGetModifiedPrice(key: number | string, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5AAAF40E9B224F5E | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetNumberOfModifiedPrices() instead
 */
export declare function itemdatabaseGetNumberOfModifiedPrices(key: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x1289D8315235856D | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetNumberOfModifiers() instead
 */
export declare function itemdatabaseGetNumberOfModifiers(key: number | string): number;
/**
 * _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
 *
 * Hash: 0xEF254F1A4C08B7E6 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetPriorityAccessAward() instead
 */
export declare function itemdatabaseGetPriorityAccessAward(award: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC568B1A0F17C7025 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopInventoriesItemsCount() instead
 */
export declare function itemdatabaseGetShopInventoriesItemsCount(shopType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x4A79B41B4EB91F4E | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopInventoriesItemInfo() instead
 */
export declare function itemdatabaseGetShopInventoriesItemInfo(shopType: number | string, index: number, outData: any): boolean;
/**
 * Same Native Function as 0x17721003A66C72BF
 *
 * Hash: 0xCFB06801F5099B25 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopInventoriesItemInfoByKey() instead
 */
export declare function itemdatabaseGetShopInventoriesItemInfoByKey(shopType: number | string, key: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76C752D788A76813 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopInventoriesRequirementGroupInfo() instead
 */
export declare function itemdatabaseGetShopInventoriesRequirementGroupInfo(shopType: number | string, key: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0EA5C031AE5539F | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopInventoriesRequirementInfo() instead
 */
export declare function itemdatabaseGetShopInventoriesRequirementInfo(shopType: number | string, key: number | string, groupIndex: number, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x66A6D76B6BB999B4 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutInfo() instead
 */
export declare function itemdatabaseGetShopLayoutInfo(layout: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD66114469978B55B | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutMenuInfoById() instead
 */
export declare function itemdatabaseGetShopLayoutMenuInfoById(layout: number | string, menu: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF04247092F193B75 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutMenuInfoByIndex() instead
 */
export declare function itemdatabaseGetShopLayoutMenuInfoByIndex(layout: number | string, menu: number | string, index: number, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A60570657A7B635 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutMenuPageKey() instead
 */
export declare function itemdatabaseGetShopLayoutMenuPageKey(layout: number | string, menu: number | string, index: number, outPageKey: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB347C100DF0C9B7F | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutPageInfoByKey() instead
 */
export declare function itemdatabaseGetShopLayoutPageInfoByKey(layout: number | string, pageKey: number | string, outData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF32BEF578B3DBAE8 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutPageItemKey() instead
 */
export declare function itemdatabaseGetShopLayoutPageItemKey(layout: number | string, pageKey: number | string, index: number, outItemKey: number | string, outMenuId: number, outLayout: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x86FCB565CCA0CFA7 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseGetShopLayoutRootMenuInfo() instead
 */
export declare function itemdatabaseGetShopLayoutRootMenuInfo(layout: number | string, index: number, outData: any): boolean;
/**
 * Params: mode is 0
 *
 * Hash: 0x4308812A6E9CA62E | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsBundleValid() instead
 */
export declare function itemdatabaseIsBundleValid(bundle: number | string, mode: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x337F88E3A063995E | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsIntrinsicItem() instead
 */
export declare function itemdatabaseIsIntrinsicItem(key: number | string): boolean;
/**
 * Params: mode is 0
 *
 * Hash: 0x6D5D51B188333FD1 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsKeyValid() instead
 */
export declare function itemdatabaseIsKeyValid(key: number | string, mode: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x337F88E3A063995F | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsOverpoweredItem() instead
 */
export declare function itemdatabaseIsOverpoweredItem(key: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00B9507D8E1D8716 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsShopKeyValid() instead
 */
export declare function itemdatabaseIsShopKeyValid(shopType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3AFE5182C45A84F6 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseIsShopLayoutKeyValid() instead
 */
export declare function itemdatabaseIsShopLayoutKeyValid(layout: number | string): boolean;
/**
 * Returns docData.iNumTotalLabelTypes
 *
 * Hash: 0xCEC6A41E8910486A | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseLocalizationGetNumLabelTypes() instead
 */
export declare function itemdatabaseLocalizationGetNumLabelTypes(): number;
/**
 * Returns iNumValuesForType
 *
 * Hash: 0x49885D82A13EEAEA | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseLocalizationGetNumValues() instead
 */
export declare function itemdatabaseLocalizationGetNumValues(): number;
/**
 * Returns LabelType
 *
 * Hash: 0xCABF5D41D0073D4A | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseLocalizationGetType() instead
 */
export declare function itemdatabaseLocalizationGetType(): any;
/**
 * No comment provided
 *
 * Hash: 0x9AE5610FDCED6EA7 | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseLocalizationGetValue() instead
 */
export declare function itemdatabaseLocalizationGetValue(label: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xCBB7B6EDFA933ADE | Since: 1207
 *
 * @deprecated Use itemdatabase.itemdatabaseReleaseItemCollection() instead
 */
export declare function itemdatabaseReleaseItemCollection(collectionId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xABE74510883C7950 | Since: 1207
 *
 * @deprecated Use itemset.addToItemset() instead
 */
export declare function addToItemset(entity: number | Entity, itemset: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85F3A86CA9021FB0 | Since: 1207
 *
 * @deprecated Use itemset.cleanItemset() instead
 */
export declare function cleanItemset(itemset: any): void;
/**
 * No comment provided
 *
 * Hash: 0xA1AF16083320065A | Since: 1207
 *
 * @deprecated Use itemset.createItemset() instead
 */
export declare function createItemset(): any;
/**
 * No comment provided
 *
 * Hash: 0x712BC69F10549B92 | Since: 1207
 *
 * @deprecated Use itemset.destroyItemset() instead
 */
export declare function destroyItemset(itemset: any): void;
/**
 * No comment provided
 *
 * Hash: 0x275A2E2C0FAB7612 | Since: 1207
 *
 * @deprecated Use itemset.getIndexedItemInItemset() instead
 */
export declare function getIndexedItemInItemset(index: number, itemset: any): number;
/**
 * No comment provided
 *
 * Hash: 0x9FC3CDB5CE815901 | Since: 1207
 *
 * @deprecated Use itemset.getIndexedScenarioPointIndexInItemset() instead
 */
export declare function getIndexedScenarioPointIndexInItemset(index: number, itemset: any): any;
/**
 * No comment provided
 *
 * Hash: 0x55F2E375AC6018A9 | Since: 1207
 *
 * @deprecated Use itemset.getItemsetSize() instead
 */
export declare function getItemsetSize(itemset: any): number;
/**
 * No comment provided
 *
 * Hash: 0xD1503C2EE2FE688C | Since: 1207
 *
 * @deprecated Use itemset.isInItemset() instead
 */
export declare function isInItemset(entity: number | Entity, itemset: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD30765D153EF5C76 | Since: 1207
 *
 * @deprecated Use itemset.isItemsetValid() instead
 */
export declare function isItemsetValid(itemset: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC5BAA432B429DC24 | Since: 1207
 *
 * @deprecated Use itemset.removeFromItemset() instead
 */
export declare function removeFromItemset(entity: number | Entity, itemset: any): void;
/**
 * No comment provided
 *
 * Hash: 0x20A4BF0E09BEE146 | Since: 1207
 *
 * @deprecated Use itemset.clearItemset() instead
 */
export declare function clearItemset(itemset: any): void;
/**
 * No comment provided
 *
 * Hash: 0x0E3BDEED21BEB945 | Since: 1207
 *
 * @deprecated Use law.addBounty() instead
 */
export declare function addBounty(player: number | string | Player, itemValueAmount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x69E181772886F48B | Since: 1207
 *
 * @deprecated Use law.areWitnessesActive() instead
 */
export declare function areWitnessesActive(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC76F252371150D9A | Since: 1207
 *
 * @deprecated Use law.clearBounty() instead
 */
export declare function clearBounty(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xBCC6DC59E32A2BDC | Since: 1207
 *
 * @deprecated Use law.clearPlayerPastCrimes() instead
 */
export declare function clearPlayerPastCrimes(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x062B4A4A3396351D | Since: 1207
 *
 * @deprecated Use law.clearWantedScore() instead
 */
export declare function clearWantedScore(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x54310AAB97B92816 | Since: 1207
 *
 * @deprecated Use law.getBounty() instead
 */
export declare function getBounty(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x532C5FDDB986EE5C | Since: 1207
 *
 * @deprecated Use law.getPlayerRegisteredCrime() instead
 */
export declare function getPlayerRegisteredCrime(player: number | string | Player, crimeType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDD5FD601481F648B | Since: 1207
 *
 * @deprecated Use law.getWantedScore() instead
 */
export declare function getWantedScore(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xAD401C63158ACBAA | Since: 1207
 *
 * @deprecated Use law.isLawIncidentActive() instead
 */
export declare function isLawIncidentActive(player: number | string | Player): boolean;
/**
 * Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
 *
 * Hash: 0xC08E804C91F47C80 | Since: 1207
 *
 * @deprecated Use law.numCrimesSuppressed() instead
 */
export declare function numCrimesSuppressed(player: number | string | Player, crimeType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x2728C77FBC4B9796 | Since: 1207
 *
 * @deprecated Use law.resetWantedForNewIncident() instead
 */
export declare function resetWantedForNewIncident(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x093A9D1F72DF0D19 | Since: 1207
 *
 * @deprecated Use law.setBounty() instead
 */
export declare function setBounty(player: number | string | Player, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDE5FAA741A781F73 | Since: 1207
 *
 * @deprecated Use law.setDisableDisturbanceCrimes() instead
 */
export declare function setDisableDisturbanceCrimes(player: number | string | Player): void;
/**
 * Default range is 1.0f
 *
 * Hash: 0xFEC85339AACA2A35 | Since: 1207
 *
 * @deprecated Use law.setLawSenseRangeModifier() instead
 */
export declare function setLawSenseRangeModifier(player: number | string | Player, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE0FA74AA3CCE650B | Since: 1207
 *
 * @deprecated Use law.setPlayerArrestedInRegion() instead
 */
export declare function setPlayerArrestedInRegion(player: number | string | Player, lawRegionHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x73BAD7B2F2DB50DE | Since: 1207
 *
 * @deprecated Use law.setPlayerTurnedInBountyInRegion() instead
 */
export declare function setPlayerTurnedInBountyInRegion(player: number | string | Player, lawRegionHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x362086B911657B1A | Since: 1207
 *
 * @deprecated Use law.setPostponeDisturbanceCrimesDuringCombat() instead
 */
export declare function setPostponeDisturbanceCrimesDuringCombat(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xA80FF73F772ACF6A | Since: 1207
 *
 * @deprecated Use law.setWantedScore() instead
 */
export declare function setWantedScore(player: number | string | Player, intensity: number): void;
/**
 * crimeType: see _REPORT_CRIME
 *
 * Hash: 0x785177E4D57D7389 | Since: 1207
 *
 * @deprecated Use law.suppressCrimeThisFrame() instead
 */
export declare function suppressCrimeThisFrame(player: number | string | Player, crimeType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x00DB0BC05E3FAA4E | Since: 1207
 *
 * @deprecated Use law._0x00DB0BC05E3FAA4E() instead
 */
export declare function _0x00DB0BC05E3FAA4E(ped: number | Ped, bitset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x018F30D762E62DF8 | Since: 1207
 *
 * @deprecated Use law._0x018F30D762E62DF8() instead
 */
export declare function _0x018F30D762E62DF8(ped: number | Ped): any;
/**
 * Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
 * _REPORT_*
 *
 * Hash: 0x07E8B8B20570271C | Since: 1207
 *
 * @deprecated Use law._0x07E8B8B20570271C() instead
 */
export declare function _0x07E8B8B20570271C(player: number | string | Player): void;
/**
 * Only used in net_fetch R* Script
 *
 * Hash: 0x0BDFEBCF40A5F7E3 | Since: 1207
 *
 * @deprecated Use law._0x0BDFEBCF40A5F7E3() instead
 */
export declare function _0x0BDFEBCF40A5F7E3(crimeType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x0C392DB374655176 | Since: 1207
 *
 * @deprecated Use law._0x0C392DB374655176() instead
 */
export declare function _0x0C392DB374655176(pos: Vector3, itemSet: any): void;
/**
 * Only used in sisikapenitentiary R* Script: name = SISIKA
 * _IS_G* or _IS_H*
 *
 * Hash: 0x0DBACA9C38C9A686 | Since: 1207
 *
 * @deprecated Use law._0x0DBACA9C38C9A686() instead
 */
export declare function _0x0DBACA9C38C9A686(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EAF918F751F27BA | Since: 1207
 *
 * @deprecated Use law._0x0EAF918F751F27BA() instead
 */
export declare function _0x0EAF918F751F27BA(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F230DE0DDBE3649 | Since: 1207
 *
 * @deprecated Use law._0x0F230DE0DDBE3649() instead
 */
export declare function _0x0F230DE0DDBE3649(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x148E7AC8141C9E64 | Since: 1207
 *
 * @deprecated Use law._0x148E7AC8141C9E64() instead
 */
export declare function _0x148E7AC8141C9E64(player: number | string | Player): number;
/**
 * Params: p0 either 0, 1 or -1 in R* Scripts
 * Set to 0 called together with _SUPPRESS_CRIME
 *
 * Hash: 0x15ABD5004CAD2D99 | Since: 1207
 *
 * @deprecated Use law._0x15ABD5004CAD2D99() instead
 */
export declare function _0x15ABD5004CAD2D99(): void;
/**
 * Only used in resapwn_dump_body R* Script
 *
 * Hash: 0x2001687F9562FD9D | Since: 1207
 *
 * @deprecated Use law._0x2001687F9562FD9D() instead
 */
export declare function _0x2001687F9562FD9D(): void;
/**
 * No comment provided
 *
 * Hash: 0x21213B833EF4DAE7 | Since: 1207
 *
 * @deprecated Use law._0x21213B833EF4DAE7() instead
 */
export declare function _0x21213B833EF4DAE7(player: number | string | Player, ped: number | Ped, outCoords: Vector3): void;
/**
 * Used in SP only
 * _REPORT_*
 *
 * Hash: 0x22741652985C84D0 | Since: 1207
 *
 * @deprecated Use law._0x22741652985C84D0() instead
 */
export declare function _0x22741652985C84D0(player: number | string | Player, lawRegionHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x26934083D3F2579C | Since: 1207
 *
 * @deprecated Use law._0x26934083D3F2579C() instead
 */
export declare function _0x26934083D3F2579C(player: number | string | Player): boolean;
/**
 * Only used in R* Script fm_mission_controller
 * _CLEAR_WANTED_*
 *
 * Hash: 0x292AD61A33A7A485 | Since: 1207
 *
 * @deprecated Use law._0x292AD61A33A7A485() instead
 */
export declare function _0x292AD61A33A7A485(): void;
/**
 * No comment provided
 *
 * Hash: 0x29CD4896ECB66C12 | Since: 1207
 *
 * @deprecated Use law._0x29CD4896ECB66C12() instead
 */
export declare function _0x29CD4896ECB66C12(): void;
/**
 * Only used in R* SP Script av_amb_camp_robbery
 *
 * Hash: 0x318F0F9A4426CFA2 | Since: 1207
 *
 * @deprecated Use law._0x318F0F9A4426CFA2() instead
 */
export declare function _0x318F0F9A4426CFA2(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x331D349E0380B097 | Since: 1207
 *
 * @deprecated Use law._0x331D349E0380B097() instead
 */
export declare function _0x331D349E0380B097(): void;
/**
 * No comment provided
 *
 * Hash: 0x3738B784DDD35CC6 | Since: 1207
 *
 * @deprecated Use law._0x3738B784DDD35CC6() instead
 */
export declare function _0x3738B784DDD35CC6(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3852237A3D9DF145 | Since: 1207
 *
 * @deprecated Use law._0x3852237A3D9DF145() instead
 */
export declare function _0x3852237A3D9DF145(): void;
/**
 * _CLEAR*
 *
 * Hash: 0x390710D2DAFA6BFF | Since: 1207
 *
 * @deprecated Use law._0x390710D2DAFA6BFF() instead
 */
export declare function _0x390710D2DAFA6BFF(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x3D2674828A4E6B3C | Since: 1207
 *
 * @deprecated Use law._0x3D2674828A4E6B3C() instead
 */
export declare function _0x3D2674828A4E6B3C(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40851BCC33ACD9AB | Since: 1207
 *
 * @deprecated Use law._0x40851BCC33ACD9AB() instead
 */
export declare function _0x40851BCC33ACD9AB(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x522F74636DF10201 | Since: 1207
 *
 * @deprecated Use law._0x522F74636DF10201() instead
 */
export declare function _0x522F74636DF10201(player: number | string | Player, itemSet: any): void;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x5E6F375CA101C108 | Since: 1207
 *
 * @deprecated Use law._0x5E6F375CA101C108() instead
 */
export declare function _0x5E6F375CA101C108(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x61B98367D93F012F | Since: 1207
 *
 * @deprecated Use law._0x61B98367D93F012F() instead
 */
export declare function _0x61B98367D93F012F(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x6ABC50979655BEE7 | Since: 1207
 *
 * @deprecated Use law._0x6ABC50979655BEE7() instead
 */
export declare function _0x6ABC50979655BEE7(player: number | string | Player, crimeType: number | string): void;
/**
 * Only used in shoprobberies
 *
 * Hash: 0x7351DA734F989F4E | Since: 1207
 *
 * @deprecated Use law._0x7351DA734F989F4E() instead
 */
export declare function _0x7351DA734F989F4E(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7803436E68C32B26 | Since: 1207
 *
 * @deprecated Use law._0x7803436E68C32B26() instead
 */
export declare function _0x7803436E68C32B26(): void;
/**
 * _SET_DISPATCH_*
 *
 * Hash: 0x7EF2A2FE38D74456 | Since: 1207
 *
 * @deprecated Use law._0x7EF2A2FE38D74456() instead
 */
export declare function _0x7EF2A2FE38D74456(flag: number): void;
/**
 * Only used in R* Script long_update
 * Returns a value thats being subtracted from GET_GAME_TIMER
 *
 * Hash: 0x7FC667F6DDFBCDCC | Since: 1207
 *
 * @deprecated Use law._0x7FC667F6DDFBCDCC() instead
 */
export declare function _0x7FC667F6DDFBCDCC(player: number | string | Player): number;
/**
 * Only used in rcm_gunslinger1_1 R* Script: p0 = 0
 *
 * Hash: 0x82F11E1296996574 | Since: 1207
 *
 * @deprecated Use law._0x82F11E1296996574() instead
 */
export declare function _0x82F11E1296996574(): void;
/**
 * No comment provided
 *
 * Hash: 0x856CE8FDE2416602 | Since: 1207
 *
 * @deprecated Use law._0x856CE8FDE2416602() instead
 */
export declare function _0x856CE8FDE2416602(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x89E005B1662F6E48 | Since: 1207
 *
 * @deprecated Use law._0x89E005B1662F6E48() instead
 */
export declare function _0x89E005B1662F6E48(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95878B13E272EF1F | Since: 1207
 *
 * @deprecated Use law._0x95878B13E272EF1F() instead
 */
export declare function _0x95878B13E272EF1F(entity: number | Entity, ped: number | Ped, pos: Vector3, crimeType: number | string): any;
/**
 * Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
 *
 * Hash: 0x9772395CC73E8D1F | Since: 1207
 *
 * @deprecated Use law._0x9772395CC73E8D1F() instead
 */
export declare function _0x9772395CC73E8D1F(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x987BE590FB9D41E5 | Since: 1207
 *
 * @deprecated Use law._0x987BE590FB9D41E5() instead
 */
export declare function _0x987BE590FB9D41E5(): void;
/**
 * No comment provided
 *
 * Hash: 0x9945A3E2528A02E8 | Since: 1207
 *
 * @deprecated Use law._0x9945A3E2528A02E8() instead
 */
export declare function _0x9945A3E2528A02E8(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9B4C564BFA7CFF37 | Since: 1207
 *
 * @deprecated Use law._0x9B4C564BFA7CFF37() instead
 */
export declare function _0x9B4C564BFA7CFF37(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C5BD8C562565CE6 | Since: 1207
 *
 * @deprecated Use law._0x9C5BD8C562565CE6() instead
 */
export declare function _0x9C5BD8C562565CE6(crimeType: number | string): void;
/**
 * Only used in act_bankrobbery01 R* Script
 *
 * Hash: 0x9C8A2BF37E966464 | Since: 1207
 *
 * @deprecated Use law._0x9C8A2BF37E966464() instead
 */
export declare function _0x9C8A2BF37E966464(player: number | string | Player, itemSet: any): void;
/**
 * No comment provided
 *
 * Hash: 0x9D5C9A5A3321B128 | Since: 1207
 *
 * @deprecated Use law._0x9D5C9A5A3321B128() instead
 */
export declare function _0x9D5C9A5A3321B128(player: number | string | Player): boolean;
/**
 * Only used in shoprobberies R* Scripts
 *
 * Hash: 0x9EF07CFBB19A9733 | Since: 1207
 *
 * @deprecated Use law._0x9EF07CFBB19A9733() instead
 */
export declare function _0x9EF07CFBB19A9733(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB527099D1E1EED49 | Since: 1207
 *
 * @deprecated Use law._0xB527099D1E1EED49() instead
 */
export declare function _0xB527099D1E1EED49(player: number | string | Player, crimeType: number | string): boolean;
/**
 * Called together with REPORT_POLICE_SPOTTED_PLAYER
 *
 * Hash: 0xBD944A3D36E992DE | Since: 1207
 *
 * @deprecated Use law._0xBD944A3D36E992DE() instead
 */
export declare function _0xBD944A3D36E992DE(): void;
/**
 * Only used in rcm_serial_killer1 R* Script
 *
 * Hash: 0xC0DF161950FB101E | Since: 1207
 *
 * @deprecated Use law._0xC0DF161950FB101E() instead
 */
export declare function _0xC0DF161950FB101E(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC310239ACCCF5579 | Since: 1207
 *
 * @deprecated Use law._0xC310239ACCCF5579() instead
 */
export declare function _0xC310239ACCCF5579(): void;
/**
 * No comment provided
 *
 * Hash: 0xC5EB2755FA25F1E9 | Since: 1207
 *
 * @deprecated Use law._0xC5EB2755FA25F1E9() instead
 */
export declare function _0xC5EB2755FA25F1E9(): void;
/**
 * No comment provided
 *
 * Hash: 0xC687A23E166DCF68 | Since: 1207
 *
 * @deprecated Use law._0xC687A23E166DCF68() instead
 */
export declare function _0xC687A23E166DCF68(): any;
/**
 * _GET_DISPATCH_*
 *
 * Hash: 0xC7DC5A0A7DF608CB | Since: 1207
 *
 * @deprecated Use law._0xC7DC5A0A7DF608CB() instead
 */
export declare function _0xC7DC5A0A7DF608CB(flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCBFB4951F2E3934C | Since: 1207
 *
 * @deprecated Use law._0xCBFB4951F2E3934C() instead
 */
export declare function _0xCBFB4951F2E3934C(player: number | string | Player, data: any): void;
/**
 * No comment provided
 *
 * Hash: 0xD6C0A8C7C0B2F82C | Since: 1207
 *
 * @deprecated Use law._0xD6C0A8C7C0B2F82C() instead
 */
export declare function _0xD6C0A8C7C0B2F82C(player: number | string | Player): void;
/**
 * Only used in R* SP Scripts
 * Params: p2 either 1 or 2
 *
 * Hash: 0xD7494DED50C6EF52 | Since: 1207
 *
 * @deprecated Use law._0xD7494DED50C6EF52() instead
 */
export declare function _0xD7494DED50C6EF52(player: number | string | Player, crimeType: number | string): void;
/**
 * Only used in R* SP Scripts
 * Params: p1 = true, p2 = false
 *
 * Hash: 0xDA1A9ADC4E3D4B16 | Since: 1207
 *
 * @deprecated Use law._0xDA1A9ADC4E3D4B16() instead
 */
export declare function _0xDA1A9ADC4E3D4B16(itemSet: any): void;
/**
 * crimeType: see _REPORT_CRIME
 *
 * Hash: 0xDAEFDFDB2AEECE37 | Since: 1207
 *
 * @deprecated Use law._0xDAEFDFDB2AEECE37() instead
 */
export declare function _0xDAEFDFDB2AEECE37(crimeType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xDCF12B89624AAC96 | Since: 1207
 *
 * @deprecated Use law._0xDCF12B89624AAC96() instead
 */
export declare function _0xDCF12B89624AAC96(): void;
/**
 * No comment provided
 *
 * Hash: 0xDDCE8E960D1DE240 | Since: 1207
 *
 * @deprecated Use law.setCantLoseLawThisResponse() instead
 */
export declare function setCantLoseLawThisResponse(enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDEA083C16BB91345 | Since: 1207
 *
 * @deprecated Use law._0xDEA083C16BB91345() instead
 */
export declare function _0xDEA083C16BB91345(): void;
/**
 * No comment provided
 *
 * Hash: 0xE083BEDA81709891 | Since: 1207
 *
 * @deprecated Use law._0xE083BEDA81709891() instead
 */
export declare function _0xE083BEDA81709891(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xE4D6E45F491A66CB | Since: 1207
 *
 * @deprecated Use law._0xE4D6E45F491A66CB() instead
 */
export declare function _0xE4D6E45F491A66CB(player: number | string | Player): any;
/**
 * Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
 * Only used in R* SP Scripts, mostly used in train_fast_travel_core
 *
 * Hash: 0xE94B5E938619712E | Since: 1207
 *
 * @deprecated Use law._0xE94B5E938619712E() instead
 */
export declare function _0xE94B5E938619712E(): void;
/**
 * Only used in R* SP Scripts
 * Params: p1 = 0
 *
 * Hash: 0xE9AC8466ABE484BB | Since: 1207
 *
 * @deprecated Use law._0xE9AC8466ABE484BB() instead
 */
export declare function _0xE9AC8466ABE484BB(): void;
/**
 * Returns p1 value for 0xE4D6E45F491A66CB
 *
 * Hash: 0xE9EB79CBF9C0F58A | Since: 1207
 *
 * @deprecated Use law._0xE9EB79CBF9C0F58A() instead
 */
export declare function _0xE9EB79CBF9C0F58A(player: number | string | Player): number;
/**
 * _SET_C* - _SET_D*
 *
 * Hash: 0xEDFC6C1FD1C964F5 | Since: 1207
 *
 * @deprecated Use law._0xEDFC6C1FD1C964F5() instead
 */
export declare function _0xEDFC6C1FD1C964F5(player: number | string | Player, crimeType: number | string, bounty: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF46108C50A22B029 | Since: 1207
 *
 * @deprecated Use law._0xF46108C50A22B029() instead
 */
export declare function _0xF46108C50A22B029(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF611DE44AEB36A1D | Since: 1207
 *
 * @deprecated Use law._0xF611DE44AEB36A1D() instead
 */
export declare function _0xF611DE44AEB36A1D(crimeType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xFFEBE5AA96BC2E4E | Since: 1207
 *
 * @deprecated Use law._0xFFEBE5AA96BC2E4E() instead
 */
export declare function _0xFFEBE5AA96BC2E4E(ped: number | Ped, crimeType: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x10827B5A0AAC56A7 | Since: 1207
 *
 * @deprecated Use law.addWitnessResponse() instead
 */
export declare function addWitnessResponse(player: number | string | Player, crimeType: number | string, pedGroup: number | Ped): void;
/**
 * Only used in rcm_homerob00 R* Script
 *
 * Hash: 0xECE3C34B270428D5 | Since: 1207
 *
 * @deprecated Use law.areAnyLawPedsInvestigating() instead
 */
export declare function areAnyLawPedsInvestigating(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0FBFB9AB15F7734 | Since: 1207
 *
 * @deprecated Use law.areInvestigatorsActive() instead
 */
export declare function areInvestigatorsActive(player: number | string | Player, areInvestigatorsActive: boolean): boolean;
/**
 * Only used in trainrobbery_ambient R* Script
 *
 * Hash: 0xA22C46F16359471C | Since: 1207
 *
 * @deprecated Use law.areLawPedsEnabledForTrain() instead
 */
export declare function areLawPedsEnabledForTrain(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BB6DE7D23C60626 | Since: 1207
 *
 * @deprecated Use law.areWitnessesPending() instead
 */
export declare function areWitnessesPending(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F9DE75680275C9F | Since: 1207
 *
 * @deprecated Use law.createGuardZone() instead
 */
export declare function createGuardZone(name: string): void;
/**
 * Returns true when investigation creation was successful
 *
 * Hash: 0x0D4B77E862475ED3 | Since: 1311
 *
 * @deprecated Use law.createGuardZoneForEntity() instead
 */
export declare function createGuardZoneForEntity(guardZoneName: string, entity: number | Entity, pos: Vector3): boolean;
/**
 * dispatchResponseHash: see common/data/dispatchresponses/..
 *
 * Hash: 0x75CBF20BA47E4F89 | Since: 1207
 *
 * @deprecated Use law.createLawDispatchResponseForCoords() instead
 */
export declare function createLawDispatchResponseForCoords(pos: Vector3, dispatchResponseHash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x26D558692B25DD95 | Since: 1207
 *
 * @deprecated Use law.disableGuardZone() instead
 */
export declare function disableGuardZone(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC805EB785824F712 | Since: 1207
 *
 * @deprecated Use law.enableDispatchLaw() instead
 */
export declare function enableDispatchLaw(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x710448D44A64C213 | Since: 1207
 *
 * @deprecated Use law.enableDispatchLaw2() instead
 */
export declare function enableDispatchLaw2(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x956510F8C36B5C64 | Since: 1207
 *
 * @deprecated Use law.forceLawOnLocalPlayerImmediately() instead
 */
export declare function forceLawOnLocalPlayerImmediately(): void;
/**
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * Hash: 0x76CF93D4B416B288 | Since: 1207
 *
 * @deprecated Use law.getBountyHunterGlobalCooldown() instead
 */
export declare function getBountyHunterGlobalCooldown(): number;
/**
 * Returns bounty (increment) value
 *
 * Hash: 0x35E5E21F9159849C | Since: 1207
 *
 * @deprecated Use law.getCrimeBountyAmountByType() instead
 */
export declare function getCrimeBountyAmountByType(crimeType: number | string): number;
/**
 * See _REPORT_CRIME
 *
 * Hash: 0x259CE340A8738814 | Since: 1207
 *
 * @deprecated Use law.getHudPlayerCrimeType() instead
 */
export declare function getHudPlayerCrimeType(player: number | string | Player): number;
/**
 * Returns the amount of time (probably in game minutes) since last seen by the law / left the wanted radius
 *
 * Hash: 0x717DA2281DF90855 | Since: 1207
 *
 * @deprecated Use law.getTimeSinceLastSeenByLaw() instead
 */
export declare function getTimeSinceLastSeenByLaw(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xD743C4293F47AFAD | Since: 1207
 *
 * @deprecated Use law.isGuardPedInvestigating() instead
 */
export declare function isGuardPedInvestigating(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0B67BAD53C35BD9 | Since: 1207
 *
 * @deprecated Use law.lawWitnessResponseTask() instead
 */
export declare function lawWitnessResponseTask(pedGroup1: number | Ped, ped: number | Ped, pedGroup2: number | Ped, pos: Vector3, crimeType: number | string): boolean;
/**
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * Hash: 0xC61EDEBF16CD9668 | Since: 1207
 *
 * @deprecated Use law.pauseBountyHunterCooldown() instead
 */
export declare function pauseBountyHunterCooldown(): void;
/**
 * No comment provided
 *
 * Hash: 0x67EBDD958835956C | Since: 1207
 *
 * @deprecated Use law.removeGuardZone() instead
 */
export declare function removeGuardZone(name: string): void;
/**
 * crimeType:
 * enum eCrimeType : Hash
 * {
 * CRIME_ACCOMPLICE = 0xAF074F6D,
 * CRIME_ARSON = 0x68134DC7,
 * CRIME_ASSAULT = 0x0BADC882,
 * CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
 * CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
 * CRIME_ASSAULT_HORSE = 0xC4736181,
 * CRIME_ASSAULT_LAW = 0xD7466D7C,
 * CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
 * CRIME_BANK_ROBBERY = 0x6A1ADE3D,
 * CRIME_BURGLARY = 0xA54C77E0,
 * CRIME_CHEATING = 0xA2FF1145,
 * CRIME_DISTURBANCE = 0x5011F613,
 * CRIME_EXPLOSION = 0x3EBA7A37,
 * CRIME_EXPLOSION_POISON = 0x91D0A0E1,
 * CRIME_GRAVE_ROBBERY = 0x971EA5AF,
 * CRIME_HASSLE = 0x58488776,
 * CRIME_HIT_AND_RUN = 0xFF0A3CC4,
 * CRIME_HIT_AND_RUN_LAW = 0x064814AF,
 * CRIME_INTIMIDATION = 0x8319FBAB,
 * CRIME_JACK_HORSE = 0x82F7E4A2,
 * CRIME_JACK_VEHICLE = 0x6B981F4C,
 * CRIME_JAIL_BREAK = 0x12C1D589,
 * CRIME_KIDNAPPING = 0x98F908DB,
 * CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
 * CRIME_LASSO_ASSAULT = 0x56EE5D5A,
 * CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
 * CRIME_LOITERING = 0x6629D2F4,
 * CRIME_LOOTING = 0x55AD2BEB,
 * CRIME_MURDER = 0xE28ECE7E,
 * CRIME_MURDER_ANIMAL = 0x48F59A66,
 * CRIME_MURDER_HORSE = 0xC7261D79,
 * CRIME_MURDER_LAW = 0x7797FCE7,
 * CRIME_MURDER_LIVESTOCK = 0x9569C546,
 * CRIME_MURDER_PLAYER = 0xF5ABD6C9,
 * CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
 * CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
 * CRIME_RESIST_ARREST = 0xDF577BA5,
 * CRIME_ROBBERY = 0xA3BEDE4C,
 * CRIME_SELF_DEFENCE = 0xBD6A0AA3,
 * CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
 * CRIME_STOLEN_GOODS = 0x9A949C79,
 * CRIME_THEFT = 0x72ADE410,
 * CRIME_THEFT_HORSE = 0xBE3A5838,
 * CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
 * CRIME_THEFT_VEHICLE = 0x43A9ECA1,
 * CRIME_THREATEN = 0x941C985A,
 * CRIME_THREATEN_LAW = 0x7F908566,
 * CRIME_TRAIN_ROBBERY = 0x647D2A5A,
 * CRIME_TRAMPLE = 0x45DB39D8,
 * CRIME_TRAMPLE_LAW = 0xF00F266B,
 * CRIME_TRAMPLE_PLAYER = 0x75970C15,
 * CRIME_TRESPASSING = 0xAEDE8E35,
 * CRIME_UNARMED_ASSAULT = 0x5098CC5A,
 * CRIME_VANDALISM = 0x80FDC759,
 * CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
 * CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
 * CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
 * CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
 * };
 *
 * Hash: 0xF60386770878A98F | Since: 1207
 *
 * @deprecated Use law.reportCrime() instead
 */
export declare function reportCrime(player: number | string | Player, crimeType: number | string, bounty: number, entity: number | Entity, isKnownSuspect: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9C4352134B2835FB | Since: 1207
 *
 * @deprecated Use law.reportPlayerLawDispatchResponseOverride() instead
 */
export declare function reportPlayerLawDispatchResponseOverride(player: number | string | Player, dispatchResponseHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4B52BF96E225D230 | Since: 1207
 *
 * @deprecated Use law.setAllowDisabledLawResponses() instead
 */
export declare function setAllowDisabledLawResponses(toggle: boolean): void;
/**
 * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
 *
 * Hash: 0xF19706B1F8FFA88F | Since: 1207
 *
 * @deprecated Use law.setBountyHunterGlobalCooldown() instead
 */
export declare function setBountyHunterGlobalCooldown(): void;
/**
 * Force clears local player's wanted level
 *
 * Hash: 0x55F37F5F3F2475E1 | Since: 1207
 *
 * @deprecated Use law.setBountyHunterPursuitCleared() instead
 */
export declare function setBountyHunterPursuitCleared(): void;
/**
 * Note: This native is only used in multiplayer scripts
 * dispatchResponseHash: see update1/common/data/dispatchresponses/..
 *
 * Hash: 0x009CF9A29972C298 | Since: 1207
 *
 * @deprecated Use law.setCustomLawDispatchResponse() instead
 */
export declare function setCustomLawDispatchResponse(dispatchResponseHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x002BABE0B7D53136 | Since: 1207
 *
 * @deprecated Use law.setDispatchMultiplierOverride() instead
 */
export declare function setDispatchMultiplierOverride(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7E7BF59F89FC6C6D | Since: 1207
 *
 * @deprecated Use law.setGuardZonePosition() instead
 */
export declare function setGuardZonePosition(name: string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x2F9005E2EA4E5EE4 | Since: 1207
 *
 * @deprecated Use law.setGuardZonePosition2() instead
 */
export declare function setGuardZonePosition2(name: string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xA8A74AA79FB67159 | Since: 1207
 *
 * @deprecated Use law.setGuardZoneVolumeRegistrationEnd() instead
 */
export declare function setGuardZoneVolumeRegistrationEnd(name: string, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8C598A930F471938 | Since: 1207
 *
 * @deprecated Use law.setGuardZoneVolumeRegistrationStart() instead
 */
export declare function setGuardZoneVolumeRegistrationStart(name: string, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x35815F372D43E1E5 | Since: 1207
 *
 * @deprecated Use law.setGuardZoneVolumeRestricted() instead
 */
export declare function setGuardZoneVolumeRestricted(name: string, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA1B0E6301E2E02A6 | Since: 1207
 *
 * @deprecated Use law.setGuardZoneVolumeThreat() instead
 */
export declare function setGuardZoneVolumeThreat(name: string, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAD3E07C37A7C1ADC | Since: 1207
 *
 * @deprecated Use law.setGuardZoneVolumeWarning() instead
 */
export declare function setGuardZoneVolumeWarning(name: string, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8DE82BC774F3B862 | Since: 1207
 *
 * @deprecated Use law.setLawDisabled() instead
 */
export declare function setLawDisabled(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9BBDCB8DF789EBC1 | Since: 1207
 *
 * @deprecated Use law.setLawRbsVolume() instead
 */
export declare function setLawRbsVolume(player: number | string | Player): void;
/**
 * enum eLawRegion : Hash
 * {
 * LAW_DISPATCH_REGION_NONE = 0,
 * LAW_REGION_AGUASDULCES = 0x2F573EBE,
 * LAW_REGION_ANNESBURG = 0x68CAFD50,
 * LAW_REGION_ARMADILLO = 0xF0B90756,
 * LAW_REGION_BAYOU_NWA = 0x80966B1C,
 * LAW_REGION_BEECHERS_HOPE = 0xE2544977,
 * LAW_REGION_BIG_VALLEY = 0x3DF1559A,
 * LAW_REGION_BLACKWATER = 0x60D4886D,
 * LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
 * LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
 * LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
 * LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
 * LAW_REGION_CALIGA_HALL = 0xF3FE5080,
 * LAW_REGION_CORNWALL = 0xCC4672FA,
 * LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
 * LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
 * LAW_REGION_FORT_WALLACE = 0x0AF25192,
 * LAW_REGION_GREAT_PLAINS = 0xB20573FA,
 * LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
 * LAW_REGION_GRIZZLIES = 0xBB936031,
 * LAW_REGION_GUAMA = 0x200DFF42,
 * LAW_REGION_HEARTLANDS = 0xAD14DA65,
 * LAW_REGION_LAGRAS = 0xC64808D3,
 * LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
 * LAW_REGION_MANICATO = 0x039DB6BF,
 * LAW_REGION_MANZANITA_POST = 0x895E580E,
 * LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
 * LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
 * LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
 * LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
 * LAW_REGION_OUTLAW3 = 0x97A02FC1,
 * LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
 * LAW_REGION_RHODES = 0x89222928,
 * LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
 * LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
 * LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
 * LAW_REGION_SAINT_DENIS = 0x5CF7C268,
 * LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
 * LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
 * LAW_REGION_SISIKA = 0x2B6BBA52,
 * LAW_REGION_STRAWBERRY = 0xDD932620,
 * LAW_REGION_TALL_TREES = 0xD939B758,
 * LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
 * LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
 * LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
 * LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
 * LAW_REGION_VALENTINE = 0xA7A3F0C3,
 * LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
 * LAW_REGION_VAN_HORN = 0x619B528E,
 * LAW_REGION_WAPITI = 0x7A976E02
 * };
 *
 * Hash: 0x4752F68EB7F2D280 | Since: 1207
 *
 * @deprecated Use law.setLawRegion() instead
 */
export declare function setLawRegion(player: number | string | Player, lawRegionHash: number | string, stateHash: number | string): void;
/**
 * behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
 *
 * Hash: 0x819ADD5EF1742F47 | Since: 1207
 *
 * @deprecated Use law.setPedLawBehaviour() instead
 */
export declare function setPedLawBehaviour(ped: number | Ped, behaviour: number): void;
/**
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 *
 * Hash: 0xDB917DA5C6835FCC | Since: 1207
 *
 * @deprecated Use localization.getCurrentLanguage() instead
 */
export declare function getCurrentLanguage(): number;
/**
 * 0 = DATE_FORMAT_DMY
 * 1 = DATE_FORMAT_MDY
 * 2 = DATE_FORMAT_YMD
 *
 * Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
 *
 * Hash: 0x76E30B799EBEEA0F | Since: 1207
 *
 * @deprecated Use localization.localizationGetSystemDateType() instead
 */
export declare function localizationGetSystemDateType(): number;
/**
 * Same return values as GET_CURRENT_LANGUAGE
 *
 * Hash: 0x3C1A05F86AE6ACB5 | Since: 1207
 *
 * @deprecated Use localization.localizationGetSystemLanguage() instead
 */
export declare function localizationGetSystemLanguage(): number;
/**
 * Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
 * _DOES_*
 *
 * Hash: 0x45D50415E4D885FF | Since: 1207
 *
 * @deprecated Use localization.doesCurrentLanguageSupportCondensedStyle() instead
 */
export declare function doesCurrentLanguageSupportCondensedStyle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x64C59DD6834FA942 | Since: 1207
 *
 * @deprecated Use map.addPointToGpsMultiRoute() instead
 */
export declare function addPointToGpsMultiRoute(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x6E6E64788C07D2E0 | Since: 1207
 *
 * @deprecated Use map.allowSonarBlips() instead
 */
export declare function allowSonarBlips(toggle: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
 *
 * Hash: 0x554D9D53F696D002 | Since: 1207
 *
 * @deprecated Use map.blipAddForCoords() instead
 */
export declare function blipAddForCoords(blipHash: number | string, pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x23F74C2FDA6E7C61 | Since: 1207
 *
 * @deprecated Use map.blipAddForEntity() instead
 */
export declare function blipAddForEntity(blipHash: number | string, entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xA486008892065FB9 | Since: 1207
 *
 * @deprecated Use map.blipAddForPickupPlacement() instead
 */
export declare function blipAddForPickupPlacement(blipHash: number | string, pickup: any): number;
/**
 * No comment provided
 *
 * Hash: 0x45F13B7E0A15C880 | Since: 1207
 *
 * @deprecated Use map.blipAddForRadius() instead
 */
export declare function blipAddForRadius(blipHash: number | string, pos: Vector3, radius: number): number;
/**
 * https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
 *
 * Old name: _BLIP_SET_MODIFIER
 *
 * Hash: 0x662D364ABF16DE2F | Since: 1207
 *
 * @deprecated Use map.blipAddModifier() instead
 */
export declare function blipAddModifier(blip: number, modifierHash: number | string): boolean;
/**
 * If modifierHash is 0, ALL modifiers will be removed.
 *
 * Hash: 0xB059D7BD3D78C16F | Since: 1207
 *
 * @deprecated Use map.blipRemoveModifier() instead
 */
export declare function blipRemoveModifier(blip: number, modifierHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1EAA5674B4D181C5 | Since: 1207
 *
 * @deprecated Use map.clearGpsCustomRoute() instead
 */
export declare function clearGpsCustomRoute(): void;
/**
 * Clears the GPS flags.
 *
 * Hash: 0x4D3771237C79FF41 | Since: 1207
 *
 * @deprecated Use map.clearGpsFlags() instead
 */
export declare function clearGpsFlags(): void;
/**
 * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
 *
 * Hash: 0x9E0AB9AAEE87CE28 | Since: 1207
 *
 * @deprecated Use map.clearGpsMultiRoute() instead
 */
export declare function clearGpsMultiRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0x08FDC6F796E350D1 | Since: 1207
 *
 * @deprecated Use map.clearGpsPlayerWaypoint() instead
 */
export declare function clearGpsPlayerWaypoint(): void;
/**
 * If Minimap / Radar should be displayed.
 *
 * Hash: 0x1B3DA717B9AFF828 | Since: 1207
 *
 * @deprecated Use map.displayRadar() instead
 */
export declare function displayRadar(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCD82FA174080B3B1 | Since: 1207
 *
 * @deprecated Use map.doesBlipExist() instead
 */
export declare function doesBlipExist(blip: number): boolean;
/**
 * Doesn't actually return anything.
 *
 * Hash: 0xEE1C7BA69BB74B08 | Since: 1207
 *
 * @deprecated Use map.forceSonarBlipsThisFrame() instead
 */
export declare function forceSonarBlipsThisFrame(): any;
/**
 * No comment provided
 *
 * Hash: 0x201C319797BDA603 | Since: 1207
 *
 * @deprecated Use map.getBlipCoords() instead
 */
export declare function getBlipCoords(blip: number): Vector3;
/**
 * Returns the Blip handle of given Entity.
 *
 * Hash: 0x6D2C41A8BD6D6FD0 | Since: 1207
 *
 * @deprecated Use map.getBlipFromEntity() instead
 */
export declare function getBlipFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x5CD2889B2B381D45 | Since: 1207
 *
 * @deprecated Use map.getMainPlayerBlipId() instead
 */
export declare function getMainPlayerBlipId(): number;
/**
 * No comment provided
 *
 * Hash: 0x46534526B9CD2D17 | Since: 1207
 *
 * @deprecated Use map.isBlipOnMinimap() instead
 */
export declare function isBlipOnMinimap(blip: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x202B1BBFC6AB5EE4 | Since: 1207
 *
 * @deprecated Use map.isWaypointActive() instead
 */
export declare function isWaypointActive(): boolean;
/**
 * Locks the minimap to the specified angle in integer degrees.
 *
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 *
 * Hash: 0x0BFD145EF819FB3A | Since: 1207
 *
 * @deprecated Use map.lockMinimapAngle() instead
 */
export declare function lockMinimapAngle(angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF2C3C9DA47AAA54A | Since: 1207
 *
 * @deprecated Use map.removeBlip() instead
 */
export declare function removeBlip(blip: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEB3CB3386C775D72 | Since: 1207
 *
 * @deprecated Use map.resetMinimapFow() instead
 */
export declare function resetMinimapFow(hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4FF674F5E23D49CE | Since: 1207
 *
 * @deprecated Use map.setBlipCoords() instead
 */
export declare function setBlipCoords(blip: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x0DF2B55F717DDB10 | Since: 1207
 *
 * @deprecated Use map.setBlipFlashes() instead
 */
export declare function setBlipFlashes(blip: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02FF4CF43B7209D1 | Since: 1207
 *
 * @deprecated Use map.setBlipFlashTimer() instead
 */
export declare function setBlipFlashTimer(blip: number, blipType: number, blipHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0A062D6D7C0B2C2C | Since: 1207
 *
 * @deprecated Use map.setBlipNameFromTextFile() instead
 */
export declare function setBlipNameFromTextFile(blip: number, textLabel: string): void;
/**
 * No comment provided
 *
 * Hash: 0x093DD5A31BC2B459 | Since: 1207
 *
 * @deprecated Use map.setBlipNameToPlayerName() instead
 */
export declare function setBlipNameToPlayerName(blip: number, player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x6049966A94FBE706 | Since: 1207
 *
 * @deprecated Use map.setBlipRotation() instead
 */
export declare function setBlipRotation(blip: number, rotation: number): void;
/**
 * only works for BLIP_ADD_FOR_RADIUS AND BLIP_ADD_FOR_AREA, this native works as a radius not really a scale
 *
 * Hash: 0xD38744167B2FA257 | Since: 1207
 *
 * @deprecated Use map.setBlipScale() instead
 */
export declare function setBlipScale(blip: number, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x74F74D3207ED525C | Since: 1207
 *
 * @deprecated Use map.setBlipSprite() instead
 */
export declare function setBlipSprite(blip: number, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF6CEF599FC470B33 | Since: 1207
 *
 * @deprecated Use map.setGpsCustomRouteRender() instead
 */
export declare function setGpsCustomRouteRender(): void;
/**
 * https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
 *
 * Hash: 0x5DE61C90DDECFA2D | Since: 1207
 *
 * @deprecated Use map.setGpsFlags() instead
 */
export declare function setGpsFlags(): void;
/**
 * No comment provided
 *
 * Hash: 0x4426D65E029A4DC0 | Since: 1207
 *
 * @deprecated Use map.setGpsMultiRouteRender() instead
 */
export declare function setGpsMultiRouteRender(toggle: boolean): void;
/**
 * Up to eight coordinates may be revealed per frame
 *
 * Hash: 0x73348402566ECB6E | Since: 1207
 *
 * @deprecated Use map.setMinimapFowRevealCoordinate() instead
 */
export declare function setMinimapFowRevealCoordinate(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x63CBBD6CA6F321F9 | Since: 1207
 *
 * @deprecated Use map.setMinimapFowRevealVolume() instead
 */
export declare function setMinimapFowRevealVolume(volume: number): void;
/**
 * Reveals the entire minimap (FOW = Fog of War)
 *
 * Hash: 0x4B8F743A4A6D2FF8 | Since: 1207
 *
 * @deprecated Use map.setMinimapHideFow() instead
 */
export declare function setMinimapHideFow(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA8EBBAE986FB5457 | Since: 1207
 *
 * @deprecated Use map.setRadarAsExteriorThisFrame() instead
 */
export declare function setRadarAsExteriorThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xCAF6489DA2C8DD9E | Since: 1207
 *
 * @deprecated Use map.setRadarZoom() instead
 */
export declare function setRadarZoom(zoomLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA8C41E8020D3439 | Since: 1207
 *
 * @deprecated Use map.setWaypointOff() instead
 */
export declare function setWaypointOff(): void;
/**
 * No comment provided
 *
 * Hash: 0x3D3D15AF7BCAAF83 | Since: 1207
 *
 * @deprecated Use map.startGpsMultiRoute() instead
 */
export declare function startGpsMultiRoute(colorNameHash: number | string, onFoot: boolean, inVehicle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x72DD432F3CDFC0EE | Since: 1207
 *
 * @deprecated Use map.triggerSonarBlip() instead
 */
export declare function triggerSonarBlip(typeHash: number | string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x5373DE8E179BC2A0 | Since: 1207
 *
 * @deprecated Use map.unlockMinimapAngle() instead
 */
export declare function unlockMinimapAngle(): void;
/**
 * Clear blip data. It must be used before RemoveBlip I'm pretty sure that blips are handled internally with databinding. This function should then allow you to clear blip container and therefore free up memory?.
 *
 * Hash: 0x01B928CA2E198B01 | Since: 1207
 *
 * @deprecated Use map.clearBlip() instead
 */
export declare function clearBlip(blipid: number): any;
/**
 * It adds blip a icon to active prompts like from scenarios or pickups without the need to use lockon
 *
 * Hash: 0x1726963E6049DB53 | Since: 1207
 *
 * @deprecated Use map.setBlipIconOnEntityActivePrompt() instead
 */
export declare function setBlipIconOnEntityActivePrompt(entity: number | Entity, blipIcon: number | string): void;
/**
 * Not official native name
 * Removes the blip from an entity and makes it static on the map, try it on GetMainPlayerBlipId() for a demonstration
 *
 * Hash: 0x250C75EB1728CC0D | Since: 1207
 *
 * @deprecated Use map.blipDetachFromEntity() instead
 */
export declare function blipDetachFromEntity(blip: number): void;
/**
 * checks if the entity lockon prompt contains an icon
 *
 * Hash: 0x3CB8859F04763C78 | Since: 1207
 *
 * @deprecated Use map.isBlipIconOnLockonEntityPrompt() instead
 */
export declare function isBlipIconOnLockonEntityPrompt(entity: number | Entity, blipId: number): boolean;
/**
 * will remove the blip icon from the entity lockon prompt, use 0 for p1
 *
 * Hash: 0x44813684F72B563C | Since: 1207
 *
 * @deprecated Use map.clearBlipIconFromLockonEntityPrompt() instead
 */
export declare function clearBlipIconFromLockonEntityPrompt(entity: number | Entity): void;
/**
 * will add a blip icon to the entity lockon prompt that you specify
 *
 * Hash: 0x7563CBCA99253D1A | Since: 1207
 *
 * @deprecated Use map.setBlipIconToLockonEntityPrompt() instead
 */
export declare function setBlipIconToLockonEntityPrompt(entity: number | Entity, blipIcon: number | string): void;
/**
 * Clears the previously set coordinates for the pause map view, removing any specified focal point and radius that were set using `SetPausemapCoordsWithRadius - 0xE0884C184728C75B`
 *
 * Hash: 0x7C9F4CDF402CA82A | Since: 1311
 *
 * @deprecated Use map.clearPausemapCoords() instead
 */
export declare function clearPausemapCoords(): void;
/**
 * adds the entity blip icon to the entity lockon prompt if wrong param will remove the icon if had any
 *
 * Hash: 0x97F6F158CC5B5CA2 | Since: 1207
 *
 * @deprecated Use map.setEntityBlipIconToLockonEntityPrompt() instead
 */
export declare function setEntityBlipIconToLockonEntityPrompt(entity: number | Entity, blipId: number): void;
/**
 *
 * in the decompiles this doesnt seem to ever be executed the param needed needs to be above 0 but its always passed as 0
 * removes the icon from lockon prompt
 *
 * Hash: 0xBB68D4D3CA3DE402 | Since: 1207
 *
 * @deprecated Use map.removeBlipIconFromEntityLockonPrompt() instead
 */
export declare function removeBlipIconFromEntityLockonPrompt(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xD3F58E9316B7FC2A | Since: 1207
 *
 * @deprecated Use map._0xD3F58E9316B7FC2A() instead
 */
export declare function _0xD3F58E9316B7FC2A(): void;
/**
 * Unlike `GET_WAYPOINT_COORDS - 0x29B30D07C3F7873B`, which returns a single value, this native returns the x and y coordinates of the waypoint separately as floats from pointer. To retrieve each coordinate, `Citizen.PointerValueFloat()` must be used with this function.
 *
 * Hash: 0xF08E42BFA46BDFF8 | Since: 1207
 *
 * @deprecated Use map.getWaypointPosition() instead
 */
export declare function getWaypointPosition(x: number, y: number): any;
/**
 * Checks if the GPS route to the waypoint is navigable along a road. If a route exists but there is no valid road path, this function returns false.
 *
 * Hash: 0xF47A1EB2A538A3A3 | Since: 1207
 *
 * @deprecated Use map.isGpsRouteOnRoad() instead
 */
export declare function isGpsRouteOnRoad(): boolean;
/**
 * It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
 *
 * Hash: 0xDEEDE7C41742E011 | Since: 1207
 *
 * @deprecated Use map.abandonBlip() instead
 */
export declare function abandonBlip(blip: number): void;
/**
 * list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
 * variations parameter are the interior locations you see on the map like these bellow
 * variation 0 https://i.imgur.com/jkLhn3Z.png
 * variation 2  https://i.imgur.com/eKV0Tcm.png
 * variation 4 https://i.imgur.com/rjwOgEH.png
 * there are more and you can find them in the decompiles
 *
 * Hash: 0x1392105DA88BBFFB | Since: 1207
 *
 * @deprecated Use map.addPropToMinimap() instead
 */
export declare function addPropToMinimap(minimapProp: number | string, x: number, y: number, rotation: number, variation: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEC174ADBCB611ECC | Since: 1207
 *
 * @deprecated Use map.blipAddForArea() instead
 */
export declare function blipAddForArea(blipHash: number | string, pos: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x3E593DF9C2962EC6 | Since: 1207
 *
 * @deprecated Use map.blipAddForStyle() instead
 */
export declare function blipAddForStyle(styleHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA6EF0C54A3443E70 | Since: 1207
 *
 * @deprecated Use map.blipAddForVolume() instead
 */
export declare function blipAddForVolume(blipHash: number | string, volume: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBD62D98799A3DAF0 | Since: 1207
 *
 * @deprecated Use map.blipAddStyle() instead
 */
export declare function blipAddStyle(blip: number, styleHash: number | string): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
 * Removes any existing modifiers and sets the style.
 *
 * Hash: 0xEDD964B7984AC291 | Since: 1207
 *
 * @deprecated Use map.blipSetStyle() instead
 */
export declare function blipSetStyle(blip: number, styleHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9FA00E2FC134A9D0 | Since: 1207
 *
 * @deprecated Use map.doesEntityHaveBlip() instead
 */
export declare function doesEntityHaveBlip(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FDA2B79AEEE351C | Since: 1207
 *
 * @deprecated Use map.findClosestGpsPosition() instead
 */
export declare function findClosestGpsPosition(pos: Vector3, outPosition: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x29B30D07C3F7873B | Since: 1207
 *
 * @deprecated Use map.getWaypointCoords() instead
 */
export declare function getWaypointCoords(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xA1B4052C2A3DCC1E | Since: 1207
 *
 * @deprecated Use map.hideActivePointsOfInterest() instead
 */
export declare function hideActivePointsOfInterest(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9F676788F8D5E1E | Since: 1207
 *
 * @deprecated Use map.isBlipAttachedToAnyEntity() instead
 */
export declare function isBlipAttachedToAnyEntity(blip: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6786D7AFAC3162B3 | Since: 1207
 *
 * @deprecated Use map.mapDisableRegionBlip() instead
 */
export declare function mapDisableRegionBlip(regionHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDA98246C7A3C2189 | Since: 1207
 *
 * @deprecated Use map.mapDiscoverySetEnabled() instead
 */
export declare function mapDiscoverySetEnabled(discoveryHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD8C7162AB2E2AF45 | Since: 1207
 *
 * @deprecated Use map.mapDiscoverRegion() instead
 */
export declare function mapDiscoverRegion(discoveryHash: number | string): void;
/**
 * regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
 *
 * Hash: 0x563FCB6620523917 | Since: 1207
 *
 * @deprecated Use map.mapEnableRegionBlip() instead
 */
export declare function mapEnableRegionBlip(regionHash: number | string, styleHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3F81EA4275D39D6F | Since: 1207
 *
 * @deprecated Use map.mapIsDiscoveryActive() instead
 */
export declare function mapIsDiscoveryActive(discoveryHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE38450DBCBC70E3D | Since: 1207
 *
 * @deprecated Use map.mapIsRegionHighlightedWithStyle() instead
 */
export declare function mapIsRegionHighlightedWithStyle(regionHash: number | string, styleHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE057FEA9A22EB3EE | Since: 1207
 *
 * @deprecated Use map.removePropFromMinimap() instead
 */
export declare function removePropFromMinimap(minimapProp: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF8096DF9B87246E3 | Since: 1207
 *
 * @deprecated Use map.revealMinimapFow() instead
 */
export declare function revealMinimapFow(hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x9CB1A1623062F402 | Since: 1207
 *
 * @deprecated Use map.setBlipName() instead
 */
export declare function setBlipName(blip: number, name: string): void;
/**
 * Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
 * Hash p1 seems to be unused, always 0
 *
 * Hash: 0x63E7279D04160477 | Since: 1207
 *
 * @deprecated Use map.setFowUpdatePlayerOverride() instead
 */
export declare function setFowUpdatePlayerOverride(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE5A7F70B7C0F3271 | Since: 1207
 *
 * @deprecated Use map.setMinimapFowOverrideRevealScale() instead
 */
export declare function setMinimapFowOverrideRevealScale(scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x632AA10BF7EA53D3 | Since: 1207
 *
 * @deprecated Use map.setMinimapFowShouldUpdate() instead
 */
export declare function setMinimapFowShouldUpdate(toggle: boolean): void;
/**
 * hash can be the hash of "guarma" or "world".
 *
 * Hash: 0xA657EC9DBC6CC900 | Since: 1207
 *
 * @deprecated Use map.setMinimapZone() instead
 */
export declare function setMinimapZone(zone: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE0884C184728C75B | Since: 1207
 *
 * @deprecated Use map.setPausemapCoordsWithRadius() instead
 */
export declare function setPausemapCoordsWithRadius(pos: Vector3, radius: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
 * configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
 * p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
 *
 * Hash: 0x9C113883487FD53C | Since: 1207
 *
 * @deprecated Use map.setRadarConfigType() instead
 */
export declare function setRadarConfigType(configHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3FBB838AEA30C1D8 | Since: 1207
 *
 * @deprecated Use map.showActivePointsOfInterest() instead
 */
export declare function showActivePointsOfInterest(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B44F13D888F770D | Since: 1207
 *
 * @deprecated Use map.startGpsCustomRouteFromWaypointRecordingRoute() instead
 */
export declare function startGpsCustomRouteFromWaypointRecordingRoute(waypointRecording: string, point: number, numPoints: number, colorNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0C7A2289A5C4D7C9 | Since: 1207
 *
 * @deprecated Use map.triggerSonarBlipOnEntity() instead
 */
export declare function triggerSonarBlipOnEntity(typeHash: number | string, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x012027C28F421F46 | Since: 1207
 *
 * @deprecated Use minigame._0x012027C28F421F46() instead
 */
export declare function _0x012027C28F421F46(): any;
/**
 * No comment provided
 *
 * Hash: 0x0876326238914A3F | Since: 1207
 *
 * @deprecated Use minigame._0x0876326238914A3F() instead
 */
export declare function _0x0876326238914A3F(): void;
/**
 * No comment provided
 *
 * Hash: 0x10342CC82E8356E9 | Since: 1207
 *
 * @deprecated Use minigame._0x10342CC82E8356E9() instead
 */
export declare function _0x10342CC82E8356E9(): any;
/**
 * No comment provided
 *
 * Hash: 0x15E90B6A993017AA | Since: 1207
 *
 * @deprecated Use minigame._0x15E90B6A993017AA() instead
 */
export declare function _0x15E90B6A993017AA(): any;
/**
 * No comment provided
 *
 * Hash: 0x18A0D48DF9211C07 | Since: 1207
 *
 * @deprecated Use minigame._0x18A0D48DF9211C07() instead
 */
export declare function _0x18A0D48DF9211C07(): void;
/**
 * No comment provided
 *
 * Hash: 0x32A7C216344D623B | Since: 1207
 *
 * @deprecated Use minigame._0x32A7C216344D623B() instead
 */
export declare function _0x32A7C216344D623B(): any;
/**
 * No comment provided
 *
 * Hash: 0x39654E1F68B78287 | Since: 1207
 *
 * @deprecated Use minigame._0x39654E1F68B78287() instead
 */
export declare function _0x39654E1F68B78287(): any;
/**
 * No comment provided
 *
 * Hash: 0x398066F893149856 | Since: 1207
 *
 * @deprecated Use minigame._0x398066F893149856() instead
 */
export declare function _0x398066F893149856(): any;
/**
 * No comment provided
 *
 * Hash: 0x3AE451860F03CA8A | Since: 1207
 *
 * @deprecated Use minigame._0x3AE451860F03CA8A() instead
 */
export declare function _0x3AE451860F03CA8A(): any;
/**
 * No comment provided
 *
 * Hash: 0x3B31732FADE5BAF3 | Since: 1207
 *
 * @deprecated Use minigame._0x3B31732FADE5BAF3() instead
 */
export declare function _0x3B31732FADE5BAF3(): any;
/**
 * No comment provided
 *
 * Hash: 0x3DF7EE3A76185108 | Since: 1207
 *
 * @deprecated Use minigame._0x3DF7EE3A76185108() instead
 */
export declare function _0x3DF7EE3A76185108(): void;
/**
 * No comment provided
 *
 * Hash: 0x3EECAADAB0D9FE29 | Since: 1207
 *
 * @deprecated Use minigame._0x3EECAADAB0D9FE29() instead
 */
export declare function _0x3EECAADAB0D9FE29(): any;
/**
 * No comment provided
 *
 * Hash: 0x3F4FD4BED07AB8C4 | Since: 1207
 *
 * @deprecated Use minigame._0x3F4FD4BED07AB8C4() instead
 */
export declare function _0x3F4FD4BED07AB8C4(): any;
/**
 * No comment provided
 *
 * Hash: 0x3FFE60DD8A936551 | Since: 1207
 *
 * @deprecated Use minigame._0x3FFE60DD8A936551() instead
 */
export declare function _0x3FFE60DD8A936551(): any;
/**
 * No comment provided
 *
 * Hash: 0x455ECCA0715C507F | Since: 1207
 *
 * @deprecated Use minigame._0x455ECCA0715C507F() instead
 */
export declare function _0x455ECCA0715C507F(): void;
/**
 * No comment provided
 *
 * Hash: 0x578907F59BA01B6D | Since: 1207
 *
 * @deprecated Use minigame._0x578907F59BA01B6D() instead
 */
export declare function _0x578907F59BA01B6D(): any;
/**
 * No comment provided
 *
 * Hash: 0x580F34C726387226 | Since: 1207
 *
 * @deprecated Use minigame._0x580F34C726387226() instead
 */
export declare function _0x580F34C726387226(): any;
/**
 * No comment provided
 *
 * Hash: 0x58521E6DCDE97D74 | Since: 1207
 *
 * @deprecated Use minigame._0x58521E6DCDE97D74() instead
 */
export declare function _0x58521E6DCDE97D74(): void;
/**
 * No comment provided
 *
 * Hash: 0x644439B5387EE57E | Since: 1207
 *
 * @deprecated Use minigame._0x644439B5387EE57E() instead
 */
export declare function _0x644439B5387EE57E(): any;
/**
 * No comment provided
 *
 * Hash: 0x6480723D3BE535B6 | Since: 1207
 *
 * @deprecated Use minigame._0x6480723D3BE535B6() instead
 */
export declare function _0x6480723D3BE535B6(): void;
/**
 * No comment provided
 *
 * Hash: 0x910B088E51A511AC | Since: 1207
 *
 * @deprecated Use minigame._0x910B088E51A511AC() instead
 */
export declare function _0x910B088E51A511AC(): any;
/**
 * No comment provided
 *
 * Hash: 0x9DD95B405AB4983E | Since: 1207
 *
 * @deprecated Use minigame._0x9DD95B405AB4983E() instead
 */
export declare function _0x9DD95B405AB4983E(): any;
/**
 * No comment provided
 *
 * Hash: 0xA2DB3C6270C122E3 | Since: 1207
 *
 * @deprecated Use minigame._0xA2DB3C6270C122E3() instead
 */
export declare function _0xA2DB3C6270C122E3(): any;
/**
 * No comment provided
 *
 * Hash: 0xBEA7D3CB47E1479C | Since: 1207
 *
 * @deprecated Use minigame._0xBEA7D3CB47E1479C() instead
 */
export declare function _0xBEA7D3CB47E1479C(): any;
/**
 * No comment provided
 *
 * Hash: 0xD39D32EB3B52DD83 | Since: 1207
 *
 * @deprecated Use minigame._0xD39D32EB3B52DD83() instead
 */
export declare function _0xD39D32EB3B52DD83(): any;
/**
 * No comment provided
 *
 * Hash: 0xDF728C5AE137FC14 | Since: 1207
 *
 * @deprecated Use minigame._0xDF728C5AE137FC14() instead
 */
export declare function _0xDF728C5AE137FC14(): any;
/**
 * No comment provided
 *
 * Hash: 0xE1F365C4C8F259D8 | Since: 1207
 *
 * @deprecated Use minigame._0xE1F365C4C8F259D8() instead
 */
export declare function _0xE1F365C4C8F259D8(): any;
/**
 * No comment provided
 *
 * Hash: 0xE53A308AC35877A8 | Since: 1207
 *
 * @deprecated Use minigame._0xE53A308AC35877A8() instead
 */
export declare function _0xE53A308AC35877A8(): any;
/**
 * No comment provided
 *
 * Hash: 0xEC819D612038EF4B | Since: 1207
 *
 * @deprecated Use minigame._0xEC819D612038EF4B() instead
 */
export declare function _0xEC819D612038EF4B(): any;
/**
 * No comment provided
 *
 * Hash: 0xF6DE98516FD3AC9B | Since: 1207
 *
 * @deprecated Use minigame._0xF6DE98516FD3AC9B() instead
 */
export declare function _0xF6DE98516FD3AC9B(): void;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0x399E6CD12FC8CA89 | Since: 1207
 *
 * @deprecated Use minigame.dominoesBuyIn() instead
 */
export declare function dominoesBuyIn(): any;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0xB79A29B33BF29BA5 | Since: 1207
 *
 * @deprecated Use minigame.dominoesPlaceDomino() instead
 */
export declare function dominoesPlaceDomino(): any;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0xE26AEE7E67D9E21D | Since: 1207
 *
 * @deprecated Use minigame.dominoesRequestValidPlacements() instead
 */
export declare function dominoesRequestValidPlacements(): any;
/**
 * No comment provided
 *
 * Hash: 0xDF728C5AE137FC13 | Since: 1207
 *
 * @deprecated Use minigame.minigameGetNextEvent() instead
 */
export declare function minigameGetNextEvent(): any;
/**
 * No comment provided
 *
 * Hash: 0x578907F59BA01B6C | Since: 1207
 *
 * @deprecated Use minigame.minigameGetNextEventType() instead
 */
export declare function minigameGetNextEventType(): any;
/**
 * No comment provided
 *
 * Hash: 0x2A0C4736AC5AF0CE | Since: 1207
 *
 * @deprecated Use minigame.minigameIsConnectedToServer() instead
 */
export declare function minigameIsConnectedToServer(): any;
/**
 * No comment provided
 *
 * Hash: 0x9105A4A2556FA937 | Since: 1207
 *
 * @deprecated Use minigame.minigameIsRequestPending() instead
 */
export declare function minigameIsRequestPending(): any;
/**
 * No comment provided
 *
 * Hash: 0x8593A8CB0ED2C3B4 | Since: 1207
 *
 * @deprecated Use minigame.minigameIsSeatOccupied() instead
 */
export declare function minigameIsSeatOccupied(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF5446E47941E654C | Since: 1207
 *
 * @deprecated Use minigame.minigameLeaveTable() instead
 */
export declare function minigameLeaveTable(): any;
/**
 * No comment provided
 *
 * Hash: 0x833E03BAEBADC4B0 | Since: 1207
 *
 * @deprecated Use minigame.minigamePopNextEvent() instead
 */
export declare function minigamePopNextEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0xF6AC6085D8D6C004 | Since: 1207
 *
 * @deprecated Use minigame.minigameRequestSeatAtTable() instead
 */
export declare function minigameRequestSeatAtTable(data: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4D610EA5A1FDE74 | Since: 1207
 *
 * @deprecated Use minigame.pokerBuyIn() instead
 */
export declare function pokerBuyIn(): any;
/**
 * No comment provided
 *
 * Hash: 0x8DED681B161EBD78 | Since: 1207
 *
 * @deprecated Use minigame.pokerCall() instead
 */
export declare function pokerCall(): any;
/**
 * No comment provided
 *
 * Hash: 0x49A045628D9B1B86 | Since: 1207
 *
 * @deprecated Use minigame.pokerCheck() instead
 */
export declare function pokerCheck(): any;
/**
 * No comment provided
 *
 * Hash: 0x3DFAB7D9BB45B5BE | Since: 1207
 *
 * @deprecated Use minigame.pokerFold() instead
 */
export declare function pokerFold(): any;
/**
 * No comment provided
 *
 * Hash: 0x2D20E12E1990D584 | Since: 1207
 *
 * @deprecated Use minigame.pokerGetGameSettingsForId() instead
 */
export declare function pokerGetGameSettingsForId(): any;
/**
 * No comment provided
 *
 * Hash: 0xECCF45A79A17BB96 | Since: 1207
 *
 * @deprecated Use minigame.pokerRaise() instead
 */
export declare function pokerRaise(): any;
/**
 * No comment provided
 *
 * Hash: 0x2F2131DB0A8B02DC | Since: 1207
 *
 * @deprecated Use minigame.pokerReveal() instead
 */
export declare function pokerReveal(): any;
/**
 * No comment provided
 *
 * Hash: 0x134549B388167CBF | Since: 1207
 *
 * @deprecated Use misc.absf() instead
 */
export declare function absf(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0C214D5B8A38C828 | Since: 1207
 *
 * @deprecated Use misc.absi() instead
 */
export declare function absi(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x586690F0176DC575 | Since: 1207
 *
 * @deprecated Use misc.acos() instead
 */
export declare function acos(): number;
/**
 * Appears to remove stealth kill action from memory (?)
 *
 * Hash: 0x7ACF124C12A2B045 | Since: 1207
 *
 * @deprecated Use misc.actionManagerEnableAction() instead
 */
export declare function actionManagerEnableAction(hash: number | string, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFD0759658268FD8E | Since: 1207
 *
 * @deprecated Use misc.actionManagerIsActionEnabled() instead
 */
export declare function actionManagerIsActionEnabled(hash: number | string): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x91D657230BC208D2 | Since: 1207
 *
 * @deprecated Use misc.activityFeedActionStartWithCommandLine() instead
 */
export declare function activityFeedActionStartWithCommandLine(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x1694A053DFB61A34 | Since: 1207
 *
 * @deprecated Use misc.activityFeedActionStartWithCommandLineAdd() instead
 */
export declare function activityFeedActionStartWithCommandLineAdd(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x9935F76407C32539 | Since: 1207
 *
 * @deprecated Use misc.activityFeedAddSubstringToCaption() instead
 */
export declare function activityFeedAddSubstringToCaption(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xCC7FC854B956A128 | Since: 1207
 *
 * @deprecated Use misc.activityFeedCreate() instead
 */
export declare function activityFeedCreate(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xB16FC7B364D86585 | Since: 1207
 *
 * @deprecated Use misc.activityFeedPost() instead
 */
export declare function activityFeedPost(): void;
/**
 * No comment provided
 *
 * Hash: 0x5EBDA1A3B8CB5EF7 | Since: 1207
 *
 * @deprecated Use misc.addPopMultiplierArea() instead
 */
export declare function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, pedDensity: number, trafficDensity: number): number;
/**
 * Params: p3 is 0 in R* Script utopia2
 *
 * Hash: 0xE4EE55E63FA9AF45 | Since: 1207
 *
 * @deprecated Use misc.addTacticalNavMeshPoint() instead
 */
export declare function addTacticalNavMeshPoint(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xD3852F22AB713A1F | Since: 1207
 *
 * @deprecated Use misc.areStringsEqual() instead
 */
export declare function areStringsEqual(string1: string, string2: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E3C15D296C15583 | Since: 1207
 *
 * @deprecated Use misc.asin() instead
 */
export declare function asin(): number;
/**
 * No comment provided
 *
 * Hash: 0x503054DED0B78027 | Since: 1207
 *
 * @deprecated Use misc.atan() instead
 */
export declare function atan(): number;
/**
 * No comment provided
 *
 * Hash: 0x965B220A066E3F07 | Since: 1207
 *
 * @deprecated Use misc.atan2() instead
 */
export declare function atan2(): number;
/**
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 *
 * Hash: 0x66947E61A44DE2C6 | Since: 1207
 *
 * @deprecated Use misc.blockDispatchServiceResourceCreation() instead
 */
export declare function blockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
/**
 * Old name: _CANCEL_ONSCREEN_KEYBOARD
 *
 * Hash: 0x58A39BE597CE99CD | Since: 1207
 *
 * @deprecated Use misc.cancelOnscreenKeyboard() instead
 */
export declare function cancelOnscreenKeyboard(): void;
/**
 * No comment provided
 *
 * Hash: 0xA4D83115C1E02F8A | Since: 1207
 *
 * @deprecated Use misc.clearAngledAreaOfVehicles() instead
 */
export declare function clearAngledAreaOfVehicles(): void;
/**
 * Possible flag names:
 * ALL_BASE = 0,
 * PROJECTILES = 1,
 * BROADCAST = 524288,
 * AMBIENT_POPULATION = 1048576
 *
 * Hash: 0x3B882A96EA77D5B1 | Since: 1207
 *
 * @deprecated Use misc.clearArea() instead
 */
export declare function clearArea(pos: Vector3, radius: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7D1D4A3602B6AD4E | Since: 1207
 *
 * @deprecated Use misc.clearBit() instead
 */
export declare function clearBit(address: number, offset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x80A398F16FFE3CC3 | Since: 1207
 *
 * @deprecated Use misc.clearOverrideWeather() instead
 */
export declare function clearOverrideWeather(): void;
/**
 * No comment provided
 *
 * Hash: 0xD93B6516C6878267 | Since: 1207
 *
 * @deprecated Use misc.clearTacticalNavMeshPoints() instead
 */
export declare function clearTacticalNavMeshPoints(): void;
/**
 * No comment provided
 *
 * Hash: 0xD85DFE5C131E4AE9 | Since: 1207
 *
 * @deprecated Use misc.clearWeatherTypePersist() instead
 */
export declare function clearWeatherTypePersist(): void;
/**
 * No comment provided
 *
 * Hash: 0xBFBB74A15EFC149B | Since: 1207
 *
 * @deprecated Use misc.compareStrings() instead
 */
export declare function compareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
/**
 * Old name: _COPY_MEMORY
 *
 * Hash: 0xF7AC7DC0DEE7C9BE | Since: 1207
 *
 * @deprecated Use misc.copyScriptStruct() instead
 */
export declare function copyScriptStruct(dst: any, src: any, size: number): void;
/**
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 *
 * Hash: 0x3F892CAF67444AE7 | Since: 1207
 *
 * @deprecated Use misc.createIncident() instead
 */
export declare function createIncident(dispatchService: number, pos: Vector3, numUnits: number, radius: number, outIncidentID: number): boolean;
/**
 * Delete an incident with a given id.
 *
 * Hash: 0x5CFD0F0D6AAE0AEE | Since: 1207
 *
 * @deprecated Use misc.deleteIncident() instead
 */
export declare function deleteIncident(incidentId: number): void;
/**
 * disables prompt eat
 *
 * Hash: 0x40D72189F46D2E15 | Since: 1207
 *
 * @deprecated Use misc.disableLootingCompositeLootableThisFrame() instead
 */
export declare function disableLootingCompositeLootableThisFrame(compositeId: number, disable: boolean): void;
/**
 * enum eOnscreenKeyboardTextType
 * {
 * KTEXTTYPE_INVALID = -1,
 * KTEXTTYPE_DEFAULT,
 * KTEXTTYPE_EMAIL,
 * KTEXTTYPE_PASSWORD,
 * KTEXTTYPE_NUMERIC,
 * KTEXTTYPE_ALPHABET,
 * KTEXTTYPE_GAMERTAG,
 * KTEXTTYPE_FILENAME,
 * KTEXTTYPE_COUNT
 * };
 *
 * Hash: 0x044131118D8DB3CD | Since: 1207
 *
 * @deprecated Use misc.displayOnscreenKeyboard() instead
 */
export declare function displayOnscreenKeyboard(textType: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
/**
 * No comment provided
 *
 * Hash: 0x03BA619C81A646B3 | Since: 1207
 *
 * @deprecated Use misc.doesPopMultiplierAreaExist() instead
 */
export declare function doesPopMultiplierAreaExist(id: number): boolean;
/**
 * enum DispatchType
 * {
 * DT_Invalid,
 * DT_PoliceAutomobile,
 * DT_PoliceHelicopter,
 * DT_FireDepartment,
 * DT_SwatAutomobile,
 * DT_AmbulanceDepartment,
 * DT_PoliceRiders,
 * DT_PoliceVehicleRequest,
 * DT_PoliceRoadBlock,
 * DT_PoliceAutomobileWaitPulledOver,
 * DT_PoliceAutomobileWaitCruising,
 * DT_Gangs,
 * DT_SwatHelicopter,
 * DT_PoliceBoat,
 * DT_ArmyVehicle,
 * DT_OnFoot,
 * DT_PoliceDogs
 * };
 *
 * Hash: 0x50E52637EF70EF77 | Since: 1207
 *
 * @deprecated Use misc.enableDispatchService() instead
 */
export declare function enableDispatchService(dispatchService: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCBC9A21F6A2A679C | Since: 1207
 *
 * @deprecated Use misc.fireSingleBullet() instead
 */
export declare function fireSingleBullet(args: any): void;
/**
 * creates single lightning+thunder at random position
 *
 * Hash: 0x369DB5B2510FA080 | Since: 1207
 *
 * @deprecated Use misc.forceLightningFlash() instead
 */
export declare function forceLightningFlash(): void;
/**
 * No comment provided
 *
 * Hash: 0x4CABE596D632E4B0 | Since: 1207
 *
 * @deprecated Use misc.gameFrameworkManagerInit() instead
 */
export declare function gameFrameworkManagerInit(transitionMode: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD0DFE1C486097BBB | Since: 1207
 *
 * @deprecated Use misc.getAngleBetween2dVectors() instead
 */
export declare function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
/**
 * Returns value of the '-benchmarkIterations' command line option.
 *
 * Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
 *
 * Hash: 0x22FC52CF470CC98D | Since: 1207
 *
 * @deprecated Use misc.getBenchmarkIterations() instead
 */
export declare function getBenchmarkIterations(): number;
/**
 * Returns value of the '-benchmarkPass' command line option.
 *
 * Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
 *
 * Hash: 0x9297DACF3A2CDFF7 | Since: 1207
 *
 * @deprecated Use misc.getBenchmarkPass() instead
 */
export declare function getBenchmarkPass(): number;
/**
 * No comment provided
 *
 * Hash: 0x68E1352AF48F905D | Since: 1207
 *
 * @deprecated Use misc.getBitsInRange() instead
 */
export declare function getBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
/**
 * No comment provided
 *
 * Hash: 0x83ACC65D9ACEC5EF | Since: 1207
 *
 * @deprecated Use misc.getClosestPointOnLine() instead
 */
export declare function getClosestPointOnLine(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xD73C960A681052DF | Since: 1207
 *
 * @deprecated Use misc.getCoordsOfProjectileTypeWithinDistance() instead
 */
export declare function getCoordsOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number, outCoords: Vector3, mustBeOwnedByThisPed: boolean): boolean;
/**
 * Params: percentWeather2: 0f - 0.75f in R* Scripts
 *
 * Old name: _GET_WEATHER_TYPE_TRANSITION
 *
 * Hash: 0x0AC679B2342F14F2 | Since: 1207
 *
 * @deprecated Use misc.getCurrWeatherState() instead
 */
export declare function getCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number): void;
/**
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 *
 * `Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.`
 *
 * Hash: 0x0BE7F4E3CDBAFB28 | Since: 1207
 *
 * @deprecated Use misc.getDistanceBetweenCoords() instead
 */
export declare function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x77DFA958FCF100C1 | Since: 1207
 *
 * @deprecated Use misc.getFrameCount() instead
 */
export declare function getFrameCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x5E72022914CE3C38 | Since: 1207
 *
 * @deprecated Use misc.getFrameTime() instead
 */
export declare function getFrameTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x4F67E8ECA7D3F667 | Since: 1207
 *
 * @deprecated Use misc.getGameTimer() instead
 */
export declare function getGameTimer(): number;
/**
 * No comment provided
 *
 * Hash: 0x2A29CA9A6319E6AB | Since: 1207
 *
 * @deprecated Use misc.getGroundZAndNormalFor3dCoord() instead
 */
export declare function getGroundZAndNormalFor3dCoord(pos: Vector3, groundZ: number, normal: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24FA4267BB8D2431 | Since: 1207
 *
 * @deprecated Use misc.getGroundZFor3dCoord() instead
 */
export declare function getGroundZFor3dCoord(pos: Vector3, groundZ: number): boolean;
/**
 * Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
 * Note: this implementation is case-insensitive.
 *
 * Hash: 0xFD340785ADF8CFB7 | Since: 1207
 *
 * @deprecated Use misc.getHashKey() instead
 */
export declare function getHashKey(string: string): number;
/**
 * dx = x1 - x2
 * dy = y1 - y2
 *
 * Hash: 0x38D5202FF9271C62 | Since: 1207
 *
 * @deprecated Use misc.getHeadingFromVector2d() instead
 */
export declare function getHeadingFromVector2d(dx: number, dy: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAB6A04CEC428258B | Since: 1207
 *
 * @deprecated Use misc.getLinePlaneIntersection() instead
 */
export declare function getLinePlaneIntersection(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB15CD1CF58771DE1 | Since: 1207
 *
 * @deprecated Use misc.getMissionFlag() instead
 */
export declare function getMissionFlag(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDCB8DDD5D054A7E7 | Since: 1207
 *
 * @deprecated Use misc.getModelDimensions() instead
 */
export declare function getModelDimensions(modelHash: number | string, minimum: Vector3, maximum: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x40DC2907A9697EF7 | Since: 1207
 *
 * @deprecated Use misc.getNumberOfFreeStacksOfThisSize() instead
 */
export declare function getNumberOfFreeStacksOfThisSize(stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB0CE5E5ED8BB3581 | Since: 1207
 *
 * @deprecated Use misc.getNumberOfMicrosecondsSinceLastCall() instead
 */
export declare function getNumberOfMicrosecondsSinceLastCall(): number;
/**
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 *
 * Hash: 0xAFB4CF58A4A292B1 | Since: 1207
 *
 * @deprecated Use misc.getOnscreenKeyboardResult() instead
 */
export declare function getOnscreenKeyboardResult(): string;
/**
 * No comment provided
 *
 * Hash: 0x9578986A6105A6AD | Since: 1207
 *
 * @deprecated Use misc.getProjectileOfProjectileTypeWithinDistance() instead
 */
export declare function getProjectileOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number, outCoords: Vector3, outProjectile: number | Object, mustBeOwnedByThisPed: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x931B5F4CC130224B | Since: 1207
 *
 * @deprecated Use misc.getRainLevel() instead
 */
export declare function getRainLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0x924D54E5698AE3E0 | Since: 1207
 *
 * @deprecated Use misc.getRandomEventFlag() instead
 */
export declare function getRandomEventFlag(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE29F927A961F8AAA | Since: 1207
 *
 * @deprecated Use misc.getRandomFloatInRange() instead
 */
export declare function getRandomFloatInRange(startRange: number, endRange: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD53343AA4FB7DD28 | Since: 1207
 *
 * @deprecated Use misc.getRandomIntInRange() instead
 */
export declare function getRandomIntInRange(startRange: number, endRange: number): number;
/**
 * Returns GET_GAME_TIMER() / 1000
 * Only used in rcm_pearson1.ysc
 *
 * Hash: 0x2E036F0480B8BF02 | Since: 1207
 *
 * @deprecated Use misc.getRealWorldTime() instead
 */
export declare function getRealWorldTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x63219768C586667C | Since: 1207
 *
 * @deprecated Use misc.getScriptTimeWithinFrameInMicroseconds() instead
 */
export declare function getScriptTimeWithinFrameInMicroseconds(): number;
/**
 * No comment provided
 *
 * Hash: 0x1E5D727041BE1709 | Since: 1207
 *
 * @deprecated Use misc.getSnowLevel() instead
 */
export declare function getSnowLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0xBE7F225417E35A7C | Since: 1207
 *
 * @deprecated Use misc.getSystemTime() instead
 */
export declare function getSystemTime(): number;
/**
 * Old name: _GET_BENCHMARK_TIME
 *
 * Hash: 0x3F3172FEAE3AFE1C | Since: 1207
 *
 * @deprecated Use misc.getSystemTimeStep() instead
 */
export declare function getSystemTimeStep(): number;
/**
 * No comment provided
 *
 * Hash: 0xF703E82F3FE14A5F | Since: 1207
 *
 * @deprecated Use misc.getWindDirection() instead
 */
export declare function getWindDirection(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xFFB7E74E041150A4 | Since: 1207
 *
 * @deprecated Use misc.getWindSpeed() instead
 */
export declare function getWindSpeed(): number;
/**
 * p3 - possibly radius?
 *
 * Hash: 0xC153E5BCCF411814 | Since: 1207
 *
 * @deprecated Use misc.hasBulletImpactedInArea() instead
 */
export declare function hasBulletImpactedInArea(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3B6A4C05FB2B33AC | Since: 1207
 *
 * @deprecated Use misc.hasBulletImpactedInBox() instead
 */
export declare function hasBulletImpactedInBox(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6C9FF40FF1B69F8F | Since: 1207
 *
 * @deprecated Use misc.ignoreNextRestart() instead
 */
export declare function ignoreNextRestart(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x708DF841B8F27AA2 | Since: 1207
 *
 * @deprecated Use misc.informCodeOfContentIdOfCurrentUgcMission() instead
 */
export declare function informCodeOfContentIdOfCurrentUgcMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x4ED6CFDFE8D4131A | Since: 1207
 *
 * @deprecated Use misc.isBitSet() instead
 */
export declare function isBitSet(address: number, offset: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9D09D8493747CF02 | Since: 1207
 *
 * @deprecated Use misc.isBulletInAngledArea() instead
 */
export declare function isBulletInAngledArea(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC652FD308772D79E | Since: 1207
 *
 * @deprecated Use misc.isBulletInArea() instead
 */
export declare function isBulletInArea(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC128137C52152741 | Since: 1207
 *
 * @deprecated Use misc.isBulletInBox() instead
 */
export declare function isBulletInBox(): boolean;
/**
 * Hardcoded to return false.
 * Checks for XBOXONE Game Build.
 *
 * Hash: 0xD1CCC2A2639D325F | Since: 1207
 *
 * @deprecated Use misc.isDurangoVersion() instead
 */
export declare function isDurangoVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9E7DBB39080640B | Since: 1207
 *
 * @deprecated Use misc.isGameSessionStateMachineIdle() instead
 */
export declare function isGameSessionStateMachineIdle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x39F2B1BAD412246A | Since: 1207
 *
 * @deprecated Use misc.isIncidentValid() instead
 */
export declare function isIncidentValid(incidentId: number): boolean;
/**
 * magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
 * Hardcoded to return false.
 *
 * Hash: 0x5FC9357C26DAEFCE | Since: 1207
 *
 * @deprecated Use misc.isMagDemo1Active() instead
 */
export declare function isMagDemo1Active(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF4D8BCD052E7EA1B | Since: 1207
 *
 * @deprecated Use misc.isMinigameInProgress() instead
 */
export declare function isMinigameInProgress(): boolean;
/**
 * Hardcoded to return false.
 * Checks for PS4 Game Build.
 *
 * Hash: 0x88CFAE250D3E0C71 | Since: 1207
 *
 * @deprecated Use misc.isOrbisVersion() instead
 */
export declare function isOrbisVersion(): boolean;
/**
 * Hardcoded to return true.
 *
 * Hash: 0xB0FB6CFAA5A1C833 | Since: 1207
 *
 * @deprecated Use misc.isPcVersion() instead
 */
export declare function isPcVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x825CA3ED43831015 | Since: 1207
 *
 * @deprecated Use misc.isPositionOccupied() instead
 */
export declare function isPositionOccupied(pos: Vector3, range: number): boolean;
/**
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 *
 * ownedByPlayer = only projectiles fired by the player will be detected.
 *
 * Hash: 0x05B0061EFDFC8941 | Since: 1207
 *
 * @deprecated Use misc.isProjectileInArea() instead
 */
export declare function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x928431F4133CD3D4 | Since: 1207
 *
 * @deprecated Use misc.isProjectileTypeInAngledArea() instead
 */
export declare function isProjectileTypeInAngledArea(): boolean;
/**
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
 *
 * Hash: 0x04965FB9E14235C7 | Since: 1207
 *
 * @deprecated Use misc.isProjectileTypeInArea() instead
 */
export declare function isProjectileTypeInArea(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number, weaponType: number | string, isPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF51C9BAAD9ED64C4 | Since: 1207
 *
 * @deprecated Use misc.isProjectileTypeWithinDistance() instead
 */
export declare function isProjectileTypeWithinDistance(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x268AB8420A9E4ED7 | Since: 1207
 *
 * @deprecated Use misc.isStadiaVersion() instead
 */
export declare function isStadiaVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x602102324604D96B | Since: 1207
 *
 * @deprecated Use misc.isStringNull() instead
 */
export declare function isStringNull(string: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2CF12F9ACF18F048 | Since: 1207
 *
 * @deprecated Use misc.isStringNullOrEmpty() instead
 */
export declare function isStringNullOrEmpty(string: string): boolean;
/**
 * Returns true if the entire string consists only of space characters.
 *
 * Hash: 0x375F5870A7B8BEC1 | Since: 1207
 *
 * @deprecated Use misc.isStringNullOrEmptyOrSpaces() instead
 */
export declare function isStringNullOrEmptyOrSpaces(string: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3D0EAC6385DD6100 | Since: 1207
 *
 * @deprecated Use misc.networkSetScriptIsSafeForNetworkGame() instead
 */
export declare function networkSetScriptIsSafeForNetworkGame(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CB71EAA1429A358 | Since: 1207
 *
 * @deprecated Use misc.nextOnscreenKeyboardResultWillDisplayUsingTheseFonts() instead
 */
export declare function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB2C69E11A37B5AF0 | Since: 1207
 *
 * @deprecated Use misc.overrideSaveHouse() instead
 */
export declare function overrideSaveHouse(override: boolean, pos: Vector3, heading: number, isAutosave: boolean, returnCoords: Vector3, returnHeading: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x66AB6B6C7E72F393 | Since: 1207
 *
 * @deprecated Use misc.pauseDeathArrestRestart() instead
 */
export declare function pauseDeathArrestRestart(toggle: boolean): void;
/**
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 *
 * Hash: 0xEA6DC3A8ADD2005F | Since: 1207
 *
 * @deprecated Use misc.populateNow() instead
 */
export declare function populateNow(): void;
/**
 * p3 is usually the same value of radius
 * p8 determines whether the ILO prompt is a lock on prompt with RMB
 *
 * Hash: 0x870708A6E147A9AD | Since: 1207
 *
 * @deprecated Use misc.registerInteractionLockonPrompt() instead
 */
export declare function registerInteractionLockonPrompt(entity: number | Entity, text: string, radius: number, flag: number, prompt: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x49F751F6868DDC5B | Since: 1207
 *
 * @deprecated Use misc.removeDispatchSpawnBlockingArea() instead
 */
export declare function removeDispatchSpawnBlockingArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x88CB484364EFB37A | Since: 1207
 *
 * @deprecated Use misc.removePopMultiplierArea() instead
 */
export declare function removePopMultiplierArea(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC7817264BC4B6377 | Since: 1207
 *
 * @deprecated Use misc.resetDispatchIdealSpawnDistance() instead
 */
export declare function resetDispatchIdealSpawnDistance(): void;
/**
 * Begins with RESET_*. Next character in the name is either D or E.
 *
 * Old name: _RESET_BENCHMARK_RECORDING
 *
 * Hash: 0xECBABD0307FB216F | Since: 1207
 *
 * @deprecated Use misc.resetEndUserBenchmark() instead
 */
export declare function resetEndUserBenchmark(): void;
/**
 * No comment provided
 *
 * Hash: 0x1411A7CBC3A6EB7B | Since: 1207
 *
 * @deprecated Use misc.resetScriptTimeWithinFrame() instead
 */
export declare function resetScriptTimeWithinFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF42F56F69877125 | Since: 1207
 *
 * @deprecated Use misc.resetWantedResponseNumPedsToSpawn() instead
 */
export declare function resetWantedResponseNumPedsToSpawn(): void;
/**
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
 *
 * Old name: _SAVE_BENCHMARK_RECORDING
 *
 * Hash: 0xF4743E2ECC02B3DA | Since: 1207
 *
 * @deprecated Use misc.saveEndUserBenchmark() instead
 */
export declare function saveEndUserBenchmark(): void;
/**
 * No comment provided
 *
 * Hash: 0x769E848C66E3C2BB | Since: 1207
 *
 * @deprecated Use misc.scriptRaceGetPlayerSplitTime() instead
 */
export declare function scriptRaceGetPlayerSplitTime(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8AE059F47158417E | Since: 1207
 *
 * @deprecated Use misc.scriptRaceInit() instead
 */
export declare function scriptRaceInit(numCheckpoints: number, numLaps: number, numPlayers: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBA62B4D80FA66BD6 | Since: 1207
 *
 * @deprecated Use misc.scriptRacePlayerHitCheckpoint() instead
 */
export declare function scriptRacePlayerHitCheckpoint(part: number, checkpoint: number, lap: number, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x334CE0DA4FAF330C | Since: 1207
 *
 * @deprecated Use misc.scriptRaceShutdown() instead
 */
export declare function scriptRaceShutdown(): void;
/**
 * No comment provided
 *
 * Hash: 0xF73FBE4845C43B5B | Since: 1207
 *
 * @deprecated Use misc.setBit() instead
 */
export declare function setBit(address: number, offset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x324DC1CEF57F31E6 | Since: 1207
 *
 * @deprecated Use misc.setBitsInRange() instead
 */
export declare function setBitsInRange(_var: number, rangeStart: number, rangeEnd: number): void;
/**
 * Cheats are GTA IV cheats:
 *
 * 0 = unknown
 * 1 = unknown (same as 0)
 * 2 = Max Health and Armor
 * 3 = Raise Wanted Level
 * 4 = Lower Wanted Level
 * 5 = unknown (does nothing)
 * 6 = Change Weather
 * 7 = Spawn Annihilator
 * 8 = Spawn NRG 900
 * 9 = Spawn FBI
 * 10 = Spawn Jetmax
 * 11 = Spawn Comet
 * 12 = Spawn Turismo
 * 13 = Spawn Cognoscenti
 * 14 = Spawn Super GT
 * 15 = Spawn Sanchez
 *
 * Initially used in Max Payne 3, that's why we know the name.
 *
 * Hash: 0xD4958E8CF0DE0DD0 | Since: 1207
 *
 * @deprecated Use misc.setCheatActive() instead
 */
export declare function setCheatActive(cheatId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD37BECF862DA726F | Since: 1207
 *
 * @deprecated Use misc.setCreditsActive() instead
 */
export declare function setCreditsActive(toggle: boolean): void;
/**
 * Params: BOOL p3 is always true
 *
 * Old name: _SET_WEATHER_TYPE_TRANSITION
 *
 * Hash: 0xFA3E3CA8A1DE6D5D | Since: 1207
 *
 * @deprecated Use misc.setCurrWeatherState() instead
 */
export declare function setCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEAB6823B82FBD283 | Since: 1207
 *
 * @deprecated Use misc.setDispatchIdealSpawnDistance() instead
 */
export declare function setDispatchIdealSpawnDistance(fIdealSpawnDistance: number): void;
/**
 * Sets whether the game should fade in after the player dies or is arrested.
 *
 * Hash: 0xDF3B5846DE5904AF | Since: 1207
 *
 * @deprecated Use misc.setFadeInAfterDeathArrest() instead
 */
export declare function setFadeInAfterDeathArrest(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAC806C4CAB973517 | Since: 1207
 *
 * @deprecated Use misc.setFadeInAfterLoad() instead
 */
export declare function setFadeInAfterLoad(toggle: boolean): void;
/**
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
 *
 * Hash: 0xFAEC088D28B1DE4A | Since: 1207
 *
 * @deprecated Use misc.setGamePaused() instead
 */
export declare function setGamePaused(toggle: boolean): void;
/**
 * If true, the player can't save the game.
 *
 * Hash: 0x36694B456BE80D0A | Since: 1207
 *
 * @deprecated Use misc.setMissionFlag() instead
 */
export declare function setMissionFlag(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x674B90BE1115846D | Since: 1207
 *
 * @deprecated Use misc.setPedDecomposed() instead
 */
export declare function setPedDecomposed(ped: number | Ped, toggle: boolean): void;
/**
 * Old name: _SET_RAIN_LEVEL
 *
 * Hash: 0x193DFC0526830FD6 | Since: 1207
 *
 * @deprecated Use misc.setRain() instead
 */
export declare function setRain(intensity: number): void;
/**
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 *
 * Hash: 0xB1ADCCC4150C6473 | Since: 1207
 *
 * @deprecated Use misc.setRandomEventFlag() instead
 */
export declare function setRandomEventFlag(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5CD7A49104AFCB6B | Since: 1207
 *
 * @deprecated Use misc.setRandomSeed() instead
 */
export declare function setRandomSeed(seed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6E5A7FBEECAB3C72 | Since: 1207
 *
 * @deprecated Use misc.setRandomWeatherType() instead
 */
export declare function setRandomWeatherType(): void;
/**
 * No comment provided
 *
 * Hash: 0xB3E9BE963F10C445 | Since: 1207
 *
 * @deprecated Use misc.setSuperJumpThisFrame() instead
 */
export declare function setSuperJumpThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x3215376E79F6EA18 | Since: 1207
 *
 * @deprecated Use misc.setThisScriptCanBePaused() instead
 */
export declare function setThisScriptCanBePaused(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8ABD939C2E5D00ED | Since: 1207
 *
 * @deprecated Use misc.setThisScriptCanRemoveBlipsCreatedByAnyScript() instead
 */
export declare function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
/**
 * Maximum value is 1.0f
 * At a value of 0.0f the game will still run at a minimum time scale.
 *
 * Hash: 0x9682AF6050854856 | Since: 1207
 *
 * @deprecated Use misc.setTimeScale() instead
 */
export declare function setTimeScale(timeScale: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
 *
 * Hash: 0x59174F1AFE095B5A | Since: 1207
 *
 * @deprecated Use misc.setWeatherType() instead
 */
export declare function setWeatherType(weatherType: number | string, transition: boolean, transitionTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB56C4F5F57A45600 | Since: 1207
 *
 * @deprecated Use misc.setWindDirection() instead
 */
export declare function setWindDirection(direction: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD00C2D82DC04A99F | Since: 1207
 *
 * @deprecated Use misc.setWindSpeed() instead
 */
export declare function setWindSpeed(speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x867654CBC7606F2C | Since: 1207
 *
 * @deprecated Use misc.shootSingleBulletBetweenCoords() instead
 */
export declare function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number): void;
/**
 * Returns whether the game's measurement system is set to metric.
 *
 * Hash: 0x4FB556ACEFA93098 | Since: 1207
 *
 * @deprecated Use misc.shouldUseMetricMeasurements() instead
 */
export declare function shouldUseMetricMeasurements(): boolean;
/**
 * Begins with START_*. Next character in the name is either D or E.
 *
 * Old name: _START_BENCHMARK_RECORDING
 *
 * Hash: 0x29D1F6DF864A094E | Since: 1207
 *
 * @deprecated Use misc.startEndUserBenchmark() instead
 */
export declare function startEndUserBenchmark(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xA565FAC215CBC77D | Since: 1207
 *
 * @deprecated Use misc.stopCurrentLoadingProgressTimer() instead
 */
export declare function stopCurrentLoadingProgressTimer(): void;
/**
 * Begins with STOP_*. Next character in the name is either D or E.
 *
 * Old name: _STOP_BENCHMARK_RECORDING
 *
 * Hash: 0xB89AEC71AFF2B599 | Since: 1207
 *
 * @deprecated Use misc.stopEndUserBenchmark() instead
 */
export declare function stopEndUserBenchmark(): void;
/**
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 *
 * Hash: 0xF2DD2298B3AF23E2 | Since: 1207
 *
 * @deprecated Use misc.stringToInt() instead
 */
export declare function stringToInt(string: string, outInteger: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8C13DB96497B7ABF | Since: 1207
 *
 * @deprecated Use misc.tan() instead
 */
export declare function tan(): number;
/**
 * Hardcoded to return false.
 *
 * Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
 *
 * Hash: 0x4FFA0386A6216113 | Since: 1207
 *
 * @deprecated Use misc.uiStartedEndUserBenchmark() instead
 */
export declare function uiStartedEndUserBenchmark(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE98D55C5983F2509 | Since: 1207
 *
 * @deprecated Use misc.unregisterInteractionLockonPrompt() instead
 */
export declare function unregisterInteractionLockonPrompt(entity: number | Entity): boolean;
/**
 * Returns the current status of the onscreen keyboard, and updates the output.
 *
 * Status Codes:
 *
 * 0 - User still editing
 * 1 - User has finished editing
 * 2 - User has canceled editing
 * 3 - Keyboard isn't active
 *
 * Hash: 0x37DF360F235A3893 | Since: 1207
 *
 * @deprecated Use misc.updateOnscreenKeyboard() instead
 */
export declare function updateOnscreenKeyboard(): number;
/**
 * Note: The first bit in 'flags' must not be set.
 * It is also required to pass at least one extra argument (this must be a text label string or hash).
 * When passing a hash, flags should be 0.
 *
 * Hash: 0xFA925AC00EB830B9 | Since: 1207
 *
 * @deprecated Use misc.varString() instead
 */
export declare function varString(flags: number, ...params: string[]): string;
/**
 * Only used in smuggler2 script
 *
 * Hash: 0xF06C5B66DE20B2B8 | Since: 1207
 *
 * @deprecated Use misc.waterOverrideSetOceanwavemaxamplitude() instead
 */
export declare function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
/**
 * Only used in smuggler2 script
 *
 * Hash: 0x55123D5A7D9D3C42 | Since: 1207
 *
 * @deprecated Use misc.waterOverrideSetShorewaveamplitude() instead
 */
export declare function waterOverrideSetShorewaveamplitude(amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0358B8A41916C613 | Since: 1207
 *
 * @deprecated Use misc._0x0358B8A41916C613() instead
 */
export declare function _0x0358B8A41916C613(): any;
/**
 * No comment provided
 *
 * Hash: 0x0730E518486DEEC3 | Since: 1207
 *
 * @deprecated Use misc._0x0730E518486DEEC3() instead
 */
export declare function _0x0730E518486DEEC3(): void;
/**
 * disables composite Pick prompt
 *
 * Hash: 0x082C043C7AFC3747 | Since: 1207
 *
 * @deprecated Use misc.disableCompositePickPromptThisFrame() instead
 */
export declare function disableCompositePickPromptThisFrame(compositeId: number, disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0A487CC74A517FB5 | Since: 1207
 *
 * @deprecated Use misc._0x0A487CC74A517FB5() instead
 */
export declare function _0x0A487CC74A517FB5(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D0AE5081F88CFE1 | Since: 1207
 *
 * @deprecated Use misc._0x0D0AE5081F88CFE1() instead
 */
export declare function _0x0D0AE5081F88CFE1(): boolean;
/**
 * _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
 *
 * Hash: 0x1096603B519C905F | Since: 1207
 *
 * @deprecated Use misc._0x1096603B519C905F() instead
 */
export declare function _0x1096603B519C905F(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x154340E87D8CC178 | Since: 1207
 *
 * @deprecated Use misc._0x154340E87D8CC178() instead
 */
export declare function _0x154340E87D8CC178(): void;
/**
 * No comment provided
 *
 * Hash: 0x183672FE838A661B | Since: 1207
 *
 * @deprecated Use misc._0x183672FE838A661B() instead
 */
export declare function _0x183672FE838A661B(data: any): void;
/**
 * No comment provided
 *
 * Hash: 0x243CEDE8F916B994 | Since: 1207
 *
 * @deprecated Use misc._0x243CEDE8F916B994() instead
 */
export declare function _0x243CEDE8F916B994(): void;
/**
 * No comment provided
 *
 * Hash: 0x2916B30DC6C41179 | Since: 1207
 *
 * @deprecated Use misc._0x2916B30DC6C41179() instead
 */
export declare function _0x2916B30DC6C41179(weatherType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x33982467B1E349EF | Since: 1207
 *
 * @deprecated Use misc._0x33982467B1E349EF() instead
 */
export declare function _0x33982467B1E349EF(): any;
/**
 * No comment provided
 *
 * Hash: 0x35165C658077CD0B | Since: 1207
 *
 * @deprecated Use misc._0x35165C658077CD0B() instead
 */
export declare function _0x35165C658077CD0B(): any;
/**
 * No comment provided
 *
 * Hash: 0x38C0C9CAE1544500 | Since: 1207
 *
 * @deprecated Use misc._0x38C0C9CAE1544500() instead
 */
export declare function _0x38C0C9CAE1544500(): void;
/**
 * No comment provided
 *
 * Hash: 0x38C2BF94D15F464D | Since: 1207
 *
 * @deprecated Use misc._0x38C2BF94D15F464D() instead
 */
export declare function _0x38C2BF94D15F464D(): any;
/**
 * No comment provided
 *
 * Hash: 0x3A87FDA8F1B6CDFB | Since: 1207
 *
 * @deprecated Use misc._0x3A87FDA8F1B6CDFB() instead
 */
export declare function _0x3A87FDA8F1B6CDFB(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C3C7B1B5EC08764 | Since: 1207
 *
 * @deprecated Use misc._0x3C3C7B1B5EC08764() instead
 */
export declare function _0x3C3C7B1B5EC08764(): void;
/**
 * No comment provided
 *
 * Hash: 0x4647842FE8F31C1E | Since: 1207
 *
 * @deprecated Use misc._0x4647842FE8F31C1E() instead
 */
export declare function _0x4647842FE8F31C1E(): void;
/**
 * No comment provided
 *
 * Hash: 0x49C44FE78A135A1D | Since: 1207
 *
 * @deprecated Use misc._0x49C44FE78A135A1D() instead
 */
export declare function _0x49C44FE78A135A1D(): void;
/**
 * No comment provided
 *
 * Hash: 0x49F3241C28EBBFBC | Since: 1207
 *
 * @deprecated Use misc._0x49F3241C28EBBFBC() instead
 */
export declare function _0x49F3241C28EBBFBC(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B0501A468B749F8 | Since: 1207
 *
 * @deprecated Use misc._0x4B0501A468B749F8() instead
 */
export declare function _0x4B0501A468B749F8(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B101DBCC9482F2D | Since: 1207
 *
 * @deprecated Use misc._0x4B101DBCC9482F2D() instead
 */
export declare function _0x4B101DBCC9482F2D(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D5C9CC7E7E23E09 | Since: 1207
 *
 * @deprecated Use misc._0x4D5C9CC7E7E23E09() instead
 */
export declare function _0x4D5C9CC7E7E23E09(): void;
/**
 * UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
 * _J*, _K*, _L*
 *
 * Hash: 0x553D67295DDD2309 | Since: 1207
 *
 * @deprecated Use misc._0x553D67295DDD2309() instead
 */
export declare function _0x553D67295DDD2309(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x5801BE2DF2AF07EC | Since: 1207
 *
 * @deprecated Use misc._0x5801BE2DF2AF07EC() instead
 */
export declare function _0x5801BE2DF2AF07EC(): void;
/**
 * No comment provided
 *
 * Hash: 0x5B4A8121A47D844D | Since: 1207
 *
 * @deprecated Use misc._0x5B4A8121A47D844D() instead
 */
export declare function _0x5B4A8121A47D844D(): any;
/**
 * No comment provided
 *
 * Hash: 0x627B68D9CE6EE8DE | Since: 1207
 *
 * @deprecated Use misc._0x627B68D9CE6EE8DE() instead
 */
export declare function _0x627B68D9CE6EE8DE(): any;
/**
 * No comment provided
 *
 * Hash: 0x68319452C5064ABA | Since: 1207
 *
 * @deprecated Use misc._0x68319452C5064ABA() instead
 */
export declare function _0x68319452C5064ABA(): void;
/**
 * _SET_DISPATCH_*, unused
 *
 * Hash: 0x6BCF7B5CD338281A | Since: 1207
 *
 * @deprecated Use misc._0x6BCF7B5CD338281A() instead
 */
export declare function _0x6BCF7B5CD338281A(): void;
/**
 * No comment provided
 *
 * Hash: 0x6BED40493A1AFDB8 | Since: 1207
 *
 * @deprecated Use misc._0x6BED40493A1AFDB8() instead
 */
export declare function _0x6BED40493A1AFDB8(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C7B68D3CE60E8DE | Since: 1207
 *
 * @deprecated Use misc._0x6C7B68D3CE60E8DE() instead
 */
export declare function _0x6C7B68D3CE60E8DE(): any;
/**
 * No comment provided
 *
 * Hash: 0x6F02B5E50511721E | Since: 1207
 *
 * @deprecated Use misc._0x6F02B5E50511721E() instead
 */
export declare function _0x6F02B5E50511721E(): any;
/**
 * No comment provided
 *
 * Hash: 0x745808BB01CEC6B9 | Since: 1207
 *
 * @deprecated Use misc._0x745808BB01CEC6B9() instead
 */
export declare function _0x745808BB01CEC6B9(): void;
/**
 * No comment provided
 *
 * Hash: 0x74ACA66484CEBAF0 | Since: 1207
 *
 * @deprecated Use misc._0x74ACA66484CEBAF0() instead
 */
export declare function _0x74ACA66484CEBAF0(): void;
/**
 * No comment provided
 *
 * Hash: 0x7A76104CC2CC69E8 | Since: 1207
 *
 * @deprecated Use misc._0x7A76104CC2CC69E8() instead
 */
export declare function _0x7A76104CC2CC69E8(entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x7CF96F1250EF3221 | Since: 1207
 *
 * @deprecated Use misc._0x7CF96F1250EF3221() instead
 */
export declare function _0x7CF96F1250EF3221(): any;
/**
 * No comment provided
 *
 * Hash: 0x7FA58CED69405F9A | Since: 1207
 *
 * @deprecated Use misc._0x7FA58CED69405F9A() instead
 */
export declare function _0x7FA58CED69405F9A(): void;
/**
 * No comment provided
 *
 * Hash: 0x8314FC2013ECE2DA | Since: 1207
 *
 * @deprecated Use misc._0x8314FC2013ECE2DA() instead
 */
export declare function _0x8314FC2013ECE2DA(): any;
/**
 * No comment provided
 *
 * Hash: 0x8BB99B85444544D9 | Since: 1207
 *
 * @deprecated Use misc._0x8BB99B85444544D9() instead
 */
export declare function _0x8BB99B85444544D9(): any;
/**
 * No comment provided
 *
 * Hash: 0x8C0F6A3D7236DEEB | Since: 1207
 *
 * @deprecated Use misc._0x8C0F6A3D7236DEEB() instead
 */
export declare function _0x8C0F6A3D7236DEEB(): void;
/**
 * No comment provided
 *
 * Hash: 0x8DB104CCEBCD58C5 | Since: 1207
 *
 * @deprecated Use misc._0x8DB104CCEBCD58C5() instead
 */
export declare function _0x8DB104CCEBCD58C5(): any;
/**
 * Not officially named
 * , Counts the number of segments in a string that are separated by specified delimiter characters, ignoring consecutive delimiters.
 *
 * Hash: 0x94E8CA3DEE952789 | Since: 1207
 *
 * @deprecated Use misc.stringSplitAndCountSegments() instead
 */
export declare function stringSplitAndCountSegments(inputString: string, delimiters: string): number;
/**
 * No comment provided
 *
 * Hash: 0x94FCADCF9F0C368E | Since: 1207
 *
 * @deprecated Use misc._0x94FCADCF9F0C368E() instead
 */
export declare function _0x94FCADCF9F0C368E(): void;
/**
 * No comment provided
 *
 * Hash: 0x96282005C5C6801F | Since: 1311
 *
 * @deprecated Use misc._0x96282005C5C6801F() instead
 */
export declare function _0x96282005C5C6801F(): void;
/**
 * No comment provided
 *
 * Hash: 0x970339EFA4FDE518 | Since: 1207
 *
 * @deprecated Use misc._0x970339EFA4FDE518() instead
 */
export declare function _0x970339EFA4FDE518(): any;
/**
 * No comment provided
 *
 * Hash: 0x9A252AA23D7098F2 | Since: 1207
 *
 * @deprecated Use misc._0x9A252AA23D7098F2() instead
 */
export declare function _0x9A252AA23D7098F2(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BF2C0C568C61641 | Since: 1207
 *
 * @deprecated Use misc._0x9BF2C0C568C61641() instead
 */
export declare function _0x9BF2C0C568C61641(): void;
/**
 * _CLEAR*
 *
 * Hash: 0xA08111B053D84B4D | Since: 1207
 *
 * @deprecated Use misc._0xA08111B053D84B4D() instead
 */
export declare function _0xA08111B053D84B4D(): void;
/**
 * No comment provided
 *
 * Hash: 0xA3A8926951471C82 | Since: 1207
 *
 * @deprecated Use misc._0xA3A8926951471C82() instead
 */
export declare function _0xA3A8926951471C82(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xA9342743B634A462 | Since: 1207
 *
 * @deprecated Use misc._0xA9342743B634A462() instead
 */
export declare function _0xA9342743B634A462(): void;
/**
 * No comment provided
 *
 * Hash: 0xAB26DEEE120FD3FD | Since: 1207
 *
 * @deprecated Use misc._0xAB26DEEE120FD3FD() instead
 */
export declare function _0xAB26DEEE120FD3FD(): void;
/**
 * No comment provided
 *
 * Hash: 0xAD44856A1CD29635 | Since: 1207
 *
 * @deprecated Use misc._0xAD44856A1CD29635() instead
 */
export declare function _0xAD44856A1CD29635(): void;
/**
 * No comment provided
 *
 * Hash: 0xAF3A84C7DE6A1DC5 | Since: 1207
 *
 * @deprecated Use misc._0xAF3A84C7DE6A1DC5() instead
 */
export declare function _0xAF3A84C7DE6A1DC5(): void;
/**
 * Hardcoded to return one/true.
 *
 * Hash: 0xAF530E56505D1BD6 | Since: 1207
 *
 * @deprecated Use misc._0xAF530E56505D1BD6() instead
 */
export declare function _0xAF530E56505D1BD6(): any;
/**
 * No comment provided
 *
 * Hash: 0xB08C4FA25BC29DB9 | Since: 1207
 *
 * @deprecated Use misc._0xB08C4FA25BC29DB9() instead
 */
export declare function _0xB08C4FA25BC29DB9(): void;
/**
 * No comment provided
 *
 * Hash: 0xB1F6665AA54DCD5C | Since: 1207
 *
 * @deprecated Use misc._0xB1F6665AA54DCD5C() instead
 */
export declare function _0xB1F6665AA54DCD5C(): any;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xB711EB4BC8D06013 | Since: 1207
 *
 * @deprecated Use misc._0xB711EB4BC8D06013() instead
 */
export declare function _0xB711EB4BC8D06013(): void;
/**
 * No comment provided
 *
 * Hash: 0xBB282CF5D2333FB8 | Since: 1207
 *
 * @deprecated Use misc._0xBB282CF5D2333FB8() instead
 */
export declare function _0xBB282CF5D2333FB8(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBE5B63EFFB08E68 | Since: 1207
 *
 * @deprecated Use misc._0xBBE5B63EFFB08E68() instead
 */
export declare function _0xBBE5B63EFFB08E68(): any;
/**
 * No comment provided
 *
 * Hash: 0xCC1BAF72D571DB8D | Since: 1207
 *
 * @deprecated Use misc._0xCC1BAF72D571DB8D() instead
 */
export declare function _0xCC1BAF72D571DB8D(): any;
/**
 * No comment provided
 *
 * Hash: 0xCC3EDC5614B03F61 | Since: 1207
 *
 * @deprecated Use misc._0xCC3EDC5614B03F61() instead
 */
export declare function _0xCC3EDC5614B03F61(): void;
/**
 * No comment provided
 *
 * Hash: 0xD3F943B88F55376A | Since: 1207
 *
 * @deprecated Use misc._0xD3F943B88F55376A() instead
 */
export declare function _0xD3F943B88F55376A(weatherType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDA4D8EB04E8E2928 | Since: 1207
 *
 * @deprecated Use misc._0xDA4D8EB04E8E2928() instead
 */
export declare function _0xDA4D8EB04E8E2928(): void;
/**
 * No comment provided
 *
 * Hash: 0xDBDA48EC456ED908 | Since: 1436
 *
 * @deprecated Use misc._0xDBDA48EC456ED908() instead
 */
export declare function _0xDBDA48EC456ED908(): void;
/**
 * Hardcoded to return one/true.
 *
 * Hash: 0xDC057B86FC157031 | Since: 1207
 *
 * @deprecated Use misc._0xDC057B86FC157031() instead
 */
export declare function _0xDC057B86FC157031(): any;
/**
 * No comment provided
 *
 * Hash: 0xDC416CA762BC4F43 | Since: 1207
 *
 * @deprecated Use misc._0xDC416CA762BC4F43() instead
 */
export declare function _0xDC416CA762BC4F43(): any;
/**
 * No comment provided
 *
 * Hash: 0xDE2C3B74D2B3705C | Since: 1207
 *
 * @deprecated Use misc._0xDE2C3B74D2B3705C() instead
 */
export declare function _0xDE2C3B74D2B3705C(): void;
/**
 * Not implemented.
 *
 * Hash: 0xEB946B9E579729AD | Since: 1207
 *
 * @deprecated Use misc._0xEB946B9E579729AD() instead
 */
export declare function _0xEB946B9E579729AD(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF569E33FB72ED28E | Since: 1207
 *
 * @deprecated Use misc._0xF569E33FB72ED28E() instead
 */
export declare function _0xF569E33FB72ED28E(): void;
/**
 * No comment provided
 *
 * Hash: 0xF63FA29D4A9ACA86 | Since: 1207
 *
 * @deprecated Use misc._0xF63FA29D4A9ACA86() instead
 */
export declare function _0xF63FA29D4A9ACA86(): void;
/**
 * No comment provided
 *
 * Hash: 0xF650DCF5D6F312C1 | Since: 1232
 *
 * @deprecated Use misc._0xF650DCF5D6F312C1() instead
 */
export declare function _0xF650DCF5D6F312C1(): void;
/**
 * No comment provided
 *
 * Hash: 0xF81C53561D15F330 | Since: 1207
 *
 * @deprecated Use misc._0xF81C53561D15F330() instead
 */
export declare function _0xF81C53561D15F330(): string;
/**
 * No comment provided
 *
 * Hash: 0xFC6ECB9170145ECE | Since: 1207
 *
 * @deprecated Use misc._0xFC6ECB9170145ECE() instead
 */
export declare function _0xFC6ECB9170145ECE(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xFF252E2BAFB7330F | Since: 1207
 *
 * @deprecated Use misc._0xFF252E2BAFB7330F() instead
 */
export declare function _0xFF252E2BAFB7330F(): void;
/**
 * No comment provided
 *
 * Hash: 0xA2D5A26208421426 | Since: 1207
 *
 * @deprecated Use misc.addDispatchSpawnBlockingArea() instead
 */
export declare function addDispatchSpawnBlockingArea(volume: number): any;
/**
 * Only used in script function PROCESS_ZONE_CREATION
 * Returns Pop multiplier volume ID
 *
 * Hash: 0x3233C4EC0514C7EC | Since: 1207
 *
 * @deprecated Use misc.addPopMultiplierVolume() instead
 */
export declare function addPopMultiplierVolume(volume: number, pedDensity: number, vehicleDensity: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD2D74F89DF844A50 | Since: 1207
 *
 * @deprecated Use misc.clearAllBitFlags() instead
 */
export declare function clearAllBitFlags(bitFlags: any): void;
/**
 * No comment provided
 *
 * Hash: 0xB909149F2BB5F6DA | Since: 1207
 *
 * @deprecated Use misc.clearBitFlag() instead
 */
export declare function clearBitFlag(bitFlags: any, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2FCD528A397E5C88 | Since: 1207
 *
 * @deprecated Use misc.clearVolumeArea() instead
 */
export declare function clearVolumeArea(volume: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCE7690C0A0D1C36D | Since: 1207
 *
 * @deprecated Use misc.clearWeatherTypePersistOvertime() instead
 */
export declare function clearWeatherTypePersistOvertime(milliseconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0E71C80FA4EC8147 | Since: 1207
 *
 * @deprecated Use misc.clearWeatherVariation() instead
 */
export declare function clearWeatherVariation(weatherType: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE704838F36F93B7B | Since: 1355
 *
 * @deprecated Use misc.countBitFlags() instead
 */
export declare function countBitFlags(bitFlags: any): number;
/**
 * aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
 *
 * Hash: 0x88BC5F4AEF77FC4E | Since: 1207
 *
 * @deprecated Use misc.createAiMemory() instead
 */
export declare function createAiMemory(args: any, aiMemoryType: number): void;
/**
 * Returns a formatted string (0x%x)
 *
 * Hash: 0xBCC2CFADEA1AEA6C | Since: 1207
 *
 * @deprecated Use misc.createColorString() instead
 */
export declare function createColorString(rgb: number): string;
/**
 * dispatchService: see ENABLE_DISPATCH_SERVICE
 *
 * The entities must be added to itemSet.
 *
 * Hash: 0xAB3D3F45436DB1D8 | Since: 1207
 *
 * @deprecated Use misc.createIncidentWithEntities() instead
 */
export declare function createIncidentWithEntities(dispatchService: number, pos: Vector3, itemSet: any, radius: number, outIncidentID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBDC6E364C9C78178 | Since: 1207
 *
 * @deprecated Use misc.doesItemHaveValidBase() instead
 */
export declare function doesItemHaveValidBase(item: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x39D6DACE323A20B6 | Since: 1207
 *
 * @deprecated Use misc.doesPopMultiplierAreaExistForVolume() instead
 */
export declare function doesPopMultiplierAreaExistForVolume(volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9382D5D43D2AA6FF | Since: 1207
 *
 * @deprecated Use misc.doesStringExistInString() instead
 */
export declare function doesStringExistInString(string1: string, string2: string): boolean;
/**
 * p3 is always -1.0f in the scripts
 *
 * Hash: 0x67943537D179597C | Since: 1207
 *
 * @deprecated Use misc.forceLightningFlashAtCoords() instead
 */
export declare function forceLightningFlashAtCoords(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xFAED234C7F53ABEB | Since: 1207
 *
 * @deprecated Use misc.gameFrameworkManagerGetMode() instead
 */
export declare function gameFrameworkManagerGetMode(): number;
/**
 * No comment provided
 *
 * Hash: 0xAFF2FD8ADD927585 | Since: 1207
 *
 * @deprecated Use misc.gameFrameworkManagerShutdown() instead
 */
export declare function gameFrameworkManagerShutdown(): void;
/**
 * No comment provided
 *
 * Hash: 0xFDF38E2B711BF78E | Since: 1207
 *
 * @deprecated Use misc.getAiPedDoesHaveEventMemory() instead
 */
export declare function getAiPedDoesHaveEventMemory(args: any): boolean;
/**
 * https://easings.net/
 *
 * enum class eEasingCurveType
 * {
 * TYPE_LINEAR,
 * TYPE_QUADRATIC_IN,
 * TYPE_QUADRATIC_OUT,
 * TYPE_QUADRATIC_INOUT,
 * TYPE_CUBIC_IN,
 * TYPE_CUBIC_OUT,
 * TYPE_CUBIC_INOUT,
 * TYPE_QUARTIC_IN,
 * TYPE_QUARTIC_OUT,
 * TYPE_QUARTIC_INOUT,
 * TYPE_QUINTIC_IN,
 * TYPE_QUINTIC_OUT,
 * TYPE_QUINTIC_INOUT,
 * TYPE_EXPONENTIAL_IN,
 * TYPE_EXPONENTIAL_OUT,
 * TYPE_EXPONENTIAL_INOUT,
 * TYPE_SINE_IN,
 * TYPE_SINE_OUT,
 * TYPE_SINE_INOUT,
 * TYPE_CIRCULAR_IN,
 * TYPE_CIRCULAR_OUT,
 * TYPE_CIRCULAR_INOUT,
 * TYPE_BOUNCE_IN,
 * TYPE_BOUNCE_OUT,
 * TYPE_BOUNCE_INOUT,
 * TYPE_CUSTOM
 * };
 *
 * Hash: 0xEF50E344A8F93784 | Since: 1207
 *
 * @deprecated Use misc.getEasingCurveValue() instead
 */
export declare function getEasingCurveValue(t: number, b: number, d: number, easingCurveType: number): number;
/**
 * No comment provided
 *
 * Hash: 0xEE04C0AFD4EFAF0E | Since: 1207
 *
 * @deprecated Use misc.getEntityFromItem() instead
 */
export declare function getEntityFromItem(item: number): number;
/**
 * Returns the weather type that has been set by a script
 *
 * Hash: 0xDD560ABEF5D3784C | Since: 1207
 *
 * @deprecated Use misc.getForcedWeather() instead
 */
export declare function getForcedWeather(weather: number | string): void;
/**
 * `Returns rage::fwTimer::sm_nonScaledClippedTime`
 *
 * Hash: 0x483B8C542103AD72 | Since: 1207
 *
 * @deprecated Use misc.getGameTimerNonScaledClipped() instead
 */
export declare function getGameTimerNonScaledClipped(): number;
/**
 * 0 = invalid
 * 1 = CEntity
 * `2 = rage::volBase`
 * `3 = rage::volSphere`
 * `4 = rage::volBox`
 * `5 = rage::volAggregate`
 * `6 = rage::volCylinder`
 * 7 = CScriptedCoverPoint
 * `8 = rage::ptfxScriptInfo`
 * 9 = CPed
 * 10 = CVehicle
 * 11 = CObject
 * 12 = CItemSet
 * 13 = CPersistentCharacter
 *
 * Hash: 0xDC8D2FF478DF9553 | Since: 1207
 *
 * @deprecated Use misc.getItemType() instead
 */
export declare function getItemType(handle: number): number;
/**
 * Event names in the scripts: MGBegin, MGEnd, ReadyForCut
 *
 * Hash: 0xF9B91C5129EABC08 | Since: 1207
 *
 * @deprecated Use misc.getLootingEventHasFired() instead
 */
export declare function getLootingEventHasFired(ped: number | Ped, eventName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC43CD2668B204419 | Since: 1207
 *
 * @deprecated Use misc.getMaxNumInstructions() instead
 */
export declare function getMaxNumInstructions(): number;
/**
 * No comment provided
 *
 * Hash: 0x51021D36F62AAA83 | Since: 1207
 *
 * @deprecated Use misc.getNextWeatherTypeHashName() instead
 */
export declare function getNextWeatherTypeHashName(): number;
/**
 * No comment provided
 *
 * Hash: 0x72904D3D62AF5839 | Since: 1207
 *
 * @deprecated Use misc.getNumberOfInstructions() instead
 */
export declare function getNumberOfInstructions(): number;
/**
 * No comment provided
 *
 * Hash: 0x18013392501CE5DC | Since: 1207
 *
 * @deprecated Use misc.getObjectFromIndexedItem() instead
 */
export declare function getObjectFromIndexedItem(item: number): number;
/**
 * No comment provided
 *
 * Hash: 0x3FFB15534067DCD4 | Since: 1207
 *
 * @deprecated Use misc.getPedFromIndexedItem() instead
 */
export declare function getPedFromIndexedItem(item: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4BEB42AEBCA732E9 | Since: 1207
 *
 * @deprecated Use misc.getPrevWeatherTypeHashName() instead
 */
export declare function getPrevWeatherTypeHashName(): number;
/**
 * No comment provided
 *
 * Hash: 0x1359C181BC625503 | Since: 1207
 *
 * @deprecated Use misc.getRandomWeatherType() instead
 */
export declare function getRandomWeatherType(): number;
/**
 * No comment provided
 *
 * Hash: 0x7F4CE164D9A11DFE | Since: 1207
 *
 * @deprecated Use misc.getRandomWeatherTypeIndex() instead
 */
export declare function getRandomWeatherTypeIndex(): number;
/**
 * Only 0 and 1 are valid for p0, higher values causes the native to return 2.
 *
 * Hash: 0x1B065A2BF7953815 | Since: 1207
 *
 * @deprecated Use misc.getStatusOfSavegameOperation() instead
 */
export declare function getStatusOfSavegameOperation(): number;
/**
 * No comment provided
 *
 * Hash: 0xF216F74101968DB0 | Since: 1207
 *
 * @deprecated Use misc.getStringFromBool() instead
 */
export declare function getStringFromBool(value: boolean): string;
/**
 * No comment provided
 *
 * Hash: 0x2B6846401D68E563 | Since: 1207
 *
 * @deprecated Use misc.getStringFromFloat() instead
 */
export declare function getStringFromFloat(value: number, digits: number): string;
/**
 * Returns a string in the following format: <<%.4f,%.4f,%.4f>>
 *
 * Hash: 0x6C4DBF553885F9EB | Since: 1207
 *
 * @deprecated Use misc.getStringFromVector() instead
 */
export declare function getStringFromVector(pos: Vector3): string;
/**
 * No comment provided
 *
 * Hash: 0xB98B78C3768AF6E0 | Since: 1207
 *
 * @deprecated Use misc.getTemperatureAtCoords() instead
 */
export declare function getTemperatureAtCoords(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xE578C8AE173719B3 | Since: 1207
 *
 * @deprecated Use misc.getVehicleFromIndexedItem() instead
 */
export declare function getVehicleFromIndexedItem(item: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF18AF483DF70BBDE | Since: 1207
 *
 * @deprecated Use misc.getVolumeFromIndexedItem() instead
 */
export declare function getVolumeFromIndexedItem(item: number): number;
/**
 * Note: the buffer should be exactly 32 bytes long
 *
 * Hash: 0xCF11C0CEB40C401B | Since: 1207
 *
 * @deprecated Use misc.intToString() instead
 */
export declare function intToString(value: number, format: string, buffer: string): void;
/**
 * No comment provided
 *
 * Hash: 0x80E9C316EF84DD81 | Since: 1207
 *
 * @deprecated Use misc.isAnyBitFlagSet() instead
 */
export declare function isAnyBitFlagSet(bitFlags: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFEC1D4B5C82C176F | Since: 1207
 *
 * @deprecated Use misc.isBaseACoverPoint() instead
 */
export declare function isBaseACoverPoint(handle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x716F17F8A0419F95 | Since: 1207
 *
 * @deprecated Use misc.isBaseAPersistentCharacter() instead
 */
export declare function isBaseAPersistentCharacter(handle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F4F050054005C27 | Since: 1207
 *
 * @deprecated Use misc.isBitFlagSet() instead
 */
export declare function isBitFlagSet(bitFlags: any, flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xACB7E1418A8B6E32 | Since: 1207
 *
 * @deprecated Use misc.isGlobalBlockValid() instead
 */
export declare function isGlobalBlockValid(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF236C84C6ADFCB2F | Since: 1207
 *
 * @deprecated Use misc.isMissionCreatorActive() instead
 */
export declare function isMissionCreatorActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5170DDA6D63ACAAA | Since: 1207
 *
 * @deprecated Use misc.isPedDecomposed() instead
 */
export declare function isPedDecomposed(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x36040772DF5E59A0 | Since: 1355
 *
 * @deprecated Use misc.isPlayerOwningStandaloneSp() instead
 */
export declare function isPlayerOwningStandaloneSp(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x48E4D50F87A96AA5 | Since: 1207
 *
 * @deprecated Use misc.lootTablesGetInfo() instead
 */
export declare function lootTablesGetInfo(ped: number | Ped, lootTableKey: number | string): void;
/**
 * p0 must be < 2
 *
 * Hash: 0x279B0696DA4657EB | Since: 1207
 *
 * @deprecated Use misc.queueSavegameOperation() instead
 */
export declare function queueSavegameOperation(): boolean;
/**
 * Reads the passed value as floating point value and returns it.
 * Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
 *
 * Hash: 0xD2C9126410DFA1B2 | Since: 1207
 *
 * @deprecated Use misc.readIntAsFloat() instead
 */
export declare function readIntAsFloat(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBD090F5B1DB82189 | Since: 1207
 *
 * @deprecated Use misc.removePopMultiplierAreaForVolume() instead
 */
export declare function removePopMultiplierAreaForVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x54EC7B6BC72BAD69 | Since: 1207
 *
 * @deprecated Use misc.resetDispatchMaxSpawnDistance() instead
 */
export declare function resetDispatchMaxSpawnDistance(): void;
/**
 * No comment provided
 *
 * Hash: 0x96498D922D8D0D0A | Since: 1207
 *
 * @deprecated Use misc.resetDispatchMinSpawnDistance() instead
 */
export declare function resetDispatchMinSpawnDistance(): void;
/**
 * Used in CAIConditionAmbientAIMemoryReactionsEnabled
 *
 * Hash: 0x6AC4AF46A6B8DFB2 | Since: 1207
 *
 * @deprecated Use misc.setAiMemoryReactionsEnabled() instead
 */
export declare function setAiMemoryReactionsEnabled(enabled: boolean): void;
/**
 * Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
 * The flags are stored in an int array where each int has the ability to hold 32 flags.
 * Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
 *
 * Hash: 0xE84AAC1B22A73E99 | Since: 1207
 *
 * @deprecated Use misc.setBitFlag() instead
 */
export declare function setBitFlag(bitFlags: any, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x89314FB3463E28DE | Since: 1207
 *
 * @deprecated Use misc.setDispatchMaxSpawnDistance() instead
 */
export declare function setDispatchMaxSpawnDistance(maxSpawnDistance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x27A1B170AA8AF84C | Since: 1207
 *
 * @deprecated Use misc.setDispatchMinSpawnDistance() instead
 */
export declare function setDispatchMinSpawnDistance(minSpawnDistance: number): void;
/**
 * Note: this native was added in build 1232.56
 *
 * Hash: 0x550F05CFFBD63C8C | Since: 1232
 *
 * @deprecated Use misc.setGameLogicPaused() instead
 */
export declare function setGameLogicPaused(): void;
/**
 * No comment provided
 *
 * Hash: 0xE97240065406CB80 | Since: 1207
 *
 * @deprecated Use misc.setGlobalBlockIsLoaded() instead
 */
export declare function setGlobalBlockIsLoaded(index: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9617B6E5F6537B63 | Since: 1207
 *
 * @deprecated Use misc.setIncidentUnk() instead
 */
export declare function setIncidentUnk(incidentId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9B47971234169990 | Since: 1207
 *
 * @deprecated Use misc.setLootPeltSatchelItem() instead
 */
export declare function setLootPeltSatchelItem(ped: number | Ped, item: any): void;
/**
 * No comment provided
 *
 * Hash: 0xBE83CAE8ED77A94F | Since: 1207
 *
 * @deprecated Use misc.setOverrideWeather() instead
 */
export declare function setOverrideWeather(weatherType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF6BEE7E80EC5CA40 | Since: 1207
 *
 * @deprecated Use misc.setSnowLevel() instead
 */
export declare function setSnowLevel(level: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2C6A07AF9AEDABD8 | Since: 1207
 *
 * @deprecated Use misc.setWeatherType2() instead
 */
export declare function setWeatherType2(weatherType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD74ACDF7DB8114AF | Since: 1207
 *
 * @deprecated Use misc.setWeatherTypeFrozen() instead
 */
export declare function setWeatherTypeFrozen(toggle: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
 *
 * Hash: 0x3373779BAF7CAF48 | Since: 1207
 *
 * @deprecated Use misc.setWeatherVariation() instead
 */
export declare function setWeatherVariation(weatherType: string, variation: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0177CF20345F44DD | Since: 1207
 *
 * @deprecated Use misc.shouldUse24HourClock() instead
 */
export declare function shouldUse24HourClock(): boolean;
/**
 * Same as SHOULD_USE_METRIC_MEASUREMENTS
 *
 * Hash: 0x58BCDC75BA52110A | Since: 1207
 *
 * @deprecated Use misc.shouldUseMetricMeasurements2() instead
 */
export declare function shouldUseMetricMeasurements2(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF4AAF3275BAAB4F | Since: 1207
 *
 * @deprecated Use misc.shouldUseMetricTemperature() instead
 */
export declare function shouldUseMetricTemperature(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F24157FEDB85EA2 | Since: 1207
 *
 * @deprecated Use misc.shouldUseMetricWeight() instead
 */
export declare function shouldUseMetricWeight(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57E798B65C45EE17 | Since: 1232
 *
 * @deprecated Use missiondata.missiondataGetCatagory() instead
 */
export declare function missiondataGetCatagory(missionId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x9AABABF8313C3516 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataGetHighScore() instead
 */
export declare function missiondataGetHighScore(missionId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x57E798B54C45EE1A | Since: 1207
 *
 * @deprecated Use missiondata.missiondataGetRating() instead
 */
export declare function missiondataGetRating(missionId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x8C32D86E9556ED86 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataGetReplayState() instead
 */
export declare function missiondataGetReplayState(): number;
/**
 * No comment provided
 *
 * Hash: 0x57E798B56C45EE15 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataGetTextureName() instead
 */
export declare function missiondataGetTextureName(missionId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x57E798B57C45EE16 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataGetTextureTxd() instead
 */
export declare function missiondataGetTextureTxd(missionId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE824CE7D13FCB35E | Since: 1207
 *
 * @deprecated Use missiondata.missiondataIsRequiredStoryMission() instead
 */
export declare function missiondataIsRequiredStoryMission(missionId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE54DC27571D5EDC5 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataIsValid() instead
 */
export declare function missiondataIsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A04F0169DA87A9D | Since: 1207
 *
 * @deprecated Use missiondata.missiondataSetHighScore() instead
 */
export declare function missiondataSetHighScore(missionId: number | string, score: number): void;
/**
 * No comment provided
 *
 * Hash: 0x12F65317708749A5 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataSetRatingScores() instead
 */
export declare function missiondataSetRatingScores(missionId: number | string, bronzeScore: number, silverScore: number, goldScore: number): void;
/**
 * No comment provided
 *
 * Hash: 0x957A830C9B4B99EA | Since: 1232
 *
 * @deprecated Use missiondata.missiondataSetReplayLockedForCategory() instead
 */
export declare function missiondataSetReplayLockedForCategory(category: number | string, locked: boolean): void;
/**
 * see: missions.meta
 *
 * Hash: 0xE54DC27571D5EDC4 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataWasCompleted() instead
 */
export declare function missiondataWasCompleted(missionId: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE145864DECC34219 | Since: 1232
 *
 * @deprecated Use missiondata.missiondataIsReplayCategoryLocked() instead
 */
export declare function missiondataIsReplayCategoryLocked(category: number | string): boolean;
/**
 * MISSION_RATING_INCOMPLETE = 0,
 * MISSION_RATING_SKIPPED,
 * MISSION_RATING_COMPLETE,
 * MISSION_RATING_BRONZE,
 * MISSION_RATING_SILVER,
 * MISSION_RATING_GOLD,
 *
 * Hash: 0xE824CE7D13FCB300 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataSetMissionRating() instead
 */
export declare function missiondataSetMissionRating(missionId: number | string, rating: number): void;
/**
 * replayState: MISSIONDATA_GET_REPLAY_STATE
 *
 * Hash: 0xE4E2C581F127A11C | Since: 1207
 *
 * @deprecated Use missiondata.missiondataSetReplayStateLocked() instead
 */
export declare function missiondataSetReplayStateLocked(missionId: number | string, replayState: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7F89E15A8FB8DE97 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataTimecycleBoxDelete() instead
 */
export declare function missiondataTimecycleBoxDelete(): void;
/**
 * No comment provided
 *
 * Hash: 0x7E8F86A4FA33033C | Since: 1207
 *
 * @deprecated Use missiondata.missiondataTimecycleBoxExists() instead
 */
export declare function missiondataTimecycleBoxExists(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25855B1574BF8CD5 | Since: 1207
 *
 * @deprecated Use missiondata.missiondataTimecycleBoxSetModifier() instead
 */
export declare function missiondataTimecycleBoxSetModifier(timecycleName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x07AD9E43FD478527 | Since: 1207
 *
 * @deprecated Use money._0x07AD9E43FD478527() instead
 */
export declare function _0x07AD9E43FD478527(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA46FD001D1BE896C | Since: 1207
 *
 * @deprecated Use money._0xA46FD001D1BE896C() instead
 */
export declare function _0xA46FD001D1BE896C(): string;
/**
 * No comment provided
 *
 * Hash: 0x466BC8769CF26A7A | Since: 1207
 *
 * @deprecated Use money.moneyDecrementCashBalance() instead
 */
export declare function moneyDecrementCashBalance(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C02DABFA3B98176 | Since: 1207
 *
 * @deprecated Use money.moneyGetCashBalance() instead
 */
export declare function moneyGetCashBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0xBC3422DC91667621 | Since: 1207
 *
 * @deprecated Use money.moneyIncrementCashBalance() instead
 */
export declare function moneyIncrementCashBalance(amount: number, addReason: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8A67120DBC299525 | Since: 1207
 *
 * @deprecated Use money.networkGetCashBalance() instead
 */
export declare function networkGetCashBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0x282D36FF103D78DF | Since: 1207
 *
 * @deprecated Use money.networkGetStringCashBalance() instead
 */
export declare function networkGetStringCashBalance(): string;
/**
 * No comment provided
 *
 * Hash: 0xAEC5F0119867E457 | Since: 1207
 *
 * @deprecated Use money.networkIsMoneyBalanceNotLessThan() instead
 */
export declare function networkIsMoneyBalanceNotLessThan(cashBalance: number, goldBarBalance: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC019112F8995DC1C | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryInitSessionStatus() instead
 */
export declare function cashinventoryInitSessionStatus(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6CE9FB6332B5E46E | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryIsConnectionFaulted() instead
 */
export declare function cashinventoryIsConnectionFaulted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x38640A8C2DEF011B | Since: 1311
 *
 * @deprecated Use netshopping._0x38640A8C2DEF011B() instead
 */
export declare function _0x38640A8C2DEF011B(): number;
/**
 * No comment provided
 *
 * Hash: 0x3FA09DD57B93C0DE | Since: 1207
 *
 * @deprecated Use netshopping._0x3FA09DD57B93C0DE() instead
 */
export declare function _0x3FA09DD57B93C0DE(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x92A32BA29622763F | Since: 1207
 *
 * @deprecated Use netshopping._0x92A32BA29622763F() instead
 */
export declare function _0x92A32BA29622763F(id: number, index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0B7094629724974 | Since: 1207
 *
 * @deprecated Use netshopping._0xA0B7094629724974() instead
 */
export declare function _0xA0B7094629724974(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA3B8D31C13CB4239 | Since: 1311
 *
 * @deprecated Use netshopping._0xA3B8D31C13CB4239() instead
 */
export declare function _0xA3B8D31C13CB4239(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB6F4557060EF0FB4 | Since: 1207
 *
 * @deprecated Use netshopping._0xB6F4557060EF0FB4() instead
 */
export declare function _0xB6F4557060EF0FB4(): number;
/**
 * No comment provided
 *
 * Hash: 0xCE54C9ABE6FBC6DB | Since: 1207
 *
 * @deprecated Use netshopping._0xCE54C9ABE6FBC6DB() instead
 */
export declare function _0xCE54C9ABE6FBC6DB(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD1555FBC96C88444 | Since: 1207
 *
 * @deprecated Use netshopping._0xD1555FBC96C88444() instead
 */
export declare function _0xD1555FBC96C88444(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD1CE92D1D9BE170A | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryInitSessionIsFaulted() instead
 */
export declare function cashinventoryInitSessionIsFaulted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFCC24220FDDAC929 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryIsSessionReady() instead
 */
export declare function cashinventoryIsSessionReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52BDE32F21BA3B6D | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionAddAward() instead
 */
export declare function cashinventoryTransactionAddAward(id: number, hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x592BC00BF6629BE7 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionCheckout() instead
 */
export declare function cashinventoryTransactionCheckout(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26C008791D066F37 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionCheckoutStatus() instead
 */
export declare function cashinventoryTransactionCheckoutStatus(id: number, status: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59EF5D516E2D96B9 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionDelete() instead
 */
export declare function cashinventoryTransactionDelete(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFFEA09CCEC4AF32F | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionFireAndForgetItem() instead
 */
export declare function cashinventoryTransactionFireAndForgetItem(actionHash: number | string, id: number, item: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBD2D520C51CCFF52 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionGetAction() instead
 */
export declare function cashinventoryTransactionGetAction(id: number): number;
/**
 * No comment provided
 *
 * Hash: 0x52A226ADF4A270D2 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionGetBasketIsValid() instead
 */
export declare function cashinventoryTransactionGetBasketIsValid(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7616B5F0895C2D99 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionGetItemInfo() instead
 */
export declare function cashinventoryTransactionGetItemInfo(id: number, index: number, itemInfo: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF2D04D076847478 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionGetNumOfItems() instead
 */
export declare function cashinventoryTransactionGetNumOfItems(id: number): number;
/**
 * No comment provided
 *
 * Hash: 0x98412398BBE73F61 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionResponseGetItemInfo() instead
 */
export declare function cashinventoryTransactionResponseGetItemInfo(id: number, index: number, itemInfo: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF039EC27F4490E96 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionStart() instead
 */
export declare function cashinventoryTransactionStart(id: number, type: number | string, actionHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6C9F12700BCE69F4 | Since: 1207
 *
 * @deprecated Use netshopping.cashinventoryTransactionValidateItem() instead
 */
export declare function cashinventoryTransactionValidateItem(): number;
/**
 * No comment provided
 *
 * Hash: 0xD45B1FFCCD52FF19 | Since: 1207
 *
 * @deprecated Use network.activateDamageTrackerOnNetworkId() instead
 */
export declare function activateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x69778E7564BADE6D | Since: 1207
 *
 * @deprecated Use network.canRegisterMissionEntities() instead
 */
export declare function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x800DD4721A8B008B | Since: 1207
 *
 * @deprecated Use network.canRegisterMissionObjects() instead
 */
export declare function canRegisterMissionObjects(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBCBF4FEF9FA5D781 | Since: 1207
 *
 * @deprecated Use network.canRegisterMissionPeds() instead
 */
export declare function canRegisterMissionPeds(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0460C7BF80011EA | Since: 1207
 *
 * @deprecated Use network.canRegisterMissionPickups() instead
 */
export declare function canRegisterMissionPickups(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7277F1F2E085EE74 | Since: 1207
 *
 * @deprecated Use network.canRegisterMissionVehicles() instead
 */
export declare function canRegisterMissionVehicles(amount: number): boolean;
/**
 * Old name: _CLEAR_LAUNCH_PARAMS
 *
 * Hash: 0x966DD84FB6A46017 | Since: 1207
 *
 * @deprecated Use network.clearServiceEventArguments() instead
 */
export declare function clearServiceEventArguments(): void;
/**
 * No comment provided
 *
 * Hash: 0x3A3D5568AF297CD5 | Since: 1207
 *
 * @deprecated Use network.cloudDidRequestSucceed() instead
 */
export declare function cloudDidRequestSucceed(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C61B39930D045DA | Since: 1207
 *
 * @deprecated Use network.cloudHasRequestCompleted() instead
 */
export declare function cloudHasRequestCompleted(id: number): boolean;
/**
 * Takes the specified time and writes it to the structure specified in the second argument.
 *
 * struct date_time
 * {
 * int year;
 * int PADDING1;
 * int month;
 * int PADDING2;
 * int day;
 * int PADDING3;
 * int hour;
 * int PADDING4;
 * int minute;
 * int PADDING5;
 * int second;
 * int PADDING6;
 * };
 *
 * Hash: 0xAC97AF97FA68E5D5 | Since: 1207
 *
 * @deprecated Use network.convertPosixTime() instead
 */
export declare function convertPosixTime(posixTime: number, timeStructure: any): void;
/**
 * No comment provided
 *
 * Hash: 0x9A73240B49945C76 | Since: 1207
 *
 * @deprecated Use network.getCloudTimeAsInt() instead
 */
export declare function getCloudTimeAsInt(): number;
/**
 * No comment provided
 *
 * Hash: 0x65E65CA6A0FE59D4 | Since: 1207
 *
 * @deprecated Use network.getLaunchParamValue() instead
 */
export declare function getLaunchParamValue(paramName: string): string;
/**
 * Always returns 60
 *
 * Hash: 0xC7BE335216B5EC7C | Since: 1207
 *
 * @deprecated Use network.getMaxNumNetworkObjects() instead
 */
export declare function getMaxNumNetworkObjects(): number;
/**
 * Always returns 110
 *
 * Hash: 0x0C1F7D49C39D2289 | Since: 1207
 *
 * @deprecated Use network.getMaxNumNetworkPeds() instead
 */
export declare function getMaxNumNetworkPeds(): number;
/**
 * Always returns 80
 *
 * Hash: 0xA72835064DD63E4C | Since: 1207
 *
 * @deprecated Use network.getMaxNumNetworkPickups() instead
 */
export declare function getMaxNumNetworkPickups(): number;
/**
 * Always returns 40
 *
 * Hash: 0x0AFCE529F69B21FF | Since: 1207
 *
 * @deprecated Use network.getMaxNumNetworkVehicles() instead
 */
export declare function getMaxNumNetworkVehicles(): number;
/**
 * No comment provided
 *
 * Hash: 0x7A5487FE9FAA6B48 | Since: 1207
 *
 * @deprecated Use network.getNetworkTime() instead
 */
export declare function getNetworkTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x89023FBBF9200E9F | Since: 1207
 *
 * @deprecated Use network.getNetworkTimeAccurate() instead
 */
export declare function getNetworkTimeAccurate(): number;
/**
 * No comment provided
 *
 * Hash: 0x12B6281B6C6706C0 | Since: 1207
 *
 * @deprecated Use network.getNumCreatedMissionObjects() instead
 */
export declare function getNumCreatedMissionObjects(): number;
/**
 * No comment provided
 *
 * Hash: 0xCB215C4B56A7FAE7 | Since: 1207
 *
 * @deprecated Use network.getNumCreatedMissionPeds() instead
 */
export declare function getNumCreatedMissionPeds(): number;
/**
 * No comment provided
 *
 * Hash: 0x0CD9AB83489430EA | Since: 1207
 *
 * @deprecated Use network.getNumCreatedMissionVehicles() instead
 */
export declare function getNumCreatedMissionVehicles(): number;
/**
 * p0 appears to be for MP
 *
 * Hash: 0xAA81B5F10BC43AC2 | Since: 1207
 *
 * @deprecated Use network.getNumReservedMissionObjects() instead
 */
export declare function getNumReservedMissionObjects(): number;
/**
 * p0 appears to be for MP
 *
 * Hash: 0x1F13D5AE5CB17E17 | Since: 1207
 *
 * @deprecated Use network.getNumReservedMissionPeds() instead
 */
export declare function getNumReservedMissionPeds(): number;
/**
 * p0 appears to be for MP
 *
 * Hash: 0xCF3A965906452031 | Since: 1207
 *
 * @deprecated Use network.getNumReservedMissionVehicles() instead
 */
export declare function getNumReservedMissionVehicles(): number;
/**
 * Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
 * Coords: Slot world position
 *
 * Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
 *
 * Hash: 0x5E71E72A94985214 | Since: 1207
 *
 * @deprecated Use network.getReservedMissionEntitiesInArea() instead
 */
export declare function getReservedMissionEntitiesInArea(pos: Vector3, peds: number, vehicles: number, objects: number, pickups: number): void;
/**
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 *
 * Hash: 0x8BD6C6DEA20E82C6 | Since: 1207
 *
 * @deprecated Use network.getStatusOfTextureDownload() instead
 */
export declare function getStatusOfTextureDownload(textureDownloadId: number): number;
/**
 * Subtracts the second argument from the first.
 *
 * Hash: 0xA2C6FC031D46FFF0 | Since: 1207
 *
 * @deprecated Use network.getTimeDifference() instead
 */
export declare function getTimeDifference(timeA: number, timeB: number): number;
/**
 * Adds the first argument to the second.
 *
 * Hash: 0x017008CCDAD48503 | Since: 1207
 *
 * @deprecated Use network.getTimeOffset() instead
 */
export declare function getTimeOffset(timeA: number, timeB: number): number;
/**
 * No comment provided
 *
 * Hash: 0x07F723401B9D921C | Since: 1207
 *
 * @deprecated Use network.getUniqueIntForPlayer() instead
 */
export declare function getUniqueIntForPlayer(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x46718ACEEDEAFC84 | Since: 1207
 *
 * @deprecated Use network.hasNetworkTimeStarted() instead
 */
export declare function hasNetworkTimeStarted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E192E33AD436366 | Since: 1207
 *
 * @deprecated Use network.isDamageTrackerActiveOnNetworkId() instead
 */
export declare function isDamageTrackerActiveOnNetworkId(netID: number): boolean;
/**
 * Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
 *
 * Hash: 0x21D04D7BC538C146 | Since: 1207
 *
 * @deprecated Use network.isEntityAGhost() instead
 */
export declare function isEntityAGhost(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA1607996431332DF | Since: 1207
 *
 * @deprecated Use network.isNetworkIdOwnedByParticipant() instead
 */
export declare function isNetworkIdOwnedByParticipant(netId: number): boolean;
/**
 * Note: this native was added in build 1311.16
 *
 * Hash: 0x8FE9EB11EC9CC23A | Since: 1311
 *
 * @deprecated Use network.isObjectReassignmentInProgress() instead
 */
export declare function isObjectReassignmentInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD82CF8E64C8729D8 | Since: 1207
 *
 * @deprecated Use network.isSphereVisibleToAnotherMachine() instead
 */
export declare function isSphereVisibleToAnotherMachine(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC3A310219E5DA62 | Since: 1207
 *
 * @deprecated Use network.isSphereVisibleToPlayer() instead
 */
export declare function isSphereVisibleToPlayer(): boolean;
/**
 * Subtracts the second argument from the first, then returns whether the result is negative.
 *
 * Hash: 0xCB2CF5148012C8D0 | Since: 1207
 *
 * @deprecated Use network.isTimeLessThan() instead
 */
export declare function isTimeLessThan(timeA: number, timeB: number): boolean;
/**
 * Subtracts the first argument from the second, then returns whether the result is negative.
 *
 * Hash: 0xDE350F8651E4346C | Since: 1207
 *
 * @deprecated Use network.isTimeMoreThan() instead
 */
export declare function isTimeMoreThan(timeA: number, timeB: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE1BC73D6815BA361 | Since: 1207
 *
 * @deprecated Use network.keepNetworkIdInFastInstance() instead
 */
export declare function keepNetworkIdInFastInstance(netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB2CEA5105AAC8DDE | Since: 1207
 *
 * @deprecated Use network.networkAcceptRsInvite() instead
 */
export declare function networkAcceptRsInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA6A47A573ABB75A | Since: 1207
 *
 * @deprecated Use network.networkAccessTunableBool() instead
 */
export declare function networkAccessTunableBool(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8BE1146DFD5D4468 | Since: 1207
 *
 * @deprecated Use network.networkAccessTunableInt() instead
 */
export declare function networkAccessTunableInt(tunableContext: number | string, tunableName: number | string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3B82ACC3F4B6240C | Since: 1207
 *
 * @deprecated Use network.networkActionPlatformInvite() instead
 */
export declare function networkActionPlatformInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FE141FDB990E3D1 | Since: 1207
 *
 * @deprecated Use network.networkActivityResetToIdle() instead
 */
export declare function networkActivityResetToIdle(): void;
/**
 * No comment provided
 *
 * Hash: 0x9ADAC065D9F6706F | Since: 1207
 *
 * @deprecated Use network.networkActivitySetCurrent() instead
 */
export declare function networkActivitySetCurrent(netPlaylistActivity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8E02D73914064223 | Since: 1207
 *
 * @deprecated Use network.networkAddFriend() instead
 */
export declare function networkAddFriend(gamerHandle: any, message: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4B05B97BA46F419D | Since: 1207
 *
 * @deprecated Use network.networkAllowAllEntityFadingForInstances() instead
 */
export declare function networkAllowAllEntityFadingForInstances(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF3354D6CA46F419D | Since: 1207
 *
 * @deprecated Use network.networkAllowEntityFadingForInstances() instead
 */
export declare function networkAllowEntityFadingForInstances(entity: number | Entity, toggle: boolean): void;
/**
 * Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
 *
 * Hash: 0x267C78C60E806B9A | Since: 1207
 *
 * @deprecated Use network.networkAllowRemoteAttachmentModification() instead
 */
export declare function networkAllowRemoteAttachmentModification(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x57DBA049E110F217 | Since: 1207
 *
 * @deprecated Use network.networkAreHandlesTheSame() instead
 */
export declare function networkAreHandlesTheSame(gamerHandle1: any, gamerHandle2: any): boolean;
/**
 * Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
 *
 * Hash: 0x9DE986FC9A87C474 | Since: 1207
 *
 * @deprecated Use network.networkArePlayersInSameTutorialSession() instead
 */
export declare function networkArePlayersInSameTutorialSession(player: number | string | Player, index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE404BFF0ABA23CDC | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionCanSplitSession() instead
 */
export declare function networkAutoSessionCanSplitSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB51299166B844F3 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionFinishInstance() instead
 */
export declare function networkAutoSessionFinishInstance(): void;
/**
 * No comment provided
 *
 * Hash: 0xAADED99A6B268A27 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionIsAllowedToMerge() instead
 */
export declare function networkAutoSessionIsAllowedToMerge(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E2C3AEE6CE603B7 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionIsObjectCreationPaused() instead
 */
export declare function networkAutoSessionIsObjectCreationPaused(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC223D299C670413D | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionSplitSession() instead
 */
export declare function networkAutoSessionSplitSession(playersToTake: number, maxInstancePlayers: number, sessionFlags: number, bucketId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBE782B3165AC8EC | Since: 1207
 *
 * @deprecated Use network.networkAwardHasReachedMaxclaim() instead
 */
export declare function networkAwardHasReachedMaxclaim(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF50DA1A3F8B1BA4 | Since: 1207
 *
 * @deprecated Use network.networkCanAccessMultiplayer() instead
 */
export declare function networkCanAccessMultiplayer(loadingState: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1AF5E28E64A76A9F | Since: 1207
 *
 * @deprecated Use network.networkCanRefreshFriendPage() instead
 */
export declare function networkCanRefreshFriendPage(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4EEBC3694E49C572 | Since: 1207
 *
 * @deprecated Use network.networkCanSessionEnd() instead
 */
export declare function networkCanSessionEnd(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x246545C37C27A717 | Since: 1207
 *
 * @deprecated Use network.networkCanViewGamerUserContent() instead
 */
export declare function networkCanViewGamerUserContent(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A8112A974DE1EF6 | Since: 1207
 *
 * @deprecated Use network.networkCheckAccessAndAlertIfFail() instead
 */
export declare function networkCheckAccessAndAlertIfFail(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83F28CE49FBBFFBA | Since: 1207
 *
 * @deprecated Use network.networkCheckCommunicationPrivileges() instead
 */
export declare function networkCheckCommunicationPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x595F028698072DD9 | Since: 1207
 *
 * @deprecated Use network.networkCheckUserContentPrivileges() instead
 */
export declare function networkCheckUserContentPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD972DF67326F966E | Since: 1207
 *
 * @deprecated Use network.networkClearClockTimeOverride() instead
 */
export declare function networkClearClockTimeOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x6D14CCEE1B40381A | Since: 1207
 *
 * @deprecated Use network.networkClearFoundGamers() instead
 */
export declare function networkClearFoundGamers(): void;
/**
 * No comment provided
 *
 * Hash: 0x86E0660E4F5C956D | Since: 1207
 *
 * @deprecated Use network.networkClearGetGamerStatus() instead
 */
export declare function networkClearGetGamerStatus(): void;
/**
 * No comment provided
 *
 * Hash: 0xA4484173759749B1 | Since: 1207
 *
 * @deprecated Use network.networkClearPlatformInvite() instead
 */
export declare function networkClearPlatformInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBDF066252829606 | Since: 1207
 *
 * @deprecated Use network.networkConcealPlayer() instead
 */
export declare function networkConcealPlayer(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF9B83B77929D8863 | Since: 1207
 *
 * @deprecated Use network.networkDidFindGamersSucceed() instead
 */
export declare function networkDidFindGamersSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AE17C6B0134B7F1 | Since: 1207
 *
 * @deprecated Use network.networkDidGetGamerStatusSucceed() instead
 */
export declare function networkDidGetGamerStatusSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC505036A35AFD01B | Since: 1207
 *
 * @deprecated Use network.networkDisableLeaveRemotePedBehind() instead
 */
export declare function networkDisableLeaveRemotePedBehind(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x407091CF6037118E | Since: 1207
 *
 * @deprecated Use network.networkDisableProximityMigration() instead
 */
export declare function networkDisableProximityMigration(netID: number): void;
/**
 * No comment provided
 *
 * Hash: 0x236905C700FDB54D | Since: 1207
 *
 * @deprecated Use network.networkDisableRealtimeMultiplayer() instead
 */
export declare function networkDisableRealtimeMultiplayer(): void;
/**
 * Hardcoded to return -1.
 *
 * Hash: 0xD66C9E72B3CC4982 | Since: 1207
 *
 * @deprecated Use network.networkDisplaynamesFromHandlesStart() instead
 */
export declare function networkDisplaynamesFromHandlesStart(): number;
/**
 * No comment provided
 *
 * Hash: 0x38CE16C96BD11344 | Since: 1207
 *
 * @deprecated Use network.networkDoesNetworkIdExist() instead
 */
export declare function networkDoesNetworkIdExist(netID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85E5F8B9B898B20A | Since: 1207
 *
 * @deprecated Use network.networkDoesTunableExist() instead
 */
export declare function networkDoesTunableExist(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xAEDF1BC1C133D6E3 | Since: 1207
 *
 * @deprecated Use network.networkDumpNetIfConfig() instead
 */
export declare function networkDumpNetIfConfig(): void;
/**
 * No comment provided
 *
 * Hash: 0xD0AFAFF5A51D72F7 | Since: 1207
 *
 * @deprecated Use network.networkEndTutorialSession() instead
 */
export declare function networkEndTutorialSession(): void;
/**
 * No comment provided
 *
 * Hash: 0x4CACA84440FA26F6 | Since: 1207
 *
 * @deprecated Use network.networkGetAssistedDamageOfEntity() instead
 */
export declare function networkGetAssistedDamageOfEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
 *
 * Hash: 0xD414BE129BB81B32 | Since: 1207
 *
 * @deprecated Use network.networkGetAverageLatency() instead
 */
export declare function networkGetAverageLatency(player: number | string | Player): number;
/**
 * Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
 *
 * Hash: 0x350C23949E43686C | Since: 1207
 *
 * @deprecated Use network.networkGetAveragePacketLoss() instead
 */
export declare function networkGetAveragePacketLoss(player: number | string | Player): number;
/**
 * Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
 *
 * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
 *
 * Hash: 0x0E3A041ED6AC2B45 | Since: 1207
 *
 * @deprecated Use network.networkGetAveragePing() instead
 */
export declare function networkGetAveragePing(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x7A1ADEEF01740A24 | Since: 1207
 *
 * @deprecated Use network.networkGetDestroyerOfNetworkId() instead
 */
export declare function networkGetDestroyerOfNetworkId(netId: number, weaponHash: number | string): number;
/**
 * Hardcoded to return zero.
 *
 * Hash: 0x58CC181719256197 | Since: 1207
 *
 * @deprecated Use network.networkGetDisplaynamesFromHandles() instead
 */
export declare function networkGetDisplaynamesFromHandles(): number;
/**
 * No comment provided
 *
 * Hash: 0xCE4E5D9B0A4FF560 | Since: 1207
 *
 * @deprecated Use network.networkGetEntityFromNetworkId() instead
 */
export declare function networkGetEntityFromNetworkId(netId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC7827959479DCC78 | Since: 1207
 *
 * @deprecated Use network.networkGetEntityIsNetworked() instead
 */
export declare function networkGetEntityIsNetworked(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42B2DAA6B596F5F8 | Since: 1207
 *
 * @deprecated Use network.networkGetEntityKillerOfPlayer() instead
 */
export declare function networkGetEntityKillerOfPlayer(player: number | string | Player, weaponHash: number | string): number;
/**
 * Always returns a null string.
 *
 * Hash: 0x426141162EBE5CDB | Since: 1207
 *
 * @deprecated Use network.networkGetGamertagFromHandle() instead
 */
export declare function networkGetGamertagFromHandle(gamerHandle: any): string;
/**
 * No comment provided
 *
 * Hash: 0x225640E09EFFDC3F | Since: 1207
 *
 * @deprecated Use network.networkGetGameMode() instead
 */
export declare function networkGetGameMode(): number;
/**
 * No comment provided
 *
 * Hash: 0x11A7ADCD629E170F | Since: 1207
 *
 * @deprecated Use network.networkGetGlobalClock() instead
 */
export declare function networkGetGlobalClock(hour: number, minute: number, second: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6D03BFBD643B2A02 | Since: 1207
 *
 * @deprecated Use network.networkGetGlobalMultiplayerClock() instead
 */
export declare function networkGetGlobalMultiplayerClock(hours: number, minutes: number, seconds: number): void;
/**
 * Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
 *
 * Hash: 0x52C1EADAF7B10302 | Since: 1207
 *
 * @deprecated Use network.networkGetHighestReliableResendCount() instead
 */
export declare function networkGetHighestReliableResendCount(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x1D6A14F1F9A736FC | Since: 1436
 *
 * @deprecated Use network.networkGetHostOfScript() instead
 */
export declare function networkGetHostOfScript(scriptName: string): number | string;
/**
 * No comment provided
 *
 * Hash: 0xC7B4D79B01FA7A5C | Since: 1232
 *
 * @deprecated Use network.networkGetHostOfThisScript() instead
 */
export declare function networkGetHostOfThisScript(): number | string;
/**
 * No comment provided
 *
 * Hash: 0xB4A25351D79B444C | Since: 1207
 *
 * @deprecated Use network.networkGetHostOfThread() instead
 */
export declare function networkGetHostOfThread(threadId: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0x638A3A81733086DB | Since: 1207
 *
 * @deprecated Use network.networkGetInstanceIdOfThisScript() instead
 */
export declare function networkGetInstanceIdOfThisScript(): number;
/**
 * No comment provided
 *
 * Hash: 0xE86051786B66CD8E | Since: 1207
 *
 * @deprecated Use network.networkGetLocalHandle() instead
 */
export declare function networkGetLocalHandle(gamerHandle: any): void;
/**
 * Seems to always return 0, but it's used in quite a few loops.
 *
 * `for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)`
 * {
 * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)`
 * {
 * `var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));`
 *
 * Hash: 0xA6C90FBC38E395EE | Since: 1207
 *
 * @deprecated Use network.networkGetMaxNumParticipants() instead
 */
export declare function networkGetMaxNumParticipants(): number;
/**
 * No comment provided
 *
 * Hash: 0xA11700682F3AD45C | Since: 1207
 *
 * @deprecated Use network.networkGetNetworkIdFromEntity() instead
 */
export declare function networkGetNetworkIdFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x42871327315EDAE8 | Since: 1207
 *
 * @deprecated Use network.networkGetNetworkIdFromRopeId() instead
 */
export declare function networkGetNetworkIdFromRopeId(ropeId: number): number;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x6FD992C4A1C1B986 | Since: 1207
 *
 * @deprecated Use network.networkGetNetStatisticsInfo() instead
 */
export declare function networkGetNetStatisticsInfo(): void;
/**
 * Hardcoded to return zero.
 *
 * ==== PS4 specific info ====
 *
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 * 0 = REASON_OTHER
 * 1 = REASON_SYSTEM_UPDATE
 * 2 = REASON_GAME_UPDATE
 * 3 = REASON_SIGNED_OUT
 * 4 = REASON_AGE
 * 5 = REASON_CONNECTION
 *
 * =================================
 *
 * Hash: 0x74FB3E29E6D10FA9 | Since: 1207
 *
 * @deprecated Use network.networkGetNpUnavailableReason() instead
 */
export declare function networkGetNpUnavailableReason(): number;
/**
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 *
 * Hash: 0xA4A79DD2D9600654 | Since: 1207
 *
 * @deprecated Use network.networkGetNumConnectedPlayers() instead
 */
export declare function networkGetNumConnectedPlayers(): number;
/**
 * No comment provided
 *
 * Hash: 0x18D0456E86604654 | Since: 1207
 *
 * @deprecated Use network.networkGetNumParticipants() instead
 */
export declare function networkGetNumParticipants(): number;
/**
 * No comment provided
 *
 * Hash: 0x3658E8CD94FC121A | Since: 1207
 *
 * @deprecated Use network.networkGetNumScriptParticipants() instead
 */
export declare function networkGetNumScriptParticipants(scriptName: string, instanceId: number, position: number | string): number;
/**
 * Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
 *
 * Hash: 0xFF8FCF9FFC458A1C | Since: 1207
 *
 * @deprecated Use network.networkGetNumUnackedReliables() instead
 */
export declare function networkGetNumUnackedReliables(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x1B84DF6AF2A46938 | Since: 1207
 *
 * @deprecated Use network.networkGetParticipantIndex() instead
 */
export declare function networkGetParticipantIndex(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0xCE5F689CF5A0A49D | Since: 1207
 *
 * @deprecated Use network.networkGetPlayerFromGamerHandle() instead
 */
export declare function networkGetPlayerFromGamerHandle(gamerHandle: any): number | string;
/**
 * No comment provided
 *
 * Hash: 0x24FB80D107371267 | Since: 1207
 *
 * @deprecated Use network.networkGetPlayerIndex() instead
 */
export declare function networkGetPlayerIndex(player: number | string | Player): number;
/**
 * Returns the Player associated to a given Ped when in an online session.
 *
 * Hash: 0x6C0E2E0125610278 | Since: 1207
 *
 * @deprecated Use network.networkGetPlayerIndexFromPed() instead
 */
export declare function networkGetPlayerIndexFromPed(ped: number | Ped): number | string;
/**
 * Hardcoded to return zero.
 *
 * Hash: 0x2FB53C631A49BE92 | Since: 1207
 *
 * @deprecated Use network.networkGetPromotionDlgSeenCount() instead
 */
export declare function networkGetPromotionDlgSeenCount(): number;
/**
 * No comment provided
 *
 * Hash: 0xE30CF56F1EFA5F43 | Since: 1207
 *
 * @deprecated Use network.networkGetRandomIntRanged() instead
 */
export declare function networkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFEFCC345CE357453 | Since: 1207
 *
 * @deprecated Use network.networkGetRecentGamerNames() instead
 */
export declare function networkGetRecentGamerNames(outData: any, dataSize: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEB1A4DD8352EC828 | Since: 1207
 *
 * @deprecated Use network.networkGetRopeIdFromNetworkId() instead
 */
export declare function networkGetRopeIdFromNetworkId(netId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x57D158647A6BFABF | Since: 1207
 *
 * @deprecated Use network.networkGetScriptStatus() instead
 */
export declare function networkGetScriptStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x2910669969E9535E | Since: 1207
 *
 * @deprecated Use network.networkGetThisScriptIsNetworkScript() instead
 */
export declare function networkGetThisScriptIsNetworkScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5ED0356A0CE3A34F | Since: 1207
 *
 * @deprecated Use network.networkGetTimeoutTime() instead
 */
export declare function networkGetTimeoutTime(): number;
/**
 * No comment provided
 *
 * Hash: 0xDB7ABDD203FA3704 | Since: 1207
 *
 * @deprecated Use network.networkGetTotalNumFriends() instead
 */
export declare function networkGetTotalNumFriends(): number;
/**
 * No comment provided
 *
 * Hash: 0xCF61D4B4702EE9EB | Since: 1207
 *
 * @deprecated Use network.networkGetTotalNumPlayers() instead
 */
export declare function networkGetTotalNumPlayers(): number;
/**
 * No comment provided
 *
 * Hash: 0x10BD227A753B0D84 | Since: 1436
 *
 * @deprecated Use network.networkGetTunableCloudCrc() instead
 */
export declare function networkGetTunableCloudCrc(): number;
/**
 * Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
 *
 * Hash: 0x3765C3A3E8192E10 | Since: 1207
 *
 * @deprecated Use network.networkGetUnreliableResendCount() instead
 */
export declare function networkGetUnreliableResendCount(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xD45CB817D7E177D2 | Since: 1207
 *
 * @deprecated Use network.networkHandleFromFriend() instead
 */
export declare function networkHandleFromFriend(friendIndex: number, gamerHandle: any): void;
/**
 * No comment provided
 *
 * Hash: 0x388EB2B86C73B6B3 | Since: 1207
 *
 * @deprecated Use network.networkHandleFromPlayer() instead
 */
export declare function networkHandleFromPlayer(player: number | string | Player, gamerHandle: any): void;
/**
 * No comment provided
 *
 * Hash: 0xBC1D768F2F5D6C05 | Since: 1207
 *
 * @deprecated Use network.networkHashFromPlayerHandle() instead
 */
export declare function networkHashFromPlayerHandle(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x01BF60A500E28887 | Since: 1207
 *
 * @deprecated Use network.networkHasControlOfEntity() instead
 */
export declare function networkHasControlOfEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D36070FE0215186 | Since: 1207
 *
 * @deprecated Use network.networkHasControlOfNetworkId() instead
 */
export declare function networkHasControlOfNetworkId(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5BC9495F0B3B6FA6 | Since: 1207
 *
 * @deprecated Use network.networkHasControlOfPickup() instead
 */
export declare function networkHasControlOfPickup(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x51EABCF2786515AB | Since: 1311
 *
 * @deprecated Use network.networkHasControlOfPickupPlacement() instead
 */
export declare function networkHasControlOfPickupPlacement(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB07D3185E11657A5 | Since: 1207
 *
 * @deprecated Use network.networkHasEntityBeenRegisteredWithThisThread() instead
 */
export declare function networkHasEntityBeenRegisteredWithThisThread(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD0498AD30E16B6BD | Since: 1207
 *
 * @deprecated Use network.networkHasPendingInviteFailure() instead
 */
export declare function networkHasPendingInviteFailure(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5D10B3795F3FC886 | Since: 1207
 *
 * @deprecated Use network.networkHasReceivedHostBroadcastData() instead
 */
export declare function networkHasReceivedHostBroadcastData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA699957E60D80214 | Since: 1207
 *
 * @deprecated Use network.networkHasRosPrivilege() instead
 */
export declare function networkHasRosPrivilege(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67A5589628E0CFF6 | Since: 1207
 *
 * @deprecated Use network.networkHasSocialClubAccount() instead
 */
export declare function networkHasSocialClubAccount(): boolean;
/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 *
 * Hash: 0x85443FF4C328F53B | Since: 1207
 *
 * @deprecated Use network.networkHasValidRosCredentials() instead
 */
export declare function networkHasValidRosCredentials(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25CB5A9F37BFD063 | Since: 1207
 *
 * @deprecated Use network.networkHaveOnlinePrivileges() instead
 */
export declare function networkHaveOnlinePrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8020A73847E0CA7D | Since: 1207
 *
 * @deprecated Use network.networkHaveRosBannedPriv() instead
 */
export declare function networkHaveRosBannedPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8E7CE19219669AEB | Since: 1207
 *
 * @deprecated Use network.networkIsAimCamActive() instead
 */
export declare function networkIsAimCamActive(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD7C95D322FF57522 | Since: 1207
 *
 * @deprecated Use network.networkIsClockTimeOverridden() instead
 */
export declare function networkIsClockTimeOverridden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A4CF4F48AD77302 | Since: 1207
 *
 * @deprecated Use network.networkIsCloudAvailable() instead
 */
export declare function networkIsCloudAvailable(): boolean;
/**
 * Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
 *
 * Hash: 0x16D3D49902F697BB | Since: 1207
 *
 * @deprecated Use network.networkIsConnectedViaRelay() instead
 */
export declare function networkIsConnectedViaRelay(player: number | string | Player): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x78A9535AF83715C6 | Since: 1207
 *
 * @deprecated Use network.networkIsCustomUpsellEnabled() instead
 */
export declare function networkIsCustomUpsellEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9C725D149622BFDE | Since: 1207
 *
 * @deprecated Use network.networkIsFeatureSupported() instead
 */
export declare function networkIsFeatureSupported(featureId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDDF64C91BFCF0AA | Since: 1207
 *
 * @deprecated Use network.networkIsFindingGamers() instead
 */
export declare function networkIsFindingGamers(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1A24A179F9B31654 | Since: 1207
 *
 * @deprecated Use network.networkIsFriend() instead
 */
export declare function networkIsFriend(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F10B05DDF8D16E9 | Since: 1207
 *
 * @deprecated Use network.networkIsGamerInMySession() instead
 */
export declare function networkIsGamerInMySession(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x10FAB35428CCC9D7 | Since: 1207
 *
 * @deprecated Use network.networkIsGameInProgress() instead
 */
export declare function networkIsGameInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F79B93B0A8E4133 | Since: 1207
 *
 * @deprecated Use network.networkIsHandleValid() instead
 */
export declare function networkIsHandleValid(gamerHandle: any): boolean;
/**
 * If you are host, returns true else returns false.
 *
 * Hash: 0x8DB296B814EDDA07 | Since: 1207
 *
 * @deprecated Use network.networkIsHost() instead
 */
export declare function networkIsHost(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83CD99A1E6061AB5 | Since: 1207
 *
 * @deprecated Use network.networkIsHostOfThisScript() instead
 */
export declare function networkIsHostOfThisScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6CC27C9FA2040220 | Since: 1207
 *
 * @deprecated Use network.networkIsInMpCutscene() instead
 */
export declare function networkIsInMpCutscene(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x2FC5650B0271CB57 | Since: 1207
 *
 * @deprecated Use network.networkIsInPlatformParty() instead
 */
export declare function networkIsInPlatformParty(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0xFD8B834A8BA05048 | Since: 1207
 *
 * @deprecated Use network.networkIsInPlatformPartyChat() instead
 */
export declare function networkIsInPlatformPartyChat(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA97246103B63917 | Since: 1207
 *
 * @deprecated Use network.networkIsInSession() instead
 */
export declare function networkIsInSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x048746E388762E11 | Since: 1207
 *
 * @deprecated Use network.networkIsInSpectatorMode() instead
 */
export declare function networkIsInSpectatorMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xADA24309FE08DACF | Since: 1207
 *
 * @deprecated Use network.networkIsInTutorialSession() instead
 */
export declare function networkIsInTutorialSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6FF8FF40B6357D45 | Since: 1207
 *
 * @deprecated Use network.networkIsParticipantActive() instead
 */
export declare function networkIsParticipantActive(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x0BE73DA6984A6E33 | Since: 1207
 *
 * @deprecated Use network.networkIsPendingFriend() instead
 */
export declare function networkIsPendingFriend(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC4165C9165C166F | Since: 1207
 *
 * @deprecated Use network.networkIsPlatformInvitePending() instead
 */
export declare function networkIsPlatformInvitePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB8DFD30D6973E135 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerActive() instead
 */
export declare function networkIsPlayerActive(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3CA58F6CB7CBD784 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerAParticipant() instead
 */
export declare function networkIsPlayerAParticipant(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1AD5B71586B94820 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerAParticipantOnScript() instead
 */
export declare function networkIsPlayerAParticipantOnScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x919B3C98ED8292F9 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerConcealed() instead
 */
export declare function networkIsPlayerConcealed(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x93DC1BE4E1ABE9D1 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerConnected() instead
 */
export declare function networkIsPlayerConnected(player: number | string | Player): boolean;
/**
 * Returns true if the passed value is less than 32.
 *
 * Hash: 0x255A5EF65EDA9167 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerIndexValid() instead
 */
export declare function networkIsPlayerIndexValid(player: number | string | Player): boolean;
/**
 * Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
 *
 * Hash: 0x63F9EE203C3619F2 | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerInMpCutscene() instead
 */
export declare function networkIsPlayerInMpCutscene(player: number | string | Player): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x8FF6059DA26E688A | Since: 1207
 *
 * @deprecated Use network.networkIsPromotionEnabled() instead
 */
export declare function networkIsPromotionEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1BB50CD340A996E6 | Since: 1207
 *
 * @deprecated Use network.networkIsResettingPopulation() instead
 */
export declare function networkIsResettingPopulation(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9D40DF90FAD26098 | Since: 1207
 *
 * @deprecated Use network.networkIsScriptActive() instead
 */
export declare function networkIsScriptActive(scriptName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1B89BC43B6E69107 | Since: 1207
 *
 * @deprecated Use network.networkIsScriptActiveByHash() instead
 */
export declare function networkIsScriptActiveByHash(scriptHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD83C2B94E7508980 | Since: 1207
 *
 * @deprecated Use network.networkIsSessionActive() instead
 */
export declare function networkIsSessionActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9DE624D2FC4B603F | Since: 1207
 *
 * @deprecated Use network.networkIsSessionStarted() instead
 */
export declare function networkIsSessionStarted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1077788E268557C2 | Since: 1207
 *
 * @deprecated Use network.networkIsSignedOnline() instead
 */
export declare function networkIsSignedOnline(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0467C11ED88B7D28 | Since: 1207
 *
 * @deprecated Use network.networkIsTunableCloudRequestPending() instead
 */
export declare function networkIsTunableCloudRequestPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x35F0B98A8387274D | Since: 1207
 *
 * @deprecated Use network.networkIsTutorialSessionChangePending() instead
 */
export declare function networkIsTutorialSessionChangePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2302C0264EA58D31 | Since: 1207
 *
 * @deprecated Use network.networkPreventScriptHostMigration() instead
 */
export declare function networkPreventScriptHostMigration(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F51F367B710A832 | Since: 1207
 *
 * @deprecated Use network.networkRefreshCurrentFriendPage() instead
 */
export declare function networkRefreshCurrentFriendPage(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x06FAACD625D80CAA | Since: 1207
 *
 * @deprecated Use network.networkRegisterEntityAsNetworked() instead
 */
export declare function networkRegisterEntityAsNetworked(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x3E9B2F01C50DF595 | Since: 1207
 *
 * @deprecated Use network.networkRegisterHostBroadcastVariables() instead
 */
export declare function networkRegisterHostBroadcastVariables(): void;
/**
 * No comment provided
 *
 * Hash: 0x3364AA97340CA215 | Since: 1207
 *
 * @deprecated Use network.networkRegisterPlayerBroadcastVariables() instead
 */
export declare function networkRegisterPlayerBroadcastVariables(): void;
/**
 * Note: this native was added in build 1311.23, but was only used after build 1436.25
 *
 * Hash: 0x42FB3B532D526E6C | Since: 1311
 *
 * @deprecated Use network.networkRequestCloudTunables() instead
 */
export declare function networkRequestCloudTunables(): void;
/**
 * No comment provided
 *
 * Hash: 0xB69317BF5E782347 | Since: 1207
 *
 * @deprecated Use network.networkRequestControlOfEntity() instead
 */
export declare function networkRequestControlOfEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA670B3662FAFFBD0 | Since: 1207
 *
 * @deprecated Use network.networkRequestControlOfNetworkId() instead
 */
export declare function networkRequestControlOfNetworkId(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x56ED2C48558DAB78 | Since: 1311
 *
 * @deprecated Use network.networkRequestControlOfPickupPlacement() instead
 */
export declare function networkRequestControlOfPickupPlacement(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE483BB6BE686F632 | Since: 1207
 *
 * @deprecated Use network.networkRequestJoin() instead
 */
export declare function networkRequestJoin(): number;
/**
 * No comment provided
 *
 * Hash: 0x6D206D383BB5F6B1 | Since: 1207
 *
 * @deprecated Use network.networkRequestRecentGamerNames() instead
 */
export declare function networkRequestRecentGamerNames(playerCount: number): boolean;
/**
 * flags:
 * enum eSessionRequestOptionFlags
 * {
 * SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
 * SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
 * };
 *
 * seamlessType:
 * enum eSeamlessType
 * {
 * SEAMLESS_TYPE_NORMAL,
 * SEAMLESS_TYPE_PVE,
 * SEAMLESS_TYPE_DEV,
 * SEAMLESS_TYPE_NO_SEAMLESS
 * };
 *
 * Hash: 0x04019AE4956D4393 | Since: 1207
 *
 * @deprecated Use network.networkRequestSessionSeamless() instead
 */
export declare function networkRequestSessionSeamless(flags: number, seamlessType: number, sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x101F538C25ABB39A | Since: 1207
 *
 * @deprecated Use network.networkResetPopulation() instead
 */
export declare function networkResetPopulation(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA23C49EAA83ACFB | Since: 1207
 *
 * @deprecated Use network.networkResurrectLocalPlayer() instead
 */
export declare function networkResurrectLocalPlayer(pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF1B84178F8674195 | Since: 1207
 *
 * @deprecated Use network.networkSeedRandomNumberGenerator() instead
 */
export declare function networkSeedRandomNumberGenerator(seed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x51F33DBC1A41CBFD | Since: 1207
 *
 * @deprecated Use network.networkSessionGetSessionFlags() instead
 */
export declare function networkSessionGetSessionFlags(): number;
/**
 * No comment provided
 *
 * Hash: 0xF0C0C94B404206FA | Since: 1207
 *
 * @deprecated Use network.networkSessionGetSessionType() instead
 */
export declare function networkSessionGetSessionType(): number;
/**
 * No comment provided
 *
 * Hash: 0xBAFFDE5F953720D9 | Since: 1207
 *
 * @deprecated Use network.networkSessionIsAnyRequestInProgress() instead
 */
export declare function networkSessionIsAnyRequestInProgress(): boolean;
/**
 * Checks for session flag 'SF_PRIVATE'
 *
 * Hash: 0xCEF70AA5B3F89BA1 | Since: 1207
 *
 * @deprecated Use network.networkSessionIsPrivate() instead
 */
export declare function networkSessionIsPrivate(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8FB7C254CFCBF78E | Since: 1207
 *
 * @deprecated Use network.networkSessionIsRequestInProgress() instead
 */
export declare function networkSessionIsRequestInProgress(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCCF878D50F8AB10D | Since: 1207
 *
 * @deprecated Use network.networkSessionIsRequestPendingTransition() instead
 */
export declare function networkSessionIsRequestPendingTransition(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F54B146D3EDCE4D | Since: 1207
 *
 * @deprecated Use network.networkSessionIsSessionRequestIdValid() instead
 */
export declare function networkSessionIsSessionRequestIdValid(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF2CBC969C4F090C7 | Since: 1207
 *
 * @deprecated Use network.networkSessionIsTransitioning() instead
 */
export declare function networkSessionIsTransitioning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x17C21B7319A05047 | Since: 1207
 *
 * @deprecated Use network.networkSessionLeaveSession() instead
 */
export declare function networkSessionLeaveSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xECE6A0C1B59CD8BE | Since: 1207
 *
 * @deprecated Use network.networkSessionLeftQueueOrRequestedSession() instead
 */
export declare function networkSessionLeftQueueOrRequestedSession(sessionRequestId: any): boolean;
/**
 * See _NETWORK_SESSION_ADD_SESSION_FLAGS
 *
 * Hash: 0x78335E12DB0BF961 | Since: 1207
 *
 * @deprecated Use network.networkSessionRemoveSessionFlags() instead
 */
export declare function networkSessionRemoveSessionFlags(flags: number): boolean;
/**
 * matchType:
 * enum eMatchType
 * {
 * MATCHTYPE_DEPRECATED,
 * MATCHTYPE_UGCPLAYLIST,
 * MATCHTYPE_UGCMISSION,
 * MATCHTYPE_MINIGAME,
 * MATCHTYPE_SEAMLESS,
 * MATCHTYPE_PRIVATE_DO_NOT_USE
 * };
 *
 * Hash: 0x309BBEBEA8A3986C | Since: 1207
 *
 * @deprecated Use network.networkSessionRequestSessionCompetitive() instead
 */
export declare function networkSessionRequestSessionCompetitive(flags: number, matchType: number, userHash: number, sessionRequestId: any): boolean;
/**
 * Session flag 'SF_PRIVATE' is set internally
 * p1 represents max amount of players in private session
 *
 * Hash: 0x39A8EF7AF29A192C | Since: 1207
 *
 * @deprecated Use network.networkSessionRequestSessionPrivate() instead
 */
export declare function networkSessionRequestSessionPrivate(flags: number, numPlayers: number, userHash: number, sessionRequestId: any): boolean;
/**
 * Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
 * Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
 *
 * p1 is unused
 *
 * Hash: 0x2989E131FDE37E97 | Since: 1207
 *
 * @deprecated Use network.networkSessionRequestSessionSeamless() instead
 */
export declare function networkSessionRequestSessionSeamless(flags: number, seamlessType: number, userHash: number, sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2C5BD9A43987AA27 | Since: 1207
 *
 * @deprecated Use network.networkSetCompletedMpIntroFlowOnCurrentSlot() instead
 */
export declare function networkSetCompletedMpIntroFlowOnCurrentSlot(completed: boolean): boolean;
/**
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 *
 * pc or last gen?
 *
 * ^^ last-gen
 *
 * Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
 *
 * Hash: 0xF1CA12B18AEF5298 | Since: 1207
 *
 * @deprecated Use network.networkSetEntityOnlyExistsForParticipants() instead
 */
export declare function networkSetEntityOnlyExistsForParticipants(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD785864798258032 | Since: 1207
 *
 * @deprecated Use network.networkSetEntityRemainsWhenUnnetworked() instead
 */
export declare function networkSetEntityRemainsWhenUnnetworked(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF808475FA571D823 | Since: 1207
 *
 * @deprecated Use network.networkSetFriendlyFireOption() instead
 */
export declare function networkSetFriendlyFireOption(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9CA5DE655269FEC4 | Since: 1207
 *
 * @deprecated Use network.networkSetInMpCutscene() instead
 */
export declare function networkSetInMpCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0x423DE3854BB50894 | Since: 1207
 *
 * @deprecated Use network.networkSetInSpectatorMode() instead
 */
export declare function networkSetInSpectatorMode(toggle: boolean, playerPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2D95C7E2D7E07307 | Since: 1207
 *
 * @deprecated Use network.networkSetLocalPlayerInvincibleTime() instead
 */
export declare function networkSetLocalPlayerInvincibleTime(time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x007FF852DCF49DA4 | Since: 1207
 *
 * @deprecated Use network.networkSetLocalPlayerPendingFastInstanceId() instead
 */
export declare function networkSetLocalPlayerPendingFastInstanceId(instanceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x524FF0AEFF9C3973 | Since: 1207
 *
 * @deprecated Use network.networkSetLocalPlayerSyncLookAt() instead
 */
export declare function networkSetLocalPlayerSyncLookAt(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3B3D11CD9FFCDFC9 | Since: 1207
 *
 * @deprecated Use network.networkSetMissionFinished() instead
 */
export declare function networkSetMissionFinished(): void;
/**
 * No comment provided
 *
 * Hash: 0x86FD10251A7118A4 | Since: 1207
 *
 * @deprecated Use network.networkSetMpMissionFlagOnCurrentSlot() instead
 */
export declare function networkSetMpMissionFlagOnCurrentSlot(enabled: boolean, flagIndex: number): boolean;
/**
 * Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
 *
 * Hash: 0x9C25E8EC4C535FBD | Since: 1207
 *
 * @deprecated Use network.networkSetPlayerIsPassive() instead
 */
export declare function networkSetPlayerIsPassive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x29FE035D35B8589C | Since: 1207
 *
 * @deprecated Use network.networkSetRecentGamersEnabled() instead
 */
export declare function networkSetRecentGamersEnabled(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1DCCACDCFC569362 | Since: 1207
 *
 * @deprecated Use network.networkSetRichPresence() instead
 */
export declare function networkSetRichPresence(): void;
/**
 * No comment provided
 *
 * Hash: 0x7AC752103856FB20 | Since: 1207
 *
 * @deprecated Use network.networkSetScriptReadyForEvents() instead
 */
export declare function networkSetScriptReadyForEvents(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1CA59E306ECB80A5 | Since: 1207
 *
 * @deprecated Use network.networkSetThisScriptIsNetworkScript() instead
 */
export declare function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, instanceId: number): void;
/**
 * Hardcoded to return false.
 *
 * Hash: 0xDA4B1A479C414FB2 | Since: 1207
 *
 * @deprecated Use network.networkShouldShowPromotionDlg() instead
 */
export declare function networkShouldShowPromotionDlg(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83FE8D7229593017 | Since: 1207
 *
 * @deprecated Use network.networkShowAccountUpgradeUi() instead
 */
export declare function networkShowAccountUpgradeUi(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x6BFF5F84102DF80A | Since: 1207
 *
 * @deprecated Use network.networkShowChatRestrictionMsc() instead
 */
export declare function networkShowChatRestrictionMsc(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x859ED1CEA343FCA8 | Since: 1207
 *
 * @deprecated Use network.networkShowProfileUi() instead
 */
export declare function networkShowProfileUi(gamerHandle: any): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x5C497525F803486B | Since: 1207
 *
 * @deprecated Use network.networkShowPsnUgcRestriction() instead
 */
export declare function networkShowPsnUgcRestriction(): void;
/**
 * No comment provided
 *
 * Hash: 0xF94A0D5B254375DF | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSetFlags() instead
 */
export declare function networkSpawnConfigSetFlags(flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x59577799F6AE2F34 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSetGroundToRootOffset() instead
 */
export declare function networkSpawnConfigSetGroundToRootOffset(offset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0608326F7B98C08D | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSetTuningFloat() instead
 */
export declare function networkSpawnConfigSetTuningFloat(): void;
/**
 * No comment provided
 *
 * Hash: 0x17E0198B3882C2CB | Since: 1207
 *
 * @deprecated Use network.networkStartSoloTutorialSession() instead
 */
export declare function networkStartSoloTutorialSession(): void;
/**
 * Always returns -1. Seems to be XB1 specific.
 *
 * Hash: 0xDEB2B99A1AF1A2A6 | Since: 1207
 *
 * @deprecated Use network.networkStartUserContentPermissionsCheck() instead
 */
export declare function networkStartUserContentPermissionsCheck(gamerHandle: any): number;
/**
 * Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
 *
 * Hash: 0x0C8BC052AE87D744 | Since: 1207
 *
 * @deprecated Use network.networkTriggerDamageEventForZeroDamage() instead
 */
export declare function networkTriggerDamageEventForZeroDamage(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB2AD5D29A99D4B26 | Since: 1207
 *
 * @deprecated Use network.networkTryAccessTunableBoolHash() instead
 */
export declare function networkTryAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string, defaultValue: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA18393089C05E49C | Since: 1207
 *
 * @deprecated Use network.networkTryAccessTunableFloatHash() instead
 */
export declare function networkTryAccessTunableFloatHash(tunableContext: number | string, tunableName: number | string, defaultValue: number): number;
/**
 * No comment provided
 *
 * Hash: 0xA25E006B36719774 | Since: 1207
 *
 * @deprecated Use network.networkTryAccessTunableIntHash() instead
 */
export declare function networkTryAccessTunableIntHash(tunableContext: number | string, tunableName: number | string, defaultValue: number): number;
/**
 * gets the entity id of a network id
 *
 * Hash: 0xBFFEAB45A9A9094A | Since: 1207
 *
 * @deprecated Use network.netToEnt() instead
 */
export declare function netToEnt(netHandle: number): number;
/**
 * gets the object id of a network id
 *
 * Hash: 0xD8515F5FEA14CB3F | Since: 1207
 *
 * @deprecated Use network.netToObj() instead
 */
export declare function netToObj(netHandle: number): number;
/**
 * gets the ped id of a network id
 *
 * Hash: 0xBDCD95FC216A8B3E | Since: 1207
 *
 * @deprecated Use network.netToPed() instead
 */
export declare function netToPed(netHandle: number): number;
/**
 * No comment provided
 *
 * Hash: 0x367B936610BA360C | Since: 1207
 *
 * @deprecated Use network.netToVeh() instead
 */
export declare function netToVeh(netHandle: number): number;
/**
 * Returns the network ID of the given object.
 *
 * Hash: 0x99BFDC94A603E541 | Since: 1207
 *
 * @deprecated Use network.objToNet() instead
 */
export declare function objToNet(object: number | Object): number;
/**
 * Return the local Participant ID
 *
 * Hash: 0x90986E8876CE0A83 | Since: 1207
 *
 * @deprecated Use network.participantId() instead
 */
export declare function participantId(): number | string;
/**
 * Return the local Participant ID.
 *
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 *
 * Hash: 0x57A3BDDAD8E5AA0A | Since: 1207
 *
 * @deprecated Use network.participantIdToInt() instead
 */
export declare function participantIdToInt(): number;
/**
 * Returns the network ID of the given ped.
 *
 * Hash: 0x0EDEC3C276198689 | Since: 1207
 *
 * @deprecated Use network.pedToNet() instead
 */
export declare function pedToNet(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x89D803CD48622150 | Since: 1207
 *
 * @deprecated Use network.preventMigrationOfEntitiesInFastInstanceForLocalPlayer() instead
 */
export declare function preventMigrationOfEntitiesInFastInstanceForLocalPlayer(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7182EDDA1EE7DB5A | Since: 1207
 *
 * @deprecated Use network.preventNetworkIdMigration() instead
 */
export declare function preventNetworkIdMigration(netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE7DDA8BD3BCF751C | Since: 1207
 *
 * @deprecated Use network.reserveNetworkClientMissionObjects() instead
 */
export declare function reserveNetworkClientMissionObjects(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x807E119F80231732 | Since: 1207
 *
 * @deprecated Use network.reserveNetworkClientMissionPeds() instead
 */
export declare function reserveNetworkClientMissionPeds(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4E5C93BD0C32FBF8 | Since: 1207
 *
 * @deprecated Use network.reserveNetworkMissionObjects() instead
 */
export declare function reserveNetworkMissionObjects(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB60FEBA45333D36F | Since: 1207
 *
 * @deprecated Use network.reserveNetworkMissionPeds() instead
 */
export declare function reserveNetworkMissionPeds(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4D40E7D749BC6E6D | Since: 1207
 *
 * @deprecated Use network.reserveNetworkMissionPickups() instead
 */
export declare function reserveNetworkMissionPickups(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x76B02E21ED27A469 | Since: 1207
 *
 * @deprecated Use network.reserveNetworkMissionVehicles() instead
 */
export declare function reserveNetworkMissionVehicles(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE0031D3C8F36AB82 | Since: 1207
 *
 * @deprecated Use network.setEntityVisibleInCutscene() instead
 */
export declare function setEntityVisibleInCutscene(entity: number | Entity): void;
/**
 * Old name: _SET_LOCAL_PLAYER_AS_GHOST
 *
 * Hash: 0x5FFE9B4144F9712F | Since: 1207
 *
 * @deprecated Use network.setLocalPlayerAsGhost() instead
 */
export declare function setLocalPlayerAsGhost(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE5F773C1A1D9D168 | Since: 1207
 *
 * @deprecated Use network.setLocalPlayerInvisibleLocally() instead
 */
export declare function setLocalPlayerInvisibleLocally(): void;
/**
 * No comment provided
 *
 * Hash: 0xD1065D68947E7B6E | Since: 1207
 *
 * @deprecated Use network.setLocalPlayerVisibleInCutscene() instead
 */
export declare function setLocalPlayerVisibleInCutscene(local: boolean, remote: boolean, instanceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA8A024587329F36A | Since: 1207
 *
 * @deprecated Use network.setNetworkIdAlwaysExistsForPlayer() instead
 */
export declare function setNetworkIdAlwaysExistsForPlayer(netId: number, player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE05E81A888FA63C8 | Since: 1207
 *
 * @deprecated Use network.setNetworkIdExistsOnAllMachines() instead
 */
export declare function setNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9ED3108D6847760A | Since: 1207
 *
 * @deprecated Use network.setNetworkIdStopCloning() instead
 */
export declare function setNetworkIdStopCloning(networkId: number, bStopCloning: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA6928482543022B4 | Since: 1207
 *
 * @deprecated Use network.setNetworkIdVisibleInCutscene() instead
 */
export declare function setNetworkIdVisibleInCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0x12B37D54667DB0B8 | Since: 1207
 *
 * @deprecated Use network.setPlayerInvisibleLocally() instead
 */
export declare function setPlayerInvisibleLocally(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFAA10F1FAFB11AF2 | Since: 1207
 *
 * @deprecated Use network.setPlayerVisibleLocally() instead
 */
export declare function setPlayerVisibleLocally(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3448505B6E35262D | Since: 1207
 *
 * @deprecated Use network.textureDownloadGetName() instead
 */
export declare function textureDownloadGetName(textureDownloadId: number): string;
/**
 * No comment provided
 *
 * Hash: 0x487EB90B98E9FB19 | Since: 1207
 *
 * @deprecated Use network.textureDownloadRelease() instead
 */
export declare function textureDownloadRelease(textureDownloadId: number): void;
/**
 * Returns textureDownloadId
 *
 * Hash: 0x16160DA74A8E74A2 | Since: 1207
 *
 * @deprecated Use network.textureDownloadRequest() instead
 */
export declare function textureDownloadRequest(gamerHandle: any, filePath: string, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xE931354FEA710038 | Since: 1207
 *
 * @deprecated Use network.ugcClearQueryResults() instead
 */
export declare function ugcClearQueryResults(ugcRequestId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x162C23CA83ED0A62 | Since: 1207
 *
 * @deprecated Use network.ugcDidDescriptionRequestSucceed() instead
 */
export declare function ugcDidDescriptionRequestSucceed(description: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0B6009A90B8495F1 | Since: 1207
 *
 * @deprecated Use network.ugcDidRequestSucceed() instead
 */
export declare function ugcDidRequestSucceed(ugcRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40F7E66472DF3E5C | Since: 1207
 *
 * @deprecated Use network.ugcGetCachedDescription() instead
 */
export declare function ugcGetCachedDescription(description: number | string, length: number): string;
/**
 * No comment provided
 *
 * Hash: 0xEBFA8D50ADDC54C4 | Since: 1207
 *
 * @deprecated Use network.ugcHasDescriptionRequestFinished() instead
 */
export declare function ugcHasDescriptionRequestFinished(description: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9EB4D606076615D | Since: 1207
 *
 * @deprecated Use network.ugcHasRequestFinished() instead
 */
export declare function ugcHasRequestFinished(ugcRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2D5DC831176D0114 | Since: 1207
 *
 * @deprecated Use network.ugcIsDescriptionRequestInProgress() instead
 */
export declare function ugcIsDescriptionRequestInProgress(description: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF53E48461B71EECB | Since: 1207
 *
 * @deprecated Use network.ugcIsLanguageSupported() instead
 */
export declare function ugcIsLanguageSupported(languageId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF4AC4FA844FD559A | Since: 1207
 *
 * @deprecated Use network.ugcIsRequestPending() instead
 */
export declare function ugcIsRequestPending(ugcRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF794765390A6DCA5 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetContentHasPlayerRecord() instead
 */
export declare function ugcQueryGetContentHasPlayerRecord(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76160E0396142765 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetContentNum() instead
 */
export declare function ugcQueryGetContentNum(ugcRequestId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF8F0705E77A0E705 | Since: 1207
 *
 * @deprecated Use network.ugcQueryWasForceCancelled() instead
 */
export declare function ugcQueryWasForceCancelled(ugcRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x68103E2247887242 | Since: 1207
 *
 * @deprecated Use network.ugcReleaseAllCachedDescriptions() instead
 */
export declare function ugcReleaseAllCachedDescriptions(): void;
/**
 * No comment provided
 *
 * Hash: 0x5A34CD9C3C5BEC44 | Since: 1207
 *
 * @deprecated Use network.ugcReleaseCachedDescription() instead
 */
export declare function ugcReleaseCachedDescription(description: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5E0165278F6339EE | Since: 1207
 *
 * @deprecated Use network.ugcRequestCachedDescription() instead
 */
export declare function ugcRequestCachedDescription(description: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7FD2990AF016795E | Since: 1207
 *
 * @deprecated Use network.ugcRequestContentDataFromParams() instead
 */
export declare function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string, fileId: number, fileVersion: number, languageId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF98DDE0A8ED09323 | Since: 1207
 *
 * @deprecated Use network.ugcSetQueryDataFromOffline() instead
 */
export declare function ugcSetQueryDataFromOffline(): void;
/**
 * No comment provided
 *
 * Hash: 0x308F96458B7087CC | Since: 1207
 *
 * @deprecated Use network.ugcTextureDownloadRequest() instead
 */
export declare function ugcTextureDownloadRequest(): number;
/**
 * Returns the network ID of the given vehicle.
 *
 * Hash: 0xB4C94523F023419C | Since: 1207
 *
 * @deprecated Use network.vehToNet() instead
 */
export declare function vehToNet(vehicle: number | Vehicle): number;
/**
 * Note: this native was added in build 1311.16
 *
 * GET_NUM_*
 *
 * Hash: 0x02B3CDD652B3CDD6 | Since: 1311
 *
 * @deprecated Use network._0x02B3CDD652B3CDD6() instead
 */
export declare function _0x02B3CDD652B3CDD6(): number;
/**
 * Only used in SP R* Script dominoes_sp: p1 = 0
 *
 * Hash: 0x02C4C6C2900D84DF | Since: 1207
 *
 * @deprecated Use network._0x02C4C6C2900D84DF() instead
 */
export declare function _0x02C4C6C2900D84DF(player: number | string | Player): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x039AD6B57D5179FF | Since: 1311
 *
 * @deprecated Use network._0x039AD6B57D5179FF() instead
 */
export declare function _0x039AD6B57D5179FF(): number;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x039B692B3318FAB6 | Since: 1311
 *
 * @deprecated Use network._0x039B692B3318FAB6() instead
 */
export declare function _0x039B692B3318FAB6(): number;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x062842D61D0D53FD | Since: 1311
 *
 * @deprecated Use network._0x062842D61D0D53FD() instead
 */
export declare function _0x062842D61D0D53FD(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0B6B4507AC5EA8B8 | Since: 1207
 *
 * @deprecated Use network._0x0B6B4507AC5EA8B8() instead
 */
export declare function _0x0B6B4507AC5EA8B8(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BF90CBB6B72977B | Since: 1207
 *
 * @deprecated Use network._0x0BF90CBB6B72977B() instead
 */
export declare function _0x0BF90CBB6B72977B(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x0CC28C08613BA9E5 | Since: 1207
 *
 * @deprecated Use network._0x0CC28C08613BA9E5() instead
 */
export declare function _0x0CC28C08613BA9E5(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x0D183D8490EE4366 | Since: 1311
 *
 * @deprecated Use network._0x0D183D8490EE4366() instead
 */
export declare function _0x0D183D8490EE4366(): void;
/**
 * No comment provided
 *
 * Hash: 0x0E54D4DA6018FF8E | Since: 1207
 *
 * @deprecated Use network._0x0E54D4DA6018FF8E() instead
 */
export declare function _0x0E54D4DA6018FF8E(): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x106CBDD5077DEDE1 | Since: 1311
 *
 * @deprecated Use network._0x106CBDD5077DEDE1() instead
 */
export declare function _0x106CBDD5077DEDE1(): number;
/**
 * No comment provided
 *
 * Hash: 0x13F592FC3BF0EA84 | Since: 1207
 *
 * @deprecated Use network._0x13F592FC3BF0EA84() instead
 */
export declare function _0x13F592FC3BF0EA84(volume: number, originalWeight: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1413B6BF27AB7A95 | Since: 1207
 *
 * @deprecated Use network._0x1413B6BF27AB7A95() instead
 */
export declare function _0x1413B6BF27AB7A95(): number;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x160F0CE6D76A39C9 | Since: 1207
 *
 * @deprecated Use network._0x160F0CE6D76A39C9() instead
 */
export declare function _0x160F0CE6D76A39C9(): any;
/**
 * No comment provided
 *
 * Hash: 0x16EFB123C4451032 | Since: 1207
 *
 * @deprecated Use network._0x16EFB123C4451032() instead
 */
export declare function _0x16EFB123C4451032(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x18B94666CF610AEB | Since: 1207
 *
 * @deprecated Use network._0x18B94666CF610AEB() instead
 */
export declare function _0x18B94666CF610AEB(): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x19447FCAE97704DC | Since: 1311
 *
 * @deprecated Use network._0x19447FCAE97704DC() instead
 */
export declare function _0x19447FCAE97704DC(ctx: number | string, ec: number, ex: boolean, ro: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x19B52C20B5C4757C | Since: 1207
 *
 * @deprecated Use network._0x19B52C20B5C4757C() instead
 */
export declare function _0x19B52C20B5C4757C(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x1E4E097D71D449FB | Since: 1311
 *
 * @deprecated Use network._0x1E4E097D71D449FB() instead
 */
export declare function _0x1E4E097D71D449FB(): number;
/**
 * No comment provided
 *
 * Hash: 0x232E1EB23CDB313C | Since: 1207
 *
 * @deprecated Use network._0x232E1EB23CDB313C() instead
 */
export declare function _0x232E1EB23CDB313C(): boolean;
/**
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 *
 * Hash: 0x236321F1178A5446 | Since: 1207
 *
 * @deprecated Use network._0x236321F1178A5446() instead
 */
export declare function _0x236321F1178A5446(player: number | string | Player, ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2686BD9566B65EDA | Since: 1207
 *
 * @deprecated Use network._0x2686BD9566B65EDA() instead
 */
export declare function _0x2686BD9566B65EDA(pos: Vector3): void;
/**
 * _GET_LAUNCH_PARAM_(RESPOT?)*
 * Name is probably invalid since this native only reads data from parsed entity.
 *
 * Hash: 0x26A867C0B7A456D1 | Since: 1232
 *
 * @deprecated Use network._0x26A867C0B7A456D1() instead
 */
export declare function _0x26A867C0B7A456D1(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x271F95E55C663B8B | Since: 1207
 *
 * @deprecated Use network._0x271F95E55C663B8B() instead
 */
export declare function _0x271F95E55C663B8B(): any;
/**
 * No comment provided
 *
 * Hash: 0x273E04A3A7AD1F2D | Since: 1207
 *
 * @deprecated Use network._0x273E04A3A7AD1F2D() instead
 */
export declare function _0x273E04A3A7AD1F2D(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x27B1AE4D8C652F08 | Since: 1207
 *
 * @deprecated Use network._0x27B1AE4D8C652F08() instead
 */
export declare function _0x27B1AE4D8C652F08(): number;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x2C4E98DDA475364F | Since: 1207
 *
 * @deprecated Use network._0x2C4E98DDA475364F() instead
 */
export declare function _0x2C4E98DDA475364F(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x2CD41AC000E6F611 | Since: 1207
 *
 * @deprecated Use network._0x2CD41AC000E6F611() instead
 */
export declare function _0x2CD41AC000E6F611(): void;
/**
 * No comment provided
 *
 * Hash: 0x3034C77C79A58880 | Since: 1207
 *
 * @deprecated Use network._0x3034C77C79A58880() instead
 */
export declare function _0x3034C77C79A58880(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x316FD416C432C761 | Since: 1311
 *
 * @deprecated Use network._0x316FD416C432C761() instead
 */
export declare function _0x316FD416C432C761(): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x335AF56613CA0F49 | Since: 1311
 *
 * @deprecated Use network._0x335AF56613CA0F49() instead
 */
export declare function _0x335AF56613CA0F49(): void;
/**
 * _NETWORK_A* - _NETWORK_C*
 *
 * Hash: 0x34BC1E79546BA543 | Since: 1232
 *
 * @deprecated Use network._0x34BC1E79546BA543() instead
 */
export declare function _0x34BC1E79546BA543(): void;
/**
 * No comment provided
 *
 * Hash: 0x3AA0CDC63696166D | Since: 1207
 *
 * @deprecated Use network._0x3AA0CDC63696166D() instead
 */
export declare function _0x3AA0CDC63696166D(): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x3CBD6565D9C3B133 | Since: 1311
 *
 * @deprecated Use network._0x3CBD6565D9C3B133() instead
 */
export declare function _0x3CBD6565D9C3B133(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E4A16BC669E71B3 | Since: 1207
 *
 * @deprecated Use network._0x3E4A16BC669E71B3() instead
 */
export declare function _0x3E4A16BC669E71B3(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3E74A687A73979C6 | Since: 1207
 *
 * @deprecated Use network._0x3E74A687A73979C6() instead
 */
export declare function _0x3E74A687A73979C6(): void;
/**
 * Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
 *
 * Hash: 0x3E8CCE6769DB5F34 | Since: 1207
 *
 * @deprecated Use network._0x3E8CCE6769DB5F34() instead
 */
export declare function _0x3E8CCE6769DB5F34(): number;
/**
 * No comment provided
 *
 * Hash: 0x3F0ABAE38A0515AD | Since: 1207
 *
 * @deprecated Use network._0x3F0ABAE38A0515AD() instead
 */
export declare function _0x3F0ABAE38A0515AD(): void;
/**
 * No comment provided
 *
 * Hash: 0x3F2EE18A3E294801 | Since: 1207
 *
 * @deprecated Use network._0x3F2EE18A3E294801() instead
 */
export declare function _0x3F2EE18A3E294801(): number;
/**
 * No comment provided
 *
 * Hash: 0x405DDEFB1F531B18 | Since: 1207
 *
 * @deprecated Use network._0x405DDEFB1F531B18() instead
 */
export declare function _0x405DDEFB1F531B18(volume: number): void;
/**
 * Note: this native was added in build 1355.30
 *
 * Hash: 0x40FEDB13870042F1 | Since: 1355
 *
 * @deprecated Use network._0x40FEDB13870042F1() instead
 */
export declare function _0x40FEDB13870042F1(): void;
/**
 * No comment provided
 *
 * Hash: 0x41452E8A3B9C0C4B | Since: 1207
 *
 * @deprecated Use network._0x41452E8A3B9C0C4B() instead
 */
export declare function _0x41452E8A3B9C0C4B(): number;
/**
 * Note: this native was added in build 1355.30
 *
 * Hash: 0x422F9D6D6C7BC290 | Since: 1355
 *
 * @deprecated Use network._0x422F9D6D6C7BC290() instead
 */
export declare function _0x422F9D6D6C7BC290(): void;
/**
 * No comment provided
 *
 * Hash: 0x43CF999205084B4B | Since: 1207
 *
 * @deprecated Use network._0x43CF999205084B4B() instead
 */
export declare function _0x43CF999205084B4B(): void;
/**
 * Returns the entity associated with the given network ID.
 *
 * Hash: 0x4538EE7C321590BC | Since: 1207
 *
 * @deprecated Use network._0x4538EE7C321590BC() instead
 */
export declare function _0x4538EE7C321590BC(networkId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x455156F47DC6B78C | Since: 1207
 *
 * @deprecated Use network._0x455156F47DC6B78C() instead
 */
export declare function _0x455156F47DC6B78C(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x4835413EA6F9C9CD | Since: 1311
 *
 * @deprecated Use network._0x4835413EA6F9C9CD() instead
 */
export declare function _0x4835413EA6F9C9CD(): number;
/**
 * No comment provided
 *
 * Hash: 0x49CF17A564918E8D | Since: 1207
 *
 * @deprecated Use network._0x49CF17A564918E8D() instead
 */
export declare function _0x49CF17A564918E8D(): void;
/**
 * Hardcoded to return zero.
 *
 * Hash: 0x5133CF81924F1129 | Since: 1207
 *
 * @deprecated Use network._0x5133CF81924F1129() instead
 */
export declare function _0x5133CF81924F1129(): number;
/**
 * No comment provided
 *
 * Hash: 0x51951DE06C0D1C40 | Since: 1207
 *
 * @deprecated Use network._0x51951DE06C0D1C40() instead
 */
export declare function _0x51951DE06C0D1C40(player: number | string | Player, type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x564552C6AF1EEAB1 | Since: 1207
 *
 * @deprecated Use network._0x564552C6AF1EEAB1() instead
 */
export declare function _0x564552C6AF1EEAB1(): void;
/**
 * No comment provided
 *
 * Hash: 0x5759160AC17C13CE | Since: 1207
 *
 * @deprecated Use network._0x5759160AC17C13CE() instead
 */
export declare function _0x5759160AC17C13CE(gamerHandle: any, message: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5A91BCEF74944E93 | Since: 1207
 *
 * @deprecated Use network._0x5A91BCEF74944E93() instead
 */
export declare function _0x5A91BCEF74944E93(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x5B9C6AC118FD4774 | Since: 1207
 *
 * @deprecated Use network._0x5B9C6AC118FD4774() instead
 */
export declare function _0x5B9C6AC118FD4774(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CB8B0C846D0F30B | Since: 1207
 *
 * @deprecated Use network._0x5CB8B0C846D0F30B() instead
 */
export declare function _0x5CB8B0C846D0F30B(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CD3AAD8FF9ED121 | Since: 1207
 *
 * @deprecated Use network._0x5CD3AAD8FF9ED121() instead
 */
export declare function _0x5CD3AAD8FF9ED121(): void;
/**
 * _NETWORK_SPAWN_CONFIG_*
 *
 * Hash: 0x5D3C528B7A7DF836 | Since: 1207
 *
 * @deprecated Use network._0x5D3C528B7A7DF836() instead
 */
export declare function _0x5D3C528B7A7DF836(nsctf: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x5ED39DA62BEB1330 | Since: 1207
 *
 * @deprecated Use network._0x5ED39DA62BEB1330() instead
 */
export declare function _0x5ED39DA62BEB1330(): any;
/**
 * No comment provided
 *
 * Hash: 0x5F0E99071582DECA | Since: 1207
 *
 * @deprecated Use network._0x5F0E99071582DECA() instead
 */
export declare function _0x5F0E99071582DECA(index: number): any;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x5F328FC909F0E0FF | Since: 1311
 *
 * @deprecated Use network._0x5F328FC909F0E0FF() instead
 */
export declare function _0x5F328FC909F0E0FF(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x603469298A4308AF | Since: 1207
 *
 * @deprecated Use network._0x603469298A4308AF() instead
 */
export declare function _0x603469298A4308AF(): void;
/**
 * No comment provided
 *
 * Hash: 0x61BFBAA795E712AD | Since: 1207
 *
 * @deprecated Use network._0x61BFBAA795E712AD() instead
 */
export declare function _0x61BFBAA795E712AD(): void;
/**
 * No comment provided
 *
 * Hash: 0x64A36BA85CE01A81 | Since: 1207
 *
 * @deprecated Use network._0x64A36BA85CE01A81() instead
 */
export declare function _0x64A36BA85CE01A81(): any;
/**
 * No comment provided
 *
 * Hash: 0x67CCDF74C4DF7169 | Since: 1207
 *
 * @deprecated Use network._0x67CCDF74C4DF7169() instead
 */
export declare function _0x67CCDF74C4DF7169(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x691E4DE5309EAEFC | Since: 1207
 *
 * @deprecated Use network._0x691E4DE5309EAEFC() instead
 */
export declare function _0x691E4DE5309EAEFC(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C27442A225A241A | Since: 1207
 *
 * @deprecated Use network._0x6C27442A225A241A() instead
 */
export declare function _0x6C27442A225A241A(): number;
/**
 * No comment provided
 *
 * Hash: 0x6C7E04E9DE451789 | Since: 1207
 *
 * @deprecated Use network._0x6C7E04E9DE451789() instead
 */
export declare function _0x6C7E04E9DE451789(): void;
/**
 * _NETWORK_SPAWN_CONFIG_*
 *
 * Hash: 0x6CEE2E30021DAEC6 | Since: 1207
 *
 * @deprecated Use network._0x6CEE2E30021DAEC6() instead
 */
export declare function _0x6CEE2E30021DAEC6(): void;
/**
 * _NETWORK_GET_A* - _NETWORK_GET_D*
 *
 * Hash: 0x6CF82A7F65A5AD5F | Since: 1207
 *
 * @deprecated Use network._0x6CF82A7F65A5AD5F() instead
 */
export declare function _0x6CF82A7F65A5AD5F(ped: number | Ped): number | string;
/**
 * No comment provided
 *
 * Hash: 0x704F92B3AF20D857 | Since: 1207
 *
 * @deprecated Use network._0x704F92B3AF20D857() instead
 */
export declare function _0x704F92B3AF20D857(setting: boolean): void;
/**
 * Only used in R* Script fm_race_controller
 *
 * Hash: 0x71FA2D1880C48032 | Since: 1207
 *
 * @deprecated Use network._0x71FA2D1880C48032() instead
 */
export declare function _0x71FA2D1880C48032(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x744BFBB0CA908161 | Since: 1311
 *
 * @deprecated Use network._0x744BFBB0CA908161() instead
 */
export declare function _0x744BFBB0CA908161(): number;
/**
 * No comment provided
 *
 * Hash: 0x75FC34A2BA345BD1 | Since: 1207
 *
 * @deprecated Use network._0x75FC34A2BA345BD1() instead
 */
export declare function _0x75FC34A2BA345BD1(entity: number | Entity, player: number | string | Player): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x7673C0D2C5CDAC55 | Since: 1311
 *
 * @deprecated Use network._0x7673C0D2C5CDAC55() instead
 */
export declare function _0x7673C0D2C5CDAC55(): void;
/**
 * No comment provided
 *
 * Hash: 0x77B299E8799B1332 | Since: 1207
 *
 * @deprecated Use network._0x77B299E8799B1332() instead
 */
export declare function _0x77B299E8799B1332(): any;
/**
 * No comment provided
 *
 * Hash: 0x780A13F780A13F1B | Since: 1311
 *
 * @deprecated Use network._0x780A13F780A13F1B() instead
 */
export declare function _0x780A13F780A13F1B(toggle: boolean): void;
/**
 * Note: this native was added in build 1436.31
 *
 * Hash: 0x78271BC02AE9AF83 | Since: 1436
 *
 * @deprecated Use network._0x78271BC02AE9AF83() instead
 */
export declare function _0x78271BC02AE9AF83(): number;
/**
 * No comment provided
 *
 * Hash: 0x7A8E8DF782B47EB0 | Since: 1207
 *
 * @deprecated Use network._0x7A8E8DF782B47EB0() instead
 */
export declare function _0x7A8E8DF782B47EB0(): any;
/**
 * No comment provided
 *
 * Hash: 0x7B3FF2D193628126 | Since: 1207
 *
 * @deprecated Use network._0x7B3FF2D193628126() instead
 */
export declare function _0x7B3FF2D193628126(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x7BCA0A3972708436 | Since: 1207
 *
 * @deprecated Use network._0x7BCA0A3972708436() instead
 */
export declare function _0x7BCA0A3972708436(outData: any): number;
/**
 * No comment provided
 *
 * Hash: 0x7E300B5B86AB1D1A | Since: 1207
 *
 * @deprecated Use network._0x7E300B5B86AB1D1A() instead
 */
export declare function _0x7E300B5B86AB1D1A(): void;
/**
 * No comment provided
 *
 * Hash: 0x814729078AED6D30 | Since: 1207
 *
 * @deprecated Use network._0x814729078AED6D30() instead
 */
export declare function _0x814729078AED6D30(): void;
/**
 * No comment provided
 *
 * Hash: 0x862C5040F4888741 | Since: 1207
 *
 * @deprecated Use network._0x862C5040F4888741() instead
 */
export declare function _0x862C5040F4888741(player1: number | string | Player, player2: number | string | Player): boolean;
/**
 * Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
 *
 * Hash: 0x880A7202301E282B | Since: 1311
 *
 * @deprecated Use network._0x880A7202301E282B() instead
 */
export declare function _0x880A7202301E282B(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x894B5ECAB45D2342 | Since: 1207
 *
 * @deprecated Use network._0x894B5ECAB45D2342() instead
 */
export declare function _0x894B5ECAB45D2342(netHandle: number): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x917AD74BDCF8B6E9 | Since: 1311
 *
 * @deprecated Use network._0x917AD74BDCF8B6E9() instead
 */
export declare function _0x917AD74BDCF8B6E9(): number;
/**
 * No comment provided
 *
 * Hash: 0x923346025512DFB7 | Since: 1207
 *
 * @deprecated Use network._0x923346025512DFB7() instead
 */
export declare function _0x923346025512DFB7(): any;
/**
 * Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
 *
 * Hash: 0x950ACD8F05B7B9DF | Since: 1355
 *
 * @deprecated Use network._0x950ACD8F05B7B9DF() instead
 */
export declare function _0x950ACD8F05B7B9DF(): any;
/**
 * Must be called from a background script, otherwise it will do nothing.
 *
 * Hash: 0x979765465A6F25FC | Since: 1207
 *
 * @deprecated Use network._0x979765465A6F25FC() instead
 */
export declare function _0x979765465A6F25FC(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x97BCE4C4B3191228 | Since: 1207
 *
 * @deprecated Use network._0x97BCE4C4B3191228() instead
 */
export declare function _0x97BCE4C4B3191228(): void;
/**
 * No comment provided
 *
 * Hash: 0x981146E5C9CE9250 | Since: 1207
 *
 * @deprecated Use network._0x981146E5C9CE9250() instead
 */
export declare function _0x981146E5C9CE9250(inviteIndex: number): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x982D7AD755B8F62C | Since: 1311
 *
 * @deprecated Use network._0x982D7AD755B8F62C() instead
 */
export declare function _0x982D7AD755B8F62C(): number;
/**
 * No comment provided
 *
 * Hash: 0x9B39B0555CC692B5 | Since: 1207
 *
 * @deprecated Use network._0x9B39B0555CC692B5() instead
 */
export declare function _0x9B39B0555CC692B5(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x9E5A47744C0F0376 | Since: 1311
 *
 * @deprecated Use network._0x9E5A47744C0F0376() instead
 */
export declare function _0x9E5A47744C0F0376(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA2837A5E21FB5A58 | Since: 1207
 *
 * @deprecated Use network._0xA2837A5E21FB5A58() instead
 */
export declare function _0xA2837A5E21FB5A58(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA47D48D06AA5A188 | Since: 1207
 *
 * @deprecated Use network._0xA47D48D06AA5A188() instead
 */
export declare function _0xA47D48D06AA5A188(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA63E4F050F20021F | Since: 1207
 *
 * @deprecated Use network._0xA63E4F050F20021F() instead
 */
export declare function _0xA63E4F050F20021F(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6F1BAABFF6AD7B9 | Since: 1207
 *
 * @deprecated Use network._0xA6F1BAABFF6AD7B9() instead
 */
export declare function _0xA6F1BAABFF6AD7B9(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xA7670F7991099680 | Since: 1311
 *
 * @deprecated Use network._0xA7670F7991099680() instead
 */
export declare function _0xA7670F7991099680(): void;
/**
 * No comment provided
 *
 * Hash: 0xA94ECE191D90637A | Since: 1207
 *
 * @deprecated Use network._0xA94ECE191D90637A() instead
 */
export declare function _0xA94ECE191D90637A(): number;
/**
 * No comment provided
 *
 * Hash: 0xA95470DA137587F5 | Since: 1207
 *
 * @deprecated Use network._0xA95470DA137587F5() instead
 */
export declare function _0xA95470DA137587F5(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xACC44768AF229042 | Since: 1207
 *
 * @deprecated Use network._0xACC44768AF229042() instead
 */
export declare function _0xACC44768AF229042(): void;
/**
 * No comment provided
 *
 * Hash: 0xAFA14F98327791CE | Since: 1207
 *
 * @deprecated Use network._0xAFA14F98327791CE() instead
 */
export declare function _0xAFA14F98327791CE(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB131E686BD97B3F8 | Since: 1207
 *
 * @deprecated Use network._0xB131E686BD97B3F8() instead
 */
export declare function _0xB131E686BD97B3F8(): void;
/**
 * No comment provided
 *
 * Hash: 0xB389289F031F059A | Since: 1207
 *
 * @deprecated Use network._0xB389289F031F059A() instead
 */
export declare function _0xB389289F031F059A(): number;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xBAF7E2979442B29F | Since: 1311
 *
 * @deprecated Use network._0xBAF7E2979442B29F() instead
 */
export declare function _0xBAF7E2979442B29F(): number;
/**
 * No comment provided
 *
 * Hash: 0xBB1EC8C2EEF33BAA | Since: 1207
 *
 * @deprecated Use network._0xBB1EC8C2EEF33BAA() instead
 */
export declare function _0xBB1EC8C2EEF33BAA(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xBB697756309D77EE | Since: 1207
 *
 * @deprecated Use network._0xBB697756309D77EE() instead
 */
export declare function _0xBB697756309D77EE(): any;
/**
 * Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
 *
 * Hash: 0xBC7D36946D19E60E | Since: 1207
 *
 * @deprecated Use network._0xBC7D36946D19E60E() instead
 */
export declare function _0xBC7D36946D19E60E(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF8276E51761F9DA | Since: 1207
 *
 * @deprecated Use network._0xBF8276E51761F9DA() instead
 */
export declare function _0xBF8276E51761F9DA(): number;
/**
 * No comment provided
 *
 * Hash: 0xC028B3F52C707C49 | Since: 1207
 *
 * @deprecated Use network._0xC028B3F52C707C49() instead
 */
export declare function _0xC028B3F52C707C49(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC0CFFDA87C2C163D | Since: 1207
 *
 * @deprecated Use network._0xC0CFFDA87C2C163D() instead
 */
export declare function _0xC0CFFDA87C2C163D(): any;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xC1968045EEB563B7 | Since: 1311
 *
 * @deprecated Use network._0xC1968045EEB563B7() instead
 */
export declare function _0xC1968045EEB563B7(): void;
/**
 * No comment provided
 *
 * Hash: 0xC8B6D18E22484643 | Since: 1207
 *
 * @deprecated Use network._0xC8B6D18E22484643() instead
 */
export declare function _0xC8B6D18E22484643(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xC964FCD3D1720697 | Since: 1207
 *
 * @deprecated Use network._0xC964FCD3D1720697() instead
 */
export declare function _0xC964FCD3D1720697(): any;
/**
 * No comment provided
 *
 * Hash: 0xCA58D4FD20D70F24 | Since: 1207
 *
 * @deprecated Use network._0xCA58D4FD20D70F24() instead
 */
export declare function _0xCA58D4FD20D70F24(): number;
/**
 * No comment provided
 *
 * Hash: 0xCC4E72C339461ED1 | Since: 1207
 *
 * @deprecated Use network._0xCC4E72C339461ED1() instead
 */
export declare function _0xCC4E72C339461ED1(): any;
/**
 * No comment provided
 *
 * Hash: 0xCD53E6CBF609C012 | Since: 1207
 *
 * @deprecated Use network._0xCD53E6CBF609C012() instead
 */
export declare function _0xCD53E6CBF609C012(ugcRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF23AB5BD47B384D | Since: 1207
 *
 * @deprecated Use network._0xCF23AB5BD47B384D() instead
 */
export declare function _0xCF23AB5BD47B384D(): void;
/**
 * No comment provided
 *
 * Hash: 0xD1FFB246F4E088AC | Since: 1207
 *
 * @deprecated Use network._0xD1FFB246F4E088AC() instead
 */
export declare function _0xD1FFB246F4E088AC(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD39A72AE5EBD57E5 | Since: 1207
 *
 * @deprecated Use network._0xD39A72AE5EBD57E5() instead
 */
export declare function _0xD39A72AE5EBD57E5(): void;
/**
 * No comment provided
 *
 * Hash: 0xD3A3C8B9F3BDEF81 | Since: 1207
 *
 * @deprecated Use network._0xD3A3C8B9F3BDEF81() instead
 */
export declare function _0xD3A3C8B9F3BDEF81(): any;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xD3B6EBC6C3D77D44 | Since: 1311
 *
 * @deprecated Use network._0xD3B6EBC6C3D77D44() instead
 */
export declare function _0xD3B6EBC6C3D77D44(): void;
/**
 * No comment provided
 *
 * Hash: 0xD4022C7286B0DFA2 | Since: 1207
 *
 * @deprecated Use network._0xD4022C7286B0DFA2() instead
 */
export declare function _0xD4022C7286B0DFA2(): any;
/**
 * No comment provided
 *
 * Hash: 0xD42C543F73233041 | Since: 1232
 *
 * @deprecated Use network._0xD42C543F73233041() instead
 */
export declare function _0xD42C543F73233041(): void;
/**
 * No comment provided
 *
 * Hash: 0xD637D327080CD86E | Since: 1207
 *
 * @deprecated Use network._0xD637D327080CD86E() instead
 */
export declare function _0xD637D327080CD86E(): void;
/**
 * No comment provided
 *
 * Hash: 0xD78A26024BB13E08 | Since: 1207
 *
 * @deprecated Use network._0xD78A26024BB13E08() instead
 */
export declare function _0xD78A26024BB13E08(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xD7BAD4062074B9C1 | Since: 1207
 *
 * @deprecated Use network._0xD7BAD4062074B9C1() instead
 */
export declare function _0xD7BAD4062074B9C1(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD7D0DF27CB1765B5 | Since: 1355
 *
 * @deprecated Use network._0xD7D0DF27CB1765B5() instead
 */
export declare function _0xD7D0DF27CB1765B5(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA1BFED8582F61F0 | Since: 1207
 *
 * @deprecated Use network._0xDA1BFED8582F61F0() instead
 */
export declare function _0xDA1BFED8582F61F0(): boolean;
/**
 * Note: this native was added in build 1491.50
 *
 * Hash: 0xDBDF80673BBA3D65 | Since: 1491
 *
 * @deprecated Use network._0xDBDF80673BBA3D65() instead
 */
export declare function _0xDBDF80673BBA3D65(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC6AD5C046F33AB4 | Since: 1207
 *
 * @deprecated Use network._0xDC6AD5C046F33AB4() instead
 */
export declare function _0xDC6AD5C046F33AB4(): void;
/**
 * No comment provided
 *
 * Hash: 0xDCA4A74135E1DEA5 | Since: 1207
 *
 * @deprecated Use network._0xDCA4A74135E1DEA5() instead
 */
export declare function _0xDCA4A74135E1DEA5(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE10F2D7715ABABEC | Since: 1207
 *
 * @deprecated Use network._0xE10F2D7715ABABEC() instead
 */
export declare function _0xE10F2D7715ABABEC(): any;
/**
 * No comment provided
 *
 * Hash: 0xE31A04513237DC89 | Since: 1207
 *
 * @deprecated Use network.networkUnregisterNetworkedEntity() instead
 */
export declare function networkUnregisterNetworkedEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xE39600E50D608693 | Since: 1207
 *
 * @deprecated Use network._0xE39600E50D608693() instead
 */
export declare function _0xE39600E50D608693(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3AB5EEFCB6671A2 | Since: 1207
 *
 * @deprecated Use network._0xE3AB5EEFCB6671A2() instead
 */
export declare function _0xE3AB5EEFCB6671A2(setting: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE5634491A58C2703 | Since: 1207
 *
 * @deprecated Use network._0xE5634491A58C2703() instead
 */
export declare function _0xE5634491A58C2703(): void;
/**
 * No comment provided
 *
 * Hash: 0xE59F4924BD3A718D | Since: 1207
 *
 * @deprecated Use network._0xE59F4924BD3A718D() instead
 */
export declare function _0xE59F4924BD3A718D(): string;
/**
 * No comment provided
 *
 * Hash: 0xE5FF65CFF5160752 | Since: 1207
 *
 * @deprecated Use network._0xE5FF65CFF5160752() instead
 */
export declare function _0xE5FF65CFF5160752(): void;
/**
 * No comment provided
 *
 * Hash: 0xE79BA3BC265895DA | Since: 1207
 *
 * @deprecated Use network._0xE79BA3BC265895DA() instead
 */
export declare function _0xE79BA3BC265895DA(): string;
/**
 * No comment provided
 *
 * Hash: 0xE8E633215471BB5D | Since: 1207
 *
 * @deprecated Use network._0xE8E633215471BB5D() instead
 */
export declare function _0xE8E633215471BB5D(): number;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xEC089F84A9C16C62 | Since: 1207
 *
 * @deprecated Use network._0xEC089F84A9C16C62() instead
 */
export declare function _0xEC089F84A9C16C62(): any;
/**
 * No comment provided
 *
 * Hash: 0xF23A6D6C11D8EC15 | Since: 1207
 *
 * @deprecated Use network._0xF23A6D6C11D8EC15() instead
 */
export declare function _0xF23A6D6C11D8EC15(gamerHandle: any): boolean;
/**
 * Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
 *
 * Hash: 0xF260AF6F43953316 | Since: 1207
 *
 * @deprecated Use network._0xF260AF6F43953316() instead
 */
export declare function _0xF260AF6F43953316(handle: number): number;
/**
 * Returns the entity's network ID.
 *
 * Hash: 0xF302AB9D978352EE | Since: 1207
 *
 * @deprecated Use network._0xF302AB9D978352EE() instead
 */
export declare function _0xF302AB9D978352EE(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xF342F6BD0A8287D5 | Since: 1207
 *
 * @deprecated Use network._0xF342F6BD0A8287D5() instead
 */
export declare function _0xF342F6BD0A8287D5(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xF8DC69DC1AD19072 | Since: 1311
 *
 * @deprecated Use network._0xF8DC69DC1AD19072() instead
 */
export declare function _0xF8DC69DC1AD19072(): number;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xFB3205788F8AFA3F | Since: 1311
 *
 * @deprecated Use network._0xFB3205788F8AFA3F() instead
 */
export declare function _0xFB3205788F8AFA3F(): number;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xFC6FCF4C03F1BBF6 | Since: 1207
 *
 * @deprecated Use network._0xFC6FCF4C03F1BBF6() instead
 */
export declare function _0xFC6FCF4C03F1BBF6(): void;
/**
 * Only used in R* Script startup_clip Seems to just kill the network connection, sets the players coords to 0, 0, 0 when doing GetEntityCoords
 *
 * Hash: 0xFD4272A137703449 | Since: 1207
 *
 * @deprecated Use network.networkLeaveSession() instead
 */
export declare function networkLeaveSession(): void;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xFD8112109A96877C | Since: 1311
 *
 * @deprecated Use network._0xFD8112109A96877C() instead
 */
export declare function _0xFD8112109A96877C(): void;
/**
 * No comment provided
 *
 * Hash: 0xFE53B1F8D43F19BF | Since: 1207
 *
 * @deprecated Use network._0xFE53B1F8D43F19BF() instead
 */
export declare function _0xFE53B1F8D43F19BF(player1: number | string | Player, player2: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xFF36F36B07E69059 | Since: 1207
 *
 * @deprecated Use network._0xFF36F36B07E69059() instead
 */
export declare function _0xFF36F36B07E69059(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0D73CDDEA79DDCD | Since: 1207
 *
 * @deprecated Use network.animSceneToNet() instead
 */
export declare function animSceneToNet(animScene: any): number;
/**
 * No comment provided
 *
 * Hash: 0x782C94DB6469634D | Since: 1207
 *
 * @deprecated Use network.clearLaunchParam() instead
 */
export declare function clearLaunchParam(paramName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xDBC754CB6CCB9378 | Since: 1232
 *
 * @deprecated Use network.commerceStoreIsEnabled() instead
 */
export declare function commerceStoreIsEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCE5E79D9E303628E | Since: 1355
 *
 * @deprecated Use network.commerceStoreIsOpen() instead
 */
export declare function commerceStoreIsOpen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02E97CE283648CD9 | Since: 1207
 *
 * @deprecated Use network.getLaunchParamExists() instead
 */
export declare function getLaunchParamExists(paramName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC59AB6A04333C502 | Since: 1207
 *
 * @deprecated Use network.getLaunchParamString() instead
 */
export declare function getLaunchParamString(): string;
/**
 * No comment provided
 *
 * Hash: 0xD2BA051B94CA9BCC | Since: 1207
 *
 * @deprecated Use network.getNumCreatedMissionPickups() instead
 */
export declare function getNumCreatedMissionPickups(): number;
/**
 * Note: this native was added in build 1311.16
 *
 * Hash: 0x4FE932E84FE932E8 | Since: 1311
 *
 * @deprecated Use network.getNumPeerNegotiationResponses() instead
 */
export declare function getNumPeerNegotiationResponses(): number;
/**
 * No comment provided
 *
 * Hash: 0x62BE3ECC79FBD004 | Since: 1207
 *
 * @deprecated Use network.getNumReservedMissionPickups() instead
 */
export declare function getNumReservedMissionPickups(): number;
/**
 * No comment provided
 *
 * Hash: 0xDCC4B7F7112E8AB7 | Since: 1207
 *
 * @deprecated Use network.getPlayerWaypointIsActive() instead
 */
export declare function getPlayerWaypointIsActive(player: number | string | Player): boolean;
/**
 * Only used in R* Script net_stable_manager
 *
 * Hash: 0x99AAC89C510DEB0D | Since: 1491
 *
 * @deprecated Use network.getReservedMissionEntitiesForThread() instead
 */
export declare function getReservedMissionEntitiesForThread(threadId: number, pedMax: number, vehicleMax: number, unkMax: number, pedMin: number, vehicleMin: number, unkMin: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD0541EF28E9C4783 | Since: 1207
 *
 * @deprecated Use network.getSocialMatchmakingAllowed() instead
 */
export declare function getSocialMatchmakingAllowed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E2FD8CF7EB10E53 | Since: 1207
 *
 * @deprecated Use network.localPlayerPedshotTextureDownloadRequest() instead
 */
export declare function localPlayerPedshotTextureDownloadRequest(playerSlot: number, personaPhotoLocalCacheType: number): number;
/**
 * Returns textureDownloadId
 *
 * Hash: 0x9B5DB6CEAFAA10BB | Since: 1207
 *
 * @deprecated Use network.mugshotTextureDownloadRequest() instead
 */
export declare function mugshotTextureDownloadRequest(gamerHandle: any, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x157D8F3DE12B307F | Since: 1207
 *
 * @deprecated Use network.networkAddPlayerToRecentGamersList() instead
 */
export declare function networkAddPlayerToRecentGamersList(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x1BAA028F52EED310 | Since: 1311
 *
 * @deprecated Use network.networkAlert() instead
 */
export declare function networkAlert(ctx: number | string, lh: number | string, ec: number, h: number): void;
/**
 * Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
 *
 * Hash: 0xF5C5929E07512F80 | Since: 1207
 *
 * @deprecated Use network.networkAreOnlineNotificationsShownInStoryMode() instead
 */
export declare function networkAreOnlineNotificationsShownInStoryMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x11820D1AE80DEA39 | Since: 1207
 *
 * @deprecated Use network.networkArePlayersInSamePlatformParty() instead
 */
export declare function networkArePlayersInSamePlatformParty(gamerHandle1: any, gamerHandle2: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE258570E0C116A66 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionIsAutoWarpDisabled() instead
 */
export declare function networkAutoSessionIsAutoWarpDisabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x277865A734918AE6 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionIsInstancedSession() instead
 */
export declare function networkAutoSessionIsInstancedSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA021095C983F20D8 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionIsProcessingSessionSplit() instead
 */
export declare function networkAutoSessionIsProcessingSessionSplit(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x63246A24F5747510 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionSetAllowedToMerge() instead
 */
export declare function networkAutoSessionSetAllowedToMerge(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0A428058079EE65C | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionSetAllowedToSplit() instead
 */
export declare function networkAutoSessionSetAllowedToSplit(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4440FEE3EFE78F54 | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionSetAutoWarpEnabled() instead
 */
export declare function networkAutoSessionSetAutoWarpEnabled(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6D87BA8EF15226CD | Since: 1207
 *
 * @deprecated Use network.networkAutoSessionSplitSessionSuccessful() instead
 */
export declare function networkAutoSessionSplitSessionSuccessful(): boolean;
/**
 * On PC this returns true if gamerHandle is a valid handle.
 *
 * Hash: 0x99ABE9BF9DADA162 | Since: 1207
 *
 * @deprecated Use network.networkCanAddFriend() instead
 */
export declare function networkCanAddFriend(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF23D6475640D29EB | Since: 1207
 *
 * @deprecated Use network.networkCanReceiveInviteFromHandle() instead
 */
export declare function networkCanReceiveInviteFromHandle(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x65F040D91001ED4B | Since: 1207
 *
 * @deprecated Use network.networkClearClockOverrideOvertime() instead
 */
export declare function networkClearClockOverrideOvertime(milliseconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x669E223E64B1903C | Since: 1207
 *
 * @deprecated Use network.networkClockTimeOverride() instead
 */
export declare function networkClockTimeOverride(hour: number, minute: number, second: number, transitionTime: number, pauseClock: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE28C13ECC36FF14E | Since: 1207
 *
 * @deprecated Use network.networkClockTimeOverride2() instead
 */
export declare function networkClockTimeOverride2(hour: number, minute: number, second: number, transitionTime: number, pauseClock: boolean, clockwise: boolean): void;
/**
 * Must be called from a background script, otherwise it will do nothing.
 *
 * Hash: 0xFA38B52F91B59075 | Since: 1207
 *
 * @deprecated Use network.networkDebugRequestEntityPosition() instead
 */
export declare function networkDebugRequestEntityPosition(): void;
/**
 * No comment provided
 *
 * Hash: 0x12AEB56B489415C5 | Since: 1207
 *
 * @deprecated Use network.networkDidRecentGamerNamesRequestSucceed() instead
 */
export declare function networkDidRecentGamerNamesRequestSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA3EEC0A5AFF3FC5B | Since: 1207
 *
 * @deprecated Use network.networkGetCurrentFriendPageData() instead
 */
export declare function networkGetCurrentFriendPageData(): boolean;
/**
 * Example:
 *
 * char displayName[64];
 * if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
 * {
 * // use displayName
 * }
 *
 * Hash: 0x7FEE4F07C54B6B3C | Since: 1207
 *
 * @deprecated Use network.networkGetDisplayNameFromHandle() instead
 */
export declare function networkGetDisplayNameFromHandle(gamerHandle: any, displayName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5659D87BE674AB17 | Since: 1207
 *
 * @deprecated Use network.networkGetGamertagFromFriend() instead
 */
export declare function networkGetGamertagFromFriend(gamerHandle: any): string;
/**
 * No comment provided
 *
 * Hash: 0xFBDFE1C1356E12E8 | Since: 1207
 *
 * @deprecated Use network.networkGetGamerSessionFromHandle() instead
 */
export declare function networkGetGamerSessionFromHandle(data: any, count: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDAEB478E58F8DEA | Since: 1207
 *
 * @deprecated Use network.networkGetGamerStatus() instead
 */
export declare function networkGetGamerStatus(gamerHandle: any): number;
/**
 * No comment provided
 *
 * Hash: 0xDD7806FD0543BC3D | Since: 1207
 *
 * @deprecated Use network.networkGetGlobalEntityFlags() instead
 */
export declare function networkGetGlobalEntityFlags(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xFB9ECED5B68F3B78 | Since: 1207
 *
 * @deprecated Use network.networkGetInstanceIdOfThread() instead
 */
export declare function networkGetInstanceIdOfThread(threadId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x37A834AEC6A4F74A | Since: 1207
 *
 * @deprecated Use network.networkGetNumRecentGamers() instead
 */
export declare function networkGetNumRecentGamers(): number;
/**
 * No comment provided
 *
 * Hash: 0x9BCF28FB5D65A9BE | Since: 1207
 *
 * @deprecated Use network.networkGetPlatformInviteId() instead
 */
export declare function networkGetPlatformInviteId(): number;
/**
 * No comment provided
 *
 * Hash: 0xD9267375834C5EAB | Since: 1207
 *
 * @deprecated Use network.networkGetPlayerFastInstanceId() instead
 */
export declare function networkGetPlayerFastInstanceId(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xA6C0787443C9583E | Since: 1207
 *
 * @deprecated Use network.networkGetPlayerOwnerOfNetworkId() instead
 */
export declare function networkGetPlayerOwnerOfNetworkId(netId: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0x32C90CDFAF40514C | Since: 1207
 *
 * @deprecated Use network.networkGetRank() instead
 */
export declare function networkGetRank(): number;
/**
 * Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
 *
 * Hash: 0xAC6153A0722F524C | Since: 1207
 *
 * @deprecated Use network.networkGetRosTitleName() instead
 */
export declare function networkGetRosTitleName(): string;
/**
 * No comment provided
 *
 * Hash: 0x8DC9AA3B508B1A85 | Since: 1207
 *
 * @deprecated Use network.networkGetSessionHost() instead
 */
export declare function networkGetSessionHost(): number | string;
/**
 * No comment provided
 *
 * Hash: 0xBA24095EA96DFE17 | Since: 1207
 *
 * @deprecated Use network.networkGetSizeOfHostBroadcastDataStorage() instead
 */
export declare function networkGetSizeOfHostBroadcastDataStorage(): number;
/**
 * No comment provided
 *
 * Hash: 0x690806BC83BC8CA2 | Since: 1207
 *
 * @deprecated Use network.networkGetSizeOfPlayerBroadcastDataStorage() instead
 */
export declare function networkGetSizeOfPlayerBroadcastDataStorage(): number;
/**
 * No comment provided
 *
 * Hash: 0xDB438CC9BC6F4022 | Since: 1207
 *
 * @deprecated Use network.networkGetXp() instead
 */
export declare function networkGetXp(): number;
/**
 * No comment provided
 *
 * Hash: 0xDD73C9838CE7181D | Since: 1207
 *
 * @deprecated Use network.networkHasCompletedMpIntroFlowOnCurrentSlot() instead
 */
export declare function networkHasCompletedMpIntroFlowOnCurrentSlot(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26A5C12FACFF8724 | Since: 1207
 *
 * @deprecated Use network.networkHasControlOfAnimScene() instead
 */
export declare function networkHasControlOfAnimScene(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25189F9908E9CD65 | Since: 1207
 *
 * @deprecated Use network.networkHasCurrentGetGamerStatusStarted() instead
 */
export declare function networkHasCurrentGetGamerStatusStarted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x665161D250850A9F | Since: 1207
 *
 * @deprecated Use network.networkIsFriendHandleInSameTitle() instead
 */
export declare function networkIsFriendHandleInSameTitle(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE348D1404BD80146 | Since: 1207
 *
 * @deprecated Use network.networkIsFriendHandleOnline() instead
 */
export declare function networkIsFriendHandleOnline(gamerHandle: any): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0xC5196C42DE19F646 | Since: 1207
 *
 * @deprecated Use network.networkIsInSessionLobby() instead
 */
export declare function networkIsInSessionLobby(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B709519997ECF0F | Since: 1207
 *
 * @deprecated Use network.networkIsPlayerInSpectatorMode() instead
 */
export declare function networkIsPlayerInSpectatorMode(player: number | string | Player): boolean;
/**
 * _NETWORK_IS_T* - _NETWORK_RE*
 *
 * Hash: 0xA21E3BAD0A42D199 | Since: 1207
 *
 * @deprecated Use network.networkIsPreviousUploadPending() instead
 */
export declare function networkIsPreviousUploadPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4664D213A0CCAF40 | Since: 1207
 *
 * @deprecated Use network.networkIsRecentGamerNamesRequestInProgress() instead
 */
export declare function networkIsRecentGamerNamesRequestInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x31DAD2CD6D49546E | Since: 1207
 *
 * @deprecated Use network.networkIsThreadActive() instead
 */
export declare function networkIsThreadActive(threadId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE525878A35B9EEBD | Since: 1207
 *
 * @deprecated Use network.networkIsTrackedPlayerVisible() instead
 */
export declare function networkIsTrackedPlayerVisible(player: number | string | Player, trackedPlayer: number | string | Player): boolean;
/**
 * Returns false if pedshot push failed
 *
 * Hash: 0x2A48D9567940598F | Since: 1207
 *
 * @deprecated Use network.networkPersonaPhotoWriteLocal() instead
 */
export declare function networkPersonaPhotoWriteLocal(texture: string, playerSlot: number, personaPhotoLocalCacheType: number): boolean;
/**
 * Returns false if pedshot push failed
 *
 * Hash: 0xB72999D3120599DF | Since: 1207
 *
 * @deprecated Use network.networkPersonaPhotoWriteScProfile() instead
 */
export declare function networkPersonaPhotoWriteScProfile(texture: string, personaPhotoType: number, formatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x55F618F68AB854D3 | Since: 1207
 *
 * @deprecated Use network.networkRemoveFriend() instead
 */
export declare function networkRemoveFriend(gamerHandle: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAAA92B631B13F614 | Since: 1207
 *
 * @deprecated Use network.networkRequestControlOfAnimScene() instead
 */
export declare function networkRequestControlOfAnimScene(animScene: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4154B7D8C75E5DCF | Since: 1207
 *
 * @deprecated Use network.networkResurrectLocalPlayer2() instead
 */
export declare function networkResurrectLocalPlayer2(args: any): void;
/**
 * No comment provided
 *
 * Hash: 0xE47001B7CB8B98AE | Since: 1207
 *
 * @deprecated Use network.networkSendSessionInvite() instead
 */
export declare function networkSendSessionInvite(gamerHandle: any, contentId: string, data: any, dataSize: number, flags: number): boolean;
/**
 * enum eSessionFlags
 * {
 * SESSION_FLAG_NONE = 0,
 * SF_INSTANCE = (1 << 0),
 * SF_MATCH = (1 << 1),
 * SF_PRIVATE = (1 << 2),
 * SF_BLOCK_INVITES = (1 << 3),
 * SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
 * SF_BLOCK_NON_HOST_INVITES = (1 << 5),
 * SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
 * SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
 * SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
 * SF_IN_GAMEPLAY = (1 << 9),
 * SF_COMPETITIVE = (1 << 10),
 * SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
 * };
 *
 * Hash: 0xE546BDA1B3E288EE | Since: 1207
 *
 * @deprecated Use network.networkSessionAddSessionFlags() instead
 */
export declare function networkSessionAddSessionFlags(flags: number): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0x4DEC5000F7B508F0 | Since: 1311
 *
 * @deprecated Use network.networkSessionAreSessionIdsEqual() instead
 */
export declare function networkSessionAreSessionIdsEqual(sessionId1: any, sessionId2: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE72E5C1289BD1F40 | Since: 1207
 *
 * @deprecated Use network.networkSessionCancelRequest() instead
 */
export declare function networkSessionCancelRequest(sessionRequestId: any): boolean;
/**
 * Note: this native was added in build 1311.23
 *
 * Hash: 0xE9B356C330C0A806 | Since: 1311
 *
 * @deprecated Use network.networkSessionGetSessionId() instead
 */
export declare function networkSessionGetSessionId(sessionId: any): void;
/**
 * Returns result of session request:
 * 0 - NOT_FOUND
 * 1 - IN_PROGRESS
 * 2 - TIMEOUT
 * 3 - PLAYER_OFFLINE
 * 4 - GANG_MEMBERS_CHANGED
 * 5 - PLAYER_CANCELLED
 * 6 - PLAYER_SET_TOO_LARGE
 * 7 - MATCH_ACCEPTED
 * 8 - OTHER
 *
 * Hash: 0x0DD051B1BF4B8BD6 | Since: 1207
 *
 * @deprecated Use network.networkSessionGetSessionRequestResult() instead
 */
export declare function networkSessionGetSessionRequestResult(sessionRequestId: any): number;
/**
 * No comment provided
 *
 * Hash: 0x0F44A5C78D114922 | Since: 1207
 *
 * @deprecated Use network.networkSessionIsNsrrSuccess() instead
 */
export declare function networkSessionIsNsrrSuccess(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9E762A595CF88E4A | Since: 1207
 *
 * @deprecated Use network.networkSessionIsRequestInProgressByQueueGroup() instead
 */
export declare function networkSessionIsRequestInProgressByQueueGroup(queueGroup: number): boolean;
/**
 * Only used in R* Script net_rolling_playlist
 *
 * Hash: 0x8F9DB6CD03B42B58 | Since: 1436
 *
 * @deprecated Use network.networkSessionPlaylistGetUpcomingContent() instead
 */
export declare function networkSessionPlaylistGetUpcomingContent(): void;
/**
 * Only used in R* Script net_rolling_playlist
 *
 * Hash: 0xBDE605F925B07127 | Since: 1436
 *
 * @deprecated Use network.networkSessionPlaylistGoToNextContent() instead
 */
export declare function networkSessionPlaylistGoToNextContent(): void;
/**
 * No comment provided
 *
 * Hash: 0x3215BBE34D3418C5 | Since: 1207
 *
 * @deprecated Use network.networkSessionRemovePlayerFlags() instead
 */
export declare function networkSessionRemovePlayerFlags(flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4F4672457FF597D1 | Since: 1436
 *
 * @deprecated Use network.networkSessionRequestSessionNominated() instead
 */
export declare function networkSessionRequestSessionNominated(flags: number, userHash: number, sessionRequestId: any): boolean;
/**
 * category:
 * enum eOnCallType
 * {
 * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
 * NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
 * };
 *
 * Hash: 0x23D9C1F2E4098EDC | Since: 1207
 *
 * @deprecated Use network.networkSessionRequestSessionOnCall() instead
 */
export declare function networkSessionRequestSessionOnCall(flags: number, category: number, userHash: number, sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0AE241A4A9ADEEEC | Since: 1207
 *
 * @deprecated Use network.networkSessionSetPlayerFlags() instead
 */
export declare function networkSessionSetPlayerFlags(flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF20B18A330E6DB5C | Since: 1207
 *
 * @deprecated Use network.networkSessionTransitionToSession() instead
 */
export declare function networkSessionTransitionToSession(sessionRequestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBF1ECFB39A77B5F | Since: 1207
 *
 * @deprecated Use network.networkSetInStaticSpectatorMode() instead
 */
export declare function networkSetInStaticSpectatorMode(toggle: boolean, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xEEB7818B1D307212 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigAddExclusionVolume() instead
 */
export declare function networkSpawnConfigAddExclusionVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEB6027FD1B4600D5 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigAddPropertyPreference() instead
 */
export declare function networkSpawnConfigAddPropertyPreference(configProperty: number, include: boolean, weight: number): void;
/**
 * No comment provided
 *
 * Hash: 0x44D59EC597BBF348 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigAddPropertyScripted() instead
 */
export declare function networkSpawnConfigAddPropertyScripted(configProperty: number, include: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFD1AC0B3858F224C | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigAddSpawnPoint() instead
 */
export declare function networkSpawnConfigAddSpawnPoint(pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA35E7BF20FA269E0 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigRemoveExclusionVolume() instead
 */
export declare function networkSpawnConfigRemoveExclusionVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x89EC2FC89ECB1005 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSearchInProgress() instead
 */
export declare function networkSpawnConfigSearchInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x765E60A1DCB8B1CE | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSetCancelSearch() instead
 */
export declare function networkSpawnConfigSetCancelSearch(): void;
/**
 * No comment provided
 *
 * Hash: 0xBDCC671B911040F9 | Since: 1207
 *
 * @deprecated Use network.networkSpawnConfigSetLevelWaterDepth() instead
 */
export declare function networkSpawnConfigSetLevelWaterDepth(waterDepthLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD7F6781A0ABAF6FB | Since: 1207
 *
 * @deprecated Use network.netToAnimScene() instead
 */
export declare function netToAnimScene(netId: number): any;
/**
 * No comment provided
 *
 * Hash: 0xD08066E00D26C448 | Since: 1207
 *
 * @deprecated Use network.netToPropset() instead
 */
export declare function netToPropset(netId: number): any;
/**
 * No comment provided
 *
 * Hash: 0xCBAC13F065C47596 | Since: 1207
 *
 * @deprecated Use network.pedmugshotGetStatus() instead
 */
export declare function pedmugshotGetStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0xFBC30B70B3CDB87E | Since: 1207
 *
 * @deprecated Use network.pedmugshotRequestSend() instead
 */
export declare function pedmugshotRequestSend(): any;
/**
 * No comment provided
 *
 * Hash: 0xCD954F330693F5F2 | Since: 1207
 *
 * @deprecated Use network.pedmugshotTake() instead
 */
export declare function pedmugshotTake(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74F99EF7EF503398 | Since: 1207
 *
 * @deprecated Use network.propsetToNet() instead
 */
export declare function propsetToNet(propSet: any): number;
/**
 * No comment provided
 *
 * Hash: 0xA197C35F73AC0F12 | Since: 1207
 *
 * @deprecated Use network.reportPlayer() instead
 */
export declare function reportPlayer(player: number | string | Player, reportType: number, description: string, horseName: string): void;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x356F9FB0698C1FEB | Since: 1207
 *
 * @deprecated Use network.requestPedshotTextureLocalBackupDownload() instead
 */
export declare function requestPedshotTextureLocalBackupDownload(player: number, personaPhotoLocalCacheType: number): string;
/**
 * Only used in R* SP Script map_app_event_handler
 *
 * Hash: 0xCAF4CA2F87779F8F | Since: 1207
 *
 * @deprecated Use network.requestPedshotTextureLocalDownload() instead
 */
export declare function requestPedshotTextureLocalDownload(gamerHandle: any): string;
/**
 * No comment provided
 *
 * Hash: 0xB5C4B18B12A2AF23 | Since: 1207
 *
 * @deprecated Use network.requestPedshotTextureMultiplayerDownload() instead
 */
export declare function requestPedshotTextureMultiplayerDownload(gamerHandle: any): string;
/**
 * No comment provided
 *
 * Hash: 0x51D99497ABF3F451 | Since: 1207
 *
 * @deprecated Use network.setDoorNetworked() instead
 */
export declare function setDoorNetworked(doorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC1E1A3D5ED7617B8 | Since: 1207
 *
 * @deprecated Use network.setDoorUnnetworked() instead
 */
export declare function setDoorUnnetworked(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEE5AE9956743BA20 | Since: 1207
 *
 * @deprecated Use network.setEntityGhostedToLocalPlayer() instead
 */
export declare function setEntityGhostedToLocalPlayer(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDFFC15AA63D04AAB | Since: 1207
 *
 * @deprecated Use network.setLaunchParamString() instead
 */
export declare function setLaunchParamString(params: string): void;
/**
 * No comment provided
 *
 * Hash: 0x668AF6E4933AC13F | Since: 1207
 *
 * @deprecated Use network.setLaunchParamValue() instead
 */
export declare function setLaunchParamValue(paramName: string, value: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD041A32992A55F84 | Since: 1207
 *
 * @deprecated Use network.setLocalPlayerDamageMultiplierForPlayer() instead
 */
export declare function setLocalPlayerDamageMultiplierForPlayer(player: number | string | Player, damageMultiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x442B4347B6EC36E8 | Since: 1207
 *
 * @deprecated Use network.setNetworkRespotTimer() instead
 */
export declare function setNetworkRespotTimer(entity: number | Entity, timer: number): void;
/**
 * _SET_PLAYER_V* - _SET_S*
 *
 * Hash: 0xDCA6ABDB9288FBE4 | Since: 1207
 *
 * @deprecated Use network.setPlayerVisibilityToLocalPlayerDisabled() instead
 */
export declare function setPlayerVisibilityToLocalPlayerDisabled(player: number | string | Player, disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x777D0571A466B520 | Since: 1207
 *
 * @deprecated Use network.setSocialMatchmakingAllowed() instead
 */
export declare function setSocialMatchmakingAllowed(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7A17B7981560FFA5 | Since: 1207
 *
 * @deprecated Use network.textureDownloadReleaseByName() instead
 */
export declare function textureDownloadReleaseByName(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE2C3CEC3C0903A00 | Since: 1207
 *
 * @deprecated Use network.textureDownloadTextureNameIsValid() instead
 */
export declare function textureDownloadTextureNameIsValid(name: string): boolean;
/**
 * Checks if the user has ROS privilege 14.
 *
 * Hash: 0x6506BFA755FB209C | Since: 1207
 *
 * @deprecated Use network.ugcHasPrivilege() instead
 */
export declare function ugcHasPrivilege(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE42D1042F09865FE | Since: 1355
 *
 * @deprecated Use network.ugcIsBookMarked() instead
 */
export declare function ugcIsBookMarked(contentId: string): boolean;
/**
 * Returns ugcRequestId
 *
 * Hash: 0x8C109958C9BB559D | Since: 1207
 *
 * @deprecated Use network.ugcQueryByCategory() instead
 */
export declare function ugcQueryByCategory(categoryType: number, maxGet: number, contentTypeName: string): number;
/**
 * Returns ugcRequestId
 *
 * Hash: 0x69D22E183580113F | Since: 1207
 *
 * @deprecated Use network.ugcQueryByContentId() instead
 */
export declare function ugcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): number;
/**
 * Returns ugcRequestId
 *
 * Hash: 0xF40EF49B3099E98E | Since: 1207
 *
 * @deprecated Use network.ugcQueryByContentType() instead
 */
export declare function ugcQueryByContentType(maxGet: number, contentTypeName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x98539FC453AEA639 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetBookMarked() instead
 */
export declare function ugcQueryGetBookMarked(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xADB56322EEDFBDC9 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetCreatorHandle() instead
 */
export declare function ugcQueryGetCreatorHandle(index: number, gamerHandle: any): any;
/**
 * Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
 *
 * Hash: 0x409FE0CA6A4D1D49 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetCreatorPhoto() instead
 */
export declare function ugcQueryGetCreatorPhoto(): string;
/**
 * No comment provided
 *
 * Hash: 0xE0CB4AB15CB32710 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetDate() instead
 */
export declare function ugcQueryGetDate(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x97764E8AC6487A9A | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetLanguage() instead
 */
export declare function ugcQueryGetLanguage(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0xA6BF569956C60A60 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetMissionDescHash() instead
 */
export declare function ugcQueryGetMissionDescHash(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2D053EA815702DD1 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetName() instead
 */
export declare function ugcQueryGetName(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0xF9F0B3028431967B | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetOwnerId() instead
 */
export declare function ugcQueryGetOwnerId(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0xCAF50048C8D0FBA0 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetPlaylistName() instead
 */
export declare function ugcQueryGetPlaylistName(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0x104080CA9E519B00 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetPosixPublishedDate() instead
 */
export declare function ugcQueryGetPosixPublishedDate(): number;
/**
 * No comment provided
 *
 * Hash: 0x21A99A72B00D8002 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetPosixUpdatedDate() instead
 */
export declare function ugcQueryGetPosixUpdatedDate(): number;
/**
 * No comment provided
 *
 * Hash: 0x9993F1E11944A3DD | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetPublished() instead
 */
export declare function ugcQueryGetPublished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24CD8FAEA1368379 | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetRating() instead
 */
export declare function ugcQueryGetRating(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x566CEB0542EF5ECF | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetRootContentId() instead
 */
export declare function ugcQueryGetRootContentId(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0x63E9DCBC8B0931ED | Since: 1207
 *
 * @deprecated Use network.ugcQueryGetVersion() instead
 */
export declare function ugcQueryGetVersion(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE2B3B852B537C398 | Since: 1207
 *
 * @deprecated Use object.allowDamageEventsForNonNetworkedObjects() instead
 */
export declare function allowDamageEventsForNonNetworkedObjects(enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8DC39368BDD57755 | Since: 1207
 *
 * @deprecated Use object.attachPortablePickupToPed() instead
 */
export declare function attachPortablePickupToPed(pickupObject: number | Object, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB8F5062070BB6DBD | Since: 1207
 *
 * @deprecated Use object.blockPickupFromPlayerCollection() instead
 */
export declare function blockPickupFromPlayerCollection(): void;
/**
 * No comment provided
 *
 * Hash: 0x8462BE2341A55B6F | Since: 1207
 *
 * @deprecated Use object.breakAllObjectFragmentBones() instead
 */
export declare function breakAllObjectFragmentBones(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xE7E4C198B0185900 | Since: 1207
 *
 * @deprecated Use object.breakObjectFragmentChild() instead
 */
export declare function breakObjectFragmentChild(object: number | Object): void;
/**
 * Old name: _GET_PICKUP_HASH
 *
 * Hash: 0x5EAAD83F8CFB4575 | Since: 1207
 *
 * @deprecated Use object.convertOldPickupTypeToNew() instead
 */
export declare function convertOldPickupTypeToNew(pickupHash: number | string): number;
/**
 * flags: see CREATE_PICKUP
 *
 * Hash: 0x673966A0C0FD7171 | Since: 1207
 *
 * @deprecated Use object.createAmbientPickup() instead
 */
export declare function createAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x509D5878EB39E842 | Since: 1207
 *
 * @deprecated Use object.createObject() instead
 */
export declare function createObject(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x9A294B2138ABB884 | Since: 1207
 *
 * @deprecated Use object.createObjectNoOffset() instead
 */
export declare function createObjectNoOffset(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xB6CBD40F8EA69E8A | Since: 1207
 *
 * @deprecated Use object.createObjectSkeleton() instead
 */
export declare function createObjectSkeleton(object: number | Object): boolean;
/**
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
 *
 * Hash: 0xFBA08C503DD5FA58 | Since: 1207
 *
 * @deprecated Use object.createPickup() instead
 */
export declare function createPickup(pickupHash: number | string, pos: Vector3, flags: number, modelHash: number | string): any;
/**
 * flags: see CREATE_PICKUP
 *
 * Hash: 0x891804727E0A98B7 | Since: 1207
 *
 * @deprecated Use object.createPickupRotate() instead
 */
export declare function createPickupRotate(pickupHash: number | string, pos: Vector3, rot: Vector3, flags: number, modelHash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x2EAF1FDB2FB55698 | Since: 1207
 *
 * @deprecated Use object.createPortablePickup() instead
 */
export declare function createPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
/**
 * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0x931914268722C263 | Since: 1207
 *
 * @deprecated Use object.deleteObject() instead
 */
export declare function deleteObject(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xCF463D1E9A0AECB1 | Since: 1207
 *
 * @deprecated Use object.detachPortablePickupFromPed() instead
 */
export declare function detachPortablePickupFromPed(pickupObject: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xBFA48E2FF417213F | Since: 1207
 *
 * @deprecated Use object.doesObjectOfTypeExistAtCoords() instead
 */
export declare function doesObjectOfTypeExistAtCoords(pos: Vector3, radius: number, hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAFC1CA75AD4074D1 | Since: 1207
 *
 * @deprecated Use object.doesPickupExist() instead
 */
export declare function doesPickupExist(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD9EFB6DBF7DAAEA3 | Since: 1207
 *
 * @deprecated Use object.doesPickupObjectExist() instead
 */
export declare function doesPickupObjectExist(pickupObject: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9C36251F6E48E33 | Since: 1207
 *
 * @deprecated Use object.doesPickupOfTypeExistInArea() instead
 */
export declare function doesPickupOfTypeExistInArea(pickupHash: number | string, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52AF537A0C5B8AAD | Since: 1207
 *
 * @deprecated Use object.doesRayfireMapObjectExist() instead
 */
export declare function doesRayfireMapObjectExist(object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x160AA1B32F6139B8 | Since: 1207
 *
 * @deprecated Use object.doorSystemGetDoorState() instead
 */
export declare function doorSystemGetDoorState(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x65499865FCA6E5EC | Since: 1207
 *
 * @deprecated Use object.doorSystemGetOpenRatio() instead
 */
export declare function doorSystemGetOpenRatio(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x9BA001CB45CBF627 | Since: 1207
 *
 * @deprecated Use object.doorSystemSetAutomaticDistance() instead
 */
export declare function doorSystemSetAutomaticDistance(doorHash: number | string, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x03C27E13B42A0E82 | Since: 1207
 *
 * @deprecated Use object.doorSystemSetAutomaticRate() instead
 */
export declare function doorSystemSetAutomaticRate(doorHash: number | string, rate: number): void;
/**
 * Door lock states:
 * enum eDoorState
 * {
 * DOORSTATE_INVALID = -1,
 * DOORSTATE_UNLOCKED,
 * DOORSTATE_LOCKED_UNBREAKABLE,
 * DOORSTATE_LOCKED_BREAKABLE,
 * DOORSTATE_HOLD_OPEN_POSITIVE,
 * DOORSTATE_HOLD_OPEN_NEGATIVE
 * };
 *
 * Hash: 0x6BAB9442830C7F53 | Since: 1207
 *
 * @deprecated Use object.doorSystemSetDoorState() instead
 */
export declare function doorSystemSetDoorState(doorHash: number | string, state: number): void;
/**
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 *
 * Hash: 0xB6E6FBA95C7324AC | Since: 1207
 *
 * @deprecated Use object.doorSystemSetOpenRatio() instead
 */
export declare function doorSystemSetOpenRatio(doorHash: number | string, ajar: number, forceUpdate: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF9C1681347C8BD15 | Since: 1207
 *
 * @deprecated Use object.fixObjectFragment() instead
 */
export declare function fixObjectFragment(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x758A5C1B3B1E1990 | Since: 1207
 *
 * @deprecated Use object.forcePickupRegenerate() instead
 */
export declare function forcePickupRegenerate(): void;
/**
 * Returns the closest object of a specified type within a given radius from a specified position
 *
 * Hash: 0xE143FA2249364369 | Since: 1207
 *
 * @deprecated Use object.getClosestObjectOfType() instead
 */
export declare function getClosestObjectOfType(pos: Vector3, radius: number, modelHash: number | string, missionScriptObject: boolean, scriptHostObject: boolean, networkObject: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xB6FBFD079B8D0596 | Since: 1207
 *
 * @deprecated Use object.getObjectFragmentDamageHealth() instead
 */
export declare function getObjectFragmentDamageHealth(): number;
/**
 * Old name: _GET_OBJECT_OFFSET_FROM_COORDS
 *
 * Hash: 0x163E252DE035A133 | Since: 1207
 *
 * @deprecated Use object.getOffsetFromCoordAndHeadingInWorldCoords() instead
 */
export declare function getOffsetFromCoordAndHeadingInWorldCoords(pos: Vector3, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x225B8B35C88029B3 | Since: 1207
 *
 * @deprecated Use object.getPickupCoords() instead
 */
export declare function getPickupCoords(pickup: any): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x5099BC55630B25AE | Since: 1207
 *
 * @deprecated Use object.getPickupObject() instead
 */
export declare function getPickupObject(pickup: any): number;
/**
 * No comment provided
 *
 * Hash: 0xB48FCED898292E52 | Since: 1207
 *
 * @deprecated Use object.getRayfireMapObject() instead
 */
export declare function getRayfireMapObject(pos: Vector3, radius: number, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x260EE4FDBDF4DB01 | Since: 1207
 *
 * @deprecated Use object.getRayfireMapObjectAnimPhase() instead
 */
export declare function getRayfireMapObjectAnimPhase(object: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x6E16BC2503FF1FF0 | Since: 1207
 *
 * @deprecated Use object.getSafePickupCoords() instead
 */
export declare function getSafePickupCoords(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x899BA936634A322E | Since: 1207
 *
 * @deprecated Use object.getStateOfRayfireMapObject() instead
 */
export declare function getStateOfRayfireMapObject(object: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x08F96CA6C551AD51 | Since: 1207
 *
 * @deprecated Use object.getWeaponTypeFromPickupType() instead
 */
export declare function getWeaponTypeFromPickupType(pickupHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x761B0E69AC4D007E | Since: 1207
 *
 * @deprecated Use object.hasClosestObjectOfTypeBeenBroken() instead
 */
export declare function hasClosestObjectOfTypeBeenBroken(modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8ABFB70C49CC43E2 | Since: 1207
 *
 * @deprecated Use object.hasObjectBeenBroken() instead
 */
export declare function hasObjectBeenBroken(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x80EC48E6679313F9 | Since: 1207
 *
 * @deprecated Use object.hasPickupBeenCollected() instead
 */
export declare function hasPickupBeenCollected(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC531EE8A1145A149 | Since: 1207
 *
 * @deprecated Use object.isDoorClosed() instead
 */
export declare function isDoorClosed(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC153C43EA202C8C1 | Since: 1207
 *
 * @deprecated Use object.isDoorRegisteredWithSystem() instead
 */
export declare function isDoorRegisteredWithSystem(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0378C08504160D0D | Since: 1207
 *
 * @deprecated Use object.isObjectAPortablePickup() instead
 */
export declare function isObjectAPortablePickup(object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8B32ACE6326A7546 | Since: 1207
 *
 * @deprecated Use object.isObjectVisible() instead
 */
export declare function isObjectVisible(object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A70BAE8883E4C81 | Since: 1207
 *
 * @deprecated Use object.isPointInAngledArea() instead
 */
export declare function isPointInAngledArea(): boolean;
/**
 * Old name: _MARK_OBJECT_FOR_DELETION
 *
 * Hash: 0xADBE4809F19F927A | Since: 1207
 *
 * @deprecated Use object.onlyCleanUpObjectWhenOutOfRange() instead
 */
export declare function onlyCleanUpObjectWhenOutOfRange(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x58A850EAEE20FAA3 | Since: 1207
 *
 * @deprecated Use object.placeObjectOnGroundProperly() instead
 */
export declare function placeObjectOnGroundProperly(object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x92AEFB5F6E294023 | Since: 1207
 *
 * @deprecated Use object.preventCollectionOfPortablePickup() instead
 */
export declare function preventCollectionOfPortablePickup(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x27F9D613092159CF | Since: 1207
 *
 * @deprecated Use object.removeAllPickupsOfType() instead
 */
export declare function removeAllPickupsOfType(pickupHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x464D8E1427156FE4 | Since: 1207
 *
 * @deprecated Use object.removeDoorFromSystem() instead
 */
export declare function removeDoorFromSystem(doorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3288D8ACAECD2AB2 | Since: 1207
 *
 * @deprecated Use object.removePickup() instead
 */
export declare function removePickup(pickup: any): void;
/**
 * No comment provided
 *
 * Hash: 0x406137F8EF90EAF5 | Since: 1207
 *
 * @deprecated Use object.setActivateObjectPhysicsAsSoonAsItIsUnfrozen() instead
 */
export declare function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE124889AE0521FCF | Since: 1207
 *
 * @deprecated Use object.setCustomTexturesOnObject() instead
 */
export declare function setCustomTexturesOnObject(object: number | Object, txdHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF538081986E49E9D | Since: 1207
 *
 * @deprecated Use object.setForceObjectThisFrame() instead
 */
export declare function setForceObjectThisFrame(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x78857FC65CADB909 | Since: 1207
 *
 * @deprecated Use object.setLocalPlayerCanCollectPortablePickups() instead
 */
export declare function setLocalPlayerCanCollectPortablePickups(toggle: boolean): void;
/**
 * Maximum amount of pickup models that can be disallowed is 10.
 *
 * Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
 *
 * Hash: 0x88EAEC617CD26926 | Since: 1207
 *
 * @deprecated Use object.setLocalPlayerPermittedToCollectPickupsWithModel() instead
 */
export declare function setLocalPlayerPermittedToCollectPickupsWithModel(modelHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0BF3B3BD47D79C08 | Since: 1207
 *
 * @deprecated Use object.setMaxNumPortablePickupsCarriedByPlayer() instead
 */
export declare function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4D89D607CB3DD1D2 | Since: 1207
 *
 * @deprecated Use object.setObjectAllowLowLodBuoyancy() instead
 */
export declare function setObjectAllowLowLodBuoyancy(object: number | Object, toggle: boolean): void;
/**
 * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
 *
 * Other parameters seem to be unknown.
 *
 * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
 * p3: seems similar to p2
 * p4: makes obj fall slower the higher the value
 * p5: similar to p4
 *
 * Hash: 0xF6DF6E90DE7DF90F | Since: 1207
 *
 * @deprecated Use object.setObjectPhysicsParams() instead
 */
export declare function setObjectPhysicsParams(object: number | Object, weight: number, gravity: number, buoyancy: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEB6F1A9B5510A5D2 | Since: 1207
 *
 * @deprecated Use object.setObjectTakesDamageFromCollidingWithBuildings() instead
 */
export declare function setObjectTakesDamageFromCollidingWithBuildings(object: number | Object, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8A7391690F5AFD81 | Since: 1207
 *
 * @deprecated Use object.setObjectTargettable() instead
 */
export declare function setObjectTargettable(object: number | Object, targettable: boolean): void;
/**
 * Alt name: _SET_OBJECT_TINT
 *
 * Old name: _SET_OBJECT_TEXTURE_VARIATION
 *
 * Hash: 0x971DA0055324D033 | Since: 1207
 *
 * @deprecated Use object.setObjectTintIndex() instead
 */
export declare function setObjectTintIndex(object: number | Object, textureVariation: number): void;
/**
 * No comment provided
 *
 * Hash: 0x634C19521485AB25 | Since: 1207
 *
 * @deprecated Use object.setPickupDoNotAutoPlaceOnGround() instead
 */
export declare function setPickupDoNotAutoPlaceOnGround(pickupObject: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x318516E02DE3ECE2 | Since: 1207
 *
 * @deprecated Use object.setPickupGenerationRangeMultiplier() instead
 */
export declare function setPickupGenerationRangeMultiplier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x81218CE01B672219 | Since: 1207
 *
 * @deprecated Use object.setPickupHiddenWhenUncollectable() instead
 */
export declare function setPickupHiddenWhenUncollectable(): void;
/**
 * No comment provided
 *
 * Hash: 0x92E87F60F21A0C3A | Since: 1207
 *
 * @deprecated Use object.setPickupNotLootable() instead
 */
export declare function setPickupNotLootable(): void;
/**
 * No comment provided
 *
 * Hash: 0x1607C7D9B3021DF5 | Since: 1207
 *
 * @deprecated Use object.setPickupParticleFxHighlight() instead
 */
export declare function setPickupParticleFxHighlight(): void;
/**
 * No comment provided
 *
 * Hash: 0xEB9740A38FD6D634 | Since: 1207
 *
 * @deprecated Use object.setPickupParticleFxSpawn() instead
 */
export declare function setPickupParticleFxSpawn(): void;
/**
 * No comment provided
 *
 * Hash: 0x78015C9B4B3ECC9D | Since: 1207
 *
 * @deprecated Use object.setPickupRegenerationTime() instead
 */
export declare function setPickupRegenerationTime(pickup: any, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4A8CB328CD6F1C9B | Since: 1207
 *
 * @deprecated Use object.setPickupUncollectable() instead
 */
export declare function setPickupUncollectable(): void;
/**
 * No comment provided
 *
 * Hash: 0x5C29F698D404C5E1 | Since: 1207
 *
 * @deprecated Use object.setStateOfRayfireMapObject() instead
 */
export declare function setStateOfRayfireMapObject(object: number | Object, state: number): void;
/**
 * No comment provided
 *
 * Hash: 0x53E0DF1A2A3CF0CA | Since: 1207
 *
 * @deprecated Use object.setTeamPickupObject() instead
 */
export declare function setTeamPickupObject(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x2FDFF4107B8C1147 | Since: 1207
 *
 * @deprecated Use object.slideObject() instead
 */
export declare function slideObject(object: number | Object, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF92099527DB8E2A7 | Since: 1207
 *
 * @deprecated Use object.suppressPickupRewardType() instead
 */
export declare function suppressPickupRewardType(rewardType: number, suppress: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB252BC036B525623 | Since: 1207
 *
 * @deprecated Use object.trackObjectVisibility() instead
 */
export declare function trackObjectVisibility(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x08C5825A2932EA7B | Since: 1207
 *
 * @deprecated Use object._0x08C5825A2932EA7B() instead
 */
export declare function _0x08C5825A2932EA7B(): any;
/**
 * Params: p1 = 23 in R* Scripts
 *
 * Hash: 0x0943113E02322164 | Since: 1207
 *
 * @deprecated Use object._0x0943113E02322164() instead
 */
export declare function _0x0943113E02322164(object: number | Object): any;
/**
 * something to do with doors lockdown when navmesh is swapping?UPDATE_WORLD_STATE  seems to be for unlocking something
 *
 * Hash: 0x0C0A373D181BF900 | Since: 1207
 *
 * @deprecated Use object._0x0C0A373D181BF900() instead
 */
export declare function _0x0C0A373D181BF900(doorHash: number | string): void;
/**
 * _SET_A(MBIENT_PICKUP_?)*
 *
 * Hash: 0x1F5E07E14A86FAFC | Since: 1207
 *
 * @deprecated Use object._0x1F5E07E14A86FAFC() instead
 */
export declare function _0x1F5E07E14A86FAFC(): void;
/**
 * No comment provided
 *
 * Hash: 0x20135AF9C10D2A3D | Since: 1207
 *
 * @deprecated Use object._0x20135AF9C10D2A3D() instead
 */
export declare function _0x20135AF9C10D2A3D(): any;
/**
 * No comment provided
 *
 * Hash: 0x22031584496CFB70 | Since: 1207
 *
 * @deprecated Use object._0x22031584496CFB70() instead
 */
export declare function _0x22031584496CFB70(): void;
/**
 * No comment provided
 *
 * Hash: 0x235C863DA77BD88D | Since: 1207
 *
 * @deprecated Use object._0x235C863DA77BD88D() instead
 */
export declare function _0x235C863DA77BD88D(): any;
/**
 * No comment provided
 *
 * Hash: 0x250EBB11E81A10BE | Since: 1207
 *
 * @deprecated Use object._0x250EBB11E81A10BE() instead
 */
export declare function _0x250EBB11E81A10BE(): any;
/**
 * No comment provided
 *
 * Hash: 0x2BF1953C0C21AC88 | Since: 1207
 *
 * @deprecated Use object._0x2BF1953C0C21AC88() instead
 */
export declare function _0x2BF1953C0C21AC88(): any;
/**
 * No comment provided
 *
 * Hash: 0x3A77DAE8B4FD7586 | Since: 1207
 *
 * @deprecated Use object._0x3A77DAE8B4FD7586() instead
 */
export declare function _0x3A77DAE8B4FD7586(): void;
/**
 * No comment provided
 *
 * Hash: 0x3DF1A0A58498E209 | Since: 1436
 *
 * @deprecated Use object._0x3DF1A0A58498E209() instead
 */
export declare function _0x3DF1A0A58498E209(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x3E2616E7EA539480 | Since: 1207
 *
 * @deprecated Use object._0x3E2616E7EA539480() instead
 */
export declare function _0x3E2616E7EA539480(): any;
/**
 * No comment provided
 *
 * Hash: 0x46CBCF0E98A4E156 | Since: 1207
 *
 * @deprecated Use object._0x46CBCF0E98A4E156() instead
 */
export declare function _0x46CBCF0E98A4E156(): void;
/**
 * No comment provided
 *
 * Hash: 0x491439AEF410A2FC | Since: 1207
 *
 * @deprecated Use object._0x491439AEF410A2FC() instead
 */
export declare function _0x491439AEF410A2FC(): void;
/**
 * No comment provided
 *
 * Hash: 0x4AE07EBA3462C5D5 | Since: 1207
 *
 * @deprecated Use object._0x4AE07EBA3462C5D5() instead
 */
export declare function _0x4AE07EBA3462C5D5(): void;
/**
 * No comment provided
 *
 * Hash: 0x4D8611DFE1126478 | Since: 1207
 *
 * @deprecated Use object._0x4D8611DFE1126478() instead
 */
export declare function _0x4D8611DFE1126478(): any;
/**
 * No comment provided
 *
 * Hash: 0x5230BF34EB0EC645 | Since: 1207
 *
 * @deprecated Use object._0x5230BF34EB0EC645() instead
 */
export declare function _0x5230BF34EB0EC645(): void;
/**
 * No comment provided
 *
 * Hash: 0x57C242543B7B8FB9 | Since: 1207
 *
 * @deprecated Use object._0x57C242543B7B8FB9() instead
 */
export declare function _0x57C242543B7B8FB9(): void;
/**
 * No comment provided
 *
 * Hash: 0x58DE624FA7FB0E7F | Since: 1207
 *
 * @deprecated Use object._0x58DE624FA7FB0E7F() instead
 */
export declare function _0x58DE624FA7FB0E7F(): any;
/**
 * No comment provided
 *
 * Hash: 0x614D0B4533F842D3 | Since: 1207
 *
 * @deprecated Use object._0x614D0B4533F842D3() instead
 */
export declare function _0x614D0B4533F842D3(): any;
/**
 * No comment provided
 *
 * Hash: 0x6579860A5558524A | Since: 1207
 *
 * @deprecated Use object._0x6579860A5558524A() instead
 */
export declare function _0x6579860A5558524A(): void;
/**
 * No comment provided
 *
 * Hash: 0x6E2AA80BB0C03728 | Since: 1207
 *
 * @deprecated Use object._0x6E2AA80BB0C03728() instead
 */
export declare function _0x6E2AA80BB0C03728(): any;
/**
 * No comment provided
 *
 * Hash: 0x7D4411D6736CD295 | Since: 1207
 *
 * @deprecated Use object._0x7D4411D6736CD295() instead
 */
export declare function _0x7D4411D6736CD295(): any;
/**
 * something to do with doors lockdown when navmesh is swapping? UPDATE_WORLD_STATE, seems to be for locking something
 *
 * Hash: 0x7F458B543006C8FE | Since: 1207
 *
 * @deprecated Use object._0x7F458B543006C8FE() instead
 */
export declare function _0x7F458B543006C8FE(doorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x7FCD49388BC9B775 | Since: 1207
 *
 * @deprecated Use object._0x7FCD49388BC9B775() instead
 */
export declare function _0x7FCD49388BC9B775(): void;
/**
 * No comment provided
 *
 * Hash: 0x9A74A9CADFA8A598 | Since: 1207
 *
 * @deprecated Use object._0x9A74A9CADFA8A598() instead
 */
export declare function _0x9A74A9CADFA8A598(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F52AD67D1A91BAD | Since: 1207
 *
 * @deprecated Use object._0x9F52AD67D1A91BAD() instead
 */
export declare function _0x9F52AD67D1A91BAD(): any;
/**
 * No comment provided
 *
 * Hash: 0xA93F925F1942E434 | Since: 1207
 *
 * @deprecated Use object._0xA93F925F1942E434() instead
 */
export declare function _0xA93F925F1942E434(): void;
/**
 * No comment provided
 *
 * Hash: 0xAAACF33CBF9B990A | Since: 1207
 *
 * @deprecated Use object._0xAAACF33CBF9B990A() instead
 */
export declare function _0xAAACF33CBF9B990A(): void;
/**
 * No comment provided
 *
 * Hash: 0xACD4F9831DFAD7F5 | Since: 1207
 *
 * @deprecated Use object._0xACD4F9831DFAD7F5() instead
 */
export declare function _0xACD4F9831DFAD7F5(): any;
/**
 * Not official native name
 *
 * Hash: 0xAEE6C800E124CFE1 | Since: 1207
 *
 * @deprecated Use object.setObjectPromptName() instead
 */
export declare function setObjectPromptName(object: number | Object, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xB3B1546D23DF8DE1 | Since: 1207
 *
 * @deprecated Use object._0xB3B1546D23DF8DE1() instead
 */
export declare function _0xB3B1546D23DF8DE1(): void;
/**
 * No comment provided
 *
 * Hash: 0xC07B91B996C1DE89 | Since: 1207
 *
 * @deprecated Use object._0xC07B91B996C1DE89() instead
 */
export declare function _0xC07B91B996C1DE89(): void;
/**
 * _SET_OBJECT_*
 *
 * Hash: 0xCAAF2BCCFEF37F77 | Since: 1207
 *
 * @deprecated Use object._0xCAAF2BCCFEF37F77() instead
 */
export declare function _0xCAAF2BCCFEF37F77(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xCBFBD38F2E0A263B | Since: 1207
 *
 * @deprecated Use object._0xCBFBD38F2E0A263B() instead
 */
export declare function _0xCBFBD38F2E0A263B(): void;
/**
 * No comment provided
 *
 * Hash: 0xCEAB54F4632C6EF6 | Since: 1207
 *
 * @deprecated Use object._0xCEAB54F4632C6EF6() instead
 */
export declare function _0xCEAB54F4632C6EF6(): void;
/**
 * Not official native name
 *
 * Hash: 0xD503D6F0986D58BC | Since: 1207
 *
 * @deprecated Use object.setObjectPromptNameFromGxtEntry() instead
 */
export declare function setObjectPromptNameFromGxtEntry(object: number | Object, gxtEntryHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD91E55B6C005EB09 | Since: 1207
 *
 * @deprecated Use object._0xD91E55B6C005EB09() instead
 */
export declare function _0xD91E55B6C005EB09(): any;
/**
 * No comment provided
 *
 * Hash: 0xDE116ECFFDD4B997 | Since: 1207
 *
 * @deprecated Use object._0xDE116ECFFDD4B997() instead
 */
export declare function _0xDE116ECFFDD4B997(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFA1237F5228263F | Since: 1207
 *
 * @deprecated Use object._0xDFA1237F5228263F() instead
 */
export declare function _0xDFA1237F5228263F(): void;
/**
 * No comment provided
 *
 * Hash: 0xE157A8A336C7F04A | Since: 1207
 *
 * @deprecated Use object._0xE157A8A336C7F04A() instead
 */
export declare function _0xE157A8A336C7F04A(): void;
/**
 * No comment provided
 *
 * Hash: 0xEBA314768FB35D58 | Since: 1207
 *
 * @deprecated Use object._0xEBA314768FB35D58() instead
 */
export declare function _0xEBA314768FB35D58(): any;
/**
 * No comment provided
 *
 * Hash: 0xF65EDE5D02A7A760 | Since: 1207
 *
 * @deprecated Use object._0xF65EDE5D02A7A760() instead
 */
export declare function _0xF65EDE5D02A7A760(): void;
/**
 * No comment provided
 *
 * Hash: 0xF6E88489B4E6EBE5 | Since: 1207
 *
 * @deprecated Use object._0xF6E88489B4E6EBE5() instead
 */
export declare function _0xF6E88489B4E6EBE5(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA99E8E575F2FEF8 | Since: 1436
 *
 * @deprecated Use object._0xFA99E8E575F2FEF8() instead
 */
export declare function _0xFA99E8E575F2FEF8(): any;
/**
 * Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
 *
 * Hash: 0xD99229FE93B46286 | Since: 1207
 *
 * @deprecated Use object.addDoorToSystemNew() instead
 */
export declare function addDoorToSystemNew(doorHash: number | string, threadId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE4EFB315BCD2A838 | Since: 1207
 *
 * @deprecated Use object.damageBoneOnProp() instead
 */
export declare function damageBoneOnProp(object: number | Object, bone: number): void;
/**
 * No comment provided
 *
 * Hash: 0x985767F5FA45BC44 | Since: 1207
 *
 * @deprecated Use object.doorSystemChangeScriptOwner() instead
 */
export declare function doorSystemChangeScriptOwner(doorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x276AAF0F1C7F2494 | Since: 1207
 *
 * @deprecated Use object.doorSystemForceShut() instead
 */
export declare function doorSystemForceShut(doorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x8433E1954BE323FC | Since: 1207
 *
 * @deprecated Use object.doorSystemGetAutomaticRate() instead
 */
export declare function doorSystemGetAutomaticRate(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x1F1FABFE9B2A1254 | Since: 1207
 *
 * @deprecated Use object.doorSystemSetAbleToChangeOpenRatioWhileLocked() instead
 */
export declare function doorSystemSetAbleToChangeOpenRatioWhileLocked(doorHash: number | string): void;
/**
 * _ALLOW_* - _ATTACH_*
 *
 * Hash: 0x1BC47A9DEDC8DF5D | Since: 1207
 *
 * @deprecated Use object.doorSystemSetAutomaticState() instead
 */
export declare function doorSystemSetAutomaticState(doorHash: number | string, disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x44B09A23D728045A | Since: 1207
 *
 * @deprecated Use object.getAmmoTypeFromPickupType() instead
 */
export declare function getAmmoTypeFromPickupType(pickupHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xFA3B61EC249B4674 | Since: 1207
 *
 * @deprecated Use object.getLightIntensityFromObject() instead
 */
export declare function getLightIntensityFromObject(object: number | Object): number;
/**
 * Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
 *
 * Hash: 0x3397CD4E0353DFBA | Since: 1207
 *
 * @deprecated Use object.getObjectLightIntensity() instead
 */
export declare function getObjectLightIntensity(object: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x2777150CC7D9365E | Since: 1207
 *
 * @deprecated Use object.hidePickupObject() instead
 */
export declare function hidePickupObject(pickupObject: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB5DED7B65C604FDF | Since: 1207
 *
 * @deprecated Use object.isDoorRegisteredWithNetwork() instead
 */
export declare function isDoorRegisteredWithNetwork(doorHash: number | string): boolean;
/**
 * Returns true if door is alredy registered with owner
 *
 * Hash: 0x4F89DAD4156BA145 | Since: 1207
 *
 * @deprecated Use object.isDoorRegisteredWithOwner() instead
 */
export declare function isDoorRegisteredWithOwner(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x007BD043587F7C82 | Since: 1207
 *
 * @deprecated Use object.isPickupTypeValid() instead
 */
export declare function isPickupTypeValid(pickupHash: number | string): boolean;
/**
 * _PRE* or _Q* or _RE*
 *
 * Hash: 0x1461DF6DB886BE3F | Since: 1207
 *
 * @deprecated Use object.makeItemCarriable() instead
 */
export declare function makeItemCarriable(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xF40AB58D83C35027 | Since: 1207
 *
 * @deprecated Use object.resetObjectVelocity() instead
 */
export declare function resetObjectVelocity(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xAC9AE68F0A463752 | Since: 1207
 *
 * @deprecated Use object.setAmbientPickupLifetime() instead
 */
export declare function setAmbientPickupLifetime(lifetime: number): void;
/**
 * Sets object as auto-jumpable by horse.
 *
 * Hash: 0x98D2D9C053A1F449 | Since: 1207
 *
 * @deprecated Use object.setAutoJumpableByHorse() instead
 */
export declare function setAutoJumpableByHorse(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xF49574E2332A8F06 | Since: 1207
 *
 * @deprecated Use object.setLightIntensityForObject() instead
 */
export declare function setLightIntensityForObject(object: number | Object, lightIntensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x04D1D4E411CE52D0 | Since: 1207
 *
 * @deprecated Use object.setLightScatteringDisabledForObject() instead
 */
export declare function setLightScatteringDisabledForObject(object: number | Object, disable: boolean): void;
/**
 * Params: value = 0.0 - 586.67 (?)
 *
 * Hash: 0x63E39F09310F481F | Since: 1207
 *
 * @deprecated Use object.setLightTranslucencyForObject() instead
 */
export declare function setLightTranslucencyForObject(object: number | Object, value: number): void;
/**
 * Params: p2 controls whether to make pickups usable/collectable or not in networked games
 *
 * Hash: 0x94F3D956BFAEAE18 | Since: 1207
 *
 * @deprecated Use object.setNetworkPickupUsableForPlayer() instead
 */
export declare function setNetworkPickupUsableForPlayer(player: number | string | Player, pickupHash: number | string, isUsable: boolean): void;
/**
 * Sets object as not jumpable by horse.
 *
 * Hash: 0xE1C708BA4885796B | Since: 1207
 *
 * @deprecated Use object.setNotJumpableByHorse() instead
 */
export declare function setNotJumpableByHorse(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xFFB99FFD17F65889 | Since: 1207
 *
 * @deprecated Use object.setObjectBreakScale() instead
 */
export declare function setObjectBreakScale(object: number | Object, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC8E21C1677DC5E6F | Since: 1207
 *
 * @deprecated Use object.setObjectBurnIntensity() instead
 */
export declare function setObjectBurnIntensity(object: number | Object, intensity: number): void;
/**
 * Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
 *
 * Hash: 0x2797C633DCDBBAC5 | Since: 1207
 *
 * @deprecated Use object.setObjectBurnLevel() instead
 */
export declare function setObjectBurnLevel(object: number | Object, burnLevel: number, affectAsh: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7D7285EFEAB5AF15 | Since: 1207
 *
 * @deprecated Use object.setObjectBurnOpacity() instead
 */
export declare function setObjectBurnOpacity(object: number | Object, opacity: number): void;
/**
 * p2 is usually the same as speed parameter
 *
 * Hash: 0x646564A3B7DF68F8 | Since: 1207
 *
 * @deprecated Use object.setObjectBurnSpeed() instead
 */
export declare function setObjectBurnSpeed(object: number | Object, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB7017DA4D498269F | Since: 1207
 *
 * @deprecated Use object.setObjectKickable() instead
 */
export declare function setObjectKickable(object: number | Object, kickable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x581EDBE56E8D62C9 | Since: 1207
 *
 * @deprecated Use object.setObjectTargettable2() instead
 */
export declare function setObjectTargettable2(object: number | Object, targettable: boolean): void;
/**
 * focus on objects like focus on peds, p1 is to enable/disable p2 is to enable/disable focus when you have a weapon out
 *
 * Hash: 0xA22712E8471AA08E | Since: 1207
 *
 * @deprecated Use object.setObjectTargettableFocus() instead
 */
export declare function setObjectTargettableFocus(object: number | Object, toggle: boolean, weaponLock: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x00EE08603EADEE92 | Since: 1207
 *
 * @deprecated Use object.setPickupCollectableOnMount() instead
 */
export declare function setPickupCollectableOnMount(object: number | Object): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xCB0360EFEFB2580D | Since: 1207
 *
 * @deprecated Use pad.clearControlLightEffect() instead
 */
export declare function clearControlLightEffect(control: number): void;
/**
 * Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
 *
 * Hash: 0xA0CEFCEA390AAB9B | Since: 1207
 *
 * @deprecated Use pad.clearControlShakeSuppressedId() instead
 */
export declare function clearControlShakeSuppressedId(control: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5F4B6931816E599B | Since: 1207
 *
 * @deprecated Use pad.disableAllControlActions() instead
 */
export declare function disableAllControlActions(control: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFE99B66D079CF6BC | Since: 1207
 *
 * @deprecated Use pad.disableControlAction() instead
 */
export declare function disableControlAction(control: number, action: number | string, disableRelatedActions: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x351220255D64C155 | Since: 1207
 *
 * @deprecated Use pad.enableControlAction() instead
 */
export declare function enableControlAction(control: number, action: number | string, enableRelatedActions: boolean): void;
/**
 * Returns time in ms since last input.
 *
 * Hash: 0xD7D22F5592AED8BA | Since: 1207
 *
 * @deprecated Use pad.getControlHowLongAgo() instead
 */
export declare function getControlHowLongAgo(control: number): number;
/**
 * No comment provided
 *
 * Hash: 0xEC3C9B8D5327B563 | Since: 1207
 *
 * @deprecated Use pad.getControlNormal() instead
 */
export declare function getControlNormal(control: number, action: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5B84D09CEC5209C5 | Since: 1207
 *
 * @deprecated Use pad.getControlUnboundNormal() instead
 */
export declare function getControlUnboundNormal(control: number, action: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD95E79E8686D2C27 | Since: 1207
 *
 * @deprecated Use pad.getControlValue() instead
 */
export declare function getControlValue(control: number, action: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x11E65974A982637C | Since: 1207
 *
 * @deprecated Use pad.getDisabledControlNormal() instead
 */
export declare function getDisabledControlNormal(control: number, action: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x4F8A26A890FD62FB | Since: 1207
 *
 * @deprecated Use pad.getDisabledControlUnboundNormal() instead
 */
export declare function getDisabledControlUnboundNormal(control: number, action: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x6CD79468A1E595C6 | Since: 1207
 *
 * @deprecated Use pad.haveControlsChanged() instead
 */
export declare function haveControlsChanged(control: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1CEA6BFDF248E5D9 | Since: 1207
 *
 * @deprecated Use pad.isControlEnabled() instead
 */
export declare function isControlEnabled(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x580417101DDB492F | Since: 1207
 *
 * @deprecated Use pad.isControlJustPressed() instead
 */
export declare function isControlJustPressed(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x50F940259D3841E6 | Since: 1207
 *
 * @deprecated Use pad.isControlJustReleased() instead
 */
export declare function isControlJustReleased(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF3A21BCD95725A4A | Since: 1207
 *
 * @deprecated Use pad.isControlPressed() instead
 */
export declare function isControlPressed(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x648EE3E7F38877DD | Since: 1207
 *
 * @deprecated Use pad.isControlReleased() instead
 */
export declare function isControlReleased(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x91AEF906BCA88877 | Since: 1207
 *
 * @deprecated Use pad.isDisabledControlJustPressed() instead
 */
export declare function isDisabledControlJustPressed(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x305C8DCD79DA8B0F | Since: 1207
 *
 * @deprecated Use pad.isDisabledControlJustReleased() instead
 */
export declare function isDisabledControlJustReleased(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE2587F8CBBD87B1D | Since: 1207
 *
 * @deprecated Use pad.isDisabledControlPressed() instead
 */
export declare function isDisabledControlPressed(control: number, action: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x77B612531280010D | Since: 1207
 *
 * @deprecated Use pad.isLookInverted() instead
 */
export declare function isLookInverted(): boolean;
/**
 * padIndex is not used
 *
 * Old name: _IS_USING_KEYBOARD
 *
 * Hash: 0xA571D46727E2B718 | Since: 1207
 *
 * @deprecated Use pad.isUsingKeyboardAndMouse() instead
 */
export declare function isUsingKeyboardAndMouse(control: number): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Old name: _SET_CONTROL_GROUP_COLOR
 *
 * Hash: 0x8290252FFF36ACB5 | Since: 1207
 *
 * @deprecated Use pad.setControlLightEffectColor() instead
 */
export declare function setControlLightEffectColor(control: number, red: number, green: number, blue: number): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xA45884DB10EC7EE3 | Since: 1207
 *
 * @deprecated Use pad.setControlLightEffectFlashingColor() instead
 */
export declare function setControlLightEffectFlashingColor(control: number, red: number, green: number, blue: number): void;
/**
 * Old name: SET_PAD_SHAKE
 *
 * Hash: 0x48B3886C1358D0D5 | Since: 1207
 *
 * @deprecated Use pad.setControlShake() instead
 */
export declare function setControlShake(control: number, duration: number, frequency: number): void;
/**
 * Old name: SET_PAD_SHAKE_SUPPRESSED_ID
 *
 * Hash: 0xF239400E16C23E08 | Since: 1207
 *
 * @deprecated Use pad.setControlShakeSuppressedId() instead
 */
export declare function setControlShakeSuppressedId(control: number, uniqueId: number): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x14D29BB12D47F68C | Since: 1207
 *
 * @deprecated Use pad.setControlTriggerShake() instead
 */
export declare function setControlTriggerShake(control: number, leftDuration: number, leftFrequency: number, rightDuration: number, rightFrequency: number): void;
/**
 * This is for simulating player input.
 * value is a float value from 0 - 1
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Old name: _SET_CONTROL_NORMAL
 *
 * Hash: 0xE8A25867FBA3B05E | Since: 1207
 *
 * @deprecated Use pad.setControlValueNextFrame() instead
 */
export declare function setControlValueNextFrame(control: number, action: number | string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEDE476E5EE29EDB1 | Since: 1207
 *
 * @deprecated Use pad.setInputExclusive() instead
 */
export declare function setInputExclusive(control: number, action: number | string): void;
/**
 * Old name: STOP_PAD_SHAKE
 *
 * Hash: 0x38C16A305E8CDC8D | Since: 1207
 *
 * @deprecated Use pad.stopControlShake() instead
 */
export declare function stopControlShake(control: number): void;
/**
 * _IS_R* - _IS_S*
 *
 * Hash: 0x1252C029FC8EBB4D | Since: 1207
 *
 * @deprecated Use pad._0x1252C029FC8EBB4D() instead
 */
export declare function _0x1252C029FC8EBB4D(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x43F35DDB2905D945 | Since: 1207
 *
 * @deprecated Use pad._0x43F35DDB2905D945() instead
 */
export declare function _0x43F35DDB2905D945(): any;
/**
 * No comment provided
 *
 * Hash: 0x52C68E92D6E23ADD | Since: 1311
 *
 * @deprecated Use pad._0x52C68E92D6E23ADD() instead
 */
export declare function _0x52C68E92D6E23ADD(): void;
/**
 * rumbleCurve: common_0/data/rumblecurves.meta
 *
 * Hash: 0x5F217BC1190503D8 | Since: 1207
 *
 * @deprecated Use pad._0x5F217BC1190503D8() instead
 */
export declare function _0x5F217BC1190503D8(rumbleCurve: string): void;
/**
 * No comment provided
 *
 * Hash: 0x709BA8C08C5C008D | Since: 1207
 *
 * @deprecated Use pad._0x709BA8C08C5C008D() instead
 */
export declare function _0x709BA8C08C5C008D(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD629C1C4F501C80 | Since: 1207
 *
 * @deprecated Use pad._0xBD629C1C4F501C80() instead
 */
export declare function _0xBD629C1C4F501C80(): any;
/**
 * Gets the current control context. See: _SET_CONTROL_CONTEXT
 *
 * Hash: 0xDDCEB0F26C89C00F | Since: 1207
 *
 * @deprecated Use pad.getCurrentControlContext() instead
 */
export declare function getCurrentControlContext(control: number): number;
/**
 * No comment provided
 *
 * Hash: 0x771DFCB24D19C2F6 | Since: 1207
 *
 * @deprecated Use pad.getDisabledControlHowLongAgo() instead
 */
export declare function getDisabledControlHowLongAgo(control: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBC0884BC590951C7 | Since: 1207
 *
 * @deprecated Use pad.isControlActionValid() instead
 */
export declare function isControlActionValid(action: number | string, control: number): boolean;
/**
 * Sets the current control context. Must be called every frame.
 *
 * context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
 * For more information, see common:/data/control/settings.meta
 * https://github.com/femga/rdr3_discoveries/tree/master/Controls
 *
 * Hash: 0x2804658EB7D8A50B | Since: 1207
 *
 * @deprecated Use pad.setControlContext() instead
 */
export declare function setControlContext(control: number, context: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xFCD5C8E06E502F5A | Since: 1207
 *
 * @deprecated Use pathfind.addNavmeshBlockingObject() instead
 */
export declare function addNavmeshBlockingObject(): any;
/**
 * No comment provided
 *
 * Hash: 0x387EAD7EE42F6685 | Since: 1207
 *
 * @deprecated Use pathfind.addNavmeshRequiredRegion() instead
 */
export declare function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF7B79A50B905A30D | Since: 1207
 *
 * @deprecated Use pathfind.areNodesLoadedForArea() instead
 */
export declare function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EAEB0DB4B132399 | Since: 1207
 *
 * @deprecated Use pathfind.doesNavmeshBlockingObjectExist() instead
 */
export declare function doesNavmeshBlockingObjectExist(): boolean;
/**
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 *
 * Hash: 0x336511A34F2E5185 | Since: 1207
 *
 * @deprecated Use pathfind.getApproxFloorForPoint() instead
 */
export declare function getApproxFloorForPoint(x: number, y: number): number;
/**
 * No comment provided
 *
 * Hash: 0x132F52BBA570FE92 | Since: 1207
 *
 * @deprecated Use pathfind.getClosestRoad() instead
 */
export declare function getClosestRoad(pos: Vector3): any;
/**
 * No comment provided
 *
 * Hash: 0x240A18690AE96513 | Since: 1207
 *
 * @deprecated Use pathfind.getClosestVehicleNode() instead
 */
export declare function getClosestVehicleNode(pos: Vector3, outPosition: Vector3, nodeType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x23CFFD4CCB243354 | Since: 1207
 *
 * @deprecated Use pathfind.getClosestVehicleNodeWithHeading() instead
 */
export declare function getClosestVehicleNodeWithHeading(pos: Vector3, outPosition: Vector3, outHeading: number, nodeType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x869DAACBBE9FA006 | Since: 1207
 *
 * @deprecated Use pathfind.getGpsBlipRouteFound() instead
 */
export declare function getGpsBlipRouteFound(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBBB45C3CF5C8AA85 | Since: 1207
 *
 * @deprecated Use pathfind.getGpsBlipRouteLength() instead
 */
export declare function getGpsBlipRouteLength(): number;
/**
 * No comment provided
 *
 * Hash: 0x5A6D8DF6FBC5D0C4 | Since: 1207
 *
 * @deprecated Use pathfind.getNthClosestVehicleNode() instead
 */
export declare function getNthClosestVehicleNode(pos: Vector3, nthClosest: number, outPosition: Vector3, unknown1: number, unknown2: number, unknown3: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2FAC235A6062F14A | Since: 1207
 *
 * @deprecated Use pathfind.getNthClosestVehicleNodeFavourDirection() instead
 */
export declare function getNthClosestVehicleNodeFavourDirection(pos: Vector3, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, outPosition: Vector3, outHeading: number, nodetype: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x116443008E5CEFC3 | Since: 1207
 *
 * @deprecated Use pathfind.getNthClosestVehicleNodeId() instead
 */
export declare function getNthClosestVehicleNodeId(pos: Vector3, nth: number, nodetype: number): number;
/**
 * Returns the nth closest vehicle node with a heading to a coord
 *
 * Hash: 0x4114EAA8A7F7766D | Since: 1207
 *
 * @deprecated Use pathfind.getNthClosestVehicleNodeIdWithHeading() instead
 */
export declare function getNthClosestVehicleNodeIdWithHeading(pos: Vector3, nthClosest: number, returnHeading: number, returnNumLanes: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;
/**
 * No comment provided
 *
 * Hash: 0x591B40D4390DB54A | Since: 1207
 *
 * @deprecated Use pathfind.getNthClosestVehicleNodeWithHeading() instead
 */
export declare function getNthClosestVehicleNodeWithHeading(pos: Vector3, nthClosest: number, outPosition: Vector3, heading: number, unknown1: any, unknown2: number, unknown3: number, unknown4: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01708E8DD3FF8C65 | Since: 1207
 *
 * @deprecated Use pathfind.getNumNavmeshesExistingInArea() instead
 */
export declare function getNumNavmeshesExistingInArea(): number;
/**
 * No comment provided
 *
 * Hash: 0x93E0DB8440B73A7D | Since: 1207
 *
 * @deprecated Use pathfind.getRandomVehicleNode() instead
 */
export declare function getRandomVehicleNode(pos: Vector3, radius: number, minLanes: number, avoidDeadEnds: boolean, avoidHighways: boolean, outPosition: Vector3, nodeId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB61C8E878A4199CA | Since: 1207
 *
 * @deprecated Use pathfind.getSafeCoordForPed() instead
 */
export declare function getSafeCoordForPed(pos: Vector3, onGround: boolean, outPosition: Vector3, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x28533DBDDF7C2C97 | Since: 1207
 *
 * @deprecated Use pathfind.getVehicleNodeIsSwitchedOff() instead
 */
export declare function getVehicleNodeIsSwitchedOff(nodeID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8E8D72FF24DEE1FB | Since: 1207
 *
 * @deprecated Use pathfind.getVehicleNodePosition() instead
 */
export declare function getVehicleNodePosition(nodeId: number, outPosition: Vector3): void;
/**
 * Returns whether navmesh for the region is loaded.
 *
 * Hash: 0xF813C7E63F9062A5 | Since: 1207
 *
 * @deprecated Use pathfind.isNavmeshLoadedInArea() instead
 */
export declare function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Gets a value indicating whether the specified position is on a road.
 *
 * Hash: 0x125BF4ABFC536B09 | Since: 1207
 *
 * @deprecated Use pathfind.isPointOnRoad() instead
 */
export declare function isPointOnRoad(pos: Vector3, vehicle: number | Vehicle): boolean;
/**
 * Returns true if the id is non zero.
 *
 * Hash: 0x5829A02AF4F0B3CB | Since: 1207
 *
 * @deprecated Use pathfind.isVehicleNodeIdValid() instead
 */
export declare function isVehicleNodeIdValid(vehicleNodeId: number): boolean;
/**
 * Starts a nav mesh query for a path between coordinates with a given ped and returns a handle to be validated by _NAVMESH_REQUESTED_QUERY_STATUS and then _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
 *
 * Only bit flag values used in scripts are 0, 23, and 29. 23 is used with dogs and horses. 29 with legendary animals.
 *
 * Hash: 0x348F211CA2404039 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestPath() instead
 */
export declare function navmeshRequestPath(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, bitFlag: number): number;
/**
 * No comment provided
 *
 * Hash: 0x46399A7895957C0E | Since: 1207
 *
 * @deprecated Use pathfind.removeNavmeshBlockingObject() instead
 */
export declare function removeNavmeshBlockingObject(): void;
/**
 * Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
 *
 * Hash: 0x07FB139B592FA687 | Since: 1207
 *
 * @deprecated Use pathfind.requestPathNodesInAreaThisFrame() instead
 */
export declare function requestPathNodesInAreaThisFrame(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD17672447692478E | Since: 1207
 *
 * @deprecated Use pathfind.resetRoadsInVolume() instead
 */
export declare function resetRoadsInVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B919E1FB47CC4E0 | Since: 1207
 *
 * @deprecated Use pathfind.setAmbientPedRangeMultiplierThisFrame() instead
 */
export declare function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x72751156E7678833 | Since: 1207
 *
 * @deprecated Use pathfind.setIgnoreNoGpsFlag() instead
 */
export declare function setIgnoreNoGpsFlag(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE04B48F2CC926253 | Since: 1207
 *
 * @deprecated Use pathfind.setPedPathsBackToOriginal() instead
 */
export declare function setPedPathsBackToOriginal(): void;
/**
 * No comment provided
 *
 * Hash: 0x34F060F4BF92E018 | Since: 1207
 *
 * @deprecated Use pathfind.setPedPathsInArea() instead
 */
export declare function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unknown: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1EE7063B80FFC77C | Since: 1207
 *
 * @deprecated Use pathfind.setRoadsBackToOriginal() instead
 */
export declare function setRoadsBackToOriginal(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0027501B9F3B407E | Since: 1207
 *
 * @deprecated Use pathfind.setRoadsBackToOriginalInAngledArea() instead
 */
export declare function setRoadsBackToOriginalInAngledArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x1A5AA1208AF5DB59 | Since: 1207
 *
 * @deprecated Use pathfind.setRoadsInAngledArea() instead
 */
export declare function setRoadsInAngledArea(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF1A602B5BA52FEE | Since: 1207
 *
 * @deprecated Use pathfind.setRoadsInArea() instead
 */
export declare function setRoadsInArea(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC1799FAFD2FDF52B | Since: 1207
 *
 * @deprecated Use pathfind.setRoadsInVolume() instead
 */
export declare function setRoadsInVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2DD5F78D73B24172 | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteGetEta() instead
 */
export declare function simulatedRouteGetEta(): number;
/**
 * No comment provided
 *
 * Hash: 0x240915043CB799D7 | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteIsLoaded() instead
 */
export declare function simulatedRouteIsLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA1A3DE1C215C7394 | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteTravelToPoint() instead
 */
export declare function simulatedRouteTravelToPoint(): void;
/**
 * No comment provided
 *
 * Hash: 0x264E9A5CD78C338F | Since: 1207
 *
 * @deprecated Use pathfind._0x264E9A5CD78C338F() instead
 */
export declare function _0x264E9A5CD78C338F(): void;
/**
 * No comment provided
 *
 * Hash: 0x34C9AF25649172D0 | Since: 1207
 *
 * @deprecated Use pathfind._0x34C9AF25649172D0() instead
 */
export declare function _0x34C9AF25649172D0(): void;
/**
 * No comment provided
 *
 * Hash: 0x4358BCF14C91761C | Since: 1207
 *
 * @deprecated Use pathfind._0x4358BCF14C91761C() instead
 */
export declare function _0x4358BCF14C91761C(): void;
/**
 * No comment provided
 *
 * Hash: 0x4BDEBEA5702B97A9 | Since: 1207
 *
 * @deprecated Use pathfind._0x4BDEBEA5702B97A9() instead
 */
export declare function _0x4BDEBEA5702B97A9(): void;
/**
 * No comment provided
 *
 * Hash: 0x54F4D7B6670FBB5A | Since: 1207
 *
 * @deprecated Use pathfind._0x54F4D7B6670FBB5A() instead
 */
export declare function _0x54F4D7B6670FBB5A(): any;
/**
 * No comment provided
 *
 * Hash: 0x5A3B54ADDF5472A3 | Since: 1207
 *
 * @deprecated Use pathfind._0x5A3B54ADDF5472A3() instead
 */
export declare function _0x5A3B54ADDF5472A3(): number;
/**
 * No comment provided
 *
 * Hash: 0x5A4E1A41E3A02AD0 | Since: 1207
 *
 * @deprecated Use pathfind._0x5A4E1A41E3A02AD0() instead
 */
export declare function _0x5A4E1A41E3A02AD0(): void;
/**
 * No comment provided
 *
 * Hash: 0x665B21666351CB37 | Since: 1207
 *
 * @deprecated Use pathfind._0x665B21666351CB37() instead
 */
export declare function _0x665B21666351CB37(): any;
/**
 * No comment provided
 *
 * Hash: 0x6C3F12ECEB6D2E2A | Since: 1207
 *
 * @deprecated Use pathfind._0x6C3F12ECEB6D2E2A() instead
 */
export declare function _0x6C3F12ECEB6D2E2A(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6DAD6630AE4A74CB | Since: 1207
 *
 * @deprecated Use pathfind._0x6DAD6630AE4A74CB() instead
 */
export declare function _0x6DAD6630AE4A74CB(): void;
/**
 * No comment provided
 *
 * Hash: 0x869A7015BD4606E9 | Since: 1207
 *
 * @deprecated Use pathfind._0x869A7015BD4606E9() instead
 */
export declare function _0x869A7015BD4606E9(): void;
/**
 * No comment provided
 *
 * Hash: 0xA33914B00CA55756 | Since: 1207
 *
 * @deprecated Use pathfind._0xA33914B00CA55756() instead
 */
export declare function _0xA33914B00CA55756(): any;
/**
 * No comment provided
 *
 * Hash: 0xAFE2AE66F6251C66 | Since: 1207
 *
 * @deprecated Use pathfind._0xAFE2AE66F6251C66() instead
 */
export declare function _0xAFE2AE66F6251C66(xMin: number, yMin: number, zMin: number, xMax: number, yMax: number, zMax: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB03944057FD735BA | Since: 1207
 *
 * @deprecated Use pathfind._0xB03944057FD735BA() instead
 */
export declare function _0xB03944057FD735BA(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA27A86CAA4E98ED | Since: 1207
 *
 * @deprecated Use pathfind._0xCA27A86CAA4E98ED() instead
 */
export declare function _0xCA27A86CAA4E98ED(): any;
/**
 * No comment provided
 *
 * Hash: 0xCF213A5FC3ABFC08 | Since: 1207
 *
 * @deprecated Use pathfind._0xCF213A5FC3ABFC08() instead
 */
export declare function _0xCF213A5FC3ABFC08(): void;
/**
 * No comment provided
 *
 * Hash: 0xE5EF9DE716FF737E | Since: 1207
 *
 * @deprecated Use pathfind._0xE5EF9DE716FF737E() instead
 */
export declare function _0xE5EF9DE716FF737E(): void;
/**
 * No comment provided
 *
 * Hash: 0xEFC535C9FAF563B3 | Since: 1207
 *
 * @deprecated Use pathfind._0xEFC535C9FAF563B3() instead
 */
export declare function _0xEFC535C9FAF563B3(): any;
/**
 * GPS disabled zone: p1 = 0
 * Clearing GPS disabled zone: p1 = 1
 *
 * Hash: 0xF2A2177AC848B3A8 | Since: 1207
 *
 * @deprecated Use pathfind._0xF2A2177AC848B3A8() instead
 */
export declare function _0xF2A2177AC848B3A8(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x19C7567D2F2287D6 | Since: 1207
 *
 * @deprecated Use pathfind.addNavmeshBlockingVolume() instead
 */
export declare function addNavmeshBlockingVolume(volume: number, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE0EA444735C1368 | Since: 1207
 *
 * @deprecated Use pathfind.doesNavmeshBlockingVolumeExist() instead
 */
export declare function doesNavmeshBlockingVolumeExist(volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA3791B915B8B84C6 | Since: 1207
 *
 * @deprecated Use pathfind.getSpawnDataForRoadNode() instead
 */
export declare function getSpawnDataForRoadNode(nodeId: number, pos: Vector3, outCoords: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7C334FF4D9215912 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshActivateSwap() instead
 */
export declare function navmeshActivateSwap(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x44026E3DB3CED602 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshAssignNavmeshToVehicle() instead
 */
export declare function navmeshAssignNavmeshToVehicle(vehicle: number | Vehicle, navMeshName: string): boolean;
/**
 * Called in scripts after finished with requested pathes. Immediately resets all values connected to the path handle except query status, which changes from 1 to 2 before eventually becoming fully invalidated to 0.
 *
 * Hash: 0x661BB1E1FF77742D | Since: 1207
 *
 * @deprecated Use pathfind.navmeshClearRequestedPath() instead
 */
export declare function navmeshClearRequestedPath(path: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x527B97C203BB8606 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshDeactivateSwap() instead
 */
export declare function navmeshDeactivateSwap(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x495CFAB2924237C7 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshDoesSwapExist() instead
 */
export declare function navmeshDoesSwapExist(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AC0944C156E5F44 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshIsSwapActive() instead
 */
export declare function navmeshIsSwapActive(name: string): boolean;
/**
 * Returns the number of waypoints for a requested path (NAVMESH_REQUEST_PATH) if the query is completed (_NAVMESH_REQUESTED_QUERY_STATUS). For use with _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 *
 * Hash: 0xD470725E0703D22F | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestedPathNumWaypoints() instead
 */
export declare function navmeshRequestedPathNumWaypoints(path: number): number;
/**
 * Returns true if a path of waypoints was found. Waypoints can be retrieved with _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS and _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
 *
 * Hash: 0x8800776E410EB669 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestedPathWaypointsFound() instead
 */
export declare function navmeshRequestedPathWaypointsFound(path: number): boolean;
/**
 * Returns a bit flag for seemingly terrain within the waypoints in the path. Checked against bit value 2 to match water in the path, seems to always contain at least 1 though regardless of location/ped.
 *
 * Hash: 0xF61CFEDEAB627BFA | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestedPathWaypointsTerrain() instead
 */
export declare function navmeshRequestedPathWaypointsTerrain(path: number): number;
/**
 * Returns a vector3 waypoint at the specified index for a path. Use _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS to get available indexes.
 *
 * Hash: 0x430F8319AE56C8A9 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestedPathWaypointByIndex() instead
 */
export declare function navmeshRequestedPathWaypointByIndex(path: number, waypointIndex: number): Vector3;
/**
 * Returns eNavMeshQueryStatus
 * enum eNavMeshQueryStatus
 * {
 * QS_NOT_FOUND,
 * QS_COMPLETE,
 * QS_PENDING
 * };
 *
 * It appears that the pending state of 2 is at least also used when cleaning up a request (_NAVMESH_CLEAR_REQUESTED_PATH) or if a request never completes. Eventually queries are invalidated and return 0.
 *
 * Old name: _NAVMESH_QUERY_STATUS
 *
 * Hash: 0x3A0F82F6EE2291C8 | Since: 1207
 *
 * @deprecated Use pathfind.navmeshRequestedQueryStatus() instead
 */
export declare function navmeshRequestedQueryStatus(path: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2C87C3E1C7B96EE2 | Since: 1207
 *
 * @deprecated Use pathfind.removeNavmeshBlockingVolume() instead
 */
export declare function removeNavmeshBlockingVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFD5BB35AAB83FD48 | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteCreate() instead
 */
export declare function simulatedRouteCreate(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): any;
/**
 * No comment provided
 *
 * Hash: 0x4907D0E4FB26EE65 | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteDelete() instead
 */
export declare function simulatedRouteDelete(): void;
/**
 * No comment provided
 *
 * Hash: 0x65A8196B8D7F5E0B | Since: 1207
 *
 * @deprecated Use pathfind.simulatedRouteExists() instead
 */
export declare function simulatedRouteExists(): boolean;
/**
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 *
 * Hash: 0x5BA652A0CD14DF2F | Since: 1207
 *
 * @deprecated Use ped.addArmourToPed() instead
 */
export declare function addArmourToPed(ped: number | Ped, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4E23CD07BD161E06 | Since: 1207
 *
 * @deprecated Use ped.addCustomFormationLocation() instead
 */
export declare function addCustomFormationLocation(groupId: number, pos: Vector3, position: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB05945C1E9E60D91 | Since: 1207
 *
 * @deprecated Use ped.addFormationLocation() instead
 */
export declare function addFormationLocation(groupId: number): boolean;
/**
 * The hash of the created relationship group is output in the second parameter.
 *
 * Hash: 0xF372BC22FCB88606 | Since: 1207
 *
 * @deprecated Use ped.addRelationshipGroup() instead
 */
export declare function addRelationshipGroup(name: string, groupHash: number | string): boolean;
/**
 * blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
 *
 * Hash: 0x1B5C85C612E5256E | Since: 1207
 *
 * @deprecated Use ped.addScenarioBlockingArea() instead
 */
export declare function addScenarioBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, blockingFlags: number): number;
/**
 * damages a ped with the given amount
 *
 * Hash: 0x697157CED63F18D4 | Since: 1207
 *
 * @deprecated Use ped.applyDamageToPed() instead
 */
export declare function applyDamageToPed(ped: number | Ped, damageAmount: number, damageArmour: boolean, boneId: number, pedKiller: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEF0D582CBF2D9B0F | Since: 1207
 *
 * @deprecated Use ped.applyPedBloodSpecific() instead
 */
export declare function applyPedBloodSpecific(ped: number | Ped): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
 *
 * Hash: 0x46DF918788CB093F | Since: 1207
 *
 * @deprecated Use ped.applyPedDamagePack() instead
 */
export declare function applyPedDamagePack(ped: number | Ped, damagePack: string, damage: number, mult: number): void;
/**
 * No comment provided
 *
 * Hash: 0x51AC07A44D4F5B8A | Since: 1207
 *
 * @deprecated Use ped.canKnockPedOffVehicle() instead
 */
export declare function canKnockPedOffVehicle(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2D64376CF437363E | Since: 1207
 *
 * @deprecated Use ped.canPedBeMounted() instead
 */
export declare function canPedBeMounted(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEAD42DE3610D0721 | Since: 1207
 *
 * @deprecated Use ped.canPedInCombatSeeTarget() instead
 */
export declare function canPedInCombatSeeTarget(ped: number | Ped, target: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x128F79EDCECE4FD5 | Since: 1207
 *
 * @deprecated Use ped.canPedRagdoll() instead
 */
export declare function canPedRagdoll(ped: number | Ped): boolean;
/**
 * Returns:
 * 0 - CTR_CANNOT_TARGET
 * 1 - CTR_CAN_TARGET
 * 2 - CTR_NOT_SURE_YET
 *
 * Hash: 0x7F9B9791D4CB71F6 | Since: 1207
 *
 * @deprecated Use ped.canPedSeeEntity() instead
 */
export declare function canPedSeeEntity(ped: number | Ped, targetEntity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x9D9473CB82D83A30 | Since: 1207
 *
 * @deprecated Use ped.canPedSeePedCached() instead
 */
export declare function canPedSeePedCached(ped: number | Ped, targetPed: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x726256CC1EEB182F | Since: 1207
 *
 * @deprecated Use ped.clearFacialIdleAnimOverride() instead
 */
export declare function clearFacialIdleAnimOverride(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8FE22675A5A45817 | Since: 1207
 *
 * @deprecated Use ped.clearPedBloodDamage() instead
 */
export declare function clearPedBloodDamage(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x56E3B78C5408D9F4 | Since: 1207
 *
 * @deprecated Use ped.clearPedBloodDamageByZone() instead
 */
export declare function clearPedBloodDamageByZone(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x523C79AEEFCC4A2A | Since: 1207
 *
 * @deprecated Use ped.clearPedDamageDecalByZone() instead
 */
export declare function clearPedDamageDecalByZone(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x0E5173C163976E38 | Since: 1207
 *
 * @deprecated Use ped.clearPedDecorations() instead
 */
export declare function clearPedDecorations(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6585D955A68452A5 | Since: 1207
 *
 * @deprecated Use ped.clearPedEnvDirt() instead
 */
export declare function clearPedEnvDirt(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8EF6B7AC68E2F01B | Since: 1207
 *
 * @deprecated Use ped.clearPedLastDamageBone() instead
 */
export declare function clearPedLastDamageBone(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2E05208086BA0651 | Since: 1207
 *
 * @deprecated Use ped.clearPedNonCreationArea() instead
 */
export declare function clearPedNonCreationArea(): void;
/**
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 *
 * Hash: 0x9C720776DAA43E7E | Since: 1207
 *
 * @deprecated Use ped.clearPedWetness() instead
 */
export declare function clearPedWetness(ped: number | Ped): void;
/**
 * flags: see SET_RAGDOLL_BLOCKING_FLAGS
 *
 * Hash: 0xD86D101FCFD00A4B | Since: 1207
 *
 * @deprecated Use ped.clearRagdollBlockingFlags() instead
 */
export declare function clearRagdollBlockingFlags(ped: number | Ped, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5E29243FB56FC6D4 | Since: 1207
 *
 * @deprecated Use ped.clearRelationshipBetweenGroups() instead
 */
export declare function clearRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xEF29A16337FACADB | Since: 1207
 *
 * @deprecated Use ped.clonePed() instead
 */
export declare function clonePed(ped: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
/**
 * Copies ped's components and props to targetPed.
 * Can be used to clear anything from a ped by cloning it, including bullet holes.
 *
 * Hash: 0xE952D6431689AD9A | Since: 1207
 *
 * @deprecated Use ped.clonePedToTarget() instead
 */
export declare function clonePedToTarget(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9E7738B291706746 | Since: 1207
 *
 * @deprecated Use ped.computeSatchelItemForPedDamage() instead
 */
export declare function computeSatchelItemForPedDamage(pedAttached: number | Ped, damageCleanliness: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5407B7288D0478B7 | Since: 1207
 *
 * @deprecated Use ped.countPedsInCombatWithTarget() instead
 */
export declare function countPedsInCombatWithTarget(ped: number | Ped, flag: number): number;
/**
 * No comment provided
 *
 * Hash: 0x336B3D200AB007CB | Since: 1207
 *
 * @deprecated Use ped.countPedsInCombatWithTargetWithinRadius() instead
 */
export declare function countPedsInCombatWithTargetWithinRadius(ped: number | Ped, pos: Vector3, radius: number, flag: number): number;
/**
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 *
 * The parameter is unused.
 *
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 *
 * Hash: 0x90370EBE0FEE1A3D | Since: 1207
 *
 * @deprecated Use ped.createGroup() instead
 */
export declare function createGroup(taskAllocator: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD49F9B0955C367DE | Since: 1207
 *
 * @deprecated Use ped.createPed() instead
 */
export declare function createPed(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
/**
 * seatIndex:
 * enum eVehicleSeat
 * {
 * VS_ANY_PASSENGER = -2,
 * VS_DRIVER,
 * VS_FRONT_RIGHT,
 * VS_BACK_LEFT,
 * VS_BACK_RIGHT,
 * VS_EXTRA_LEFT_1,
 * VS_EXTRA_RIGHT_1,
 * VS_EXTRA_LEFT_2,
 * VS_EXTRA_RIGHT_2,
 * VS_EXTRA_LEFT_3,
 * VS_EXTRA_RIGHT_3,
 * VS_NUM_SEATS
 * };
 *
 * Hash: 0x7DD959874C1FD534 | Since: 1207
 *
 * @deprecated Use ped.createPedInsideVehicle() instead
 */
export declare function createPedInsideVehicle(vehicle: number | Vehicle, modelHash: number | string, seatIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF89AA2BD01FC06B7 | Since: 1207
 *
 * @deprecated Use ped.createPedOnMount() instead
 */
export declare function createPedOnMount(mount: number | Ped, modelHash: number | string, index: number): number;
/**
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0xCC0EF140F99365C5 | Since: 1207
 *
 * @deprecated Use ped.deletePed() instead
 */
export declare function deletePed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xED00D72F81CF7278 | Since: 1207
 *
 * @deprecated Use ped.detachCarriableEntity() instead
 */
export declare function detachCarriableEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x733C87D4CE22BEA2 | Since: 1207
 *
 * @deprecated Use ped.disablePedInjuredOnGroundBehaviour() instead
 */
export declare function disablePedInjuredOnGroundBehaviour(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7C6B0C22F9F40BBE | Since: 1207
 *
 * @deprecated Use ped.doesGroupExist() instead
 */
export declare function doesGroupExist(groupId: number): boolean;
/**
 * Forces the ped to fall back and kills it.
 *
 * It doesn't really explode the ped's head but it kills the ped
 *
 * Hash: 0x2D05CED3A38D0F3A | Since: 1207
 *
 * @deprecated Use ped.explodePedHead() instead
 */
export declare function explodePedHead(ped: number | Ped, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x7043D0681285BA2D | Since: 1207
 *
 * @deprecated Use ped.fadeAndDestroyPed() instead
 */
export declare function fadeAndDestroyPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB5ACE8B23A438EC0 | Since: 1207
 *
 * @deprecated Use ped.findAllAttachedCarriableEntities() instead
 */
export declare function findAllAttachedCarriableEntities(ped: number | Ped, itemset: any): void;
/**
 * Old name: _FREEZE_PED_CAMERA_ROTATION
 *
 * Hash: 0xFF287323B0E2C69A | Since: 1207
 *
 * @deprecated Use ped.forceAllHeadingValuesToAlign() instead
 */
export declare function forceAllHeadingValuesToAlign(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2208438012482A1A | Since: 1207
 *
 * @deprecated Use ped.forcePedAiAndAnimationUpdate() instead
 */
export declare function forcePedAiAndAnimationUpdate(ped: number | Ped): void;
/**
 * motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CPedMotionStates__eMotionState
 *
 * Hash: 0xF28965D04F570DCA | Since: 1207
 *
 * @deprecated Use ped.forcePedMotionState() instead
 */
export declare function forcePedMotionState(ped: number | Ped, motionStateHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE22B26DD764C040 | Since: 1207
 *
 * @deprecated Use ped.getAnimInitialOffsetPosition() instead
 */
export declare function getAnimInitialOffsetPosition(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x4B805E6046EE9E47 | Since: 1207
 *
 * @deprecated Use ped.getAnimInitialOffsetRotation() instead
 */
export declare function getAnimInitialOffsetRotation(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x608BC6A6AACD5036 | Since: 1207
 *
 * @deprecated Use ped.getCarriedAttachedInfoForSlot() instead
 */
export declare function getCarriedAttachedInfoForSlot(): any;
/**
 * Gets the closest ped in a radius.
 *
 * Hash: 0xC33AB876A77F8164 | Since: 1207
 *
 * @deprecated Use ped.getClosestPed() instead
 */
export declare function getClosestPed(pos: Vector3, radius: number, outPed: number | Ped, pedType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52DFF8A10508090A | Since: 1207
 *
 * @deprecated Use ped.getCombatFloat() instead
 */
export declare function getCombatFloat(ped: number | Ped, combatType: number): number;
/**
 * No comment provided
 *
 * Hash: 0xCD66FEA29400A0B5 | Since: 1207
 *
 * @deprecated Use ped.getCurrentTargetForPed() instead
 */
export declare function getCurrentTargetForPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xCD5003B097200F36 | Since: 1207
 *
 * @deprecated Use ped.getDeadPedPickupCoords() instead
 */
export declare function getDeadPedPickupCoords(ped: number | Ped): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x8DE69FE35CA09A45 | Since: 1207
 *
 * @deprecated Use ped.getGroupSize() instead
 */
export declare function getGroupSize(groupId: number, hasLeader: boolean, numberOfFollowers: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA454D234E45BB6E5 | Since: 1207
 *
 * @deprecated Use ped.getIsPedRespondingToNegativeInteraction() instead
 */
export declare function getIsPedRespondingToNegativeInteraction(ped: number | Ped, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9337183FDA2E9035 | Since: 1207
 *
 * @deprecated Use ped.getIsPedRespondingToPositiveInteraction() instead
 */
export declare function getIsPedRespondingToPositiveInteraction(ped: number | Ped, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5486A79D9FBD342D | Since: 1207
 *
 * @deprecated Use ped.getJackTarget() instead
 */
export declare function getJackTarget(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x14169FA823679E41 | Since: 1207
 *
 * @deprecated Use ped.getLootingPickupTargetEntity() instead
 */
export declare function getLootingPickupTargetEntity(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x18A3E9EE1297FD39 | Since: 1207
 *
 * @deprecated Use ped.getMeleeTargetForPed() instead
 */
export declare function getMeleeTargetForPed(ped: number | Ped): number;
/**
 * This is a way to get what drawables a ped has equipped
 * Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
 * Note: this works with non shop components, direct .ydd files.
 *
 * Hash: 0xA9C28516A6DC9D56 | Since: 1207
 *
 * @deprecated Use ped.getMetaPedAssetGuids() instead
 */
export declare function getMetaPedAssetGuids(ped: number | Ped, index: number, drawable: number | string, albedo: number | string, normal: number | string, material: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE7998FEC53A33BBE | Since: 1207
 *
 * @deprecated Use ped.getMetaPedAssetTint() instead
 */
export declare function getMetaPedAssetTint(ped: number | Ped, index: number, pallete: number | string, tint0: number, tint1: number, tint2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE7E11B8DCBED1058 | Since: 1207
 *
 * @deprecated Use ped.getMount() instead
 */
export declare function getMount(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x10C70A515BC03707 | Since: 1207
 *
 * @deprecated Use ped.getNumMetaPedOutfits() instead
 */
export declare function getNumMetaPedOutfits(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x9B128DC36C1E04CF | Since: 1207
 *
 * @deprecated Use ped.getPedsJacker() instead
 */
export declare function getPedsJacker(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x37F4AD56ECBC0CD6 | Since: 1207
 *
 * @deprecated Use ped.getPedAccuracy() instead
 */
export declare function getPedAccuracy(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x5CCE68DBD5FE93EC | Since: 1207
 *
 * @deprecated Use ped.getPedAsGroupLeader() instead
 */
export declare function getPedAsGroupLeader(groupID: number): number;
/**
 * No comment provided
 *
 * Hash: 0x51455483CF23ED97 | Since: 1207
 *
 * @deprecated Use ped.getPedAsGroupMember() instead
 */
export declare function getPedAsGroupMember(groupID: number, memberNumber: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4912DFE492DB98CD | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardScriptBool() instead
 */
export declare function getPedBlackboardScriptBool(ped: number | Ped, variableName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA29FD00D45311EB7 | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardScriptFloat() instead
 */
export declare function getPedBlackboardScriptFloat(ped: number | Ped, variableName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xB71B91B398F8F067 | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardScriptInt() instead
 */
export declare function getPedBlackboardScriptInt(ped: number | Ped, variableName: string): number;
/**
 * Gets the position of the specified bone of the specified ped.
 *
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 *
 * Hash: 0x17C07FC640E86B4E | Since: 1207
 *
 * @deprecated Use ped.getPedBoneCoords() instead
 */
export declare function getPedBoneCoords(ped: number | Ped, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * no bone = -1
 *
 * Hash: 0x3F428D08BE5AAE31 | Since: 1207
 *
 * @deprecated Use ped.getPedBoneIndex() instead
 */
export declare function getPedBoneIndex(ped: number | Ped, boneId: number): number;
/**
 * Returns the hash of the weapon/model/object that killed the ped.
 *
 * Hash: 0x16FFE42AB2D2DC59 | Since: 1207
 *
 * @deprecated Use ped.getPedCauseOfDeath() instead
 */
export declare function getPedCauseOfDeath(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xDEA92412FCAEB3F5 | Since: 1207
 *
 * @deprecated Use ped.getPedCombatMovement() instead
 */
export declare function getPedCombatMovement(ped: number | Ped): number;
/**
 * flagId: see SET_PED_CONFIG_FLAG
 *
 * Hash: 0x7EE53118C892B513 | Since: 1207
 *
 * @deprecated Use ped.getPedConfigFlag() instead
 */
export declare function getPedConfigFlag(ped: number | Ped, flagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD5FE956C70FF370B | Since: 1207
 *
 * @deprecated Use ped.getPedCrouchMovement() instead
 */
export declare function getPedCrouchMovement(ped: number | Ped): boolean;
/**
 * Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
 *
 * Hash: 0xF60165E1D2C5370B | Since: 1207
 *
 * @deprecated Use ped.getPedCurrentMoveBlendRatio() instead
 */
export declare function getPedCurrentMoveBlendRatio(ped: number | Ped, speedX: number, speedY: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3C06B8786DD94CD1 | Since: 1207
 *
 * @deprecated Use ped.getPedDefensiveAreaPosition() instead
 */
export declare function getPedDefensiveAreaPosition(ped: number | Ped): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x2311F15D971AA680 | Since: 1207
 *
 * @deprecated Use ped.getPedGrappleState() instead
 */
export declare function getPedGrappleState(ped: number | Ped): number;
/**
 * Returns the groupId of which the specified ped is a member of.
 *
 * Hash: 0xF162E133B4E7A675 | Since: 1207
 *
 * @deprecated Use ped.getPedGroupIndex() instead
 */
export declare function getPedGroupIndex(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x3BDFCF25B58B0415 | Since: 1207
 *
 * @deprecated Use ped.getPedIsBeingGrappled() instead
 */
export declare function getPedIsBeingGrappled(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC48A9EB0D499B3E5 | Since: 1207
 *
 * @deprecated Use ped.getPedIsDoingCombatRoll() instead
 */
export declare function getPedIsDoingCombatRoll(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E99E3BF11BB6367 | Since: 1207
 *
 * @deprecated Use ped.getPedIsGrappling() instead
 */
export declare function getPedIsGrappling(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD75960F6BD9EA49C | Since: 1207
 *
 * @deprecated Use ped.getPedLastDamageBone() instead
 */
export declare function getPedLastDamageBone(ped: number | Ped, outBone: number): boolean;
/**
 * enum ePedLootStatus
 * {
 * PLS_NONE,
 * PLS_PRE_LOOT,
 * PLS_SAMPLING,
 * PLS_SKINNING
 * };
 *
 * Hash: 0xC737697C41628340 | Since: 1311
 *
 * @deprecated Use ped.getPedLootStatusMp() instead
 */
export declare function getPedLootStatusMp(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4700A416E8324EF3 | Since: 1207
 *
 * @deprecated Use ped.getPedMaxHealth() instead
 */
export declare function getPedMaxHealth(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x3F69145BBA87BAE7 | Since: 1207
 *
 * @deprecated Use ped.getPedMoney() instead
 */
export declare function getPedMoney(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x243E1B4607040057 | Since: 1207
 *
 * @deprecated Use ped.getPedMotionFocusEntity() instead
 */
export declare function getPedMotionFocusEntity(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x23F8F5FC7E8C4A6B | Since: 1207
 *
 * @deprecated Use ped.getPedNearbyPeds() instead
 */
export declare function getPedNearbyPeds(ped: number | Ped, sizeAndPeds: any, ignoredPedType: number): number;
/**
 * No comment provided
 *
 * Hash: 0xCFF869CBFA210D82 | Since: 1207
 *
 * @deprecated Use ped.getPedNearbyVehicles() instead
 */
export declare function getPedNearbyVehicles(ped: number | Ped, sizeAndVehs: any): number;
/**
 * No comment provided
 *
 * Hash: 0x42FDD0F017B1E38E | Since: 1207
 *
 * @deprecated Use ped.getPedRelationshipGroupDefaultHash() instead
 */
export declare function getPedRelationshipGroupDefaultHash(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x7DBDD04862D95F04 | Since: 1207
 *
 * @deprecated Use ped.getPedRelationshipGroupHash() instead
 */
export declare function getPedRelationshipGroupHash(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xAF9E59B1B1FBF2A0 | Since: 1207
 *
 * @deprecated Use ped.getPedResetFlag() instead
 */
export declare function getPedResetFlag(ped: number | Ped, flagId: number): boolean;
/**
 * Returns the entity that killed the ped
 *
 * It is best to check if the Ped is dead before asking for its killer.
 *
 * Hash: 0x93C8B64DEB84728C | Since: 1207
 *
 * @deprecated Use ped.getPedSourceOfDeath() instead
 */
export declare function getPedSourceOfDeath(ped: number | Ped): number;
/**
 * Returns whether the entity is in stealth mode
 *
 * Hash: 0x7C2AC9CA66575FBF | Since: 1207
 *
 * @deprecated Use ped.getPedStealthMovement() instead
 */
export declare function getPedStealthMovement(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1E98817B311AE98A | Since: 1207
 *
 * @deprecated Use ped.getPedTimeOfDeath() instead
 */
export declare function getPedTimeOfDeath(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x936E7CAD0AE2EE14 | Since: 1207
 *
 * @deprecated Use ped.getPedToPlayerWeaponDamageModifier() instead
 */
export declare function getPedToPlayerWeaponDamageModifier(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xFF059E1E4C01E63C | Since: 1207
 *
 * @deprecated Use ped.getPedType() instead
 */
export declare function getPedType(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6A3975DEA89F9A17 | Since: 1207
 *
 * @deprecated Use ped.getPlayerPedIsFollowing() instead
 */
export declare function getPlayerPedIsFollowing(ped: number | Ped): number | string;
/**
 * No comment provided
 *
 * Hash: 0x9E6B70061662AE5C | Since: 1207
 *
 * @deprecated Use ped.getRelationshipBetweenGroups() instead
 */
export declare function getRelationshipBetweenGroups(group1: number | string, group2: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xEBA5AD3A0EAF7121 | Since: 1207
 *
 * @deprecated Use ped.getRelationshipBetweenPeds() instead
 */
export declare function getRelationshipBetweenPeds(ped1: number | Ped, ped2: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6F4C85ACD641BCD2 | Since: 1207
 *
 * @deprecated Use ped.getSeatPedIsTryingToEnter() instead
 */
export declare function getSeatPedIsTryingToEnter(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4E76CB57222A00E5 | Since: 1207
 *
 * @deprecated Use ped.getSeatPedIsUsing() instead
 */
export declare function getSeatPedIsUsing(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x511F1A683387C7E2 | Since: 1207
 *
 * @deprecated Use ped.getTrackedPedPixelcount() instead
 */
export declare function getTrackedPedPixelcount(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF92691AED837A5FC | Since: 1207
 *
 * @deprecated Use ped.getVehiclePedIsEntering() instead
 */
export declare function getVehiclePedIsEntering(ped: number | Ped): number;
/**
 * Gets the vehicle the specified Ped is in.
 *
 * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
 *
 * Hash: 0x9A9112A0FE9A4713 | Since: 1207
 *
 * @deprecated Use ped.getVehiclePedIsIn() instead
 */
export declare function getVehiclePedIsIn(ped: number | Ped, lastVehicle: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x6094AD011A2EA87D | Since: 1207
 *
 * @deprecated Use ped.getVehiclePedIsUsing() instead
 */
export declare function getVehiclePedIsUsing(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x2B02DB082258625F | Since: 1207
 *
 * @deprecated Use ped.givePedHashScenarioProp() instead
 */
export declare function givePedHashScenarioProp(ped: number | Ped, object: number | Object, conditionalAnim: string, scenarioType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x854BC9B1A1CCD034 | Since: 1207
 *
 * @deprecated Use ped.hasMotionTypeAssetLoaded() instead
 */
export declare function hasMotionTypeAssetLoaded(nameHash: number | string, ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7DD7FB3480D8083E | Since: 1207
 *
 * @deprecated Use ped.initPedDefaultHealth() instead
 */
export declare function initPedDefaultHealth(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4759CC730F947C81 | Since: 1207
 *
 * @deprecated Use ped.instantlyFillPedPopulation() instead
 */
export declare function instantlyFillPedPopulation(): void;
/**
 * No comment provided
 *
 * Hash: 0xD543D3A8FDE4F185 | Since: 1207
 *
 * @deprecated Use ped.isAnimalInteractionPossible() instead
 */
export declare function isAnimalInteractionPossible(ped: number | Ped, animal: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x68772DB2B2526F9F | Since: 1311
 *
 * @deprecated Use ped.isAnyHostilePedNearPoint() instead
 */
export declare function isAnyHostilePedNearPoint(ped: number | Ped, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x083961498679DC9F | Since: 1207
 *
 * @deprecated Use ped.isAnyPedNearPoint() instead
 */
export declare function isAnyPedNearPoint(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0D3D71EA1086C55 | Since: 1207
 *
 * @deprecated Use ped.isAnyPedShootingInArea() instead
 */
export declare function isAnyPedShootingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8D523BF5BBD3808 | Since: 1207
 *
 * @deprecated Use ped.isEventInQueue() instead
 */
export declare function isEventInQueue(ped: number | Ped, eventType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x909AD9E9A92A10DF | Since: 1207
 *
 * @deprecated Use ped.isGroupLocallyControlled() instead
 */
export declare function isGroupLocallyControlled(groupId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EE3F0D7FECCC54F | Since: 1207
 *
 * @deprecated Use ped.isInstantlyFillPedPopulationFinished() instead
 */
export declare function isInstantlyFillPedPopulationFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFB1E7998B8595825 | Since: 1207
 *
 * @deprecated Use ped.isLocationSpawnSafe() instead
 */
export declare function isLocationSpawnSafe(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3998B1276A3300E5 | Since: 1207
 *
 * @deprecated Use ped.isPedAimingFromCover() instead
 */
export declare function isPedAimingFromCover(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x12534C348C6CB68B | Since: 1207
 *
 * @deprecated Use ped.isPedAPlayer() instead
 */
export declare function isPedAPlayer(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEF3A8772F085B4AA | Since: 1207
 *
 * @deprecated Use ped.isPedBeingDragged() instead
 */
export declare function isPedBeingDragged(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD453BB601D4A606E | Since: 1207
 *
 * @deprecated Use ped.isPedBeingHogtied() instead
 */
export declare function isPedBeingHogtied(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A497FE2DF198913 | Since: 1207
 *
 * @deprecated Use ped.isPedBeingJacked() instead
 */
export declare function isPedBeingJacked(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x863B23EFDE9C5DF2 | Since: 1207
 *
 * @deprecated Use ped.isPedBeingStealthKilled() instead
 */
export declare function isPedBeingStealthKilled(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4FBACCE3B4138EE8 | Since: 1207
 *
 * @deprecated Use ped.isPedBeingStunned() instead
 */
export declare function isPedBeingStunned(ped: number | Ped, weaponType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA911EE21EDF69DAF | Since: 1207
 *
 * @deprecated Use ped.isPedCarryingSomething() instead
 */
export declare function isPedCarryingSomething(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x53E8CB4F48BFE623 | Since: 1207
 *
 * @deprecated Use ped.isPedClimbing() instead
 */
export declare function isPedClimbing(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3317DEDB88C95038 | Since: 1207
 *
 * @deprecated Use ped.isPedDeadOrDying() instead
 */
export declare function isPedDeadOrDying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBA63D9FE45412247 | Since: 1207
 *
 * @deprecated Use ped.isPedDefensiveAreaActive() instead
 */
export declare function isPedDefensiveAreaActive(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5527B8246FEF9B11 | Since: 1207
 *
 * @deprecated Use ped.isPedDiving() instead
 */
export declare function isPedDiving(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1D46B417F926D34D | Since: 1207
 *
 * @deprecated Use ped.isPedEnteringAnyTransport() instead
 */
export declare function isPedEnteringAnyTransport(ped: number | Ped): boolean;
/**
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 *
 * Hash: 0x414641C26E105898 | Since: 1207
 *
 * @deprecated Use ped.isPedEvasiveDiving() instead
 */
export declare function isPedEvasiveDiving(ped: number | Ped, evadingEntity: number | Entity): boolean;
/**
 * angle is ped's view cone
 *
 * Hash: 0xD71649DB0A545AA3 | Since: 1207
 *
 * @deprecated Use ped.isPedFacingPed() instead
 */
export declare function isPedFacingPed(ped: number | Ped, otherPed: number | Ped, angle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFB92A102F1C4DFA3 | Since: 1207
 *
 * @deprecated Use ped.isPedFalling() instead
 */
export declare function isPedFalling(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3E592D0486DEC0F6 | Since: 1207
 *
 * @deprecated Use ped.isPedFallingOver() instead
 */
export declare function isPedFallingOver(ped: number | Ped): boolean;
/**
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 *
 * Hash: 0xD839450756ED5A80 | Since: 1207
 *
 * @deprecated Use ped.isPedFatallyInjured() instead
 */
export declare function isPedFatallyInjured(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBBCCE00B381F8482 | Since: 1207
 *
 * @deprecated Use ped.isPedFleeing() instead
 */
export declare function isPedFleeing(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95CBC65780DE7EB1 | Since: 1207
 *
 * @deprecated Use ped.isPedFullyOnMount() instead
 */
export declare function isPedFullyOnMount(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB062B2B5722478E | Since: 1207
 *
 * @deprecated Use ped.isPedGettingIntoAVehicle() instead
 */
export declare function isPedGettingIntoAVehicle(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9F65DBC537E59AD5 | Since: 1207
 *
 * @deprecated Use ped.isPedGoingIntoCover() instead
 */
export declare function isPedGoingIntoCover(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9BB01E3834671191 | Since: 1207
 *
 * @deprecated Use ped.isPedGroupMember() instead
 */
export declare function isPedGroupMember(ped: number | Ped, groupId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1C86D8AEF8254B78 | Since: 1207
 *
 * @deprecated Use ped.isPedHangingOnToVehicle() instead
 */
export declare function isPedHangingOnToVehicle(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFCF37A457CB96DC0 | Since: 1207
 *
 * @deprecated Use ped.isPedHeadingTowardsPosition() instead
 */
export declare function isPedHeadingTowardsPosition(ped: number | Ped, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x813A0A7C9D2E831F | Since: 1207
 *
 * @deprecated Use ped.isPedHeadtrackingEntity() instead
 */
export declare function isPedHeadtrackingEntity(ped: number | Ped, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5CD3CB88A7F8850D | Since: 1207
 *
 * @deprecated Use ped.isPedHeadtrackingPed() instead
 */
export declare function isPedHeadtrackingPed(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3AA24CCC0D451379 | Since: 1207
 *
 * @deprecated Use ped.isPedHogtied() instead
 */
export declare function isPedHogtied(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42429C674B61238B | Since: 1207
 *
 * @deprecated Use ped.isPedHogtying() instead
 */
export declare function isPedHogtying(ped: number | Ped): boolean;
/**
 * Returns true/false if the ped is/isn't humanoid.
 *
 * Hash: 0xB980061DA992779D | Since: 1207
 *
 * @deprecated Use ped.isPedHuman() instead
 */
export declare function isPedHuman(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB655DB7582AEC805 | Since: 1207
 *
 * @deprecated Use ped.isPedIncapacitated() instead
 */
export declare function isPedIncapacitated(ped: number | Ped): boolean;
/**
 * Gets a value indicating whether this ped's health is below its injured threshold.
 *
 * The default threshold is 100.
 *
 * Hash: 0x84A2DD9AC37C35C1 | Since: 1207
 *
 * @deprecated Use ped.isPedInjured() instead
 */
export declare function isPedInjured(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E0E1C2B4F6CB339 | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyBoat() instead
 */
export declare function isPedInAnyBoat(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x298B91AE825E5705 | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyHeli() instead
 */
export declare function isPedInAnyHeli(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5FFF4CFC74D8FB80 | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyPlane() instead
 */
export declare function isPedInAnyPlane(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E575D6A898AB852 | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyTaxi() instead
 */
export declare function isPedInAnyTaxi(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F972C1AB75A1ED0 | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyTrain() instead
 */
export declare function isPedInAnyTrain(ped: number | Ped): boolean;
/**
 * Gets a value indicating whether the specified ped is in any vehicle.
 *
 * Hash: 0x997ABD671D25CA0B | Since: 1207
 *
 * @deprecated Use ped.isPedInAnyVehicle() instead
 */
export declare function isPedInAnyVehicle(ped: number | Ped, atGetIn: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4859F1FC66A6278E | Since: 1207
 *
 * @deprecated Use ped.isPedInCombat() instead
 */
export declare function isPedInCombat(ped: number | Ped, target: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x60DFD0691A170B88 | Since: 1207
 *
 * @deprecated Use ped.isPedInCover() instead
 */
export declare function isPedInCover(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x845333B3150583AB | Since: 1207
 *
 * @deprecated Use ped.isPedInCoverFacingLeft() instead
 */
export declare function isPedInCoverFacingLeft(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9134873537FA419C | Since: 1207
 *
 * @deprecated Use ped.isPedInFlyingVehicle() instead
 */
export declare function isPedInFlyingVehicle(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5891CAC5D4ACFF74 | Since: 1207
 *
 * @deprecated Use ped.isPedInGroup() instead
 */
export declare function isPedInGroup(ped: number | Ped): boolean;
/**
 * Notes: The function only returns true while the ped is:
 * A.) Swinging a random melee attack (including pistol-whipping)
 *
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 *
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
 *
 * You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 *
 * Hash: 0x4E209B2C1EAD5159 | Since: 1207
 *
 * @deprecated Use ped.isPedInMeleeCombat() instead
 */
export declare function isPedInMeleeCombat(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x796D90EFB19AA332 | Since: 1207
 *
 * @deprecated Use ped.isPedInModel() instead
 */
export declare function isPedInModel(ped: number | Ped, modelHash: number | string): boolean;
/**
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 *
 * Hash: 0xA3EE4A07279BB9DB | Since: 1207
 *
 * @deprecated Use ped.isPedInVehicle() instead
 */
export declare function isPedInVehicle(ped: number | Ped, vehicle: number | Vehicle, atGetIn: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4AE4FF911DFB61DA | Since: 1207
 *
 * @deprecated Use ped.isPedJacking() instead
 */
export declare function isPedJacking(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCEDABC5900A0BF97 | Since: 1207
 *
 * @deprecated Use ped.isPedJumping() instead
 */
export declare function isPedJumping(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9682F850056C9ADE | Since: 1207
 *
 * @deprecated Use ped.isPedLassoed() instead
 */
export declare function isPedLassoed(ped: number | Ped): boolean;
/**
 * Returns true/false if the ped is/isn't male.
 *
 * Hash: 0x6D9F5FAA7488BA46 | Since: 1207
 *
 * @deprecated Use ped.isPedMale() instead
 */
export declare function isPedMale(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC9D55B1A358A5BF7 | Since: 1207
 *
 * @deprecated Use ped.isPedModel() instead
 */
export declare function isPedModel(ped: number | Ped, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01FEE67DB37F59B2 | Since: 1207
 *
 * @deprecated Use ped.isPedOnFoot() instead
 */
export declare function isPedOnFoot(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x460BC76A0E10655E | Since: 1207
 *
 * @deprecated Use ped.isPedOnMount() instead
 */
export declare function isPedOnMount(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC5F66E459AF3BB2 | Since: 1207
 *
 * @deprecated Use ped.isPedOnSpecificVehicle() instead
 */
export declare function isPedOnSpecificVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 *
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 *
 * Hash: 0x67722AEB798E5FAB | Since: 1207
 *
 * @deprecated Use ped.isPedOnVehicle() instead
 */
export declare function isPedOnVehicle(ped: number | Ped): boolean;
/**
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 *
 * Old name: _IS_PED_OPENING_A_DOOR
 *
 * Hash: 0x26AF0E8E30BD2A2C | Since: 1207
 *
 * @deprecated Use ped.isPedOpeningDoor() instead
 */
export declare function isPedOpeningDoor(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDCCA191DF9980FD7 | Since: 1207
 *
 * @deprecated Use ped.isPedPerformingMeleeAction() instead
 */
export declare function isPedPerformingMeleeAction(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC70B5FAE151982D8 | Since: 1207
 *
 * @deprecated Use ped.isPedPlantingBomb() instead
 */
export declare function isPedPlantingBomb(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD6A86331A537A7B9 | Since: 1207
 *
 * @deprecated Use ped.isPedProne() instead
 */
export declare function isPedProne(ped: number | Ped): boolean;
/**
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 *
 * Hash: 0x47E4E977581C5B55 | Since: 1207
 *
 * @deprecated Use ped.isPedRagdoll() instead
 */
export declare function isPedRagdoll(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0BC8FAED8CFEB3C | Since: 1207
 *
 * @deprecated Use ped.isPedReadyToRender() instead
 */
export declare function isPedReadyToRender(ped: number | Ped): boolean;
/**
 * Returns whether the specified ped is reloading.
 *
 * Hash: 0x24B100C68C645951 | Since: 1207
 *
 * @deprecated Use ped.isPedReloading() instead
 */
export declare function isPedReloading(ped: number | Ped): boolean;
/**
 * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0x625B774D75C87068 | Since: 1207
 *
 * @deprecated Use ped.isPedRespondingToEvent() instead
 */
export declare function isPedRespondingToEvent(ped: number | Ped, eventType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x77525BBF433F2CD6 | Since: 1207
 *
 * @deprecated Use ped.isPedRespondingToThreat() instead
 */
export declare function isPedRespondingToThreat(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2AFE52F782F25775 | Since: 1207
 *
 * @deprecated Use ped.isPedRunningMobilePhoneTask() instead
 */
export declare function isPedRunningMobilePhoneTask(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3B6097CC25AA69E | Since: 1207
 *
 * @deprecated Use ped.isPedRunningRagdollTask() instead
 */
export declare function isPedRunningRagdollTask(ped: number | Ped): boolean;
/**
 * Returns whether the specified ped is shooting.
 *
 * Hash: 0x34616828CD07F1A1 | Since: 1207
 *
 * @deprecated Use ped.isPedShooting() instead
 */
export declare function isPedShooting(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x84D0BF2B21862059 | Since: 1207
 *
 * @deprecated Use ped.isPedSitting() instead
 */
export declare function isPedSitting(ped: number | Ped): boolean;
/**
 * Detect if ped is in any vehicle
 * [True/False]
 *
 * Hash: 0x826AA586EDB9FEF8 | Since: 1207
 *
 * @deprecated Use ped.isPedSittingInAnyVehicle() instead
 */
export declare function isPedSittingInAnyVehicle(ped: number | Ped): boolean;
/**
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 *
 * Hash: 0xA808AA1D79230FC2 | Since: 1207
 *
 * @deprecated Use ped.isPedSittingInVehicle() instead
 */
export declare function isPedSittingInVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x530944F6F4B8A214 | Since: 1207
 *
 * @deprecated Use ped.isPedStopped() instead
 */
export declare function isPedStopped(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9DE327631295B4C2 | Since: 1207
 *
 * @deprecated Use ped.isPedSwimming() instead
 */
export declare function isPedSwimming(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC024869A53992F34 | Since: 1207
 *
 * @deprecated Use ped.isPedSwimmingUnderWater() instead
 */
export declare function isPedSwimmingUnderWater(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00E73468D085F745 | Since: 1207
 *
 * @deprecated Use ped.isPedUsingActionMode() instead
 */
export declare function isPedUsingActionMode(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57AB4A3080F85143 | Since: 1207
 *
 * @deprecated Use ped.isPedUsingAnyScenario() instead
 */
export declare function isPedUsingAnyScenario(ped: number | Ped): boolean;
/**
 * Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
 *
 * Hash: 0x34D6AC1157C8226C | Since: 1207
 *
 * @deprecated Use ped.isPedUsingScenarioHash() instead
 */
export declare function isPedUsingScenarioHash(ped: number | Ped, scenarioHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9C54041BB66BCF9E | Since: 1207
 *
 * @deprecated Use ped.isPedUsingThisScenario() instead
 */
export declare function isPedUsingThisScenario(ped: number | Ped, scenario: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x117C70D1F5730B5E | Since: 1207
 *
 * @deprecated Use ped.isPedVaulting() instead
 */
export declare function isPedVaulting(ped: number | Ped): boolean;
/**
 * Returns true if ped is in perception (focused and looking at target ped)
 * Most float params are -1.f in R* Scripts
 *
 * Hash: 0x06087579E7AA85A9 | Since: 1207
 *
 * @deprecated Use ped.isTargetPedInPerceptionArea() instead
 */
export declare function isTargetPedInPerceptionArea(ped: number | Ped, targetPed: number | Ped, customDistance: number): boolean;
/**
 * Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 * Target needs to be tracked first, won't work otherwise.
 *
 * Hash: 0x91C8E617F64188AC | Since: 1207
 *
 * @deprecated Use ped.isTrackedPedVisible() instead
 */
export declare function isTrackedPedVisible(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6FD7816A36615F48 | Since: 1207
 *
 * @deprecated Use ped.knockOffPedProp() instead
 */
export declare function knockOffPedProp(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x45BBCBA77C29A841 | Since: 1207
 *
 * @deprecated Use ped.knockPedOffVehicle() instead
 */
export declare function knockPedOffVehicle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF6E1E9F47A7686F8 | Since: 1207
 *
 * @deprecated Use ped.pedCowerInPlace() instead
 */
export declare function pedCowerInPlace(ped: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1E4C940233FC0C6F | Since: 1207
 *
 * @deprecated Use ped.pedCowerMoveToPoint() instead
 */
export declare function pedCowerMoveToPoint(ped: number | Ped, ped2: number | Ped): void;
/**
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 *
 * Hash: 0x9222F300BF8354FE | Since: 1207
 *
 * @deprecated Use ped.registerHatedTargetsAroundPed() instead
 */
export declare function registerHatedTargetsAroundPed(ped: number | Ped, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2F25D9AEFA34FBA2 | Since: 1207
 *
 * @deprecated Use ped.registerTarget() instead
 */
export declare function registerTarget(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3088634CF8C819CF | Since: 1207
 *
 * @deprecated Use ped.releasePedVisibilityTracking() instead
 */
export declare function releasePedVisibilityTracking(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8EB2F69076AF7053 | Since: 1207
 *
 * @deprecated Use ped.removeGroup() instead
 */
export declare function removeGroup(groupId: number): void;
/**
 * Ped will no longer get angry when you stay near him.
 *
 * Hash: 0x74D4E028107450A9 | Since: 1207
 *
 * @deprecated Use ped.removePedDefensiveArea() instead
 */
export declare function removePedDefensiveArea(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xED74007FFB146BC2 | Since: 1207
 *
 * @deprecated Use ped.removePedFromGroup() instead
 */
export declare function removePedFromGroup(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB6BA2444AB393DA2 | Since: 1207
 *
 * @deprecated Use ped.removeRelationshipGroup() instead
 */
export declare function removeRelationshipGroup(groupHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x31D16B74C6E29D66 | Since: 1207
 *
 * @deprecated Use ped.removeScenarioBlockingArea() instead
 */
export declare function removeScenarioBlockingArea(): void;
/**
 * No comment provided
 *
 * Hash: 0xD37401D78A929A49 | Since: 1207
 *
 * @deprecated Use ped.removeScenarioBlockingAreas() instead
 */
export declare function removeScenarioBlockingAreas(): void;
/**
 * Params: p2, p3 usually 0 in R* Scripts
 *
 * Hash: 0xDF631E4BCE1B1FC4 | Since: 1207
 *
 * @deprecated Use ped.removeShopItemFromPedByCategory() instead
 */
export declare function removeShopItemFromPedByCategory(ped: number | Ped, componentCategory: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD710A5007C2AC539 | Since: 1207
 *
 * @deprecated Use ped.removeTagFromMetaPed() instead
 */
export declare function removeTagFromMetaPed(ped: number | Ped, component: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x75BA1CB3B7D40CAF | Since: 1207
 *
 * @deprecated Use ped.requestPedUseSmallBboxVisibilityTracking() instead
 */
export declare function requestPedUseSmallBboxVisibilityTracking(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2BC338A7B21F4608 | Since: 1207
 *
 * @deprecated Use ped.requestPedVehicleVisibilityTracking() instead
 */
export declare function requestPedVehicleVisibilityTracking(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7D7A2E43E74E2EB8 | Since: 1207
 *
 * @deprecated Use ped.requestPedVisibilityTracking() instead
 */
export declare function requestPedVisibilityTracking(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEA16670E7BA4743C | Since: 1207
 *
 * @deprecated Use ped.resetAiWeaponDamageModifier() instead
 */
export declare function resetAiWeaponDamageModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x63DAB4CCB3273205 | Since: 1207
 *
 * @deprecated Use ped.resetGroupFormationDefaultSpacing() instead
 */
export declare function resetGroupFormationDefaultSpacing(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2A5AFD2B8381A6E1 | Since: 1207
 *
 * @deprecated Use ped.resetHorseAvoidanceLevelToDefault() instead
 */
export declare function resetHorseAvoidanceLevelToDefault(horse: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x22EF8FF8778030EB | Since: 1207
 *
 * @deprecated Use ped.resetPedInVehicleContext() instead
 */
export declare function resetPedInVehicleContext(ped: number | Ped): void;
/**
 * Resets the value for the last vehicle driven by the Ped.
 *
 * Hash: 0xBB8DE8CF6A8DD8BB | Since: 1207
 *
 * @deprecated Use ped.resetPedLastVehicle() instead
 */
export declare function resetPedLastVehicle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9FA4664CF62E47E8 | Since: 1207
 *
 * @deprecated Use ped.resetPedRagdollTimer() instead
 */
export declare function resetPedRagdollTimer(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x97B0DB5B4AA74E77 | Since: 1207
 *
 * @deprecated Use ped.resetPedWeaponMovementClipset() instead
 */
export declare function resetPedWeaponMovementClipset(ped: number | Ped): void;
/**
 * This function will simply bring the dead ped back to life.
 *
 * Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
 *
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 *
 * Hash: 0x71BC8E838B9C6035 | Since: 1207
 *
 * @deprecated Use ped.resurrectPed() instead
 */
export declare function resurrectPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8D8ACD8388CD99CE | Since: 1207
 *
 * @deprecated Use ped.reviveInjuredPed() instead
 */
export declare function reviveInjuredPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x66460DEDDD417254 | Since: 1207
 *
 * @deprecated Use ped.setAiMeleeWeaponDamageModifier() instead
 */
export declare function setAiMeleeWeaponDamageModifier(modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1B1E2A40A65B8521 | Since: 1207
 *
 * @deprecated Use ped.setAiWeaponDamageModifier() instead
 */
export declare function setAiWeaponDamageModifier(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9F8AA94D6D97DBF4 | Since: 1207
 *
 * @deprecated Use ped.setBlockingOfNonTemporaryEvents() instead
 */
export declare function setBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9911F4A24485F653 | Since: 1207
 *
 * @deprecated Use ped.setBlockingOfNonTemporaryEventsForAmbientPedsThisFrame() instead
 */
export declare function setBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(): void;
/**
 * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eCombatAttributeFloats
 *
 * Hash: 0xFF41B4B141ED981C | Since: 1207
 *
 * @deprecated Use ped.setCombatFloat() instead
 */
export declare function setCombatFloat(ped: number | Ped, combatType: number, newValue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x102E68B2024D536D | Since: 1207
 *
 * @deprecated Use ped.setCreateRandomCops() instead
 */
export declare function setCreateRandomCops(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC52E0F855C58FC2E | Since: 1207
 *
 * @deprecated Use ped.setEnableBoundAnkles() instead
 */
export declare function setEnableBoundAnkles(ped: number | Ped, toggle: boolean): void;
/**
 * Ped can not pull out a weapon when true
 *
 * Hash: 0xDF1AF8B5D56542FA | Since: 1207
 *
 * @deprecated Use ped.setEnableHandcuffs() instead
 */
export declare function setEnableHandcuffs(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFFC24B988B938B38 | Since: 1207
 *
 * @deprecated Use ped.setFacialIdleAnimOverride() instead
 */
export declare function setFacialIdleAnimOverride(ped: number | Ped, animName: string, animDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0x7CC7D3B7AF7FB71F | Since: 1207
 *
 * @deprecated Use ped.setFormationPositionsTargetRadius() instead
 */
export declare function setFormationPositionsTargetRadius(groupId: number, radius: number): boolean;
/**
 * eFormationType
 *
 * 0: Default
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 *
 * Hash: 0xCE2F5FC3AF7E8C1E | Since: 1207
 *
 * @deprecated Use ped.setGroupFormation() instead
 */
export declare function setGroupFormation(groupId: number, formationType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1D9D45004C28C916 | Since: 1207
 *
 * @deprecated Use ped.setGroupFormationSpacing() instead
 */
export declare function setGroupFormationSpacing(groupId: number): void;
/**
 * Sets the range at which members will automatically leave the group.
 *
 * Hash: 0x4102C7858CFEE4E4 | Since: 1207
 *
 * @deprecated Use ped.setGroupSeparationRange() instead
 */
export declare function setGroupSeparationRange(groupId: number, separationRange: number): void;
/**
 * -1 - HORSE_ASSIST__NO_CHANGE
 * 0 - HORSE_ASSIST__MANUAL
 * 1 - HORSE_ASSIST__SEMIASSIST
 * 2 - HORSE_ASSIST__FULLASSIST
 *
 * Hash: 0xDDCF6FEA5D7ACC17 | Since: 1207
 *
 * @deprecated Use ped.setHorseAvoidanceLevel() instead
 */
export declare function setHorseAvoidanceLevel(horse: number | Ped, avoidanceLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC32779C16FCEECD9 | Since: 1207
 *
 * @deprecated Use ped.setIkTarget() instead
 */
export declare function setIkTarget(ped: number | Ped, ikIndex: number, entityLookAt: number | Entity, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, blendInDuration: number, blendOutDuration: number): void;
/**
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
 *
 * lootFlag:
 * enum eLootFlag
 * {
 * LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
 * LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
 * LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
 * };
 *
 * Hash: 0x6569F31A01B4C097 | Since: 1207
 *
 * @deprecated Use ped.setLootingFlag() instead
 */
export declare function setLootingFlag(ped: number | Ped, lootFlag: number, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x925A160133003AC6 | Since: 1207
 *
 * @deprecated Use ped.setPausePedWritheBleedout() instead
 */
export declare function setPausePedWritheBleedout(ped: number | Ped, toggle: boolean): void;
/**
 * accuracy = 0-100, 100 being perfectly accurate
 *
 * Hash: 0x7AEFB85C1D49DEB6 | Since: 1207
 *
 * @deprecated Use ped.setPedAccuracy() instead
 */
export declare function setPedAccuracy(ped: number | Ped, accuracy: number): void;
/**
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 * toggle = bSetRelGroup
 *
 * Hash: 0xBB03C38DD3FB7FFD | Since: 1207
 *
 * @deprecated Use ped.setPedAsCop() instead
 */
export declare function setPedAsCop(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2A7819605465FBCE | Since: 1207
 *
 * @deprecated Use ped.setPedAsGroupLeader() instead
 */
export declare function setPedAsGroupLeader(ped: number | Ped, groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9F3480FE65DB31B5 | Since: 1207
 *
 * @deprecated Use ped.setPedAsGroupMember() instead
 */
export declare function setPedAsGroupMember(ped: number | Ped, groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6C3B4D6D13B4C841 | Since: 1207
 *
 * @deprecated Use ped.setPedCanArmIk() instead
 */
export declare function setPedCanArmIk(ped: number | Ped, toggle: boolean): void;
/**
 * When set on a player ped, its just like when you die in RDO
 *
 * Hash: 0x5240864E847C691C | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeIncapacitated() instead
 */
export declare function setPedCanBeIncapacitated(ped: number | Ped, toggle: boolean): void;
/**
 * state:
 * enum eKnockOffVehicle
 * {
 * KNOCKOFFVEHICLE_DEFAULT,
 * KNOCKOFFVEHICLE_NEVER,
 * KNOCKOFFVEHICLE_EASY,
 * KNOCKOFFVEHICLE_HARD
 * };
 *
 * Hash: 0x7A6535691B477C48 | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeKnockedOffVehicle() instead
 */
export declare function setPedCanBeKnockedOffVehicle(ped: number | Ped, state: number): void;
/**
 * No comment provided
 *
 * Hash: 0x63F58F7C80513AAD | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeTargetted() instead
 */
export declare function setPedCanBeTargetted(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x66B57B72E0836A76 | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeTargettedByPlayer() instead
 */
export declare function setPedCanBeTargettedByPlayer(ped: number | Ped, player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBF1CA77833E58F2C | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeTargettedByTeam() instead
 */
export declare function setPedCanBeTargettedByTeam(ped: number | Ped, team: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC11C18092C5530DC | Since: 1207
 *
 * @deprecated Use ped.setPedCanHeadIk() instead
 */
export declare function setPedCanHeadIk(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x73518ECE2485412B | Since: 1207
 *
 * @deprecated Use ped.setPedCanLegIk() instead
 */
export declare function setPedCanLegIk(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6373D1349925A70E | Since: 1207
 *
 * @deprecated Use ped.setPedCanPlayAmbientAnims() instead
 */
export declare function setPedCanPlayAmbientAnims(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0EB0585D15254740 | Since: 1207
 *
 * @deprecated Use ped.setPedCanPlayAmbientBaseAnims() instead
 */
export declare function setPedCanPlayAmbientBaseAnims(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBAF20C5432058024 | Since: 1207
 *
 * @deprecated Use ped.setPedCanPlayGestureAnims() instead
 */
export declare function setPedCanPlayGestureAnims(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB128377056A54E2A | Since: 1207
 *
 * @deprecated Use ped.setPedCanRagdoll() instead
 */
export declare function setPedCanRagdoll(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDF993EE5E90ABA25 | Since: 1207
 *
 * @deprecated Use ped.setPedCanRagdollFromPlayerImpact() instead
 */
export declare function setPedCanRagdollFromPlayerImpact(ped: number | Ped, toggle: boolean): void;
/**
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 *
 * Only works in singleplayer
 *
 * Hash: 0x2E2F4240B3F24647 | Since: 1207
 *
 * @deprecated Use ped.setPedCanTeleportToGroupLeader() instead
 */
export declare function setPedCanTeleportToGroupLeader(pedHandle: number | Ped, groupId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF2B7106D37947CE0 | Since: 1207
 *
 * @deprecated Use ped.setPedCanTorsoIk() instead
 */
export declare function setPedCanTorsoIk(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF5846EDB26A98A24 | Since: 1207
 *
 * @deprecated Use ped.setPedCanTorsoReactIk() instead
 */
export declare function setPedCanTorsoReactIk(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6647C5F6F5792496 | Since: 1207
 *
 * @deprecated Use ped.setPedCanTorsoVehicleIk() instead
 */
export declare function setPedCanTorsoVehicleIk(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEC4686EC06434678 | Since: 1207
 *
 * @deprecated Use ped.setPedCanUseAutoConversationLookat() instead
 */
export declare function setPedCanUseAutoConversationLookat(ped: number | Ped, toggle: boolean): void;
/**
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 *
 * Setting this to 0.001 will allow warping through some objects.
 *
 * Hash: 0x364DF566EC833DE2 | Since: 1207
 *
 * @deprecated Use ped.setPedCapsule() instead
 */
export declare function setPedCapsule(ped: number | Ped, value: number): void;
/**
 * Old name: SET_PED_CLOTH_PACKAGE_INDEX
 *
 * Hash: 0x78C4E9961DB3EB5B | Since: 1207
 *
 * @deprecated Use ped.setPedClothPinFrames() instead
 */
export declare function setPedClothPinFrames(ped: number | Ped): void;
/**
 * abilityLevel:
 * enum eCombatAbilityLevel
 * {
 * CAL_POOR,
 * CAL_AVERAGE,
 * CAL_PROFESSIONAL
 * };
 *
 * Hash: 0xC7622C0D36B2FDA8 | Since: 1207
 *
 * @deprecated Use ped.setPedCombatAbility() instead
 */
export declare function setPedCombatAbility(ped: number | Ped, abilityLevel: number): void;
/**
 * attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
 *
 * Hash: 0x9F7794730795E019 | Since: 1207
 *
 * @deprecated Use ped.setPedCombatAttributes() instead
 */
export declare function setPedCombatAttributes(ped: number | Ped, attributeIndex: number, enabled: boolean): void;
/**
 * 0 - Stationary (Will just stand in place)
 * 1 - Defensive (Will try to find cover and very likely to blind fire)
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
 *
 * Hash: 0x4D9CA1009AFBD057 | Since: 1207
 *
 * @deprecated Use ped.setPedCombatMovement() instead
 */
export declare function setPedCombatMovement(ped: number | Ped, combatMovement: number): void;
/**
 * range:
 * enum eCombatRange
 * {
 * CR_NEAR,
 * CR_MEDIUM,
 * CR_FAR,
 * CR_VERY_FAR
 * };
 *
 * Hash: 0x3C606747B23E497B | Since: 1207
 *
 * @deprecated Use ped.setPedCombatRange() instead
 */
export declare function setPedCombatRange(ped: number | Ped, range: number): void;
/**
 * flagId: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptConfigFlags
 * https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
 *
 * Hash: 0x1913FE4CBF41C463 | Since: 1207
 *
 * @deprecated Use ped.setPedConfigFlag() instead
 */
export declare function setPedConfigFlag(ped: number | Ped, flagId: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x413C6C763A4AFFAD | Since: 1207
 *
 * @deprecated Use ped.setPedDefensiveAreaDirection() instead
 */
export declare function setPedDefensiveAreaDirection(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFC3DB99C8144CD81 | Since: 1207
 *
 * @deprecated Use ped.setPedDefensiveAreaVolume() instead
 */
export declare function setPedDefensiveAreaVolume(ped: number | Ped, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAA5A7ECE2AA8FE70 | Since: 1207
 *
 * @deprecated Use ped.setPedDesiredHeading() instead
 */
export declare function setPedDesiredHeading(ped: number | Ped, heading: number): void;
/**
 * Used in various R* MP & SP Scripts
 *
 * Hash: 0x9AC577F5A12AD8A9 | Since: 1207
 *
 * @deprecated Use ped.setPedFiringPattern() instead
 */
export declare function setPedFiringPattern(ped: number | Ped, patternHash: number | string): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
 *
 * attributeFlags:
 * enum eFleeAttribute
 * {
 * FA_FORCE_EXIT_VEHICLE = (1 << 16),
 * FA_DISABLE_MOUNT_USAGE = (1 << 20),
 * FA_DISABLE_ENTER_VEHICLES = (1 << 22),
 * };
 *
 * Hash: 0x70A2D1137C8ED7C9 | Since: 1207
 *
 * @deprecated Use ped.setPedFleeAttributes() instead
 */
export declare function setPedFleeAttributes(ped: number | Ped, attributeFlags: number, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDDF803377F94AAA8 | Since: 1207
 *
 * @deprecated Use ped.setPedGestureGroup() instead
 */
export declare function setPedGestureGroup(ped: number | Ped, gesture: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9FF447B6B6AD960A | Since: 1207
 *
 * @deprecated Use ped.setPedGravity() instead
 */
export declare function setPedGravity(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0BDDB8D9EC6BCF3C | Since: 1207
 *
 * @deprecated Use ped.setPedGroupMemberPassengerIndex() instead
 */
export declare function setPedGroupMemberPassengerIndex(ped: number | Ped, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x33A8F7F7D5F7F33C | Since: 1207
 *
 * @deprecated Use ped.setPedHearingRange() instead
 */
export declare function setPedHearingRange(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x52D59AB61DDC05DD | Since: 1207
 *
 * @deprecated Use ped.setPedHighlyPerceptive() instead
 */
export declare function setPedHighlyPerceptive(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF107E836A70DCE05 | Since: 1207
 *
 * @deprecated Use ped.setPedIdRange() instead
 */
export declare function setPedIdRange(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEC4B4B3B9908052A | Since: 1311
 *
 * @deprecated Use ped.setPedInjuredOnGroundBehaviour() instead
 */
export declare function setPedInjuredOnGroundBehaviour(ped: number | Ped, unk: number): void;
/**
 * Ped: The ped to warp.
 * vehicle: The vehicle to warp the ped into.
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0xF75B0D629E1C063D | Since: 1207
 *
 * @deprecated Use ped.setPedIntoVehicle() instead
 */
export declare function setPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x971D38760FBC02EF | Since: 1207
 *
 * @deprecated Use ped.setPedKeepTask() instead
 */
export declare function setPedKeepTask(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAE6004120C18DF97 | Since: 1207
 *
 * @deprecated Use ped.setPedLassoHogtieFlag() instead
 */
export declare function setPedLassoHogtieFlag(ped: number | Ped, flagId: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC396F5B86FF9FEBD | Since: 1207
 *
 * @deprecated Use ped.setPedLegIkMode() instead
 */
export declare function setPedLegIkMode(ped: number | Ped, mode: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDC2C5C242AAC342B | Since: 1207
 *
 * @deprecated Use ped.setPedLodMultiplier() instead
 */
export declare function setPedLodMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * Sets the maximum health of a ped.
 *
 * Hash: 0xF5F6378C4F3419D3 | Since: 1207
 *
 * @deprecated Use ped.setPedMaxHealth() instead
 */
export declare function setPedMaxHealth(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x433083750C5E064A | Since: 1207
 *
 * @deprecated Use ped.setPedMaxMoveBlendRatio() instead
 */
export declare function setPedMaxMoveBlendRatio(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x43C851690662113D | Since: 1207
 *
 * @deprecated Use ped.setPedMaxTimeInWater() instead
 */
export declare function setPedMaxTimeInWater(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6BA428C528D9E522 | Since: 1207
 *
 * @deprecated Use ped.setPedMaxTimeUnderwater() instead
 */
export declare function setPedMaxTimeUnderwater(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x01A898D26E2333DD | Since: 1207
 *
 * @deprecated Use ped.setPedMinMoveBlendRatio() instead
 */
export declare function setPedMinMoveBlendRatio(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE163A4BCE4DE6F11 | Since: 1207
 *
 * @deprecated Use ped.setPedModelIsSuppressed() instead
 */
export declare function setPedModelIsSuppressed(model: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA9C8960E8684C1B5 | Since: 1207
 *
 * @deprecated Use ped.setPedMoney() instead
 */
export declare function setPedMoney(ped: number | Ped, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9E8C908F41584ECD | Since: 1207
 *
 * @deprecated Use ped.setPedMoveAnimsBlendOut() instead
 */
export declare function setPedMoveAnimsBlendOut(ped: number | Ped): void;
/**
 * Min: 0.0f
 * Max: 1.15f
 *
 * Hash: 0x085BF80FA50A39D1 | Since: 1207
 *
 * @deprecated Use ped.setPedMoveRateOverride() instead
 */
export declare function setPedMoveRateOverride(ped: number | Ped, value: number): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x98EFA132A4117BE1 | Since: 1207
 *
 * @deprecated Use ped.setPedNameDebug() instead
 */
export declare function setPedNameDebug(ped: number | Ped, name: string): void;
/**
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 *
 * Hash: 0xEE01041D559983EA | Since: 1207
 *
 * @deprecated Use ped.setPedNonCreationArea() instead
 */
export declare function setPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x028F76B6E78246EB | Since: 1207
 *
 * @deprecated Use ped.setPedOntoMount() instead
 */
export declare function setPedOntoMount(ped: number | Ped, mount: number | Ped, seatIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x931B241409216C1F | Since: 1207
 *
 * @deprecated Use ped.setPedOwnsAnimal() instead
 */
export declare function setPedOwnsAnimal(ped: number | Ped, animal: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFE07FF6495D52E2A | Since: 1207
 *
 * @deprecated Use ped.setPedPanicExitScenario() instead
 */
export declare function setPedPanicExitScenario(ped: number | Ped, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01F6594B923B9251 | Since: 1207
 *
 * @deprecated Use ped.setPedRagdollForceFall() instead
 */
export declare function setPedRagdollForceFall(ped: number | Ped): void;
/**
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 *
 * Hash: 0xF0A4F1BBF4FA7497 | Since: 1207
 *
 * @deprecated Use ped.setPedRagdollOnCollision() instead
 */
export declare function setPedRagdollOnCollision(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC8A9481A01E63C28 | Since: 1207
 *
 * @deprecated Use ped.setPedRandomComponentVariation() instead
 */
export declare function setPedRandomComponentVariation(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xADB3F206518799E8 | Since: 1207
 *
 * @deprecated Use ped.setPedRelationshipGroupDefaultHash() instead
 */
export declare function setPedRelationshipGroupDefaultHash(ped: number | Ped, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC80A74AC829DDD92 | Since: 1207
 *
 * @deprecated Use ped.setPedRelationshipGroupHash() instead
 */
export declare function setPedRelationshipGroupHash(ped: number | Ped, relationshipGroup: number | string): void;
/**
 * Needs to be called every frame
 *
 * flagid:https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
 *
 * Hash: 0xC1E8A365BF3B29F2 | Since: 1207
 *
 * @deprecated Use ped.setPedResetFlag() instead
 */
export declare function setPedResetFlag(ped: number | Ped, flagId: number, doReset: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF29CF591C4BF6CEE | Since: 1207
 *
 * @deprecated Use ped.setPedSeeingRange() instead
 */
export declare function setPedSeeingRange(ped: number | Ped, value: number): void;
/**
 * Params: shootRate = 0 - 1000
 *
 * Hash: 0x614DA022990752DC | Since: 1207
 *
 * @deprecated Use ped.setPedShootRate() instead
 */
export declare function setPedShootRate(ped: number | Ped, shootRate: number): void;
/**
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * Hash: 0x802092B07E3B1EEA | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayCombatScenarioExit() instead
 */
export declare function setPedShouldPlayCombatScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
/**
 * Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
 *
 * Hash: 0xEC6935EBE0847B90 | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayDirectedNormalScenarioExit() instead
 */
export declare function setPedShouldPlayDirectedNormalScenarioExit(ped: number | Ped, pos: Vector3): boolean;
/**
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * Hash: 0x62FDAD5E01D2DD47 | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayEmotionalScenarioExit() instead
 */
export declare function setPedShouldPlayEmotionalScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
/**
 * lookIntensity:
 * 0 - REACT_LOOK_NONE
 * 1 - REACT_LOOK_LOW
 * 2 - REACT_LOOK_MEDIUM
 * 3 - REACT_LOOK_HIGH
 *
 * Hash: 0xEEED8FAFEC331A70 | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayFleeScenarioExit() instead
 */
export declare function setPedShouldPlayFleeScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF1C03A5352243A30 | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayImmediateScenarioExit() instead
 */
export declare function setPedShouldPlayImmediateScenarioExit(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA3A9299C4F2ADB98 | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayNormalScenarioExit() instead
 */
export declare function setPedShouldPlayNormalScenarioExit(ped: number | Ped): void;
/**
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * Hash: 0x463803429297117C | Since: 1207
 *
 * @deprecated Use ped.setPedShouldPlayQuickScenarioExit() instead
 */
export declare function setPedShouldPlayQuickScenarioExit(ped: number | Ped, pos: Vector3, lookIntensity: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9D3151A373974804 | Since: 1207
 *
 * @deprecated Use ped.setPedSphereDefensiveArea() instead
 */
export declare function setPedSphereDefensiveArea(ped: number | Ped, pos: Vector3, radius: number): void;
/**
 * Not implemented.
 *
 * Hash: 0x88CBB5CEB96B7BD2 | Since: 1207
 *
 * @deprecated Use ped.setPedStealthMovement() instead
 */
export declare function setPedStealthMovement(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x27B0405F59637D1F | Since: 1207
 *
 * @deprecated Use ped.setPedSweat() instead
 */
export declare function setPedSweat(ped: number | Ped, sweat: number): void;
/**
 * TLR_ExitTask = 0,
 * TLR_NeverLoseTarget,
 * TLR_SearchForTarget
 *
 * Hash: 0x0703B9079823DA4A | Since: 1207
 *
 * @deprecated Use ped.setPedTargetLossResponse() instead
 */
export declare function setPedTargetLossResponse(ped: number | Ped, responseType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x112942C6E708F70B | Since: 1207
 *
 * @deprecated Use ped.setPedToInformRespectedFriends() instead
 */
export declare function setPedToInformRespectedFriends(ped: number | Ped, radius: number, maxFriends: number): void;
/**
 * Old name: _SET_PED_DAMAGE_MODIFIER
 *
 * Hash: 0xD77AE48611B7B10A | Since: 1207
 *
 * @deprecated Use ped.setPedToPlayerWeaponDamageModifier() instead
 */
export declare function setPedToPlayerWeaponDamageModifier(ped: number | Ped, damageModifier: number): void;
/**
 * nmTaskMessageParameterName: See physicstasks.ymt. Search for DraggedByCart or 0xD00820D7 (Used in R* SP Script marston8)
 *
 * Hash: 0xAE99FB955581844A | Since: 1207
 *
 * @deprecated Use ped.setPedToRagdoll() instead
 */
export declare function setPedToRagdoll(ped: number | Ped, timeMin: number, timeMax: number, ragdollType: number, abortIfInjured: boolean, abortIfDead: boolean, nmTaskMessageParameterName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD76632D99E4966C8 | Since: 1207
 *
 * @deprecated Use ped.setPedToRagdollWithFall() instead
 */
export declare function setPedToRagdollWithFall(ped: number | Ped, timeMin: number, timeMax: number, ragdollType: number, falldirX: number, falldirY: number, falldirZ: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD75ACCF5E0FB5367 | Since: 1207
 *
 * @deprecated Use ped.setPedUsingActionMode() instead
 */
export declare function setPedUsingActionMode(ped: number | Ped, bActionModeEnabled: boolean, action: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3B6405E8AB34A907 | Since: 1207
 *
 * @deprecated Use ped.setPedVisualFieldCenterAngle() instead
 */
export declare function setPedVisualFieldCenterAngle(ped: number | Ped, angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x70793BDCA1E854D4 | Since: 1207
 *
 * @deprecated Use ped.setPedVisualFieldMaxAngle() instead
 */
export declare function setPedVisualFieldMaxAngle(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2DB492222FB21E26 | Since: 1207
 *
 * @deprecated Use ped.setPedVisualFieldMinAngle() instead
 */
export declare function setPedVisualFieldMinAngle(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C74B0BC831B753A | Since: 1207
 *
 * @deprecated Use ped.setPedVisualFieldPeripheralRange() instead
 */
export declare function setPedVisualFieldPeripheralRange(ped: number | Ped, range: number): void;
/**
 * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
 *
 * Hash: 0xB5485E4907B53019 | Since: 1207
 *
 * @deprecated Use ped.setPedWetnessEnabledThisFrame() instead
 */
export declare function setPedWetnessEnabledThisFrame(ped: number | Ped): void;
/**
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 *
 * Hash: 0x44CB6447D2571AA0 | Since: 1207
 *
 * @deprecated Use ped.setPedWetnessHeight() instead
 */
export declare function setPedWetnessHeight(ped: number | Ped, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD8C3BE3EE94CAF2D | Since: 1207
 *
 * @deprecated Use ped.setPopControlSphereThisFrame() instead
 */
export declare function setPopControlSphereThisFrame(): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
 *
 * flags:
 * enum eRagdollBlockingFlags
 * {
 * RBF_BULLET_IMPACT = (1 << 0),
 * RBF_VEHICLE_IMPACT = (1 << 1),
 * RBF_FIRE = (1 << 2),
 * RBF_ELECTROCUTION = (1 << 3),
 * RBF_PLAYER_IMPACT = (1 << 4),
 * RBF_EXPLOSION = (1 << 5),
 * RBF_IMPACT_OBJECT = (1 << 6),
 * RBF_MELEE = (1 << 7),
 * RBF_RUBBER_BULLET = (1 << 8),
 * RBF_FALLING = (1 << 9),
 * RBF_WATER_JET = (1 << 10),
 * RBF_DROWNING = (1 << 11),
 * RBF_0x9F52E2C4 = (1 << 12),
 * RBF_PLAYER_BUMP = (1 << 13),
 * RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
 * RBF_PED_RAGDOLL_BUMP = (1 << 15),
 * RBF_VEHICLE_GRAB = (1 << 16),
 * RBF_SMOKE_GRENADE = (1 << 17),
 * RBF_HORSE_BUMP = (1 << 18),
 * RBF_ACTIVATE_ON_COLLISION = (1 << 19)
 * };
 *
 * Hash: 0x26695EC767728D84 | Since: 1207
 *
 * @deprecated Use ped.setRagdollBlockingFlags() instead
 */
export declare function setRagdollBlockingFlags(ped: number | Ped, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBF25EB89375A37AD | Since: 1207
 *
 * @deprecated Use ped.setRelationshipBetweenGroups() instead
 */
export declare function setRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x7A556143A1C03898 | Since: 1207
 *
 * @deprecated Use ped.setScenarioPedDensityMultiplierThisFrame() instead
 */
export declare function setScenarioPedDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFEE4A5459472A9F8 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsCancelSearch() instead
 */
export declare function spawnpointsCancelSearch(): void;
/**
 * No comment provided
 *
 * Hash: 0xA635C11B8C44AFC2 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsGetNumSearchResults() instead
 */
export declare function spawnpointsGetNumSearchResults(): number;
/**
 * No comment provided
 *
 * Hash: 0x280C7E3AC7F56E90 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsGetSearchResult() instead
 */
export declare function spawnpointsGetSearchResult(randomInt: number, x: number, y: any, z: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB782F8238512BAD5 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsGetSearchResultFlags() instead
 */
export declare function spawnpointsGetSearchResultFlags(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C67506996001F5E | Since: 1207
 *
 * @deprecated Use ped.spawnpointsIsSearchActive() instead
 */
export declare function spawnpointsIsSearchActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA586FBEB32A53DBB | Since: 1207
 *
 * @deprecated Use ped.spawnpointsIsSearchComplete() instead
 */
export declare function spawnpointsIsSearchComplete(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF445DE8DA80A1792 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsIsSearchFailed() instead
 */
export declare function spawnpointsIsSearchFailed(): boolean;
/**
 * Params: p4 = 35.f, duration = 5000 in R* Scripts
 *
 * Hash: 0x2DF9038C90AD5264 | Since: 1207
 *
 * @deprecated Use ped.spawnpointsStartSearch() instead
 */
export declare function spawnpointsStartSearch(pos: Vector3, width: number, spawnpointsFlag: number, duration: number): void;
/**
 * Searching area between coords 1 and 2
 *
 * Hash: 0xB2AFF10216DEFA2F | Since: 1207
 *
 * @deprecated Use ped.spawnpointsStartSearchInAngledArea() instead
 */
export declare function spawnpointsStartSearchInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, spawnpointsFlag: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF9ACF4A08098EA25 | Since: 1207
 *
 * @deprecated Use ped.specialFunctionDoNotUse() instead
 */
export declare function specialFunctionDoNotUse(ped: number | Ped): void;
/**
 * Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
 *
 * Hash: 0x285D36C5C72B0569 | Since: 1207
 *
 * @deprecated Use ped.timeSincePedLastShot() instead
 */
export declare function timeSincePedLastShot(ped: number | Ped): number;
/**
 * If toggle is true, when the ped is using a scenario he will stop it and become scared
 * If toggle is false, the ped will not be scared anymore and continue his scenario
 *
 * Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
 *
 * Hash: 0x9A77DFD295E29B09 | Since: 1207
 *
 * @deprecated Use ped.toggleScenarioPedCowerInPlace() instead
 */
export declare function toggleScenarioPedCowerInPlace(ped: number | Ped, toggle: boolean): void;
/**
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 *
 * Hash: 0x11B499C1E0FF8559 | Since: 1207
 *
 * @deprecated Use ped.wasPedSkeletonUpdated() instead
 */
export declare function wasPedSkeletonUpdated(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00B380FF2DF6AB7A | Since: 1207
 *
 * @deprecated Use ped._0x00B380FF2DF6AB7A() instead
 */
export declare function _0x00B380FF2DF6AB7A(): void;
/**
 * No comment provided
 *
 * Hash: 0x0105FEE8F9091255 | Since: 1207
 *
 * @deprecated Use ped._0x0105FEE8F9091255() instead
 */
export declare function _0x0105FEE8F9091255(): any;
/**
 * No comment provided
 *
 * Hash: 0x024EC9B649111915 | Since: 1207
 *
 * @deprecated Use ped._0x024EC9B649111915() instead
 */
export declare function _0x024EC9B649111915(ped: number | Ped): void;
/**
 * _SET_ST* - _SET_SW*
 *
 * Hash: 0x028E7B3BBA0BD2FC | Since: 1207
 *
 * @deprecated Use ped._0x028E7B3BBA0BD2FC() instead
 */
export declare function _0x028E7B3BBA0BD2FC(ped: number | Ped): void;
/**
 * _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
 *
 * Hash: 0x02E741E19E39628C | Since: 1207
 *
 * @deprecated Use ped._0x02E741E19E39628C() instead
 */
export declare function _0x02E741E19E39628C(ped: number | Ped): void;
/**
 * _DOES_GROUP_* - _DOES_N*
 *
 * Hash: 0x0455546F23FF08E4 | Since: 1207
 *
 * @deprecated Use ped._0x0455546F23FF08E4() instead
 */
export declare function _0x0455546F23FF08E4(groupId: number): boolean;
/**
 * _GET_PED_D*
 *
 * Hash: 0x06A10B4D7F50B0C3 | Since: 1207
 *
 * @deprecated Use ped._0x06A10B4D7F50B0C3() instead
 */
export declare function _0x06A10B4D7F50B0C3(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x070A3841406C43D5 | Since: 1207
 *
 * @deprecated Use ped._0x070A3841406C43D5() instead
 */
export declare function _0x070A3841406C43D5(): void;
/**
 * No comment provided
 *
 * Hash: 0x07EA5B053FA60AC7 | Since: 1207
 *
 * @deprecated Use ped._0x07EA5B053FA60AC7() instead
 */
export declare function _0x07EA5B053FA60AC7(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x09171A6F8FDE5DC1 | Since: 1207
 *
 * @deprecated Use ped._0x09171A6F8FDE5DC1() instead
 */
export declare function _0x09171A6F8FDE5DC1(): void;
/**
 * No comment provided
 *
 * Hash: 0x095C2277FED731DB | Since: 1207
 *
 * @deprecated Use ped._0x095C2277FED731DB() instead
 */
export declare function _0x095C2277FED731DB(): any;
/**
 * No comment provided
 *
 * Hash: 0x09D7AFD3716DA8E1 | Since: 1207
 *
 * @deprecated Use ped._0x09D7AFD3716DA8E1() instead
 */
export declare function _0x09D7AFD3716DA8E1(ped: number | Ped): boolean;
/**
 * _TOGGLE_S* - _UPDATE_*
 *
 * Hash: 0x09E378C52B1433B5 | Since: 1207
 *
 * @deprecated Use ped.togglePlayerPedFlinch() instead
 */
export declare function togglePlayerPedFlinch(ped: number | Ped, pos: Vector3, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A4618FFD517E24D | Since: 1207
 *
 * @deprecated Use ped._0x0A4618FFD517E24D() instead
 */
export declare function _0x0A4618FFD517E24D(): void;
/**
 * No comment provided
 *
 * Hash: 0x0ADA3EC589E1736E | Since: 1207
 *
 * @deprecated Use ped._0x0ADA3EC589E1736E() instead
 */
export declare function _0x0ADA3EC589E1736E(): void;
/**
 * No comment provided
 *
 * Hash: 0x0B787A37EEDD226F | Since: 1311
 *
 * @deprecated Use ped._0x0B787A37EEDD226F() instead
 */
export declare function _0x0B787A37EEDD226F(): void;
/**
 * _IS_PED_M*
 *
 * Hash: 0x0D3B1568917EBDA0 | Since: 1207
 *
 * @deprecated Use ped._0x0D3B1568917EBDA0() instead
 */
export declare function _0x0D3B1568917EBDA0(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0D497AA69059FE40 | Since: 1207
 *
 * @deprecated Use ped._0x0D497AA69059FE40() instead
 */
export declare function _0x0D497AA69059FE40(): void;
/**
 * _CAN_PED_B* - _CAN_PED_I*
 *
 * Hash: 0x0EA9EACBA3B01601 | Since: 1207
 *
 * @deprecated Use ped._0x0EA9EACBA3B01601() instead
 */
export declare function _0x0EA9EACBA3B01601(ped1: number | Ped, ped2: number | Ped): number;
/**
 * _IS_PED_L* - _IS_PED_M*
 *
 * Hash: 0x0EEF7A81C17679DB | Since: 1207
 *
 * @deprecated Use ped._0x0EEF7A81C17679DB() instead
 */
export declare function _0x0EEF7A81C17679DB(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F967019CC853BCC | Since: 1207
 *
 * @deprecated Use ped._0x0F967019CC853BCC() instead
 */
export declare function _0x0F967019CC853BCC(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FB1BA7FF73B41E1 | Since: 1207
 *
 * @deprecated Use ped._0x0FB1BA7FF73B41E1() instead
 */
export declare function _0x0FB1BA7FF73B41E1(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FFDF937E5C11382 | Since: 1207
 *
 * @deprecated Use ped._0x0FFDF937E5C11382() instead
 */
export declare function _0x0FFDF937E5C11382(): void;
/**
 * No comment provided
 *
 * Hash: 0x101B45C5F56D970F | Since: 1207
 *
 * @deprecated Use ped._0x101B45C5F56D970F() instead
 */
export declare function _0x101B45C5F56D970F(ped: number | Ped, damageCleanliness: number): boolean;
/**
 * NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
 *
 * Hash: 0x10F96086123B939F | Since: 1207
 *
 * @deprecated Use ped._0x10F96086123B939F() instead
 */
export declare function _0x10F96086123B939F(legendaryPed: number | Ped, preyPed: number | Ped): void;
/**
 * _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
 *
 * Hash: 0x1148F706CF4EBDDA | Since: 1207
 *
 * @deprecated Use ped._0x1148F706CF4EBDDA() instead
 */
export declare function _0x1148F706CF4EBDDA(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1298B3D8E4C2409F | Since: 1207
 *
 * @deprecated Use ped._0x1298B3D8E4C2409F() instead
 */
export declare function _0x1298B3D8E4C2409F(): void;
/**
 * _GET_IS_PED_(BLEEDING_OUT?)*
 *
 * Hash: 0x12EB4E31F092C9B3 | Since: 1207
 *
 * @deprecated Use ped._0x12EB4E31F092C9B3() instead
 */
export declare function _0x12EB4E31F092C9B3(ped: number | Ped): boolean;
/**
 * _SET_A* - _SET_B*
 *
 * Hash: 0x12F2D161BF4031FC | Since: 1207
 *
 * @deprecated Use ped._0x12F2D161BF4031FC() instead
 */
export declare function _0x12F2D161BF4031FC(ped: number | Ped): void;
/**
 * _GET_PED_M*
 *
 * Hash: 0x134775B093AD5C38 | Since: 1207
 *
 * @deprecated Use ped._0x134775B093AD5C38() instead
 */
export declare function _0x134775B093AD5C38(ped: number | Ped): number;
/**
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * Hash: 0x154B7E841AC7412F | Since: 1207
 *
 * @deprecated Use ped._0x154B7E841AC7412F() instead
 */
export declare function _0x154B7E841AC7412F(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x15F4732C357B1D6D | Since: 1207
 *
 * @deprecated Use ped._0x15F4732C357B1D6D() instead
 */
export declare function _0x15F4732C357B1D6D(): void;
/**
 * No comment provided
 *
 * Hash: 0x16802C32B2FCA06B | Since: 1207
 *
 * @deprecated Use ped._0x16802C32B2FCA06B() instead
 */
export declare function _0x16802C32B2FCA06B(): void;
/**
 * _PED_COWER_M*
 *
 * Hash: 0x16F798A05BB9E3B5 | Since: 1207
 *
 * @deprecated Use ped._0x16F798A05BB9E3B5() instead
 */
export declare function _0x16F798A05BB9E3B5(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1D23D3F70606D788 | Since: 1207
 *
 * @deprecated Use ped._0x1D23D3F70606D788() instead
 */
export declare function _0x1D23D3F70606D788(): void;
/**
 * _SET_PED_CA* - _SET_PED_CO*
 *
 * Hash: 0x1D4636C90BBEFACB | Since: 1207
 *
 * @deprecated Use ped._0x1D4636C90BBEFACB() instead
 */
export declare function _0x1D4636C90BBEFACB(ped: number | Ped): void;
/**
 * something to do with speech lines?
 * some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
 *
 * Hash: 0x1E017404784AA6A3 | Since: 1207
 *
 * @deprecated Use ped._0x1E017404784AA6A3() instead
 */
export declare function _0x1E017404784AA6A3(ped: number | Ped): boolean;
/**
 * Only used in SP R* Scripts
 * Params: p2 = same as p2 of 0x3C529A827998F9B3
 * _SET_PED_TA* - _SET_PED_TO_*
 *
 * Hash: 0x1F44B7E283C09EDE | Since: 1207
 *
 * @deprecated Use ped._0x1F44B7E283C09EDE() instead
 */
export declare function _0x1F44B7E283C09EDE(ped: number | Ped): void;
/**
 * Apply cold intensity to ped from 0.0 to 1.0
 *
 * Hash: 0x1F8215D0E446F593 | Since: 1207
 *
 * @deprecated Use ped.applyColdToPed() instead
 */
export declare function applyColdToPed(ped: number | Ped, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2371C39D4F91C288 | Since: 1207
 *
 * @deprecated Use ped._0x2371C39D4F91C288() instead
 */
export declare function _0x2371C39D4F91C288(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x23BDE06596A22CEC | Since: 1207
 *
 * @deprecated Use ped._0x23BDE06596A22CEC() instead
 */
export declare function _0x23BDE06596A22CEC(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x242EDF85D4E87B65 | Since: 1207
 *
 * @deprecated Use ped._0x242EDF85D4E87B65() instead
 */
export declare function _0x242EDF85D4E87B65(): any;
/**
 * _IS_PED_FL* - _IS_PED_FU*
 *
 * Hash: 0x256EDD55C6BE1482 | Since: 1207
 *
 * @deprecated Use ped._0x256EDD55C6BE1482() instead
 */
export declare function _0x256EDD55C6BE1482(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x273915CE30780986 | Since: 1207
 *
 * @deprecated Use ped._0x273915CE30780986() instead
 */
export declare function _0x273915CE30780986(): any;
/**
 * No comment provided
 *
 * Hash: 0x27E8A84C12B0B7D1 | Since: 1207
 *
 * @deprecated Use ped._0x27E8A84C12B0B7D1() instead
 */
export declare function _0x27E8A84C12B0B7D1(): any;
/**
 * No comment provided
 *
 * Hash: 0x28508173C6A7CC18 | Since: 1311
 *
 * @deprecated Use ped._0x28508173C6A7CC18() instead
 */
export declare function _0x28508173C6A7CC18(): void;
/**
 * _IS_PED_L* - _IS_PED_M*
 *
 * Hash: 0x290B2E6CCDE532E1 | Since: 1207
 *
 * @deprecated Use ped._0x290B2E6CCDE532E1() instead
 */
export declare function _0x290B2E6CCDE532E1(ped: number | Ped): boolean;
/**
 * _SET_PED_K* or _SET_PED_L*
 *
 * Hash: 0x29924EB8EE9DB926 | Since: 1207
 *
 * @deprecated Use ped._0x29924EB8EE9DB926() instead
 */
export declare function _0x29924EB8EE9DB926(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x29F3539189D3E277 | Since: 1207
 *
 * @deprecated Use ped._0x29F3539189D3E277() instead
 */
export declare function _0x29F3539189D3E277(): void;
/**
 * No comment provided
 *
 * Hash: 0x2B4CE170DE09F346 | Since: 1207
 *
 * @deprecated Use ped._0x2B4CE170DE09F346() instead
 */
export declare function _0x2B4CE170DE09F346(ped: number | Ped): void;
/**
 * Used in Script Function CHECK_IS_PLAYER_SEEN
 * _GET_PED_*
 *
 * Hash: 0x2BA9D7BF629F920C | Since: 1207
 *
 * @deprecated Use ped._0x2BA9D7BF629F920C() instead
 */
export declare function _0x2BA9D7BF629F920C(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x2D976DBDC731DF80 | Since: 1207
 *
 * @deprecated Use ped._0x2D976DBDC731DF80() instead
 */
export declare function _0x2D976DBDC731DF80(ped: number | Ped): void;
/**
 * _IS_PED_D*
 *
 * Hash: 0x2DC0E8DCBD3546E9 | Since: 1207
 *
 * @deprecated Use ped._0x2DC0E8DCBD3546E9() instead
 */
export declare function _0x2DC0E8DCBD3546E9(ped: number | Ped): boolean;
/**
 * _IS_PED_M* - _IS_PED_O*
 *
 * Hash: 0x2DD4E0E26DFAD97D | Since: 1207
 *
 * @deprecated Use ped._0x2DD4E0E26DFAD97D() instead
 */
export declare function _0x2DD4E0E26DFAD97D(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E5B5D1F1453E08E | Since: 1207
 *
 * @deprecated Use ped._0x2E5B5D1F1453E08E() instead
 */
export declare function _0x2E5B5D1F1453E08E(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2FA568BFA725F8D6 | Since: 1207
 *
 * @deprecated Use ped._0x2FA568BFA725F8D6() instead
 */
export declare function _0x2FA568BFA725F8D6(): void;
/**
 * _GET_SHOP_ITEM_NUM_*? returns a number of ? p1 seems to be always joaat("base")
 *
 * Hash: 0x31B2E7F2E3C58B89 | Since: 1207
 *
 * @deprecated Use ped._0x31B2E7F2E3C58B89() instead
 */
export declare function _0x31B2E7F2E3C58B89(componentHash: number | string, metapedType: number, isMP: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x32417CB860A3BDC4 | Since: 1207
 *
 * @deprecated Use ped._0x32417CB860A3BDC4() instead
 */
export declare function _0x32417CB860A3BDC4(): any;
/**
 * Only used in R* SP Script short_update
 * _GET_TARGET_* - _GET_TRACKED*
 *
 * Hash: 0x326F7951EF0D7F75 | Since: 1207
 *
 * @deprecated Use ped._0x326F7951EF0D7F75() instead
 */
export declare function _0x326F7951EF0D7F75(ped: number | Ped, eventType: number | string): any;
/**
 * _SET_PED_P* - _SET_PED_R*
 *
 * Hash: 0x329772C47DBB2FBC | Since: 1207
 *
 * @deprecated Use ped._0x329772C47DBB2FBC() instead
 */
export declare function _0x329772C47DBB2FBC(ped: number | Ped): void;
/**
 * _STOP_(?)*
 *
 * Hash: 0x32CCAD8A981B53D3 | Since: 1207
 *
 * @deprecated Use ped._0x32CCAD8A981B53D3() instead
 */
export declare function _0x32CCAD8A981B53D3(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x32CEDA9A0AB4CEF7 | Since: 1207
 *
 * @deprecated Use ped._0x32CEDA9A0AB4CEF7() instead
 */
export declare function _0x32CEDA9A0AB4CEF7(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x34B5CEAC180A5D6E | Since: 1207
 *
 * @deprecated Use ped._0x34B5CEAC180A5D6E() instead
 */
export declare function _0x34B5CEAC180A5D6E(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x34C11114887150FD | Since: 1207
 *
 * @deprecated Use ped._0x34C11114887150FD() instead
 */
export declare function _0x34C11114887150FD(): void;
/**
 * No comment provided
 *
 * Hash: 0x34EDDD59364AD74A | Since: 1207
 *
 * @deprecated Use ped._0x34EDDD59364AD74A() instead
 */
export declare function _0x34EDDD59364AD74A(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x354CA4DDDEEC397A | Since: 1207
 *
 * @deprecated Use ped._0x354CA4DDDEEC397A() instead
 */
export declare function _0x354CA4DDDEEC397A(ped: number | Ped): number;
/**
 * Seems to set the peds stamina to 30%
 *
 * Hash: 0x36513AFFC703C60D | Since: 1207
 *
 * @deprecated Use ped.resetPedStamina() instead
 */
export declare function resetPedStamina(ped: number | Ped): void;
/**
 * _RESET_PED_*
 *
 * Hash: 0x370A973252741AC4 | Since: 1207
 *
 * @deprecated Use ped._0x370A973252741AC4() instead
 */
export declare function _0x370A973252741AC4(ped: number | Ped): void;
/**
 * _SET_PED_MO*
 *
 * Hash: 0x3A5697B80FED5EBE | Since: 1207
 *
 * @deprecated Use ped._0x3A5697B80FED5EBE() instead
 */
export declare function _0x3A5697B80FED5EBE(ped: number | Ped): void;
/**
 * Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
 * Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
 * Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
 * _GET_NUM_M* - _GET_PEDS_J*
 *
 * Hash: 0x3ACCE14DFA6BA8C2 | Since: 1207
 *
 * @deprecated Use ped._0x3ACCE14DFA6BA8C2() instead
 */
export declare function _0x3ACCE14DFA6BA8C2(ped: number | Ped, pos: Vector3, itemset: any): number;
/**
 * _IS_PED_R*
 *
 * Hash: 0x3AEC4A410ECAF30D | Since: 1207
 *
 * @deprecated Use ped._0x3AEC4A410ECAF30D() instead
 */
export declare function _0x3AEC4A410ECAF30D(ped: number | Ped): boolean;
/**
 * _SET_PED_TA* - _SET_PED_TO_*
 *
 * Hash: 0x3C529A827998F9B3 | Since: 1207
 *
 * @deprecated Use ped._0x3C529A827998F9B3() instead
 */
export declare function _0x3C529A827998F9B3(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3D9F958834AB9C30 | Since: 1207
 *
 * @deprecated Use ped._0x3D9F958834AB9C30() instead
 */
export declare function _0x3D9F958834AB9C30(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x3EFED081B4834BA1 | Since: 1232
 *
 * @deprecated Use ped._0x3EFED081B4834BA1() instead
 */
export declare function _0x3EFED081B4834BA1(): void;
/**
 * Used for script function PROCESS_PLAYER_HAT_EVENT
 * Returns requestId to be used with 0x13E7320C762F0477
 *
 * Hash: 0x3FCBB5FCFD968698 | Since: 1207
 *
 * @deprecated Use ped._0x3FCBB5FCFD968698() instead
 */
export declare function _0x3FCBB5FCFD968698(drawable: number | string, albedo: number | string, normal: number | string, material: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3FDBB99EFD8CE4AF | Since: 1207
 *
 * @deprecated Use ped._0x3FDBB99EFD8CE4AF() instead
 */
export declare function _0x3FDBB99EFD8CE4AF(): void;
/**
 * Changes health bar around heart core icon
 * INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
 * INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
 * _SET_D*
 *
 * Hash: 0x3FDCC1F8C17E303E | Since: 1207
 *
 * @deprecated Use ped._0x3FDCC1F8C17E303E() instead
 */
export declare function _0x3FDCC1F8C17E303E(ped: number | Ped): void;
/**
 * _SET_PED_A*
 *
 * Hash: 0x405180B14DA5A935 | Since: 1207
 *
 * @deprecated Use ped._0x405180B14DA5A935() instead
 */
export declare function _0x405180B14DA5A935(ped: number | Ped): void;
/**
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * Hash: 0x40C3524D4ED83554 | Since: 1207
 *
 * @deprecated Use ped._0x40C3524D4ED83554() instead
 */
export declare function _0x40C3524D4ED83554(groupId: number): void;
/**
 * _IS_PED_RE*
 *
 * Hash: 0x40C9155AF8BC13F3 | Since: 1207
 *
 * @deprecated Use ped._0x40C9155AF8BC13F3() instead
 */
export declare function _0x40C9155AF8BC13F3(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x413697EC260AABBF | Since: 1207
 *
 * @deprecated Use ped._0x413697EC260AABBF() instead
 */
export declare function _0x413697EC260AABBF(): void;
/**
 * _SET_PED_IN*
 *
 * Hash: 0x41C23A8E6B344867 | Since: 1207
 *
 * @deprecated Use ped._0x41C23A8E6B344867() instead
 */
export declare function _0x41C23A8E6B344867(ped: number | Ped): void;
/**
 * _SET_PED_IN*
 *
 * Hash: 0x45FEA6D5539BD474 | Since: 1207
 *
 * @deprecated Use ped._0x45FEA6D5539BD474() instead
 */
export declare function _0x45FEA6D5539BD474(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4642182A298187D0 | Since: 1207
 *
 * @deprecated Use ped._0x4642182A298187D0() instead
 */
export declare function _0x4642182A298187D0(ped: number | Ped): number;
/**
 * Returns vehicle (desired) speed
 * _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
 *
 * Hash: 0x46BF2A810679D6E6 | Since: 1207
 *
 * @deprecated Use ped._0x46BF2A810679D6E6() instead
 */
export declare function _0x46BF2A810679D6E6(ped: number | Ped, maxMoveBlendRatio: number): number;
/**
 * No comment provided
 *
 * Hash: 0x49DADFC4CD808B0A | Since: 1207
 *
 * @deprecated Use ped._0x49DADFC4CD808B0A() instead
 */
export declare function _0x49DADFC4CD808B0A(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B19F171450E0D4F | Since: 1207
 *
 * @deprecated Use ped._0x4B19F171450E0D4F() instead
 */
export declare function _0x4B19F171450E0D4F(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4E68C7EF706DF35D | Since: 1207
 *
 * @deprecated Use ped._0x4E68C7EF706DF35D() instead
 */
export declare function _0x4E68C7EF706DF35D(ped: number | Ped, pos: Vector3, relationshipGroup: number | string): void;
/**
 * _SET_PED_A*
 *
 * Hash: 0x4EC4EA2F72B36358 | Since: 1207
 *
 * @deprecated Use ped._0x4EC4EA2F72B36358() instead
 */
export declare function _0x4EC4EA2F72B36358(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4F27603E44A8E4C0 | Since: 1207
 *
 * @deprecated Use ped._0x4F27603E44A8E4C0() instead
 */
export declare function _0x4F27603E44A8E4C0(ped: number | Ped): void;
/**
 * Only used in R* Script shop_harriet
 * _SET_PED_F*
 *
 * Hash: 0x4F63433CE3C08230 | Since: 1311
 *
 * @deprecated Use ped._0x4F63433CE3C08230() instead
 */
export declare function _0x4F63433CE3C08230(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5203038FF8BAE577 | Since: 1207
 *
 * @deprecated Use ped._0x5203038FF8BAE577() instead
 */
export declare function _0x5203038FF8BAE577(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52250B92EA70BE3D | Since: 1207
 *
 * @deprecated Use ped._0x52250B92EA70BE3D() instead
 */
export declare function _0x52250B92EA70BE3D(): any;
/**
 * No comment provided
 *
 * Hash: 0x52A24D8A1DA89658 | Since: 1207
 *
 * @deprecated Use ped._0x52A24D8A1DA89658() instead
 */
export declare function _0x52A24D8A1DA89658(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x53BA7D96B9A421D9 | Since: 1207
 *
 * @deprecated Use ped._0x53BA7D96B9A421D9() instead
 */
export declare function _0x53BA7D96B9A421D9(): void;
/**
 * No comment provided
 *
 * Hash: 0x54D3CD482742C482 | Since: 1355
 *
 * @deprecated Use ped._0x54D3CD482742C482() instead
 */
export declare function _0x54D3CD482742C482(animal: number | Ped): void;
/**
 * _HAS_PED_*
 *
 * Hash: 0x550CB89DD7F4FA3D | Since: 1207
 *
 * @deprecated Use ped._0x550CB89DD7F4FA3D() instead
 */
export declare function _0x550CB89DD7F4FA3D(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x55546004A244302A | Since: 1207
 *
 * @deprecated Use ped._0x55546004A244302A() instead
 */
export declare function _0x55546004A244302A(): void;
/**
 * No comment provided
 *
 * Hash: 0x56076667E7C2DCD6 | Since: 1311
 *
 * @deprecated Use ped._0x56076667E7C2DCD6() instead
 */
export declare function _0x56076667E7C2DCD6(): void;
/**
 * No comment provided
 *
 * Hash: 0x56E4BAD93D33453C | Since: 1207
 *
 * @deprecated Use ped._0x56E4BAD93D33453C() instead
 */
export declare function _0x56E4BAD93D33453C(): any;
/**
 * _IS_PED_C* - _IS_PED_D*
 *
 * Hash: 0x577C60BA06D0EA64 | Since: 1207
 *
 * @deprecated Use ped._0x577C60BA06D0EA64() instead
 */
export declare function _0x577C60BA06D0EA64(ped: number | Ped): boolean;
/**
 * _SET_PED_M*
 *
 * Hash: 0x57F35552E771BE9D | Since: 1207
 *
 * @deprecated Use ped._0x57F35552E771BE9D() instead
 */
export declare function _0x57F35552E771BE9D(ped: number | Ped): void;
/**
 * seems to only work with PD_Vomit ?
 *
 * Hash: 0x58D32261AE0F0843 | Since: 1207
 *
 * @deprecated Use ped.applyPedDamagePackToBone() instead
 */
export declare function applyPedDamagePackToBone(ped: number | Ped, boneId: number, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, damagePack: string): void;
/**
 * _C*
 *
 * Hash: 0x5A1A929C8B729B4A | Since: 1207
 *
 * @deprecated Use ped._0x5A1A929C8B729B4A() instead
 */
export declare function _0x5A1A929C8B729B4A(ped: number | Ped): void;
/**
 * _SET_C*
 *
 * Hash: 0x5AF24CA9C974E51A | Since: 1207
 *
 * @deprecated Use ped._0x5AF24CA9C974E51A() instead
 */
export declare function _0x5AF24CA9C974E51A(ped1: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5B73975B4F12F7F3 | Since: 1207
 *
 * @deprecated Use ped._0x5B73975B4F12F7F3() instead
 */
export declare function _0x5B73975B4F12F7F3(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BB04BC74A474B47 | Since: 1207
 *
 * @deprecated Use ped._0x5BB04BC74A474B47() instead
 */
export declare function _0x5BB04BC74A474B47(): void;
/**
 * _IS_PED_B* - _IS_PED_C*
 *
 * Hash: 0x5BF0B9D9A8E227A0 | Since: 1207
 *
 * @deprecated Use ped._0x5BF0B9D9A8E227A0() instead
 */
export declare function _0x5BF0B9D9A8E227A0(ped: number | Ped): boolean;
/**
 * _IS_PED_IN*
 *
 * Hash: 0x5C6C7C70CA302801 | Since: 1207
 *
 * @deprecated Use ped._0x5C6C7C70CA302801() instead
 */
export declare function _0x5C6C7C70CA302801(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C90E20C25E6D83C | Since: 1207
 *
 * @deprecated Use ped._0x5C90E20C25E6D83C() instead
 */
export declare function _0x5C90E20C25E6D83C(): void;
/**
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
 *
 * Hash: 0x5CA20FBE49891BBD | Since: 1207
 *
 * @deprecated Use ped._0x5CA20FBE49891BBD() instead
 */
export declare function _0x5CA20FBE49891BBD(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5CB2EBB467BE3ED6 | Since: 1355
 *
 * @deprecated Use ped._0x5CB2EBB467BE3ED6() instead
 */
export declare function _0x5CB2EBB467BE3ED6(animal: number | Ped): void;
/**
 * Related to ped hat
 * _SET_PED_LA* - _SET_PED_LE*
 *
 * Hash: 0x5D4CD22A8C82A81A | Since: 1207
 *
 * @deprecated Use ped._0x5D4CD22A8C82A81A() instead
 */
export declare function _0x5D4CD22A8C82A81A(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5DA36CCCB63C0895 | Since: 1207
 *
 * @deprecated Use ped._0x5DA36CCCB63C0895() instead
 */
export declare function _0x5DA36CCCB63C0895(): any;
/**
 * Only used in R* SP Scripts
 * _GET_PED_IN*
 *
 * Hash: 0x5E9FAF6C513347B4 | Since: 1207
 *
 * @deprecated Use ped._0x5E9FAF6C513347B4() instead
 */
export declare function _0x5E9FAF6C513347B4(ped: number | Ped, eventType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5EFA8A3D8A60D662 | Since: 1207
 *
 * @deprecated Use ped._0x5EFA8A3D8A60D662() instead
 */
export declare function _0x5EFA8A3D8A60D662(): any;
/**
 * No comment provided
 *
 * Hash: 0x5FCF25D584065BFD | Since: 1207
 *
 * @deprecated Use ped._0x5FCF25D584065BFD() instead
 */
export declare function _0x5FCF25D584065BFD(): void;
/**
 * Not implemented.
 *
 * Hash: 0x600BBDD29820370C | Since: 1207
 *
 * @deprecated Use ped._0x600BBDD29820370C() instead
 */
export declare function _0x600BBDD29820370C(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x604E1010E3162E86 | Since: 1207
 *
 * @deprecated Use ped._0x604E1010E3162E86() instead
 */
export declare function _0x604E1010E3162E86(): void;
/**
 * Not implemented.
 *
 * Hash: 0x606D529DADA3C940 | Since: 1207
 *
 * @deprecated Use ped._0x606D529DADA3C940() instead
 */
export declare function _0x606D529DADA3C940(ped: number | Ped): void;
/**
 * Returns p1 value for 0x8E84119A23C16623,  get index outfit using GET_NUM_META_PED_OUTFITS
 *
 * Hash: 0x62FDF4E678E40CC6 | Since: 1207
 *
 * @deprecated Use ped.getMetapedOutfitByIndex() instead
 */
export declare function getMetapedOutfitByIndex(entity: number | Entity, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x633F83B301C87994 | Since: 1207
 *
 * @deprecated Use ped._0x633F83B301C87994() instead
 */
export declare function _0x633F83B301C87994(): void;
/**
 * _SET_PED_M*
 *
 * Hash: 0x642720D8D69328B6 | Since: 1207
 *
 * @deprecated Use ped._0x642720D8D69328B6() instead
 */
export declare function _0x642720D8D69328B6(ped: number | Ped): void;
/**
 * _IS_N* - _IS_P*
 *
 * Hash: 0x6507AC3BD7C99009 | Since: 1207
 *
 * @deprecated Use ped._0x6507AC3BD7C99009() instead
 */
export declare function _0x6507AC3BD7C99009(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6734F0A6A52C371C | Since: 1207
 *
 * @deprecated Use ped._0x6734F0A6A52C371C() instead
 */
export declare function _0x6734F0A6A52C371C(player: number | string | Player, horseSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6A190B94C2541A99 | Since: 1207
 *
 * @deprecated Use ped._0x6A190B94C2541A99() instead
 */
export declare function _0x6A190B94C2541A99(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A489892E813951A | Since: 1207
 *
 * @deprecated Use ped._0x6A489892E813951A() instead
 */
export declare function _0x6A489892E813951A(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B67320E0D57856A | Since: 1207
 *
 * @deprecated Use ped._0x6B67320E0D57856A() instead
 */
export declare function _0x6B67320E0D57856A(ped: number | Ped): void;
/**
 * Only used in R* SP Script winter1: p1 = 5000
 * _SET_PED_M*
 *
 * Hash: 0x6DB875AFC584FA32 | Since: 1207
 *
 * @deprecated Use ped._0x6DB875AFC584FA32() instead
 */
export declare function _0x6DB875AFC584FA32(ped: number | Ped): any;
/**
 * Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
 *
 * Hash: 0x6E8B87139854022D | Since: 1207
 *
 * @deprecated Use ped._0x6E8B87139854022D() instead
 */
export declare function _0x6E8B87139854022D(ped: number | Ped, clipset: string): void;
/**
 * No comment provided
 *
 * Hash: 0x6F43C351A5D51E2F | Since: 1207
 *
 * @deprecated Use ped.getCarriedPeltSkins() instead
 */
export declare function getCarriedPeltSkins(mount: number | Ped, outData: any): number;
/**
 * No comment provided
 *
 * Hash: 0x6F46F8ACB44C4FC1 | Since: 1207
 *
 * @deprecated Use ped._0x6F46F8ACB44C4FC1() instead
 */
export declare function _0x6F46F8ACB44C4FC1(): any;
/**
 * _HAS_*
 *
 * Hash: 0x7020839C7302D8AC | Since: 1207
 *
 * @deprecated Use ped._0x7020839C7302D8AC() instead
 */
export declare function _0x7020839C7302D8AC(ped: number | Ped): boolean;
/**
 * _CLEAR*
 *
 * Hash: 0x704C908E9C405136 | Since: 1207
 *
 * @deprecated Use ped._0x704C908E9C405136() instead
 */
export declare function _0x704C908E9C405136(ped: number | Ped): void;
/**
 * _SET_PED_MO*
 *
 * Hash: 0x712B2C2B2471B493 | Since: 1207
 *
 * @deprecated Use ped._0x712B2C2B2471B493() instead
 */
export declare function _0x712B2C2B2471B493(ped: number | Ped): void;
/**
 * _SET_PED_F*
 *
 * Hash: 0x735662994E60A710 | Since: 1207
 *
 * @deprecated Use ped._0x735662994E60A710() instead
 */
export declare function _0x735662994E60A710(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7406C71F4AC2FFCC | Since: 1207
 *
 * @deprecated Use ped._0x7406C71F4AC2FFCC() instead
 */
export declare function _0x7406C71F4AC2FFCC(): void;
/**
 * No comment provided
 *
 * Hash: 0x758F081DB204DDDE | Since: 1207
 *
 * @deprecated Use ped._0x758F081DB204DDDE() instead
 */
export declare function _0x758F081DB204DDDE(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x75A082563B4452E5 | Since: 1207
 *
 * @deprecated Use ped._0x75A082563B4452E5() instead
 */
export declare function _0x75A082563B4452E5(): void;
/**
 * No comment provided
 *
 * Hash: 0x75D3333409CD33CE | Since: 1207
 *
 * @deprecated Use ped._0x75D3333409CD33CE() instead
 */
export declare function _0x75D3333409CD33CE(): void;
/**
 * Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
 *
 * Hash: 0x763FA8A9D76EE3A7 | Since: 1311
 *
 * @deprecated Use ped._0x763FA8A9D76EE3A7() instead
 */
export declare function _0x763FA8A9D76EE3A7(ped: number | Ped): number;
/**
 * _IS_I* - _IS_L*
 *
 * Hash: 0x77243ED4F7CAAA55 | Since: 1207
 *
 * @deprecated Use ped._0x77243ED4F7CAAA55() instead
 */
export declare function _0x77243ED4F7CAAA55(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7ABBD9E449E0DB00 | Since: 1207
 *
 * @deprecated Use ped._0x7ABBD9E449E0DB00() instead
 */
export declare function _0x7ABBD9E449E0DB00(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7B5C293238EE4F20 | Since: 1207
 *
 * @deprecated Use ped._0x7B5C293238EE4F20() instead
 */
export declare function _0x7B5C293238EE4F20(): any;
/**
 * No comment provided
 *
 * Hash: 0x7BB810E8B343AC7B | Since: 1207
 *
 * @deprecated Use ped._0x7BB810E8B343AC7B() instead
 */
export declare function _0x7BB810E8B343AC7B(): any;
/**
 * Only used in SP
 * _SET_REMOVE_PED*
 *
 * Hash: 0x7C08E7CB8D951B70 | Since: 1207
 *
 * @deprecated Use ped._0x7C08E7CB8D951B70() instead
 */
export declare function _0x7C08E7CB8D951B70(ped: number | Ped): void;
/**
 * _CLEAR_PED_M*
 *
 * Hash: 0x7C10221CE718AA72 | Since: 1207
 *
 * @deprecated Use ped._0x7C10221CE718AA72() instead
 */
export declare function _0x7C10221CE718AA72(ped: number | Ped): void;
/**
 * Returns wether `0x1E017404784AA6A3` was applied on the ped.
 * some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
 *
 * Hash: 0x7C8AA850617651D9 | Since: 1207
 *
 * @deprecated Use ped._0x7C8AA850617651D9() instead
 */
export declare function _0x7C8AA850617651D9(ped: number | Ped): any;
/**
 * _SET_FORMATION_P*
 *
 * Hash: 0x7E5185B979706210 | Since: 1207
 *
 * @deprecated Use ped._0x7E5185B979706210() instead
 */
export declare function _0x7E5185B979706210(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7E8F9949B7AABBF0 | Since: 1207
 *
 * @deprecated Use ped._0x7E8F9949B7AABBF0() instead
 */
export declare function _0x7E8F9949B7AABBF0(): void;
/**
 * Only used in R* Script net_moonshine_property
 * _A* - _B*
 *
 * Hash: 0x7EDB3C766B0D073F | Since: 1232
 *
 * @deprecated Use ped._0x7EDB3C766B0D073F() instead
 */
export declare function _0x7EDB3C766B0D073F(ped: number | Ped): void;
/**
 * _IS_PED_H* - _IS_PED_I*
 *
 * Hash: 0x7EE3A8660F38797E | Since: 1207
 *
 * @deprecated Use ped._0x7EE3A8660F38797E() instead
 */
export declare function _0x7EE3A8660F38797E(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7F090958AE95B61B | Since: 1207
 *
 * @deprecated Use ped._0x7F090958AE95B61B() instead
 */
export declare function _0x7F090958AE95B61B(ped: number | Ped): boolean;
/**
 * _ATTACH_*
 *
 * Hash: 0x8101BA1C0B462412 | Since: 1207
 *
 * @deprecated Use ped._0x8101BA1C0B462412() instead
 */
export declare function _0x8101BA1C0B462412(ped: number | Ped, ropeId: number): void;
/**
 * _SET_PED_COMBAT_R - _SET_PED_C*
 *
 * Hash: 0x815C0074A1BC0D93 | Since: 1207
 *
 * @deprecated Use ped._0x815C0074A1BC0D93() instead
 */
export declare function _0x815C0074A1BC0D93(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x82CB0F3F0C7785E5 | Since: 1207
 *
 * @deprecated Use ped._0x82CB0F3F0C7785E5() instead
 */
export declare function _0x82CB0F3F0C7785E5(): any;
/**
 * No comment provided
 *
 * Hash: 0x851966E1E35AF491 | Since: 1207
 *
 * @deprecated Use ped._0x851966E1E35AF491() instead
 */
export declare function _0x851966E1E35AF491(): void;
/**
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_A*
 *
 * Hash: 0x85F500F4E24CA43E | Since: 1207
 *
 * @deprecated Use ped._0x85F500F4E24CA43E() instead
 */
export declare function _0x85F500F4E24CA43E(ped: number | Ped): void;
/**
 * _SET_PED_*
 *
 * Hash: 0x86F0B6730C32AC14 | Since: 1207
 *
 * @deprecated Use ped._0x86F0B6730C32AC14() instead
 */
export declare function _0x86F0B6730C32AC14(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x86FAFC18E3D4380C | Since: 1207
 *
 * @deprecated Use ped._0x86FAFC18E3D4380C() instead
 */
export declare function _0x86FAFC18E3D4380C(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x878E8104FA27CDAE | Since: 1207
 *
 * @deprecated Use ped._0x878E8104FA27CDAE() instead
 */
export declare function _0x878E8104FA27CDAE(vehicle: number | Vehicle): void;
/**
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 *
 * Hash: 0x87C2724A56F66020 | Since: 1207
 *
 * @deprecated Use ped._0x87C2724A56F66020() instead
 */
export declare function _0x87C2724A56F66020(ped: number | Ped): void;
/**
 * Only used in R* Script train_robbery4
 * _SET_PED_D*
 *
 * Hash: 0x8822F124788B8D0A | Since: 1207
 *
 * @deprecated Use ped._0x8822F124788B8D0A() instead
 */
export declare function _0x8822F124788B8D0A(ped: number | Ped): void;
/**
 * If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
 * _GET_D* - _GET_E*
 *
 * Hash: 0x8822F139408B8D0A | Since: 1207
 *
 * @deprecated Use ped._0x8822F139408B8D0A() instead
 */
export declare function _0x8822F139408B8D0A(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x88A5564B19C15391 | Since: 1207
 *
 * @deprecated Use ped._0x88A5564B19C15391() instead
 */
export declare function _0x88A5564B19C15391(ped: number | Ped): boolean;
/**
 * Used in R* Script generic_weight_control_item
 * _CLEAR_PED_E* - CLEAR_PED_(G?)L*
 *
 * Hash: 0x88A95BB640FC186F | Since: 1207
 *
 * @deprecated Use ped._0x88A95BB640FC186F() instead
 */
export declare function _0x88A95BB640FC186F(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x88B2026A3B0BE33D | Since: 1207
 *
 * @deprecated Use ped._0x88B2026A3B0BE33D() instead
 */
export declare function _0x88B2026A3B0BE33D(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x897934E868EDDD6C | Since: 1207
 *
 * @deprecated Use ped._0x897934E868EDDD6C() instead
 */
export declare function _0x897934E868EDDD6C(ped: number | Ped): void;
/**
 * _GET_PED_B* - _GET_PED_C*
 *
 * Hash: 0x89816B58C3466262 | Since: 1207
 *
 * @deprecated Use ped._0x89816B58C3466262() instead
 */
export declare function _0x89816B58C3466262(ped: number | Ped): any;
/**
 * _SET_PED_O*
 *
 * Hash: 0x899DFA0009AC93DE | Since: 1207
 *
 * @deprecated Use ped._0x899DFA0009AC93DE() instead
 */
export declare function _0x899DFA0009AC93DE(ped: number | Ped): void;
/**
 * _SET_C*
 *
 * Hash: 0x89E59DBD15E21177 | Since: 1207
 *
 * @deprecated Use ped._0x89E59DBD15E21177() instead
 */
export declare function _0x89E59DBD15E21177(groupId: number): void;
/**
 * _SET_PED_IN*
 *
 * Hash: 0x8AF46E5159A5B620 | Since: 1207
 *
 * @deprecated Use ped._0x8AF46E5159A5B620() instead
 */
export declare function _0x8AF46E5159A5B620(ped: number | Ped, speechParams: number | string): void;
/**
 * `Returns offset (0 < 32) to be used with MISC::SET_BIT`
 * _GET_PED_CR*
 *
 * Hash: 0x8AF8E647D6B2A649 | Since: 1207
 *
 * @deprecated Use ped._0x8AF8E647D6B2A649() instead
 */
export declare function _0x8AF8E647D6B2A649(groupId: number, ped: number | Ped): number;
/**
 * _SET_FORMATION_*
 *
 * Hash: 0x8AFCCC0F18D70018 | Since: 1207
 *
 * @deprecated Use ped._0x8AFCCC0F18D70018() instead
 */
export declare function _0x8AFCCC0F18D70018(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8BA0C65AC15A7D33 | Since: 1207
 *
 * @deprecated Use ped._0x8BA0C65AC15A7D33() instead
 */
export declare function _0x8BA0C65AC15A7D33(): void;
/**
 * Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
 *
 * Hash: 0x8BE24D74D74C6E9B | Since: 1207
 *
 * @deprecated Use ped._0x8BE24D74D74C6E9B() instead
 */
export declare function _0x8BE24D74D74C6E9B(ped: number | Ped): number;
/**
 * _SET_PED_T* - SET_PED_U*
 *
 * Hash: 0x8CB2553C559102C1 | Since: 1207
 *
 * @deprecated Use ped._0x8CB2553C559102C1() instead
 */
export declare function _0x8CB2553C559102C1(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8D9DB115FBA8E23D | Since: 1207
 *
 * @deprecated Use ped._0x8D9DB115FBA8E23D() instead
 */
export declare function _0x8D9DB115FBA8E23D(): void;
/**
 * Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
 * _GET_PED_*
 *
 * Hash: 0x900CA00CE703E1E2 | Since: 1207
 *
 * @deprecated Use ped._0x900CA00CE703E1E2() instead
 */
export declare function _0x900CA00CE703E1E2(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x9078FB0557364099 | Since: 1207
 *
 * @deprecated Use ped._0x9078FB0557364099() instead
 */
export declare function _0x9078FB0557364099(): void;
/**
 * _IS_PED_S* - _IS_PED_U*
 *
 * Hash: 0x913D04A5176F84C9 | Since: 1207
 *
 * @deprecated Use ped._0x913D04A5176F84C9() instead
 */
export declare function _0x913D04A5176F84C9(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9184788BFF1EDAD7 | Since: 1207
 *
 * @deprecated Use ped._0x9184788BFF1EDAD7() instead
 */
export declare function _0x9184788BFF1EDAD7(): void;
/**
 * No comment provided
 *
 * Hash: 0x91BAB9E064F036CD | Since: 1207
 *
 * @deprecated Use ped._0x91BAB9E064F036CD() instead
 */
export declare function _0x91BAB9E064F036CD(): void;
/**
 * No comment provided
 *
 * Hash: 0x92A1B55A59720395 | Since: 1207
 *
 * @deprecated Use ped._0x92A1B55A59720395() instead
 */
export declare function _0x92A1B55A59720395(): void;
/**
 * _GET_IS_PED_*
 *
 * Hash: 0x94132D7C8D3575C4 | Since: 1207
 *
 * @deprecated Use ped._0x94132D7C8D3575C4() instead
 */
export declare function _0x94132D7C8D3575C4(ped: number | Ped): boolean;
/**
 * Returns whether a ped has interacted with a player recently.
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
 *
 * Hash: 0x947E43F544B6AB34 | Since: 1207
 *
 * @deprecated Use ped.hasPedInteractedWithPlayerRecently() instead
 */
export declare function hasPedInteractedWithPlayerRecently(ped: number | Ped, player: number | string | Player, flag: number, ms: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9629FAF6460D35CB | Since: 1207
 *
 * @deprecated Use ped._0x9629FAF6460D35CB() instead
 */
export declare function _0x9629FAF6460D35CB(group: number | string): void;
/**
 * Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
 * _SET_PED_S* - _SET_PED_TARGET_*
 *
 * Hash: 0x96595B36D6A2279B | Since: 1207
 *
 * @deprecated Use ped._0x96595B36D6A2279B() instead
 */
export declare function _0x96595B36D6A2279B(animal: number | Ped, toggle: boolean): void;
/**
 * _SET_FORMATION_P*
 *
 * Hash: 0x966DE09688A1DE39 | Since: 1207
 *
 * @deprecated Use ped._0x966DE09688A1DE39() instead
 */
export declare function _0x966DE09688A1DE39(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x96C7B659854DE629 | Since: 1207
 *
 * @deprecated Use ped._0x96C7B659854DE629() instead
 */
export declare function _0x96C7B659854DE629(): void;
/**
 * _SET_PED_D*
 *
 * Hash: 0x97A38B65EBDA3D50 | Since: 1207
 *
 * @deprecated Use ped._0x97A38B65EBDA3D50() instead
 */
export declare function _0x97A38B65EBDA3D50(ped: number | Ped): void;
/**
 * _CLEAR*
 *
 * Hash: 0x97B06669AC569003 | Since: 1207
 *
 * @deprecated Use ped._0x97B06669AC569003() instead
 */
export declare function _0x97B06669AC569003(ped1: number | Ped, ped2: number | Ped): void;
/**
 * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
 *
 * Hash: 0x97C475212B327666 | Since: 1207
 *
 * @deprecated Use ped._0x97C475212B327666() instead
 */
export declare function _0x97C475212B327666(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9851DE7AEC10B4E1 | Since: 1207
 *
 * @deprecated Use ped._0x9851DE7AEC10B4E1() instead
 */
export declare function _0x9851DE7AEC10B4E1(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x992187D975635DF5 | Since: 1311
 *
 * @deprecated Use ped._0x992187D975635DF5() instead
 */
export declare function _0x992187D975635DF5(): void;
/**
 * _CAN_PED_*
 *
 * Hash: 0x99DF2639DA76C1DC | Since: 1232
 *
 * @deprecated Use ped._0x99DF2639DA76C1DC() instead
 */
export declare function _0x99DF2639DA76C1DC(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A4AC116CC1EEE14 | Since: 1207
 *
 * @deprecated Use ped._0x9A4AC116CC1EEE14() instead
 */
export declare function _0x9A4AC116CC1EEE14(): void;
/**
 * _SET_PED_M*
 *
 * Hash: 0x9AB33CB5834885B3 | Since: 1207
 *
 * @deprecated Use ped._0x9AB33CB5834885B3() instead
 */
export declare function _0x9AB33CB5834885B3(ped: number | Ped): void;
/**
 * Only used in SP R* Script winter1: p1 = Winter1Mount
 *
 * Hash: 0x9B65444C07B782BF | Since: 1207
 *
 * @deprecated Use ped._0x9B65444C07B782BF() instead
 */
export declare function _0x9B65444C07B782BF(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9B90842304C938A7 | Since: 1207
 *
 * @deprecated Use ped.getCategoryOfComponentAtIndex() instead
 */
export declare function getCategoryOfComponentAtIndex(ped: number | Ped, componentIndex: number): number;
/**
 * Used in Script Function SKCS_PLAYER_ROBBING
 * _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
 *
 * Hash: 0x9B9B9FA0EA283E3D | Since: 1207
 *
 * @deprecated Use ped._0x9B9B9FA0EA283E3D() instead
 */
export declare function _0x9B9B9FA0EA283E3D(ped: number | Ped): void;
/**
 * _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
 *
 * Hash: 0x9BBEAF8B0C007F1E | Since: 1207
 *
 * @deprecated Use ped._0x9BBEAF8B0C007F1E() instead
 */
export declare function _0x9BBEAF8B0C007F1E(ped: number | Ped): void;
/**
 * this native checks if player has shot a specific ped for the duration passed p2 is in milliseconds
 *
 * Hash: 0x9C81338B2E62CE0A | Since: 1207
 *
 * @deprecated Use ped.hasPedBeenShotByPlayerRecently() instead
 */
export declare function hasPedBeenShotByPlayerRecently(player: number | string | Player, ped: number | Ped, duration: number): boolean;
/**
 * _RESET_PED_*
 *
 * Hash: 0x9D8DFE2DE9CB4DFC | Since: 1207
 *
 * @deprecated Use ped._0x9D8DFE2DE9CB4DFC() instead
 */
export declare function _0x9D8DFE2DE9CB4DFC(ped: number | Ped): void;
/**
 * Only used in SP R* Script loanshark_hunter
 *
 * Hash: 0x9E3842E5DAD69F80 | Since: 1207
 *
 * @deprecated Use ped._0x9E3842E5DAD69F80() instead
 */
export declare function _0x9E3842E5DAD69F80(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9E66708B2B41F14A | Since: 1207
 *
 * @deprecated Use ped._0x9E66708B2B41F14A() instead
 */
export declare function _0x9E66708B2B41F14A(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F0F28B42C4EE80A | Since: 1355
 *
 * @deprecated Use ped._0x9F0F28B42C4EE80A() instead
 */
export declare function _0x9F0F28B42C4EE80A(animal: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9F933E0985E12C51 | Since: 1207
 *
 * @deprecated Use ped._0x9F933E0985E12C51() instead
 */
export declare function _0x9F933E0985E12C51(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA064BBABB064446F | Since: 1207
 *
 * @deprecated Use ped._0xA064BBABB064446F() instead
 */
export declare function _0xA064BBABB064446F(): void;
/**
 * No comment provided
 *
 * Hash: 0xA180FBD502A03125 | Since: 1207
 *
 * @deprecated Use ped._0xA180FBD502A03125() instead
 */
export declare function _0xA180FBD502A03125(): any;
/**
 * No comment provided
 *
 * Hash: 0xA1FBAC56D38563E2 | Since: 1207
 *
 * @deprecated Use ped._0xA1FBAC56D38563E2() instead
 */
export declare function _0xA1FBAC56D38563E2(volume: number): boolean;
/**
 * _SET_PED_*
 *
 * Hash: 0xA2116C1E4ED85C24 | Since: 1207
 *
 * @deprecated Use ped._0xA2116C1E4ED85C24() instead
 */
export declare function _0xA2116C1E4ED85C24(ped: number | Ped, inverted: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA218D2BBCAA7388C | Since: 1207
 *
 * @deprecated Use ped._0xA218D2BBCAA7388C() instead
 */
export declare function _0xA218D2BBCAA7388C(): any;
/**
 * No comment provided
 *
 * Hash: 0xA274F51EF7E34B95 | Since: 1207
 *
 * @deprecated Use ped._0xA274F51EF7E34B95() instead
 */
export declare function _0xA274F51EF7E34B95(): any;
/**
 * No comment provided
 *
 * Hash: 0xA2B8E47442C76CEC | Since: 1207
 *
 * @deprecated Use ped._0xA2B8E47442C76CEC() instead
 */
export declare function _0xA2B8E47442C76CEC(): void;
/**
 * No comment provided
 *
 * Hash: 0xA2F8B3B5FEDFC100 | Since: 1207
 *
 * @deprecated Use ped._0xA2F8B3B5FEDFC100() instead
 */
export declare function _0xA2F8B3B5FEDFC100(): void;
/**
 * No comment provided
 *
 * Hash: 0xA31D350D66FA1855 | Since: 1207
 *
 * @deprecated Use ped._0xA31D350D66FA1855() instead
 */
export declare function _0xA31D350D66FA1855(): any;
/**
 * No comment provided
 *
 * Hash: 0xA405BF9F01960C16 | Since: 1207
 *
 * @deprecated Use ped._0xA405BF9F01960C16() instead
 */
export declare function _0xA405BF9F01960C16(): void;
/**
 * No comment provided
 *
 * Hash: 0xA4AC05B1A364EBC5 | Since: 1207
 *
 * @deprecated Use ped._0xA4AC05B1A364EBC5() instead
 */
export declare function _0xA4AC05B1A364EBC5(): any;
/**
 * No comment provided
 *
 * Hash: 0xA4B6432E3880F2F9 | Since: 1311
 *
 * @deprecated Use ped._0xA4B6432E3880F2F9() instead
 */
export declare function _0xA4B6432E3880F2F9(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA691C10054275290 | Since: 1207
 *
 * @deprecated Use ped._0xA691C10054275290() instead
 */
export declare function _0xA691C10054275290(mount: number | Ped, player: number | string | Player, dismountedTimestamp: number): void;
/**
 * _DELETE_*
 *
 * Hash: 0xA6D6F03095C88F59 | Since: 1207
 *
 * @deprecated Use ped._0xA6D6F03095C88F59() instead
 */
export declare function _0xA6D6F03095C88F59(ped: number | Ped): void;
/**
 * Washing player's face/hands now
 * _CLEAR_PED_E* - _CLEAR_PED_L*
 *
 * Hash: 0xA7A806677F8DE138 | Since: 1207
 *
 * @deprecated Use ped._0xA7A806677F8DE138() instead
 */
export declare function _0xA7A806677F8DE138(ped: number | Ped): void;
/**
 * _CLEAR_PED_B* - _CLEAR_PED_C*
 *
 * Hash: 0xA7DC9266ED6A4E51 | Since: 1207
 *
 * @deprecated Use ped._0xA7DC9266ED6A4E51() instead
 */
export declare function _0xA7DC9266ED6A4E51(ped: number | Ped): void;
/**
 * _SET_ENABLE_B* - _SET_ENABLE_H*
 *
 * Hash: 0xA8A95CECB1906EA2 | Since: 1207
 *
 * @deprecated Use ped._0xA8A95CECB1906EA2() instead
 */
export declare function _0xA8A95CECB1906EA2(groupId: number): void;
/**
 * Only used in R* Script mob4 and rcm_mason4
 * _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
 *
 * Hash: 0xA90684ED185CCB4B | Since: 1207
 *
 * @deprecated Use ped._0xA90684ED185CCB4B() instead
 */
export declare function _0xA90684ED185CCB4B(animal: number | Ped): void;
/**
 * _SET_PED_P* - _SET_PED_R*
 *
 * Hash: 0xA967D6A8ED2D713B | Since: 1207
 *
 * @deprecated Use ped._0xA967D6A8ED2D713B() instead
 */
export declare function _0xA967D6A8ED2D713B(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAA6C49AE90A32299 | Since: 1207
 *
 * @deprecated Use ped._0xAA6C49AE90A32299() instead
 */
export declare function _0xAA6C49AE90A32299(ped: number | Ped): void;
/**
 * Related to _0x704C908E9C405136 for component loading
 * Can be used to fix missing outfit changes, always paired with _UPDATE_PED_VARIATION
 * _S*
 * Doesn't actually return anything.
 *
 * Hash: 0xAAB86462966168CE | Since: 1207
 *
 * @deprecated Use ped.setActiveMetaPedComponentsUpdated() instead
 */
export declare function setActiveMetaPedComponentsUpdated(ped: number | Ped, isMP: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0xAAC0EE3B4999ABB5 | Since: 1207
 *
 * @deprecated Use ped._0xAAC0EE3B4999ABB5() instead
 */
export declare function _0xAAC0EE3B4999ABB5(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAD3330E3C3E98007 | Since: 1207
 *
 * @deprecated Use ped._0xAD3330E3C3E98007() instead
 */
export declare function _0xAD3330E3C3E98007(): void;
/**
 * No comment provided
 *
 * Hash: 0xAE6B68A83ABBE7C0 | Since: 1207
 *
 * @deprecated Use ped._0xAE6B68A83ABBE7C0() instead
 */
export declare function _0xAE6B68A83ABBE7C0(): void;
/**
 * _CLEAR_PED_D*
 *
 * Hash: 0xAF041C10756C30FB | Since: 1207
 *
 * @deprecated Use ped._0xAF041C10756C30FB() instead
 */
export declare function _0xAF041C10756C30FB(ped: number | Ped): void;
/**
 * Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
 * _SET_FORMATION_*
 *
 * Hash: 0xB05CC690CDE8A4A9 | Since: 1207
 *
 * @deprecated Use ped._0xB05CC690CDE8A4A9() instead
 */
export declare function _0xB05CC690CDE8A4A9(groupId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB06F5F1DEF417216 | Since: 1207
 *
 * @deprecated Use ped._0xB06F5F1DEF417216() instead
 */
export declare function _0xB06F5F1DEF417216(): void;
/**
 * No comment provided
 *
 * Hash: 0xB292203008EBBAAC | Since: 1207
 *
 * @deprecated Use ped.getMetaPedRace() instead
 */
export declare function getMetaPedRace(ped: number | Ped): number;
/**
 * Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
 *
 * Hash: 0xB29C553BA582D09E | Since: 1207
 *
 * @deprecated Use ped._0xB29C553BA582D09E() instead
 */
export declare function _0xB29C553BA582D09E(model: number | string, damageCleanliness: number): any;
/**
 * _RESET_PED_C*
 *
 * Hash: 0xB4B7C92FCE7347B7 | Since: 1207
 *
 * @deprecated Use ped._0xB4B7C92FCE7347B7() instead
 */
export declare function _0xB4B7C92FCE7347B7(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB65927F861E7AE39 | Since: 1207
 *
 * @deprecated Use ped._0xB65927F861E7AE39() instead
 */
export declare function _0xB65927F861E7AE39(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB7DBB2986B87E230 | Since: 1207
 *
 * @deprecated Use ped._0xB7DBB2986B87E230() instead
 */
export declare function _0xB7DBB2986B87E230(ped: number | Ped): boolean;
/**
 * _SET_HO*
 *
 * Hash: 0xB8AB265426CFE6DD | Since: 1207
 *
 * @deprecated Use ped._0xB8AB265426CFE6DD() instead
 */
export declare function _0xB8AB265426CFE6DD(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB8E2D655E1D5BD39 | Since: 1207
 *
 * @deprecated Use ped._0xB8E2D655E1D5BD39() instead
 */
export declare function _0xB8E2D655E1D5BD39(): any;
/**
 * _IS_PED_J* - _IS_PED_L*
 *
 * Hash: 0xB91AB3BE7F655D49 | Since: 1207
 *
 * @deprecated Use ped._0xB91AB3BE7F655D49() instead
 */
export declare function _0xB91AB3BE7F655D49(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB9BDFAE609DFB7C5 | Since: 1207
 *
 * @deprecated Use ped._0xB9BDFAE609DFB7C5() instead
 */
export declare function _0xB9BDFAE609DFB7C5(): void;
/**
 * No comment provided
 *
 * Hash: 0xBAD2A311667A50D7 | Since: 1207
 *
 * @deprecated Use ped.setPedDesiresGroup() instead
 */
export declare function setPedDesiresGroup(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBB3E5370EBB6BE28 | Since: 1207
 *
 * @deprecated Use ped._0xBB3E5370EBB6BE28() instead
 */
export declare function _0xBB3E5370EBB6BE28(): any;
/**
 * No comment provided
 *
 * Hash: 0xBC1DC48270468444 | Since: 1207
 *
 * @deprecated Use ped._0xBC1DC48270468444() instead
 */
export declare function _0xBC1DC48270468444(): void;
/**
 * _IS_PED_M* - _IS_PED_O*
 *
 * Hash: 0xBD0E4F52F6D95242 | Since: 1207
 *
 * @deprecated Use ped._0xBD0E4F52F6D95242() instead
 */
export declare function _0xBD0E4F52F6D95242(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBF567DF2BEF211A6 | Since: 1207
 *
 * @deprecated Use ped._0xBF567DF2BEF211A6() instead
 */
export declare function _0xBF567DF2BEF211A6(): void;
/**
 * Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
 *
 * Hash: 0xBFA6B7731C3BAF02 | Since: 1207
 *
 * @deprecated Use ped._0xBFA6B7731C3BAF02() instead
 */
export declare function _0xBFA6B7731C3BAF02(): void;
/**
 * _SET_PED_P* - _SET_PED_R*
 *
 * Hash: 0xC17A94CC8FC3C61A | Since: 1207
 *
 * @deprecated Use ped._0xC17A94CC8FC3C61A() instead
 */
export declare function _0xC17A94CC8FC3C61A(entity: number | Entity, boneId: number): void;
/**
 * _FORCE_PED_*
 *
 * Hash: 0xC2722B252C79E641 | Since: 1232
 *
 * @deprecated Use ped._0xC2722B252C79E641() instead
 */
export declare function _0xC2722B252C79E641(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC2EF407645BEECDC | Since: 1207
 *
 * @deprecated Use ped._0xC2EF407645BEECDC() instead
 */
export declare function _0xC2EF407645BEECDC(): any;
/**
 * _GET_PED_G* - _GET_PED_I*
 *
 * Hash: 0xC3995D396F1D97B6 | Since: 1207
 *
 * @deprecated Use ped._0xC3995D396F1D97B6() instead
 */
export declare function _0xC3995D396F1D97B6(ped: number | Ped): boolean;
/**
 * Set the pelt of the animal to the back of the horse
 * EXAMPLE:
 * local mount = GetMountOwnedByPlayer(PlayerId())
 * Citizen.InvokeNative(0xC412AA1C73111FE0,mount,GetHashKey('PROVISION_DEER_HIDE_POOR'),GetHashKey('a_c_deer_01_uppr_000_c0_001_ab'),0,0)
 *
 * Hash: 0xC412AA1C73111FE0 | Since: 1207
 *
 * @deprecated Use ped.setPeltForHorseByInventoryItem() instead
 */
export declare function setPeltForHorseByInventoryItem(horse: number | Ped, itemHash: number | string, albedo: number | string, normal: number | string): void;
/**
 * _SET_PED_M*
 *
 * Hash: 0xC48AF420371C7407 | Since: 1207
 *
 * @deprecated Use ped._0xC48AF420371C7407() instead
 */
export declare function _0xC48AF420371C7407(ped: number | Ped, grapple: number | string): any;
/**
 * memoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_PED_SET_SIMPLE_PLAYER_MEMORY
 *
 * Hash: 0xC494C76A34266E82 | Since: 1207
 *
 * @deprecated Use ped.pedSetSimplePlayerMemory() instead
 */
export declare function pedSetSimplePlayerMemory(ped: number | Ped, memoryType: number): void;
/**
 * Returns boneIndex
 *
 * Hash: 0xC5303F460A40D21D | Since: 1207
 *
 * @deprecated Use ped.getPedRagdollBoneIndex() instead
 */
export declare function getPedRagdollBoneIndex(ped: number | Ped, boneId: number): number;
/**
 * _SET_H* - _SET_I*
 *
 * Hash: 0xC5B78E41DCF8227C | Since: 1207
 *
 * @deprecated Use ped._0xC5B78E41DCF8227C() instead
 */
export declare function _0xC5B78E41DCF8227C(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC6136B40FFFB778B | Since: 1207
 *
 * @deprecated Use ped._0xC6136B40FFFB778B() instead
 */
export declare function _0xC6136B40FFFB778B(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6981AFF6D2A71C2 | Since: 1207
 *
 * @deprecated Use ped._0xC6981AFF6D2A71C2() instead
 */
export declare function _0xC6981AFF6D2A71C2(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6C4E15CF7D52FEA | Since: 1207
 *
 * @deprecated Use ped._0xC6C4E15CF7D52FEA() instead
 */
export declare function _0xC6C4E15CF7D52FEA(): void;
/**
 * No comment provided
 *
 * Hash: 0xC9151483CC06A414 | Since: 1207
 *
 * @deprecated Use ped._0xC9151483CC06A414() instead
 */
export declare function _0xC9151483CC06A414(ped: number | Ped): void;
/**
 * Not implemented.
 *
 * Hash: 0xC991EF46FE323867 | Since: 1207
 *
 * @deprecated Use ped._0xC991EF46FE323867() instead
 */
export declare function _0xC991EF46FE323867(ped: number | Ped): void;
/**
 * _SET_PLAYER_N* - _SET_PLAYER_S*
 *
 * Hash: 0xC99F104BDF8C7F5A | Since: 1207
 *
 * @deprecated Use ped._0xC99F104BDF8C7F5A() instead
 */
export declare function _0xC99F104BDF8C7F5A(ped: number | Ped): void;
/**
 * Returns vehicle speed
 * _COMPUTE_*
 *
 * Hash: 0xCA95924C893A0C91 | Since: 1207
 *
 * @deprecated Use ped._0xCA95924C893A0C91() instead
 */
export declare function _0xCA95924C893A0C91(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xCA95C156C14B2054 | Since: 1207
 *
 * @deprecated Use ped._0xCA95C156C14B2054() instead
 */
export declare function _0xCA95C156C14B2054(): void;
/**
 * No comment provided
 *
 * Hash: 0xCAC43D060099EA72 | Since: 1207
 *
 * @deprecated Use ped._0xCAC43D060099EA72() instead
 */
export declare function _0xCAC43D060099EA72(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCB1A3864C524F784 | Since: 1207
 *
 * @deprecated Use ped._0xCB1A3864C524F784() instead
 */
export declare function _0xCB1A3864C524F784(): void;
/**
 * No comment provided
 *
 * Hash: 0xCB86D3E3E3708901 | Since: 1207
 *
 * @deprecated Use ped._0xCB86D3E3E3708901() instead
 */
export declare function _0xCB86D3E3E3708901(): any;
/**
 * Only used in R* SP Scripts
 * _GET_PLAYER_W* - _GET_RANDOM_*
 *
 * Hash: 0xCB8F4C9343EBE240 | Since: 1207
 *
 * @deprecated Use ped._0xCB8F4C9343EBE240() instead
 */
export declare function _0xCB8F4C9343EBE240(ped: number | Ped, eventType: number | string, coords: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCBDE59C48F2B06F5 | Since: 1207
 *
 * @deprecated Use ped._0xCBDE59C48F2B06F5() instead
 */
export declare function _0xCBDE59C48F2B06F5(): void;
/**
 * _SET_PED_R* - _SET_PED_S*
 *
 * Hash: 0xCD9E5F94A2F38683 | Since: 1207
 *
 * @deprecated Use ped._0xCD9E5F94A2F38683() instead
 */
export declare function _0xCD9E5F94A2F38683(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCDFB8C04D4C95D9B | Since: 1207
 *
 * @deprecated Use ped._0xCDFB8C04D4C95D9B() instead
 */
export declare function _0xCDFB8C04D4C95D9B(): void;
/**
 * No comment provided
 *
 * Hash: 0xCE7A6C1D5CDE1F9D | Since: 1207
 *
 * @deprecated Use ped._0xCE7A6C1D5CDE1F9D() instead
 */
export declare function _0xCE7A6C1D5CDE1F9D(ped: number | Ped, object: number | Object, propName: string, animName: string): void;
/**
 * _SET_PED_COMBAT_*
 *
 * Hash: 0xCF0B19806473D324 | Since: 1207
 *
 * @deprecated Use ped._0xCF0B19806473D324() instead
 */
export declare function _0xCF0B19806473D324(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xD049920CD29F6CC8 | Since: 1207
 *
 * @deprecated Use ped._0xD049920CD29F6CC8() instead
 */
export declare function _0xD049920CD29F6CC8(): void;
/**
 * No comment provided
 *
 * Hash: 0xD049FDAF089FDDB0 | Since: 1207
 *
 * @deprecated Use ped._0xD049FDAF089FDDB0() instead
 */
export declare function _0xD049FDAF089FDDB0(ped: number | Ped): void;
/**
 * Params: p1 either a 1 or 0, so perhaps BOOL
 * _SET_PED_A*
 *
 * Hash: 0xD103F6DBB5442BE8 | Since: 1207
 *
 * @deprecated Use ped._0xD103F6DBB5442BE8() instead
 */
export declare function _0xD103F6DBB5442BE8(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD2F0FE8805D91647 | Since: 1207
 *
 * @deprecated Use ped._0xD2F0FE8805D91647() instead
 */
export declare function _0xD2F0FE8805D91647(): void;
/**
 * No comment provided
 *
 * Hash: 0xD355E2F1BB41087E | Since: 1207
 *
 * @deprecated Use ped._0xD355E2F1BB41087E() instead
 */
export declare function _0xD355E2F1BB41087E(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4D403EA031F351C | Since: 1207
 *
 * @deprecated Use ped._0xD4D403EA031F351C() instead
 */
export declare function _0xD4D403EA031F351C(ped: number | Ped): boolean;
/**
 * Used in Script Function LA_CHECK_ALERTED
 * _GET_IS_PED_*
 *
 * Hash: 0xD55DB4466D00A258 | Since: 1207
 *
 * @deprecated Use ped._0xD55DB4466D00A258() instead
 */
export declare function _0xD55DB4466D00A258(legendaryAnimal: number | Ped): boolean;
/**
 * _SET_FORMATION_*
 *
 * Hash: 0xD5BD1B5318A81994 | Since: 1207
 *
 * @deprecated Use ped._0xD5BD1B5318A81994() instead
 */
export declare function _0xD5BD1B5318A81994(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD61FCF9FCFD515B7 | Since: 1207
 *
 * @deprecated Use ped._0xD61FCF9FCFD515B7() instead
 */
export declare function _0xD61FCF9FCFD515B7(): void;
/**
 * No comment provided
 *
 * Hash: 0xD7D2F45C56A4F4DF | Since: 1207
 *
 * @deprecated Use ped._0xD7D2F45C56A4F4DF() instead
 */
export declare function _0xD7D2F45C56A4F4DF(): void;
/**
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * p1 is mostly 10
 * _CLEAR_PED_N* - _CLEAR_PED_W*
 *
 * Hash: 0xD8544F6260F5F01E | Since: 1232
 *
 * @deprecated Use ped._0xD8544F6260F5F01E() instead
 */
export declare function _0xD8544F6260F5F01E(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD8CEEED54C672B5D | Since: 1207
 *
 * @deprecated Use ped._0xD8CEEED54C672B5D() instead
 */
export declare function _0xD8CEEED54C672B5D(): void;
/**
 * No comment provided
 *
 * Hash: 0xD97BC27AC039F681 | Since: 1311
 *
 * @deprecated Use ped._0xD97BC27AC039F681() instead
 */
export declare function _0xD97BC27AC039F681(): any;
/**
 * detects if ped is afloat in water like swimming or in a boat (driving or standing on it)
 *
 * Hash: 0xDC88D06719070C39 | Since: 1207
 *
 * @deprecated Use ped.isPedAfloat() instead
 */
export declare function isPedAfloat(ped: number | Ped): boolean;
/**
 * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
 * _SET_RELATIONSHIP_*
 *
 * Hash: 0xDC91F22F09BC6C2F | Since: 1207
 *
 * @deprecated Use ped._0xDC91F22F09BC6C2F() instead
 */
export declare function _0xDC91F22F09BC6C2F(group: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDD9540E7B1C9714F | Since: 1207
 *
 * @deprecated Use ped._0xDD9540E7B1C9714F() instead
 */
export declare function _0xDD9540E7B1C9714F(ped: number | Ped, r: number, g: number, b: number): void;
/**
 * _SET_FORMATION_P*
 *
 * Hash: 0xDDFAD4DEAA7FA362 | Since: 1207
 *
 * @deprecated Use ped._0xDDFAD4DEAA7FA362() instead
 */
export declare function _0xDDFAD4DEAA7FA362(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEDBED3020DA49DC | Since: 1207
 *
 * @deprecated Use ped._0xDEDBED3020DA49DC() instead
 */
export declare function _0xDEDBED3020DA49DC(): void;
/**
 * No comment provided
 *
 * Hash: 0xDEE8D30AA5C2E28D | Since: 1207
 *
 * @deprecated Use ped._0xDEE8D30AA5C2E28D() instead
 */
export declare function _0xDEE8D30AA5C2E28D(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE0FE107AB174D64A | Since: 1207
 *
 * @deprecated Use ped._0xE0FE107AB174D64A() instead
 */
export declare function _0xE0FE107AB174D64A(): void;
/**
 * _SET_FORMATION_P*
 *
 * Hash: 0xE1103300F3456DE7 | Since: 1207
 *
 * @deprecated Use ped._0xE1103300F3456DE7() instead
 */
export declare function _0xE1103300F3456DE7(groupId: number): void;
/**
 * _C*
 *
 * Hash: 0xE1AADD0055D76603 | Since: 1207
 *
 * @deprecated Use ped._0xE1AADD0055D76603() instead
 */
export declare function _0xE1AADD0055D76603(ped: number | Ped, entity: number | Entity, boneIndex1: number, boneIndex2: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xE1B3BE07D3AADDED | Since: 1207
 *
 * @deprecated Use ped._0xE1B3BE07D3AADDED() instead
 */
export declare function _0xE1B3BE07D3AADDED(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE20027B414BFE6C7 | Since: 1207
 *
 * @deprecated Use ped._0xE20027B414BFE6C7() instead
 */
export declare function _0xE20027B414BFE6C7(): void;
/**
 * _SET_PED_R* -_SET_PED_S*
 *
 * Hash: 0xE29D8CD66553DBAA | Since: 1207
 *
 * @deprecated Use ped._0xE29D8CD66553DBAA() instead
 */
export declare function _0xE29D8CD66553DBAA(horse: number | Ped): void;
/**
 * _SET_PED_IN*
 *
 * Hash: 0xE37ACEE15AC50C7E | Since: 1207
 *
 * @deprecated Use ped._0xE37ACEE15AC50C7E() instead
 */
export declare function _0xE37ACEE15AC50C7E(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE4C95E0AE31C6512 | Since: 1207
 *
 * @deprecated Use ped._0xE4C95E0AE31C6512() instead
 */
export declare function _0xE4C95E0AE31C6512(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE4EF4382E22C780C | Since: 1207
 *
 * @deprecated Use ped._0xE4EF4382E22C780C() instead
 */
export declare function _0xE4EF4382E22C780C(): void;
/**
 * _SET_D*
 *
 * Hash: 0xE50C9816B3F22D8B | Since: 1311
 *
 * @deprecated Use ped._0xE50C9816B3F22D8B() instead
 */
export declare function _0xE50C9816B3F22D8B(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE6CB36F43A95D75F | Since: 1207
 *
 * @deprecated Use ped._0xE6CB36F43A95D75F() instead
 */
export declare function _0xE6CB36F43A95D75F(): void;
/**
 * No comment provided
 *
 * Hash: 0xE735A7DA22E88359 | Since: 1207
 *
 * @deprecated Use ped._0xE735A7DA22E88359() instead
 */
export declare function _0xE735A7DA22E88359(): void;
/**
 * Only used in R* Script nb_animal_attack: p2 = 120000
 * _SET_PED_SH* - _SET_PED_SP*
 *
 * Hash: 0xE737D5F14304A2EC | Since: 1207
 *
 * @deprecated Use ped._0xE737D5F14304A2EC() instead
 */
export declare function _0xE737D5F14304A2EC(ped: number | Ped, player: number | string | Player): void;
/**
 * Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
 * Params: p1 = 0
 * _GET_PED_IN*
 *
 * Hash: 0xE76687023D8C8505 | Since: 1207
 *
 * @deprecated Use ped._0xE76687023D8C8505() instead
 */
export declare function _0xE76687023D8C8505(perscharModel: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE8ABE3B73FC7FE17 | Since: 1207
 *
 * @deprecated Use ped._0xE8ABE3B73FC7FE17() instead
 */
export declare function _0xE8ABE3B73FC7FE17(): void;
/**
 * Returns dismounted timestamp
 *
 * Hash: 0xE8D1CCB9375C101B | Since: 1207
 *
 * @deprecated Use ped.getPlayerDismountTimestamp() instead
 */
export declare function getPlayerDismountTimestamp(mount: number | Ped, player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xE9E06EA514A69061 | Since: 1207
 *
 * @deprecated Use ped._0xE9E06EA514A69061() instead
 */
export declare function _0xE9E06EA514A69061(): void;
/**
 * No comment provided
 *
 * Hash: 0xEA8763E505AFD49A | Since: 1207
 *
 * @deprecated Use ped._0xEA8763E505AFD49A() instead
 */
export declare function _0xEA8763E505AFD49A(): void;
/**
 * Washing player's face/hands now
 * _FA* - _FI*
 *
 * Hash: 0xEB8886E1065654CD | Since: 1207
 *
 * @deprecated Use ped._0xEB8886E1065654CD() instead
 */
export declare function _0xEB8886E1065654CD(ped: number | Ped): void;
/**
 * If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
 * If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
 * _IS_PED_T* - _IS_PED_U*
 *
 * Hash: 0xEBAAC9A750E7563B | Since: 1207
 *
 * @deprecated Use ped._0xEBAAC9A750E7563B() instead
 */
export declare function _0xEBAAC9A750E7563B(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEBD49472BCCF7642 | Since: 1207
 *
 * @deprecated Use ped._0xEBD49472BCCF7642() instead
 */
export declare function _0xEBD49472BCCF7642(): void;
/**
 * _SET_C*
 *
 * Hash: 0xEC60D1D225BC50AA | Since: 1207
 *
 * @deprecated Use ped._0xEC60D1D225BC50AA() instead
 */
export declare function _0xEC60D1D225BC50AA(ped: number | Ped): void;
/**
 * Only used in R* Script nb_stalking_hunter
 *
 * Hash: 0xED1C764997A86D5A | Since: 1207
 *
 * @deprecated Use ped._0xED1C764997A86D5A() instead
 */
export declare function _0xED1C764997A86D5A(ped1: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEEDC9B29314B2733 | Since: 1207
 *
 * @deprecated Use ped._0xEEDC9B29314B2733() instead
 */
export declare function _0xEEDC9B29314B2733(): void;
/**
 * _ADD_*
 *
 * Hash: 0xEF371232BC6053E1 | Since: 1207
 *
 * @deprecated Use ped._0xEF371232BC6053E1() instead
 */
export declare function _0xEF371232BC6053E1(ped: number | Ped): void;
/**
 * Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
 *
 * Hash: 0xF47D54B986F0A346 | Since: 1232
 *
 * @deprecated Use ped._0xF47D54B986F0A346() instead
 */
export declare function _0xF47D54B986F0A346(ped: number | Ped, danceIntensity: number): void;
/**
 * Only used in SP Scripts
 * Returns count / index
 * _C*
 *
 * Hash: 0xF4860514AD354226 | Since: 1207
 *
 * @deprecated Use ped._0xF4860514AD354226() instead
 */
export declare function _0xF4860514AD354226(shockingEvent: number, pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xF634E2892220EF34 | Since: 1207
 *
 * @deprecated Use ped._0xF634E2892220EF34() instead
 */
export declare function _0xF634E2892220EF34(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF6A8C4B4A11AE89C | Since: 1207
 *
 * @deprecated Use ped._0xF6A8C4B4A11AE89C() instead
 */
export declare function _0xF6A8C4B4A11AE89C(): any;
/**
 * No comment provided
 *
 * Hash: 0xF7327ACC7A89AEF1 | Since: 1207
 *
 * @deprecated Use ped._0xF7327ACC7A89AEF1() instead
 */
export declare function _0xF7327ACC7A89AEF1(): any;
/**
 * No comment provided
 *
 * Hash: 0xF917F92BF22ECBAB | Since: 1207
 *
 * @deprecated Use ped._0xF917F92BF22ECBAB() instead
 */
export declare function _0xF917F92BF22ECBAB(): void;
/**
 * No comment provided
 *
 * Hash: 0xF9331B3A314EB49D | Since: 1207
 *
 * @deprecated Use ped._0xF9331B3A314EB49D() instead
 */
export declare function _0xF9331B3A314EB49D(ped: number | Ped): boolean;
/**
 * Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
 *
 * Hash: 0xF9CBD46433E36713 | Since: 1207
 *
 * @deprecated Use ped._0xF9CBD46433E36713() instead
 */
export declare function _0xF9CBD46433E36713(ped: number | Ped, targetEntity: number | Entity): void;
/**
 * only works when you use SET_PED_WETNESS_HEIGHT first , if you do 0.0 (it resets) you need to apply again with SET_PED_WETNESS_HEIGHT to see the wetness effects again
 *
 * Hash: 0xF9CFF5BB70E8A2CB | Since: 1207
 *
 * @deprecated Use ped.setPedWetness() instead
 */
export declare function setPedWetness(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFA0D206B489A6846 | Since: 1207
 *
 * @deprecated Use ped._0xFA0D206B489A6846() instead
 */
export declare function _0xFA0D206B489A6846(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA742B82D093D848 | Since: 1207
 *
 * @deprecated Use ped._0xFA742B82D093D848() instead
 */
export declare function _0xFA742B82D093D848(): void;
/**
 * _HAS_PED_*
 *
 * Hash: 0xFA8C10DCE0706D43 | Since: 1207
 *
 * @deprecated Use ped._0xFA8C10DCE0706D43() instead
 */
export declare function _0xFA8C10DCE0706D43(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC23348F0F4E245F | Since: 1207
 *
 * @deprecated Use ped._0xFC23348F0F4E245F() instead
 */
export declare function _0xFC23348F0F4E245F(): void;
/**
 * returns the number of reserved stamina similar to _GET_NUM_RESERVED_HEALTH
 *
 * Hash: 0xFC3B580C4380B5B7 | Since: 1207
 *
 * @deprecated Use ped.getNumReservedStamina() instead
 */
export declare function getNumReservedStamina(ped: number | Ped): number;
/**
 * _DISABLE_A* - _DISABLE_C*
 *
 * Hash: 0xFD3C31A2E45671E7 | Since: 1207
 *
 * @deprecated Use ped._0xFD3C31A2E45671E7() instead
 */
export declare function _0xFD3C31A2E45671E7(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFD8E853F0BC2E942 | Since: 1207
 *
 * @deprecated Use ped._0xFD8E853F0BC2E942() instead
 */
export declare function _0xFD8E853F0BC2E942(): void;
/**
 * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
 * _SET_M* - _SET_P*
 *
 * Hash: 0xFEA6126C34DF2532 | Since: 1207
 *
 * @deprecated Use ped._0xFEA6126C34DF2532() instead
 */
export declare function _0xFEA6126C34DF2532(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFFA1594703ED27CA | Since: 1207
 *
 * @deprecated Use ped._0xFFA1594703ED27CA() instead
 */
export declare function _0xFFA1594703ED27CA(ped: number | Ped): void;
/**
 * _GET_PED_COMBAT_M* - _GET_PED_C*
 *
 * Hash: 0xFFDE295662405B25 | Since: 1207
 *
 * @deprecated Use ped._0xFFDE295662405B25() instead
 */
export declare function _0xFFDE295662405B25(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xE9B168527B337BF0 | Since: 1207
 *
 * @deprecated Use ped.addPedStayOutVolume() instead
 */
export declare function addPedStayOutVolume(ped: number | Ped, volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE37287EE358939C3 | Since: 1311
 *
 * @deprecated Use ped.addPedSubscribeToLegendaryBlips() instead
 */
export declare function addPedSubscribeToLegendaryBlips(ped: number | Ped): boolean;
/**
 * flag: see ADD_SCENARIO_BLOCKING_AREA
 *
 * Hash: 0x4C39C95AE5DB1329 | Since: 1207
 *
 * @deprecated Use ped.addScenarioBlockingVolume() instead
 */
export declare function addScenarioBlockingVolume(volume: number, flag: number): any;
/**
 * Forces transition now, called together with 0xD65FDC686A031C83
 *
 * Hash: 0x6D07B371E9439019 | Since: 1207
 *
 * @deprecated Use ped.addScenarioTransition() instead
 */
export declare function addScenarioTransition(ped: number | Ped): void;
/**
 * Creates ped overlay in texture override data and returns it's index.
 * This index are used for further overlay editing.
 *
 * albedoHash: a hash of overlay's albedo texture
 * colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
 *
 * Hash: 0x86BB5FF45F193A02 | Since: 1207
 *
 * @deprecated Use ped.addTextureLayer() instead
 */
export declare function addTextureLayer(textureId: number, albedoHash: number | string, normalHash: number | string, materialHash: number | string, blendType: number, texAlpha: number, sheetGridIndex: number): number;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 *
 * Hash: 0x74F512E29CB717E2 | Since: 1207
 *
 * @deprecated Use ped.applyPedMetaPedOutfit() instead
 */
export declare function applyPedMetaPedOutfit(requestId: number, ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD3A7B003ED343FD9 | Since: 1207
 *
 * @deprecated Use ped.applyShopItemToPed() instead
 */
export declare function applyShopItemToPed(ped: number | Ped, componentHash: number | string, immediately: boolean, isMp: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0B46E25761519058 | Since: 1207
 *
 * @deprecated Use ped.applyTextureOnPed() instead
 */
export declare function applyTextureOnPed(ped: number | Ped, componentHash: number | string, textureId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5E420FF293EE5472 | Since: 1207
 *
 * @deprecated Use ped.areAllAmbientPedReservationsReady() instead
 */
export declare function areAllAmbientPedReservationsReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7C00CFC48A782DC0 | Since: 1207
 *
 * @deprecated Use ped.attachVolumeToEntity() instead
 */
export declare function attachVolumeToEntity(volume: number, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3): void;
/**
 * p2 is always 0, p3 is always 0, p4 is always 1
 *
 * Hash: 0xAB643407D0B26F07 | Since: 1207
 *
 * @deprecated Use ped.canPedUseScenarioPoint() instead
 */
export declare function canPedUseScenarioPoint(ped: number | Ped, scenario: number): boolean;
/**
 * Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
 *
 * Hash: 0xC3D4B754C0E86B9E | Since: 1207
 *
 * @deprecated Use ped.changePedStamina() instead
 */
export declare function changePedStamina(ped: number | Ped, amount: number): boolean;
/**
 * Used in Script Functions PLAYER_HORSE_RELEASE_HORSE_TO_AMBIENT_WORLD (p1 = true), HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = false)
 * Set to false for player horse in scripts and seems it's only true when releasing/changing a player horse? Cannot determine what effect it has, but it doesn't seem to affect _GET_HORSE_TAMING_STATE
 *
 * Hash: 0xBCC76708E5677E1D | Since: 1207
 *
 * @deprecated Use ped.clearActiveAnimalOwner() instead
 */
export declare function clearActiveAnimalOwner(horse: number | Ped, clear: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x949B2F9ED2917F5D | Since: 1207
 *
 * @deprecated Use ped.clearPedActionDisableFlag() instead
 */
export declare function clearPedActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7F5D88333EE8A86F | Since: 1207
 *
 * @deprecated Use ped.clearPedBloodDamageFacial() instead
 */
export declare function clearPedBloodDamageFacial(ped: number | Ped): void;
/**
 * Params: p1 = 1 in R* Scripts
 *
 * Hash: 0x78815FC52832B690 | Since: 1207
 *
 * @deprecated Use ped.clearPedCombatStyle() instead
 */
export declare function clearPedCombatStyle(ped: number | Ped): void;
/**
 * _CLEAR_PED_COMBAT_*
 *
 * Hash: 0x1FA132CBCD7CB239 | Since: 1207
 *
 * @deprecated Use ped.clearPedCombatStyleMod() instead
 */
export declare function clearPedCombatStyleMod(ped: number | Ped, combatStyleModHash: number | string): void;
/**
 * Clears locomotion archetype
 *
 * Hash: 0x4FD80C3DD84B817B | Since: 1207
 *
 * @deprecated Use ped.clearPedDesiredLocoForModel() instead
 */
export declare function clearPedDesiredLocoForModel(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x58F7DB5BD8FA2288 | Since: 1207
 *
 * @deprecated Use ped.clearPedDesiredLocoMotionType() instead
 */
export declare function clearPedDesiredLocoMotionType(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEAE3B5B019C8D23F | Since: 1207
 *
 * @deprecated Use ped.clearPedGrappleFlag() instead
 */
export declare function clearPedGrappleFlag(ped: number | Ped, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBBF6D1D07C02D00A | Since: 1207
 *
 * @deprecated Use ped.clearPedTargetActionDisableFlag() instead
 */
export declare function clearPedTargetActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
/**
 * Removes every texture layer
 * Old Name: _RESET_PED_TEXTURE_2
 *
 * Hash: 0xB63B9178D0F58D82 | Since: 1207
 *
 * @deprecated Use ped.clearPedTexture() instead
 */
export declare function clearPedTexture(textureId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x627F7F3A0C4C51FF | Since: 1207
 *
 * @deprecated Use ped.clearPeltFromHorse() instead
 */
export declare function clearPeltFromHorse(horse: number | Ped, peltId: number): void;
/**
 * Related to dead animals items/loots
 * Notice: skinningQuality is partially calculated using pedQuality
 *
 * Hash: 0x6B89FAA36FC909A3 | Since: 1207
 *
 * @deprecated Use ped.computeSatchelItemForPedCarcass() instead
 */
export declare function computeSatchelItemForPedCarcass(outInventoryItemArray: any, ped: number | Ped, damageCleanliness: number, skinningQuality: number): number;
/**
 * Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
 * Can be useful to "point" player at some specific position.
 * Only works while on-foot.
 *
 * _CREATE_[P-Z]
 *
 * Hash: 0x4F5EBE70081E5A20 | Since: 1207
 *
 * @deprecated Use ped.createGravityWell() instead
 */
export declare function createGravityWell(pos: Vector3, heading: number, radius: number, stopAtDestination: boolean): number;
/**
 * Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
 *
 * Hash: 0x0BCD4091C8EABA42 | Since: 1207
 *
 * @deprecated Use ped.createMetaPed() instead
 */
export declare function createMetaPed(requestId: number, pos: Vector3, heading: number): number;
/**
 * Creates prop from metaped asset bundle
 * https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
 * Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
 *
 * Hash: 0x9641A9A20310F6B8 | Since: 1207
 *
 * @deprecated Use ped.createMetaPedAsset() instead
 */
export declare function createMetaPedAsset(asset: number | string, pos: Vector3, rot: Vector3): number;
/**
 * Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
 *
 * Hash: 0xEAF682A14F8E5F53 | Since: 1207
 *
 * @deprecated Use ped.createMetaPedOutfitPed() instead
 */
export declare function createMetaPedOutfitPed(requestId: number, pos: Vector3, heading: number): number;
/**
 * No comment provided
 *
 * Hash: 0x19C975B81BE53C28 | Since: 1207
 *
 * @deprecated Use ped.detachVolumeFromEntity() instead
 */
export declare function detachVolumeFromEntity(volume: number, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xE1965A380342BE1F | Since: 1355
 *
 * @deprecated Use ped.disableAllLookAtRequests() instead
 */
export declare function disableAllLookAtRequests(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x80038740C96AD17F | Since: 1207
 *
 * @deprecated Use ped.disableAmbientLookAtRequests() instead
 */
export declare function disableAmbientLookAtRequests(): void;
/**
 * No comment provided
 *
 * Hash: 0xC0E880B7A441164D | Since: 1207
 *
 * @deprecated Use ped.doesMetaPedOutfitExistForPedModel() instead
 */
export declare function doesMetaPedOutfitExistForPedModel(outfit: number | string, model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4FF3C2B4E6A196C1 | Since: 1207
 *
 * @deprecated Use ped.doesMetaPedSuboutfitExistForPedModel() instead
 */
export declare function doesMetaPedSuboutfitExistForPedModel(outfit: number | string, suboutfit: number | string, model: number | string): boolean;
/**
 * Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
 *
 * Body Types:
 * MPCREATOR_NEUTRAL
 * MPCREATOR_SKINNY
 * MPCREATOR_SKINNY_MUSCULAR
 * MPCREATOR_HEAVY
 * MPCREATOR_HEAVY_MUSCULAR
 *
 * eBodyWeightOutfit (pedattributes.ymt):
 * -2045421226 (smallest)
 * -1745814259
 * -325933489
 * -1065791927
 * -844699484
 * -1273449080
 * 927185840
 * 149872391
 * 399015098
 * -644349862
 * 1745919061 (default)
 * 1004225511
 * 1278600348
 * 502499352
 * -2093198664
 * -1837436619
 * 1736416063
 * 2040610690
 * -1173634986
 * -867801909
 * 1960266524 (biggest)
 *
 * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
 *
 * Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
 *
 * Hash: 0x1902C4CFCC5BE57C | Since: 1207
 *
 * @deprecated Use ped.equipMetaPedOutfit() instead
 */
export declare function equipMetaPedOutfit(ped: number | Ped, hash: number | string): void;
/**
 * Changes Multiplayer ped face and body type components, they can be stacked
 * Params: p3 = 1
 * Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
 * Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
 * Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
 *
 * Hash: 0xA5BAE410B03E7371 | Since: 1207
 *
 * @deprecated Use ped.equipMetaPedOutfitExtra() instead
 */
export declare function equipMetaPedOutfitExtra(ped: number | Ped, component: number): void;
/**
 * Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
 * If p2 is true as player, then certain components like facial hair and hair will not be removed.
 * Old name: _SET_PED_OUTFIT_PRESET
 *
 * Hash: 0x77FF8D35EEC6BBC4 | Since: 1207
 *
 * @deprecated Use ped.equipMetaPedOutfitPreset() instead
 */
export declare function equipMetaPedOutfitPreset(ped: number | Ped, presetId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x66FF395445A88A6E | Since: 1207
 *
 * @deprecated Use ped.equipMetaPedSuboutfit() instead
 */
export declare function equipMetaPedSuboutfit(ped: number | Ped, suboutfit: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x8B3CB08158E98481 | Since: 1207
 *
 * @deprecated Use ped.fakeSetPedLocoInjured() instead
 */
export declare function fakeSetPedLocoInjured(ped: number | Ped, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1CE875505D45338A | Since: 1207
 *
 * @deprecated Use ped.forcePedDeath() instead
 */
export declare function forcePedDeath(ped: number | Ped, pedKiller: number | Ped, weapon: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDC9273D95976BA22 | Since: 1207
 *
 * @deprecated Use ped.getAccuracyAgainstLocalPlayerModifier() instead
 */
export declare function getAccuracyAgainstLocalPlayerModifier(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF103823FFE72BB49 | Since: 1207
 *
 * @deprecated Use ped.getActiveAnimalOwner() instead
 */
export declare function getActiveAnimalOwner(animal: number | Ped): number;
/**
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 *
 * Hash: 0x569F1E1237508DEB | Since: 1207
 *
 * @deprecated Use ped.getActiveDynamicScenario() instead
 */
export declare function getActiveDynamicScenario(ped: number | Ped): number;
/**
 * Returns kneeling, sitting, squating, and sleeping scenario hashes
 *
 * Hash: 0xC22AA08A8ADB87D4 | Since: 1207
 *
 * @deprecated Use ped.getActiveDynamicScenario2() instead
 */
export declare function getActiveDynamicScenario2(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x268B3AEBF032A88D | Since: 1207
 *
 * @deprecated Use ped.getBlockingOfNonTemporaryEvents() instead
 */
export declare function getBlockingOfNonTemporaryEvents(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x79443D56C8DF45EE | Since: 1207
 *
 * @deprecated Use ped.getCarrierAsHuman() instead
 */
export declare function getCarrierAsHuman(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xA033D7E4BBF9844D | Since: 1207
 *
 * @deprecated Use ped.getCarrierAsMount() instead
 */
export declare function getCarrierAsMount(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x09B83E68DE004CD4 | Since: 1207
 *
 * @deprecated Use ped.getCarrierAsPed() instead
 */
export declare function getCarrierAsPed(entity: number | Entity): number;
/**
 * Gets MetaPedExpression at index specified
 *
 * For index, see: _SET_CHAR_EXPRESSION
 *
 * Old name: _GET_PED_FACE_FEATURE
 *
 * Hash: 0xFD1BA1EEF7985BB8 | Since: 1207
 *
 * @deprecated Use ped.getCharExpression() instead
 */
export declare function getCharExpression(ped: number | Ped, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x3CC4A718C258BDD0 | Since: 1207
 *
 * @deprecated Use ped.getDefaultRelationshipGroupHash() instead
 */
export declare function getDefaultRelationshipGroupHash(modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD806CD2A4F2C2996 | Since: 1207
 *
 * @deprecated Use ped.getFirstEntityPedIsCarrying() instead
 */
export declare function getFirstEntityPedIsCarrying(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x13A1B061007C906B | Since: 1207
 *
 * @deprecated Use ped.getGroupFormation() instead
 */
export declare function getGroupFormation(groupId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x95B8E397B8F4360F | Since: 1207
 *
 * @deprecated Use ped.getHealthRechargeMultiplier() instead
 */
export declare function getHealthRechargeMultiplier(ped: number | Ped): number;
/**
 * Returns an int based on enum eTamingState
 *
 * enum eTamingState
 * {
 * ATS_INVALID = 0,
 * ATS_INACTIVE,
 * ATS_TARGET_DETECTED,
 * ATS_CALLED_OUT,
 * ATS_MOUNTABLE,
 * ATS_BEING_PATTED,
 * ATS_BREAKING_ACTIVE,
 * ATS_SPOOKED,
 * ATS_RETREATING,
 * ATS_FLEEING
 * };
 *
 * Hash: 0x454AD4DA6C41B5BD | Since: 1207
 *
 * @deprecated Use ped.getHorseTamingState() instead
 */
export declare function getHorseTamingState(horse: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x88D9D76D78065487 | Since: 1207
 *
 * @deprecated Use ped.getIncapacitationTimeRemaining() instead
 */
export declare function getIncapacitationTimeRemaining(ped: number | Ped): number;
/**
 * If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
 * _GET_IS_PED_[M-R]*
 *
 * Hash: 0xE33F98BD76490ABC | Since: 1207
 *
 * @deprecated Use ped.getIsPedBeingRobbed() instead
 */
export declare function getIsPedBeingRobbed(ped: number | Ped, player: number | string | Player, trueUntilPlayerPocketsItem: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x68821369A2CEADD5 | Since: 1207
 *
 * @deprecated Use ped.getIsPedCommandHashPresent() instead
 */
export declare function getIsPedCommandHashPresent(ped: number | Ped, commandHash: number | string): boolean;
/**
 * Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
 *
 * Hash: 0x331550B212014B92 | Since: 1207
 *
 * @deprecated Use ped.getIsPedInDisputeWithPed() instead
 */
export declare function getIsPedInDisputeWithPed(ped: number | Ped, pedInDisputeWith: number | Ped): boolean;
/**
 * motivationState: see _SET_PED_MOTIVATION
 *
 * Hash: 0x33FA048675821DA7 | Since: 1207
 *
 * @deprecated Use ped.getIsPedMotivationStateEnabled() instead
 */
export declare function getIsPedMotivationStateEnabled(ped: number | Ped, motivationState: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C31C51168E80365 | Since: 1207
 *
 * @deprecated Use ped.getLassoedLassoer() instead
 */
export declare function getLassoedLassoer(ped: number | Ped): number;
/**
 * _IS_PED_S* - _IS_PED_U*
 *
 * Hash: 0x833F0053340EF413 | Since: 1207
 *
 * @deprecated Use ped.getLassoerOfPed() instead
 */
export declare function getLassoerOfPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xB65A4DAB460A19BD | Since: 1207
 *
 * @deprecated Use ped.getLassoTarget() instead
 */
export declare function getLassoTarget(ped: number | Ped): number;
/**
 * Returns last horse the ped was leading
 *
 * Hash: 0x693126B5D0457D0D | Since: 1232
 *
 * @deprecated Use ped.getLastLedMount() instead
 */
export declare function getLastLedMount(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4C8B59171957BCF7 | Since: 1207
 *
 * @deprecated Use ped.getLastMount() instead
 */
export declare function getLastMount(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x5064DB5083C29921 | Since: 1207
 *
 * @deprecated Use ped.getLastVehicleDraftHorseWasAttachedTo() instead
 */
export declare function getLastVehicleDraftHorseWasAttachedTo(horse: number | Ped): number;
/**
 * lootFlag: see SET_LOOTING_FLAG
 *
 * Hash: 0xE4C11F104620DDCE | Since: 1207
 *
 * @deprecated Use ped.getLootingFlag() instead
 */
export declare function getLootingFlag(ped: number | Ped, lootFlag: number): boolean;
/**
 * enum eMetaPedType
 * {
 * MPT_MALE,
 * MPT_FEMALE,
 * MPT_TEEN,
 * MPT_ANIMAL,
 * MPT_NONE
 * };
 *
 * Hash: 0xEC9A1261BF0CE510 | Since: 1207
 *
 * @deprecated Use ped.getMetaPedType() instead
 */
export declare function getMetaPedType(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x90403E8107B60E81 | Since: 1207
 *
 * @deprecated Use ped.getNumComponentsInPed() instead
 */
export declare function getNumComponentsInPed(ped: number | Ped): number;
/**
 * Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
 *
 * Hash: 0xA622E66EEE92A08D | Since: 1207
 *
 * @deprecated Use ped.getNumComponentCategoriesInPed() instead
 */
export declare function getNumComponentCategoriesInPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x313778EDCA9158E2 | Since: 1207
 *
 * @deprecated Use ped.getNumFreeSlotsInPedPool() instead
 */
export declare function getNumFreeSlotsInPedPool(): number;
/**
 * No comment provided
 *
 * Hash: 0x62DE46F061CAA468 | Since: 1207
 *
 * @deprecated Use ped.getNumReservedAmbientPedsDesired() instead
 */
export declare function getNumReservedAmbientPedsDesired(): number;
/**
 * No comment provided
 *
 * Hash: 0x5C16855277819BBF | Since: 1207
 *
 * @deprecated Use ped.getNumReservedAmbientPedsReady() instead
 */
export declare function getNumReservedAmbientPedsReady(): number;
/**
 * No comment provided
 *
 * Hash: 0x16F2C8C084AB2092 | Since: 1207
 *
 * @deprecated Use ped.getNumReservedHealth() instead
 */
export declare function getNumReservedHealth(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x7BE607DAFF382FD2 | Since: 1207
 *
 * @deprecated Use ped.getPedsInCombatWithTarget() instead
 */
export declare function getPedsInCombatWithTarget(ped: number | Ped, itemset: any, flag: number): number;
/**
 * AI_ATTITUDE_NEUTRAL = 0,
 * AI_ATTITUDE_FRIENDLY,
 * AI_ATTITUDE_WARY,
 * AI_ATTITUDE_COMBATIVE,
 * AI_ATTITUDE_NEVER_MET
 *
 * Hash: 0x7CC2186C32D3540A | Since: 1207
 *
 * @deprecated Use ped.getPedAttitude() instead
 */
export declare function getPedAttitude(ped: number | Ped, player: number | string | Player): number;
/**
 * Can be used to get a peds foliage active status: variableName = FoliageActive
 *
 * Hash: 0x498F2E77982D6945 | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardBool() instead
 */
export declare function getPedBlackboardBool(ped: number | Ped, variableName: string): boolean;
/**
 * Can be used to get a peds foliage raw height: variableName = FoliageHeight
 *
 * Hash: 0x56E58D4D118FB45E | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardFloat() instead
 */
export declare function getPedBlackboardFloat(ped: number | Ped, variableName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xBF5E791BBBF90A3C | Since: 1207
 *
 * @deprecated Use ped.getPedBlackboardHash() instead
 */
export declare function getPedBlackboardHash(ped: number | Ped, variableName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xEC6B59BE445FEC51 | Since: 1207
 *
 * @deprecated Use ped.getPedBrawlingStyle() instead
 */
export declare function getPedBrawlingStyle(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x7A4E00364B5D727B | Since: 1207
 *
 * @deprecated Use ped.getPedCanBeIncapacitatedThisFrame() instead
 */
export declare function getPedCanBeIncapacitatedThisFrame(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCC2B20596E29E4E3 | Since: 1207
 *
 * @deprecated Use ped.getPedCombatAttribute() instead
 */
export declare function getPedCombatAttribute(ped: number | Ped, attributeIndex: number): boolean;
/**
 * Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
 *
 * Hash: 0xCCB97B51893C662F | Since: 1207
 *
 * @deprecated Use ped.getPedComponentCategoryByIndex() instead
 */
export declare function getPedComponentCategoryByIndex(ped: number | Ped, index: number): number;
/**
 * Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
 *
 * Hash: 0x6CFC373008A1EDAF | Since: 1207
 *
 * @deprecated Use ped.getPedDamaged() instead
 */
export declare function getPedDamaged(ped: number | Ped): boolean;
/**
 * enum ePedDamageCleanliness
 * {
 * PED_DAMAGE_CLEANLINESS_POOR,
 * PED_DAMAGE_CLEANLINESS_GOOD,
 * PED_DAMAGE_CLEANLINESS_PERFECT
 * };
 *
 * Hash: 0x88EFFED5FE8B0B4A | Since: 1207
 *
 * @deprecated Use ped.getPedDamageCleanliness() instead
 */
export declare function getPedDamageCleanliness(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xEF2E6F870783369B | Since: 1207
 *
 * @deprecated Use ped.getPedDefensiveVolume() instead
 */
export declare function getPedDefensiveVolume(ped: number | Ped): number;
/**
 * Returns ped drunk level
 * _H* or _I*
 *
 * Hash: 0x6FB76442469ABD68 | Since: 1207
 *
 * @deprecated Use ped.getPedDrunkness() instead
 */
export declare function getPedDrunkness(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xD0B7AEB56229D317 | Since: 1207
 *
 * @deprecated Use ped.getPedGrappler() instead
 */
export declare function getPedGrappler(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF3C873ED0C595109 | Since: 1207
 *
 * @deprecated Use ped.getPedGrappleFlag() instead
 */
export declare function getPedGrappleFlag(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x753B15AD0FD6F3E3 | Since: 1207
 *
 * @deprecated Use ped.getPedGrappleStyle() instead
 */
export declare function getPedGrappleStyle(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1D491CCF7211FB74 | Since: 1207
 *
 * @deprecated Use ped.getPedHeight() instead
 */
export declare function getPedHeight(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x31167ED4324B758D | Since: 1207
 *
 * @deprecated Use ped.getPedIdRange() instead
 */
export declare function getPedIdRange(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x89BFDF6D53145545 | Since: 1207
 *
 * @deprecated Use ped.getPedIncapacitationHealth() instead
 */
export declare function getPedIncapacitationHealth(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xD7AD3C7EBAF88C92 | Since: 1207
 *
 * @deprecated Use ped.getPedInteractionPersonality() instead
 */
export declare function getPedInteractionPersonality(ped: number | Ped): number;
/**
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
 *
 * Hash: 0x2C76FA0E01681F8D | Since: 1207
 *
 * @deprecated Use ped.getPedLassoHogtieFlag() instead
 */
export declare function getPedLassoHogtieFlag(ped: number | Ped, flagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F714E7A9DADFC42 | Since: 1207
 *
 * @deprecated Use ped.getPedLastDroppedHat() instead
 */
export declare function getPedLastDroppedHat(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1B710E6F4AB69341 | Since: 1355
 *
 * @deprecated Use ped.getPedLodMultiplier() instead
 */
export declare function getPedLodMultiplier(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xCB42AFE2B613EE55 | Since: 1207
 *
 * @deprecated Use ped.getPedMaxStamina() instead
 */
export declare function getPedMaxStamina(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6127F25ED21C533C | Since: 1207
 *
 * @deprecated Use ped.getPedMeleeActionPhase() instead
 */
export declare function getPedMeleeActionPhase(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x30569F348D126A5A | Since: 1207
 *
 * @deprecated Use ped.getPedMetaOutfitHash() instead
 */
export declare function getPedMetaOutfitHash(ped: number | Ped): number;
/**
 * PS_SMALL = 0,
 * PS_MEDIUM,
 * PS_MEDIUM_LARGE,
 * PS_LARGE,
 * PS_EXTRA_LARGE
 *
 * Hash: 0xA65AA1ACE81E5A77 | Since: 1311
 *
 * @deprecated Use ped.getPedModelSizeFromHash() instead
 */
export declare function getPedModelSizeFromHash(modelHash: number | string): number;
/**
 * If targetPed is set to 0 the ped motivationState affects everyone
 *
 * Hash: 0x42688E94E96FD9B4 | Since: 1207
 *
 * @deprecated Use ped.getPedMotivation() instead
 */
export declare function getPedMotivation(ped: number | Ped, motivationState: number, targetPed: number | Ped): number;
/**
 * Returns Ped Quality to be used to calculate Skinning Quality
 *
 * enum ePedQuality
 * {
 * PQ_INVALID = -1,
 * PQ_LOW,
 * PQ_MEDIUM,
 * PQ_HIGH,
 * PQ_MAX
 * };
 *
 * Hash: 0x7BCC6087D130312A | Since: 1207
 *
 * @deprecated Use ped.getPedQuality() instead
 */
export declare function getPedQuality(ped: number | Ped): number;
/**
 * Gets a registered/attached prop entity for a particular ped. Second parameter will detach the prop entity from the ped if true. Props primarily appear to come from scenarios, such as a broom or hay bale.
 *
 * Known props: https://pastebin.com/ap2NEJqB
 *
 * Hash: 0x4D0D2E3D8BC000EB | Since: 1207
 *
 * @deprecated Use ped.getPedRegisterProp() instead
 */
export declare function getPedRegisterProp(ped: number | Ped, propName: string, detachProp: boolean): number;
/**
 * normalized / non normalized
 * 0.0        / 1000.0         STARTED IN WRITHE STAGE
 * 1.0        / 0.0            END OF WRITHE, DEAD
 * -1.0                        DEAD
 *
 * Returns some value from AI task 562 (unknown).
 *
 * Hash: 0xEBE89623EB861271 | Since: 1207
 *
 * @deprecated Use ped.getPedRemainingRevivalTime() instead
 */
export declare function getPedRemainingRevivalTime(ped: number | Ped, normalized: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x775A1CA7893AA8B5 | Since: 1207
 *
 * @deprecated Use ped.getPedStamina() instead
 */
export declare function getPedStamina(ped: number | Ped): number;
/**
 * Returns stamina normalizedValue / normalizedUnlockedMax
 *
 * Hash: 0x22F2A386D43048A9 | Since: 1207
 *
 * @deprecated Use ped.getPedStaminaNormalized() instead
 */
export declare function getPedStaminaNormalized(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x65C75FDCCAC86464 | Since: 1355
 *
 * @deprecated Use ped.getPedTranquilizer() instead
 */
export declare function getPedTranquilizer(ped: number | Ped): number;
/**
 * Returns peltId
 *
 * Hash: 0x0CEEB6F4780B1F2F | Since: 1207
 *
 * @deprecated Use ped.getPeltFromHorse() instead
 */
export declare function getPeltFromHorse(horse: number | Ped, index: number): number;
/**
 * Returns animal skin quality modifier
 *
 * Hash: 0xEE2D5C819A65BF26 | Since: 1311
 *
 * @deprecated Use ped.getPlayerCurrentAnimalDamageModifier() instead
 */
export declare function getPlayerCurrentAnimalDamageModifier(player: number | string | Player): number;
/**
 * Returns how deep the water is below the ped (if in water)
 * -1.0f = Not in water
 * 10.0f = Max water depth
 *
 * Hash: 0x2942457417A5FD24 | Since: 1207
 *
 * @deprecated Use ped.getPlayerPedWaterDepth() instead
 */
export declare function getPlayerPedWaterDepth(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xB676EFDA03DADA52 | Since: 1207
 *
 * @deprecated Use ped.getRiderOfMount() instead
 */
export declare function getRiderOfMount(mount: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x63342C50EC115CE8 | Since: 1207
 *
 * @deprecated Use ped.getShopItemBaseLayers() instead
 */
export declare function getShopItemBaseLayers(shopItem: number | string, ped: number | Ped, metapedType: number, drawable: number | string, albedo: number | string, normal: number | string, material: number | string): boolean;
/**
 * Returns the current shop item component at index and it's wearable state
 *
 * Hash: 0x77BA37622E22023B | Since: 1207
 *
 * @deprecated Use ped.getShopItemComponentAtIndex() instead
 */
export declare function getShopItemComponentAtIndex(ped: number | Ped, index: number, argStruct: any, wearableState: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5FF9A878C3D115B8 | Since: 1207
 *
 * @deprecated Use ped.getShopItemComponentCategory() instead
 */
export declare function getShopItemComponentCategory(componentHash: number | string, metapedType: number, isMP: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x7E02E4218D916B94 | Since: 1207
 *
 * @deprecated Use ped.getShopItemHatComponent() instead
 */
export declare function getShopItemHatComponent(ped: number | Ped, metapedType: number): any;
/**
 * Returns the number of wearable states available for a shop item / component. p2 seems to be true in scripts.
 *
 * For use with 0x6243635AF2F1B826 (_GET_SHOP_ITEM_AVAILABLE_WEARABLE_STATE_BY_INDEX)
 *
 * Hash: 0xFFCC2DB2D9953401 | Since: 1207
 *
 * @deprecated Use ped.getShopItemNumWearableStates() instead
 */
export declare function getShopItemNumWearableStates(componentHash: number | string, isMpFemale: boolean): number;
/**
 * Gets an available wearable state by index for a shop item / component - it does not retreive what the current state is. p3 seems to be true in scripts.
 *
 * Use 0xFFCC2DB2D9953401 (_GET_SHOP_ITEM_NUM_WEARABLE_STATES) to get the number of available wearable states
 *
 * Hash: 0x6243635AF2F1B826 | Since: 1207
 *
 * @deprecated Use ped.getShopItemWearableStateByIndex() instead
 */
export declare function getShopItemWearableStateByIndex(componentHash: number | string, wearableStateIndex: number, isMpFemale: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x825F6DD559A0895B | Since: 1207
 *
 * @deprecated Use ped.getStaminaDepletionMultiplier() instead
 */
export declare function getStaminaDepletionMultiplier(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xE7687EB2F634ABF0 | Since: 1207
 *
 * @deprecated Use ped.getStaminaRechargeMultiplier() instead
 */
export declare function getStaminaRechargeMultiplier(ped: number | Ped): number;
/**
 * _GET_WA*
 *
 * Hash: 0x92C8EACA29F6BED6 | Since: 1207
 *
 * @deprecated Use ped.getTotalPedDamageFromAi() instead
 */
export declare function getTotalPedDamageFromAi(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x849BD6C6314793D0 | Since: 1207
 *
 * @deprecated Use ped.getTransportPedIsSeatedOn() instead
 */
export declare function getTransportPedIsSeatedOn(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xE4770DA1B8FF4FD1 | Since: 1207
 *
 * @deprecated Use ped.getVehicleDraftHorseIsAttachedTo() instead
 */
export declare function getVehicleDraftHorseIsAttachedTo(horse: number | Ped): number;
/**
 * Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 *
 * Hash: 0xD65FDC686A031C83 | Since: 1207
 *
 * @deprecated Use ped.givePedHashCommand() instead
 */
export declare function givePedHashCommand(ped: number | Ped, commandHash: number | string, activationDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3BBDD6143FF16F98 | Since: 1207
 *
 * @deprecated Use ped.givePedScenarioProp() instead
 */
export declare function givePedScenarioProp(ped: number | Ped, object: number | Object, conditionalAnim: string): boolean;
/**
 * Only used in SP R* Script rcm_jack2
 *
 * Hash: 0xA0774E388CE4A679 | Since: 1207
 *
 * @deprecated Use ped.givePedScenarioPropDynamic() instead
 */
export declare function givePedScenarioPropDynamic(ped: number | Ped, object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB0B2C6D170B0E8E5 | Since: 1207
 *
 * @deprecated Use ped.hasMetaPedAssetLoaded() instead
 */
export declare function hasMetaPedAssetLoaded(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x610438375E5D1801 | Since: 1207
 *
 * @deprecated Use ped.hasMetaPedOutfitLoaded() instead
 */
export declare function hasMetaPedOutfitLoaded(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC0940AC858C1E126 | Since: 1207
 *
 * @deprecated Use ped.hasMetaPedRequestLoaded() instead
 */
export declare function hasMetaPedRequestLoaded(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x29FCE825613FEFCA | Since: 1207
 *
 * @deprecated Use ped.hasPedBeenShovedRecently() instead
 */
export declare function hasPedBeenShovedRecently(ped: number | Ped, ms: number): boolean;
/**
 * See _REQUEST_PED_EMOTIONAL_PRESET
 *
 * Hash: 0xDE3904B22695D9F9 | Since: 1207
 *
 * @deprecated Use ped.hasPedEmotionalPresetLoaded() instead
 */
export declare function hasPedEmotionalPresetLoaded(ped: number | Ped, name: string): boolean;
/**
 * limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
 *
 * Hash: 0xBA208A8D6399A3AC | Since: 1207
 *
 * @deprecated Use ped.hasPedTakenGoreDamage() instead
 */
export declare function hasPedTakenGoreDamage(ped: number | Ped, limb: number): boolean;
/**
 * _H* - _I*
 *
 * Hash: 0xBAE08F00021BFFB2 | Since: 1207
 *
 * @deprecated Use ped.horseAgitate() instead
 */
export declare function horseAgitate(mount: number | Ped, kickOffRider: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF6262491C7704A63 | Since: 1207
 *
 * @deprecated Use ped.incapacitatedRevive() instead
 */
export declare function incapacitatedRevive(ped: number | Ped, ped2: number | Ped): void;
/**
 * Returns true only if it's a player ped and an animal as well.
 * _IS_ANY_* - _IS_CONTROL_*
 *
 * Hash: 0x0E2F43516F998269 | Since: 1311
 *
 * @deprecated Use ped.isAnimalControlledByAPlayer() instead
 */
export declare function isAnimalControlledByAPlayer(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7FC84E85D98F063D | Since: 1207
 *
 * @deprecated Use ped.isAnimalInteractionRunning() instead
 */
export declare function isAnimalInteractionRunning(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x93FFD92F05EC32FD | Since: 1207
 *
 * @deprecated Use ped.isMetaPedAssetValid() instead
 */
export declare function isMetaPedAssetValid(requestId: number): boolean;
/**
 * Returns true if given ped is a fish.
 * _IS_ME* - _IS_MO*
 *
 * Hash: 0x118D476A6F1A13F1 | Since: 1207
 *
 * @deprecated Use ped.isMetaPedFish() instead
 */
export declare function isMetaPedFish(ped: number | Ped): boolean;
/**
 * Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
 *
 * Hash: 0x98082246107A6ACF | Since: 1207
 *
 * @deprecated Use ped.isMetaPedOutfitEquipped() instead
 */
export declare function isMetaPedOutfitEquipped(ped: number | Ped, outfit: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB25E57FC8E37114D | Since: 1207
 *
 * @deprecated Use ped.isMetaPedOutfitRequestValid() instead
 */
export declare function isMetaPedOutfitRequestValid(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x43E4DA469541A9C9 | Since: 1207
 *
 * @deprecated Use ped.isMetaPedRequestValid() instead
 */
export declare function isMetaPedRequestValid(requestId: number): boolean;
/**
 * checks if a ped is using a component category
 * see component category hashes here https://raw.githubusercontent.com/femga/rdr3_discoveries/refs/heads/master/clothes/cloth_hash_names.lua
 * Old name: _IS_META_PED_USING_COMPONENT
 *
 * Hash: 0xFB4891BD7578CDC1 | Since: 1207
 *
 * @deprecated Use ped.isMetaPedUsingComponentCategory() instead
 */
export declare function isMetaPedUsingComponentCategory(ped: number | Ped, componentCategory: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAAB0FE202E9FC9F0 | Since: 1207
 *
 * @deprecated Use ped.isMountSeatFree() instead
 */
export declare function isMountSeatFree(mount: number | Ped, seat: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB346C85D49CC998E | Since: 1207
 *
 * @deprecated Use ped.isPedActionDisableFlagEnabled() instead
 */
export declare function isPedActionDisableFlagEnabled(ped: number | Ped, actionDisableFlag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x137772000DAF42C5 | Since: 1207
 *
 * @deprecated Use ped.isPedChild() instead
 */
export declare function isPedChild(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59643424B68D52B5 | Since: 1207
 *
 * @deprecated Use ped.isPedClimbingLadder() instead
 */
export declare function isPedClimbingLadder(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB086C8C0F5701D14 | Since: 1207
 *
 * @deprecated Use ped.isPedCowering() instead
 */
export declare function isPedCowering(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC488B8C0E52560D8 | Since: 1207
 *
 * @deprecated Use ped.isPedDoingScenarioTransition() instead
 */
export declare function isPedDoingScenarioTransition(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x226CF9B159E38F42 | Since: 1207
 *
 * @deprecated Use ped.isPedDragging() instead
 */
export declare function isPedDragging(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x50F124E6EF188B22 | Since: 1207
 *
 * @deprecated Use ped.isPedDrunk() instead
 */
export declare function isPedDrunk(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x878B68960C1C2A35 | Since: 1207
 *
 * @deprecated Use ped.isPedGroupLeader() instead
 */
export declare function isPedGroupLeader(ped: number | Ped, groupId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57779B55B83E2BEA | Since: 1207
 *
 * @deprecated Use ped.isPedIntimidated() instead
 */
export declare function isPedIntimidated(ped: number | Ped): boolean;
/**
 * _IS_PED_IN*
 *
 * Hash: 0x7583A9D35248B83F | Since: 1207
 *
 * @deprecated Use ped.isPedInvestigating() instead
 */
export declare function isPedInvestigating(ped: number | Ped): boolean;
/**
 * If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
 * If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
 * _IS_PED_IN_*
 *
 * Hash: 0x078076AB50FB117F | Since: 1207
 *
 * @deprecated Use ped.isPedInPoint() instead
 */
export declare function isPedInPoint(ped: number | Ped, pos: Vector3, radius: number): boolean;
/**
 * _IS_PED_L* - _IS_PED_M*
 *
 * Hash: 0x917760CFE7A0E0F1 | Since: 1207
 *
 * @deprecated Use ped.isPedLeadingAnyGroup() instead
 */
export declare function isPedLeadingAnyGroup(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA9F048DCF69B6DC | Since: 1207
 *
 * @deprecated Use ped.isPedModelSuppressed() instead
 */
export declare function isPedModelSuppressed(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D9BFCE3352DE47F | Since: 1207
 *
 * @deprecated Use ped.isPedQueuedForDeletion() instead
 */
export declare function isPedQueuedForDeletion(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD6740E14E4CEFC0B | Since: 1207
 *
 * @deprecated Use ped.isPedSliding() instead
 */
export declare function isPedSliding(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02AA2096FE00F3E1 | Since: 1207
 *
 * @deprecated Use ped.isPedTargetActionDisableFlagEnabled() instead
 */
export declare function isPedTargetActionDisableFlagEnabled(ped: number | Ped, actionDisableFlag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEBB208D6AE712C03 | Since: 1207
 *
 * @deprecated Use ped.isPedUsingActionMode2() instead
 */
export declare function isPedUsingActionMode2(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5102307CE88798EB | Since: 1207
 *
 * @deprecated Use ped.isPedVisibilityTracked() instead
 */
export declare function isPedVisibilityTracked(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x91A5F9CBEBB9D936 | Since: 1207
 *
 * @deprecated Use ped.isScenarioBlockingAreaValid() instead
 */
export declare function isScenarioBlockingAreaValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E5CBCB3941D7D08 | Since: 1207
 *
 * @deprecated Use ped.isTarget() instead
 */
export declare function isTarget(ped: number | Ped, targetPed: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x31DC8D3F216D8509 | Since: 1207
 *
 * @deprecated Use ped.isTextureValid() instead
 */
export declare function isTextureValid(textureId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x772A1969F649E902 | Since: 1207
 *
 * @deprecated Use ped.isThisModelAHorse() instead
 */
export declare function isThisModelAHorse(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x164CECC59E70DF86 | Since: 1207
 *
 * @deprecated Use ped.isTrackedPedVisibilityPercentageNotLessThan() instead
 */
export declare function isTrackedPedVisibilityPercentageNotLessThan(ped: number | Ped, percent: number): boolean;
/**
 * _IS_TRACKED_* - IS_V*
 *
 * Hash: 0xAF61B3CD8C3B82C3 | Since: 1207
 *
 * @deprecated Use ped.isUsingSlipstream() instead
 */
export declare function isUsingSlipstream(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x935CF6E42BAF7F4D | Since: 1207
 *
 * @deprecated Use ped.pedClearLocoMotion() instead
 */
export declare function pedClearLocoMotion(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xBD6B242B8BD5543A | Since: 1207
 *
 * @deprecated Use ped.pedDuelingDidPlayerHeadshotOpponent() instead
 */
export declare function pedDuelingDidPlayerHeadshotOpponent(ped: number | Ped): boolean;
/**
 * target: 0 affects everyone
 * duration: -1 indefinite
 * flag: always 4 in R* Scripts
 *
 * Hash: 0xAAB050DA48B57978 | Since: 1207
 *
 * @deprecated Use ped.pedEmotionalPresetLocoMotion() instead
 */
export declare function pedEmotionalPresetLocoMotion(ped: number | Ped, presetName: string, targetPed: number | Ped, duration: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x06FA94C835787C64 | Since: 1207
 *
 * @deprecated Use ped.pedWasKilledByHeadshot() instead
 */
export declare function pedWasKilledByHeadshot(ped: number | Ped): boolean;
/**
 * Returns loot state
 * enum eLootState
 * {
 * LAP_NONE,
 * LAP_RESUMING,
 * LAP_GETTING_ON_FOOT,
 * LAP_DISTANT_NAV,
 * LAP_CHOOSING_ACTION,
 * LAP_APPROACHING,
 * LAP_ENTERING,
 * LAP_LOOTING,
 * LAP_EXITING
 * };
 *
 * _POSSE_* - _REGISTER_HATED*
 *
 * Hash: 0x5463C962BC7777C3 | Since: 1207
 *
 * @deprecated Use ped.refreshLootStateForPed() instead
 */
export declare function refreshLootStateForPed(ped: number | Ped, lootTarget: number | Ped): number;
/**
 * p1 is always 1
 *
 * Hash: 0x59BD177A1A48600A | Since: 1207
 *
 * @deprecated Use ped.refreshMetaPedShopItems() instead
 */
export declare function refreshMetaPedShopItems(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD8736EFDA38EDC5C | Since: 1207
 *
 * @deprecated Use ped.registerHatedTargetsInArea() instead
 */
export declare function registerHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x13E7320C762F0477 | Since: 1207
 *
 * @deprecated Use ped.releaseMetaPedAssetRequest() instead
 */
export declare function releaseMetaPedAssetRequest(requestId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4592B8B9B0EF5F48 | Since: 1207
 *
 * @deprecated Use ped.releaseMetaPedOutfitRequest() instead
 */
export declare function releaseMetaPedOutfitRequest(requestId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3972F78A78B5D9DF | Since: 1207
 *
 * @deprecated Use ped.releaseMetaPedRequest() instead
 */
export declare function releaseMetaPedRequest(requestId: number): void;
/**
 * Removes a texture created by 0xC5E7204F322E49EB.
 *
 * Hash: 0x6BEFAA907B076859 | Since: 1207
 *
 * @deprecated Use ped.releaseTexture() instead
 */
export declare function releaseTexture(textureId: number): void;
/**
 * Removes gravity well by handle returned from 0x4F5EBE70081E5A20
 *
 * Hash: 0x87247BC60B60BED8 | Since: 1207
 *
 * @deprecated Use ped.removeGravityWell() instead
 */
export declare function removeGravityWell(handle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDE7B2B4144906CDF | Since: 1207
 *
 * @deprecated Use ped.removeMotionTypeAsset() instead
 */
export declare function removeMotionTypeAsset(nameHash: number | string, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA6F67BEC53379A32 | Since: 1207
 *
 * @deprecated Use ped.removePedBlackboardBool() instead
 */
export declare function removePedBlackboardBool(ped: number | Ped, variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x411189E51B8020BA | Since: 1207
 *
 * @deprecated Use ped.removePedBlackboardFloat() instead
 */
export declare function removePedBlackboardFloat(ped: number | Ped, variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0E17378642156790 | Since: 1207
 *
 * @deprecated Use ped.removePedBlackboardHash() instead
 */
export declare function removePedBlackboardHash(ped: number | Ped, variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x81B75428A7813E67 | Since: 1207
 *
 * @deprecated Use ped.removePedBlackboardInt() instead
 */
export declare function removePedBlackboardInt(ped: number | Ped, variableName: string): void;
/**
 * See _REQUEST_PED_EMOTIONAL_PRESET
 *
 * Hash: 0xFC3BAB1801A8255A | Since: 1207
 *
 * @deprecated Use ped.removePedEmotionalPreset() instead
 */
export declare function removePedEmotionalPreset(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5337B721C51883A9 | Since: 1207
 *
 * @deprecated Use ped.removePedFromMount() instead
 */
export declare function removePedFromMount(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x96C349DE04C49011 | Since: 1207
 *
 * @deprecated Use ped.removePedOverlay() instead
 */
export declare function removePedOverlay(textureId: number, overlayId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3A50753042B6891B | Since: 1207
 *
 * @deprecated Use ped.removePedProp() instead
 */
export declare function removePedProp(ped: number | Ped, propName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0CAB404CD2DB41F5 | Since: 1207
 *
 * @deprecated Use ped.removePedStayOutVolume() instead
 */
export declare function removePedStayOutVolume(ped: number | Ped, volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x011A42FD923D41CA | Since: 1311
 *
 * @deprecated Use ped.removePedSubscribeToLegendaryBlips() instead
 */
export declare function removePedSubscribeToLegendaryBlips(ped: number | Ped): boolean;
/**
 * Directly removes a shop item component from a ped
 * Params: p2 and p3 are always 0
 *
 * Hash: 0x0D7FFA1B2F69ED82 | Since: 1355
 *
 * @deprecated Use ped.removeShopItemFromPed() instead
 */
export declare function removeShopItemFromPed(ped: number | Ped, componentHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4707E9C23D8CA3FE | Since: 1207
 *
 * @deprecated Use ped.removeTarget() instead
 */
export declare function removeTarget(ped: number | Ped, targetPed: number | Ped): void;
/**
 * Returns requestId
 * Params: p1 = 1 in R* Scripts (Used in SP only)
 *
 * Hash: 0xF97C34C33487D569 | Since: 1207
 *
 * @deprecated Use ped.requestMetaPed() instead
 */
export declare function requestMetaPed(model: number | string): number;
/**
 * Returns requestId
 * Params: p1 = 1 in R* Scripts
 *
 * Hash: 0x91FE941F9FCFB702 | Since: 1207
 *
 * @deprecated Use ped.requestMetaPedAssetBundle() instead
 */
export declare function requestMetaPedAssetBundle(asset: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF6D9E1F3560CBF8E | Since: 1207
 *
 * @deprecated Use ped.requestMetaPedComponent() instead
 */
export declare function requestMetaPedComponent(metaPedType: number): any;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
 * Returns requestId, to be used with 0x74F512E29CB717E2
 *
 * Hash: 0x13154A76CE0CF9AB | Since: 1207
 *
 * @deprecated Use ped.requestMetaPedOutfit() instead
 */
export declare function requestMetaPedOutfit(model: number | string, outfit: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF7EA250B9A919E03 | Since: 1207
 *
 * @deprecated Use ped.requestMotionTypeAsset() instead
 */
export declare function requestMotionTypeAsset(nameHash: number | string, ped: number | Ped): void;
/**
 * For more information, see common:/data/emotional_presets.meta
 *
 * Hash: 0x5C3C55EAAD19915F | Since: 1207
 *
 * @deprecated Use ped.requestPedEmotionalPreset() instead
 */
export declare function requestPedEmotionalPreset(ped: number | Ped, name: string): void;
/**
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/fwFacialAnimRequest__Mood
 * Params: p2 = 6 in R* Scripts
 *
 * Hash: 0x8B3B71C80A29A4BB | Since: 1207
 *
 * @deprecated Use ped.requestPedFacialMoodThisFrame() instead
 */
export declare function requestPedFacialMoodThisFrame(ped: number | Ped, mood: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xBDED916A9F9B0604 | Since: 1207
 *
 * @deprecated Use ped.requestPedForScenarioType() instead
 */
export declare function requestPedForScenarioType(ped: number | Ped, object: number | Object, scenarioType: number | string): any;
/**
 * Known get up animation types: REAR, FRONT
 *
 * Hash: 0xEAA8242C8479C27D | Since: 1207
 *
 * @deprecated Use ped.requestPedGetupAnimation() instead
 */
export declare function requestPedGetupAnimation(ped: number | Ped, getUpType: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBEC65C6049B3219D | Since: 1207
 *
 * @deprecated Use ped.requestPropScenarioPed() instead
 */
export declare function requestPropScenarioPed(ped: number | Ped, object: number | Object): any;
/**
 * Creates a texture override data for ped and returns it's index.
 * So you can replace any texture of any ped's component.
 * Also, you can add overlays on it, such as aging, lipstick and more.
 * Textures can be reused by multiple peds at once.
 * You can keep only 32 textures at once(including other peds).
 *
 * https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
 * materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
 *
 * Hash: 0xC5E7204F322E49EB | Since: 1207
 *
 * @deprecated Use ped.requestTexture() instead
 */
export declare function requestTexture(albedoHash: number | string, normalHash: number | string, materialHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xED9582B3DA8F02B4 | Since: 1207
 *
 * @deprecated Use ped.reserveAmbientPeds() instead
 */
export declare function reserveAmbientPeds(numPeds: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF008E0BA1FE1D644 | Since: 1207
 *
 * @deprecated Use ped.reserveAmbientPedsTotal() instead
 */
export declare function reserveAmbientPedsTotal(numPeds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0BFA1BD465CDFEFD | Since: 1207
 *
 * @deprecated Use ped.resetPedComponents() instead
 */
export declare function resetPedComponents(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4B9668DB91DC39B8 | Since: 1207
 *
 * @deprecated Use ped.resetPedIncapacitationBleedOutDuration() instead
 */
export declare function resetPedIncapacitationBleedOutDuration(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x801917E7D7BCE418 | Since: 1207
 *
 * @deprecated Use ped.resetPedLadderMovementSpeedModifier() instead
 */
export declare function resetPedLadderMovementSpeedModifier(ped: number | Ped): void;
/**
 * Removes every texture layer but the base layer
 * Clearing texture's data: setting params to default values, but keep overlays.
 *
 * Hash: 0x8472A1789478F82F | Since: 1207
 *
 * @deprecated Use ped.resetPedTexture() instead
 */
export declare function resetPedTexture(textureId: number): void;
/**
 * 0.0 <= stamina <= 100.0
 *
 * Hash: 0x675680D089BFA21F | Since: 1207
 *
 * @deprecated Use ped.restorePedStamina() instead
 */
export declare function restorePedStamina(ped: number | Ped, stamina: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC2266AA617668AD3 | Since: 1207
 *
 * @deprecated Use ped.setAccuracyAgainstLocalPlayerModifier() instead
 */
export declare function setAccuracyAgainstLocalPlayerModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC0258742B034DFAF | Since: 1207
 *
 * @deprecated Use ped.setAmbientAnimalDensityMultiplierThisFrame() instead
 */
export declare function setAmbientAnimalDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBA0980B5C0A11924 | Since: 1207
 *
 * @deprecated Use ped.setAmbientHumanDensityMultiplierThisFrame() instead
 */
export declare function setAmbientHumanDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAB0D553FE20A6E25 | Since: 1207
 *
 * @deprecated Use ped.setAmbientPedDensityMultiplierThisFrame() instead
 */
export declare function setAmbientPedDensityMultiplierThisFrame(multiplier: number): void;
/**
 * Sets MetaPedExpression at index specified. Morphs components, such as changing body size or facial features.
 *
 * Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
 *
 * index = MetaPedExpression IDs
 * List of face features: https://pastebin.com/9jb88FXW
 * Full list of MetaPedExpressions: https://pastebin.com/Ld76cAn7
 * value: -1.0 to 1.0 (values beyond this likely won't sync to other clients)
 *
 * This native also allows you to change a horse's gender.
 *
 * Old name: _SET_PED_FACE_FEATURE
 *
 * Hash: 0x5653AB26C82938CF | Since: 1207
 *
 * @deprecated Use ped.setCharExpression() instead
 */
export declare function setCharExpression(ped: number | Ped, index: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x069EDDF1FD4DEB0A | Since: 1207
 *
 * @deprecated Use ped.setCurrentDefenseAgainstPlayersModifier() instead
 */
export declare function setCurrentDefenseAgainstPlayersModifier(horse: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9B6808EC46BE849B | Since: 1207
 *
 * @deprecated Use ped.setDefenseModifierForPed() instead
 */
export declare function setDefenseModifierForPed(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x478F6B9920446CE2 | Since: 1207
 *
 * @deprecated Use ped.setFormationAutoAssignPosition() instead
 */
export declare function setFormationAutoAssignPosition(groupId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDE1B1907A83A1550 | Since: 1207
 *
 * @deprecated Use ped.setHealthRechargeMultiplier() instead
 */
export declare function setHealthRechargeMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFECA2081F61ED2CD | Since: 1207
 *
 * @deprecated Use ped.setInteractionLockonFlag() instead
 */
export declare function setInteractionLockonFlag(ped: number | Ped, player: number | string | Player, flag: number, enable: boolean): void;
/**
 * Use to apply metaped player components
 * Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
 *
 * Hash: 0xBC6DF00D7A4A6819 | Since: 1207
 *
 * @deprecated Use ped.setMetaPedTag() instead
 */
export declare function setMetaPedTag(ped: number | Ped, drawable: number | string, albedo: number | string, normal: number | string, material: number | string, palette: number | string, tint0: number, tint1: number, tint2: number): void;
/**
 * Sets ped eye redness, weariness: 0.f to 1.f
 *
 * Hash: 0x314C5465195F3B30 | Since: 1207
 *
 * @deprecated Use ped.setMetaPedWeariness() instead
 */
export declare function setMetaPedWeariness(ped: number | Ped, weariness: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7883AA809DF43D98 | Since: 1355
 *
 * @deprecated Use ped.setMinPedHealthThreshold() instead
 */
export declare function setMinPedHealthThreshold(ped: number | Ped, healthAmount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA69899995997A63B | Since: 1207
 *
 * @deprecated Use ped.setMountBondingLevel() instead
 */
export declare function setMountBondingLevel(ped: number | Ped, bondingLevel: number): void;
/**
 * Note: this native was added in build 1232.40
 *
 * Hash: 0x11E6B9629C46D6EC | Since: 1232
 *
 * @deprecated Use ped.setMountSecurityEnabled() instead
 */
export declare function setMountSecurityEnabled(ped: number | Ped, toggle: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
 *
 * Hash: 0xB8DE69D9473B7593 | Since: 1207
 *
 * @deprecated Use ped.setPedActionDisableFlag() instead
 */
export declare function setPedActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
/**
 * bloodFountainPressure: visible effect from 0.0 till 20.0
 * yaw: visible effect from -3.0 till 3.0
 * bloodFountainDirection: 1.0 left side, -1.0 right side
 * bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
 * make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
 *
 * Hash: 0xFFD54D9FE71B966A | Since: 1207
 *
 * @deprecated Use ped.setPedActivateWoundEffect() instead
 */
export declare function setPedActivateWoundEffect(ped: number | Ped, boneId: number, moveWoundLeftRight: number, bloodFountainPressure: number, yaw: number, bloodFountainDirection: number, bloodFountainPulse: number): void;
/**
 * Params: hash - ARTHUR or JOHN
 * _SET_PED_(A-D)*
 *
 * Hash: 0xB285AD0EC870B2DF | Since: 1207
 *
 * @deprecated Use ped.setPedActivePlayerType() instead
 */
export declare function setPedActivePlayerType(ped: number | Ped, playerType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x43CA928E892CFDB8 | Since: 1311
 *
 * @deprecated Use ped.setPedAnimalDetectionModifier() instead
 */
export declare function setPedAnimalDetectionModifier(ped: number | Ped, modifier: number): void;
/**
 * NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
 *
 * Hash: 0x6DBF2D78709AD70B | Since: 1207
 *
 * @deprecated Use ped.setPedBeatMultiplier() instead
 */
export declare function setPedBeatMultiplier(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCB9401F918CB0F75 | Since: 1207
 *
 * @deprecated Use ped.setPedBlackboardBool() instead
 */
export declare function setPedBlackboardBool(ped: number | Ped, variableName: string, value: boolean, removeTimer: number): void;
/**
 * No comment provided
 *
 * Hash: 0x437C08DB4FEBE2BD | Since: 1207
 *
 * @deprecated Use ped.setPedBlackboardFloat() instead
 */
export declare function setPedBlackboardFloat(ped: number | Ped, variableName: string, value: number, removeTimer: number): void;
/**
 * p1:
 * BodyPartChained
 * OverloadMostInjuredBodyPart
 *
 * p2:
 * LeftLeg
 * Legs
 * RightArm
 *
 * Hash: 0xA762C9D6CF165E0D | Since: 1207
 *
 * @deprecated Use ped.setPedBlackboardHash() instead
 */
export declare function setPedBlackboardHash(ped: number | Ped, variableName: string, value: string, removeTimer: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
 * Blackboard natives allow you to apply and check certain data to/for peds.
 * Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
 * Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
 * "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
 *
 * Hash: 0x5F53010C4C3F6BAF | Since: 1207
 *
 * @deprecated Use ped.setPedBlackboardInt() instead
 */
export declare function setPedBlackboardInt(ped: number | Ped, variableName: string, value: number, removeTimer: number): void;
/**
 * Bleedout profiles:
 * Animal_FastBleedout
 * Animal_Generic
 * Human_FastBleedout
 * Human_Generic
 * Human_Mission
 *
 * For more information, see common/data/ai/peddamageinfo.meta
 *
 * Hash: 0x66C047719B0E80E1 | Since: 1207
 *
 * @deprecated Use ped.setPedBleedoutProfile() instead
 */
export declare function setPedBleedoutProfile(ped: number | Ped, bleedoutProfile: number | string): void;
/**
 * brawlingStyle:
 * enum eBrawlingStyle : Hash
 * {
 * BS_AI = 0x802C604D,
 * BS_AI_BARBRAWL = 0x4FF5F0C7,
 * BS_AI_DEFENSIVE = 0xD888F2FD,
 * BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
 * BS_ALLIGATOR = 0x7A5548ED,
 * BS_ALLIGATOR_LARGE = 0x368EC7CB,
 * BS_ALLY = 0x69C76C14,
 * BS_ANIMAL = 0xD777C754,
 * BS_BADGER = 0x7E7C3F53,
 * BS_BEAR = 0x0BC66E35,
 * BS_BEAVER = 0x4E313783,
 * BS_BOAR = 0x176A5831,
 * BS_BOUNTY_HUNTER = 0x3900654C,
 * BS_BRUISER = 0x4514DB61,
 * BS_BULL = 0x4E50C5D2,
 * BS_COUGAR = 0x9DAA7CCB,
 * BS_COW = 0xB0E91295,
 * BS_COYOTE = 0xA448EB69,
 * BS_DEER = 0xA781E6B3,
 * BS_DOG = 0x5A4155C4,
 * BS_ELK = 0x408697F0,
 * BS_FEMALE = 0x6A3BB2C2,
 * BS_FEMALE_STRONG = 0x4DAFDD84,
 * BS_GANGUP = 0xD0CECFF2,
 * BS_GOAT = 0x078E649F,
 * BS_HORSE = 0xF6B775F3,
 * BS_MICAH_FINALE = 0x1F0BB27A,
 * BS_MOOSE = 0x968917AB,
 * BS_MUSKRAT = 0x1EDC33AC,
 * BS_NO_MELEE = 0x25B5F931,
 * BS_PIG = 0x22EAD110,
 * BS_PLAYER = 0x78BAEF07,
 * BS_PLAYER_FINALE = 0xF9E77D2D,
 * BS_PLAYER_MOONSHINER = 0x687BF19F,
 * BS_PLAYER_WINTER1 = 0x3C6A802F,
 * BS_QUICK = 0xC4CABB1B,
 * BS_RACCOON = 0x505F8917,
 * BS_SHEEP = 0x6827CCCF,
 * BS_SNAKE = 0x82BEBC4B,
 * BS_TIMID = 0x431AEF77,
 * BS_WOLF = 0xA8F023D4
 * };
 *
 * Hash: 0x8BA83CC4288CD56D | Since: 1207
 *
 * @deprecated Use ped.setPedBrawlingStyle() instead
 */
export declare function setPedBrawlingStyle(ped: number | Ped, brawlingStyle: number | string): void;
/**
 * SET_PED_CAN_*
 *
 * Hash: 0xFD6943B6DF77E449 | Since: 1207
 *
 * @deprecated Use ped.setPedCanBeLassoed() instead
 */
export declare function setPedCanBeLassoed(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEE9DF765990E8D1D | Since: 1207
 *
 * @deprecated Use ped.setPedCanBodyRecoilIk() instead
 */
export declare function setPedCanBodyRecoilIk(PedIndex: number | Ped, bEnableIK: boolean): void;
/**
 * Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
 * _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
 *
 * Hash: 0xBD75500141E4725C | Since: 1207
 *
 * @deprecated Use ped.setPedCombatAttributeHash() instead
 */
export declare function setPedCombatAttributeHash(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9238A3D970BBB0A9 | Since: 1207
 *
 * @deprecated Use ped.setPedCombatBehaviour() instead
 */
export declare function setPedCombatBehaviour(ped: number | Ped, behaviour: number | string): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
 * Params: p2 is usually 1, sometimes 0 or 2
 * duration in seconds, -1.0 = forever
 *
 * Hash: 0x8ACC0506743A8A5C | Since: 1207
 *
 * @deprecated Use ped.setPedCombatStyle() instead
 */
export declare function setPedCombatStyle(ped: number | Ped, combatStyleHash: number | string, duration: number): void;
/**
 * duration in seconds, -1.0 = forever
 *
 * Hash: 0x8B1E8E35A6E814EA | Since: 1207
 *
 * @deprecated Use ped.setPedCombatStyleMod() instead
 */
export declare function setPedCombatStyleMod(ped: number | Ped, combatStyleModHash: number | string, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7DE9692C6F64CFE8 | Since: 1207
 *
 * @deprecated Use ped.setPedCrouchMovement() instead
 */
export declare function setPedCrouchMovement(ped: number | Ped, state: boolean, immediately: boolean): void;
/**
 * The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
 *
 * Hash: 0x8AC1D721B2097B6E | Since: 1207
 *
 * @deprecated Use ped.setPedCullRange() instead
 */
export declare function setPedCullRange(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xDACE03C65C6666DB | Since: 1207
 *
 * @deprecated Use ped.setPedDamaged() instead
 */
export declare function setPedDamaged(ped: number | Ped, damaged: boolean): void;
/**
 * damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
 *
 * Hash: 0x7528720101A807A5 | Since: 1207
 *
 * @deprecated Use ped.setPedDamageCleanliness() instead
 */
export declare function setPedDamageCleanliness(ped: number | Ped, damageCleanliness: number): void;
/**
 * _SET_PED_(A?)*
 *
 * Hash: 0xEB2BFE5D009F0331 | Since: 1232
 *
 * @deprecated Use ped.setPedDefensiveAreaToAngledArea() instead
 */
export declare function setPedDefensiveAreaToAngledArea(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x1854217C640B39EC | Since: 1207
 *
 * @deprecated Use ped.setPedDefensiveSphereAttachedToEntity() instead
 */
export declare function setPedDefensiveSphereAttachedToEntity(ped: number | Ped, entity: number | Entity, pos: Vector3, radius: number): void;
/**
 * Seems to set the ped's loco type.
 * Values used in the scripts:
 * algie
 * angry_female
 * arthur_healthy
 * cowboy
 * cowboy_f
 * default
 * default_female
 * free_slave_01
 * free_slave_02
 * gold_panner
 * guard_lantern
 * injured_general
 * john_marston
 * lilly_millet
 * lone_prisoner
 * lost_man
 * mp_ova_hunter
 * mp_ova_hunter_female
 * murfree
 * old_female
 * primate
 * rally
 * waiter
 * war_veteran
 *
 * Hash: 0x923583741DC87BCE | Since: 1207
 *
 * @deprecated Use ped.setPedDesiredLocoForModel() instead
 */
export declare function setPedDesiredLocoForModel(ped: number | Ped, locomotionArchetype: string): void;
/**
 * Sets peds motion type
 *
 * Hash: 0x89F5E7ADECCCB49C | Since: 1207
 *
 * @deprecated Use ped.setPedDesiredLocoMotionType() instead
 */
export declare function setPedDesiredLocoMotionType(ped: number | Ped, locoMotionType: string): void;
/**
 * Params: ped, 0f, -1, true, true in R* MP Scripts
 * _SET_PED_DE* - _SET_PED_F*
 *
 * Hash: 0xE3144B932DFDFF65 | Since: 1207
 *
 * @deprecated Use ped.setPedDirtCleaned() instead
 */
export declare function setPedDirtCleaned(ped: number | Ped): void;
/**
 * Disables being able to kick move ped.
 *
 * Hash: 0xADD31A5C7A5FAA73 | Since: 1207
 *
 * @deprecated Use ped.setPedDisableKickMove() instead
 */
export declare function setPedDisableKickMove(ped: number | Ped, disable: boolean): void;
/**
 * SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
 *
 * Hash: 0x406CCF555B04FAD3 | Since: 1207
 *
 * @deprecated Use ped.setPedDrunkness() instead
 */
export declare function setPedDrunkness(ped: number | Ped, enabled: boolean, drunknessLevel: number): void;
/**
 * Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
 *
 * Hash: 0x20E54854DEF6A54A | Since: 1207
 *
 * @deprecated Use ped.setPedFiringPattern2() instead
 */
export declare function setPedFiringPattern2(ped: number | Ped, patternHash: number | string): void;
/**
 * Only used in R* MP Script fm_mission_controller
 *
 * Hash: 0x244E8C282188E40F | Since: 1207
 *
 * @deprecated Use ped.setPedFiringPattern3() instead
 */
export declare function setPedFiringPattern3(ped: number | Ped, patternHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0E9E95FDEDCC9D35 | Since: 1207
 *
 * @deprecated Use ped.setPedFormationPosition() instead
 */
export declare function setPedFormationPosition(ped: number | Ped, position: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3AE3552E7C207CC5 | Since: 1207
 *
 * @deprecated Use ped.setPedGetupAnimation() instead
 */
export declare function setPedGetupAnimation(ped: number | Ped, animName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8301D87B1B89E219 | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleAction() instead
 */
export declare function setPedGrappleAction(ped: number | Ped, grappleAction: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x56E9C26CD29D1ED6 | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleAnimation() instead
 */
export declare function setPedGrappleAnimation(ped: number | Ped, grappleAnim: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x99A6E246C315BF60 | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleEffectMultiplier() instead
 */
export declare function setPedGrappleEffectMultiplier(ped: number | Ped, multiplier: number): any;
/**
 * No comment provided
 *
 * Hash: 0x789DABD18E9024DB | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleFlag() instead
 */
export declare function setPedGrappleFlag(ped: number | Ped, flag: number, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x604190F0CF0DF158 | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleSequence() instead
 */
export declare function setPedGrappleSequence(ped: number | Ped, grappleSequence: string): void;
/**
 * Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
 *
 * Hash: 0x630E7B01F091A197 | Since: 1207
 *
 * @deprecated Use ped.setPedGrappleStyle() instead
 */
export declare function setPedGrappleStyle(ped: number | Ped, style: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x2BA918C823B8BA56 | Since: 1207
 *
 * @deprecated Use ped.setPedHeadshotDamageMultiplier() instead
 */
export declare function setPedHeadshotDamageMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * configHash: see pedhealth.meta
 *
 * Hash: 0xF6B82FCE03B43A37 | Since: 1207
 *
 * @deprecated Use ped.setPedHealthConfig() instead
 */
export declare function setPedHealthConfig(ped: number | Ped, configHash: number | string): void;
/**
 * Only used in R* Script beat_sharp_shooter
 * Blocks ped from swimming underwater
 *
 * Hash: 0x7FB0088E8769CDDB | Since: 1207
 *
 * @deprecated Use ped.setPedImmersionFlag() instead
 */
export declare function setPedImmersionFlag(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD67B6F3BCF81BA47 | Since: 1207
 *
 * @deprecated Use ped.setPedIncapacitationFlags() instead
 */
export declare function setPedIncapacitationFlags(ped: number | Ped, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x39ED303390DDEAC7 | Since: 1207
 *
 * @deprecated Use ped.setPedIncapacitationModifiers() instead
 */
export declare function setPedIncapacitationModifiers(ped: number | Ped, canBeIncapacitated: boolean, threshold: number, bleedoutTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2890418B39BC8FFF | Since: 1207
 *
 * @deprecated Use ped.setPedIncapacitationTotalBleedOutDuration() instead
 */
export declare function setPedIncapacitationTotalBleedOutDuration(ped: number | Ped, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA3C53CDE922BC78B | Since: 1207
 *
 * @deprecated Use ped.setPedInteractionNegativeResponse() instead
 */
export declare function setPedInteractionNegativeResponse(ped: number | Ped, speech: string): void;
/**
 * personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
 * personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
 *
 * Hash: 0x24C82EF607105FAA | Since: 1207
 *
 * @deprecated Use ped.setPedInteractionPersonality() instead
 */
export declare function setPedInteractionPersonality(ped: number | Ped, personality: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x20C5459379D75C1C | Since: 1207
 *
 * @deprecated Use ped.setPedInteractionPositiveResponse() instead
 */
export declare function setPedInteractionPositiveResponse(ped: number | Ped, speech: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5BCF0B79D4F5DBA3 | Since: 1207
 *
 * @deprecated Use ped.setPedKnockedByOneHit() instead
 */
export declare function setPedKnockedByOneHit(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x05CE6AF4DF071D23 | Since: 1207
 *
 * @deprecated Use ped.setPedLadderMovementSpeedModifier() instead
 */
export declare function setPedLadderMovementSpeedModifier(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x13A210949FCBD92B | Since: 1207
 *
 * @deprecated Use ped.setPedLights() instead
 */
export declare function setPedLights(ped: number | Ped, toggle: boolean): void;
/**
 * enum eMotivationState
 * {
 * TOILET_STATE,
 * FEAR_STATE,
 * ANGRY_STATE,
 * AGITATION_STATE,
 * HUNGRY_STATE,
 * TIRED_STATE,
 * SAD_STATE,
 * BRAVE_STATE,
 * OFFER_ITEM_STATE,
 * SUSPICION,
 * DRUNK_STATE
 * };
 *
 * If targetPed is set to 0 the ped motivationState affects everyone
 *
 * Hash: 0x06D26A96CA1BCA75 | Since: 1207
 *
 * @deprecated Use ped.setPedMotivation() instead
 */
export declare function setPedMotivation(ped: number | Ped, motivationState: number, threshold: number, targetPed: number | Ped): void;
/**
 * The higher the modifier, the slower the motivationState value will decrease
 *
 * Hash: 0xA1EB5D029E0191D3 | Since: 1207
 *
 * @deprecated Use ped.setPedMotivationModifier() instead
 */
export declare function setPedMotivationModifier(ped: number | Ped, motivationState: number, modifier: number): void;
/**
 * motivationState: see _SET_PED_MOTIVATION
 *
 * Hash: 0x2EB75FB86C41F026 | Since: 1207
 *
 * @deprecated Use ped.setPedMotivationStateOverride() instead
 */
export declare function setPedMotivationStateOverride(ped: number | Ped, motivationState: number, enabled: boolean): void;
/**
 * Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE, LAW_POLICE, GUARD_DOG, ATTACK_DOG
 * Personalities can also be found in common:/data/ai/interactionpersonalities
 *
 * Hash: 0xB8B6430EAD2D2437 | Since: 1207
 *
 * @deprecated Use ped.setPedPersonality() instead
 */
export declare function setPedPersonality(ped: number | Ped, personality: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4A48B6E03BABB4AC | Since: 1207
 *
 * @deprecated Use ped.setPedPromptName() instead
 */
export declare function setPedPromptName(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x19B14E04B009E28B | Since: 1207
 *
 * @deprecated Use ped.setPedPromptName2() instead
 */
export declare function setPedPromptName2(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFCA8FB9E15FA80D3 | Since: 1207
 *
 * @deprecated Use ped.setPedPromptNameFromGxtEntry() instead
 */
export declare function setPedPromptNameFromGxtEntry(ped: number | Ped, gxtEntryHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC2745D9261664901 | Since: 1207
 *
 * @deprecated Use ped.setPedPromptNameFromGxtEntry2() instead
 */
export declare function setPedPromptNameFromGxtEntry2(ped: number | Ped, gxtEntryHash: number | string): void;
/**
 * quality: see _GET_PED_QUALITY
 *
 * Hash: 0xCE6B874286D640BB | Since: 1207
 *
 * @deprecated Use ped.setPedQuality() instead
 */
export declare function setPedQuality(ped: number | Ped, quality: number): void;
/**
 * No comment provided
 *
 * Hash: 0x25ACFC650B65C538 | Since: 1207
 *
 * @deprecated Use ped.setPedScale() instead
 */
export declare function setPedScale(ped: number | Ped, scale: number): void;
/**
 * 0.0 - 1.0
 * Modifies the "scent line" on the ped's body when using Eagle Eye.
 *
 * Hash: 0x01B21B81865E2A1F | Since: 1207
 *
 * @deprecated Use ped.setPedScent() instead
 */
export declare function setPedScent(ped: number | Ped, scent: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC163DAC52AC975D3 | Since: 1207
 *
 * @deprecated Use ped.setPedTargetActionDisableFlag() instead
 */
export declare function setPedTargetActionDisableFlag(ped: number | Ped, actionDisableFlag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x36E4B61DC56DE77C | Since: 1207
 *
 * @deprecated Use ped.setPedToBeRemoved() instead
 */
export declare function setPedToBeRemoved(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x221F4D9912B7FE86 | Since: 1207
 *
 * @deprecated Use ped.setPedToDisableRagdoll() instead
 */
export declare function setPedToDisableRagdoll(ped: number | Ped, toggle: boolean): void;
/**
 * duration in seconds
 *
 * Hash: 0xA5950E16B8F31052 | Since: 1207
 *
 * @deprecated Use ped.setPedTrailEffect() instead
 */
export declare function setPedTrailEffect(ped: number | Ped, duration: number): void;
/**
 * Doesn't actually return anything.
 *
 * Hash: 0xEB72453B6F5B45B0 | Since: 1232
 *
 * @deprecated Use ped.setPedUseHorseMapCollision() instead
 */
export declare function setPedUseHorseMapCollision(ped: number | Ped, toggle: boolean): any;
/**
 * _SET_PED_S* - _SET_PED_T*
 *
 * Hash: 0xD05AD61F242C626B | Since: 1207
 *
 * @deprecated Use ped.setPedVoiceVolume() instead
 */
export declare function setPedVoiceVolume(ped: number | Ped, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4DB9D03AC4E1FA84 | Since: 1207
 *
 * @deprecated Use ped.setPedWrithingDuration() instead
 */
export declare function setPedWrithingDuration(ped: number | Ped, writhingDuration1: number, writhingDuration2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA73F50E8796150D5 | Since: 1207
 *
 * @deprecated Use ped.setPeltForHorse() instead
 */
export declare function setPeltForHorse(horse: number | Ped, peltId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5708EDD71B50C008 | Since: 1207
 *
 * @deprecated Use ped.setPlayerAntagonizeDisabledForPed() instead
 */
export declare function setPlayerAntagonizeDisabledForPed(ped: number | Ped, player: number | string | Player, duration: number): void;
/**
 * Animal Skin Quality Modifier
 * Params: p2 = 2, p3 = 3 in R* Scripts
 *
 * Hash: 0x9EFF3C91DF38304F | Since: 1311
 *
 * @deprecated Use ped.setPlayerCurrentAnimalDamageModifier() instead
 */
export declare function setPlayerCurrentAnimalDamageModifier(player: number | string | Player, modifier: number): any;
/**
 * No comment provided
 *
 * Hash: 0x19173C3F15367B54 | Since: 1207
 *
 * @deprecated Use ped.setPlayerGreetDisabledForPed() instead
 */
export declare function setPlayerGreetDisabledForPed(ped: number | Ped, player: number | string | Player, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x283978A15512B2FE | Since: 1207
 *
 * @deprecated Use ped.setRandomOutfitVariation() instead
 */
export declare function setRandomOutfitVariation(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x39A2FC5AF55A52B1 | Since: 1207
 *
 * @deprecated Use ped.setRemovePedNetworked() instead
 */
export declare function setRemovePedNetworked(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xDB48E99F8E064E56 | Since: 1207
 *
 * @deprecated Use ped.setScenarioAnimalDensityMultiplierThisFrame() instead
 */
export declare function setScenarioAnimalDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x28CB6391ACEDD9DB | Since: 1207
 *
 * @deprecated Use ped.setScenarioHumanDensityMultiplierThisFrame() instead
 */
export declare function setScenarioHumanDensityMultiplierThisFrame(multiplier: number): void;
/**
 * Sets the scenario ped density to the given config.
 *
 * Valid configs:
 * - BLACKWATER
 * - DEFAULT
 * - NEWBORDEAUX
 * - RHODES
 * - STRAWBERRY
 * - TUMBLEWEED
 * - VALENTINE
 * - VANHORN
 *
 * See common/data/ai/densityscoringconfigs.meta for more information.
 *
 * Hash: 0x95423627A9CA598E | Since: 1207
 *
 * @deprecated Use ped.setScenarioPedDensityThisFrame() instead
 */
export declare function setScenarioPedDensityThisFrame(configHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA77FA7BE9312F8C0 | Since: 1207
 *
 * @deprecated Use ped.setScenarioPedRangeMultiplierThisFrame() instead
 */
export declare function setScenarioPedRangeMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEF5A3D2285D8924B | Since: 1207
 *
 * @deprecated Use ped.setStaminaDepletionMultiplier() instead
 */
export declare function setStaminaDepletionMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x345C9F993A8AB4A4 | Since: 1207
 *
 * @deprecated Use ped.setStaminaRechargeMultiplier() instead
 */
export declare function setStaminaRechargeMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * Size will be permanent
 *
 * Hash: 0x7FF72DE061DF55E2 | Since: 1207
 *
 * @deprecated Use ped.setTankAttributeSize() instead
 */
export declare function setTankAttributeSize(ped: number | Ped, attributeIndex: number, size: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6C76BC24F8BB709A | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerAlpha() instead
 */
export declare function setTextureLayerAlpha(textureId: number, layerId: number, texAlpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF2EA041F1146D75B | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerMod() instead
 */
export declare function setTextureLayerMod(textureId: number, layerId: number, modTextureHash: number | string, modAlpha: number, modChannel: number): void;
/**
 * paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
 *
 * Hash: 0x1ED8588524AC9BE1 | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerPallete() instead
 */
export declare function setTextureLayerPallete(textureId: number, layerId: number, paletteHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x057C4F092E2298BE | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerRoughness() instead
 */
export declare function setTextureLayerRoughness(textureId: number, layerId: number, texRough: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3329AAE2882FC8E4 | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerSheetGridIndex() instead
 */
export declare function setTextureLayerSheetGridIndex(textureId: number, layerId: number, sheetGridIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x253A63B5BADBC398 | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerTextureMap() instead
 */
export declare function setTextureLayerTextureMap(textureId: number, layerId: number, albedoHash: number | string, normalHash: number | string, materialHash: number | string): void;
/**
 * Seem color is not RGB or HSV
 *
 * Hash: 0x2DF59FFE6FFD6044 | Since: 1207
 *
 * @deprecated Use ped.setTextureLayerTint() instead
 */
export declare function setTextureLayerTint(textureId: number, layerId: number, tint0: number, tint1: number, tint2: number): void;
/**
 * Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
 *
 * Hash: 0x4EFC1F8FF1AD94DE | Since: 1207
 *
 * @deprecated Use ped.setTextureOutfitTints() instead
 */
export declare function setTextureOutfitTints(ped: number | Ped, componentCategory: number | string, palette: number | string, tint0: number, tint1: number, tint2: number): void;
/**
 * _SET_W(EAPON?)*
 *
 * Hash: 0x932786CE3C76477C | Since: 1207
 *
 * @deprecated Use ped.setTotalPedDamageFalloffBonus() instead
 */
export declare function setTotalPedDamageFalloffBonus(ped: number | Ped, bonus: number): void;
/**
 * _SET_W(EAPON?)*
 *
 * Hash: 0x73B6F907B913C860 | Since: 1207
 *
 * @deprecated Use ped.setTotalPedDamageFromAi() instead
 */
export declare function setTotalPedDamageFromAi(ped: number | Ped, totalDamage: number): void;
/**
 * Triggers a gunshot
 * Params: p5 = -1 in R* Scripts
 *
 * Hash: 0x4C57F27D1554E6B0 | Since: 1207
 *
 * @deprecated Use ped.shootTriggerAtCoords() instead
 */
export declare function shootTriggerAtCoords(ped: number | Ped, pos: Vector3): any;
/**
 * No comment provided
 *
 * Hash: 0x83ED1FC9DF3411F5 | Since: 1311
 *
 * @deprecated Use ped.spawnpointsStartSearchWithVolume() instead
 */
export declare function spawnpointsStartSearchWithVolume(volume: number, spawnpointsFlag: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7D4E70A67A651C71 | Since: 1207
 *
 * @deprecated Use ped.unreserveAmbientPeds() instead
 */
export declare function unreserveAmbientPeds(numPeds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F9E754EBE8FDBFA | Since: 1311
 *
 * @deprecated Use ped.updateAnimalDamageModifier() instead
 */
export declare function updateAnimalDamageModifier(player: number | string | Player): void;
/**
 * Should be called at least once for any new texture override.
 * Otherwise component textures will be just black.
 * Also needs to be called for updating any ped overlays to apply the changes.
 *
 * Hash: 0x92DAABA2C1C10B0E | Since: 1207
 *
 * @deprecated Use ped.updatePedTexture() instead
 */
export declare function updatePedTexture(textureId: number): void;
/**
 * Update variation on ped, needed after first creation, or when component or texture/overlay is changed
 *
 * Hash: 0xCC8CA3E88256E58F | Since: 1207
 *
 * @deprecated Use ped.updatePedVariation() instead
 */
export declare function updatePedVariation(ped: number | Ped): void;
/**
 * Params: 0.0f to remove wound effects
 *
 * Hash: 0x66B1CB778D911F49 | Since: 1207
 *
 * @deprecated Use ped.updatePedWoundEffect() instead
 */
export declare function updatePedWoundEffect(ped: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x66B957AAC2EAAEAB | Since: 1207
 *
 * @deprecated Use ped.updateShopItemWearableState() instead
 */
export declare function updateShopItemWearableState(ped: number | Ped, componentHash: number | string, wearableState: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE0B61ED8BB37712F | Since: 1207
 *
 * @deprecated Use ped.warpPedOutOfVehicle() instead
 */
export declare function warpPedOutOfVehicle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x08FC896D2CB31FCC | Since: 1207
 *
 * @deprecated Use perschar._0x08FC896D2CB31FCC() instead
 */
export declare function _0x08FC896D2CB31FCC(): number;
/**
 * No comment provided
 *
 * Hash: 0x0B3A99AB6713AA52 | Since: 1207
 *
 * @deprecated Use perschar._0x0B3A99AB6713AA52() instead
 */
export declare function _0x0B3A99AB6713AA52(): void;
/**
 * Returns the PersChar index of the persCharHash passed
 *
 * Hash: 0x112DDF56300BC6E5 | Since: 1207
 *
 * @deprecated Use perschar._0x112DDF56300BC6E5() instead
 */
export declare function _0x112DDF56300BC6E5(persCharHash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x2DF89CD2ED1D0BDE | Since: 1207
 *
 * @deprecated Use perschar.setPerscharOutfit() instead
 */
export declare function setPerscharOutfit(persCharHash: number | string, outfit: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2E957AA81F2C61C9 | Since: 1207
 *
 * @deprecated Use perschar._0x2E957AA81F2C61C9() instead
 */
export declare function _0x2E957AA81F2C61C9(): void;
/**
 * No comment provided
 *
 * Hash: 0x406808610220405B | Since: 1207
 *
 * @deprecated Use perschar._0x406808610220405B() instead
 */
export declare function _0x406808610220405B(): void;
/**
 * No comment provided
 *
 * Hash: 0x4AFC7288C77238B3 | Since: 1207
 *
 * @deprecated Use perschar._0x4AFC7288C77238B3() instead
 */
export declare function _0x4AFC7288C77238B3(): any;
/**
 * No comment provided
 *
 * Hash: 0x4F81EAD1DE8FA19B | Since: 1207
 *
 * @deprecated Use perschar._0x4F81EAD1DE8FA19B() instead
 */
export declare function _0x4F81EAD1DE8FA19B(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x535A66AAD2BF68F9 | Since: 1207
 *
 * @deprecated Use perschar._0x535A66AAD2BF68F9() instead
 */
export declare function _0x535A66AAD2BF68F9(): void;
/**
 * No comment provided
 *
 * Hash: 0x59C7AD6FEA2AC449 | Since: 1207
 *
 * @deprecated Use perschar._0x59C7AD6FEA2AC449() instead
 */
export declare function _0x59C7AD6FEA2AC449(): void;
/**
 * No comment provided
 *
 * Hash: 0x5EE6FCCC9C832CA2 | Since: 1207
 *
 * @deprecated Use perschar._0x5EE6FCCC9C832CA2() instead
 */
export declare function _0x5EE6FCCC9C832CA2(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x63AA2B8EB087886A | Since: 1207
 *
 * @deprecated Use perschar._0x63AA2B8EB087886A() instead
 */
export declare function _0x63AA2B8EB087886A(): void;
/**
 * No comment provided
 *
 * Hash: 0x669C25840C6F7AE2 | Since: 1207
 *
 * @deprecated Use perschar._0x669C25840C6F7AE2() instead
 */
export declare function _0x669C25840C6F7AE2(): void;
/**
 * No comment provided
 *
 * Hash: 0x6759BEE6762E140B | Since: 1207
 *
 * @deprecated Use perschar._0x6759BEE6762E140B() instead
 */
export declare function _0x6759BEE6762E140B(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x69786495C92A3044 | Since: 1207
 *
 * @deprecated Use perschar._0x69786495C92A3044() instead
 */
export declare function _0x69786495C92A3044(): any;
/**
 * No comment provided
 *
 * Hash: 0x70605812ABC9FF0F | Since: 1207
 *
 * @deprecated Use perschar._0x70605812ABC9FF0F() instead
 */
export declare function _0x70605812ABC9FF0F(): void;
/**
 * No comment provided
 *
 * Hash: 0x8AE4EFA464DAE42D | Since: 1207
 *
 * @deprecated Use perschar._0x8AE4EFA464DAE42D() instead
 */
export declare function _0x8AE4EFA464DAE42D(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B44273A92CD406C | Since: 1207
 *
 * @deprecated Use perschar.resetPerscharSchedule() instead
 */
export declare function resetPerscharSchedule(persCharHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x8BC555034A5A5E8C | Since: 1207
 *
 * @deprecated Use perschar._0x8BC555034A5A5E8C() instead
 */
export declare function _0x8BC555034A5A5E8C(): void;
/**
 * No comment provided
 *
 * Hash: 0x92690B0822493CE0 | Since: 1207
 *
 * @deprecated Use perschar._0x92690B0822493CE0() instead
 */
export declare function _0x92690B0822493CE0(): void;
/**
 * No comment provided
 *
 * Hash: 0x94995829ED15A598 | Since: 1207
 *
 * @deprecated Use perschar._0x94995829ED15A598() instead
 */
export declare function _0x94995829ED15A598(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x9C7F95946E304778 | Since: 1207
 *
 * @deprecated Use perschar._0x9C7F95946E304778() instead
 */
export declare function _0x9C7F95946E304778(): any;
/**
 * No comment provided
 *
 * Hash: 0xA2B18FF8D39F6D87 | Since: 1207
 *
 * @deprecated Use perschar._0xA2B18FF8D39F6D87() instead
 */
export declare function _0xA2B18FF8D39F6D87(): void;
/**
 * No comment provided
 *
 * Hash: 0xA4DCB3F0DD7488BD | Since: 1207
 *
 * @deprecated Use perschar._0xA4DCB3F0DD7488BD() instead
 */
export declare function _0xA4DCB3F0DD7488BD(): void;
/**
 * No comment provided
 *
 * Hash: 0xA8120EBEAF290C7A | Since: 1207
 *
 * @deprecated Use perschar._0xA8120EBEAF290C7A() instead
 */
export declare function _0xA8120EBEAF290C7A(): any;
/**
 * No comment provided
 *
 * Hash: 0xA8C406C2A56EDC16 | Since: 1207
 *
 * @deprecated Use perschar._0xA8C406C2A56EDC16() instead
 */
export declare function _0xA8C406C2A56EDC16(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0xB173599D61FAEB31 | Since: 1207
 *
 * @deprecated Use perschar._0xB173599D61FAEB31() instead
 */
export declare function _0xB173599D61FAEB31(): void;
/**
 * No comment provided
 *
 * Hash: 0xB65E7F733956CF25 | Since: 1207
 *
 * @deprecated Use perschar._0xB65E7F733956CF25() instead
 */
export declare function _0xB65E7F733956CF25(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0xBB68908CD11AEBDC | Since: 1207
 *
 * @deprecated Use perschar._0xBB68908CD11AEBDC() instead
 */
export declare function _0xBB68908CD11AEBDC(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0xCEB40B678E403759 | Since: 1207
 *
 * @deprecated Use perschar._0xCEB40B678E403759() instead
 */
export declare function _0xCEB40B678E403759(): any;
/**
 * No comment provided
 *
 * Hash: 0xD4B614179BCD0654 | Since: 1207
 *
 * @deprecated Use perschar._0xD4B614179BCD0654() instead
 */
export declare function _0xD4B614179BCD0654(): void;
/**
 * No comment provided
 *
 * Hash: 0xD95D777F828B2BBB | Since: 1207
 *
 * @deprecated Use perschar._0xD95D777F828B2BBB() instead
 */
export declare function _0xD95D777F828B2BBB(): void;
/**
 * No comment provided
 *
 * Hash: 0xDC9655D47DEC0353 | Since: 1207
 *
 * @deprecated Use perschar.getPerscharOutfit() instead
 */
export declare function getPerscharOutfit(persCharHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE0E65E0D261F7507 | Since: 1207
 *
 * @deprecated Use perschar._0xE0E65E0D261F7507() instead
 */
export declare function _0xE0E65E0D261F7507(): void;
/**
 * No comment provided
 *
 * Hash: 0xE4C51A8A3BD1664C | Since: 1207
 *
 * @deprecated Use perschar._0xE4C51A8A3BD1664C() instead
 */
export declare function _0xE4C51A8A3BD1664C(): any;
/**
 * No comment provided
 *
 * Hash: 0xEC254C2C9B0F08F1 | Since: 1207
 *
 * @deprecated Use perschar._0xEC254C2C9B0F08F1() instead
 */
export declare function _0xEC254C2C9B0F08F1(): any;
/**
 * No comment provided
 *
 * Hash: 0xEFC5C6670E0B99BA | Since: 1207
 *
 * @deprecated Use perschar._0xEFC5C6670E0B99BA() instead
 */
export declare function _0xEFC5C6670E0B99BA(): void;
/**
 * No comment provided
 *
 * Hash: 0xF8DE7154F7D1458F | Since: 1207
 *
 * @deprecated Use perschar._0xF8DE7154F7D1458F() instead
 */
export declare function _0xF8DE7154F7D1458F(): any;
/**
 * No comment provided
 *
 * Hash: 0xFCC6DB8DBE709BC8 | Since: 1207
 *
 * @deprecated Use perschar._0xFCC6DB8DBE709BC8() instead
 */
export declare function _0xFCC6DB8DBE709BC8(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x4F76E3676583D951 | Since: 1207
 *
 * @deprecated Use perschar.createPersistentCharacter() instead
 */
export declare function createPersistentCharacter(hash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xFC77C5B44D5FF7C0 | Since: 1207
 *
 * @deprecated Use perschar.deletePerschar() instead
 */
export declare function deletePerschar(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x7B204F88F6C3D287 | Since: 1207
 *
 * @deprecated Use perschar.forceDespawnPerschar() instead
 */
export declare function forceDespawnPerschar(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x0CADC3A977997472 | Since: 1207
 *
 * @deprecated Use perschar.forceSpawnPerschar() instead
 */
export declare function forceSpawnPerschar(persChar: any): number;
/**
 * No comment provided
 *
 * Hash: 0x32A1E3B83D501096 | Since: 1207
 *
 * @deprecated Use perschar.getPerscharIndexFromPedIndex() instead
 */
export declare function getPerscharIndexFromPedIndex(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0xA00DF706C60173D1 | Since: 1207
 *
 * @deprecated Use perschar.getPerscharModelName() instead
 */
export declare function getPerscharModelName(persCharHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x31C70A716CAE1FEE | Since: 1207
 *
 * @deprecated Use perschar.getPerscharPedIndex() instead
 */
export declare function getPerscharPedIndex(persChar: any): number;
/**
 * No comment provided
 *
 * Hash: 0xEB98B38CA60742D7 | Since: 1207
 *
 * @deprecated Use perschar.isPersistentCharacterDead() instead
 */
export declare function isPersistentCharacterDead(persChar: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x800DF3FC913355F3 | Since: 1207
 *
 * @deprecated Use perschar.isPersistentCharacterValid() instead
 */
export declare function isPersistentCharacterValid(persChar: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x631CD2D77FDC0316 | Since: 1207
 *
 * @deprecated Use perschar.retaskPersistentCharacter() instead
 */
export declare function retaskPersistentCharacter(persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0x49A8C2CD97815215 | Since: 1207
 *
 * @deprecated Use perschar.revivePerschar() instead
 */
export declare function revivePerschar(persChar: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x187D65F3AEC5D679 | Since: 1207
 *
 * @deprecated Use perschar.setPerscharSchedule() instead
 */
export declare function setPerscharSchedule(persCharHash: number | string, schedule: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8245C1F3262F4AC2 | Since: 1207
 *
 * @deprecated Use persistence.persistenceAddScenarioLooted() instead
 */
export declare function persistenceAddScenarioLooted(scenario: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9D16896F0DBE78A2 | Since: 1207
 *
 * @deprecated Use persistence.persistenceRemoveAllEntitiesInArea() instead
 */
export declare function persistenceRemoveAllEntitiesInArea(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x065887B694359799 | Since: 1207
 *
 * @deprecated Use persistence._0x065887B694359799() instead
 */
export declare function _0x065887B694359799(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F56FB3FDB4EAF65 | Since: 1207
 *
 * @deprecated Use persistence._0x1F56FB3FDB4EAF65() instead
 */
export declare function _0x1F56FB3FDB4EAF65(): any;
/**
 * No comment provided
 *
 * Hash: 0x291CC21D1FB6790E | Since: 1207
 *
 * @deprecated Use persistence._0x291CC21D1FB6790E() instead
 */
export declare function _0x291CC21D1FB6790E(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E545965DF98D476 | Since: 1207
 *
 * @deprecated Use persistence._0x2E545965DF98D476() instead
 */
export declare function _0x2E545965DF98D476(): any;
/**
 * No comment provided
 *
 * Hash: 0x3CA5E58C9731A16B | Since: 1207
 *
 * @deprecated Use persistence._0x3CA5E58C9731A16B() instead
 */
export declare function _0x3CA5E58C9731A16B(): void;
/**
 * No comment provided
 *
 * Hash: 0x5A79220F6D38D7C3 | Since: 1207
 *
 * @deprecated Use persistence._0x5A79220F6D38D7C3() instead
 */
export declare function _0x5A79220F6D38D7C3(): any;
/**
 * _PERSISTENCE_*
 *
 * Hash: 0x66DAA3A9274E8E82 | Since: 1232
 *
 * @deprecated Use persistence._0x66DAA3A9274E8E82() instead
 */
export declare function _0x66DAA3A9274E8E82(): void;
/**
 * No comment provided
 *
 * Hash: 0x7A1BD123E5CDB6E5 | Since: 1207
 *
 * @deprecated Use persistence._0x7A1BD123E5CDB6E5() instead
 */
export declare function _0x7A1BD123E5CDB6E5(): void;
/**
 * No comment provided
 *
 * Hash: 0x8DE104BEC243A73B | Since: 1207
 *
 * @deprecated Use persistence._0x8DE104BEC243A73B() instead
 */
export declare function _0x8DE104BEC243A73B(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xB03140014ACA6C40 | Since: 1207
 *
 * @deprecated Use persistence._0xB03140014ACA6C40() instead
 */
export declare function _0xB03140014ACA6C40(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA2C49EA6A8D24FF | Since: 1207
 *
 * @deprecated Use persistence._0xBA2C49EA6A8D24FF() instead
 */
export declare function _0xBA2C49EA6A8D24FF(): any;
/**
 * No comment provided
 *
 * Hash: 0xCFDA2518F322D836 | Since: 1207
 *
 * @deprecated Use persistence._0xCFDA2518F322D836() instead
 */
export declare function _0xCFDA2518F322D836(): any;
/**
 * No comment provided
 *
 * Hash: 0xDC0A1F0ECEC9F0C0 | Since: 1207
 *
 * @deprecated Use persistence._0xDC0A1F0ECEC9F0C0() instead
 */
export declare function _0xDC0A1F0ECEC9F0C0(): void;
/**
 * No comment provided
 *
 * Hash: 0xE225CEF1901F6108 | Since: 1207
 *
 * @deprecated Use persistence._0xE225CEF1901F6108() instead
 */
export declare function _0xE225CEF1901F6108(): void;
/**
 * No comment provided
 *
 * Hash: 0xF5622FA6ACFCA7DB | Since: 1207
 *
 * @deprecated Use persistence._0xF5622FA6ACFCA7DB() instead
 */
export declare function _0xF5622FA6ACFCA7DB(): void;
/**
 * No comment provided
 *
 * Hash: 0xFC9806DA9A460093 | Since: 1207
 *
 * @deprecated Use persistence._0xFC9806DA9A460093() instead
 */
export declare function _0xFC9806DA9A460093(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFB7CF1DE938A3E22 | Since: 1207
 *
 * @deprecated Use persistence.persistenceIsScenarioMarkedAsLooted() instead
 */
export declare function persistenceIsScenarioMarkedAsLooted(scenario: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB6E1A185C2B9319A | Since: 1207
 *
 * @deprecated Use persistence.persistenceIsScenarioMarkedAsLootedAtCoords() instead
 */
export declare function persistenceIsScenarioMarkedAsLootedAtCoords(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x188313616D184213 | Since: 1207
 *
 * @deprecated Use persistence.persistenceIsScenarioMarkedAsLootedAtCoordsWithModel() instead
 */
export declare function persistenceIsScenarioMarkedAsLootedAtCoordsWithModel(pos: Vector3, model: number | string): boolean;
/**
 * Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
 *
 * Hash: 0xEFB5F34CC0953B27 | Since: 1207
 *
 * @deprecated Use persistence.persistenceRefreshTownVolume() instead
 */
export declare function persistenceRefreshTownVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x710311ADF0E20730 | Since: 1207
 *
 * @deprecated Use physics.activatePhysics() instead
 */
export declare function activatePhysics(entity: number | Entity): void;
/**
 * There are 19 types of rope, from type = 0 to type = 18
 * Rope definitions are stored in ropedata.xml
 * Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
 *
 * Hash: 0xE832D760399EB220 | Since: 1207
 *
 * @deprecated Use physics.addRope() instead
 */
export declare function addRope(pos: Vector3, rot: Vector3, length: number, ropeType: number, maxLength: number, minLength: number, rigid: boolean, breakWhenShot: boolean, unkPtr: any): number;
/**
 * Attaches entity 1 to entity 2.
 * If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
 *
 * Hash: 0x3D95EC8B6D940AC3 | Since: 1207
 *
 * @deprecated Use physics.attachEntitiesToRope() instead
 */
export declare function attachEntitiesToRope(ropeId: number, entity1: number | Entity, entity2: number | Entity, ent1X: number, ent1Y: number, ent1Z: number, ent2X: number, ent2Y: number, ent2Z: number, length: number, alwaysZero1: number, alwaysZero2: number, boneName1: string, boneName2: string, boneId1: number, boneId2: number, alwaysZero3: number, alwaysZero4: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2E648D16F6E308F3 | Since: 1207
 *
 * @deprecated Use physics.breakEntityGlass() instead
 */
export declare function breakEntityGlass(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xAA5D6B1888E4DB20 | Since: 1207
 *
 * @deprecated Use physics.deleteChildRope() instead
 */
export declare function deleteChildRope(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x52B4829281364649 | Since: 1207
 *
 * @deprecated Use physics.deleteRope() instead
 */
export declare function deleteRope(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBCF3026912A8647D | Since: 1207
 *
 * @deprecated Use physics.detachRopeFromEntity() instead
 */
export declare function detachRopeFromEntity(ropeId: number, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xFD5448BE3111ED96 | Since: 1207
 *
 * @deprecated Use physics.doesRopeExist() instead
 */
export declare function doesRopeExist(ropeId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x21BB0FBD3E217C2D | Since: 1207
 *
 * @deprecated Use physics.getRopeLastVertexCoord() instead
 */
export declare function getRopeLastVertexCoord(ropeId: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xEA61CA8E80F09E4D | Since: 1207
 *
 * @deprecated Use physics.getRopeVertexCoord() instead
 */
export declare function getRopeVertexCoord(ropeId: number, vertex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x3655F544CD30F0B5 | Since: 1207
 *
 * @deprecated Use physics.getRopeVertexCount() instead
 */
export declare function getRopeVertexCount(ropeId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF159A63806BB5BA8 | Since: 1207
 *
 * @deprecated Use physics.ropeDrawShadowEnabled() instead
 */
export declare function ropeDrawShadowEnabled(ropeId: number, toggle: boolean): void;
/**
 * Forces a rope to a certain length.
 *
 * Hash: 0xD009F759A723DB1B | Since: 1207
 *
 * @deprecated Use physics.ropeForceLength() instead
 */
export declare function ropeForceLength(ropeId: number, length: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDC57A637A20006ED | Since: 1207
 *
 * @deprecated Use physics.ropeSetUpdateOrder() instead
 */
export declare function ropeSetUpdateOrder(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEEA3B200A6FEB65B | Since: 1207
 *
 * @deprecated Use physics.setDamping() instead
 */
export declare function setDamping(entity: number | Entity, vertex: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5CEC1A84620E7D5B | Since: 1207
 *
 * @deprecated Use physics.setDisableBreaking() instead
 */
export declare function setDisableBreaking(object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x01BA3AED21C16CFB | Since: 1207
 *
 * @deprecated Use physics.setDisableFragDamage() instead
 */
export declare function setDisableFragDamage(object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x538D1179EC1AA9A9 | Since: 1207
 *
 * @deprecated Use physics.startRopeUnwindingFront() instead
 */
export declare function startRopeUnwindingFront(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1461C72C889E343E | Since: 1207
 *
 * @deprecated Use physics.startRopeWinding() instead
 */
export declare function startRopeWinding(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFFF3A50779EFBBB3 | Since: 1207
 *
 * @deprecated Use physics.stopRopeUnwindingFront() instead
 */
export declare function stopRopeUnwindingFront(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCB2D4AB84A19AA7C | Since: 1207
 *
 * @deprecated Use physics.stopRopeWinding() instead
 */
export declare function stopRopeWinding(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0CB16D05E03FB525 | Since: 1207
 *
 * @deprecated Use physics._0x0CB16D05E03FB525() instead
 */
export declare function _0x0CB16D05E03FB525(): void;
/**
 * No comment provided
 *
 * Hash: 0x1D97DA8ACB5D2582 | Since: 1207
 *
 * @deprecated Use physics._0x1D97DA8ACB5D2582() instead
 */
export declare function _0x1D97DA8ACB5D2582(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1FC92BDBA1106BD2 | Since: 1207
 *
 * @deprecated Use physics._0x1FC92BDBA1106BD2() instead
 */
export declare function _0x1FC92BDBA1106BD2(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x21D0890D88DFB0B0 | Since: 1207
 *
 * @deprecated Use physics._0x21D0890D88DFB0B0() instead
 */
export declare function _0x21D0890D88DFB0B0(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x31160EC47E7C9549 | Since: 1207
 *
 * @deprecated Use physics._0x31160EC47E7C9549() instead
 */
export declare function _0x31160EC47E7C9549(): void;
/**
 * No comment provided
 *
 * Hash: 0x32F4DBFDFCCCC735 | Since: 1207
 *
 * @deprecated Use physics._0x32F4DBFDFCCCC735() instead
 */
export declare function _0x32F4DBFDFCCCC735(): void;
/**
 * No comment provided
 *
 * Hash: 0x3900491C0D61ED4B | Since: 1207
 *
 * @deprecated Use physics._0x3900491C0D61ED4B() instead
 */
export declare function _0x3900491C0D61ED4B(): void;
/**
 * No comment provided
 *
 * Hash: 0x423C6B1F3786D28B | Since: 1207
 *
 * @deprecated Use physics._0x423C6B1F3786D28B() instead
 */
export declare function _0x423C6B1F3786D28B(): void;
/**
 * No comment provided
 *
 * Hash: 0x461FCBDEB4D06717 | Since: 1207
 *
 * @deprecated Use physics._0x461FCBDEB4D06717() instead
 */
export declare function _0x461FCBDEB4D06717(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x483D4E917B0D35A9 | Since: 1207
 *
 * @deprecated Use physics._0x483D4E917B0D35A9() instead
 */
export declare function _0x483D4E917B0D35A9(): void;
/**
 * No comment provided
 *
 * Hash: 0x522FA3F490E2F7AC | Since: 1207
 *
 * @deprecated Use physics._0x522FA3F490E2F7AC() instead
 */
export declare function _0x522FA3F490E2F7AC(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A989B7EE3672A56 | Since: 1207
 *
 * @deprecated Use physics._0x5A989B7EE3672A56() instead
 */
export declare function _0x5A989B7EE3672A56(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BD7457221CC5FF4 | Since: 1207
 *
 * @deprecated Use physics._0x5BD7457221CC5FF4() instead
 */
export declare function _0x5BD7457221CC5FF4(): void;
/**
 * No comment provided
 *
 * Hash: 0x5E981C764DF33117 | Since: 1207
 *
 * @deprecated Use physics._0x5E981C764DF33117() instead
 */
export declare function _0x5E981C764DF33117(): void;
/**
 * No comment provided
 *
 * Hash: 0x69C810B72291D831 | Since: 1207
 *
 * @deprecated Use physics._0x69C810B72291D831() instead
 */
export declare function _0x69C810B72291D831(): void;
/**
 * No comment provided
 *
 * Hash: 0x6EA0E93CFFA472CC | Since: 1207
 *
 * @deprecated Use physics._0x6EA0E93CFFA472CC() instead
 */
export declare function _0x6EA0E93CFFA472CC(): void;
/**
 * No comment provided
 *
 * Hash: 0x751DF00EEFF122E3 | Since: 1207
 *
 * @deprecated Use physics._0x751DF00EEFF122E3() instead
 */
export declare function _0x751DF00EEFF122E3(): void;
/**
 * No comment provided
 *
 * Hash: 0x76BAD9D538BCA1AA | Since: 1207
 *
 * @deprecated Use physics._0x76BAD9D538BCA1AA() instead
 */
export declare function _0x76BAD9D538BCA1AA(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x814D453FCFDF119F | Since: 1207
 *
 * @deprecated Use physics._0x814D453FCFDF119F() instead
 */
export declare function _0x814D453FCFDF119F(): void;
/**
 * _ROPE_SET_*
 *
 * Hash: 0x8D59079C37C21D78 | Since: 1207
 *
 * @deprecated Use physics._0x8D59079C37C21D78() instead
 */
export declare function _0x8D59079C37C21D78(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8EEDFD8921389928 | Since: 1207
 *
 * @deprecated Use physics._0x8EEDFD8921389928() instead
 */
export declare function _0x8EEDFD8921389928(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C24846D0A4A2776 | Since: 1207
 *
 * @deprecated Use physics._0x9C24846D0A4A2776() instead
 */
export declare function _0x9C24846D0A4A2776(): void;
/**
 * No comment provided
 *
 * Hash: 0xB40EA9E0D2E2F7F3 | Since: 1207
 *
 * @deprecated Use physics._0xB40EA9E0D2E2F7F3() instead
 */
export declare function _0xB40EA9E0D2E2F7F3(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB7469CB9AC3C0FD4 | Since: 1207
 *
 * @deprecated Use physics._0xB7469CB9AC3C0FD4() instead
 */
export declare function _0xB7469CB9AC3C0FD4(): void;
/**
 * No comment provided
 *
 * Hash: 0xBB3E9B073E66C3C9 | Since: 1207
 *
 * @deprecated Use physics._0xBB3E9B073E66C3C9() instead
 */
export declare function _0xBB3E9B073E66C3C9(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBDDA142759307528 | Since: 1207
 *
 * @deprecated Use physics._0xBDDA142759307528() instead
 */
export declare function _0xBDDA142759307528(): void;
/**
 * No comment provided
 *
 * Hash: 0xC64E7A62632AD2FE | Since: 1207
 *
 * @deprecated Use physics._0xC64E7A62632AD2FE() instead
 */
export declare function _0xC64E7A62632AD2FE(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC89E7410A93AC19A | Since: 1207
 *
 * @deprecated Use physics._0xC89E7410A93AC19A() instead
 */
export declare function _0xC89E7410A93AC19A(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD699E688B49C0FD2 | Since: 1207
 *
 * @deprecated Use physics._0xD699E688B49C0FD2() instead
 */
export declare function _0xD699E688B49C0FD2(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEDE679ED29DD4E7 | Since: 1207
 *
 * @deprecated Use physics._0xDEDE679ED29DD4E7() instead
 */
export declare function _0xDEDE679ED29DD4E7(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE54BF2CE6C7D23A9 | Since: 1207
 *
 * @deprecated Use physics._0xE54BF2CE6C7D23A9() instead
 */
export declare function _0xE54BF2CE6C7D23A9(ropeId: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xEAF529446488EB18 | Since: 1207
 *
 * @deprecated Use physics._0xEAF529446488EB18() instead
 */
export declare function _0xEAF529446488EB18(): void;
/**
 * No comment provided
 *
 * Hash: 0xF1EA2A881EB7F2CD | Since: 1207
 *
 * @deprecated Use physics._0xF1EA2A881EB7F2CD() instead
 */
export declare function _0xF1EA2A881EB7F2CD(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF27F1A8DE4F50A1B | Since: 1207
 *
 * @deprecated Use physics._0xF27F1A8DE4F50A1B() instead
 */
export declare function _0xF27F1A8DE4F50A1B(): void;
/**
 * No comment provided
 *
 * Hash: 0xF8CA39D5C0D1D9A1 | Since: 1207
 *
 * @deprecated Use physics._0xF8CA39D5C0D1D9A1() instead
 */
export declare function _0xF8CA39D5C0D1D9A1(): void;
/**
 * No comment provided
 *
 * Hash: 0xFB9153A54AC713E8 | Since: 1207
 *
 * @deprecated Use physics._0xFB9153A54AC713E8() instead
 */
export declare function _0xFB9153A54AC713E8(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE9C59F6809373A99 | Since: 1207
 *
 * @deprecated Use physics.addRope2() instead
 */
export declare function addRope2(pos: Vector3, rot: Vector3, length: number, ropeType: number, isNetworked: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xE9CD9A67834985A7 | Since: 1207
 *
 * @deprecated Use physics.attachEntitesToRope3() instead
 */
export declare function attachEntitesToRope3(ropeId: number, entity1: number | Entity, entity2: number | Entity): void;
/**
 * Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
 *
 * Hash: 0x462FF2A432733A44 | Since: 1207
 *
 * @deprecated Use physics.attachEntitiesToRope2() instead
 */
export declare function attachEntitiesToRope2(ropeId: number, entity1: number | Entity, entity2: number | Entity, ent1X: number, ent1Y: number, ent1Z: number, ent2X: number, ent2Y: number, ent2Z: number, boneName1: string, boneName2: string): void;
/**
 * ropeTop returns top half of rope, ropeBottom returns bottom half of rope
 *
 * Hash: 0x4CFA2B7FAE115ECB | Since: 1207
 *
 * @deprecated Use physics.breakRope() instead
 */
export declare function breakRope(ropeId: number, ropeTop: number, ropeBottom: number, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * Combining this with ADD_ROPE enables winding
 * p1: mostly empty (0)
 * ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
 * _CREATE_*
 *
 * Hash: 0x3C6490D940FF5D0B | Since: 1207
 *
 * @deprecated Use physics.createRopeWindingAbility() instead
 */
export declare function createRopeWindingAbility(ropeId: number, ropeModelType: string, length: number): void;
/**
 * No comment provided
 *
 * Hash: 0x06AADE17334F7A40 | Since: 1207
 *
 * @deprecated Use physics.hitchHorse() instead
 */
export declare function hitchHorse(horse: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x9B4F7E3E4F9C77B3 | Since: 1207
 *
 * @deprecated Use physics.isRopeAttachedToEntity() instead
 */
export declare function isRopeAttachedToEntity(ropeId: number, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x79C2BEC82CFD7F7F | Since: 1207
 *
 * @deprecated Use physics.isRopeBroken() instead
 */
export declare function isRopeBroken(ropeId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6076213101A47B3B | Since: 1207
 *
 * @deprecated Use physics.releaseRope() instead
 */
export declare function releaseRope(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7A54D82227A139DB | Since: 1207
 *
 * @deprecated Use physics.ropeChangeVisibility() instead
 */
export declare function ropeChangeVisibility(ropeId: number, visible: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEE360CFC80C8B2BC | Since: 1311
 *
 * @deprecated Use physics.ropeGetBreakerOfRope() instead
 */
export declare function ropeGetBreakerOfRope(ropeId: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0x3D69537039F8D824 | Since: 1207
 *
 * @deprecated Use physics.ropeGetForcedLength() instead
 */
export declare function ropeGetForcedLength(ropeId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x00F611A794A3C36E | Since: 1207
 *
 * @deprecated Use physics.startRopeUnwindingBack() instead
 */
export declare function startRopeUnwindingBack(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x10DAA76CB8A201A1 | Since: 1207
 *
 * @deprecated Use physics.stopRopeUnwindingBack() instead
 */
export declare function stopRopeUnwindingBack(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0348469DAA17576C | Since: 1207
 *
 * @deprecated Use physics.unhitchHorse() instead
 */
export declare function unhitchHorse(horse: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x09C28F828EE674FA | Since: 1207
 *
 * @deprecated Use player.boostPlayerHorseSpeedForTime() instead
 */
export declare function boostPlayerHorseSpeedForTime(player: number | string | Player, speedBoost: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2DF170B1185AF777 | Since: 1207
 *
 * @deprecated Use player.canPlayerStartMission() instead
 */
export declare function canPlayerStartMission(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0361096D6CE4372C | Since: 1207
 *
 * @deprecated Use player.clearPlayerHasDamagedAtLeastOneNonAnimalPed() instead
 */
export declare function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x270B63A641BE32F2 | Since: 1207
 *
 * @deprecated Use player.clearPlayerHasDamagedAtLeastOnePed() instead
 */
export declare function clearPlayerHasDamagedAtLeastOnePed(player: number | string | Player): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x4E4B996C928C7AA6 | Since: 1207
 *
 * @deprecated Use player.clearPlayerWantedLevel() instead
 */
export declare function clearPlayerWantedLevel(player: number | string | Player): void;
/**
 * Inhibits the player from using any method of combat including melee and firearms.
 *
 * NOTE: Only disables the firing for one frame
 *
 * Hash: 0x2970929FD5F9FC89 | Since: 1207
 *
 * @deprecated Use player.disablePlayerFiring() instead
 */
export declare function disablePlayerFiring(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x62ED71E133B6C9F1 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetCustomEntityTint() instead
 */
export declare function eagleEyeSetCustomEntityTint(entity: number | Entity, red: number, green: number, blue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x768C017FB878E4F4 | Since: 1207
 *
 * @deprecated Use player.forceCleanup() instead
 */
export declare function forceCleanup(cleanupFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDAACAF8B687F2353 | Since: 1207
 *
 * @deprecated Use player.forceCleanupForAllThreadsWithThisName() instead
 */
export declare function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF4C9512A2F0A3031 | Since: 1207
 *
 * @deprecated Use player.forceCleanupForThreadWithThisId() instead
 */
export declare function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84E8E29EBD4A46D2 | Since: 1207
 *
 * @deprecated Use player.getCauseOfMostRecentForceCleanup() instead
 */
export declare function getCauseOfMostRecentForceCleanup(): number;
/**
 * Returns name hash (name) and outHash includes the type.
 *
 * Hash: 0x0139637A3BFF8B6D | Since: 1207
 *
 * @deprecated Use player.getDiscoverableNameHashAndTypeForEntity() instead
 */
export declare function getDiscoverableNameHashAndTypeForEntity(entity: number | Entity, type: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA6817C110B830EAD | Since: 1207
 *
 * @deprecated Use player.getEntityPlayerIsFreeAimingAt() instead
 */
export declare function getEntityPlayerIsFreeAimingAt(player: number | string | Player, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x354F689C4FFAAB37 | Since: 1207
 *
 * @deprecated Use player.getHasPlayerDiscoveredCharacterNameMp() instead
 */
export declare function getHasPlayerDiscoveredCharacterNameMp(discoveryHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x51BEA356B1C60225 | Since: 1207
 *
 * @deprecated Use player.getIsPlayerUiPromptActive() instead
 */
export declare function getIsPlayerUiPromptActive(player: number | string | Player): boolean;
/**
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 *
 * Hash: 0xD04CFAD1E2B7984A | Since: 1207
 *
 * @deprecated Use player.getMaxWantedLevel() instead
 */
export declare function getMaxWantedLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0xF49F14462F0AE27C | Since: 1207
 *
 * @deprecated Use player.getMountOwnedByPlayer() instead
 */
export declare function getMountOwnedByPlayer(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x2F96E7720B0B19EA | Since: 1207
 *
 * @deprecated Use player.getPlayersLastVehicle() instead
 */
export declare function getPlayersLastVehicle(): number;
/**
 * No comment provided
 *
 * Hash: 0xD7ECC25E176ECBA5 | Since: 1207
 *
 * @deprecated Use player.getPlayerCurrentStealthNoise() instead
 */
export declare function getPlayerCurrentStealthNoise(player: number | string | Player): number;
/**
 * Returns the group ID the player is member of.
 *
 * Hash: 0x9BAB31815159ABCF | Since: 1207
 *
 * @deprecated Use player.getPlayerGroup() instead
 */
export declare function getPlayerGroup(player: number | string | Player): number;
/**
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 *
 * Hash: 0x47E385B0D957C8D4 | Since: 1207
 *
 * @deprecated Use player.getPlayerIndex() instead
 */
export declare function getPlayerIndex(): number | string;
/**
 * No comment provided
 *
 * Hash: 0x3EE1F7A8C32F24E1 | Since: 1207
 *
 * @deprecated Use player.getPlayerInteractionTargetEntity() instead
 */
export declare function getPlayerInteractionTargetEntity(player: number | string | Player, outEntity: number | Entity): boolean;
/**
 * Returns the player's invincibility status.
 *
 * Hash: 0x0CBBCB2CCFA7DC4E | Since: 1207
 *
 * @deprecated Use player.getPlayerInvincible() instead
 */
export declare function getPlayerInvincible(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7124FD9AC0E01BA0 | Since: 1207
 *
 * @deprecated Use player.getPlayerName() instead
 */
export declare function getPlayerName(player: number | string | Player): string;
/**
 * No comment provided
 *
 * Hash: 0x275F255ED201B937 | Since: 1207
 *
 * @deprecated Use player.getPlayerPed() instead
 */
export declare function getPlayerPed(player: number | string | Player): number;
/**
 * `Does the same like PLAYER::GET_PLAYER_PED`
 *
 * Hash: 0x5C880F9056D784C8 | Since: 1207
 *
 * @deprecated Use player.getPlayerPedScriptIndex() instead
 */
export declare function getPlayerPedScriptIndex(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xFB6EB8785F808551 | Since: 1207
 *
 * @deprecated Use player.getPlayerReceivedBattleEventRecently() instead
 */
export declare function getPlayerReceivedBattleEventRecently(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAE663DDD99C8A670 | Since: 1207
 *
 * @deprecated Use player.getPlayerTargetEntity() instead
 */
export declare function getPlayerTargetEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * Gets the player's team.
 * Returns -1 in singleplayer.
 *
 * Hash: 0xB464EB6A40C7975B | Since: 1207
 *
 * @deprecated Use player.getPlayerTeam() instead
 */
export declare function getPlayerTeam(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xABC532F9098BFD9D | Since: 1207
 *
 * @deprecated Use player.getPlayerWantedLevel() instead
 */
export declare function getPlayerWantedLevel(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x36E3D8B5A6552FE8 | Since: 1207
 *
 * @deprecated Use player.getTargetCharacterNameForLocalPlayer() instead
 */
export declare function getTargetCharacterNameForLocalPlayer(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x0335106F3ACABBED | Since: 1207
 *
 * @deprecated Use player.getTargetCharacterNameScriptOverrideHash() instead
 */
export declare function getTargetCharacterNameScriptOverrideHash(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x755E08680F21EF30 | Since: 1207
 *
 * @deprecated Use player.getTargetCharacterNameScriptOverrideRawString() instead
 */
export declare function getTargetCharacterNameScriptOverrideRawString(ped: number | Ped): string;
/**
 * No comment provided
 *
 * Hash: 0x80B00EB26D9521C7 | Since: 1207
 *
 * @deprecated Use player.getWantedLevelRadius() instead
 */
export declare function getWantedLevelRadius(): number;
/**
 * No comment provided
 *
 * Hash: 0x1B1A3B358F7D8F07 | Since: 1207
 *
 * @deprecated Use player.getWantedLevelThreshold() instead
 */
export declare function getWantedLevelThreshold(wantedLevel: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC11469DCA6FC3BB5 | Since: 1207
 *
 * @deprecated Use player.hasForceCleanupOccurred() instead
 */
export declare function hasForceCleanupOccurred(cleanupFlags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC932F57F31EA9152 | Since: 1207
 *
 * @deprecated Use player.hasPlayerBeenSpottedInStolenVehicle() instead
 */
export declare function hasPlayerBeenSpottedInStolenVehicle(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x16C8D205DD5A2E90 | Since: 1207
 *
 * @deprecated Use player.hasPlayerDamagedAtLeastOneNonAnimalPed() instead
 */
export declare function hasPlayerDamagedAtLeastOneNonAnimalPed(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA4A4B9B96E20092 | Since: 1207
 *
 * @deprecated Use player.hasPlayerDamagedAtLeastOnePed() instead
 */
export declare function hasPlayerDamagedAtLeastOnePed(player: number | string | Player): boolean;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x58FF971FC8F2702C | Since: 1207
 *
 * @deprecated Use player.intToParticipantindex() instead
 */
export declare function intToParticipantindex(value: number): number;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x748B3A65C2604C33 | Since: 1207
 *
 * @deprecated Use player.intToPlayerindex() instead
 */
export declare function intToPlayerindex(value: number): number | string;
/**
 * Return true while player is being arrested / busted.
 *
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 *
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 *
 * Hash: 0xC8183AE963C58374 | Since: 1207
 *
 * @deprecated Use player.isPlayerBeingArrested() instead
 */
export declare function isPlayerBeingArrested(player: number | string | Player, atArresting: boolean): boolean;
/**
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 *
 * Hash: 0xB8A70C22FD48197A | Since: 1207
 *
 * @deprecated Use player.isPlayerClimbing() instead
 */
export declare function isPlayerClimbing(player: number | string | Player): boolean;
/**
 * Returns whether the player can control himself.
 *
 * Hash: 0x7964097FCE4C244B | Since: 1207
 *
 * @deprecated Use player.isPlayerControlOn() instead
 */
export declare function isPlayerControlOn(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E9C3FCB6798F397 | Since: 1207
 *
 * @deprecated Use player.isPlayerDead() instead
 */
export declare function isPlayerDead(player: number | string | Player): boolean;
/**
 * Gets a value indicating whether the specified player is currently aiming freely.
 *
 * Hash: 0x936F967D4BE1CE9D | Since: 1207
 *
 * @deprecated Use player.isPlayerFreeAiming() instead
 */
export declare function isPlayerFreeAiming(player: number | string | Player): boolean;
/**
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 *
 * Hash: 0x8C67C11C68713D25 | Since: 1207
 *
 * @deprecated Use player.isPlayerFreeAimingAtEntity() instead
 */
export declare function isPlayerFreeAimingAtEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 *
 * Hash: 0xBFFB35986CAAE58C | Since: 1207
 *
 * @deprecated Use player.isPlayerPlaying() instead
 */
export declare function isPlayerPlaying(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA67BCB0097F2FA3 | Since: 1207
 *
 * @deprecated Use player.isPlayerReadyForCutscene() instead
 */
export declare function isPlayerReadyForCutscene(player: number | string | Player): boolean;
/**
 * Returns true if the player is riding a train.
 *
 * Hash: 0x2FB0ACADA6A238DD | Since: 1207
 *
 * @deprecated Use player.isPlayerRidingTrain() instead
 */
export declare function isPlayerRidingTrain(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB78350754157C00F | Since: 1207
 *
 * @deprecated Use player.isPlayerScriptControlOn() instead
 */
export declare function isPlayerScriptControlOn(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4605C66E0F935F83 | Since: 1207
 *
 * @deprecated Use player.isPlayerTargettingAnything() instead
 */
export declare function isPlayerTargettingAnything(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x27F89FDC16688A7A | Since: 1207
 *
 * @deprecated Use player.isPlayerTargettingEntity() instead
 */
export declare function isPlayerTargettingEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x085EEAEB8783FEB5 | Since: 1207
 *
 * @deprecated Use player.isPlayerTeleportActive() instead
 */
export declare function isPlayerTeleportActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE1C0AD4C24324C36 | Since: 1207
 *
 * @deprecated Use player.isPlayerWantedLevelGreater() instead
 */
export declare function isPlayerWantedLevelGreater(player: number | string | Player, wantedLevel: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x908258B6209E71F7 | Since: 1207
 *
 * @deprecated Use player.isSystemUiBeingDisplayed() instead
 */
export declare function isSystemUiBeingDisplayed(): boolean;
/**
 * Does exactly the same thing as PLAYER_ID()
 *
 * Hash: 0x8A9386F0749A17FA | Since: 1207
 *
 * @deprecated Use player.networkPlayerIdToInt() instead
 */
export declare function networkPlayerIdToInt(): number;
/**
 * This returns YOUR 'identity' as a Player type.
 *
 * Always returns 0 in story mode.
 *
 * Hash: 0x217E9DC48139933D | Since: 1207
 *
 * @deprecated Use player.playerId() instead
 */
export declare function playerId(): number | string;
/**
 * Returns current player ped
 *
 * Hash: 0x096275889B8E0EE0 | Since: 1207
 *
 * @deprecated Use player.playerPedId() instead
 */
export declare function playerPedId(): number;
/**
 * No comment provided
 *
 * Hash: 0xCBCCF73FFA69CC6B | Since: 1207
 *
 * @deprecated Use player.reportPoliceSpottedPlayer() instead
 */
export declare function reportPoliceSpottedPlayer(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x5CE5CACC01D0F985 | Since: 1207
 *
 * @deprecated Use player.resetLawResponseDelayOverride() instead
 */
export declare function resetLawResponseDelayOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x12917931C31F1750 | Since: 1207
 *
 * @deprecated Use player.resetPlayerArrestState() instead
 */
export declare function resetPlayerArrestState(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x61A2EECAB274829B | Since: 1207
 *
 * @deprecated Use player.resetPlayerInputGait() instead
 */
export declare function resetPlayerInputGait(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x062D14F18E8B0CAE | Since: 1207
 *
 * @deprecated Use player.resetWantedLevelDifficulty() instead
 */
export declare function resetWantedLevelDifficulty(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC41F4B6E23FE6A4A | Since: 1207
 *
 * @deprecated Use player.restorePlayerStamina() instead
 */
export declare function restorePlayerStamina(player: number | string | Player): void;
/**
 * This can be between 1.0f - 50.0f
 *
 * Hash: 0x5DA6500FE849DA16 | Since: 1207
 *
 * @deprecated Use player.setAirDragMultiplierForPlayersVehicle() instead
 */
export declare function setAirDragMultiplierForPlayersVehicle(player: number | string | Player, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x16752DAA7E6D3F72 | Since: 1207
 *
 * @deprecated Use player.setAllNeutralRandomPedsFleeThisFrame() instead
 */
export declare function setAllNeutralRandomPedsFleeThisFrame(player: number | string | Player): void;
/**
 * Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
 *
 * Hash: 0xE705309B8C6445A4 | Since: 1207
 *
 * @deprecated Use player.setAllRandomPedsFlee() instead
 */
export declare function setAllRandomPedsFlee(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD5C198A62F1DEB0A | Since: 1207
 *
 * @deprecated Use player.setAllRandomPedsFleeThisFrame() instead
 */
export declare function setAllRandomPedsFleeThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x34630A768925B852 | Since: 1207
 *
 * @deprecated Use player.setEveryoneIgnorePlayer() instead
 */
export declare function setEveryoneIgnorePlayer(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD2DFC9CCA5596A11 | Since: 1207
 *
 * @deprecated Use player.setLawResponseDelayOverride() instead
 */
export declare function setLawResponseDelayOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x4A056257802DD3E5 | Since: 1207
 *
 * @deprecated Use player.setLockonToFriendlyPlayers() instead
 */
export declare function setLockonToFriendlyPlayers(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x28A4BD2CEE236E19 | Since: 1207
 *
 * @deprecated Use player.setMaxWantedLevel() instead
 */
export declare function setMaxWantedLevel(maxWantedLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x506CE71FB6E8CF5E | Since: 1207
 *
 * @deprecated Use player.setMinTimeBeforeHorseBucking() instead
 */
export declare function setMinTimeBeforeHorseBucking(mount: number | Ped, iMinBuckTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0x227B06324234FB09 | Since: 1207
 *
 * @deprecated Use player.setPedAsTempPlayerHorse() instead
 */
export declare function setPedAsTempPlayerHorse(player: number | string | Player, horse: number | Ped): boolean;
/**
 * Sets whether this player can be hassled by gangs.
 *
 * Hash: 0xC7FE774412046825 | Since: 1207
 *
 * @deprecated Use player.setPlayerCanBeHassledByGangs() instead
 */
export declare function setPlayerCanBeHassledByGangs(player: number | string | Player, toggle: boolean): void;
/**
 * Sets whether this player can take cover.
 *
 * Hash: 0x5EDA520F7A3BAF4E | Since: 1207
 *
 * @deprecated Use player.setPlayerCanUseCover() instead
 */
export declare function setPlayerCanUseCover(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD0D9317DFEEF9A66 | Since: 1207
 *
 * @deprecated Use player.setPlayerClothPinFrames() instead
 */
export declare function setPlayerClothPinFrames(ped: number | Ped): void;
/**
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
 *
 * Hash: 0x4D51E59243281D80 | Since: 1207
 *
 * @deprecated Use player.setPlayerControl() instead
 */
export declare function setPlayerControl(player: number | string | Player, toggle: boolean, flags: number, bPreventHeadingChange: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD5FCC166AEB2FD0F | Since: 1207
 *
 * @deprecated Use player.setPlayerForcedAim() instead
 */
export declare function setPlayerForcedAim(player: number | string | Player, toggle: boolean, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8899C244EBCF70DE | Since: 1207
 *
 * @deprecated Use player.setPlayerHealthRechargeMultiplier() instead
 */
export declare function setPlayerHealthRechargeMultiplier(player: number | string | Player, regenRate: number): void;
/**
 * Simply sets you as invincible (Health will not deplete).
 *
 * Hash: 0xFEBEEBC9CBDF4B12 | Since: 1207
 *
 * @deprecated Use player.setPlayerInvincible() instead
 */
export declare function setPlayerInvincible(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x462AA1973CBBA75E | Since: 1207
 *
 * @deprecated Use player.setPlayerLockon() instead
 */
export declare function setPlayerLockon(player: number | string | Player, toggle: boolean): void;
/**
 * Affects the range of auto aim target.
 *
 * Hash: 0x3A3CD06597388322 | Since: 1207
 *
 * @deprecated Use player.setPlayerLockonRangeOverride() instead
 */
export declare function setPlayerLockonRangeOverride(player: number | string | Player, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBEC463B3A11C909E | Since: 1207
 *
 * @deprecated Use player.setPlayerMayNotEnterAnyVehicle() instead
 */
export declare function setPlayerMayNotEnterAnyVehicle(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xDA35A134038557EC | Since: 1207
 *
 * @deprecated Use player.setPlayerMayOnlyEnterThisVehicle() instead
 */
export declare function setPlayerMayOnlyEnterThisVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE4CB5A3F18170381 | Since: 1207
 *
 * @deprecated Use player.setPlayerMeleeWeaponDamageModifier() instead
 */
export declare function setPlayerMeleeWeaponDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * Make sure to request the model first and wait until it has loaded.
 *
 * Hash: 0xED40380076A31506 | Since: 1207
 *
 * @deprecated Use player.setPlayerModel() instead
 */
export declare function setPlayerModel(player: number | string | Player, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xB5EC6BDAEBCA454C | Since: 1207
 *
 * @deprecated Use player.setPlayerNoiseMultiplier() instead
 */
export declare function setPlayerNoiseMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE0447DEF81CCDFD2 | Since: 1207
 *
 * @deprecated Use player.setPlayerSimulateAiming() instead
 */
export declare function setPlayerSimulateAiming(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4DE44FA389DCA565 | Since: 1207
 *
 * @deprecated Use player.setPlayerSneakingNoiseMultiplier() instead
 */
export declare function setPlayerSneakingNoiseMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFECA17CF3343694B | Since: 1207
 *
 * @deprecated Use player.setPlayerStaminaRechargeMultiplier() instead
 */
export declare function setPlayerStaminaRechargeMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * Sets your targeting mode for when you're on foot.
 * enum eTargetingMode
 * {
 * TARGETING_MODE_INVALID = -1,
 * TARGETING_MODE_CAUSAL, (Wide)
 * TARGETING_MODE_NORMAL,
 * TARGETING_MODE_HARD, (Narrow)
 * TARGETING_MODE_EXPERT (Free Aim)
 * };
 *
 * Hash: 0xD66A941F401E7302 | Since: 1207
 *
 * @deprecated Use player.setPlayerTargetingMode() instead
 */
export declare function setPlayerTargetingMode(targetMode: number): void;
/**
 * Sets the player's team.
 *
 * Hash: 0xE8DD8536F01DE600 | Since: 1207
 *
 * @deprecated Use player.setPlayerTeam() instead
 */
export declare function setPlayerTeam(player: number | string | Player, team: number, bRestrictToThisScript: boolean): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x384D4765395E006C | Since: 1207
 *
 * @deprecated Use player.setPlayerWantedLevel() instead
 */
export declare function setPlayerWantedLevel(player: number | string | Player, wantedLevel: number, disableNoMission: boolean): void;
/**
 * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
 *
 * Hash: 0x94D529F7B73D7A85 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponDamageModifier() instead
 */
export declare function setPlayerWeaponDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD15CC2D493160BE3 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponDefenseModifier() instead
 */
export declare function setPlayerWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD04AD186CE8BB129 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponTypeDamageModifier() instead
 */
export declare function setPlayerWeaponTypeDamageModifier(player: number | string | Player, weaponHash: number | string, damageModifier: number): void;
/**
 * If toggle is set to false:
 * The police won't be shown on the (mini)map
 *
 * If toggle is set to true:
 * The police will be shown on the (mini)map
 *
 * Hash: 0x6FD7DD6B63F2820E | Since: 1207
 *
 * @deprecated Use player.setPoliceRadarBlips() instead
 */
export declare function setPoliceRadarBlips(toggle: boolean): void;
/**
 * Swim speed multiplier.
 * Multiplier goes up to 1.49f
 *
 * Hash: 0xBFCEABDE34DA5085 | Since: 1207
 *
 * @deprecated Use player.setSwimMultiplierForPlayer() instead
 */
export declare function setSwimMultiplierForPlayer(player: number | string | Player, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD7FA719CB54866C2 | Since: 1207
 *
 * @deprecated Use player.setWantedLevelMultiplier() instead
 */
export declare function setWantedLevelMultiplier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA0C063C422C4355 | Since: 1207
 *
 * @deprecated Use player.simulatePlayerInputGait() instead
 */
export declare function simulatePlayerInputGait(player: number | string | Player, speed: number, duration: number, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF8822C55EDDA65B | Since: 1207
 *
 * @deprecated Use player.startPlayerTeleport() instead
 */
export declare function startPlayerTeleport(player: number | string | Player, pos: Vector3, heading: number): void;
/**
 * Disables the player's teleportation
 *
 * Hash: 0x0858B86146601BE8 | Since: 1207
 *
 * @deprecated Use player.stopPlayerTeleport() instead
 */
export declare function stopPlayerTeleport(): void;
/**
 * No comment provided
 *
 * Hash: 0x96722257E5381E00 | Since: 1207
 *
 * @deprecated Use player.suppressWitnessesCallingPoliceThisFrame() instead
 */
export declare function suppressWitnessesCallingPoliceThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC39DCE4672CBFBC1 | Since: 1207
 *
 * @deprecated Use player.updatePlayerTeleport() instead
 */
export declare function updatePlayerTeleport(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD0B0B044112BF424 | Since: 1207
 *
 * @deprecated Use player.updateWantedPositionThisFrame() instead
 */
export declare function updateWantedPositionThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x00B156AFEBCC5AE0 | Since: 1207
 *
 * @deprecated Use player._0x00B156AFEBCC5AE0() instead
 */
export declare function _0x00B156AFEBCC5AE0(): void;
/**
 * No comment provided
 *
 * Hash: 0x00EB5A760638DB55 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponDrawSpeed() instead
 */
export declare function setPlayerWeaponDrawSpeed(player: number | string | Player, weapon: number | string, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x03B4B759A8990505 | Since: 1207
 *
 * @deprecated Use player._0x03B4B759A8990505() instead
 */
export declare function _0x03B4B759A8990505(): any;
/**
 * Sets the stand prompt for a specific player using a predefined text entry. use AddTextEntry for promptTextKey for custom names
 *
 * Hash: 0x06C3DB00B69D5435 | Since: 1232
 *
 * @deprecated Use player.setPlayerPromptLeaveText() instead
 */
export declare function setPlayerPromptLeaveText(player: number | string | Player, promptTextKey: string): void;
/**
 * No comment provided
 *
 * Hash: 0x06E1FB78B1E59CA5 | Since: 1207
 *
 * @deprecated Use player._0x06E1FB78B1E59CA5() instead
 */
export declare function _0x06E1FB78B1E59CA5(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x086549F3B0381CB1 | Since: 1207
 *
 * @deprecated Use player._0x086549F3B0381CB1() instead
 */
export declare function _0x086549F3B0381CB1(): void;
/**
 * No comment provided
 *
 * Hash: 0x0869D499A7848309 | Since: 1207
 *
 * @deprecated Use player._0x0869D499A7848309() instead
 */
export declare function _0x0869D499A7848309(): void;
/**
 * _SET_PLAYER_*? some multiplier or modifier for health or statmina ?
 *
 * Hash: 0x08E22898A6AF4905 | Since: 1207
 *
 * @deprecated Use player._0x08E22898A6AF4905() instead
 */
export declare function _0x08E22898A6AF4905(player: number | string | Player): void;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0x0B7803F6F7BB43E0 | Since: 1207
 *
 * @deprecated Use player._0x0B7803F6F7BB43E0() instead
 */
export declare function _0x0B7803F6F7BB43E0(): any;
/**
 * Clears the intensity of aura effects applied to entities for a specific player in Deadeye mode based on a flag parameter. This function is used to reset any intensity modifications set by `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`, restoring affected entities' aura intensity to their default state.
 *
 * Hash: 0x0E9057A9DA78D0F8 | Since: 1207
 *
 * @deprecated Use player.clearDeadeyeAuraIntensityWithFlag() instead
 */
export declare function clearDeadeyeAuraIntensityWithFlag(player: number | string | Player, bitflag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F4EAF69DA41AF43 | Since: 1207
 *
 * @deprecated Use player._0x0F4EAF69DA41AF43() instead
 */
export declare function _0x0F4EAF69DA41AF43(): any;
/**
 * No comment provided
 *
 * Hash: 0x0F9CF06986300875 | Since: 1207
 *
 * @deprecated Use player._0x0F9CF06986300875() instead
 */
export declare function _0x0F9CF06986300875(): void;
/**
 * Sets the melee combat prompt for a specific player using a predefined text entry. use game string or
 * AddTextEntry("custom_text", "Throw a punch") and use custom_text in the native
 *
 * Hash: 0x0FAF95D71ED67ADE | Since: 1207
 *
 * @deprecated Use player.setPlayerMeleePromptText() instead
 */
export declare function setPlayerMeleePromptText(player: number | string | Player, label: string): void;
/**
 * No comment provided
 *
 * Hash: 0x107F2A66E1C4C83A | Since: 1207
 *
 * @deprecated Use player._0x107F2A66E1C4C83A() instead
 */
export declare function _0x107F2A66E1C4C83A(): void;
/**
 * No comment provided
 *
 * Hash: 0x113EF458AB6CDA67 | Since: 1207
 *
 * @deprecated Use player._0x113EF458AB6CDA67() instead
 */
export declare function _0x113EF458AB6CDA67(): void;
/**
 * No comment provided
 *
 * Hash: 0x12E09E278C6C29B7 | Since: 1207
 *
 * @deprecated Use player._0x12E09E278C6C29B7() instead
 */
export declare function _0x12E09E278C6C29B7(): void;
/**
 * Applies a customizable aura effect to nearby entities when Deadeye is active, with control over aura intensity and additional behavior based on a flag parameter.
 * - flag (int): A flag that determines the behavior of the aura effect and which entities are affected. 2: Applies aura to humans. 4: Applies aura to animals.
 *
 * Hash: 0x131E294EF60160DF | Since: 1207
 *
 * @deprecated Use player.setDeadeyeEntityAuraIntensityWithFlag() instead
 */
export declare function setDeadeyeEntityAuraIntensityWithFlag(player: number | string | Player, intensity: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x14E57F88BA0A07FC | Since: 1207
 *
 * @deprecated Use player._0x14E57F88BA0A07FC() instead
 */
export declare function _0x14E57F88BA0A07FC(location: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x19B2C7A6C34FAD54 | Since: 1207
 *
 * @deprecated Use player._0x19B2C7A6C34FAD54() instead
 */
export declare function _0x19B2C7A6C34FAD54(): any;
/**
 * it is used to check for that period of time if player damaged any peds only returns the last 3 hits with the entity ids so if you hit the same entity 3 times it will return the same entity id 3 times, if you hit 4 different entities within that time it will return the last 3 entity ids
 * only stores the last 3 hits in the data view buffer
 * duration is in miliseconds
 * you need dataview
 *
 * Hash: 0x1A6E84F13C952094 | Since: 1207
 *
 * @deprecated Use player.getPedsDamagedByPlayerRecently() instead
 */
export declare function getPedsDamagedByPlayerRecently(player: number | string | Player, duration: number, struct: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1AD8AD999C27F44A | Since: 1311
 *
 * @deprecated Use player._0x1AD8AD999C27F44A() instead
 */
export declare function _0x1AD8AD999C27F44A(): void;
/**
 * No comment provided
 *
 * Hash: 0x1D256EED194F5B58 | Since: 1207
 *
 * @deprecated Use player._0x1D256EED194F5B58() instead
 */
export declare function _0x1D256EED194F5B58(): void;
/**
 * Checks if the player can focus on tracks while in Eagle Eye mode. Returns true if the player is able to focus on a track, otherwise false.
 *
 * Hash: 0x1DA5C5B0923E1B85 | Since: 1207
 *
 * @deprecated Use player.eagleEyeCanPlayerFocusOnTrack() instead
 */
export declare function eagleEyeCanPlayerFocusOnTrack(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1E8099F449ABB0BA | Since: 1207
 *
 * @deprecated Use player._0x1E8099F449ABB0BA() instead
 */
export declare function _0x1E8099F449ABB0BA(): any;
/**
 * _RESET_PLAYER_A* - _RESET_PLAYER_I*
 *
 * Hash: 0x1F488807BC8E0630 | Since: 1207
 *
 * @deprecated Use player._0x1F488807BC8E0630() instead
 */
export declare function _0x1F488807BC8E0630(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x1FDA57E8908F2609 | Since: 1207
 *
 * @deprecated Use player._0x1FDA57E8908F2609() instead
 */
export declare function _0x1FDA57E8908F2609(player: number | string | Player, ped: number | Ped, useSteerassist: boolean): void;
/**
 * This native is used to determine if the player has an active lockon an entity while riding a horse.
 *
 * Hash: 0x2009F8AB7A5E9D6D | Since: 1207
 *
 * @deprecated Use player.isPlayerOnMountLockonEntity() instead
 */
export declare function isPlayerOnMountLockonEntity(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x21091B4BEB6376EE | Since: 1207
 *
 * @deprecated Use player._0x21091B4BEB6376EE() instead
 */
export declare function _0x21091B4BEB6376EE(): any;
/**
 * No comment provided
 *
 * Hash: 0x216BC0D3D2E413D2 | Since: 1207
 *
 * @deprecated Use player._0x216BC0D3D2E413D2() instead
 */
export declare function _0x216BC0D3D2E413D2(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x22B3CABEDDB538B2 | Since: 1207
 *
 * @deprecated Use player._0x22B3CABEDDB538B2() instead
 */
export declare function _0x22B3CABEDDB538B2(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x22C8B10802301381 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetRange() instead
 */
export declare function eagleEyeSetRange(player: number | string | Player, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x263D69767F76059C | Since: 1207
 *
 * @deprecated Use player._0x263D69767F76059C() instead
 */
export declare function _0x263D69767F76059C(player: number | string | Player): void;
/**
 * Retrieves the number of marks placed on a PED when Deadeye mode is active for the specified player.
 *
 * Hash: 0x27AD7162D3FED01E | Since: 1207
 *
 * @deprecated Use player.getNumDeadeyeMarksOnPed() instead
 */
export declare function getNumDeadeyeMarksOnPed(player: number | string | Player, ped: number | Ped): number;
/**
 * Applies a aura effect to nearby entities when Deadeye is active, based on a flag parameter. This includes humans, animals, vehicles, and horses pulling those vehicles. Additionally, depending on the flag value, the player's appearance may change (e.g., turning gray).
 * - flag (int): A flag that determines the behavior of the aura effect. 2 means people 4 means animal etc.
 *
 * Hash: 0x2B12B6FC8B8772AB | Since: 1207
 *
 * @deprecated Use player.setDeadeyeEntityAuraWithFlag() instead
 */
export declare function setDeadeyeEntityAuraWithFlag(player: number | string | Player, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2BB8D58E88777499 | Since: 1207
 *
 * @deprecated Use player._0x2BB8D58E88777499() instead
 */
export declare function _0x2BB8D58E88777499(): void;
/**
 * No comment provided
 *
 * Hash: 0x2BEED53B912537D0 | Since: 1207
 *
 * @deprecated Use player._0x2BEED53B912537D0() instead
 */
export declare function _0x2BEED53B912537D0(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C2D287748E8E9B7 | Since: 1207
 *
 * @deprecated Use player._0x2C2D287748E8E9B7() instead
 */
export declare function _0x2C2D287748E8E9B7(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E1ABE627C95ED9B | Since: 1207
 *
 * @deprecated Use player._0x2E1ABE627C95ED9B() instead
 */
export declare function _0x2E1ABE627C95ED9B(): any;
/**
 * No comment provided
 *
 * Hash: 0x2E67707BEC52CA4B | Since: 1207
 *
 * @deprecated Use player._0x2E67707BEC52CA4B() instead
 */
export declare function _0x2E67707BEC52CA4B(): void;
/**
 * No comment provided
 *
 * Hash: 0x310CE349E0C0EC4B | Since: 1207
 *
 * @deprecated Use player._0x310CE349E0C0EC4B() instead
 */
export declare function _0x310CE349E0C0EC4B(player: number | string | Player, ped: number | Ped): void;
/**
 * Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
 *
 * Hash: 0x325434C68358D282 | Since: 1207
 *
 * @deprecated Use player._0x325434C68358D282() instead
 */
export declare function _0x325434C68358D282(toggle: boolean): void;
/**
 * Sets whether all trails are hidden during Eagle Eye mode.
 *
 * Hash: 0x330CA55A3647FA1C | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetHideAllTrails() instead
 */
export declare function eagleEyeSetHideAllTrails(player: number | string | Player, hide: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x35A33783EC3C3448 | Since: 1311
 *
 * @deprecated Use player._0x35A33783EC3C3448() instead
 */
export declare function _0x35A33783EC3C3448(): void;
/**
 * Retrieves the ID of the ped that the specified player is currently tracking while in Eagle Eye mode.
 *
 * Hash: 0x3813E11A378958A5 | Since: 1207
 *
 * @deprecated Use player.eagleEyeGetTrackedPedId() instead
 */
export declare function eagleEyeGetTrackedPedId(player: number | string | Player): number;
/**
 * Associates a specific interactive focus mode preset between a player and a ped, with a specified location and target entity.
 * To access all available presets, refer to the file located at: `/update_1.rpf/common/data/interactive_focus_mode_presets.meta`
 *
 * Hash: 0x3946FC742AC305CD | Since: 1207
 *
 * @deprecated Use player.addAmbientPlayerInteractiveFocusPreset() instead
 */
export declare function addAmbientPlayerInteractiveFocusPreset(player: number | string | Player, ped: number | Ped, preset: string, pos: Vector3, targetEntity: number | Entity, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x39D8D7082BC34B72 | Since: 1311
 *
 * @deprecated Use player._0x39D8D7082BC34B72() instead
 */
export declare function _0x39D8D7082BC34B72(): void;
/**
 * No comment provided
 *
 * Hash: 0x3A8611BD7BDE84F7 | Since: 1207
 *
 * @deprecated Use player._0x3A8611BD7BDE84F7() instead
 */
export declare function _0x3A8611BD7BDE84F7(): void;
/**
 * Used in script function INIT_DEADEYE_SLOWDOWN
 *
 * Hash: 0x3ACAC8832E77BC93 | Since: 1207
 *
 * @deprecated Use player._0x3ACAC8832E77BC93() instead
 */
export declare function _0x3ACAC8832E77BC93(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x3AD212429E095EFB | Since: 1207
 *
 * @deprecated Use player._0x3AD212429E095EFB() instead
 */
export declare function _0x3AD212429E095EFB(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x3B296934DB026873 | Since: 1207
 *
 * @deprecated Use player._0x3B296934DB026873() instead
 */
export declare function _0x3B296934DB026873(): void;
/**
 * No comment provided
 *
 * Hash: 0x3BB84F812E052C90 | Since: 1207
 *
 * @deprecated Use player._0x3BB84F812E052C90() instead
 */
export declare function _0x3BB84F812E052C90(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C4AE8506638C7E2 | Since: 1207
 *
 * @deprecated Use player._0x3C4AE8506638C7E2() instead
 */
export declare function _0x3C4AE8506638C7E2(): void;
/**
 * No comment provided
 *
 * Hash: 0x3D9DA5C9EFD20D88 | Since: 1207
 *
 * @deprecated Use player._0x3D9DA5C9EFD20D88() instead
 */
export declare function _0x3D9DA5C9EFD20D88(): void;
/**
 * No comment provided
 *
 * Hash: 0x3DAABE78A23694BC | Since: 1207
 *
 * @deprecated Use player._0x3DAABE78A23694BC() instead
 */
export declare function _0x3DAABE78A23694BC(): void;
/**
 * No comment provided
 *
 * Hash: 0x45EF176B532CA851 | Since: 1207
 *
 * @deprecated Use player._0x45EF176B532CA851() instead
 */
export declare function _0x45EF176B532CA851(): void;
/**
 * No comment provided
 *
 * Hash: 0x497A18F8F88AA9D8 | Since: 1207
 *
 * @deprecated Use player._0x497A18F8F88AA9D8() instead
 */
export declare function _0x497A18F8F88AA9D8(): void;
/**
 * _SET_SPECIAL_ABILITY_*
 *
 * Hash: 0x4D1699543B1C023C | Since: 1207
 *
 * @deprecated Use player._0x4D1699543B1C023C() instead
 */
export declare function _0x4D1699543B1C023C(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x4DBC4873707E8FD6 | Since: 1207
 *
 * @deprecated Use player._0x4DBC4873707E8FD6() instead
 */
export declare function _0x4DBC4873707E8FD6(): void;
/**
 * No comment provided
 *
 * Hash: 0x4EC8BE63B8A5D4EF | Since: 1207
 *
 * @deprecated Use player._0x4EC8BE63B8A5D4EF() instead
 */
export declare function _0x4EC8BE63B8A5D4EF(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x4F0D2256AAE94EDA | Since: 1207
 *
 * @deprecated Use player._0x4F0D2256AAE94EDA() instead
 */
export declare function _0x4F0D2256AAE94EDA(): void;
/**
 * No comment provided
 *
 * Hash: 0x51139D8C17B16FBC | Since: 1207
 *
 * @deprecated Use player._0x51139D8C17B16FBC() instead
 */
export declare function _0x51139D8C17B16FBC(): any;
/**
 * _IS_PLAYER_D* - _IS_PLAYER_F*
 *
 * Hash: 0x57028FD99886F6F9 | Since: 1232
 *
 * @deprecated Use player._0x57028FD99886F6F9() instead
 */
export declare function _0x57028FD99886F6F9(): boolean;
/**
 * Used in script function INIT_DEADEYE_SLOWDOWN
 *
 * Hash: 0x570A13A4CA2799BB | Since: 1207
 *
 * @deprecated Use player._0x570A13A4CA2799BB() instead
 */
export declare function _0x570A13A4CA2799BB(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x57D9991DC1334151 | Since: 1207
 *
 * @deprecated Use player._0x57D9991DC1334151() instead
 */
export declare function _0x57D9991DC1334151(): any;
/**
 * No comment provided
 *
 * Hash: 0x585CE159DB46FADB | Since: 1207
 *
 * @deprecated Use player._0x585CE159DB46FADB() instead
 */
export declare function _0x585CE159DB46FADB(): void;
/**
 * No comment provided
 *
 * Hash: 0x5B7B97E99F84138B | Since: 1207
 *
 * @deprecated Use player._0x5B7B97E99F84138B() instead
 */
export declare function _0x5B7B97E99F84138B(): any;
/**
 * No comment provided
 *
 * Hash: 0x5C2E5E3CAEEB1F58 | Since: 1207
 *
 * @deprecated Use player._0x5C2E5E3CAEEB1F58() instead
 */
export declare function _0x5C2E5E3CAEEB1F58(): void;
/**
 * _IS_PLAYER_S* - _IS_PLAYER_T*
 *
 * Hash: 0x621D1B289CAF5978 | Since: 1207
 *
 * @deprecated Use player._0x621D1B289CAF5978() instead
 */
export declare function _0x621D1B289CAF5978(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x628E742FE1F79C4A | Since: 1207
 *
 * @deprecated Use player._0x628E742FE1F79C4A() instead
 */
export declare function _0x628E742FE1F79C4A(): void;
/**
 * No comment provided
 *
 * Hash: 0x65887EAC535A0B0C | Since: 1207
 *
 * @deprecated Use player._0x65887EAC535A0B0C() instead
 */
export declare function _0x65887EAC535A0B0C(): void;
/**
 * No comment provided
 *
 * Hash: 0x67659A8F248E0141 | Since: 1207
 *
 * @deprecated Use player._0x67659A8F248E0141() instead
 */
export declare function _0x67659A8F248E0141(): void;
/**
 * No comment provided
 *
 * Hash: 0x6852288340B43239 | Since: 1207
 *
 * @deprecated Use player._0x6852288340B43239() instead
 */
export declare function _0x6852288340B43239(): any;
/**
 * No comment provided
 *
 * Hash: 0x694FFA4308060CD1 | Since: 1207
 *
 * @deprecated Use player._0x694FFA4308060CD1() instead
 */
export declare function _0x694FFA4308060CD1(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C54E69516CC56BD | Since: 1207
 *
 * @deprecated Use player._0x6C54E69516CC56BD() instead
 */
export declare function _0x6C54E69516CC56BD(): any;
/**
 * Add a yellow particle to the entity.
 * entity: entity to apply yellow particle
 * entity2: same entity as entit
 * p2: always
 * p3: always 0
 *
 * Hash: 0x6ECFC621A168424C | Since: 1207
 *
 * @deprecated Use player.eagleEyeAddParticleEffectToEntity() instead
 */
export declare function eagleEyeAddParticleEffectToEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6EDB5D08CB03E763 | Since: 1207
 *
 * @deprecated Use player._0x6EDB5D08CB03E763() instead
 */
export declare function _0x6EDB5D08CB03E763(): void;
/**
 * this native checks if the player has damaged or killed any ped human/animal recently within the duration passed, either by shooting or even using melee
 * duration is in miliseconds
 *
 * Hash: 0x72AD59F7B7FB6E24 | Since: 1207
 *
 * @deprecated Use player.hasPlayerDamagedAnyPedRecently() instead
 */
export declare function hasPlayerDamagedAnyPedRecently(player: number | string | Player, duration: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x73EB2EF2E92D23BF | Since: 1207
 *
 * @deprecated Use player._0x73EB2EF2E92D23BF() instead
 */
export declare function _0x73EB2EF2E92D23BF(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x747257807B8721CE | Since: 1207
 *
 * @deprecated Use player._0x747257807B8721CE() instead
 */
export declare function _0x747257807B8721CE(): any;
/**
 * No comment provided
 *
 * Hash: 0x76F7E1BCD623A429 | Since: 1207
 *
 * @deprecated Use player._0x76F7E1BCD623A429() instead
 */
export declare function _0x76F7E1BCD623A429(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x77B0B6D17A3AC9AA | Since: 1207
 *
 * @deprecated Use player._0x77B0B6D17A3AC9AA() instead
 */
export declare function _0x77B0B6D17A3AC9AA(): void;
/**
 * No comment provided
 *
 * Hash: 0x77E83C315A3B31CA | Since: 1207
 *
 * @deprecated Use player._0x77E83C315A3B31CA() instead
 */
export declare function _0x77E83C315A3B31CA(): void;
/**
 * Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
 * _GET_PLAYER_*
 *
 * Hash: 0x7AE93C45EC14A166 | Since: 1207
 *
 * @deprecated Use player._0x7AE93C45EC14A166() instead
 */
export declare function _0x7AE93C45EC14A166(player: number | string | Player, ped: number | Ped): boolean;
/**
 * _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
 *
 * Hash: 0x818241B3EDA84191 | Since: 1207
 *
 * @deprecated Use player._0x818241B3EDA84191() instead
 */
export declare function _0x818241B3EDA84191(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x83C989D5B5B5B466 | Since: 1207
 *
 * @deprecated Use player._0x83C989D5B5B5B466() instead
 */
export declare function _0x83C989D5B5B5B466(): void;
/**
 * No comment provided
 *
 * Hash: 0x84481018E668E1B8 | Since: 1207
 *
 * @deprecated Use player._0x84481018E668E1B8() instead
 */
export declare function _0x84481018E668E1B8(player: number | string | Player, ped: number | Ped): void;
/**
 * SET_PLAYER_S/T*
 *
 * Hash: 0x8591EE69CC3ED257 | Since: 1207
 *
 * @deprecated Use player._0x8591EE69CC3ED257() instead
 */
export declare function _0x8591EE69CC3ED257(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8702D9150D9FBB3D | Since: 1207
 *
 * @deprecated Use player._0x8702D9150D9FBB3D() instead
 */
export declare function _0x8702D9150D9FBB3D(): any;
/**
 * No comment provided
 *
 * Hash: 0x8F44EBB3BA8F6D44 | Since: 1207
 *
 * @deprecated Use player._0x8F44EBB3BA8F6D44() instead
 */
export declare function _0x8F44EBB3BA8F6D44(): void;
/**
 * No comment provided
 *
 * Hash: 0x9044835BE9D9DBFE | Since: 1207
 *
 * @deprecated Use player._0x9044835BE9D9DBFE() instead
 */
export declare function _0x9044835BE9D9DBFE(): void;
/**
 * No comment provided
 *
 * Hash: 0x9073EC5456651A90 | Since: 1207
 *
 * @deprecated Use player._0x9073EC5456651A90() instead
 */
export declare function _0x9073EC5456651A90(): void;
/**
 * No comment provided
 *
 * Hash: 0x908D4B72854C8F62 | Since: 1207
 *
 * @deprecated Use player._0x908D4B72854C8F62() instead
 */
export declare function _0x908D4B72854C8F62(): void;
/**
 * _GET_A* - _GET_C*
 *
 * Hash: 0x927861B2C08DBEA5 | Since: 1207
 *
 * @deprecated Use player._0x927861B2C08DBEA5() instead
 */
export declare function _0x927861B2C08DBEA5(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x929DDD5538F3DF1F | Since: 1232
 *
 * @deprecated Use player._0x929DDD5538F3DF1F() instead
 */
export declare function _0x929DDD5538F3DF1F(): void;
/**
 * No comment provided
 *
 * Hash: 0x93624B36E8851B42 | Since: 1207
 *
 * @deprecated Use player._0x93624B36E8851B42() instead
 */
export declare function _0x93624B36E8851B42(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x9422743A5BA50E10 | Since: 1207
 *
 * @deprecated Use player._0x9422743A5BA50E10() instead
 */
export declare function _0x9422743A5BA50E10(): any;
/**
 * No comment provided
 *
 * Hash: 0x9461A8FAB0378E5B | Since: 1207
 *
 * @deprecated Use player._0x9461A8FAB0378E5B() instead
 */
export declare function _0x9461A8FAB0378E5B(): void;
/**
 * Sets the sit prompt for a specific player using a predefined text entry. use game strings like PLAYER_SIT or use custom with
 * AddTextEntry("sit_custom", "Take a seat")
 * this native must be invoked
 * https://imgur.com/gallery/0x988c9045531b9fce-9bTHgkv
 *
 * Hash: 0x988C9045531B9FCE | Since: 1232
 *
 * @deprecated Use player.setPlayerSitPromptText() instead
 */
export declare function setPlayerSitPromptText(playerID: number | string | Player, label: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9AFCF9FE1884BF62 | Since: 1207
 *
 * @deprecated Use player._0x9AFCF9FE1884BF62() instead
 */
export declare function _0x9AFCF9FE1884BF62(): void;
/**
 * No comment provided
 *
 * Hash: 0x9FC5A003FB76EDBD | Since: 1207
 *
 * @deprecated Use player._0x9FC5A003FB76EDBD() instead
 */
export declare function _0x9FC5A003FB76EDBD(): void;
/**
 * Sets the player's ability to wear hats based on the specified flag. The flag value determines whether the player can wear all hats or only the ones they own.
 * If the flag is set to 15 and `allow` is true, the player can wear all available hats. However, if you want to restrict the player to wearing only their owned hats (flag 1), you **must first** disable flag 15 by setting it to false, and then set flag 1 to true.
 *
 * Hash: 0xA0C683284DF027C7 | Since: 1207
 *
 * @deprecated Use player.setPlayerHatAccess() instead
 */
export declare function setPlayerHatAccess(player: number | string | Player, flag: number, allow: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA28056CD1B04B250 | Since: 1232
 *
 * @deprecated Use player._0xA28056CD1B04B250() instead
 */
export declare function _0xA28056CD1B04B250(): void;
/**
 * No comment provided
 *
 * Hash: 0xA342495F93B7B838 | Since: 1207
 *
 * @deprecated Use player._0xA342495F93B7B838() instead
 */
export declare function _0xA342495F93B7B838(): void;
/**
 * No comment provided
 *
 * Hash: 0xA54000D4BFD90BDE | Since: 1207
 *
 * @deprecated Use player._0xA54000D4BFD90BDE() instead
 */
export declare function _0xA54000D4BFD90BDE(): any;
/**
 * Retrieves whether all trails are currently hidden during Eagle Eye mode for the specified player.
 *
 * Hash: 0xA62BBAAE67A05BB0 | Since: 1207
 *
 * @deprecated Use player.eagleEyeAreAllTrailsHidden() instead
 */
export declare function eagleEyeAreAllTrailsHidden(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAAED694CE814817F | Since: 1207
 *
 * @deprecated Use player._0xAAED694CE814817F() instead
 */
export declare function _0xAAED694CE814817F(): any;
/**
 * Enables or disables the Pick Up prompt for a hat on the ground for the specified player. When set to true, the player will see a prompt to pick up the hat if they are near it.
 *
 * Hash: 0xACA45DDCEF6071C4 | Since: 1207
 *
 * @deprecated Use player.setPlayerCanPickupHat() instead
 */
export declare function setPlayerCanPickupHat(player: number | string | Player, canPickup: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB15CD2F9932C9AB5 | Since: 1207
 *
 * @deprecated Use player._0xB15CD2F9932C9AB5() instead
 */
export declare function _0xB15CD2F9932C9AB5(): any;
/**
 * _IS_PLAYER_I* - _IS_PLAYER_P*
 *
 * Hash: 0xB331D8A73F9D2BDF | Since: 1207
 *
 * @deprecated Use player._0xB331D8A73F9D2BDF() instead
 */
export declare function _0xB331D8A73F9D2BDF(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBA5CA1FEB5DE0DF6 | Since: 1207
 *
 * @deprecated Use player._0xBA5CA1FEB5DE0DF6() instead
 */
export declare function _0xBA5CA1FEB5DE0DF6(): void;
/**
 * NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
 * NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
 * NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
 * NPEW__ENUM__EMOTE_CATEGORY_GREET
 * NPEW__ENUM__NUM_EMOTE_CATEGORIES
 * NPEW__ENUM__NUM_DISPLAY_TEXTURES
 *
 * Hash: 0xBB6EA5D59E926095 | Since: 1207
 *
 * @deprecated Use player._0xBB6EA5D59E926095() instead
 */
export declare function _0xBB6EA5D59E926095(category: number, emote: number | string): void;
/**
 * Activates the special ability for the specified player.
 *
 * Hash: 0xBBA140062B15A8AC | Since: 1207
 *
 * @deprecated Use player.specialAbilitySetActivate() instead
 */
export declare function specialAbilitySetActivate(player: number | string | Player): void;
/**
 * Enable/disable a color on the entity in eagle eye mode.
 *
 * Hash: 0xBC02B3D151D3859F | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetRegisteredEntityGlow() instead
 */
export declare function eagleEyeSetRegisteredEntityGlow(entity: number | Entity, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBD96185264DDAAEA | Since: 1207
 *
 * @deprecated Use player._0xBD96185264DDAAEA() instead
 */
export declare function _0xBD96185264DDAAEA(): void;
/**
 * _GET_PLAYER_I*
 *
 * Hash: 0xBEA3A6E5F5F79A6F | Since: 1207
 *
 * @deprecated Use player._0xBEA3A6E5F5F79A6F() instead
 */
export declare function _0xBEA3A6E5F5F79A6F(): any;
/**
 * No comment provided
 *
 * Hash: 0xBED386157F65942C | Since: 1207
 *
 * @deprecated Use player._0xBED386157F65942C() instead
 */
export declare function _0xBED386157F65942C(): void;
/**
 * No comment provided
 *
 * Hash: 0xBEFED69CE8317F91 | Since: 1207
 *
 * @deprecated Use player._0xBEFED69CE8317F91() instead
 */
export declare function _0xBEFED69CE8317F91(): any;
/**
 * No comment provided
 *
 * Hash: 0xC177C827CEFC0AA4 | Since: 1207
 *
 * @deprecated Use player._0xC177C827CEFC0AA4() instead
 */
export declare function _0xC177C827CEFC0AA4(): void;
/**
 * No comment provided
 *
 * Hash: 0xC4873B053054C04B | Since: 1207
 *
 * @deprecated Use player._0xC4873B053054C04B() instead
 */
export declare function _0xC4873B053054C04B(): void;
/**
 * No comment provided
 *
 * Hash: 0xC58CE6824E604DEC | Since: 1207
 *
 * @deprecated Use player._0xC58CE6824E604DEC() instead
 */
export declare function _0xC58CE6824E604DEC(): void;
/**
 * Disables the previously set interactive focus mode preset for a given player. see `_SET_PLAYER_INTERACTIVE_FOCUS_PRESET - 0x3C1B1807C7A415D6`
 *
 * Hash: 0xC67A4910425F11F1 | Since: 1207
 *
 * @deprecated Use player.disablePlayerInteractiveFocusPreset() instead
 */
export declare function disablePlayerInteractiveFocusPreset(player: number | string | Player, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC71D07C96946E263 | Since: 1207
 *
 * @deprecated Use player._0xC71D07C96946E263() instead
 */
export declare function _0xC71D07C96946E263(): void;
/**
 * Hardcoded to return zero/false.
 *
 * Hash: 0xC74EB3F2EC169F6B | Since: 1232
 *
 * @deprecated Use player._0xC74EB3F2EC169F6B() instead
 */
export declare function _0xC74EB3F2EC169F6B(): any;
/**
 * No comment provided
 *
 * Hash: 0xC900A465364A85D6 | Since: 1207
 *
 * @deprecated Use player._0xC900A465364A85D6() instead
 */
export declare function _0xC900A465364A85D6(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC93A9A45430D484E | Since: 1207
 *
 * @deprecated Use player._0xC93A9A45430D484E() instead
 */
export declare function _0xC93A9A45430D484E(): any;
/**
 * No comment provided
 *
 * Hash: 0xCA59808E51FD67C4 | Since: 1207
 *
 * @deprecated Use player._0xCA59808E51FD67C4() instead
 */
export declare function _0xCA59808E51FD67C4(): void;
/**
 * No comment provided
 *
 * Hash: 0xCB0B9506BC91E441 | Since: 1207
 *
 * @deprecated Use player._0xCB0B9506BC91E441() instead
 */
export declare function _0xCB0B9506BC91E441(): void;
/**
 * No comment provided
 *
 * Hash: 0xCB61A63AA53D7D22 | Since: 1207
 *
 * @deprecated Use player._0xCB61A63AA53D7D22() instead
 */
export declare function _0xCB61A63AA53D7D22(): void;
/**
 * Activates the Surrender prompt for the specified player in the current frame.
 *
 * Hash: 0xCBB54CC7FFFFAB86 | Since: 1207
 *
 * @deprecated Use player.setPlayerCooperatePromptThisFrame() instead
 */
export declare function setPlayerCooperatePromptThisFrame(player: number | string | Player, targetPed: number | Ped, promptOrder: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCD7CA3013FD12749 | Since: 1232
 *
 * @deprecated Use player._0xCD7CA3013FD12749() instead
 */
export declare function _0xCD7CA3013FD12749(): void;
/**
 * No comment provided
 *
 * Hash: 0xCDDD4B74660E2335 | Since: 1207
 *
 * @deprecated Use player._0xCDDD4B74660E2335() instead
 */
export declare function _0xCDDD4B74660E2335(): void;
/**
 * No comment provided
 *
 * Hash: 0xCEDC16930526F728 | Since: 1207
 *
 * @deprecated Use player._0xCEDC16930526F728() instead
 */
export declare function _0xCEDC16930526F728(): void;
/**
 * No comment provided
 *
 * Hash: 0xCFB2EED4FCB7BD77 | Since: 1207
 *
 * @deprecated Use player._0xCFB2EED4FCB7BD77() instead
 */
export declare function _0xCFB2EED4FCB7BD77(): void;
/**
 * Sets the weapon that the specified player will aim with. The weapon must already be assigned to the PED. This also determines the weapon order, specifying which weapon the player will automatically switch to when the current weapon runs out of ammo.
 *
 * Hash: 0xCFFC3ECCD7A5CCEB | Since: 1207
 *
 * @deprecated Use player.setPlayerAimWeapon() instead
 */
export declare function setPlayerAimWeapon(player: number | string | Player, weapon: number | string, attachSlotId: number): void;
/**
 * Shows or hides all Pick Up prompts for the specified player, including the prompt for picking up hats from the ground. When set to true, the player will see Pick Up prompts for all nearby items. If set to false, all Pick Up prompts will be hidden.
 *
 * Hash: 0xD1A70C1E8D1031FE | Since: 1207
 *
 * @deprecated Use player.setPlayerPickupPromptVisible() instead
 */
export declare function setPlayerPickupPromptVisible(player: number | string | Player, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1F6B912785BFD35 | Since: 1207
 *
 * @deprecated Use player._0xD1F6B912785BFD35() instead
 */
export declare function _0xD1F6B912785BFD35(): any;
/**
 * No comment provided
 *
 * Hash: 0xD288E02E364972D2 | Since: 1311
 *
 * @deprecated Use player._0xD288E02E364972D2() instead
 */
export declare function _0xD288E02E364972D2(): void;
/**
 * Adds an interactive focus mode preset between a player and a specific set of coordinates with a target entity.
 * To access all available presets, refer to the file located at:update_1.rpf.common.data.interactive_focus_mode_presets.meta
 *
 *
 * Hash: 0xD48227263E3D06AE | Since: 1232
 *
 * @deprecated Use player.addAmbientPlayerInteractiveFocusPresetAtCoords() instead
 */
export declare function addAmbientPlayerInteractiveFocusPresetAtCoords(player: number | string | Player, preset: string, pos: Vector3, targetEntity: number | Entity, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xDA9D7BE231FE865F | Since: 1207
 *
 * @deprecated Use player._0xDA9D7BE231FE865F() instead
 */
export declare function _0xDA9D7BE231FE865F(): any;
/**
 * No comment provided
 *
 * Hash: 0xDAB6A2FC56B7DE65 | Since: 1207
 *
 * @deprecated Use player._0xDAB6A2FC56B7DE65() instead
 */
export declare function _0xDAB6A2FC56B7DE65(): any;
/**
 * Remove yellow particle from the entity when it was set using `0x6ECFC621A168424C`
 * entity: entity to remove yellow particles
 * entity2: same entity as entity
 * p2: always 0
 *
 * Hash: 0xDC5E09D012D759C4 | Since: 1207
 *
 * @deprecated Use player.eagleEyeRemoveParticleEffectFromEntity() instead
 */
export declare function eagleEyeRemoveParticleEffectFromEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xDD33A82352C4652F | Since: 1207
 *
 * @deprecated Use player._0xDD33A82352C4652F() instead
 */
export declare function _0xDD33A82352C4652F(player: number | string | Player, ped: number | Ped): void;
/**
 * Checks if the player's Deadeye ability is enabled.
 *
 * Hash: 0xDE6C85975F9D4894 | Since: 1207
 *
 * @deprecated Use player.isSpecialAbilityEnabled() instead
 */
export declare function isSpecialAbilityEnabled(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE1D356F5A66D0FFA | Since: 1232
 *
 * @deprecated Use player._0xE1D356F5A66D0FFA() instead
 */
export declare function _0xE1D356F5A66D0FFA(emote: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE50A67C33514A390 | Since: 1207
 *
 * @deprecated Use player._0xE50A67C33514A390() instead
 */
export declare function _0xE50A67C33514A390(): any;
/**
 * Clears all Eagle Eye trails that were registered for entities associated with the specified player.
 *
 * Hash: 0xE5D3EB37ABC1EB03 | Since: 1207
 *
 * @deprecated Use player.eagleEyeClearRegisteredTrails() instead
 */
export declare function eagleEyeClearRegisteredTrails(player: number | string | Player): void;
/**
 * returns true if the player is on a road while riding a horse but at a certain speed, if you go off road then it returns false or if you go too slow like walking state it also returns false
 *
 * Hash: 0xE631EAF35828FA67 | Since: 1207
 *
 * @deprecated Use player.isPlayerMountOnRoad() instead
 */
export declare function isPlayerMountOnRoad(player: number | string | Player): boolean;
/**
 * _IS_PLAYER_A* - _IS_PLAYER_BE*
 *
 * Hash: 0xE7F8707269544B29 | Since: 1207
 *
 * @deprecated Use player._0xE7F8707269544B29() instead
 */
export declare function _0xE7F8707269544B29(player: number | string | Player, ped: number | Ped): boolean;
/**
 * Resets any aura effects applied to entities for a specific player in Deadeye mode, returning all aura-related visuals to their default state. This function is primarily used to remove any highlighting or aura effects set by `_SET_DEADEYE_ENTITY_AURA_WITH_FLAG - 0x2B12B6FC8B8772AB` and `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`
 *
 * Hash: 0xE910932F4B30BE23 | Since: 1207
 *
 * @deprecated Use player.resetDeadeyeAuraEffect() instead
 */
export declare function resetDeadeyeAuraEffect(player: number | string | Player): void;
/**
 * Returns the depletion delay value for the Deadeye ability that was previously set using `SetDeadeyeAbilityDepletionDelay - 0x870634493CB4372C`
 *
 * Hash: 0xE92261BD28C0878F | Since: 1207
 *
 * @deprecated Use player.getDeadeyeAbilityDepletionDelay() instead
 */
export declare function getDeadeyeAbilityDepletionDelay(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xE956C2340A76272E | Since: 1207
 *
 * @deprecated Use player._0xE956C2340A76272E() instead
 */
export declare function _0xE956C2340A76272E(): any;
/**
 * No comment provided
 *
 * Hash: 0xEACEBAAE0A33FB3F | Since: 1207
 *
 * @deprecated Use player._0xEACEBAAE0A33FB3F() instead
 */
export declare function _0xEACEBAAE0A33FB3F(): void;
/**
 * No comment provided
 *
 * Hash: 0xEBB6E27AC2FF32DA | Since: 1207
 *
 * @deprecated Use player._0xEBB6E27AC2FF32DA() instead
 */
export declare function _0xEBB6E27AC2FF32DA(): void;
/**
 * No comment provided
 *
 * Hash: 0xEBFF94328FF7A18A | Since: 1207
 *
 * @deprecated Use player._0xEBFF94328FF7A18A() instead
 */
export declare function _0xEBFF94328FF7A18A(): void;
/**
 * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
 *
 * Hash: 0xF21C7A3F3FFBA629 | Since: 1207
 *
 * @deprecated Use player._0xF21C7A3F3FFBA629() instead
 */
export declare function _0xF21C7A3F3FFBA629(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xF4CB347D7B5EB0FD | Since: 1207
 *
 * @deprecated Use player._0xF4CB347D7B5EB0FD() instead
 */
export declare function _0xF4CB347D7B5EB0FD(): any;
/**
 * No comment provided
 *
 * Hash: 0xF993373285053D77 | Since: 1207
 *
 * @deprecated Use player._0xF993373285053D77() instead
 */
export declare function _0xF993373285053D77(): void;
/**
 * Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
 * _SPECIAL_ABILITY*
 *
 * Hash: 0xFA437FA0738C370C | Since: 1207
 *
 * @deprecated Use player._0xFA437FA0738C370C() instead
 */
export declare function _0xFA437FA0738C370C(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xFA7DAAE3959E6C7B | Since: 1207
 *
 * @deprecated Use player._0xFA7DAAE3959E6C7B() instead
 */
export declare function _0xFA7DAAE3959E6C7B(): void;
/**
 * Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
 * followMode:
 * HORSEFOLLOWMODE_AUTO = 0,
 * HORSEFOLLOWMODE_SIDE_ONLY,
 * HORSEFOLLOWMODE_BEHIND_ONLY,
 * HORSEFOLLOWMODE_BEHIND_AND_SIDE,
 * HORSEFOLLOWMODE_BEHIND_CLOSE
 * followPriority:
 * HORSEFOLLOWPRIORITY_STEER_ASSIST = 0,
 * HORSEFOLLOWPRIORITY_AMBIENT,
 * HORSEFOLLOWPRIORITY_NORMAL,
 * HORSEFOLLOWPRIORITY_HIGH
 *
 * Hash: 0xAC22AA6DF4D1C1DE | Since: 1207
 *
 * @deprecated Use player.addPlayerAsFollowTarget() instead
 */
export declare function addPlayerAsFollowTarget(player: number | string | Player, ped: number | Ped, followMode: number, followPriority: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8F2A81C09DA9124A | Since: 1207
 *
 * @deprecated Use player.clearBountyTarget() instead
 */
export declare function clearBountyTarget(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x40AB73092C95B5F5 | Since: 1207
 *
 * @deprecated Use player.eagleEyeDisableTrackingTrail() instead
 */
export declare function eagleEyeDisableTrackingTrail(entity: number | Entity, trail: string): void;
/**
 * false: default eagleeye color
 * true: green eagleeye color
 *
 * Hash: 0x2C41D93F550D5E37 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetColor() instead
 */
export declare function eagleEyeSetColor(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x907B16B3834C69E2 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetCustomDistance() instead
 */
export declare function eagleEyeSetCustomDistance(entity: number | Entity, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE0D6C2A146A5C993 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetDrainRateModifier() instead
 */
export declare function eagleEyeSetDrainRateModifier(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2AF423D6ECB2C485 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetFocusOnAssociatedClueTrail() instead
 */
export declare function eagleEyeSetFocusOnAssociatedClueTrail(player: number | string | Player, linkedWaypointPed: number | Entity): void;
/**
 * Sets the behavior of sprinting while the Eagleeye feature is active, determining whether sprinting cancels the effect based on the specified parameter.
 * old name was _EAGLE_EYE_SET_PLUS_FLAG_DISABLED this native can still be used as its declared.
 *
 * Hash: 0xCE285A4413B00B7F | Since: 1207
 *
 * @deprecated Use player.eagleeyeSetSprintBehavior() instead
 */
export declare function eagleeyeSetSprintBehavior(player: number | string | Player, disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDFC85C5199045026 | Since: 1207
 *
 * @deprecated Use player.eagleEyeSetTrackingUpgrade() instead
 */
export declare function eagleEyeSetTrackingUpgrade(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x6FA957D1B55941C1 | Since: 1311
 *
 * @deprecated Use player.eagleEyeSetTrackingUpgrade2() instead
 */
export declare function eagleEyeSetTrackingUpgrade2(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x95EE1DEE1DCD9070 | Since: 1207
 *
 * @deprecated Use player.enableCustomDeadeyeAbility() instead
 */
export declare function enableCustomDeadeyeAbility(player: number | string | Player, enable: boolean): void;
/**
 * (Un)lock Eagle Eye functionality
 *
 * Hash: 0xA63FCAD3A6FEC6D2 | Since: 1207
 *
 * @deprecated Use player.enableEagleeye() instead
 */
export declare function enableEagleeye(player: number | string | Player, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE5A3DD2FF84E1A4B | Since: 1232
 *
 * @deprecated Use player.forceRestScenario() instead
 */
export declare function forceRestScenario(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5B6193813E03E4E9 | Since: 1207
 *
 * @deprecated Use player.formatPlayerNameString() instead
 */
export declare function formatPlayerNameString(string: string): string;
/**
 * No comment provided
 *
 * Hash: 0x46FA0AE18F4C7FA9 | Since: 1207
 *
 * @deprecated Use player.getActiveHorseForPlayer() instead
 */
export declare function getActiveHorseForPlayer(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x2E78D822208E740A | Since: 1207
 *
 * @deprecated Use player.getAiPlayerDefenseModifierAgainstAi() instead
 */
export declare function getAiPlayerDefenseModifierAgainstAi(player: number | string | Player): number;
/**
 * p0: mostly Ped Hashes
 *
 * Hash: 0x8E84119A23C16623 | Since: 1207
 *
 * @deprecated Use player.getConstructedDiscoveredCharacterName() instead
 */
export declare function getConstructedDiscoveredCharacterName(model: boolean, outfit: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xCCE7C695C164C35F | Since: 1207
 *
 * @deprecated Use player.getDeadeyeAbilityLevel() instead
 */
export declare function getDeadeyeAbilityLevel(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x0772F87D7B07719A | Since: 1207
 *
 * @deprecated Use player.getHasPlayerDiscoveredCharacterNameSp() instead
 */
export declare function getHasPlayerDiscoveredCharacterNameSp(player: number | string | Player, discoveryHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x32348719DCED2969 | Since: 1207
 *
 * @deprecated Use player.getIsDeadeyeTaggingEnabled() instead
 */
export declare function getIsDeadeyeTaggingEnabled(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCCD9B77F70D31C9D | Since: 1207
 *
 * @deprecated Use player.getNumMarkedDeadeyeTargets() instead
 */
export declare function getNumMarkedDeadeyeTargets(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xDF66A37936D5F3D9 | Since: 1207
 *
 * @deprecated Use player.getPlayerCachedDeadEyeAmount() instead
 */
export declare function getPlayerCachedDeadEyeAmount(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xA81D24AE0AF99A5E | Since: 1207
 *
 * @deprecated Use player.getPlayerDeadEye() instead
 */
export declare function getPlayerDeadEye(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x3A6AE4EEE30370FE | Since: 1207
 *
 * @deprecated Use player.getPlayerDeadEyeMeterLevel() instead
 */
export declare function getPlayerDeadEyeMeterLevel(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x0317C947D062854E | Since: 1207
 *
 * @deprecated Use player.getPlayerHealth() instead
 */
export declare function getPlayerHealth(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x22CD23BB0C45E0CD | Since: 1207
 *
 * @deprecated Use player.getPlayerHealthRechargeMultiplier() instead
 */
export declare function getPlayerHealthRechargeMultiplier(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x5CA6BBD4A7D8145E | Since: 1207
 *
 * @deprecated Use player.getPlayerHuntingWagon() instead
 */
export declare function getPlayerHuntingWagon(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x592F58BC4D2A2CF3 | Since: 1207
 *
 * @deprecated Use player.getPlayerMaxDeadEye() instead
 */
export declare function getPlayerMaxDeadEye(player: number | string | Player): number;
/**
 * See _SET_PLAYER_MOOD
 *
 * Hash: 0x054473164C012699 | Since: 1207
 *
 * @deprecated Use player.getPlayerMood() instead
 */
export declare function getPlayerMood(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xAD03B03737CE6810 | Since: 1207
 *
 * @deprecated Use player.getPlayerOwnerOfMount() instead
 */
export declare function getPlayerOwnerOfMount(mount: number | Ped): number | string;
/**
 * No comment provided
 *
 * Hash: 0x7C803BDC8343228D | Since: 1207
 *
 * @deprecated Use player.getPlayerOwnerOfVehicle() instead
 */
export declare function getPlayerOwnerOfVehicle(vehicle: number | Vehicle): number | string;
/**
 * No comment provided
 *
 * Hash: 0x5EBE38A20BC51C27 | Since: 1207
 *
 * @deprecated Use player.getPlayerPed2() instead
 */
export declare function getPlayerPed2(player: number | string | Player): number;
/**
 * If player has less Dead Eye than required, Dead Eye cant be triggered.
 *
 * Hash: 0x811A748B1BE231BA | Since: 1207
 *
 * @deprecated Use player.getPlayerRequiredDeadEyeAmount() instead
 */
export declare function getPlayerRequiredDeadEyeAmount(player: number | string | Player): number;
/**
 * playerResetFlag: See 0x9F9A829C6751F3C7
 *
 * Hash: 0xFE691E89C08937B6 | Since: 1207
 *
 * @deprecated Use player.getPlayerResetFlag() instead
 */
export declare function getPlayerResetFlag(player: number | string | Player, playerResetFlag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAB3773E7AA1E9DCC | Since: 1207
 *
 * @deprecated Use player.getPlayerSpecialAbilityMultiplier() instead
 */
export declare function getPlayerSpecialAbilityMultiplier(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x0FF421E467373FCF | Since: 1207
 *
 * @deprecated Use player.getPlayerStamina() instead
 */
export declare function getPlayerStamina(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x68A0389E0718AC8F | Since: 1207
 *
 * @deprecated Use player.getPlayerStaminaDepletionMultiplier() instead
 */
export declare function getPlayerStaminaDepletionMultiplier(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x617D3494AD58200F | Since: 1207
 *
 * @deprecated Use player.getPlayerStaminaRechargeMultiplier() instead
 */
export declare function getPlayerStaminaRechargeMultiplier(player: number | string | Player): number;
/**
 * Returns true if PromptType is enabled for ped (mount)
 * Params: See 0x0751D461F06E41CE
 *
 * Hash: 0xEA8F168A76A0B9BC | Since: 1207
 *
 * @deprecated Use player.getPlayerUiPromptForPedIsEnabled() instead
 */
export declare function getPlayerUiPromptForPedIsEnabled(player: number | string | Player, ped: number | Ped, promptType: number, promptMode: number): boolean;
/**
 * Returns false if PromptType is enabled
 * Params: See 0x0751D461F06E41CE
 *
 * Hash: 0x6614F9039BD31931 | Since: 1207
 *
 * @deprecated Use player.getPlayerUiPromptIsDisabled() instead
 */
export declare function getPlayerUiPromptIsDisabled(player: number | string | Player, promptType: number, promptMode: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFE0304050261442C | Since: 1207
 *
 * @deprecated Use player.getPlayerWeaponDamage() instead
 */
export declare function getPlayerWeaponDamage(player: number | string | Player, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xB48050D326E9A2F3 | Since: 1207
 *
 * @deprecated Use player.getSaddleHorseForPlayer() instead
 */
export declare function getSaddleHorseForPlayer(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xD3F7445CEA2E5035 | Since: 1207
 *
 * @deprecated Use player.getTempPlayerHorse() instead
 */
export declare function getTempPlayerHorse(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xB9050A97594C8832 | Since: 1207
 *
 * @deprecated Use player.getVehicleOwnedByPlayer() instead
 */
export declare function getVehicleOwnedByPlayer(player: number | string | Player): number;
/**
 * Returns -1.0f if no multiplier has been set
 *
 * Hash: 0xA82964B9D8D6A983 | Since: 1207
 *
 * @deprecated Use player.getWantedLevelMultiplier() instead
 */
export declare function getWantedLevelMultiplier(): number;
/**
 * No comment provided
 *
 * Hash: 0x8A0643B0B4CA276B | Since: 1207
 *
 * @deprecated Use player.isDeadeyeAbilityLocked() instead
 */
export declare function isDeadeyeAbilityLocked(player: number | string | Player, abilityType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E6846476906C9DD | Since: 1207
 *
 * @deprecated Use player.isEagleEyeRegisteredForEntity() instead
 */
export declare function isEagleEyeRegisteredForEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE24C64D9ADED2EF5 | Since: 1207
 *
 * @deprecated Use player.isPlayerFollowingTarget() instead
 */
export declare function isPlayerFollowingTarget(player: number | string | Player, ped: number | Ped): boolean;
/**
 * Checks if player is focused on any entity
 *
 * Hash: 0x1A51BFE60708E482 | Since: 1207
 *
 * @deprecated Use player.isPlayerFreeFocusing() instead
 */
export declare function isPlayerFreeFocusing(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x04D7F33640662FA2 | Since: 1207
 *
 * @deprecated Use player.isPlayerInScope() instead
 */
export declare function isPlayerInScope(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x45AB66D02B601FA7 | Since: 1207
 *
 * @deprecated Use player.isSecondarySpecialAbilityActive() instead
 */
export declare function isSecondarySpecialAbilityActive(player: number | string | Player): boolean;
/**
 * Returns true if eagle eye is enabled for the player
 *
 * Hash: 0xE022CC1B545F1D9F | Since: 1207
 *
 * @deprecated Use player.isSecondarySpecialAbilityEnabled() instead
 */
export declare function isSecondarySpecialAbilityEnabled(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB16223CB7DA965F0 | Since: 1207
 *
 * @deprecated Use player.isSpecialAbilityActive() instead
 */
export declare function isSpecialAbilityActive(player: number | string | Player): boolean;
/**
 * Toggle handles wether Deadeye and Eagleeye are infinite or not.
 *
 * Hash: 0x28A13BF6B05C3D83 | Since: 1207
 *
 * @deprecated Use player.modifyInfiniteTrailVision() instead
 */
export declare function modifyInfiniteTrailVision(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFB0E622B401884D3 | Since: 1207
 *
 * @deprecated Use player.modifyPlayerDiscoveredCharacterNameMpSetUndiscovered() instead
 */
export declare function modifyPlayerDiscoveredCharacterNameMpSetUndiscovered(discoveryHash: number | string): void;
/**
 * Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
 * promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
 *
 * Hash: 0x0751D461F06E41CE | Since: 1207
 *
 * @deprecated Use player.modifyPlayerUiPrompt() instead
 */
export declare function modifyPlayerUiPrompt(player: number | string | Player, promptType: number, promptMode: number, disabled: boolean): void;
/**
 * Params: See 0x0751D461F06E41CE
 *
 * Hash: 0xA3DB37EDF9A74635 | Since: 1207
 *
 * @deprecated Use player.modifyPlayerUiPromptForPed() instead
 */
export declare function modifyPlayerUiPromptForPed(player: number | string | Player, ped: number | Ped, promptType: number, promptMode: number, enabled: boolean): void;
/**
 * Returns true if the given player has a valid ped.
 *
 * Hash: 0x0760D6F70EBCC05C | Since: 1207
 *
 * @deprecated Use player.networkHasPlayerValidPed() instead
 */
export declare function networkHasPlayerValidPed(player: number | string | Player): boolean;
/**
 * Used for setting up eagle eye for entity
 * Params: p2 = re-register or not?
 *
 * Hash: 0x543DFE14BE720027 | Since: 1207
 *
 * @deprecated Use player.registerEagleEyeForEntity() instead
 */
export declare function registerEagleEyeForEntity(player: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xAC67098A1E54ABB0 | Since: 1207
 *
 * @deprecated Use player.registerEagleEyeTrailsForEntity() instead
 */
export declare function registerEagleEyeTrailsForEntity(player: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x0C6B89876262A99D | Since: 1207
 *
 * @deprecated Use player.removePlayerAsFollowTarget() instead
 */
export declare function removePlayerAsFollowTarget(player: number | string | Player, ped: number | Ped): void;
/**
 * Activates EagleEye, called together with 0x28A13BF6B05C3D83
 *
 * Hash: 0x1710BC33CFB83634 | Since: 1207
 *
 * @deprecated Use player.secondarySpecialAbilitySetActive() instead
 */
export declare function secondarySpecialAbilitySetActive(player: number | string | Player): void;
/**
 * Deactivates EagleEye, called together with 0xC0B21F235C02139C
 *
 * Hash: 0x64FF4BF9AF59E139 | Since: 1207
 *
 * @deprecated Use player.secondarySpecialAbilitySetDisabled() instead
 */
export declare function secondarySpecialAbilitySetDisabled(player: number | string | Player, disabled: boolean): void;
/**
 * Sets Player's Defense against AI modifier
 *
 * Hash: 0x914071FF93AF2692 | Since: 1207
 *
 * @deprecated Use player.setAiPlayerDefenseModifierAgainstAi() instead
 */
export declare function setAiPlayerDefenseModifierAgainstAi(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6ADF821FBF21920E | Since: 1207
 *
 * @deprecated Use player.setBountyTarget() instead
 */
export declare function setBountyTarget(player: number | string | Player, target: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xBE0C524970892D41 | Since: 1207
 *
 * @deprecated Use player.setBowDrawReductionTimeInDeadeye() instead
 */
export declare function setBowDrawReductionTimeInDeadeye(player: number | string | Player, drawReductionTime: number): void;
/**
 * Decreases Stamina bar drain speed by % when drawing a bow.
 *
 * Hash: 0xFE7C9CF376D23342 | Since: 1207
 *
 * @deprecated Use player.setBowStaminaDrainSpeed() instead
 */
export declare function setBowStaminaDrainSpeed(player: number | string | Player, staminaDrain: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7761A30432C91297 | Since: 1207
 *
 * @deprecated Use player.setDamageCloseDistanceBonus() instead
 */
export declare function setDamageCloseDistanceBonus(player: number | string | Player, closeRangeLowerBound: number, closeRangeUpperBound: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5006C36652D6EC56 | Since: 1207
 *
 * @deprecated Use player.setDamageCloseDistanceBonusTotal() instead
 */
export declare function setDamageCloseDistanceBonusTotal(player: number | string | Player, closeDamageBonus: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED591CB17C8BA216 | Since: 1207
 *
 * @deprecated Use player.setDamageFarDistanceBonus() instead
 */
export declare function setDamageFarDistanceBonus(player: number | string | Player, farRangeLowerBound: number, farRangeUpperBound: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1F0E3A4434565F8F | Since: 1207
 *
 * @deprecated Use player.setDamageFarDistanceBonusTotal() instead
 */
export declare function setDamageFarDistanceBonusTotal(player: number | string | Player, farDamageBonus: number): void;
/**
 * Only used in R* SP Script short_update
 *
 * Hash: 0x870634493CB4372C | Since: 1207
 *
 * @deprecated Use player.setDeadeyeAbilityDepletionDelay() instead
 */
export declare function setDeadeyeAbilityDepletionDelay(player: number | string | Player, delay: number): void;
/**
 * Max level is 5.
 *
 * Hash: 0xF0FE8E790BFEB5BB | Since: 1207
 *
 * @deprecated Use player.setDeadeyeAbilityLevel() instead
 */
export declare function setDeadeyeAbilityLevel(player: number | string | Player, level: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2797B8D66DD0EBB8 | Since: 1207
 *
 * @deprecated Use player.setDeadeyeAbilityLocked() instead
 */
export declare function setDeadeyeAbilityLocked(player: number | string | Player, abilityType: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x83FCD6921FC8FD05 | Since: 1207
 *
 * @deprecated Use player.setDeadeyeTaggingConfig() instead
 */
export declare function setDeadeyeTaggingConfig(player: number | string | Player, filter: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6B5DDFB967E5073D | Since: 1207
 *
 * @deprecated Use player.setDeadeyeTaggingEnabled() instead
 */
export declare function setDeadeyeTaggingEnabled(player: number | string | Player, toggle: boolean): void;
/**
 * Disables the players ability to be wanted by lawmen
 *
 * Hash: 0x8674D138391FFB1B | Since: 1207
 *
 * @deprecated Use player.setDisablePlayerWantedLevel() instead
 */
export declare function setDisablePlayerWantedLevel(player: number | string | Player, disable: boolean): void;
/**
 * see personaabilities.meta
 * enum ePersonaAbilityFlag
 * {
 * PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
 * PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
 * PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
 * PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
 * PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
 * PERSONA_DEADEYE_INSTANT_RELOAD,
 * PERSONA_USE_PHOSPHOROUS_ROUNDS,
 * PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
 * PERSONA_CONT_DEADEYE_ON_RELOAD,
 * PERSONA_CONT_DEADEYE_ON_SHOOTING,
 * PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
 * PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
 * PERSONA_CONT_DEADEYE_ON_RAGDOLL,
 * PERSONA_USE_EXPLOSIVE_ROUNDS,
 * PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
 * PERSONA_CARRY_TWO_MONEYBAGS,
 * PERSONA_ABILITY_LONG_PICK_HERBS,
 * PERSONA_ABILITY_UNBREAKABLE_LASSO,
 * PERSONA_CONT_DEADEYE_ON_SPRINTING,
 * PERSONA_CANT_DEAL_HEADSHOTS,
 * PERSONA_HANGMAN,
 * PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
 * PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
 * PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
 * PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
 * PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
 * PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
 * PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
 * PERSONA_CONT_EAGLEEYE_ON_SPRINT,
 * PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
 * };
 *
 * Hash: 0x7146CF430965927C | Since: 1207
 *
 * @deprecated Use player.setLocalPlayerPersonaAbilityFlag() instead
 */
export declare function setLocalPlayerPersonaAbilityFlag(flagId: number, toggle: boolean): void;
/**
 * Focus Fire VFX start for player: p1 = focusfire
 *
 * Hash: 0x5F8E0303C229C84B | Since: 1207
 *
 * @deprecated Use player.setLockonFocusFireVfx() instead
 */
export declare function setLockonFocusFireVfx(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xEA6DE0CD15AECBE2 | Since: 1207
 *
 * @deprecated Use player.setMaxWantedLevel2() instead
 */
export declare function setMaxWantedLevel2(maxWantedLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5B9813ECF7633FE8 | Since: 1207
 *
 * @deprecated Use player.setMountPromptDisabled() instead
 */
export declare function setMountPromptDisabled(disabled: boolean): void;
/**
 * Seems to work similar to 0xD2CB0FB0FDCB473D
 *
 * Hash: 0x8FBF9EDB378CCB8C | Since: 1207
 *
 * @deprecated Use player.setPedActivePlayerHorse() instead
 */
export declare function setPedActivePlayerHorse(player: number | string | Player, horse: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD2CB0FB0FDCB473D | Since: 1207
 *
 * @deprecated Use player.setPedAsSaddleHorseForPlayer() instead
 */
export declare function setPedAsSaddleHorseForPlayer(player: number | string | Player, mount: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x39363DFD04E91496 | Since: 1311
 *
 * @deprecated Use player.setPlayerCanMercyKill() instead
 */
export declare function setPlayerCanMercyKill(player: number | string | Player, toggle: boolean): void;
/**
 * damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
 *
 * Hash: 0x78B3D19AF6391A55 | Since: 1207
 *
 * @deprecated Use player.setPlayerDamageInfoOverride() instead
 */
export declare function setPlayerDamageInfoOverride(player: number | string | Player, damageInfo: string): void;
/**
 * Sets stamina core drains peed using ranged damage scale and melee damage scale
 *
 * Hash: 0x497A6539BB0E8787 | Since: 1207
 *
 * @deprecated Use player.setPlayerDefenseModifier() instead
 */
export declare function setPlayerDefenseModifier(player: number | string | Player, weaponDefenseMod: number, meleeDefenseMod: number): void;
/**
 * bullet damage modifier: type = 4
 * explosive damage Defense mod: type = 7
 * fire damage Defense mod: type = 8, 15
 *
 * Hash: 0x93F499CAE53FCD05 | Since: 1207
 *
 * @deprecated Use player.setPlayerDefenseTypeModifier() instead
 */
export declare function setPlayerDefenseTypeModifier(player: number | string | Player, type: number, defenseModifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2D3ACE3DE0A2B622 | Since: 1207
 *
 * @deprecated Use player.setPlayerExplosiveWeaponDamageModifier() instead
 */
export declare function setPlayerExplosiveWeaponDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7C32191D9FB2BDEA | Since: 1207
 *
 * @deprecated Use player.setPlayerHasDiscoveredCharacterNameMp() instead
 */
export declare function setPlayerHasDiscoveredCharacterNameMp(discoveryHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x946D46CD6DFB9742 | Since: 1207
 *
 * @deprecated Use player.setPlayerHasDiscoveredCharacterNameSp() instead
 */
export declare function setPlayerHasDiscoveredCharacterNameSp(player: number | string | Player, discoveryHash: number | string): void;
/**
 * Setting player's Health recharge time to zero forces immediate health regen
 *
 * Hash: 0x535ED4605F89AB6E | Since: 1207
 *
 * @deprecated Use player.setPlayerHealthRechargeTimeModifier() instead
 */
export declare function setPlayerHealthRechargeTimeModifier(player: number | string | Player, modifier: number): void;
/**
 * Only applies to HUNTERCART01
 *
 * Hash: 0x6A4404BDFA62CE2C | Since: 1207
 *
 * @deprecated Use player.setPlayerHuntingWagon() instead
 */
export declare function setPlayerHuntingWagon(player: number | string | Player, wagon: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x98CD760DE43B612E | Since: 1207
 *
 * @deprecated Use player.setPlayerInteractionNegativeResponse() instead
 */
export declare function setPlayerInteractionNegativeResponse(player: number | string | Player, speech: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC6366A585659D15C | Since: 1207
 *
 * @deprecated Use player.setPlayerInteractionPositiveResponse() instead
 */
export declare function setPlayerInteractionPositiveResponse(player: number | string | Player, speech: string): void;
/**
 * Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
 * see SET_PLAYER_TARGETING_MODE for eTargetingMode
 *
 * Hash: 0x19B4F71703902238 | Since: 1207
 *
 * @deprecated Use player.setPlayerInVehicleTargetingMode() instead
 */
export declare function setPlayerInVehicleTargetingMode(targetMode: number): void;
/**
 * _SET_PLAYER_A* - _SET_PLAYER_C*
 *
 * Hash: 0x43F50A7CD2482156 | Since: 1207
 *
 * @deprecated Use player.setPlayerLassoDamagePerSecond() instead
 */
export declare function setPlayerLassoDamagePerSecond(player: number | string | Player, damage: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4EA69188FBCE6A7D | Since: 1207
 *
 * @deprecated Use player.setPlayerLocalAccuracyFloorModifier() instead
 */
export declare function setPlayerLocalAccuracyFloorModifier(player: number | string | Player, accuracy: number): void;
/**
 * No comment provided
 *
 * Hash: 0x292F0B6EDC82E3A4 | Since: 1207
 *
 * @deprecated Use player.setPlayerManageBuffSuperJump() instead
 */
export declare function setPlayerManageBuffSuperJump(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xE133C1EC5300F740 | Since: 1207
 *
 * @deprecated Use player.setPlayerMaxAmmoOverrideForAmmoType() instead
 */
export declare function setPlayerMaxAmmoOverrideForAmmoType(player: number | string | Player, ammoType: number | string, amount: number): void;
/**
 * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedMood
 *
 * Hash: 0x39BED552DB46FFA9 | Since: 1207
 *
 * @deprecated Use player.setPlayerMood() instead
 */
export declare function setPlayerMood(player: number | string | Player, mood: number): void;
/**
 * Name could potentially be inaccurate.
 * Used in Script Function HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = true)
 * _SET_PLAYER_L* - _SET_PLAYER_M*
 *
 * Hash: 0xDF93973251FB2CA5 | Since: 1207
 *
 * @deprecated Use player.setPlayerMountStateActive() instead
 */
export declare function setPlayerMountStateActive(player: number | string | Player, active: boolean): void;
/**
 * Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
 *
 * Hash: 0xE6D4E435B56D5BD0 | Since: 1207
 *
 * @deprecated Use player.setPlayerOwnsMount() instead
 */
export declare function setPlayerOwnsMount(player: number | string | Player, mount: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD0E02AA618020D17 | Since: 1207
 *
 * @deprecated Use player.setPlayerOwnsVehicle() instead
 */
export declare function setPlayerOwnsVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xDEE80FEDFDD43C9B | Since: 1207
 *
 * @deprecated Use player.setPlayerRemoteAccuracyFloorModifier() instead
 */
export declare function setPlayerRemoteAccuracyFloorModifier(player: number | string | Player, accuracy: number): void;
/**
 * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePlayerResetFlags
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
 *
 * Hash: 0x9F9A829C6751F3C7 | Since: 1207
 *
 * @deprecated Use player.setPlayerResetFlag() instead
 */
export declare function setPlayerResetFlag(player: number | string | Player, playerResetFlag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBBADFB5E5E5766FB | Since: 1207
 *
 * @deprecated Use player.setPlayerStaminaSprintDepletionMultiplier() instead
 */
export declare function setPlayerStaminaSprintDepletionMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * Sets the aura color for entities that the player can target in Deadeye mode, based on a specific hash value. This Native was previously named `SetPlayerStatFlagHash`, but it has been re-evaluated and renamed to better reflect its function in controlling the Deadeye aura color for targeted entities
 * some colors
 * 0: Default aura
 * 1014693585
 * 1936842089
 * 1979474018
 *
 * Hash: 0x768E81AE285A4B67 | Since: 1207
 *
 * @deprecated Use player.setPlayerDeadEyeAuraByHash() instead
 */
export declare function setPlayerDeadEyeAuraByHash(player: number | string | Player, auraColorHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x967FF5BC0CFE6D26 | Since: 1207
 *
 * @deprecated Use player.setPlayerTotalAccuracyModifier() instead
 */
export declare function setPlayerTotalAccuracyModifier(player: number | string | Player, accuracy: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAF341032E97FB061 | Since: 1207
 *
 * @deprecated Use player.setPlayerTrampleDamageModifier() instead
 */
export declare function setPlayerTrampleDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x59F0AFF3E0A1B019 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponGroupAsInstantKill() instead
 */
export declare function setPlayerWeaponGroupAsInstantKill(player: number | string | Player, weaponGroup: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFC79DCC94D0A5897 | Since: 1207
 *
 * @deprecated Use player.setPlayerWeaponGroupDamageModifier() instead
 */
export declare function setPlayerWeaponGroupDamageModifier(player: number | string | Player, weaponGroup: number | string, modifier: number): void;
/**
 * Decreases the damage the player receives while on horseback
 * Previous name: _SET_RECEIVED_HORSEBACK_DAMAGE_DECREASE
 *
 * Hash: 0xB427911EA6DFFEF3 | Since: 1207
 *
 * @deprecated Use player.setReceivedDamageTakenOnHorsebackModifier() instead
 */
export declare function setReceivedDamageTakenOnHorsebackModifier(player: number | string | Player, damageDecrease: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDC68829BB3F37023 | Since: 1207
 *
 * @deprecated Use player.setShowInfoCard() instead
 */
export declare function setShowInfoCard(player: number | string | Player, showingInfoCard: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAE4BCC79C587EBBF | Since: 1207
 *
 * @deprecated Use player.setSpecialAbilityActivationCost() instead
 */
export declare function setSpecialAbilityActivationCost(player: number | string | Player, activationCost: number): void;
/**
 * Only used in R* SP Script short_update
 *
 * Hash: 0xC0B1C05B313693D1 | Since: 1207
 *
 * @deprecated Use player.setSpecialAbilityDisableTimer() instead
 */
export declare function setSpecialAbilityDisableTimer(player: number | string | Player, timer: number): void;
/**
 * durationCost: per second
 *
 * Hash: 0xB783F75940B23014 | Since: 1207
 *
 * @deprecated Use player.setSpecialAbilityDurationCost() instead
 */
export declare function setSpecialAbilityDurationCost(player: number | string | Player, durationCost: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A498FCA232F71E1 | Since: 1207
 *
 * @deprecated Use player.setSpecialAbilityMultiplier() instead
 */
export declare function setSpecialAbilityMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * SPECIAL_ABILITY_NONE = -1,
 * SPECIAL_ABILITY_CAR_SLOWDOWN,
 * SPECIAL_ABILITY_RAGE,
 * SPECIAL_ABILITY_BULLET_TIME,
 * SPECIAL_ABILITY_SNAPSHOT,
 * SPECIAL_ABILITY_INSULT,
 * SPECIAL_ABILITY_DEADEYE,
 * SPECIAL_ABILITY_REVIVE
 *
 * Hash: 0x00BA333DA05ADC23 | Since: 1207
 *
 * @deprecated Use player.setSpecialAbilityType() instead
 */
export declare function setSpecialAbilityType(player: number | string | Player, type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0E1DB1F8F5B561DC | Since: 1207
 *
 * @deprecated Use player.setUsedItemEffect() instead
 */
export declare function setUsedItemEffect(health: number, stamina: number, deadeye: number, healthCore: number, staminaCore: number, deadeyeCore: number): void;
/**
 * No comment provided
 *
 * Hash: 0x11A7FF918EF6BC66 | Since: 1207
 *
 * @deprecated Use player.setWeaponDegradationModifier() instead
 */
export declare function setWeaponDegradationModifier(player: number | string | Player, modifier: number): void;
/**
 * Drains Deadeye by given amount.
 *
 * Hash: 0x200114E99552462B | Since: 1207
 *
 * @deprecated Use player.specialAbilityDrainByAmount() instead
 */
export declare function specialAbilityDrainByAmount(player: number | string | Player, amount: number): void;
/**
 * Returns Deadeye value from player
 *
 * Hash: 0x029884FB65821B07 | Since: 1207
 *
 * @deprecated Use player.specialAbilityGetAmountCached() instead
 */
export declare function specialAbilityGetAmountCached(player: number | string | Player): number;
/**
 * Restores Deadeye by given amount.
 * Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
 *
 * Hash: 0x51345AE20F22C261 | Since: 1207
 *
 * @deprecated Use player.specialAbilityRestoreByAmount() instead
 */
export declare function specialAbilityRestoreByAmount(player: number | string | Player, amount: number): void;
/**
 * Only used in R* SP Script short_update
 * Restores Deadeye Outer Ring
 *
 * Hash: 0x2498035289B5688F | Since: 1207
 *
 * @deprecated Use player.specialAbilityRestoreOuterRing() instead
 */
export declare function specialAbilityRestoreOuterRing(player: number | string | Player, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAE637BB8EF017875 | Since: 1207
 *
 * @deprecated Use player.specialAbilitySetDisabled() instead
 */
export declare function specialAbilitySetDisabled(player: number | string | Player, disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC0B21F235C02139C | Since: 1207
 *
 * @deprecated Use player.specialAbilitySetEagleEyeDisabled() instead
 */
export declare function specialAbilitySetEagleEyeDisabled(player: number | string | Player): void;
/**
 * Params: p1 = -1 in R* Scripts
 *
 * Hash: 0x1D77B47AFA584E90 | Since: 1207
 *
 * @deprecated Use player.specialAbilityStartRestore() instead
 */
export declare function specialAbilityStartRestore(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x9DAE1380CC5C6451 | Since: 1207
 *
 * @deprecated Use player.unregisterEagleEyeForEntity() instead
 */
export declare function unregisterEagleEyeForEntity(player: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x9A957912CE2EABD1 | Since: 1207
 *
 * @deprecated Use player.unregisterEagleEyeTrailsForEntity() instead
 */
export declare function unregisterEagleEyeTrailsForEntity(player: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x217A54DE2D200305 | Since: 1207
 *
 * @deprecated Use population.clearSpawnerInfoPriority() instead
 */
export declare function clearSpawnerInfoPriority(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6DCC2A3A8825C85 | Since: 1207
 *
 * @deprecated Use population.disableAmbientRoadPopulation() instead
 */
export declare function disableAmbientRoadPopulation(unk: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC90BDF4E5228EA1 | Since: 1207
 *
 * @deprecated Use population.enableAmbientRoadPopulation() instead
 */
export declare function enableAmbientRoadPopulation(): void;
/**
 * No comment provided
 *
 * Hash: 0xA1E3171ED0E47564 | Since: 1207
 *
 * @deprecated Use population.getNumModelsInPopulationSet() instead
 */
export declare function getNumModelsInPopulationSet(popSetHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3EAFA1C533B7139E | Since: 1207
 *
 * @deprecated Use population.getPedModelNameInPopulationSet() instead
 */
export declare function getPedModelNameInPopulationSet(popSetHash: number | string, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x6B12ED8C77E8567B | Since: 1207
 *
 * @deprecated Use population.getRandomModelFromPopulationSet() instead
 */
export declare function getRandomModelFromPopulationSet(popSetHash: number | string, flags: number, pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x3E6A49D9B519E85C | Since: 1207
 *
 * @deprecated Use population.setPopzonePopulationSet() instead
 */
export declare function setPopzonePopulationSet(popZone: any, populationSetHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x60CDE717A6D47769 | Since: 1207
 *
 * @deprecated Use population.setSpawnerInfoPriority() instead
 */
export declare function setSpawnerInfoPriority(priority: number): void;
/**
 * No comment provided
 *
 * Hash: 0x08892122769770D5 | Since: 1207
 *
 * @deprecated Use population._0x08892122769770D5() instead
 */
export declare function _0x08892122769770D5(popZone: any): void;
/**
 * No comment provided
 *
 * Hash: 0x0F1861101C9A9944 | Since: 1207
 *
 * @deprecated Use population._0x0F1861101C9A9944() instead
 */
export declare function _0x0F1861101C9A9944(popZone: any): void;
/**
 * No comment provided
 *
 * Hash: 0x2161278C6322F740 | Since: 1207
 *
 * @deprecated Use population._0x2161278C6322F740() instead
 */
export declare function _0x2161278C6322F740(includeFlags: number, excludeFlags: number, volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x247F86595D396344 | Since: 1207
 *
 * @deprecated Use population._0x247F86595D396344() instead
 */
export declare function _0x247F86595D396344(): void;
/**
 * No comment provided
 *
 * Hash: 0x2660E7720EDC4BD0 | Since: 1311
 *
 * @deprecated Use population._0x2660E7720EDC4BD0() instead
 */
export declare function _0x2660E7720EDC4BD0(): void;
/**
 * No comment provided
 *
 * Hash: 0x324AB2A68AD8AEE5 | Since: 1207
 *
 * @deprecated Use population._0x324AB2A68AD8AEE5() instead
 */
export declare function _0x324AB2A68AD8AEE5(): void;
/**
 * No comment provided
 *
 * Hash: 0x578E2FA64E847C60 | Since: 1207
 *
 * @deprecated Use population._0x578E2FA64E847C60() instead
 */
export declare function _0x578E2FA64E847C60(popZone: any): void;
/**
 * No comment provided
 *
 * Hash: 0x638FCFC6042A9473 | Since: 1207
 *
 * @deprecated Use population._0x638FCFC6042A9473() instead
 */
export declare function _0x638FCFC6042A9473(): void;
/**
 * No comment provided
 *
 * Hash: 0x7E6BC0B94F5928F0 | Since: 1207
 *
 * @deprecated Use population._0x7E6BC0B94F5928F0() instead
 */
export declare function _0x7E6BC0B94F5928F0(popZone: any): void;
/**
 * No comment provided
 *
 * Hash: 0x8EC7CD701F872F87 | Since: 1207
 *
 * @deprecated Use population._0x8EC7CD701F872F87() instead
 */
export declare function _0x8EC7CD701F872F87(): void;
/**
 * No comment provided
 *
 * Hash: 0xC4533E3E87125C9E | Since: 1207
 *
 * @deprecated Use population._0xC4533E3E87125C9E() instead
 */
export declare function _0xC4533E3E87125C9E(): void;
/**
 * No comment provided
 *
 * Hash: 0xDBBF12EA7C1029B2 | Since: 1207
 *
 * @deprecated Use population._0xDBBF12EA7C1029B2() instead
 */
export declare function _0xDBBF12EA7C1029B2(): void;
/**
 * Only used for Special Event (XMAS).
 * _SET_P*
 *
 * Hash: 0xEC116EDB683AD479 | Since: 1207
 *
 * @deprecated Use population._0xEC116EDB683AD479() instead
 */
export declare function _0xEC116EDB683AD479(): void;
/**
 * No comment provided
 *
 * Hash: 0xF45E46DEECF7DF6E | Since: 1207
 *
 * @deprecated Use population._0xF45E46DEECF7DF6E() instead
 */
export declare function _0xF45E46DEECF7DF6E(bitFlag: number): void;
/**
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
 *
 * Hash: 0xB56D41A694E42E86 | Since: 1207
 *
 * @deprecated Use population.addAmbientAvoidanceRestriction() instead
 */
export declare function addAmbientAvoidanceRestriction(volume: number, includeFlags: number, excludeFlags: number): void;
/**
 * flags: see 0xB56D41A694E42E86
 *
 * Hash: 0x18262CAFEBB5FBE1 | Since: 1207
 *
 * @deprecated Use population.addAmbientSpawnRestriction() instead
 */
export declare function addAmbientSpawnRestriction(volume: number, includeFlags: number, excludeFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9AC1C64FE46B6D09 | Since: 1207
 *
 * @deprecated Use population.createPopzoneFromVolume() instead
 */
export declare function createPopzoneFromVolume(volume: number): any;
/**
 * No comment provided
 *
 * Hash: 0xA6E6A66FC4CA4224 | Since: 1207
 *
 * @deprecated Use population.deleteScriptPopzone() instead
 */
export declare function deleteScriptPopzone(popZone: any): void;
/**
 * Returns model hash of the closest fish
 *
 * Hash: 0x595478B3BBC3076D | Since: 1207
 *
 * @deprecated Use population.getRandomFishTypeForLocation() instead
 */
export declare function getRandomFishTypeForLocation(): number;
/**
 * No comment provided
 *
 * Hash: 0xA5BD585005EFCAD4 | Since: 1207
 *
 * @deprecated Use population.isPopzoneValid() instead
 */
export declare function isPopzoneValid(popZone: any): boolean;
/**
 * flags: see 0xB56D41A694E42E86
 *
 * Hash: 0x74C2B3DC0B294102 | Since: 1207
 *
 * @deprecated Use population.removeAmbientAvoidanceRestriction() instead
 */
export declare function removeAmbientAvoidanceRestriction(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA1CFB35069D23C23 | Since: 1207
 *
 * @deprecated Use population.removeAmbientSpawnRestriction() instead
 */
export declare function removeAmbientSpawnRestriction(volume: number): void;
/**
 * Params: p1 = 1 & 2 in R* Scripts, 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
 *
 * Hash: 0xF74E134F40192884 | Since: 1207
 *
 * @deprecated Use population.setPedShouldIgnoreAvoidanceVolumes() instead
 */
export declare function setPedShouldIgnoreAvoidanceVolumes(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC088FF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse.posseGetPosseMembershipCount() instead
 */
export declare function posseGetPosseMembershipCount(): number;
/**
 * No comment provided
 *
 * Hash: 0xC06CFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC06CFF658B2E51DA() instead
 */
export declare function _0xC06CFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC07CFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC07CFF658B2E51DA() instead
 */
export declare function _0xC07CFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E52DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E52DA() instead
 */
export declare function _0xC084FF658B2E52DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E53DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E53DA() instead
 */
export declare function _0xC084FF658B2E53DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E54DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E54DA() instead
 */
export declare function _0xC084FF658B2E54DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E55DA() instead
 */
export declare function _0xC084FF658B2E55DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E61DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E61DA() instead
 */
export declare function _0xC084FF658B2E61DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E71DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E71DA() instead
 */
export declare function _0xC084FF658B2E71DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC084FF658B2E81DA | Since: 1207
 *
 * @deprecated Use posse._0xC084FF658B2E81DA() instead
 */
export declare function _0xC084FF658B2E81DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC086FF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC086FF658B2E51DA() instead
 */
export declare function _0xC086FF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC086FF658B2E51DB | Since: 1207
 *
 * @deprecated Use posse._0xC086FF658B2E51DB() instead
 */
export declare function _0xC086FF658B2E51DB(): any;
/**
 * No comment provided
 *
 * Hash: 0xC087FF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC087FF658B2E51DA() instead
 */
export declare function _0xC087FF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC089FF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC089FF658B2E51DA() instead
 */
export declare function _0xC089FF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08AFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08AFF658B2E51DA() instead
 */
export declare function _0xC08AFF658B2E51DA(): void;
/**
 * No comment provided
 *
 * Hash: 0xC08AFF658B2E51DB | Since: 1207
 *
 * @deprecated Use posse._0xC08AFF658B2E51DB() instead
 */
export declare function _0xC08AFF658B2E51DB(): void;
/**
 * No comment provided
 *
 * Hash: 0xC08BFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08BFF658B2E51DA() instead
 */
export declare function _0xC08BFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08CFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08CFF658B2E51DA() instead
 */
export declare function _0xC08CFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08DEF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08DEF658B2E51DA() instead
 */
export declare function _0xC08DEF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08DFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08DFF658B2E51DA() instead
 */
export declare function _0xC08DFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08DFF658B2E51DB | Since: 1207
 *
 * @deprecated Use posse._0xC08DFF658B2E51DB() instead
 */
export declare function _0xC08DFF658B2E51DB(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08EFF658B2E51DB | Since: 1207
 *
 * @deprecated Use posse._0xC08EFF658B2E51DB() instead
 */
export declare function _0xC08EFF658B2E51DB(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08FFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC08FFF658B2E51DA() instead
 */
export declare function _0xC08FFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC08FFF658B2E51DB | Since: 1207
 *
 * @deprecated Use posse._0xC08FFF658B2E51DB() instead
 */
export declare function _0xC08FFF658B2E51DB(): any;
/**
 * No comment provided
 *
 * Hash: 0xC09CFF658B2E51DA | Since: 1207
 *
 * @deprecated Use posse._0xC09CFF658B2E51DA() instead
 */
export declare function _0xC09CFF658B2E51DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC184FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC184FF658B2E55DA() instead
 */
export declare function _0xC184FF658B2E55DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC284FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC284FF658B2E55DA() instead
 */
export declare function _0xC284FF658B2E55DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC394FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC394FF658B2E55DA() instead
 */
export declare function _0xC394FF658B2E55DA(): any;
/**
 * No comment provided
 *
 * Hash: 0xC484FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC484FF658B2E55DA() instead
 */
export declare function _0xC484FF658B2E55DA(): void;
/**
 * No comment provided
 *
 * Hash: 0xC584FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC584FF658B2E55DA() instead
 */
export declare function _0xC584FF658B2E55DA(): void;
/**
 * No comment provided
 *
 * Hash: 0xC684FF658B2E55DA | Since: 1207
 *
 * @deprecated Use posse._0xC684FF658B2E55DA() instead
 */
export declare function _0xC684FF658B2E55DA(): void;
/**
 * No comment provided
 *
 * Hash: 0x9609DBDDE18FAD8C | Since: 1207
 *
 * @deprecated Use propset.createPropSetInstanceAttachedToEntity() instead
 */
export declare function createPropSetInstanceAttachedToEntity(hash: number | string, pos: Vector3, entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x7DDDCF815E650FF5 | Since: 1207
 *
 * @deprecated Use propset.doesPropSetExist() instead
 */
export declare function doesPropSetExist(propSet: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF42DB680A8B2A4D9 | Since: 1207
 *
 * @deprecated Use propset.isPropSetFullyLoaded() instead
 */
export declare function isPropSetFullyLoaded(propSet: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x58E0B01D45CA7357 | Since: 1207
 *
 * @deprecated Use propset._0x58E0B01D45CA7357() instead
 */
export declare function _0x58E0B01D45CA7357(): void;
/**
 * Relocates an existing prop set to specified coordinates and adjusts its heading (rotation) without affecting the prop set's internal layout or structure. The `propSet` parameter identifies the prop set to move. The parameters (`coordsX`, `coordsY`, `coordsZ`) set the new central position of the prop set, while `heading` specifies its rotation around the Z-axis (in degrees). When `onGroundProperly` is true, the prop set automatically aligns accurately with the terrain
 *
 * Hash: 0xC4B67EF3FD65622D | Since: 1207
 *
 * @deprecated Use propset.modifyPropsetCoordsAndHeading() instead
 */
export declare function modifyPropsetCoordsAndHeading(propset: number, pos: Vector3, onGroundProperly: boolean, heading: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
 *
 * Hash: 0x75F90E4051CC084C | Since: 1207
 *
 * @deprecated Use propset.addAdditionalPropSetForVehicle() instead
 */
export declare function addAdditionalPropSetForVehicle(vehicle: number | Vehicle, propset: number | string): void;
/**
 * To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
 * 0xA6A9712955F53D9C returns lightPropset Hashes
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
 *
 * Hash: 0xC0F0417A90402742 | Since: 1207
 *
 * @deprecated Use propset.addLightPropSetToVehicle() instead
 */
export declare function addLightPropSetToVehicle(vehicle: number | Vehicle, lightPropset: number | string): void;
/**
 * List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
 *
 * Hash: 0xD80FAF919A2E56EA | Since: 1207
 *
 * @deprecated Use propset.addPropSetForVehicle() instead
 */
export declare function addPropSetForVehicle(vehicle: number | Vehicle, propset: number | string): void;
/**
 * propsetType: https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
 * placementType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PlacementType
 *
 * Hash: 0xE65C5CBA95F0E510 | Since: 1207
 *
 * @deprecated Use propset.createPropSet() instead
 */
export declare function createPropSet(propsetType: number | string, pos: Vector3, placementType: number, heading: number, zProbe: number, useVegMod: boolean): any;
/**
 * Same as _CREATE_PROP_SET
 *
 * Hash: 0x899C97A1CCE7D483 | Since: 1207
 *
 * @deprecated Use propset.createPropSet2() instead
 */
export declare function createPropSet2(propsetType: number | string, pos: Vector3, placementType: number, heading: number, zProbe: number, useVegMod: boolean): any;
/**
 * Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
 *
 * Hash: 0xACA7FB30269096D4 | Since: 1207
 *
 * @deprecated Use propset.createPropSetInstanceAttachedToEntity2() instead
 */
export declare function createPropSetInstanceAttachedToEntity2(hash: number | string, pos: Vector3, entity: number | Entity): any;
/**
 * No comment provided
 *
 * Hash: 0x58AC173A55D9D7B4 | Since: 1207
 *
 * @deprecated Use propset.deletePropSet() instead
 */
export declare function deletePropSet(propSet: any): void;
/**
 * No comment provided
 *
 * Hash: 0x72068021F498E6E3 | Since: 1207
 *
 * @deprecated Use propset.doesPropSetOfTypeExistNearCoords() instead
 */
export declare function doesPropSetOfTypeExistNearCoords(propsetHash: number | string, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC9B4B3A36F81FD75 | Since: 1207
 *
 * @deprecated Use propset.doesVehicleHaveAnyLightPropSet() instead
 */
export declare function doesVehicleHaveAnyLightPropSet(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x53784CEA0159439B | Since: 1207
 *
 * @deprecated Use propset.doesVehicleHaveAnyPropSet() instead
 */
export declare function doesVehicleHaveAnyPropSet(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x738271B660FE0695 | Since: 1207
 *
 * @deprecated Use propset.getEntitiesFromPropSet() instead
 */
export declare function getEntitiesFromPropSet(propSet: any, itemSet: any, model: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC061E50F8D299F95 | Since: 1207
 *
 * @deprecated Use propset.getPropSetAtCoords() instead
 */
export declare function getPropSetAtCoords(propsetHash: number | string, pos: Vector3): any;
/**
 * No comment provided
 *
 * Hash: 0xA6A9712955F53D9C | Since: 1207
 *
 * @deprecated Use propset.getPropSetModel() instead
 */
export declare function getPropSetModel(propSet: any): number;
/**
 * Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
 *
 * Hash: 0xCFC0BD09BB1B73FF | Since: 1207
 *
 * @deprecated Use propset.getTrainCarriagePropSet() instead
 */
export declare function getTrainCarriagePropSet(trainCarriage: number | Entity): any;
/**
 * Returns PropSet handle to be used with _GET_PROP_SET_MODEL
 *
 * Hash: 0xA079300AF757FB1A | Since: 1207
 *
 * @deprecated Use propset.getVehicleLightPropSet() instead
 */
export declare function getVehicleLightPropSet(vehicle: number | Vehicle): any;
/**
 * No comment provided
 *
 * Hash: 0xCE2ACD6F602803E5 | Since: 1207
 *
 * @deprecated Use propset.getVehiclePropSet() instead
 */
export declare function getVehiclePropSet(vehicle: number | Vehicle): any;
/**
 * No comment provided
 *
 * Hash: 0x36F69E7A22655653 | Since: 1207
 *
 * @deprecated Use propset.getVehiclePropSetHash() instead
 */
export declare function getVehiclePropSetHash(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x48A88FC684C55FDC | Since: 1207
 *
 * @deprecated Use propset.hasPropSetLoaded() instead
 */
export declare function hasPropSetLoaded(hash: number | string): boolean;
/**
 * Same as _HAS_PROP_SET_LOADED
 *
 * Hash: 0xD090ABEF4D6A7D96 | Since: 1207
 *
 * @deprecated Use propset.hasPropSetLoaded2() instead
 */
export declare function hasPropSetLoaded2(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F3333F0A6900B3C | Since: 1207
 *
 * @deprecated Use propset.hasVehicleTrailerPropSetLoaded() instead
 */
export declare function hasVehicleTrailerPropSetLoaded(vehicle: number | Vehicle, wagonIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CE8AAFE9E433A23 | Since: 1207
 *
 * @deprecated Use propset.isPropSetVisible() instead
 */
export declare function isPropSetVisible(propSet: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0790473EEE1977D3 | Since: 1207
 *
 * @deprecated Use propset.isVehicleLightPropSetLoaded() instead
 */
export declare function isVehicleLightPropSetLoaded(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x155B2FBE72D7D1D0 | Since: 1207
 *
 * @deprecated Use propset.isVehiclePropSetLoaded() instead
 */
export declare function isVehiclePropSetLoaded(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7264F9CA87A9830B | Since: 1207
 *
 * @deprecated Use propset.isVehiclePropSetLoadedAdditional() instead
 */
export declare function isVehiclePropSetLoadedAdditional(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1964A83B345B4AB | Since: 1207
 *
 * @deprecated Use propset.releasePropSet() instead
 */
export declare function releasePropSet(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE31C0CB1C3186D40 | Since: 1207
 *
 * @deprecated Use propset.removeVehicleLightPropSets() instead
 */
export declare function removeVehicleLightPropSets(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x3BCF32FF37EA9F1D | Since: 1207
 *
 * @deprecated Use propset.removeVehiclePropSets() instead
 */
export declare function removeVehiclePropSets(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF3DE57A46D5585E9 | Since: 1207
 *
 * @deprecated Use propset.requestPropSet() instead
 */
export declare function requestPropSet(hash: number | string): boolean;
/**
 * Same as _REQUEST_PROP_SET
 *
 * Hash: 0xE72F591958F3ACAB | Since: 1207
 *
 * @deprecated Use propset.requestPropSet2() instead
 */
export declare function requestPropSet2(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x909E3C7FAE539FB1 | Since: 1207
 *
 * @deprecated Use propset.setPropSetAsNoLongerNeeded() instead
 */
export declare function setPropSetAsNoLongerNeeded(propSet: any): void;
/**
 * No comment provided
 *
 * Hash: 0xC1AB7EEFD3E6EE49 | Since: 1207
 *
 * @deprecated Use propset.setPropSetFlag() instead
 */
export declare function setPropSetFlag(propSet: any, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9D096A5BD02F953E | Since: 1207
 *
 * @deprecated Use propset.setPropSetVisible() instead
 */
export declare function setPropSetVisible(propSet: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x402B5D7D269FF796 | Since: 1207
 *
 * @deprecated Use queue.eventQueueIsEmpty() instead
 */
export declare function eventQueueIsEmpty(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD87DF294B049211D | Since: 1207
 *
 * @deprecated Use queue.eventQueuePop() instead
 */
export declare function eventQueuePop(hash: number | string): void;
/**
 * nullsub, doesn't do anything
 *
 * Old name: _STOP_RECORDING_THIS_FRAME
 *
 * Hash: 0xA8C44C13419634F2 | Since: 1207
 *
 * @deprecated Use recording.replayPreventRecordingThisFrame() instead
 */
export declare function replayPreventRecordingThisFrame(): void;
/**
 * Hardcoded to return true.
 *
 * Hash: 0xCEEC64BD27A59312 | Since: 1207
 *
 * @deprecated Use replay.closeVideoEditor() instead
 */
export declare function closeVideoEditor(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x9EEB007317FA3B9C | Since: 1207
 *
 * @deprecated Use replay.isVideoEditorRunning() instead
 */
export declare function isVideoEditorRunning(): boolean;
/**
 * Hardcoded to return true.
 *
 * Hash: 0xB3F2829907403C13 | Since: 1207
 *
 * @deprecated Use replay.openVideoEditor() instead
 */
export declare function openVideoEditor(): boolean;
/**
 * Hardcoded to return false.
 *
 * Old name: _IS_INTERIOR_RENDERING_DISABLED
 *
 * Hash: 0x0F838D47DE58EDB2 | Since: 1207
 *
 * @deprecated Use replay.replaySystemHasRequestedAScriptCleanup() instead
 */
export declare function replaySystemHasRequestedAScriptCleanup(): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x57C6525034E76EB0 | Since: 1207
 *
 * @deprecated Use replay.setScriptsHaveCleanedUpForReplaySystem() instead
 */
export declare function setScriptsHaveCleanedUpForReplaySystem(): void;
/**
 * No comment provided
 *
 * Hash: 0x3CF46F55C6585590 | Since: 1207
 *
 * @deprecated Use save.savegameIsSavePending() instead
 */
export declare function savegameIsSavePending(): boolean;
/**
 * See SAVEGAME_SAVE_SP
 *
 * Hash: 0x1840F3B30ED0105F | Since: 1207
 *
 * @deprecated Use save.savegameSaveMp() instead
 */
export declare function savegameSaveMp(savegameType: number | string): boolean;
/**
 * enum eSavegameType : Hash
 * {
 * SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
 * SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
 * SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
 * SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
 * SAVEGAMETYPE_END_MATCH = 0xE470ED50,
 * SAVEGAMETYPE_END_MISSION = 0x9A444E54,
 * SAVEGAMETYPE_END_SESSION = 0x6D23956C,
 * SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
 * SAVEGAMETYPE_RANKUP = 0xE25F8017,
 * SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
 * SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
 * SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
 * SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
 * };
 *
 * Hash: 0x62C9EB51656D68CE | Since: 1207
 *
 * @deprecated Use save.savegameSaveSp() instead
 */
export declare function savegameSaveSp(savegameType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1431540BCA1A1BD2 | Since: 1207
 *
 * @deprecated Use save.savegameHasSaveFailed() instead
 */
export declare function savegameHasSaveFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x443174C20B8B9E7F | Since: 1207
 *
 * @deprecated Use save._0x443174C20B8B9E7F() instead
 */
export declare function _0x443174C20B8B9E7F(): void;
/**
 * No comment provided
 *
 * Hash: 0x4FB5869E2B37FC00 | Since: 1207
 *
 * @deprecated Use save._0x4FB5869E2B37FC00() instead
 */
export declare function _0x4FB5869E2B37FC00(): void;
/**
 * No comment provided
 *
 * Hash: 0x81F4E92BE3958364 | Since: 1207
 *
 * @deprecated Use save._0x81F4E92BE3958364() instead
 */
export declare function _0x81F4E92BE3958364(): void;
/**
 * No comment provided
 *
 * Hash: 0x8E8FFB9E4AD051D2 | Since: 1207
 *
 * @deprecated Use save._0x8E8FFB9E4AD051D2() instead
 */
export declare function _0x8E8FFB9E4AD051D2(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BB83C4DD7BE0802 | Since: 1207
 *
 * @deprecated Use save._0x9BB83C4DD7BE0802() instead
 */
export declare function _0x9BB83C4DD7BE0802(): void;
/**
 * No comment provided
 *
 * Hash: 0xA7ECEBAFBAF997A5 | Since: 1436
 *
 * @deprecated Use save._0xA7ECEBAFBAF997A5() instead
 */
export declare function _0xA7ECEBAFBAF997A5(savegameType: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xA844FEB5C22C2C74 | Since: 1207
 *
 * @deprecated Use save._0xA844FEB5C22C2C74() instead
 */
export declare function _0xA844FEB5C22C2C74(): void;
/**
 * No comment provided
 *
 * Hash: 0xB00CE33465B5406D | Since: 1207
 *
 * @deprecated Use save._0xB00CE33465B5406D() instead
 */
export declare function _0xB00CE33465B5406D(): any;
/**
 * No comment provided
 *
 * Hash: 0xC0ABF784590798A9 | Since: 1207
 *
 * @deprecated Use save._0xC0ABF784590798A9() instead
 */
export declare function _0xC0ABF784590798A9(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0B45E983BFC0768 | Since: 1207
 *
 * @deprecated Use save._0xE0B45E983BFC0768() instead
 */
export declare function _0xE0B45E983BFC0768(): void;
/**
 * No comment provided
 *
 * Hash: 0xE8346E62FD7FB962 | Since: 1207
 *
 * @deprecated Use save._0xE8346E62FD7FB962() instead
 */
export declare function _0xE8346E62FD7FB962(): void;
/**
 * No comment provided
 *
 * Hash: 0xED4B0C1057892B2E | Since: 1207
 *
 * @deprecated Use save._0xED4B0C1057892B2E() instead
 */
export declare function _0xED4B0C1057892B2E(): void;
/**
 * Does the exact same as 0x529B9CCD0972AF4E
 *
 * Hash: 0xBB7F4273C186BC4B | Since: 1207
 *
 * @deprecated Use save.savegameGetBool() instead
 */
export declare function savegameGetBool(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x35DEFECAE36D4FAE | Since: 1207
 *
 * @deprecated Use save.savegameGetFloat() instead
 */
export declare function savegameGetFloat(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x529B9CCD0972AF4E | Since: 1207
 *
 * @deprecated Use save.savegameGetInt() instead
 */
export declare function savegameGetInt(variableName: string): void;
/**
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with time/timestamps
 *
 * Hash: 0x529B9CCD0972AF4D | Since: 1207
 *
 * @deprecated Use save.savegameGetInt2() instead
 */
export declare function savegameGetInt2(variableName: string): void;
/**
 * Does the exact same as 0x529B9CCD0972AF4E
 * Commonly used with enums and flags
 *
 * Hash: 0xB25B5A375BE5BE26 | Since: 1207
 *
 * @deprecated Use save.savegameGetInt3() instead
 */
export declare function savegameGetInt3(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5A10D6506B2F2C63 | Since: 1207
 *
 * @deprecated Use save.savegameGetTextLabel23() instead
 */
export declare function savegameGetTextLabel23(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4845E7E7643A908C | Since: 1207
 *
 * @deprecated Use save.savegameGetTextLabel31() instead
 */
export declare function savegameGetTextLabel31(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x186608A2AC6F9E88 | Since: 1207
 *
 * @deprecated Use save.savegameGetTextLabel63() instead
 */
export declare function savegameGetTextLabel63(variableName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xAC8FAB22A914AE34 | Since: 1207
 *
 * @deprecated Use scripts.awardsGetResultItem() instead
 */
export declare function awardsGetResultItem(rpcGuid: any, awardHash: number | string, itemIndex: number, outResultItem: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC2C927F5C264243 | Since: 1207
 *
 * @deprecated Use scripts.bailToLandingPage() instead
 */
export declare function bailToLandingPage(bailCode: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE98204D3C25AE14C | Since: 1207
 *
 * @deprecated Use scripts.bailWithPassThroughParams() instead
 */
export declare function bailWithPassThroughParams(params: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4AE1DFF337A86FDE | Since: 1207
 *
 * @deprecated Use scripts.bgDoesLaunchParamExist() instead
 */
export declare function bgDoesLaunchParamExist(scriptIndex: number): boolean;
/**
 * Deletes the given context from the background scripts context map.
 *
 * Hash: 0x3ABF7BA1C3E2C8CF | Since: 1207
 *
 * @deprecated Use scripts.bgEndContext() instead
 */
export declare function bgEndContext(contextName: string): void;
/**
 * Hashed version of BG_END_CONTEXT
 *
 * Hash: 0x6D1431744182CDE8 | Since: 1207
 *
 * @deprecated Use scripts.bgEndContextHash() instead
 */
export declare function bgEndContextHash(contextHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x55C40B7592BAD213 | Since: 1207
 *
 * @deprecated Use scripts.bgGetLaunchParamValue() instead
 */
export declare function bgGetLaunchParamValue(scriptIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x829CD22E043A2577 | Since: 1207
 *
 * @deprecated Use scripts.bgGetScriptIdFromNameHash() instead
 */
export declare function bgGetScriptIdFromNameHash(): number;
/**
 * Returns true if GtaThread+0x77C is equal to 1.
 *
 * Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
 *
 * Hash: 0x2238EC3EC631AB1F | Since: 1207
 *
 * @deprecated Use scripts.bgIsExitflagSet() instead
 */
export declare function bgIsExitflagSet(): boolean;
/**
 * Sets bit 0 in GtaThread+0x784
 *
 * Hash: 0x4858148E3B8A75D0 | Since: 1207
 *
 * @deprecated Use scripts.bgSetExitflagResponse() instead
 */
export declare function bgSetExitflagResponse(): void;
/**
 * Inserts the given context into the background scripts context map.
 *
 * Hash: 0x49BA5678BA040CA7 | Since: 1207
 *
 * @deprecated Use scripts.bgStartContext() instead
 */
export declare function bgStartContext(contextName: string): void;
/**
 * Hashed version of BG_START_CONTEXT
 *
 * Hash: 0x2EB67D564DCC09D5 | Since: 1207
 *
 * @deprecated Use scripts.bgStartContextHash() instead
 */
export declare function bgStartContextHash(contextHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2F050A3FF8738245 | Since: 1207
 *
 * @deprecated Use scripts.countParticipantBits() instead
 */
export declare function countParticipantBits(value: any): number;
/**
 * No comment provided
 *
 * Hash: 0x462C687BEA254BD9 | Since: 1207
 *
 * @deprecated Use scripts.countPlayerBits() instead
 */
export declare function countPlayerBits(value: any): number;
/**
 * No comment provided
 *
 * Hash: 0x552B171E3F69E5AE | Since: 1207
 *
 * @deprecated Use scripts.doesScriptExist() instead
 */
export declare function doesScriptExist(scriptName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA34E89749F628284 | Since: 1207
 *
 * @deprecated Use scripts.doesScriptWithNameHashExist() instead
 */
export declare function doesScriptWithNameHashExist(scriptHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF975BC4435A0FA3 | Since: 1207
 *
 * @deprecated Use scripts.doesThreadExist() instead
 */
export declare function doesThreadExist(threadId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFA3B530A5CC693D5 | Since: 1207
 *
 * @deprecated Use scripts.getBlockOfPlayerBits() instead
 */
export declare function getBlockOfPlayerBits(value: any): number;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 *
 * Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
 *
 * Hash: 0xA85E614430EFF816 | Since: 1207
 *
 * @deprecated Use scripts.getEventAtIndex() instead
 */
export declare function getEventAtIndex(eventGroup: number, eventIndex: number): number;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 *
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 *
 * https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
 *
 * Hash: 0x57EC5FA4D4D6AFCA | Since: 1207
 *
 * @deprecated Use scripts.getEventData() instead
 */
export declare function getEventData(eventGroup: number, eventIndex: number, eventData: any, eventDataSize: number): boolean;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 *
 * Hash: 0xC9F59C0A710ECD34 | Since: 1207
 *
 * @deprecated Use scripts.getEventExists() instead
 */
export declare function getEventExists(eventGroup: number, eventType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC2C927F5C264960 | Since: 1207
 *
 * @deprecated Use scripts.getHashOfThisScriptName() instead
 */
export declare function getHashOfThisScriptName(): number;
/**
 * No comment provided
 *
 * Hash: 0x55525C346BEF6960 | Since: 1207
 *
 * @deprecated Use scripts.getIdOfThisThread() instead
 */
export declare function getIdOfThisThread(): number;
/**
 * No comment provided
 *
 * Hash: 0x323DAF00687E0F28 | Since: 1207
 *
 * @deprecated Use scripts.getNoLoadingScreen() instead
 */
export declare function getNoLoadingScreen(): boolean;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
 *
 * Hash: 0x5CE8DE5909565748 | Since: 1207
 *
 * @deprecated Use scripts.getNumberOfEvents() instead
 */
export declare function getNumberOfEvents(eventGroup: number): number;
/**
 * Gets the number of instances of the specified script is currently running.
 *
 * Actually returns numRefs - 1.
 * if (program)
 * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
 * return v3;
 *
 * Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
 *
 * Hash: 0x8E34C953364A76DD | Since: 1207
 *
 * @deprecated Use scripts.getNumberOfThreadsRunningTheScriptWithThisHash() instead
 */
export declare function getNumberOfThreadsRunningTheScriptWithThisHash(scriptHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD92FA81B64920E85 | Since: 1207
 *
 * @deprecated Use scripts.getThreadExistenceDetails() instead
 */
export declare function getThreadExistenceDetails(threadId: number, threadExists: boolean, hasScriptHandler: boolean): void;
/**
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 *
 * Hash: 0xE97BD36574F8B0A6 | Since: 1207
 *
 * @deprecated Use scripts.hasScriptLoaded() instead
 */
export declare function hasScriptLoaded(scriptName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA5D8E0C2F3C7EEBC | Since: 1207
 *
 * @deprecated Use scripts.hasScriptWithNameHashLoaded() instead
 */
export declare function hasScriptWithNameHashLoaded(scriptHash: number | string): boolean;
/**
 * Waiting for child scripts to terminate / waiting for collapse of child scripts
 *
 * Hash: 0x380FFA15B72408FB | Since: 1207
 *
 * @deprecated Use scripts.haveAllChildScriptsTerminated() instead
 */
export declare function haveAllChildScriptsTerminated(): boolean;
/**
 * Same as GET_IS_LOADING_SCREEN_ACTIVE
 *
 * Hash: 0xB54ADBE65D528FCB | Since: 1207
 *
 * @deprecated Use scripts.isLoadingScreenVisible() instead
 */
export declare function isLoadingScreenVisible(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x46E9AE36D8FA6417 | Since: 1207
 *
 * @deprecated Use scripts.isThreadActive() instead
 */
export declare function isThreadActive(threadId: number, ignoreKilledState: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9E4EF615E307FBBE | Since: 1207
 *
 * @deprecated Use scripts.isThreadExitRequested() instead
 */
export declare function isThreadExitRequested(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x46ED607DDD40D7FE | Since: 1207
 *
 * @deprecated Use scripts.requestScript() instead
 */
export declare function requestScript(scriptName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF6B9CE3F8D5B9B74 | Since: 1207
 *
 * @deprecated Use scripts.requestScriptWithNameHash() instead
 */
export declare function requestScriptWithNameHash(scriptHash: number | string): void;
/**
 * If the function returns 0, the end of the iteration has been reached.
 *
 * Hash: 0x3CE3FB167E837D7C | Since: 1207
 *
 * @deprecated Use scripts.scriptThreadIteratorGetNextThreadId() instead
 */
export declare function scriptThreadIteratorGetNextThreadId(): number;
/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 *
 * Hash: 0x39382EB8DCD8684D | Since: 1207
 *
 * @deprecated Use scripts.scriptThreadIteratorReset() instead
 */
export declare function scriptThreadIteratorReset(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6DFB8C04C86D5A5 | Since: 1207
 *
 * @deprecated Use scripts.setBlockOfPlayerBits() instead
 */
export declare function setBlockOfPlayerBits(value: any): void;
/**
 * No comment provided
 *
 * Hash: 0x4768D5252EAEB76F | Since: 1207
 *
 * @deprecated Use scripts.setEventFlagForDeletion() instead
 */
export declare function setEventFlagForDeletion(eventGroup: number, eventIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5CB83156AA038F95 | Since: 1207
 *
 * @deprecated Use scripts.setNoLoadingScreen() instead
 */
export declare function setNoLoadingScreen(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0086D3067E1CFD1C | Since: 1207
 *
 * @deprecated Use scripts.setScriptAsNoLongerNeeded() instead
 */
export declare function setScriptAsNoLongerNeeded(scriptName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x50723A1567C8361E | Since: 1207
 *
 * @deprecated Use scripts.setScriptWithNameHashAsNoLongerNeeded() instead
 */
export declare function setScriptWithNameHashAsNoLongerNeeded(scriptHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xFC179D7E8886DADF | Since: 1207
 *
 * @deprecated Use scripts.shutdownLoadingScreen() instead
 */
export declare function shutdownLoadingScreen(): void;
/**
 * No comment provided
 *
 * Hash: 0xE81651AD79516E48 | Since: 1207
 *
 * @deprecated Use scripts.startNewScript() instead
 */
export declare function startNewScript(scriptName: string, stackSize: number): number;
/**
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 *
 * Hash: 0xB8BA7F44DF1575E1 | Since: 1207
 *
 * @deprecated Use scripts.startNewScriptWithArgs() instead
 */
export declare function startNewScriptWithArgs(scriptName: string, args: any, argCount: number, stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0xEB1C67C3A5333A92 | Since: 1207
 *
 * @deprecated Use scripts.startNewScriptWithNameHash() instead
 */
export declare function startNewScriptWithNameHash(scriptHash: number | string, stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC4BB298BD441BE78 | Since: 1207
 *
 * @deprecated Use scripts.startNewScriptWithNameHashAndArgs() instead
 */
export declare function startNewScriptWithNameHashAndArgs(scriptHash: number | string, args: any, argCount: number, stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0x778D4733E0F2F265 | Since: 1207
 *
 * @deprecated Use scripts.stopDisplayingMpTransitionLoadingScreens() instead
 */
export declare function stopDisplayingMpTransitionLoadingScreens(): void;
/**
 * No comment provided
 *
 * Hash: 0x5E8B6D17FF91CD59 | Since: 1207
 *
 * @deprecated Use scripts.terminateThisThread() instead
 */
export declare function terminateThisThread(): void;
/**
 * No comment provided
 *
 * Hash: 0x87ED52AE40EA1A52 | Since: 1207
 *
 * @deprecated Use scripts.terminateThread() instead
 */
export declare function terminateThread(threadId: number): void;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
 *
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 *
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 *
 * Hash: 0x5AE99C571D5BBE5D | Since: 1207
 *
 * @deprecated Use scripts.triggerScriptEvent() instead
 */
export declare function triggerScriptEvent(eventGroup: number, eventData: any, eventDataSize: number, scriptMetadataIndex: number, playerBits: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A79C81C418F5D38 | Since: 1207
 *
 * @deprecated Use scripts._0x0A79C81C418F5D38() instead
 */
export declare function _0x0A79C81C418F5D38(): any;
/**
 * Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
 *
 * Hash: 0x11B0A0B282FA9B10 | Since: 1207
 *
 * @deprecated Use scripts._0x11B0A0B282FA9B10() instead
 */
export declare function _0x11B0A0B282FA9B10(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BDB5A07307F6929 | Since: 1207
 *
 * @deprecated Use scripts._0x1BDB5A07307F6929() instead
 */
export declare function _0x1BDB5A07307F6929(): void;
/**
 * No comment provided
 *
 * Hash: 0x1C5EB3C27F7508CB | Since: 1207
 *
 * @deprecated Use scripts._0x1C5EB3C27F7508CB() instead
 */
export declare function _0x1C5EB3C27F7508CB(): void;
/**
 * No comment provided
 *
 * Hash: 0x29FB4CE89472C3CB | Since: 1207
 *
 * @deprecated Use scripts._0x29FB4CE89472C3CB() instead
 */
export declare function _0x29FB4CE89472C3CB(): void;
/**
 * No comment provided
 *
 * Hash: 0x42A429CDFED6D99D | Since: 1207
 *
 * @deprecated Use scripts._0x42A429CDFED6D99D() instead
 */
export declare function _0x42A429CDFED6D99D(): void;
/**
 * No comment provided
 *
 * Hash: 0x5827BE85A87B073D | Since: 1207
 *
 * @deprecated Use scripts._0x5827BE85A87B073D() instead
 */
export declare function _0x5827BE85A87B073D(): void;
/**
 * No comment provided
 *
 * Hash: 0x64F765D9A1F8F02C | Since: 1207
 *
 * @deprecated Use scripts._0x64F765D9A1F8F02C() instead
 */
export declare function _0x64F765D9A1F8F02C(): void;
/**
 * No comment provided
 *
 * Hash: 0x6F700A4BF7C3331B | Since: 1207
 *
 * @deprecated Use scripts._0x6F700A4BF7C3331B() instead
 */
export declare function _0x6F700A4BF7C3331B(): void;
/**
 * No comment provided
 *
 * Hash: 0x76CBCD9EADC00955 | Since: 1207
 *
 * @deprecated Use scripts._0x76CBCD9EADC00955() instead
 */
export declare function _0x76CBCD9EADC00955(): void;
/**
 * No comment provided
 *
 * Hash: 0xA88E1D7FA1E20080 | Since: 1207
 *
 * @deprecated Use scripts._0xA88E1D7FA1E20080() instead
 */
export declare function _0xA88E1D7FA1E20080(): any;
/**
 * No comment provided
 *
 * Hash: 0xE4ABE20DCE7C7CFE | Since: 1207
 *
 * @deprecated Use scripts._0xE4ABE20DCE7C7CFE() instead
 */
export declare function _0xE4ABE20DCE7C7CFE(): void;
/**
 * No comment provided
 *
 * Hash: 0xE7282390542F570D | Since: 1207
 *
 * @deprecated Use scripts._0xE7282390542F570D() instead
 */
export declare function _0xE7282390542F570D(): any;
/**
 * No comment provided
 *
 * Hash: 0xF9E951A1E5517C06 | Since: 1207
 *
 * @deprecated Use scripts._0xF9E951A1E5517C06() instead
 */
export declare function _0xF9E951A1E5517C06(): void;
/**
 * No comment provided
 *
 * Hash: 0xFFDDF802279BE128 | Since: 1207
 *
 * @deprecated Use scripts._0xFFDDF802279BE128() instead
 */
export declare function _0xFFDDF802279BE128(): void;
/**
 * goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
 *
 * Hash: 0x7D654266025E921B | Since: 1207
 *
 * @deprecated Use scripts.activateGoalContext() instead
 */
export declare function activateGoalContext(goalContext: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xB9467E41DAB1CF2C | Since: 1207
 *
 * @deprecated Use scripts.awardsGetUnlockClaimData() instead
 */
export declare function awardsGetUnlockClaimData(rpcGuid: any, awardHash: number | string, dataIndex: number, outUnlockData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE7D814CFA181B56 | Since: 1207
 *
 * @deprecated Use scripts.bgReloadAllBackgroundScripts() instead
 */
export declare function bgReloadAllBackgroundScripts(): void;
/**
 * No comment provided
 *
 * Hash: 0xDE544B7EC0C187CC | Since: 1207
 *
 * @deprecated Use scripts.clearAllPlayerBits() instead
 */
export declare function clearAllPlayerBits(value: any): void;
/**
 * No comment provided
 *
 * Hash: 0xD426E2E3288469D6 | Since: 1207
 *
 * @deprecated Use scripts.clearPlayerBitAtIndex() instead
 */
export declare function clearPlayerBitAtIndex(value: any, bitIndex: number): void;
/**
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 *
 * Hash: 0x50B72A754EE64A71 | Since: 1207
 *
 * @deprecated Use scripts.deactivateGoalContext() instead
 */
export declare function deactivateGoalContext(goalContext: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x1E5B70E53DB661E5 | Since: 1207
 *
 * @deprecated Use scripts.displayLoadingScreens() instead
 */
export declare function displayLoadingScreens(gamemodeName: string, title: string, subtitle: string): void;
/**
 * No comment provided
 *
 * Hash: 0x66EE5B93C308F734 | Since: 1207
 *
 * @deprecated Use scripts.doesCompressedGlobalBlockBufferExist() instead
 */
export declare function doesCompressedGlobalBlockBufferExist(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42A7EB5C814C2DE0 | Since: 1207
 *
 * @deprecated Use scripts.getGlobalBlockCanBeAccessed() instead
 */
export declare function getGlobalBlockCanBeAccessed(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x724CB89D35B283D0 | Since: 1207
 *
 * @deprecated Use scripts.getHashOfThread() instead
 */
export declare function getHashOfThread(threadId: number): number;
/**
 * enum eThreadExitReason
 * {
 * THREAD_EXIT_REASON_NONE,
 * THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
 * THREAD_EXIT_REASON_SESSION_MERGE,
 * THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
 * THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
 * };
 *
 * Hash: 0x54AE4FDEEFEAB77E | Since: 1207
 *
 * @deprecated Use scripts.getThreadExitReason() instead
 */
export declare function getThreadExitReason(): number;
/**
 * No comment provided
 *
 * Hash: 0x179A6F0EE2E79026 | Since: 1207
 *
 * @deprecated Use scripts.isAnyPlayerBitSet() instead
 */
export declare function isAnyPlayerBitSet(playerBits: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x20B7F69B40C6B755 | Since: 1207
 *
 * @deprecated Use scripts.isBackgroundScript() instead
 */
export declare function isBackgroundScript(threadId: number): boolean;
/**
 * goalContext: see _ACTIVATE_GOAL_CONTEXT
 *
 * Hash: 0x7409669C5ED50144 | Since: 1207
 *
 * @deprecated Use scripts.isGoalContextActive() instead
 */
export declare function isGoalContextActive(goalContext: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x72B2E00C9BAC6789 | Since: 1207
 *
 * @deprecated Use scripts.isPlayerBitSetAtIndex() instead
 */
export declare function isPlayerBitSetAtIndex(value: any, bitIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30BED53646C86D11 | Since: 1207
 *
 * @deprecated Use scripts.isThreadExitRequestedForThreadWithThisId() instead
 */
export declare function isThreadExitRequestedForThreadWithThisId(threadId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF1E9045F5AA9E428 | Since: 1311
 *
 * @deprecated Use scripts.lootGetLootClaimData() instead
 */
export declare function lootGetLootClaimData(rpcGuid: any, dataIndex: number, outLootData: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4293B44A855F82CC | Since: 1207
 *
 * @deprecated Use scripts.lootGetResultItem() instead
 */
export declare function lootGetResultItem(rpcGuid: any, itemIndex: number, outResultItem: any): boolean;
/**
 * Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
 *
 * Hash: 0xAC9FF854BD4BA9B5 | Since: 1311
 *
 * @deprecated Use scripts.netRpcGuidToString() instead
 */
export declare function netRpcGuidToString(netRpcGuid: any): string;
/**
 * No comment provided
 *
 * Hash: 0x7DE4643157AD646C | Since: 1207
 *
 * @deprecated Use scripts.requestThreadExit() instead
 */
export declare function requestThreadExit(threadId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7423F7835770F619 | Since: 1207
 *
 * @deprecated Use scripts.requestThreadExitForAllThreadsWithThisName() instead
 */
export declare function requestThreadExitForAllThreadsWithThisName(nameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDC3914A99B4A5FDF | Since: 1207
 *
 * @deprecated Use scripts.restoreGlobalBlock() instead
 */
export declare function restoreGlobalBlock(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x11986B05885564D2 | Since: 1207
 *
 * @deprecated Use scripts.setAllGlobalBlocksHaveBeenLoaded() instead
 */
export declare function setAllGlobalBlocksHaveBeenLoaded(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x20F4CB76689ACDBC | Since: 1207
 *
 * @deprecated Use scripts.setAllPlayerBits() instead
 */
export declare function setAllPlayerBits(value: any): void;
/**
 * No comment provided
 *
 * Hash: 0xE66F392BFCE734AF | Since: 1207
 *
 * @deprecated Use scripts.setGlobalBlockCanBeAccessed() instead
 */
export declare function setGlobalBlockCanBeAccessed(index: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x31010318BA9897AC | Since: 1207
 *
 * @deprecated Use scripts.setPlayerBitAtIndex() instead
 */
export declare function setPlayerBitAtIndex(value: any, bitIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB952A3AC41D58F2F | Since: 1207
 *
 * @deprecated Use scripts.storeGlobalBlock() instead
 */
export declare function storeGlobalBlock(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8B61C950A148FFA2 | Since: 1207
 *
 * @deprecated Use scripts.triggerScriptEvent2() instead
 */
export declare function triggerScriptEvent2(eventData: any, eventDataSize: number, scriptMetadataIndex: number, threadId: number): void;
/**
 * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
 *
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 *
 * enum eShapeTestStatus
 * {
 * SHAPETEST_STATUS_NONEXISTENT,
 * SHAPETEST_STATUS_RESULTS_NOTREADY,
 * SHAPETEST_STATUS_RESULTS_READY
 * };
 *
 * Hash: 0xEDE8AC7C5108FB1D | Since: 1207
 *
 * @deprecated Use shapetest.getShapeTestResult() instead
 */
export declare function getShapeTestResult(shapeTestHandle: number, hit: boolean, endCoords: Vector3, surfaceNormal: Vector3, entityHit: number | Entity): number;
/**
 * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
 *
 * Hash: 0x377906D8A31E5586 | Since: 1207
 *
 * @deprecated Use shapetest.startExpensiveSynchronousShapeTestLosProbe() instead
 */
export declare function startExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entityToIgnore: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xFE466162C4401D18 | Since: 1207
 *
 * @deprecated Use shapetest.startShapeTestBox() instead
 */
export declare function startShapeTestBox(pos: Vector3, dimensionsX: number, dimensionsY: number, dimensionsZ: number, rot: Vector3, rotationOrder: number, flags: number, entityToIgnore: number | Entity, options: number): number;
/**
 * No comment provided
 *
 * Hash: 0x28579D1B8F8AAC80 | Since: 1207
 *
 * @deprecated Use shapetest.startShapeTestCapsule() instead
 */
export declare function startShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entityToIgnore: number | Entity): number;
/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 *
 * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
 *
 * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used. flags used are mostly 83 and 3167
 *
 * Hash: 0x7EE9F5D83DD4F90E | Since: 1207
 *
 * @deprecated Use shapetest.startShapeTestLosProbe() instead
 */
export declare function startShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
/**
 * Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
 *
 * Hash: 0x9839013D8B6014F1 | Since: 1207
 *
 * @deprecated Use shapetest.startShapeTestMouseCursorLosProbe() instead
 */
export declare function startShapeTestMouseCursorLosProbe(pVec1: Vector3, pVec2: Vector3, flag: number, entity: number | Entity, flag2: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAA5B7C8309F73230 | Since: 1207
 *
 * @deprecated Use shapetest.startShapeTestSweptSphere() instead
 */
export declare function startShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x04AA59CA40571C2E | Since: 1207
 *
 * @deprecated Use shapetest._0x04AA59CA40571C2E() instead
 */
export declare function _0x04AA59CA40571C2E(): any;
/**
 * No comment provided
 *
 * Hash: 0x89D9BDE7334B110F | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetDisplayName() instead
 */
export declare function scCommunityEventGetDisplayName(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x11EA52CAD1B55910 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetDisplayNameById() instead
 */
export declare function scCommunityEventGetDisplayNameById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85EA0BEC7B1F7622 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetDisplayNameForType() instead
 */
export declare function scCommunityEventGetDisplayNameForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD635DF6BAA5A6017 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetEventId() instead
 */
export declare function scCommunityEventGetEventId(): number;
/**
 * No comment provided
 *
 * Hash: 0x03C03ABBABBEF752 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetEventIdForType() instead
 */
export declare function scCommunityEventGetEventIdForType(): number;
/**
 * No comment provided
 *
 * Hash: 0x060BBAD634C2B44B | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloat() instead
 */
export declare function scCommunityEventGetExtraDataFloat(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x91C9E2A0F9DD6DD4 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloatById() instead
 */
export declare function scCommunityEventGetExtraDataFloatById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1BDB56DB258F052D | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloatForType() instead
 */
export declare function scCommunityEventGetExtraDataFloatForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4411D4D6B81438E | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataInt() instead
 */
export declare function scCommunityEventGetExtraDataInt(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7C981DE05A7403A0 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataIntById() instead
 */
export declare function scCommunityEventGetExtraDataIntById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3519CC3525319A96 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataIntForType() instead
 */
export declare function scCommunityEventGetExtraDataIntForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9F6DCD0C939C71E9 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataString() instead
 */
export declare function scCommunityEventGetExtraDataString(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x049D2196D9D11184 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataStringById() instead
 */
export declare function scCommunityEventGetExtraDataStringById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8FC3B2432E8229D | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventGetExtraDataStringForType() instead
 */
export declare function scCommunityEventGetExtraDataStringForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCBF743C984695CF3 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventIsActive() instead
 */
export declare function scCommunityEventIsActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62B384FEFDE06817 | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventIsActiveById() instead
 */
export declare function scCommunityEventIsActiveById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x09937EB0CEBC2F9F | Since: 1207
 *
 * @deprecated Use socialclub.scCommunityEventIsActiveForType() instead
 */
export declare function scCommunityEventIsActiveForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74CF39E030A382C4 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxGetMessageIsReadAtIndex() instead
 */
export declare function scInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF92537C4DDC1241 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxGetMessageTypeAtIndex() instead
 */
export declare function scInboxGetMessageTypeAtIndex(msgIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x8EF0F633280C0663 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxGetTotalNumMessages() instead
 */
export declare function scInboxGetTotalNumMessages(): number;
/**
 * No comment provided
 *
 * Hash: 0x95BB39C4DA99F348 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxMessageGetDataInt() instead
 */
export declare function scInboxMessageGetDataInt(context: string, out: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x66F77FD58506FF6B | Since: 1207
 *
 * @deprecated Use socialclub.scInboxMessageGetDataString() instead
 */
export declare function scInboxMessageGetDataString(context: string, out: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x176D077685CD83E4 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxMessageGetRawTypeAtIndex() instead
 */
export declare function scInboxMessageGetRawTypeAtIndex(): string;
/**
 * No comment provided
 *
 * Hash: 0x63CAC501FFF66DC4 | Since: 1207
 *
 * @deprecated Use socialclub.scInboxSetMessageAsReadAtIndex() instead
 */
export declare function scInboxSetMessageAsReadAtIndex(msgIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA31DAFCDC33775E9 | Since: 1207
 *
 * @deprecated Use socialclub.scPresenceAttrSetFloat() instead
 */
export declare function scPresenceAttrSetFloat(attrHash: number | string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00000000467F4CAA | Since: 1207
 *
 * @deprecated Use socialclub.scPresenceAttrSetFloatEx() instead
 */
export declare function scPresenceAttrSetFloatEx(attrName: string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0000000085488C49 | Since: 1207
 *
 * @deprecated Use socialclub.scPresenceAttrSetIntEx() instead
 */
export declare function scPresenceAttrSetIntEx(attrName: string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00000000EB2D93B3 | Since: 1207
 *
 * @deprecated Use socialclub.scPresenceAttrSetStringEx() instead
 */
export declare function scPresenceAttrSetStringEx(attrName: string, value: string): boolean;
/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 *
 * Hash: 0x9C74AC9D87B3FFF4 | Since: 1207
 *
 * @deprecated Use socialclub.scProfanityCheckString() instead
 */
export declare function scProfanityCheckString(string: string, token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A10BCD0C8AA0B82 | Since: 1207
 *
 * @deprecated Use socialclub.scProfanityGetCheckIsPending() instead
 */
export declare function scProfanityGetCheckIsPending(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x08C8052AF40C4247 | Since: 1207
 *
 * @deprecated Use socialclub.scProfanityGetCheckIsValid() instead
 */
export declare function scProfanityGetCheckIsValid(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF302973BB8BE70E6 | Since: 1207
 *
 * @deprecated Use socialclub.scProfanityGetStringPassed() instead
 */
export declare function scProfanityGetStringPassed(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CF3BFB99EBBE5B1 | Since: 1207
 *
 * @deprecated Use socialclub.scProfanityGetStringStatus() instead
 */
export declare function scProfanityGetStringStatus(token: number): number;
/**
 * No comment provided
 *
 * Hash: 0x068332D20CB6F897 | Since: 1232
 *
 * @deprecated Use socialclubfeed.scFeedHubHasNewData() instead
 */
export declare function scFeedHubHasNewData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFB64240F6B17817 | Since: 1207
 *
 * @deprecated Use socialclubfeed.scFeedSubmitPresetMessage() instead
 */
export declare function scFeedSubmitPresetMessage(type: number, subType: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC98BEF | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyGetNextPendingBuyAction() instead
 */
export declare function spactionproxyGetNextPendingBuyAction(data: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC97BEF | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyGetNextPendingCraftingAction() instead
 */
export declare function spactionproxyGetNextPendingCraftingAction(data: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC91BEC | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyManagerIsFailed() instead
 */
export declare function spactionproxyManagerIsFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC91BED | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyManagerIsReady() instead
 */
export declare function spactionproxyManagerIsReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC94BEF | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyProcessAction() instead
 */
export declare function spactionproxyProcessAction(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC91BEE | Since: 1207
 *
 * @deprecated Use spactionproxy.spactionproxyStartManager() instead
 */
export declare function spactionproxyStartManager(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x808712E428F697B8 | Since: 1232
 *
 * @deprecated Use stats.chalAchievementGetProgressInt() instead
 */
export declare function chalAchievementGetProgressInt(): number;
/**
 * No comment provided
 *
 * Hash: 0x77B97A827739D434 | Since: 1232
 *
 * @deprecated Use stats.chalAchievementIsComplete() instead
 */
export declare function chalAchievementIsComplete(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x86922D8C02FB7703 | Since: 1207
 *
 * @deprecated Use stats.chalAddGoalProgressFloat() instead
 */
export declare function chalAddGoalProgressFloat(chalHash: number | string, goalHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x86922D8C02FB7705 | Since: 1232
 *
 * @deprecated Use stats.chalAddGoalProgressFloatByScoreId() instead
 */
export declare function chalAddGoalProgressFloatByScoreId(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDDBD560745B1EE9A | Since: 1207
 *
 * @deprecated Use stats.chalAddGoalProgressInt() instead
 */
export declare function chalAddGoalProgressInt(chalHash: number | string, goalHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDDBD560745B1EE9C | Since: 1207
 *
 * @deprecated Use stats.chalAddGoalProgressIntByScoreId() instead
 */
export declare function chalAddGoalProgressIntByScoreId(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x58CB53DB63F84DEA | Since: 1207
 *
 * @deprecated Use stats.chalGetMaxRanks() instead
 */
export declare function chalGetMaxRanks(chalHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x58CB53DB63F84DE9 | Since: 1207
 *
 * @deprecated Use stats.chalGetNumRanksCompleted() instead
 */
export declare function chalGetNumRanksCompleted(chalHash: number | string): number;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
 *
 * Hash: 0x04DAC3929796EB87 | Since: 1207
 *
 * @deprecated Use stats.chalIsGoalActive() instead
 */
export declare function chalIsGoalActive(chalHash: number | string, goalHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x97E18E7C098626DE | Since: 1207
 *
 * @deprecated Use stats.chalMissionAddGoalProgressInt() instead
 */
export declare function chalMissionAddGoalProgressInt(missionHash: number | string, goalHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B0576DD3A75E58D | Since: 1207
 *
 * @deprecated Use stats.chalMissionGetNumGoals() instead
 */
export declare function chalMissionGetNumGoals(missionHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA785A52B59B7E7B2 | Since: 1207
 *
 * @deprecated Use stats.chalMissionGetNumGoalsComplete() instead
 */
export declare function chalMissionGetNumGoalsComplete(missionHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC0BB774787BBF301 | Since: 1207
 *
 * @deprecated Use stats.chalMissionIsGoalComplete() instead
 */
export declare function chalMissionIsGoalComplete(missionHash: number | string, goalHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4ABF7E4DB6279E8F | Since: 1207
 *
 * @deprecated Use stats.chalNetStartChal() instead
 */
export declare function chalNetStartChal(chalHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC3FCB47344DCB638 | Since: 1207
 *
 * @deprecated Use stats.chalNetStartGoal() instead
 */
export declare function chalNetStartGoal(chalHash: number | string, goalHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x43B0163154A50C86 | Since: 1207
 *
 * @deprecated Use stats.chalNetStopChal() instead
 */
export declare function chalNetStopChal(chalHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x00CE6A93324A590B | Since: 1207
 *
 * @deprecated Use stats.chalNetStopGoal() instead
 */
export declare function chalNetStopGoal(chalHash: number | string, goalHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF63DF9EE16393343 | Since: 1436
 *
 * @deprecated Use stats.chalSetGoalDisabled() instead
 */
export declare function chalSetGoalDisabled(chalHash: number | string, goalHash: number | string, disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDDBD560745B1EE9B | Since: 1207
 *
 * @deprecated Use stats.chalSetGoalProgressInt() instead
 */
export declare function chalSetGoalProgressInt(chalHash: number | string, goalHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB2A38826E5886E83 | Since: 1207
 *
 * @deprecated Use stats.statstrackerDeedStarted() instead
 */
export declare function statstrackerDeedStarted(): void;
/**
 * No comment provided
 *
 * Hash: 0x01F4D242765C6B24 | Since: 1207
 *
 * @deprecated Use stats.statstrackerIsInitialized() instead
 */
export declare function statstrackerIsInitialized(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6B1044FDC2B09101 | Since: 1207
 *
 * @deprecated Use stats.statAddBountyTarget() instead
 */
export declare function statAddBountyTarget(unlockHash: number | string, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x262EF7CF49CF1EB9 | Since: 1207
 *
 * @deprecated Use stats.statBountyCaptured() instead
 */
export declare function statBountyCaptured(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB22F05732F72F70C | Since: 1207
 *
 * @deprecated Use stats.statBountyEscaped() instead
 */
export declare function statBountyEscaped(ped: number | Ped): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x11B5E6D2AE73F48F | Since: 1207
 *
 * @deprecated Use stats.statIdGetBool() instead
 */
export declare function statIdGetBool(statId: any, value: boolean): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x8B0FACEFC36C824C | Since: 1207
 *
 * @deprecated Use stats.statIdGetDate() instead
 */
export declare function statIdGetDate(statId: any, date: any): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0xD7AE6C9C9C6AC54D | Since: 1207
 *
 * @deprecated Use stats.statIdGetFloat() instead
 */
export declare function statIdGetFloat(statId: any, value: number): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x767FBC2AC802EF3E | Since: 1207
 *
 * @deprecated Use stats.statIdGetInt() instead
 */
export declare function statIdGetInt(statId: any): boolean;
/**
 * struct StatId
 * {
 * alignas(8) Hash BaseId;
 * alignas(8) Hash PermutationId;
 * }
 *
 * Hash: 0xC48FE1971C9743FF | Since: 1207
 *
 * @deprecated Use stats.statIdIsValid() instead
 */
export declare function statIdIsValid(statId: any): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x3B5107353267D7A1 | Since: 1207
 *
 * @deprecated Use stats.statIdSetBool() instead
 */
export declare function statIdSetBool(statId: any, value: boolean): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x1FAE9B2FAA2DFE06 | Since: 1207
 *
 * @deprecated Use stats.statIdSetDate() instead
 */
export declare function statIdSetDate(statId: any, date: any): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x481BDF6A10C5EF68 | Since: 1207
 *
 * @deprecated Use stats.statIdSetFloat() instead
 */
export declare function statIdSetFloat(statId: any, value: number): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x05060A54834F2382 | Since: 1207
 *
 * @deprecated Use stats.statIdSetGxtLabel() instead
 */
export declare function statIdSetGxtLabel(statId: any, label: string): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0xA4DDF5DF95E65EEE | Since: 1207
 *
 * @deprecated Use stats.statIdSetInt() instead
 */
export declare function statIdSetInt(statId: any, value: number): boolean;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x34B22DE38477EDB4 | Since: 1207
 *
 * @deprecated Use stats.statIdSetToPosseId() instead
 */
export declare function statIdSetToPosseId(statId: any): void;
/**
 * No comment provided
 *
 * Hash: 0x4D31051A4CA83787 | Since: 1311
 *
 * @deprecated Use stats.statPhotographTaken() instead
 */
export declare function statPhotographTaken(itemset: any): void;
/**
 * No comment provided
 *
 * Hash: 0xCD0D69C65BB0E8B9 | Since: 1311
 *
 * @deprecated Use stats.statRegisterLegendaryAnimalDeed() instead
 */
export declare function statRegisterLegendaryAnimalDeed(deedHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xBA61BA6205A3F5A8 | Since: 1207
 *
 * @deprecated Use stats.weeklyCollectibleGetItemInSet() instead
 */
export declare function weeklyCollectibleGetItemInSet(chalHash: number | string, setIndex: number, itemIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x610783F646894D25 | Since: 1207
 *
 * @deprecated Use stats.weeklyCollectibleGetItemSetBuyAward() instead
 */
export declare function weeklyCollectibleGetItemSetBuyAward(chalHash: number | string, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBFFA88522FF0F730 | Since: 1207
 *
 * @deprecated Use stats.weeklyCollectibleGetItemSetLabel() instead
 */
export declare function weeklyCollectibleGetItemSetLabel(chalHash: number | string, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x7D675C9DDDB365BE | Since: 1207
 *
 * @deprecated Use stats.weeklyCollectibleGetNumItemsInSet() instead
 */
export declare function weeklyCollectibleGetNumItemsInSet(chalHash: number | string, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x8F5317729F791D10 | Since: 1207
 *
 * @deprecated Use stats.weeklyCollectibleGetNumSets() instead
 */
export declare function weeklyCollectibleGetNumSets(chalHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x025E98E317652CDD | Since: 1207
 *
 * @deprecated Use stats._0x025E98E317652CDD() instead
 */
export declare function _0x025E98E317652CDD(): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x0FEE2561120F3333 | Since: 1207
 *
 * @deprecated Use stats._0x0FEE2561120F3333() instead
 */
export declare function _0x0FEE2561120F3333(statId: any): void;
/**
 * No comment provided
 *
 * Hash: 0x218F7710A139D012 | Since: 1207
 *
 * @deprecated Use stats._0x218F7710A139D012() instead
 */
export declare function _0x218F7710A139D012(): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x302E71C1D9EE75B9 | Since: 1207
 *
 * @deprecated Use stats._0x302E71C1D9EE75B9() instead
 */
export declare function _0x302E71C1D9EE75B9(statId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x378D3B1B11D9385B | Since: 1207
 *
 * @deprecated Use stats._0x378D3B1B11D9385B() instead
 */
export declare function _0x378D3B1B11D9385B(): void;
/**
 * No comment provided
 *
 * Hash: 0x3AEABAE3F3C7600C | Since: 1207
 *
 * @deprecated Use stats._0x3AEABAE3F3C7600C() instead
 */
export declare function _0x3AEABAE3F3C7600C(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3EB2791A1FBC8A42 | Since: 1207
 *
 * @deprecated Use stats._0x3EB2791A1FBC8A42() instead
 */
export declare function _0x3EB2791A1FBC8A42(statItem: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3F6FD87D2030ADC6 | Since: 1207
 *
 * @deprecated Use stats._0x3F6FD87D2030ADC6() instead
 */
export declare function _0x3F6FD87D2030ADC6(): string;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x4DAC398297981B87 | Since: 1207
 *
 * @deprecated Use stats._0x4DAC398297981B87() instead
 */
export declare function _0x4DAC398297981B87(): boolean;
/**
 * Only used in R* Script net_char_creator
 *
 * Hash: 0x4E463A3CDEFFFE96 | Since: 1207
 *
 * @deprecated Use stats._0x4E463A3CDEFFFE96() instead
 */
export declare function _0x4E463A3CDEFFFE96(): void;
/**
 * Only used in R* Script net_char_creator
 *
 * Hash: 0x4F2D5FA23DB992DE | Since: 1207
 *
 * @deprecated Use stats._0x4F2D5FA23DB992DE() instead
 */
export declare function _0x4F2D5FA23DB992DE(): void;
/**
 * No comment provided
 *
 * Hash: 0x4FCBCC0584CD08E9 | Since: 1207
 *
 * @deprecated Use stats._0x4FCBCC0584CD08E9() instead
 */
export declare function _0x4FCBCC0584CD08E9(): void;
/**
 * No comment provided
 *
 * Hash: 0x6123E2832C34243D | Since: 1207
 *
 * @deprecated Use stats._0x6123E2832C34243D() instead
 */
export declare function _0x6123E2832C34243D(): void;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x8312F09C56149A8A | Since: 1207
 *
 * @deprecated Use stats._0x8312F09C56149A8A() instead
 */
export declare function _0x8312F09C56149A8A(animalType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x8BA3D7B1E83EF803 | Since: 1207
 *
 * @deprecated Use stats._0x8BA3D7B1E83EF803() instead
 */
export declare function _0x8BA3D7B1E83EF803(): number;
/**
 * No comment provided
 *
 * Hash: 0x8C889E4CBB4B2356 | Since: 1207
 *
 * @deprecated Use stats._0x8C889E4CBB4B2356() instead
 */
export declare function _0x8C889E4CBB4B2356(ped: number | Ped): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x91A4F58E01ED5E4C | Since: 1207
 *
 * @deprecated Use stats._0x91A4F58E01ED5E4C() instead
 */
export declare function _0x91A4F58E01ED5E4C(statId: any, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x99230691875FC218 | Since: 1207
 *
 * @deprecated Use stats._0x99230691875FC218() instead
 */
export declare function _0x99230691875FC218(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x9D0F5D2E1951CD84 | Since: 1207
 *
 * @deprecated Use stats._0x9D0F5D2E1951CD84() instead
 */
export declare function _0x9D0F5D2E1951CD84(): number;
/**
 * No comment provided
 *
 * Hash: 0xA2E2BEA4E83F6270 | Since: 1207
 *
 * @deprecated Use stats._0xA2E2BEA4E83F6270() instead
 */
export declare function _0xA2E2BEA4E83F6270(): any;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0xA59590050F80FF2E | Since: 1207
 *
 * @deprecated Use stats._0xA59590050F80FF2E() instead
 */
export declare function _0xA59590050F80FF2E(): void;
/**
 * No comment provided
 *
 * Hash: 0xA596890CF55B5095 | Since: 1436
 *
 * @deprecated Use stats._0xA596890CF55B5095() instead
 */
export declare function _0xA596890CF55B5095(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB112B9262EC29C20 | Since: 1207
 *
 * @deprecated Use stats._0xB112B9262EC29C20() instead
 */
export declare function _0xB112B9262EC29C20(): string;
/**
 * No comment provided
 *
 * Hash: 0xB5E2EDA2135E0FA1 | Since: 1207
 *
 * @deprecated Use stats._0xB5E2EDA2135E0FA1() instead
 */
export declare function _0xB5E2EDA2135E0FA1(scheduleLocation: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE66B26B6529E943 | Since: 1311
 *
 * @deprecated Use stats._0xBE66B26B6529E943() instead
 */
export declare function _0xBE66B26B6529E943(unlockHash: number | string, ped: number | Ped, animalType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xCA1F0B5103936891 | Since: 1207
 *
 * @deprecated Use stats._0xCA1F0B5103936891() instead
 */
export declare function _0xCA1F0B5103936891(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA41E86545413B5B | Since: 1207
 *
 * @deprecated Use stats._0xCA41E86545413B5B() instead
 */
export declare function _0xCA41E86545413B5B(): void;
/**
 * No comment provided
 *
 * Hash: 0xD64DBC8B0424135F | Since: 1207
 *
 * @deprecated Use stats._0xD64DBC8B0424135F() instead
 */
export declare function _0xD64DBC8B0424135F(ped: number | Ped, animalType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDA26263C07CCE9C2 | Since: 1207
 *
 * @deprecated Use stats._0xDA26263C07CCE9C2() instead
 */
export declare function _0xDA26263C07CCE9C2(): void;
/**
 * No comment provided
 *
 * Hash: 0xDDBD560745B1EE98 | Since: 1207
 *
 * @deprecated Use stats._0xDDBD560745B1EE98() instead
 */
export declare function _0xDDBD560745B1EE98(chalHash: number | string, goalHash: number | string, player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xDF95DF488A645CE7 | Since: 1207
 *
 * @deprecated Use stats._0xDF95DF488A645CE7() instead
 */
export declare function _0xDF95DF488A645CE7(): void;
/**
 * statId: see STAT_ID_IS_VALID
 * Only used in R* SP Scripts
 * _STAT_ID_SET_*
 *
 * Hash: 0xE141F6B40B1E3683 | Since: 1207
 *
 * @deprecated Use stats._0xE141F6B40B1E3683() instead
 */
export declare function _0xE141F6B40B1E3683(statId: any, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE5A680A5D8B1F687 | Since: 1207
 *
 * @deprecated Use stats._0xE5A680A5D8B1F687() instead
 */
export declare function _0xE5A680A5D8B1F687(): void;
/**
 * No comment provided
 *
 * Hash: 0xF21A5D66874FCEDD | Since: 1207
 *
 * @deprecated Use stats._0xF21A5D66874FCEDD() instead
 */
export declare function _0xF21A5D66874FCEDD(): void;
/**
 * No comment provided
 *
 * Hash: 0xF2B5ABDE09958689 | Since: 1311
 *
 * @deprecated Use stats._0xF2B5ABDE09958689() instead
 */
export declare function _0xF2B5ABDE09958689(unlockHash: number | string, ped1: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF8181B5EF156862C | Since: 1207
 *
 * @deprecated Use stats._0xF8181B5EF156862C() instead
 */
export declare function _0xF8181B5EF156862C(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD5910ECF81A2278C | Since: 1207
 *
 * @deprecated Use stats.statstrackerDeedStatus() instead
 */
export declare function statstrackerDeedStatus(deedType: number, deedHash: number | string, missionStatus: number, data: any): void;
/**
 * Related to animal tagging
 *
 * Hash: 0x90E9A5DADBABC918 | Since: 1355
 *
 * @deprecated Use stats.statAddAnimalSampleTarget() instead
 */
export declare function statAddAnimalSampleTarget(animalType: number | string): void;
/**
 * Calculation: (value / 1000) / 60 % 60
 *
 * Hash: 0x1E7384AB5D4F4581 | Since: 1207
 *
 * @deprecated Use stats.statCalculateCooldown() instead
 */
export declare function statCalculateCooldown(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x831BF01C56149A8A | Since: 1207
 *
 * @deprecated Use stats.statCarriedSatchelItemFromPed() instead
 */
export declare function statCarriedSatchelItemFromPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7C2ABF6E556B21FC | Since: 1207
 *
 * @deprecated Use stats.statDonateIncrementItem() instead
 */
export declare function statDonateIncrementItem(item: number, slot: number): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0xBD861AE8A5181ED7 | Since: 1207
 *
 * @deprecated Use stats.statIdDecrementInt() instead
 */
export declare function statIdDecrementInt(statId: any, value: number): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x4A47E38EA3D60939 | Since: 1207
 *
 * @deprecated Use stats.statIdIncrementFloat() instead
 */
export declare function statIdIncrementFloat(statId: any, value: number): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x6A0184E904CDF25E | Since: 1207
 *
 * @deprecated Use stats.statIdIncrementInt() instead
 */
export declare function statIdIncrementInt(statId: any, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDA26263C87CCE9C1 | Since: 1207
 *
 * @deprecated Use stats.statItemFishCaught() instead
 */
export declare function statItemFishCaught(fish: number | Ped, weight: number, category: number | string, subcategory: number | string): void;
/**
 * statId: see STAT_ID_IS_VALID
 *
 * Hash: 0x5420D398A42917FC | Since: 1311
 *
 * @deprecated Use stats.statPheromoneCooldownLegendaryAnimal() instead
 */
export declare function statPheromoneCooldownLegendaryAnimal(entity: number | Entity, statId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0360710033BE60D9 | Since: 1207
 *
 * @deprecated Use streaming.beginSrl() instead
 */
export declare function beginSrl(): void;
/**
 * No comment provided
 *
 * Hash: 0x86CCAF7CE493EFBE | Since: 1207
 *
 * @deprecated Use streaming.clearFocus() instead
 */
export declare function clearFocus(): void;
/**
 * No comment provided
 *
 * Hash: 0xD83B22434E52728D | Since: 1207
 *
 * @deprecated Use streaming.clearHdArea() instead
 */
export declare function clearHdArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x537F44CB0D7F150D | Since: 1207
 *
 * @deprecated Use streaming.doesAnimDictExist() instead
 */
export declare function doesAnimDictExist(animDict: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1CE71FB33CA079FE | Since: 1207
 *
 * @deprecated Use streaming.endSrl() instead
 */
export declare function endSrl(): void;
/**
 * No comment provided
 *
 * Hash: 0x30CCCC4D88E654CA | Since: 1207
 *
 * @deprecated Use streaming.getNumberOfStreamingRequests() instead
 */
export declare function getNumberOfStreamingRequests(): number;
/**
 * No comment provided
 *
 * Hash: 0x8A3945405B31048F | Since: 1207
 *
 * @deprecated Use streaming.getPopulationBudgetMultiplier() instead
 */
export declare function getPopulationBudgetMultiplier(): number;
/**
 * No comment provided
 *
 * Hash: 0x27FF6FE8009B40CA | Since: 1207
 *
 * @deprecated Use streaming.hasAnimDictLoaded() instead
 */
export declare function hasAnimDictLoaded(animDict: string): boolean;
/**
 * Alias for HAS_ANIM_SET_LOADED.
 *
 * Hash: 0x1F23D6B6DA1CC3B2 | Since: 1207
 *
 * @deprecated Use streaming.hasClipSetLoaded() instead
 */
export declare function hasClipSetLoaded(clipSet: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x210A79C9EC89778F | Since: 1207
 *
 * @deprecated Use streaming.hasCollisionForModelLoaded() instead
 */
export declare function hasCollisionForModelLoaded(model: number | string): boolean;
/**
 * Checks if the specified model has loaded into memory.
 *
 * Hash: 0x1283B8B89DD5D1B6 | Since: 1207
 *
 * @deprecated Use streaming.hasModelLoaded() instead
 */
export declare function hasModelLoaded(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2C04D89A0FB4E244 | Since: 1207
 *
 * @deprecated Use streaming.hasMoveNetworkDefLoaded() instead
 */
export declare function hasMoveNetworkDefLoaded(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x65BB72F29138F5D6 | Since: 1207
 *
 * @deprecated Use streaming.hasNamedPtfxAssetLoaded() instead
 */
export declare function hasNamedPtfxAssetLoaded(fxNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x13A3F30A9ED0BC31 | Since: 1207
 *
 * @deprecated Use streaming.hasPtfxAssetLoaded() instead
 */
export declare function hasPtfxAssetLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x31108BB5715D035F | Since: 1207
 *
 * @deprecated Use streaming.iplGroupSwapCancel() instead
 */
export declare function iplGroupSwapCancel(): void;
/**
 * No comment provided
 *
 * Hash: 0x040EE319EFD1D3B5 | Since: 1207
 *
 * @deprecated Use streaming.iplGroupSwapFinish() instead
 */
export declare function iplGroupSwapFinish(): void;
/**
 * No comment provided
 *
 * Hash: 0xFC464598F6EE97B0 | Since: 1207
 *
 * @deprecated Use streaming.iplGroupSwapIsActive() instead
 */
export declare function iplGroupSwapIsActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC2C05DEFE85A0B64 | Since: 1207
 *
 * @deprecated Use streaming.iplGroupSwapIsReady() instead
 */
export declare function iplGroupSwapIsReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x20D504994FDC4412 | Since: 1207
 *
 * @deprecated Use streaming.iplGroupSwapStart() instead
 */
export declare function iplGroupSwapStart(iplName1: string, iplName2: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF87DE697E9A06EC6 | Since: 1207
 *
 * @deprecated Use streaming.isEntityFocus() instead
 */
export declare function isEntityFocus(entity: number | Entity): boolean;
/**
 * Old name: _IS_IMAP_ACTIVE_2
 *
 * Hash: 0x93AC1B91CB6D9913 | Since: 1207
 *
 * @deprecated Use streaming.isIplActiveByHash() instead
 */
export declare function isIplActiveByHash(iplHash: number | string): boolean;
/**
 * Old name: _IS_IMAP_ACTIVE
 *
 * Hash: 0xD779B9B910BD3B7C | Since: 1207
 *
 * @deprecated Use streaming.isIplActiveHash() instead
 */
export declare function isIplActiveHash(iplHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF45DF50C7775F2A | Since: 1207
 *
 * @deprecated Use streaming.isLoadSceneActive() instead
 */
export declare function isLoadSceneActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0909F71B5C070797 | Since: 1207
 *
 * @deprecated Use streaming.isLoadSceneLoaded() instead
 */
export declare function isLoadSceneLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC3F09DE9D6D17DDA | Since: 1207
 *
 * @deprecated Use streaming.isModelAPed() instead
 */
export declare function isModelAPed(model: number | string): boolean;
/**
 * Returns whether the specified model represents a vehicle.
 *
 * Hash: 0x354F62672DE7DB0A | Since: 1207
 *
 * @deprecated Use streaming.isModelAVehicle() instead
 */
export declare function isModelAVehicle(model: number | string): boolean;
/**
 * Returns whether the specified model exists in the game.
 *
 * Hash: 0xD6F3B6D7716CFF8E | Since: 1207
 *
 * @deprecated Use streaming.isModelInCdimage() instead
 */
export declare function isModelInCdimage(model: number | string): boolean;
/**
 * Returns whether the specified model is valid
 *
 * Hash: 0x392C8D8E07B70EFC | Since: 1207
 *
 * @deprecated Use streaming.isModelValid() instead
 */
export declare function isModelValid(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xED20CB1F5297791D | Since: 1207
 *
 * @deprecated Use streaming.isPlayerSwitchInProgress() instead
 */
export declare function isPlayerSwitchInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x45BF3A6239A576B7 | Since: 1207
 *
 * @deprecated Use streaming.isRenderedSceneLoaded() instead
 */
export declare function isRenderedSceneLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C2C88512CF6DAFB | Since: 1207
 *
 * @deprecated Use streaming.isSrlLoaded() instead
 */
export declare function isSrlLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x387AD749E3B69B70 | Since: 1207
 *
 * @deprecated Use streaming.loadSceneStart() instead
 */
export declare function loadSceneStart(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number, radius: number, controlFlags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x513F8AA5BF2F17CF | Since: 1207
 *
 * @deprecated Use streaming.loadSceneStartSphere() instead
 */
export declare function loadSceneStartSphere(pos: Vector3, radius: number, controlFlags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A8B01199C3E79C3 | Since: 1207
 *
 * @deprecated Use streaming.loadSceneStop() instead
 */
export declare function loadSceneStop(): void;
/**
 * No comment provided
 *
 * Hash: 0x354837E5A5BAA5AF | Since: 1207
 *
 * @deprecated Use streaming.prefetchSrl() instead
 */
export declare function prefetchSrl(srl: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4763145053A33D46 | Since: 1207
 *
 * @deprecated Use streaming.removeAnimDict() instead
 */
export declare function removeAnimDict(animDict: string): void;
/**
 * Alias for REMOVE_ANIM_SET.
 *
 * Hash: 0x817FA1B1EE7CD6F0 | Since: 1207
 *
 * @deprecated Use streaming.removeClipSet() instead
 */
export declare function removeClipSet(clipSet: string): void;
/**
 * Old name: _REMOVE_IMAP_2
 *
 * Hash: 0x431E3AB760629B34 | Since: 1207
 *
 * @deprecated Use streaming.removeIplByHash() instead
 */
export declare function removeIplByHash(iplHash: number | string): void;
/**
 * Old name: _REMOVE_IMAP
 *
 * Hash: 0x5A3E5CF7B4014B96 | Since: 1207
 *
 * @deprecated Use streaming.removeIplHash() instead
 */
export declare function removeIplHash(iplHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x57A197AD83F66BBF | Since: 1207
 *
 * @deprecated Use streaming.removeMoveNetworkDef() instead
 */
export declare function removeMoveNetworkDef(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF20866829E1C81A2 | Since: 1207
 *
 * @deprecated Use streaming.removeNamedPtfxAsset() instead
 */
export declare function removeNamedPtfxAsset(fxNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x042F9049EA419E86 | Since: 1207
 *
 * @deprecated Use streaming.removePtfxAsset() instead
 */
export declare function removePtfxAsset(): void;
/**
 * No comment provided
 *
 * Hash: 0x83A8D71650D1894F | Since: 1311
 *
 * @deprecated Use streaming.requestAdditionalCollisionAtCoord() instead
 */
export declare function requestAdditionalCollisionAtCoord(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xA862A2AD321F94B4 | Since: 1207
 *
 * @deprecated Use streaming.requestAnimDict() instead
 */
export declare function requestAnimDict(animDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0xEF7611B57A820126 | Since: 1207
 *
 * @deprecated Use streaming.requestClipSet() instead
 */
export declare function requestClipSet(clipSet: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0A3720F162A033C9 | Since: 1207
 *
 * @deprecated Use streaming.requestCollisionAtCoord() instead
 */
export declare function requestCollisionAtCoord(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xF1767BE37F661551 | Since: 1207
 *
 * @deprecated Use streaming.requestCollisionForModel() instead
 */
export declare function requestCollisionForModel(model: number | string): void;
/**
 * Old name: _REQUEST_IMAP_2
 *
 * Hash: 0x9E211A378F95C97C | Since: 1207
 *
 * @deprecated Use streaming.requestIplByHash() instead
 */
export declare function requestIplByHash(iplHash: number | string): void;
/**
 * Old name: _REQUEST_IMAP
 *
 * Hash: 0x59767C5A7A9AE6DA | Since: 1207
 *
 * @deprecated Use streaming.requestIplHash() instead
 */
export declare function requestIplHash(iplHash: number | string): void;
/**
 * Request a model to be loaded into memory.
 *
 * Hash: 0xFA28FE3A6246FC30 | Since: 1207
 *
 * @deprecated Use streaming.requestModel() instead
 */
export declare function requestModel(model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2B6529C54D29037A | Since: 1207
 *
 * @deprecated Use streaming.requestMoveNetworkDef() instead
 */
export declare function requestMoveNetworkDef(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF2B2353BBC0D4E8F | Since: 1207
 *
 * @deprecated Use streaming.requestNamedPtfxAsset() instead
 */
export declare function requestNamedPtfxAsset(fxNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x001FF43843028E0C | Since: 1207
 *
 * @deprecated Use streaming.requestPtfxAsset() instead
 */
export declare function requestPtfxAsset(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x19ABCC581D28E6F9 | Since: 1207
 *
 * @deprecated Use streaming.setAllMapdataCulled() instead
 */
export declare function setAllMapdataCulled(): void;
/**
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 *
 * Hash: 0x955AEDD58F4BD309 | Since: 1207
 *
 * @deprecated Use streaming.setFocusEntity() instead
 */
export declare function setFocusEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x25F6EF88664540E2 | Since: 1207
 *
 * @deprecated Use streaming.setFocusPosAndVel() instead
 */
export declare function setFocusPosAndVel(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB3BC8250F4FE8B63 | Since: 1207
 *
 * @deprecated Use streaming.setGamePausesForStreaming() instead
 */
export declare function setGamePausesForStreaming(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB88B905AFA35CB4D | Since: 1207
 *
 * @deprecated Use streaming.setHdArea() instead
 */
export declare function setHdArea(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3CACC83F6FED837C | Since: 1207
 *
 * @deprecated Use streaming.setMapdatacullboxEnabled() instead
 */
export declare function setMapdatacullboxEnabled(name: string, toggle: boolean): void;
/**
 * Marks the model as no longer needed.
 *
 * Hash: 0x4AD96EF928BD4F9A | Since: 1207
 *
 * @deprecated Use streaming.setModelAsNoLongerNeeded() instead
 */
export declare function setModelAsNoLongerNeeded(model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2F9AC754FE179D58 | Since: 1207
 *
 * @deprecated Use streaming.setPopulationBudgetMultiplier() instead
 */
export declare function setPopulationBudgetMultiplier(fBudgetMultiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA03A6812529AD9C8 | Since: 1207
 *
 * @deprecated Use streaming.setSceneStreamingTracksCamPosThisFrame() instead
 */
export declare function setSceneStreamingTracksCamPosThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C907E8A725E5FD2 | Since: 1207
 *
 * @deprecated Use streaming.setSrlLongJumpMode() instead
 */
export declare function setSrlLongJumpMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xD346248C1DCE0D76 | Since: 1207
 *
 * @deprecated Use streaming.setSrlReadaheadTimes() instead
 */
export declare function setSrlReadaheadTimes(): void;
/**
 * No comment provided
 *
 * Hash: 0x18231AEF458BCFF2 | Since: 1207
 *
 * @deprecated Use streaming.setSrlTime() instead
 */
export declare function setSrlTime(): void;
/**
 * _SET_E* or _SET_F*
 *
 * Hash: 0x032A14D082A9B269 | Since: 1207
 *
 * @deprecated Use streaming._0x032A14D082A9B269() instead
 */
export declare function _0x032A14D082A9B269(): void;
/**
 * No comment provided
 *
 * Hash: 0x03DDBF2D73799F9E | Since: 1207
 *
 * @deprecated Use streaming._0x03DDBF2D73799F9E() instead
 */
export declare function _0x03DDBF2D73799F9E(): void;
/**
 * No comment provided
 *
 * Hash: 0x05DD384F39DE1C8C | Since: 1207
 *
 * @deprecated Use streaming._0x05DD384F39DE1C8C() instead
 */
export declare function _0x05DD384F39DE1C8C(): any;
/**
 * No comment provided
 *
 * Hash: 0x071769BCB24379E5 | Since: 1207
 *
 * @deprecated Use streaming._0x071769BCB24379E5() instead
 */
export declare function _0x071769BCB24379E5(): any;
/**
 * No comment provided
 *
 * Hash: 0x07559B29950301FF | Since: 1207
 *
 * @deprecated Use streaming._0x07559B29950301FF() instead
 */
export declare function _0x07559B29950301FF(): void;
/**
 * No comment provided
 *
 * Hash: 0x09FBF15D73EFC900 | Since: 1207
 *
 * @deprecated Use streaming._0x09FBF15D73EFC900() instead
 */
export declare function _0x09FBF15D73EFC900(): void;
/**
 * No comment provided
 *
 * Hash: 0x198B85CC3C7A4593 | Since: 1207
 *
 * @deprecated Use streaming._0x198B85CC3C7A4593() instead
 */
export declare function _0x198B85CC3C7A4593(): any;
/**
 * No comment provided
 *
 * Hash: 0x27AF48C62B281341 | Since: 1207
 *
 * @deprecated Use streaming._0x27AF48C62B281341() instead
 */
export declare function _0x27AF48C62B281341(): any;
/**
 * No comment provided
 *
 * Hash: 0x2A6D1DAAB9EBB262 | Since: 1207
 *
 * @deprecated Use streaming._0x2A6D1DAAB9EBB262() instead
 */
export declare function _0x2A6D1DAAB9EBB262(): any;
/**
 * No comment provided
 *
 * Hash: 0x2E24C27B112B5B12 | Since: 1311
 *
 * @deprecated Use streaming._0x2E24C27B112B5B12() instead
 */
export declare function _0x2E24C27B112B5B12(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F4D53023F826FF0 | Since: 1207
 *
 * @deprecated Use streaming._0x2F4D53023F826FF0() instead
 */
export declare function _0x2F4D53023F826FF0(): any;
/**
 * No comment provided
 *
 * Hash: 0x5288B7F0690F7C1F | Since: 1207
 *
 * @deprecated Use streaming._0x5288B7F0690F7C1F() instead
 */
export declare function _0x5288B7F0690F7C1F(): any;
/**
 * No comment provided
 *
 * Hash: 0x53764309C4618087 | Since: 1207
 *
 * @deprecated Use streaming._0x53764309C4618087() instead
 */
export declare function _0x53764309C4618087(): any;
/**
 * No comment provided
 *
 * Hash: 0x5D5E2102B174B8D2 | Since: 1207
 *
 * @deprecated Use streaming._0x5D5E2102B174B8D2() instead
 */
export declare function _0x5D5E2102B174B8D2(): any;
/**
 * No comment provided
 *
 * Hash: 0x62D5F0588915B277 | Since: 1207
 *
 * @deprecated Use streaming._0x62D5F0588915B277() instead
 */
export declare function _0x62D5F0588915B277(): void;
/**
 * No comment provided
 *
 * Hash: 0x66BC28E50E85270E | Since: 1207
 *
 * @deprecated Use streaming._0x66BC28E50E85270E() instead
 */
export declare function _0x66BC28E50E85270E(): any;
/**
 * No comment provided
 *
 * Hash: 0x6A6E79FBE8678C98 | Since: 1207
 *
 * @deprecated Use streaming._0x6A6E79FBE8678C98() instead
 */
export declare function _0x6A6E79FBE8678C98(): void;
/**
 * No comment provided
 *
 * Hash: 0x7B8C2B846C05E5AD | Since: 1207
 *
 * @deprecated Use streaming._0x7B8C2B846C05E5AD() instead
 */
export declare function _0x7B8C2B846C05E5AD(): any;
/**
 * No comment provided
 *
 * Hash: 0x80B3E0597366ADF1 | Since: 1207
 *
 * @deprecated Use streaming._0x80B3E0597366ADF1() instead
 */
export declare function _0x80B3E0597366ADF1(): void;
/**
 * No comment provided
 *
 * Hash: 0x85B8F04555AB49B8 | Since: 1207
 *
 * @deprecated Use streaming._0x85B8F04555AB49B8() instead
 */
export declare function _0x85B8F04555AB49B8(): any;
/**
 * No comment provided
 *
 * Hash: 0x8D56BDA343D9519F | Since: 1207
 *
 * @deprecated Use streaming._0x8D56BDA343D9519F() instead
 */
export declare function _0x8D56BDA343D9519F(): any;
/**
 * No comment provided
 *
 * Hash: 0x99F92061EFE908BA | Since: 1207
 *
 * @deprecated Use streaming._0x99F92061EFE908BA() instead
 */
export declare function _0x99F92061EFE908BA(): any;
/**
 * No comment provided
 *
 * Hash: 0x9F348DE670423460 | Since: 1207
 *
 * @deprecated Use streaming._0x9F348DE670423460() instead
 */
export declare function _0x9F348DE670423460(): void;
/**
 * No comment provided
 *
 * Hash: 0xA0AE7653E8181725 | Since: 1207
 *
 * @deprecated Use streaming._0xA0AE7653E8181725() instead
 */
export declare function _0xA0AE7653E8181725(): any;
/**
 * No comment provided
 *
 * Hash: 0xAE00387E53B1E9FC | Since: 1207
 *
 * @deprecated Use streaming._0xAE00387E53B1E9FC() instead
 */
export declare function _0xAE00387E53B1E9FC(): void;
/**
 * No comment provided
 *
 * Hash: 0xAFA87A7D41EE346A | Since: 1207
 *
 * @deprecated Use streaming._0xAFA87A7D41EE346A() instead
 */
export declare function _0xAFA87A7D41EE346A(): void;
/**
 * No comment provided
 *
 * Hash: 0xB223249B7798EEED | Since: 1207
 *
 * @deprecated Use streaming._0xB223249B7798EEED() instead
 */
export declare function _0xB223249B7798EEED(): any;
/**
 * Sorts some unknown data.
 *
 * Likely SORT_*
 *
 * Hash: 0xB9B9E47EDB9D63DB | Since: 1207
 *
 * @deprecated Use streaming._0xB9B9E47EDB9D63DB() instead
 */
export declare function _0xB9B9E47EDB9D63DB(): void;
/**
 * No comment provided
 *
 * Hash: 0xBE8DAA9D8D01DA6A | Since: 1207
 *
 * @deprecated Use streaming._0xBE8DAA9D8D01DA6A() instead
 */
export declare function _0xBE8DAA9D8D01DA6A(): void;
/**
 * No comment provided
 *
 * Hash: 0xCC61D8D6C19D9F14 | Since: 1207
 *
 * @deprecated Use streaming._0xCC61D8D6C19D9F14() instead
 */
export declare function _0xCC61D8D6C19D9F14(): void;
/**
 * No comment provided
 *
 * Hash: 0xD6E39DC5D46DF4AB | Since: 1207
 *
 * @deprecated Use streaming._0xD6E39DC5D46DF4AB() instead
 */
export declare function _0xD6E39DC5D46DF4AB(): any;
/**
 * No comment provided
 *
 * Hash: 0xD840C130D7AACFA5 | Since: 1207
 *
 * @deprecated Use streaming._0xD840C130D7AACFA5() instead
 */
export declare function _0xD840C130D7AACFA5(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9F2FF4AF394D926 | Since: 1207
 *
 * @deprecated Use streaming._0xD9F2FF4AF394D926() instead
 */
export declare function _0xD9F2FF4AF394D926(): void;
/**
 * No comment provided
 *
 * Hash: 0xDA7FDEFF4DE86839 | Since: 1207
 *
 * @deprecated Use streaming._0xDA7FDEFF4DE86839() instead
 */
export declare function _0xDA7FDEFF4DE86839(): any;
/**
 * No comment provided
 *
 * Hash: 0xDABFE48BA0D457AA | Since: 1207
 *
 * @deprecated Use streaming._0xDABFE48BA0D457AA() instead
 */
export declare function _0xDABFE48BA0D457AA(): any;
/**
 * No comment provided
 *
 * Hash: 0xDEEE1F265B7ECEF5 | Since: 1311
 *
 * @deprecated Use streaming._0xDEEE1F265B7ECEF5() instead
 */
export declare function _0xDEEE1F265B7ECEF5(): void;
/**
 * No comment provided
 *
 * Hash: 0xE5B76E5B56CD77DD | Since: 1207
 *
 * @deprecated Use streaming._0xE5B76E5B56CD77DD() instead
 */
export declare function _0xE5B76E5B56CD77DD(): any;
/**
 * No comment provided
 *
 * Hash: 0xEF1A8A484118735E | Since: 1207
 *
 * @deprecated Use streaming._0xEF1A8A484118735E() instead
 */
export declare function _0xEF1A8A484118735E(): void;
/**
 * No comment provided
 *
 * Hash: 0xF01D21DF39554115 | Since: 1207
 *
 * @deprecated Use streaming._0xF01D21DF39554115() instead
 */
export declare function _0xF01D21DF39554115(): void;
/**
 * No comment provided
 *
 * Hash: 0xF11D7CB962FCD747 | Since: 1207
 *
 * @deprecated Use streaming._0xF11D7CB962FCD747() instead
 */
export declare function _0xF11D7CB962FCD747(): void;
/**
 * Outputs IPL position and radius (previously wrongly named heading)
 * https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
 *
 * Hash: 0x9C77964B0E07B633 | Since: 1207
 *
 * @deprecated Use streaming.getIplBoundingSphere() instead
 */
export declare function getIplBoundingSphere(iplHash: number | string, position: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA8B2EAF29E872E2 | Since: 1207
 *
 * @deprecated Use streaming.hasCollisionLoadedAtCoord() instead
 */
export declare function hasCollisionLoadedAtCoord(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9427C94D2E4094A4 | Since: 1207
 *
 * @deprecated Use streaming.hasScenarioTypeLoaded() instead
 */
export declare function hasScenarioTypeLoaded(scenarioType: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x274EE1B90CFA669E | Since: 1207
 *
 * @deprecated Use streaming.isModelAnObject() instead
 */
export declare function isModelAnObject(model: number | string): boolean;
/**
 * Returns true if IPL is streamed in (?)
 *
 * Hash: 0x73B40D97D7BAAD77 | Since: 1207
 *
 * @deprecated Use streaming.isPositionInsideIplStreamingExtents() instead
 */
export declare function isPositionInsideIplStreamingExtents(iplHash: number | string, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4EDDD9E9CA5AF985 | Since: 1207
 *
 * @deprecated Use streaming.removeScenarioAsset() instead
 */
export declare function removeScenarioAsset(scenarioType: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xAC37644A538F7524 | Since: 1207
 *
 * @deprecated Use streaming.requestClipSetByHash() instead
 */
export declare function requestClipSetByHash(clipSetHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA8432A14D4DC2101 | Since: 1207
 *
 * @deprecated Use streaming.requestMetadataAtCoord() instead
 */
export declare function requestMetadataAtCoord(pos: Vector3): void;
/**
 * p1 seems to be some kind of flag? p2 can be 0 or entity model accepts hash joaat("a_c_bear_01") or with GetEntityModel(entity) p3 can be 0 or pass the conditional anim or using _GET_ACTIVE_DYNAMIC_SCENARIO
 *
 * Hash: 0x19A6BE7D9C6884D3 | Since: 1207
 *
 * @deprecated Use streaming.requestScenarioType() instead
 */
export declare function requestScenarioType(scenarioType: number | string, entityModel: number | string, conditionalAnim: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x74E2261D2A66849A | Since: 1207
 *
 * @deprecated Use streaming.setGuarmaWorldhorizonActive() instead
 */
export declare function setGuarmaWorldhorizonActive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD5C12A75C7B9497F | Since: 1207
 *
 * @deprecated Use task.addCoverPoint() instead
 */
export declare function addCoverPoint(): number;
/**
 * Params: p2 is always -1.f in R* Scripts
 *
 * Hash: 0x3923EC958249657D | Since: 1207
 *
 * @deprecated Use task.addFleeTargetPed() instead
 */
export declare function addFleeTargetPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x23083260DEC3A551 | Since: 1207
 *
 * @deprecated Use task.addPatrolRouteLink() instead
 */
export declare function addPatrolRouteLink(node1: number, node2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8EDF950167586B7C | Since: 1207
 *
 * @deprecated Use task.addPatrolRouteNode() instead
 */
export declare function addPatrolRouteNode(nodeId: number, scenarioName: string, pos: Vector3, lookPosX: number, lookPosY: number, lookPosZ: number, duration: number): void;
/**
 * Returns true when requested asset is loaded
 *
 * Hash: 0x5E5D96BE25E9DF68 | Since: 1207
 *
 * @deprecated Use task.areCompositeLootableEntityDefAssetsLoaded() instead
 */
export declare function areCompositeLootableEntityDefAssetsLoaded(asset: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x60F9A4393A21F741 | Since: 1207
 *
 * @deprecated Use task.assistedMovementIsRouteLoaded() instead
 */
export declare function assistedMovementIsRouteLoaded(route: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3548536485DD792B | Since: 1207
 *
 * @deprecated Use task.assistedMovementRemoveRoute() instead
 */
export declare function assistedMovementRemoveRoute(route: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD5002D78B7162E1B | Since: 1207
 *
 * @deprecated Use task.assistedMovementSetRouteProperties() instead
 */
export declare function assistedMovementSetRouteProperties(route: string, props: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2D19BC4DF626CBE7 | Since: 1207
 *
 * @deprecated Use task.canStartItemInteraction() instead
 */
export declare function canStartItemInteraction(ped: number | Ped, itemHash: number | string, interactionAnimHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC35B5CDB2824CF69 | Since: 1207
 *
 * @deprecated Use task.clearDrivebyTaskUnderneathDrivingTask() instead
 */
export declare function clearDrivebyTaskUnderneathDrivingTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x176CECF6F920D707 | Since: 1207
 *
 * @deprecated Use task.clearPedSecondaryTask() instead
 */
export declare function clearPedSecondaryTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE1EF3C1216AFF2CD | Since: 1207
 *
 * @deprecated Use task.clearPedTasks() instead
 */
export declare function clearPedTasks(ped: number | Ped): void;
/**
 * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
 *
 * resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
 *
 * Hash: 0xAAA34F8A7CB32098 | Since: 1207
 *
 * @deprecated Use task.clearPedTasksImmediately() instead
 */
export declare function clearPedTasksImmediately(ped: number | Ped, resetCrouch: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3841422E9C488D8C | Since: 1207
 *
 * @deprecated Use task.clearSequenceTask() instead
 */
export declare function clearSequenceTask(taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB043ECA801B8CBC1 | Since: 1207
 *
 * @deprecated Use task.closePatrolRoute() instead
 */
export declare function closePatrolRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0x39E72BC99E6360CB | Since: 1207
 *
 * @deprecated Use task.closeSequenceTask() instead
 */
export declare function closeSequenceTask(taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAF8A443CCC8018DC | Since: 1207
 *
 * @deprecated Use task.createPatrolRoute() instead
 */
export declare function createPatrolRoute(): void;
/**
 * Returns scenario
 *
 * Hash: 0x94B745CE41DB58A1 | Since: 1207
 *
 * @deprecated Use task.createScenarioPointHash() instead
 */
export declare function createScenarioPointHash(scenarioHash: number | string, pos: Vector3, heading: number): number;
/**
 * Returns scenario
 *
 * Hash: 0x794AB1379A74064D | Since: 1207
 *
 * @deprecated Use task.createScenarioPointHashAttachedToEntity() instead
 */
export declare function createScenarioPointHashAttachedToEntity(entity: number | Entity, scenarioHash: number | string, pos: Vector3, heading: number): number;
/**
 * No comment provided
 *
 * Hash: 0x7767DD9D65E91319 | Since: 1207
 *
 * @deprecated Use task.deletePatrolRoute() instead
 */
export declare function deletePatrolRoute(patrolRoute: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5A59271FFADD33C1 | Since: 1207
 *
 * @deprecated Use task.doesScenarioExistInArea() instead
 */
export declare function doesScenarioExistInArea(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9034C136C9E00D3 | Since: 1207
 *
 * @deprecated Use task.doesScenarioGroupExist() instead
 */
export declare function doesScenarioGroupExist(scenarioGroup: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6EEAD6AF637DA752 | Since: 1207
 *
 * @deprecated Use task.doesScenarioOfTypeExistInAreaHash() instead
 */
export declare function doesScenarioOfTypeExistInAreaHash(pos: Vector3, typeHash: number | string, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x841475AC96E794D1 | Since: 1207
 *
 * @deprecated Use task.doesScenarioPointExist() instead
 */
export declare function doesScenarioPointExist(scenario: number): boolean;
/**
 * Checks if there is a cover point at position
 *
 * Hash: 0xA98B8E3C088E5A31 | Since: 1207
 *
 * @deprecated Use task.doesScriptedCoverPointExistAtCoords() instead
 */
export declare function doesScriptedCoverPointExistAtCoords(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEED08A3A98B847E2 | Since: 1207
 *
 * @deprecated Use task.endDuel() instead
 */
export declare function endDuel(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF533D68FF970D190 | Since: 1207
 *
 * @deprecated Use task.findScenarioOfTypeHash() instead
 */
export declare function findScenarioOfTypeHash(pos: Vector3, scenarioType: number | string, distance: number): number;
/**
 * No comment provided
 *
 * Hash: 0x444C910A5058E568 | Since: 1207
 *
 * @deprecated Use task.forceScenarioGroupPriority() instead
 */
export declare function forceScenarioGroupPriority(): void;
/**
 * No comment provided
 *
 * Hash: 0x534AEBA6E5ED4CAB | Since: 1207
 *
 * @deprecated Use task.getActiveVehicleMissionType() instead
 */
export declare function getActiveVehicleMissionType(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x0CCFE72B43C9CF96 | Since: 1207
 *
 * @deprecated Use task.getIsCarriableEntity() instead
 */
export declare function getIsCarriableEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8785E6E40C7A8819 | Since: 1207
 *
 * @deprecated Use task.getIsPedAimingInTheAir() instead
 */
export declare function getIsPedAimingInTheAir(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB0760331C7AA4155 | Since: 1207
 *
 * @deprecated Use task.getIsTaskActive() instead
 */
export declare function getIsTaskActive(ped: number | Ped, taskIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCB4E8BE8A0063C5D | Since: 1207
 *
 * @deprecated Use task.getIsWaypointRecordingLoaded() instead
 */
export declare function getIsWaypointRecordingLoaded(waypointRecording: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x804425C4BBD00883 | Since: 1207
 *
 * @deprecated Use task.getItemInteractionItemId() instead
 */
export declare function getItemInteractionItemId(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xBC864A70AD55E0C1 | Since: 1207
 *
 * @deprecated Use task.getItemInteractionPromptProgress() instead
 */
export declare function getItemInteractionPromptProgress(ped: number | Ped, inputContext: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x6AA3DCA2C6F5EB6D | Since: 1207
 *
 * @deprecated Use task.getItemInteractionState() instead
 */
export declare function getItemInteractionState(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x8517D4A6CA8513ED | Since: 1207
 *
 * @deprecated Use task.getPedDesiredMoveBlendRatio() instead
 */
export declare function getPedDesiredMoveBlendRatio(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xE6A877C64CAF1BC5 | Since: 1207
 *
 * @deprecated Use task.getPedWaypointDistance() instead
 */
export declare function getPedWaypointDistance(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xD39A2F3E7FCAFF08 | Since: 1207
 *
 * @deprecated Use task.getPedWaypointOverrideSpeed() instead
 */
export declare function getPedWaypointOverrideSpeed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x2720AAA75001E094 | Since: 1207
 *
 * @deprecated Use task.getPedWaypointProgress() instead
 */
export declare function getPedWaypointProgress(ped: number | Ped): number;
/**
 * Old name: _GET_SCENARIO_POINT_ENTITY
 *
 * Hash: 0x295514F198EFD0CA | Since: 1207
 *
 * @deprecated Use task.getPropForScenarioPoint() instead
 */
export declare function getPropForScenarioPoint(scenarioPoint: number, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xD04241BBF6D03A5E | Since: 1207
 *
 * @deprecated Use task.getRansackScenarioPointPedIsUsing() instead
 */
export declare function getRansackScenarioPointPedIsUsing(ped: number | Ped): any;
/**
 * Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
 *
 * Hash: 0x345EC3B7EBDE1CB5 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointsInArea() instead
 */
export declare function getScenarioPointsInArea(pos: Vector3, radius: number, scenariosInRadius: any, size: number): number;
/**
 * No comment provided
 *
 * Hash: 0x594A1028FC2A3E85 | Since: 1207
 *
 * @deprecated Use task.getScriptedCoverPointCoords() instead
 */
export declare function getScriptedCoverPointCoords(coverpoint: number): Vector3;
/**
 * Gets the status of a script-assigned task, and returns an int between 0-8
 * taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt
 *
 * WAITING_TO_START_TASK = 0,
 * PERFORMING_TASK
 * DORMANT_TASK
 * VACANT_STAGE
 * GROUP_TASK_STAGE
 * ATTRACTOR_SCRIPT_TASK_STAGE
 * SECONDARY_TASK_STAGE
 * TASK_NOT_FOUND
 * FINISHED_TASK
 *
 * Hash: 0x77F1BEB8863288D5 | Since: 1207
 *
 * @deprecated Use task.getScriptTaskStatus() instead
 */
export declare function getScriptTaskStatus(ped: number | Ped, taskHash: number | string): number;
/**
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 *
 * Hash: 0x00A9010CFE1E3533 | Since: 1207
 *
 * @deprecated Use task.getSequenceProgress() instead
 */
export declare function getSequenceProgress(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xB4F47213DF45A64C | Since: 1207
 *
 * @deprecated Use task.getTaskMoveNetworkEvent() instead
 */
export declare function getTaskMoveNetworkEvent(ped: number | Ped, eventName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x717E4D1F2048376D | Since: 1207
 *
 * @deprecated Use task.getTaskMoveNetworkState() instead
 */
export declare function getTaskMoveNetworkState(ped: number | Ped): string;
/**
 * No comment provided
 *
 * Hash: 0x3DC971EB22F73447 | Since: 1207
 *
 * @deprecated Use task.getVehicleWaypointPlaybackOverrideSpeed() instead
 */
export declare function getVehicleWaypointPlaybackOverrideSpeed(): any;
/**
 * No comment provided
 *
 * Hash: 0x9824CFF8FC66E159 | Since: 1207
 *
 * @deprecated Use task.getVehicleWaypointProgress() instead
 */
export declare function getVehicleWaypointProgress(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x416B62AC8B9E5BBD | Since: 1207
 *
 * @deprecated Use task.getVehicleWaypointTargetPoint() instead
 */
export declare function getVehicleWaypointTargetPoint(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA5B769058763E497 | Since: 1207
 *
 * @deprecated Use task.getWaypointDistanceAlongRoute() instead
 */
export declare function getWaypointDistanceAlongRoute(waypointRecording: string): number;
/**
 * No comment provided
 *
 * Hash: 0x8785E6E40C7A8818 | Since: 1207
 *
 * @deprecated Use task.isDrivebyTaskUnderneathDrivingTask() instead
 */
export declare function isDrivebyTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF9B71C0AF824036 | Since: 1355
 *
 * @deprecated Use task.isEmoteTaskRunning() instead
 */
export declare function isEmoteTaskRunning(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA320EF046186FA3B | Since: 1207
 *
 * @deprecated Use task.isMountedWeaponTaskUnderneathDrivingTask() instead
 */
export declare function isMountedWeaponTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4D8636C0199A939 | Since: 1207
 *
 * @deprecated Use task.isMoveBlendRatioRunning() instead
 */
export declare function isMoveBlendRatioRunning(moveBlendRatio: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24A2AD74FA9814E2 | Since: 1207
 *
 * @deprecated Use task.isMoveBlendRatioSprinting() instead
 */
export declare function isMoveBlendRatioSprinting(moveBlendRatio: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x349CE7B56DAFD95C | Since: 1207
 *
 * @deprecated Use task.isMoveBlendRatioStill() instead
 */
export declare function isMoveBlendRatioStill(moveBlendRatio: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF133BBBE91E1691F | Since: 1207
 *
 * @deprecated Use task.isMoveBlendRatioWalking() instead
 */
export declare function isMoveBlendRatioWalking(moveBlendRatio: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA135F9482C82CC3 | Since: 1207
 *
 * @deprecated Use task.isPedActiveInScenario() instead
 */
export declare function isPedActiveInScenario(ped: number | Ped, scenario: number): boolean;
/**
 * This function is hard-coded to always return false.
 *
 * Hash: 0x90A09F3A45FED688 | Since: 1207
 *
 * @deprecated Use task.isPedBeingArrested() instead
 */
export declare function isPedBeingArrested(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74E559B3BC910685 | Since: 1207
 *
 * @deprecated Use task.isPedCuffed() instead
 */
export declare function isPedCuffed(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C3CB2E600C8977D | Since: 1207
 *
 * @deprecated Use task.isPedExitingScenario() instead
 */
export declare function isPedExitingScenario(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A74E1D5F2F00EEC | Since: 1207
 *
 * @deprecated Use task.isPedGettingUp() instead
 */
export declare function isPedGettingUp(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF330A5C062B29BED | Since: 1207
 *
 * @deprecated Use task.isPedInHitReact() instead
 */
export declare function isPedInHitReact(ped: number | Ped): boolean;
/**
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 *
 * Hash: 0xDEB6D52126E7D640 | Since: 1207
 *
 * @deprecated Use task.isPedInWrithe() instead
 */
export declare function isPedInWrithe(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC5286FFC176F28A2 | Since: 1207
 *
 * @deprecated Use task.isPedRunning() instead
 */
export declare function isPedRunning(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x038B1F1674F0E242 | Since: 1207
 *
 * @deprecated Use task.isPedRunningInspectionTask() instead
 */
export declare function isPedRunningInspectionTask(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC7E480FF8BD0BED | Since: 1207
 *
 * @deprecated Use task.isPedRunningTaskItemInteraction() instead
 */
export declare function isPedRunningTaskItemInteraction(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x916B8E075ABC8B4E | Since: 1207
 *
 * @deprecated Use task.isPedScenarioReactLooking() instead
 */
export declare function isPedScenarioReactLooking(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57E457CD2C0FC168 | Since: 1207
 *
 * @deprecated Use task.isPedSprinting() instead
 */
export declare function isPedSprinting(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAC29253EEF8F0180 | Since: 1207
 *
 * @deprecated Use task.isPedStill() instead
 */
export declare function isPedStill(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE4C184B2B9B071A | Since: 1207
 *
 * @deprecated Use task.isPedWalking() instead
 */
export declare function isPedWalking(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x367A09DED4E05B99 | Since: 1207
 *
 * @deprecated Use task.isScenarioGroupEnabled() instead
 */
export declare function isScenarioGroupEnabled(scenarioGroup: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x788756D73AC2E07C | Since: 1207
 *
 * @deprecated Use task.isScenarioOccupied() instead
 */
export declare function isScenarioOccupied(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A815DB3EA088722 | Since: 1207
 *
 * @deprecated Use task.isScenarioTypeEnabled() instead
 */
export declare function isScenarioTypeEnabled(scenarioType: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x921CE12C489C4C41 | Since: 1207
 *
 * @deprecated Use task.isTaskMoveNetworkActive() instead
 */
export declare function isTaskMoveNetworkActive(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30ED88D5E0C56A37 | Since: 1207
 *
 * @deprecated Use task.isTaskMoveNetworkReadyForTransition() instead
 */
export declare function isTaskMoveNetworkReadyForTransition(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x559A6F8C5133B4EE | Since: 1207
 *
 * @deprecated Use task.isTeamCarriableEntity() instead
 */
export declare function isTeamCarriableEntity(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE03B3F2D3DC59B64 | Since: 1207
 *
 * @deprecated Use task.isWaypointPlaybackGoingOnForPed() instead
 */
export declare function isWaypointPlaybackGoingOnForPed(ped: number | Ped, waypointRecording: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF5134943EA29868C | Since: 1207
 *
 * @deprecated Use task.isWaypointPlaybackGoingOnForVehicle() instead
 */
export declare function isWaypointPlaybackGoingOnForVehicle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67BFCED22909834D | Since: 1207
 *
 * @deprecated Use task.makeObjectNotCarriable() instead
 */
export declare function makeObjectNotCarriable(object: number | Object): void;
/**
 * Note: patrolRoute must be prefixed with 'miss_' for it to be valid
 *
 * Hash: 0xA36BFB5EE89F3D82 | Since: 1207
 *
 * @deprecated Use task.openPatrolRoute() instead
 */
export declare function openPatrolRoute(patrolRoute: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE8854A4326B9E12B | Since: 1207
 *
 * @deprecated Use task.openSequenceTask() instead
 */
export declare function openSequenceTask(taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x295E3CCEC879CCD7 | Since: 1207
 *
 * @deprecated Use task.pedHasUseScenarioTask() instead
 */
export declare function pedHasUseScenarioTask(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x748040460F8DF5DC | Since: 1207
 *
 * @deprecated Use task.playAnimOnRunningScenario() instead
 */
export declare function playAnimOnRunningScenario(ped: number | Ped, animDict: string, animName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x77A1EEC547E7FCF1 | Since: 1207
 *
 * @deprecated Use task.playEntityScriptedAnim() instead
 */
export declare function playEntityScriptedAnim(entity: number | Entity, args: any): void;
/**
 * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
 *
 * exitAnimation: LOOK_RETURN_GENERIC = 1,
 * LOOK_RETURN_DISMISSIVE = 2,
 * LOOK_RETURN_RELIEVED = 3
 *
 * Hash: 0xE7FA07624574B79A | Since: 1207
 *
 * @deprecated Use task.reactLookAt() instead
 */
export declare function reactLookAt(ped: number | Ped, targetPed: number | Ped, lookIntensity: number, exitAnimation: number, duration: number, targetPed2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x541E5B41DCA45828 | Since: 1207
 *
 * @deprecated Use task.reactLookAtEnd() instead
 */
export declare function reactLookAtEnd(ped: number | Ped, exitAnimation: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDB6708C0B46F56D8 | Since: 1207
 *
 * @deprecated Use task.removeAllCoverBlockingAreas() instead
 */
export declare function removeAllCoverBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0xAE287C923D891715 | Since: 1207
 *
 * @deprecated Use task.removeCoverPoint() instead
 */
export declare function removeCoverPoint(coverpoint: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFF1B8B4AA1C25DC8 | Since: 1207
 *
 * @deprecated Use task.removeWaypointRecording() instead
 */
export declare function removeWaypointRecording(waypointRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD01015C7316AE176 | Since: 1207
 *
 * @deprecated Use task.requestTaskMoveNetworkStateTransition() instead
 */
export declare function requestTaskMoveNetworkStateTransition(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9EEFB62EB27B5792 | Since: 1207
 *
 * @deprecated Use task.requestWaypointRecording() instead
 */
export declare function requestWaypointRecording(waypointRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0xDD902D0349AFAD3A | Since: 1207
 *
 * @deprecated Use task.resetScenarioGroupsEnabled() instead
 */
export declare function resetScenarioGroupsEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D40EE2A7F2B2D6D | Since: 1207
 *
 * @deprecated Use task.resetScenarioTypesEnabled() instead
 */
export declare function resetScenarioTypesEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0x87B66D77D545DB66 | Since: 1207
 *
 * @deprecated Use task.setAnimFilter() instead
 */
export declare function setAnimFilter(entity: number | Entity, filterName: string, priority: number, secondary: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x032D49C5E359C847 | Since: 1207
 *
 * @deprecated Use task.setAnimRate() instead
 */
export declare function setAnimRate(): void;
/**
 * No comment provided
 *
 * Hash: 0xE5B302114D8162EE | Since: 1207
 *
 * @deprecated Use task.setDrivebyTaskTarget() instead
 */
export declare function setDrivebyTaskTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x5C9B84BD7D31D908 | Since: 1207
 *
 * @deprecated Use task.setDriveTaskCruiseSpeed() instead
 */
export declare function setDriveTaskCruiseSpeed(driver: number | Ped, cruiseSpeed: number): void;
/**
 * Not implemented.
 *
 * Hash: 0x404A5AA9B9F0B746 | Since: 1207
 *
 * @deprecated Use task.setDriveTaskMaxCruiseSpeed() instead
 */
export declare function setDriveTaskMaxCruiseSpeed(ped: number | Ped, maxCruiseSpeed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x295F03DC97BEEBC1 | Since: 1207
 *
 * @deprecated Use task.setEnableSpeedRestrainForWaypointRecordingLeader() instead
 */
export declare function setEnableSpeedRestrainForWaypointRecordingLeader(): void;
/**
 * clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
 * clipset can also be 0
 *
 * Hash: 0x1BF9D36A5EAFFBAE | Since: 1207
 *
 * @deprecated Use task.setEnhancedBreakFree() instead
 */
export declare function setEnhancedBreakFree(ped: number | Ped, clipset: string): boolean;
/**
 * Makes the ped ragdoll like when falling from a great height
 *
 * Hash: 0x8C825BDC7741D37C | Since: 1207
 *
 * @deprecated Use task.setHighFallTask() instead
 */
export declare function setHighFallTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1E982AC8716912C5 | Since: 1207
 *
 * @deprecated Use task.setPedDesiredMoveBlendRatio() instead
 */
export declare function setPedDesiredMoveBlendRatio(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4455517B28441E60 | Since: 1207
 *
 * @deprecated Use task.setPedPathAvoidFire() instead
 */
export declare function setPedPathAvoidFire(ped: number | Ped, avoidFire: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE361C5C71C431A4F | Since: 1207
 *
 * @deprecated Use task.setPedPathCanDropFromHeight() instead
 */
export declare function setPedPathCanDropFromHeight(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8E06A6FE76C9EFF4 | Since: 1207
 *
 * @deprecated Use task.setPedPathCanUseClimbovers() instead
 */
export declare function setPedPathCanUseClimbovers(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x77A5B103C87F476E | Since: 1207
 *
 * @deprecated Use task.setPedPathCanUseLadders() instead
 */
export declare function setPedPathCanUseLadders(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x88E32DB8C1A4AA4B | Since: 1207
 *
 * @deprecated Use task.setPedPathClimbCostModifier() instead
 */
export declare function setPedPathClimbCostModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE8C296B75EACC357 | Since: 1207
 *
 * @deprecated Use task.setPedPathDeepSnowCostModifier() instead
 */
export declare function setPedPathDeepSnowCostModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3AD8EFF9703BE657 | Since: 1207
 *
 * @deprecated Use task.setPedPathFoliageCostModifier() instead
 */
export declare function setPedPathFoliageCostModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF35425A4204367EC | Since: 1207
 *
 * @deprecated Use task.setPedPathMayEnterWater() instead
 */
export declare function setPedPathMayEnterWater(ped: number | Ped, mayEnterWater: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x38FE1EC73743793C | Since: 1207
 *
 * @deprecated Use task.setPedPathPreferToAvoidWater() instead
 */
export declare function setPedPathPreferToAvoidWater(ped: number | Ped, avoidWater: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xED98E10B0AFCE4B4 | Since: 1207
 *
 * @deprecated Use task.setPedWaypointRouteOffset() instead
 */
export declare function setPedWaypointRouteOffset(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x02C8E5B49848664E | Since: 1207
 *
 * @deprecated Use task.setScenarioGroupEnabled() instead
 */
export declare function setScenarioGroupEnabled(scenarioGroup: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEB47EC4E34FB7EE1 | Since: 1207
 *
 * @deprecated Use task.setScenarioTypeEnabled() instead
 */
export declare function setScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
/**
 * repeatMode: 0 = REPEAT_NOT; 1 = REPEAT_FOREVER
 *
 * Hash: 0x58C70CF3A41E4AE7 | Since: 1207
 *
 * @deprecated Use task.setSequenceToRepeat() instead
 */
export declare function setSequenceToRepeat(taskSequenceId: number, repeatMode: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB0A6CFD2C69C1088 | Since: 1207
 *
 * @deprecated Use task.setTaskMoveNetworkSignalBool() instead
 */
export declare function setTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD5BB4025AE449A4E | Since: 1207
 *
 * @deprecated Use task.setTaskMoveNetworkSignalFloat() instead
 */
export declare function setTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x545BF19F86E80F11 | Since: 1207
 *
 * @deprecated Use task.setTeamCarriableEntity() instead
 */
export declare function setTeamCarriableEntity(): void;
/**
 * No comment provided
 *
 * Hash: 0xB5C51DD544F14F58 | Since: 1207
 *
 * @deprecated Use task.setUpSpeedRestrainInformationForPlayerFollower() instead
 */
export declare function setUpSpeedRestrainInformationForPlayerFollower(): void;
/**
 * Params: p3 = 0, 1; p5 = 0.0f, -1.0f
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 *
 * Hash: 0xAE72E7DF013AAA61 | Since: 1207
 *
 * @deprecated Use task.startTaskItemInteraction() instead
 */
export declare function startTaskItemInteraction(ped: number | Ped, itemHash: number | string, interactionAnimHash: number | string, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEE08C992D238C5D1 | Since: 1207
 *
 * @deprecated Use task.stopAnimPlayback() instead
 */
export declare function stopAnimPlayback(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x97FF36A1D40EA00A | Since: 1207
 *
 * @deprecated Use task.stopAnimTask() instead
 */
export declare function stopAnimTask(ped: number | Ped, animDictionary: string, animationName: string): void;
/**
 * Makes the specified ped achieve the specified heading.
 *
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
 *
 * Hash: 0x93B93A37987F1F3D | Since: 1207
 *
 * @deprecated Use task.taskAchieveHeading() instead
 */
export declare function taskAchieveHeading(ped: number | Ped, heading: number, timeout: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4AF1D73861212F52 | Since: 1207
 *
 * @deprecated Use task.taskAimAtCoord() instead
 */
export declare function taskAimAtCoord(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCF7569BD0FB480A0 | Since: 1207
 *
 * @deprecated Use task.taskAimAtEntity() instead
 */
export declare function taskAimAtEntity(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6671F3EEC681BDA1 | Since: 1207
 *
 * @deprecated Use task.taskAimGunAtCoord() instead
 */
export declare function taskAimGunAtCoord(ped: number | Ped, pos: Vector3, time: number): void;
/**
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * Hash: 0x9B53BB6E8943AF53 | Since: 1207
 *
 * @deprecated Use task.taskAimGunAtEntity() instead
 */
export declare function taskAimGunAtEntity(ped: number | Ped, targetEntity: number | Entity, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4B39D8F9D0FE7749 | Since: 1207
 *
 * @deprecated Use task.taskAmbientAnimalHunt() instead
 */
export declare function taskAmbientAnimalHunt(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x37C13863ABA1B4A3 | Since: 1207
 *
 * @deprecated Use task.taskAmbientAnimalStalk() instead
 */
export declare function taskAmbientAnimalStalk(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x979D93372FC8C565 | Since: 1207
 *
 * @deprecated Use task.taskAnimalAlerted() instead
 */
export declare function taskAnimalAlerted(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA899B61C66F09134 | Since: 1207
 *
 * @deprecated Use task.taskAnimalFlee() instead
 */
export declare function taskAnimalFlee(ped: number | Ped, targetPed: number | Ped): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
 *
 * Hash: 0xCD181A959CFDD7F4 | Since: 1207
 *
 * @deprecated Use task.taskAnimalInteraction() instead
 */
export declare function taskAnimalInteraction(ped: number | Ped, targetPed: number | Ped, interactionType: number | string, interactionModel: number | string, skipIdleAnimationClip: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x21FDF9A25CFE1CE5 | Since: 1207
 *
 * @deprecated Use task.taskAnimalUnalerted() instead
 */
export declare function taskAnimalUnalerted(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8C038A39C4A4B6D6 | Since: 1207
 *
 * @deprecated Use task.taskAnimalWrithe() instead
 */
export declare function taskAnimalWrithe(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF3B9A78A178572B1 | Since: 1207
 *
 * @deprecated Use task.taskArrestPed() instead
 */
export declare function taskArrestPed(ped: number | Ped, target: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x83BFC1F836B2F3F2 | Since: 1207
 *
 * @deprecated Use task.taskBark() instead
 */
export declare function taskBark(ped: number | Ped, barkAtTarget: number | Ped, mood: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x15C86013127CE63F | Since: 1207
 *
 * @deprecated Use task.taskBoatMission() instead
 */
export declare function taskBoatMission(pedDriver: number | Ped, boat: number | Vehicle, pos: Vector3, maxSpeed: number, drivingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB28D1BC9EA8A6A5 | Since: 1207
 *
 * @deprecated Use task.taskBreakVehicleDoorLock() instead
 */
export declare function taskBreakVehicleDoorLock(ped: number | Ped, vehicle: number | Vehicle): void;
/**
 * carriableSlot:
 * 7 > Back of a horse
 * 6 > Right side of a horse
 * 5 > Left side of a horse
 * flags:
 * 512: enables the prompt being the name of the item when using a generic item
 *
 * Hash: 0xF0B4F759F35CC7F5 | Since: 1207
 *
 * @deprecated Use task.taskCarriable() instead
 */
export declare function taskCarriable(entity: number | Entity, carryConfig: number | string, carrier: number | Ped, carriableSlot: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x95A6C46A31D1917D | Since: 1207
 *
 * @deprecated Use task.taskClearDefensiveArea() instead
 */
export declare function taskClearDefensiveArea(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x0F804F1DB19B9689 | Since: 1207
 *
 * @deprecated Use task.taskClearLookAt() instead
 */
export declare function taskClearLookAt(ped: number | Ped): void;
/**
 * Climbs or vaults the nearest thing.
 *
 * Hash: 0x89D9FCC2435112F1 | Since: 1207
 *
 * @deprecated Use task.taskClimb() instead
 */
export declare function taskClimb(ped: number | Ped, unused: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB6C987F9285A3814 | Since: 1207
 *
 * @deprecated Use task.taskClimbLadder() instead
 */
export declare function taskClimbLadder(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEE3AA414CF99F368 | Since: 1207
 *
 * @deprecated Use task.taskCombatAnimalChargePed() instead
 */
export declare function taskCombatAnimalChargePed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF960F3D57B660E96 | Since: 1207
 *
 * @deprecated Use task.taskCombatAnimalWarn() instead
 */
export declare function taskCombatAnimalWarn(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8182B561A29BD597 | Since: 1207
 *
 * @deprecated Use task.taskCombatHatedTargets() instead
 */
export declare function taskCombatHatedTargets(ped: number | Ped, radius: number): void;
/**
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 *
 * Hash: 0x7BF835BB9E2698C8 | Since: 1207
 *
 * @deprecated Use task.taskCombatHatedTargetsAroundPed() instead
 */
export declare function taskCombatHatedTargetsAroundPed(ped: number | Ped, radius: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2BBA30B854534A0C | Since: 1207
 *
 * @deprecated Use task.taskCombatHatedTargetsAroundPedTimed() instead
 */
export declare function taskCombatHatedTargetsAroundPedTimed(ped: number | Ped, radius: number, time: number, flags: number): void;
/**
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 *
 * Hash: 0x4CF5F55DAC3280A0 | Since: 1207
 *
 * @deprecated Use task.taskCombatHatedTargetsInArea() instead
 */
export declare function taskCombatHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB5BC69D9C4060BC3 | Since: 1207
 *
 * @deprecated Use task.taskCombatHatedTargetsNoLosTest() instead
 */
export declare function taskCombatHatedTargetsNoLosTest(ped: number | Ped, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF166E48407BAC484 | Since: 1207
 *
 * @deprecated Use task.taskCombatPed() instead
 */
export declare function taskCombatPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x944F30DCB7096BDE | Since: 1207
 *
 * @deprecated Use task.taskCombatPedTimed() instead
 */
export declare function taskCombatPedTimed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE017CF6E2527FE4F | Since: 1207
 *
 * @deprecated Use task.taskCompanionAmbient() instead
 */
export declare function taskCompanionAmbient(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3A2A2071DF5CC569 | Since: 1207
 *
 * @deprecated Use task.taskConfront() instead
 */
export declare function taskConfront(ped: number | Ped, targetPed: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3EB1FE9E8E908E15 | Since: 1207
 *
 * @deprecated Use task.taskCower() instead
 */
export declare function taskCower(ped: number | Ped, duration: number, pedToCowerFrom: number | Ped): void;
/**
 * flags: See TASK_ENTER_VEHICLE
 *
 * Hash: 0x0A11F3BDEC03ED5F | Since: 1207
 *
 * @deprecated Use task.taskDisembarkNearestTrainCarriage() instead
 */
export declare function taskDisembarkNearestTrainCarriage(ped: number | Ped, flags: number): void;
/**
 * Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
 * flags: See TASK_ENTER_VEHICLE
 *
 * Hash: 0x48E92D3DDE23C23A | Since: 1207
 *
 * @deprecated Use task.taskDismountAnimal() instead
 */
export declare function taskDismountAnimal(rider: number | Ped, taskFlag: number, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2F8AF0E82773A171 | Since: 1207
 *
 * @deprecated Use task.taskDriveBy() instead
 */
export declare function taskDriveBy(driverPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA14B5FBF986BAC23 | Since: 1207
 *
 * @deprecated Use task.taskDuck() instead
 */
export declare function taskDuck(ped: number | Ped, time: number): void;
/**
 * Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
 *
 * Hash: 0x5D5B0D5BC3626E5A | Since: 1207
 *
 * @deprecated Use task.taskDuel() instead
 */
export declare function taskDuel(ped: number | Ped, entity: number | Entity, vPosOpponentX: number, vPosOpponentY: number, vPosOpponentZ: number, fOpponentHead: number): void;
/**
 * No comment provided
 *
 * Hash: 0x17CA98707B15926A | Since: 1207
 *
 * @deprecated Use task.taskDumpCarriableFromParent() instead
 */
export declare function taskDumpCarriableFromParent(ped: number | Ped, ped2: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xBD7949BD07299672 | Since: 1207
 *
 * @deprecated Use task.taskEat() instead
 */
export declare function taskEat(ped: number | Ped): void;
/**
 * flags:
 * MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
 * DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
 * SKIP_NAVIGATION = (1 << 2),
 * TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
 * FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
 * ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
 *
 * Hash: 0xC2329B0206426644 | Since: 1207
 *
 * @deprecated Use task.taskEnterAnimScene() instead
 */
export declare function taskEnterAnimScene(ped: number | Ped, animScene: any, entityName: string, playbackListName: string, enterSpeed: number, bAutoStart: boolean, flag: number): void;
/**
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
 *
 * Hash: 0xC20E50AA46D09CA8 | Since: 1207
 *
 * @deprecated Use task.taskEnterVehicle() instead
 */
export declare function taskEnterVehicle(ped: number | Ped, vehicle: number | Vehicle, timeout: number, seat: number, speed: number, flag: number): void;
/**
 * `Params: p2 is returned by BUILTIN::SHIFT_LEFT`
 *
 * Hash: 0x5F22926E1BCE9B08 | Since: 1207
 *
 * @deprecated Use task.taskEvasiveAnim() instead
 */
export declare function taskEvasiveAnim(ped1: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6F1C49F275BD25B3 | Since: 1207
 *
 * @deprecated Use task.taskEveryoneLeaveVehicleInOrder() instead
 */
export declare function taskEveryoneLeaveVehicleInOrder(vehicle: number | Vehicle): void;
/**
 * Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
 *
 * A maximum of 8 points can be added.
 *
 * Hash: 0x1E7889778264843A | Since: 1207
 *
 * @deprecated Use task.taskExtendRoute() instead
 */
export declare function taskExtendRoute(pos: Vector3): void;
/**
 * Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
 * fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
 *
 * Hash: 0x58428248BF4B64E4 | Since: 1207
 *
 * @deprecated Use task.taskFleeCoord() instead
 */
export declare function taskFleeCoord(ped: number | Ped, pos: Vector3, fleeStyle: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x390E0B697D25EAF5 | Since: 1207
 *
 * @deprecated Use task.taskFleeCoordVia() instead
 */
export declare function taskFleeCoordVia(): void;
/**
 * Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
 * fleeStyle: see TASK_FLEE_COORD
 *
 * Hash: 0xFD45175A6DFD7CE9 | Since: 1207
 *
 * @deprecated Use task.taskFleePed() instead
 */
export declare function taskFleePed(ped: number | Ped, fleeFromTarget: number | Ped, fleeStyle: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5802E0F910E4CF1D | Since: 1207
 *
 * @deprecated Use task.taskFleePedVia() instead
 */
export declare function taskFleePedVia(): void;
/**
 * Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
 *
 * Hash: 0x841142A1376E9006 | Since: 1207
 *
 * @deprecated Use task.taskFlushRoute() instead
 */
export declare function taskFlushRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0x72997893BFB8ECCC | Since: 1207
 *
 * @deprecated Use task.taskFlyingCircle() instead
 */
export declare function taskFlyingCircle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE86A537B5A3C297C | Since: 1207
 *
 * @deprecated Use task.taskFlyAway() instead
 */
export declare function taskFlyAway(ped: number | Ped, fleeFromTarget: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD6CFC2D59DA72042 | Since: 1207
 *
 * @deprecated Use task.taskFlyToCoord() instead
 */
export declare function taskFlyToCoord(ped: number | Ped, travelMbr: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x489FFCCCE7392B55 | Since: 1207
 *
 * @deprecated Use task.taskFollowAndConverseWithPed() instead
 */
export declare function taskFollowAndConverseWithPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4D2B787BAE9AB760 | Since: 1207
 *
 * @deprecated Use task.taskFollowEntityAlongWaypointRecordingAtOffset() instead
 */
export declare function taskFollowEntityAlongWaypointRecordingAtOffset(ped0: number | Ped, ped1: number | Ped, waypointRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2D532EAA142CF83F | Since: 1207
 *
 * @deprecated Use task.taskFollowEntityWhileAimingAtEntity() instead
 */
export declare function taskFollowEntityWhileAimingAtEntity(ped: number | Ped): void;
/**
 * If no timeout, set timeout to -1.
 *
 * Hash: 0x15D3A79D4E44B913 | Since: 1207
 *
 * @deprecated Use task.taskFollowNavMeshToCoord() instead
 */
export declare function taskFollowNavMeshToCoord(ped: number | Ped, pos: Vector3, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x17F58B88D085DBAC | Since: 1207
 *
 * @deprecated Use task.taskFollowNavMeshToCoordAdvanced() instead
 */
export declare function taskFollowNavMeshToCoordAdvanced(ped: number | Ped, pos: Vector3, speedMultiplier: number, timeout: number, stoppingRange: number, flags: number, entity: number | Entity, unk: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1B1475414E70DD8E | Since: 1207
 *
 * @deprecated Use task.taskFollowPavementToCoord() instead
 */
export declare function taskFollowPavementToCoord(ped: number | Ped, args: any): void;
/**
 * No comment provided
 *
 * Hash: 0x0E14C5550DC3CD1D | Since: 1207
 *
 * @deprecated Use task.taskFollowPointRoute() instead
 */
export declare function taskFollowPointRoute(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2E3676282C18A692 | Since: 1207
 *
 * @deprecated Use task.taskFollowToOffsetOfCoord() instead
 */
export declare function taskFollowToOffsetOfCoord(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x304AE42E357B8C7E | Since: 1207
 *
 * @deprecated Use task.taskFollowToOffsetOfEntity() instead
 */
export declare function taskFollowToOffsetOfEntity(ped: number | Ped, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean, walkOnly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0759591819534F7B | Since: 1207
 *
 * @deprecated Use task.taskFollowWaypointRecording() instead
 */
export declare function taskFollowWaypointRecording(ped: number | Ped, waypointRecording: string, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0CFC13EBC19BCA52 | Since: 1207
 *
 * @deprecated Use task.taskFollowWaypointRecordingAdvanced() instead
 */
export declare function taskFollowWaypointRecordingAdvanced(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xBE9B0520BD7C445B | Since: 1207
 *
 * @deprecated Use task.taskFollowWaypointRecordingAtOffset() instead
 */
export declare function taskFollowWaypointRecordingAtOffset(ped: number | Ped, waypointRecording: string): void;
/**
 * motionStateHash: see FORCE_PED_MOTION_STATE
 *
 * Hash: 0x4F056E1AFFEF17AB | Since: 1207
 *
 * @deprecated Use task.taskForceMotionState() instead
 */
export declare function taskForceMotionState(ped: number | Ped, motionStateHash: number | string): void;
/**
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 *
 * Hash: 0xA9DA48FAB8A76C12 | Since: 1207
 *
 * @deprecated Use task.taskGotoEntityAiming() instead
 */
export declare function taskGotoEntityAiming(ped: number | Ped, target: number | Entity, distanceToStopAt: number, StartAimingDist: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE39B4FF4FDEBDE27 | Since: 1207
 *
 * @deprecated Use task.taskGotoEntityOffset() instead
 */
export declare function taskGotoEntityOffset(ped: number | Ped, entity: number | Entity, pos: Vector3, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x338E7EF52B6095A9 | Since: 1207
 *
 * @deprecated Use task.taskGotoEntityOffsetXy() instead
 */
export declare function taskGotoEntityOffsetXy(ped: number | Ped, entity: number | Entity, duration: number, targetRadius: number, xOffset: number, yOffset: number, moveBlendRatio: number, offsetFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA6DA9D151769392 | Since: 1311
 *
 * @deprecated Use task.taskGotoEntityOffsetXyz() instead
 */
export declare function taskGotoEntityOffsetXyz(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x41B0832CA96B5351 | Since: 1207
 *
 * @deprecated Use task.taskGotoEntityOffsetXyzAiming() instead
 */
export declare function taskGotoEntityOffsetXyzAiming(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x901BD69984400F62 | Since: 1207
 *
 * @deprecated Use task.taskGotoEntityOffsetXyAiming() instead
 */
export declare function taskGotoEntityOffsetXyAiming(ped: number | Ped): void;
/**
 * Tells the ped to go to a coord, without using the navemesh. if timeBeforeTeleport is -1 the ped will never warp, p8 is always 0 or 1 still unknown
 *
 * Hash: 0xD76B57B44F1E6F8B | Since: 1207
 *
 * @deprecated Use task.taskGoStraightToCoord() instead
 */
export declare function taskGoStraightToCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, timeBeforeTeleport: number, finalHeading: number, targetRadius: number): void;
/**
 * Tells the ped to go to an offset coord from an entity, without using the navmesh. if timeBeforeTeleport is -1 the ped will never warp, p7 is 1 or 0 still unknown param
 *
 * Hash: 0x61E360B7E040D12E | Since: 1207
 *
 * @deprecated Use task.taskGoStraightToCoordRelativeToEntity() instead
 */
export declare function taskGoStraightToCoordRelativeToEntity(ped: number | Ped, entity: number | Entity, xOffset: number, Yoffset: number, zOffset: number, moveBlendRatio: number, timeBeforeTeleport: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA55547801EB331FC | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordAndAimAtHatedEntitiesNearCoord() instead
 */
export declare function taskGoToCoordAndAimAtHatedEntitiesNearCoord(ped: number | Ped, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, unkTrue: boolean, unkFlag: number, aimingFlag: number, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x87BD711FC31EA273 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle() instead
 */
export declare function taskGoToCoordAndAimAtHatedEntitiesNearCoordUsingCombatStyle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5BC448CB78FA3E88 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordAnyMeans() instead
 */
export declare function taskGoToCoordAnyMeans(ped: number | Ped, pos: Vector3, speed: number, entity: number | Entity, walkingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1DD45F9ECFDB1BC9 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordAnyMeansExtraParams() instead
 */
export declare function taskGoToCoordAnyMeansExtraParams(ped: number | Ped, pos: Vector3, speed: number, walkingStyle: number): void;
/**
 * This native allows to control the cruise speed of where you want the ped to go
 * 3rd param might be the entity ped is in? like boat or wagon, 12th param might be the cruiseSpeed of the entity ped is in?
 * EXAMPLE: TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(PlayerPedId(), vector3(x, y, z), 3.0, entity, 1, 0, -1082130432, 0, 101004800, 520, 3.0, 1082130432, 0)
 *
 * Hash: 0xB8ECD61F531A7B02 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed() instead
 */
export declare function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number | Ped, gotoCoords: Vector3, cruiseSpeed: number, entity: number | Entity, cruiseSpeed_2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x11315AB3385B8AC0 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordWhileAimingAtCoord() instead
 */
export declare function taskGoToCoordWhileAimingAtCoord(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x639C0425A0B4E77E | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordWhileAimingAtCoordUsingCombatStyle() instead
 */
export declare function taskGoToCoordWhileAimingAtCoordUsingCombatStyle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB2A16444EAD9AE47 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordWhileAimingAtEntity() instead
 */
export declare function taskGoToCoordWhileAimingAtEntity(ped1: number | Ped, pos: Vector3, ped2: number | Ped, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x78426D0982D083C9 | Since: 1207
 *
 * @deprecated Use task.taskGoToCoordWhileAimingAtEntityUsingCombatStyle() instead
 */
export declare function taskGoToCoordWhileAimingAtEntityUsingCombatStyle(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6A071245EB0D1882 | Since: 1207
 *
 * @deprecated Use task.taskGoToEntity() instead
 */
export declare function taskGoToEntity(ped: number | Ped, target: number | Entity, duration: number, distance: number, speed: number): void;
/**
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 *
 * Hash: 0x97465886D35210E9 | Since: 1207
 *
 * @deprecated Use task.taskGoToEntityWhileAimingAtEntity() instead
 */
export declare function taskGoToEntityWhileAimingAtEntity(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCEF0117C233026AD | Since: 1207
 *
 * @deprecated Use task.taskGoToEntityWhileAimingAtEntityUsingCombatStyle() instead
 */
export declare function taskGoToEntityWhileAimingAtEntityUsingCombatStyle(ped: number | Ped): void;
/**
 * enum eWhistleType
 * {
 * WHISTLE_MAIN,
 * WHISTLE_SECONDARY,
 * WHISTLE_DOUBLE,
 * WHISTLE_URGENT,
 * WHISTLE_LONG
 * };
 *
 * Hash: 0xBAD6545608CECA6E | Since: 1207
 *
 * @deprecated Use task.taskGoToWhistle() instead
 */
export declare function taskGoToWhistle(ped: number | Ped, whistleType: number): void;
/**
 * grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
 *
 * Hash: 0x779A2FFACEFAEA7B | Since: 1207
 *
 * @deprecated Use task.taskGrapple() instead
 */
export declare function taskGrapple(ped: number | Ped, targetPed: number | Ped, grappleStyle: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB9FB242EACCAF30F | Since: 1207
 *
 * @deprecated Use task.taskGuard() instead
 */
export declare function taskGuard(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD2A207EEBDF9889B | Since: 1207
 *
 * @deprecated Use task.taskGuardAssignedDefensiveArea() instead
 */
export declare function taskGuardAssignedDefensiveArea(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4A58A47A72E3FCB4 | Since: 1207
 *
 * @deprecated Use task.taskGuardCurrentPosition() instead
 */
export declare function taskGuardCurrentPosition(ped: number | Ped): void;
/**
 * flags: 0 = HANDS_UP_NOTHING; 1 = HANDS_UP_STRAIGHT_TO_LOOP
 *
 * Hash: 0xF2EAB31979A7F910 | Since: 1207
 *
 * @deprecated Use task.taskHandsUp() instead
 */
export declare function taskHandsUp(ped: number | Ped, duration: number, facingPed: number | Ped, timeToFacePed: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9030AD4B6207BFE8 | Since: 1207
 *
 * @deprecated Use task.taskHitchAnimal() instead
 */
export declare function taskHitchAnimal(ped: number | Ped, scenarioPoint: number, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6AFD8FE0D723328F | Since: 1207
 *
 * @deprecated Use task.taskHogtieable() instead
 */
export declare function taskHogtieable(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x27829AFD3E03AC1A | Since: 1207
 *
 * @deprecated Use task.taskHogtieTargetPed() instead
 */
export declare function taskHogtieTargetPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
 * Params: p2, p3 are set to 0 in R* Scripts
 *
 * Hash: 0xA09CFD29100F06C3 | Since: 1207
 *
 * @deprecated Use task.taskHorseAction() instead
 */
export declare function taskHorseAction(ped: number | Ped, action: number, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5C8514540D27FBFB | Since: 1207
 *
 * @deprecated Use task.taskInvestigate() instead
 */
export declare function taskInvestigate(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x0AE4086104E067B1 | Since: 1207
 *
 * @deprecated Use task.taskJump() instead
 */
export declare function taskJump(ped: number | Ped, unused: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF90427F00A495A28 | Since: 1207
 *
 * @deprecated Use task.taskKnockedOut() instead
 */
export declare function taskKnockedOut(ped: number | Ped, permanently: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x42AC6401ABB8C7E5 | Since: 1207
 *
 * @deprecated Use task.taskKnockedOutAndHogtied() instead
 */
export declare function taskKnockedOutAndHogtied(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC716EB2BD16370A3 | Since: 1207
 *
 * @deprecated Use task.taskLassoPed() instead
 */
export declare function taskLassoPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAA19711D33C6708C | Since: 1207
 *
 * @deprecated Use task.taskLeadAndConverse() instead
 */
export declare function taskLeadAndConverse(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9A7A4A54596FE09D | Since: 1207
 *
 * @deprecated Use task.taskLeadHorse() instead
 */
export declare function taskLeadHorse(ped: number | Ped, horse: number | Ped): void;
/**
 * flags: See TASK_ENTER_VEHICLE
 *
 * Hash: 0x504D54DF3F6F2247 | Since: 1207
 *
 * @deprecated Use task.taskLeaveAnyVehicle() instead
 */
export declare function taskLeaveAnyVehicle(ped: number | Ped, taskFlag: number): void;
/**
 * flags: See TASK_ENTER_VEHICLE
 *
 * Hash: 0xD3DBCE61A490BE02 | Since: 1207
 *
 * @deprecated Use task.taskLeaveVehicle() instead
 */
export declare function taskLeaveVehicle(ped: number | Ped, vehicle: number | Vehicle, flags: number, unkPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6FA46612594F7973 | Since: 1207
 *
 * @deprecated Use task.taskLookAtCoord() instead
 */
export declare function taskLookAtCoord(ped: number | Ped, pos: Vector3, duration: number, flags: number): void;
/**
 * param3: duration in ms, use -1 to look forever
 * param4: using 2048 is fine
 * param5: using 3 is fine
 *
 * Hash: 0x69F4BE8C8CC4796C | Since: 1207
 *
 * @deprecated Use task.taskLookAtEntity() instead
 */
export declare function taskLookAtEntity(ped: number | Ped, lookAtTarget: number | Entity, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x48FAE038401A2888 | Since: 1207
 *
 * @deprecated Use task.taskLootEntity() instead
 */
export declare function taskLootEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xCF1501CBC4059412 | Since: 1207
 *
 * @deprecated Use task.taskLootNearestEntity() instead
 */
export declare function taskLootNearestEntity(ped: number | Ped, pos: Vector3): void;
/**
 * Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
 *
 * Hash: 0x482C99D0B38D1B0A | Since: 1207
 *
 * @deprecated Use task.taskMelee() instead
 */
export declare function taskMelee(ped: number | Ped, targetPed: number | Ped): boolean;
/**
 * timer: in ms, if it reaches 0 it will auto warp the ped on the horse
 * mountStyle: See TASK_ENTER_VEHICLE
 * Flags will still apply to mountStyle
 *
 * Hash: 0x92DB0739813C5186 | Since: 1207
 *
 * @deprecated Use task.taskMountAnimal() instead
 */
export declare function taskMountAnimal(ped: number | Ped, mount: number | Ped, timer: number, seatIndex: number, pedSpeed: number, mountStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4AA5AA97C65E4A2F | Since: 1207
 *
 * @deprecated Use task.taskMoveBeInFormation() instead
 */
export declare function taskMoveBeInFormation(ped: number | Ped): void;
/**
 * Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
 *
 * Hash: 0x79482C12482A860D | Since: 1207
 *
 * @deprecated Use task.taskMoveFollowRoadUsingNavmesh() instead
 */
export declare function taskMoveFollowRoadUsingNavmesh(ped: number | Ped, moveBlendRatio: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x8AA1593AEC087A29 | Since: 1207
 *
 * @deprecated Use task.taskMoveInTraffic() instead
 */
export declare function taskMoveInTraffic(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x13DED0BC45600FE1 | Since: 1207
 *
 * @deprecated Use task.taskMoveInTrafficAwayFromEntity() instead
 */
export declare function taskMoveInTrafficAwayFromEntity(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xDCA3A13F7A45338B | Since: 1207
 *
 * @deprecated Use task.taskMoveInTrafficToDestination() instead
 */
export declare function taskMoveInTrafficToDestination(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7B6A04F98BBAFB2C | Since: 1207
 *
 * @deprecated Use task.taskMoveNetworkAdvancedByNameWithInitParams() instead
 */
export declare function taskMoveNetworkAdvancedByNameWithInitParams(ped: number | Ped, moveNetworkDefName: string, taskData: any, pos: Vector3, rot: Vector3, flag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF92171093BCABED4 | Since: 1207
 *
 * @deprecated Use task.taskMoveNetworkAdvancedByNameWithInitParamsAttached() instead
 */
export declare function taskMoveNetworkAdvancedByNameWithInitParamsAttached(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2D537BA194896636 | Since: 1207
 *
 * @deprecated Use task.taskMoveNetworkByName() instead
 */
export declare function taskMoveNetworkByName(ped: number | Ped, task: string, multiplier: number, animDict: string, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x139805C2A67C4795 | Since: 1207
 *
 * @deprecated Use task.taskMoveNetworkByNameWithInitParams() instead
 */
export declare function taskMoveNetworkByNameWithInitParams(ped: number | Ped, moveNetworkDefName: string, taskData: any, animDict: string, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBDA5DF49D080FE4E | Since: 1207
 *
 * @deprecated Use task.taskPatrol() instead
 */
export declare function taskPatrol(ped: number | Ped, patrolRoute: string): void;
/**
 * This tasks the ped to do nothing for the specified amount of milliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 *
 * Hash: 0xE73A266DB0CA9042 | Since: 1207
 *
 * @deprecated Use task.taskPause() instead
 */
export declare function taskPause(ped: number | Ped, ms: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD04FE6765D990A06 | Since: 1207
 *
 * @deprecated Use task.taskPedSlideToCoord() instead
 */
export declare function taskPedSlideToCoord(ped: number | Ped, pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5ABA3986D90D8A3B | Since: 1207
 *
 * @deprecated Use task.taskPerformSequence() instead
 */
export declare function taskPerformSequence(ped: number | Ped, taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x89221B16730234F0 | Since: 1207
 *
 * @deprecated Use task.taskPerformSequenceFromProgress() instead
 */
export declare function taskPerformSequenceFromProgress(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4391700CBD89C3D8 | Since: 1207
 *
 * @deprecated Use task.taskPersistentCharacter() instead
 */
export declare function taskPersistentCharacter(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x502EC17B1BED4BFA | Since: 1207
 *
 * @deprecated Use task.taskPickupCarriableEntity() instead
 */
export declare function taskPickupCarriableEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x55B0ECFD98596624 | Since: 1207
 *
 * @deprecated Use task.taskPickUpWeapon() instead
 */
export declare function taskPickUpWeapon(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC7F0B43DCDC57E3D | Since: 1207
 *
 * @deprecated Use task.taskPlaceCarriedEntityAtCoord() instead
 */
export declare function taskPlaceCarriedEntityAtCoord(ped: number | Ped, entity: number | Entity, pos: Vector3, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6D3D87C57B3D52C7 | Since: 1207
 *
 * @deprecated Use task.taskPlaceCarriedEntityOnMount() instead
 */
export declare function taskPlaceCarriedEntityOnMount(ped: number | Ped, entity: number | Entity, mount: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x965FEC691D55E9BF | Since: 1207
 *
 * @deprecated Use task.taskPlantBomb() instead
 */
export declare function taskPlantBomb(ped: number | Ped, pos: Vector3, heading: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/animations
 * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
 * ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags
 *
 * Hash: 0xEA47FE3719165B94 | Since: 1207
 *
 * @deprecated Use task.taskPlayAnim() instead
 */
export declare function taskPlayAnim(ped: number | Ped, animDict: string, animName: string, speed: number, speedMultiplier: number, duration: number, flags: number, playbackRate: number, ikFlags: number, taskFilter: string): void;
/**
 * flags: see TASK_PLAY_ANIM
 * ikFlags: see TASK_PLAY_ANIM
 *
 * Hash: 0x83CDB10EA29B370B | Since: 1207
 *
 * @deprecated Use task.taskPlayAnimAdvanced() instead
 */
export declare function taskPlayAnimAdvanced(ped: number | Ped, animDict: string, animName: string, pos: Vector3, rot: Vector3, speed: number, speedMultiplier: number, duration: number, flags: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
 * emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
 *
 * enum eEmoteType
 * {
 * EMOTE_TYPE_INVALID = -1,
 * EMOTE_TYPE_REACT,
 * EMOTE_TYPE_ACTION,
 * EMOTE_TYPE_TAUNT,
 * EMOTE_TYPE_GREET,
 * EMOTE_TYPE_TWIRL_GUN,
 * EMOTE_TYPE_DANCE_FLOOR
 * };
 *
 * enum eEmotePlaybackMode
 * {
 * EMOTE_PM_INVALID = -1,
 * EMOTE_PM_UPPERBODY,
 * EMOTE_PM_UPPERBODY_LOOP,
 * EMOTE_PM_FULLBODY,
 * };
 *
 * Hash: 0xB31A277C1AC7B7FF | Since: 1207
 *
 * @deprecated Use task.taskPlayEmoteWithHash() instead
 */
export declare function taskPlayEmoteWithHash(ped: number | Ped, emoteType: number, playbackMode: number, emote: number | string, isSecondaryTask: boolean, canBreakOut: boolean, disableEarlyOutAnimTag: boolean, ignoreInvalidMainTask: boolean, destroyProps: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAD67214236AB1CFE | Since: 1207
 *
 * @deprecated Use task.taskPlayUpperAnimFacingEntity() instead
 */
export declare function taskPlayUpperAnimFacingEntity(ped: number | Ped, animDict: string, animName: string, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x87BE56724650408E | Since: 1207
 *
 * @deprecated Use task.taskPolice() instead
 */
export declare function taskPolice(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4172393E6BE1FECE | Since: 1207
 *
 * @deprecated Use task.taskPutPedDirectlyIntoCover() instead
 */
export declare function taskPutPedDirectlyIntoCover(ped: number | Ped, pos: Vector3, timeout: number, coverpoint: number): void;
/**
 * grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
 *
 * Hash: 0xA05F3F20889D7A5B | Since: 1207
 *
 * @deprecated Use task.taskPutPedDirectlyIntoGrapple() instead
 */
export declare function taskPutPedDirectlyIntoGrapple(ped: number | Ped, grappleTarget: number | Ped, grappleStyle: number | string): void;
/**
 * meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
 *
 * Hash: 0x1C6CD14A876FFE39 | Since: 1207
 *
 * @deprecated Use task.taskPutPedDirectlyIntoMelee() instead
 */
export declare function taskPutPedDirectlyIntoMelee(ped: number | Ped, meleeTarget: number | Ped, meleeStyle: number | string, animBlendRatio: number): void;
/**
 * Makes a ped react to an entity.
 * Params: reactingTo Entity can be 0, p8 is always 4
 *
 * Hash: 0xC4C32C31920E1B70 | Since: 1207
 *
 * @deprecated Use task.taskReact() instead
 */
export declare function taskReact(ped: number | Ped, reactingTo: number | Entity, pos: Vector3, reactionName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x62D2916F56B9CD2D | Since: 1207
 *
 * @deprecated Use task.taskReloadWeapon() instead
 */
export declare function taskReloadWeapon(ped: number | Ped, unused: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x356088527D9EBAAD | Since: 1207
 *
 * @deprecated Use task.taskReviveTarget() instead
 */
export declare function taskReviveTarget(ped: number | Ped, reviver: number | Ped, tool: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x37FB1C870E2EC2C6 | Since: 1207
 *
 * @deprecated Use task.taskRideTrain() instead
 */
export declare function taskRideTrain(ped: number | Ped, train: number | Vehicle, scenarioPoint: number, scenarioHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x7BB967F85D8CCBDB | Since: 1207
 *
 * @deprecated Use task.taskRobPed() instead
 */
export declare function taskRobPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x126EF75F1E17ABE5 | Since: 1207
 *
 * @deprecated Use task.taskScriptedAnimation() instead
 */
export declare function taskScriptedAnimation(ped: number | Ped, args: any): void;
/**
 * No comment provided
 *
 * Hash: 0x8D7F2A63688C20A4 | Since: 1207
 *
 * @deprecated Use task.taskSeekClearLosToEntity() instead
 */
export declare function taskSeekClearLosToEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x84D32B3BEC531324 | Since: 1207
 *
 * @deprecated Use task.taskSeekCoverFromPed() instead
 */
export declare function taskSeekCoverFromPed(ped: number | Ped, fromPed: number | Ped, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x75AC2B60386D89F2 | Since: 1207
 *
 * @deprecated Use task.taskSeekCoverFromPos() instead
 */
export declare function taskSeekCoverFromPos(ped: number | Ped, pos: Vector3, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x39246A6958EF072C | Since: 1207
 *
 * @deprecated Use task.taskSeekCoverToCoords() instead
 */
export declare function taskSeekCoverToCoords(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD43D95C7A869447F | Since: 1207
 *
 * @deprecated Use task.taskSeekCoverToCoverPoint() instead
 */
export declare function taskSeekCoverToCoverPoint(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x90D2156198831D69 | Since: 1207
 *
 * @deprecated Use task.taskSetBlockingOfNonTemporaryEvents() instead
 */
export declare function taskSetBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x17293C633C8AC019 | Since: 1207
 *
 * @deprecated Use task.taskSetCrouchMovement() instead
 */
export declare function taskSetCrouchMovement(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x933C06518B52A9A4 | Since: 1207
 *
 * @deprecated Use task.taskSetSphereDefensiveArea() instead
 */
export declare function taskSetSphereDefensiveArea(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x4C3FA937B44A90FA | Since: 1207
 *
 * @deprecated Use task.taskSetStealthMovement() instead
 */
export declare function taskSetStealthMovement(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x452419CBD838065B | Since: 1207
 *
 * @deprecated Use task.taskShockingEventReact() instead
 */
export declare function taskShockingEventReact(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x46A6CC01E0826106 | Since: 1207
 *
 * @deprecated Use task.taskShootAtCoord() instead
 */
export declare function taskShootAtCoord(ped: number | Ped, pos: Vector3, duration: number, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x08DA95E8298AE772 | Since: 1207
 *
 * @deprecated Use task.taskShootAtEntity() instead
 */
export declare function taskShootAtEntity(entity: number | Entity, targetEntity: number | Entity, duration: number, firingPattern: number | string, affectCockedState: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x08AA95E8298AE772 | Since: 1207
 *
 * @deprecated Use task.taskShootWithWeapon() instead
 */
export declare function taskShootWithWeapon(ped: number | Ped, args: any): void;
/**
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 *
 * Hash: 0x7AA80209BDA643EB | Since: 1207
 *
 * @deprecated Use task.taskShuffleToNextVehicleSeat() instead
 */
export declare function taskShuffleToNextVehicleSeat(ped: number | Ped, vehicle: number | Vehicle): void;
/**
 * Makes the specified ped flee the specified distance from the specified position.
 * fleeType: see TASK_FLEE_COORD
 *
 * Hash: 0x94587F17E9C365D5 | Since: 1207
 *
 * @deprecated Use task.taskSmartFleeCoord() instead
 */
export declare function taskSmartFleeCoord(ped: number | Ped, pos: Vector3, distance: number, time: number, fleeType: number, fleeSpeed: number): void;
/**
 * Makes a ped run away from another ped (fleeFromTarget)
 *
 * fleeDistance = ped will flee this distance
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 * fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
 * fleeSpeed = mostly 3f, rarely 1f in R* Scripts
 *
 * Hash: 0x22B0D0E37CCB840D | Since: 1207
 *
 * @deprecated Use task.taskSmartFleePed() instead
 */
export declare function taskSmartFleePed(ped: number | Ped, fleeFromTarget: number | Ped, fleeDistance: number, fleeTime: number, fleeType: number, fleeSpeed: number, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAE032F8BBA959E90 | Since: 1207
 *
 * @deprecated Use task.taskStandGuard() instead
 */
export declare function taskStandGuard(ped: number | Ped, pos: Vector3, heading: number, scenarioName: string): void;
/**
 * Makes the specified ped stand still for (time) milliseconds.
 *
 * Hash: 0x919BE13EED931959 | Since: 1207
 *
 * @deprecated Use task.taskStandStill() instead
 */
export declare function taskStandStill(ped: number | Ped, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4D1F61FC34AF3CD1 | Since: 1207
 *
 * @deprecated Use task.taskStartScenarioAtPosition() instead
 */
export declare function taskStartScenarioAtPosition(ped: number | Ped, scenarioHash: number | string, pos: Vector3, heading: number, duration: number, sittingScenario: boolean, teleport: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
 * Params: duration in milliseconds
 *
 * conditionalHash (optionally):
 * 0 = play random conditional anim.
 * Every conditional anim has requirements to play it.
 * If requirements are not met, ped plays random allowed conditional anim or can be stuck.
 * For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
 *
 * Hash: 0x524B54361229154F | Since: 1207
 *
 * @deprecated Use task.taskStartScenarioInPlaceHash() instead
 */
export declare function taskStartScenarioInPlaceHash(ped: number | Ped, scenarioHash: number | string, duration: number, playEnterAnim: boolean, conditionalHash: number | string, heading: number): void;
/**
 * Makes the ped run to take cover
 *
 * Hash: 0xE5DA8615A6180789 | Since: 1207
 *
 * @deprecated Use task.taskStayInCover() instead
 */
export declare function taskStayInCover(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xED27560703F37258 | Since: 1207
 *
 * @deprecated Use task.taskStopLeadingHorse() instead
 */
export declare function taskStopLeadingHorse(ped: number | Ped): void;
/**
 * Baits: see 0x9B0C7FA063E67629
 *
 * Hash: 0x2C28AC30A72722DA | Since: 1207
 *
 * @deprecated Use task.taskSwapFishingBait() instead
 */
export declare function taskSwapFishingBait(ped: number | Ped, bait: string, withoutBuoy: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA21C51255B205245 | Since: 1207
 *
 * @deprecated Use task.taskSwapWeapon() instead
 */
export declare function taskSwapWeapon(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7285951DBF6B5A51 | Since: 1207
 *
 * @deprecated Use task.taskThrowProjectile() instead
 */
export declare function taskThrowProjectile(ped: number | Ped): void;
/**
 * duration in milliseconds
 *
 * Hash: 0x1DDA930A0AC38571 | Since: 1207
 *
 * @deprecated Use task.taskTurnPedToFaceCoord() instead
 */
export declare function taskTurnPedToFaceCoord(ped: number | Ped, pos: Vector3, duration: number): void;
/**
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * Hash: 0x5AD23D40115353AC | Since: 1207
 *
 * @deprecated Use task.taskTurnPedToFaceEntity() instead
 */
export declare function taskTurnPedToFaceEntity(ped: number | Ped, targetEntity: number | Entity, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84179419DBDD36F2 | Since: 1207
 *
 * @deprecated Use task.taskTurnToFaceClosestPed() instead
 */
export declare function taskTurnToFaceClosestPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9FDA1B3D7E7028B3 | Since: 1207
 *
 * @deprecated Use task.taskUseNearestScenarioChainToCoord() instead
 */
export declare function taskUseNearestScenarioChainToCoord(ped: number | Ped, pos: Vector3, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x97A28E63F0BA5631 | Since: 1207
 *
 * @deprecated Use task.taskUseNearestScenarioChainToCoordWarp() instead
 */
export declare function taskUseNearestScenarioChainToCoordWarp(ped: number | Ped, pos: Vector3, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x58E2E0F23F6B76C3 | Since: 1207
 *
 * @deprecated Use task.taskUseNearestScenarioToCoordWarp() instead
 */
export declare function taskUseNearestScenarioToCoordWarp(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3774B03456DD6106 | Since: 1207
 *
 * @deprecated Use task.taskUseNearestTrainScenarioToCoordWarp() instead
 */
export declare function taskUseNearestTrainScenarioToCoordWarp(ped: number | Ped, pos: Vector3, distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x14747F4A5971DE4E | Since: 1207
 *
 * @deprecated Use task.taskUseRandomScenarioInGroup() instead
 */
export declare function taskUseRandomScenarioInGroup(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCCDAE6324B6A821C | Since: 1207
 *
 * @deprecated Use task.taskUseScenarioPoint() instead
 */
export declare function taskUseScenarioPoint(ped: number | Ped, scenario: number, conditionalAnim: string): void;
/**
 * No comment provided
 *
 * Hash: 0x447C1E9EF844BC0F | Since: 1207
 *
 * @deprecated Use task.taskVehicleAimAtCoord() instead
 */
export declare function taskVehicleAimAtCoord(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xE41885592B08B097 | Since: 1207
 *
 * @deprecated Use task.taskVehicleAimAtPed() instead
 */
export declare function taskVehicleAimAtPed(ped: number | Ped, target: number | Ped): void;
/**
 * Old name: _TASK_VEHICLE_DRIVE_TO_POINT
 * flag: 524419 and 0 in shop_horse_shop R* Script
 *
 * Hash: 0x089FF2FB965F0A29 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveStraightToPoint() instead
 */
export declare function taskVehicleDriveStraightToPoint(driver: number | Ped, vehicle: number | Vehicle, pos: Vector3, flag: number): void;
/**
 * stopRange: how close vehicle will get to destination before stopping, default 4.0
 * straightLineDist: distance at which AI switches to heading for target directly instead of following nodes, default -1
 *
 * Hash: 0xE2A2AA2F659D77A7 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveToCoord() instead
 */
export declare function taskVehicleDriveToCoord(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, style: any, vehicleModel: number | string, drivingMode: number, stopRange: number, straightLineDist: number): void;
/**
 * flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
 * p7 = 6 or 3
 * p8 = x coordinate
 * p9 - 8.f
 * p10 = false
 *
 * Hash: 0x7F241A0D14354583 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveToDestination() instead
 */
export declare function taskVehicleDriveToDestination(driver: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, drivingFlags: number, stoppingRange1: number, stoppingRange2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x480142959D337D00 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveWander() instead
 */
export declare function taskVehicleDriveWander(ped: number | Ped, vehicle: number | Vehicle, speed: number, drivingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0FA6E4B75F302400 | Since: 1207
 *
 * @deprecated Use task.taskVehicleEscort() instead
 */
export declare function taskVehicleEscort(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, mode: number, speed: number, drivingStyle: number, minDistance: number, noRoadsDistance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3123FAA6DB1CF7ED | Since: 1207
 *
 * @deprecated Use task.taskVehicleFollowWaypointRecording() instead
 */
export declare function taskVehicleFollowWaypointRecording(ped: number | Ped, vehicle: number | Vehicle, waypointRecording: string, drivingMode: number, eWaypoint: number, flag: number, stoppingDist: number): void;
/**
 * No comment provided
 *
 * Hash: 0x195AEEB13CEFE2EE | Since: 1207
 *
 * @deprecated Use task.taskVehicleGotoNavmesh() instead
 */
export declare function taskVehicleGotoNavmesh(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, behaviorFlag: number, stoppingRange: number): void;
/**
 * No comment provided
 *
 * Hash: 0x659427E0EF36BCDE | Since: 1207
 *
 * @deprecated Use task.taskVehicleMission() instead
 */
export declare function taskVehicleMission(driver: number | Ped, vehicle: number | Vehicle, vehicleTarget: number | Vehicle, missionType: number, DriveAgainstTraffic: boolean): void;
/**
 * See TASK_VEHICLE_MISSION
 *
 * Hash: 0x9454528DF15D657A | Since: 1207
 *
 * @deprecated Use task.taskVehicleMissionPedTarget() instead
 */
export declare function taskVehicleMissionPedTarget(ped: number | Ped, vehicle: number | Vehicle, pedTarget: number | Ped, mode: number, maxSpeed: number, drivingStyle: number, minDistance: number, DriveAgainstTraffic: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5190796ED39C9B6D | Since: 1207
 *
 * @deprecated Use task.taskVehicleShootAtCoord() instead
 */
export declare function taskVehicleShootAtCoord(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x10AB107B887214D8 | Since: 1207
 *
 * @deprecated Use task.taskVehicleShootAtPed() instead
 */
export declare function taskVehicleShootAtPed(ped: number | Ped, target: number | Ped): void;
/**
 * Documentation from GTA V, might be the same in RDR:
 *
 * '1 - brake
 * '3 - brake + reverse
 * '4 - turn left 90 + braking
 * '5 - turn right 90 + braking
 * '6 - brake strong (handbrake?) until time ends
 * '7 - turn left + accelerate
 * '7 - turn right + accelerate
 * '9 - weak acceleration
 * '10 - turn left + restore wheel pos to center in the end
 * '11 - turn right + restore wheel pos to center in the end
 * '13 - turn left + go reverse
 * '14 - turn left + go reverse
 * '16 - crash the game after like 2 seconds :)
 * '17 - keep actual state, game crashed after few tries
 * '18 - game crash
 * '19 - strong brake + turn left/right
 * '20 - weak brake + turn left then turn right
 * '21 - weak brake + turn right then turn left
 * '22 - brake + reverse
 * '23 - accelerate fast
 * '24 - brake
 * '25 - brake turning left then when almost stopping it turns left more
 * '26 - brake turning right then when almost stopping it turns right more
 * '27 - brake until car stop or until time ends
 * '28 - brake + strong reverse acceleration
 * '30 - performs a burnout (brake until stop + brake and accelerate)
 * '31 - accelerate + handbrake
 * '32 - accelerate very strong
 *
 * Seems to be this:
 * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
 *
 * Hash: 0xC429DCEEB339E129 | Since: 1207
 *
 * @deprecated Use task.taskVehicleTempAction() instead
 */
export declare function taskVehicleTempAction(driver: number | Ped, vehicle: number | Vehicle, action: number, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x04ACFAC71E6858F9 | Since: 1207
 *
 * @deprecated Use task.taskWalkAway() instead
 */
export declare function taskWalkAway(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x8AC76D1408731732 | Since: 1207
 *
 * @deprecated Use task.taskWanderAndConverseWithPed() instead
 */
export declare function taskWanderAndConverseWithPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE054346CA3A0F315 | Since: 1207
 *
 * @deprecated Use task.taskWanderInArea() instead
 */
export declare function taskWanderInArea(ped: number | Ped, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9FDA168777B28424 | Since: 1207
 *
 * @deprecated Use task.taskWanderInVolume() instead
 */
export declare function taskWanderInVolume(ped: number | Ped, volume: number): void;
/**
 * Makes ped walk around the area the params p1 p2 seems to not affect anything but p2 is either 0 or 1 and p1 is mostly 1.0 or ped heading
 *
 * Hash: 0xBB9CE077274F6A1B | Since: 1207
 *
 * @deprecated Use task.taskWanderStandard() instead
 */
export declare function taskWanderStandard(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x527EA3DB8BC7F03B | Since: 1207
 *
 * @deprecated Use task.taskWanderSwim() instead
 */
export declare function taskWanderSwim(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9A7D091411C5F684 | Since: 1207
 *
 * @deprecated Use task.taskWarpPedIntoVehicle() instead
 */
export declare function taskWarpPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seat: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7157B82D60E4BC46 | Since: 1207
 *
 * @deprecated Use task.taskWeapon() instead
 */
export declare function taskWeapon(ped: number | Ped): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
 * p2: UNSPECIFIED
 *
 * Hash: 0xD6401A1B2F63BED6 | Since: 1207
 *
 * @deprecated Use task.taskWhistleAnim() instead
 */
export declare function taskWhistleAnim(ped: number | Ped, audPedWhistleType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x67406F2C8F87FC4F | Since: 1207
 *
 * @deprecated Use task.uncuffPed() instead
 */
export declare function uncuffPed(ped: number | Ped): void;
/**
 * getupSetHash: see nm_blend_out_sets.meta
 *
 * Hash: 0x79559BAD83CCD038 | Since: 1207
 *
 * @deprecated Use task.unhogtiePed() instead
 */
export declare function unhogtiePed(ped: number | Ped, flags: number, getupSetHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA98FCAFD7893C834 | Since: 1207
 *
 * @deprecated Use task.updateTaskHandsUpDuration() instead
 */
export declare function updateTaskHandsUpDuration(ped: number | Ped, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A353B8E6B1095B5 | Since: 1207
 *
 * @deprecated Use task.useWaypointRecordingAsAssistedMovementRoute() instead
 */
export declare function useWaypointRecordingAsAssistedMovementRoute(waypointRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4D6D30AB18B0B089 | Since: 1207
 *
 * @deprecated Use task.vehicleWaypointPlaybackGetIsPaused() instead
 */
export declare function vehicleWaypointPlaybackGetIsPaused(): any;
/**
 * No comment provided
 *
 * Hash: 0x121F0593E0A431D7 | Since: 1207
 *
 * @deprecated Use task.vehicleWaypointPlaybackOverrideSpeed() instead
 */
export declare function vehicleWaypointPlaybackOverrideSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8A4E6AC373666BC5 | Since: 1207
 *
 * @deprecated Use task.vehicleWaypointPlaybackPause() instead
 */
export declare function vehicleWaypointPlaybackPause(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xDC04FCAA7839D492 | Since: 1207
 *
 * @deprecated Use task.vehicleWaypointPlaybackResume() instead
 */
export declare function vehicleWaypointPlaybackResume(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x5CEB25A7D2848963 | Since: 1207
 *
 * @deprecated Use task.vehicleWaypointPlaybackUseDefaultSpeed() instead
 */
export declare function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xD73A5D1F0325C71C | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackGetIsAiming() instead
 */
export declare function waypointPlaybackGetIsAiming(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x701375A7D43F01CB | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackGetIsPaused() instead
 */
export declare function waypointPlaybackGetIsPaused(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA5B94DF8AF058F46 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackGetIsShooting() instead
 */
export declare function waypointPlaybackGetIsShooting(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D7D2B47FA788E85 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackOverrideSpeed() instead
 */
export declare function waypointPlaybackOverrideSpeed(ped: number | Ped, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F342546AA06FED5 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackPause() instead
 */
export declare function waypointPlaybackPause(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x244F70C84C547D2D | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackResume() instead
 */
export declare function waypointPlaybackResume(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8968400D900ED8B3 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartAimingAtCoord() instead
 */
export declare function waypointPlaybackStartAimingAtCoord(): void;
/**
 * No comment provided
 *
 * Hash: 0x4F158205E0C74385 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartAimingAtEntity() instead
 */
export declare function waypointPlaybackStartAimingAtEntity(): void;
/**
 * No comment provided
 *
 * Hash: 0x20E330937C399D29 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartAimingAtPed() instead
 */
export declare function waypointPlaybackStartAimingAtPed(): void;
/**
 * No comment provided
 *
 * Hash: 0x057A25CFCC9DB671 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartShootingAtCoord() instead
 */
export declare function waypointPlaybackStartShootingAtCoord(): void;
/**
 * No comment provided
 *
 * Hash: 0x4AF458F71C1196D2 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartShootingAtEntity() instead
 */
export declare function waypointPlaybackStartShootingAtEntity(): void;
/**
 * No comment provided
 *
 * Hash: 0xE70BA7B90F8390DC | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStartShootingAtPed() instead
 */
export declare function waypointPlaybackStartShootingAtPed(): void;
/**
 * No comment provided
 *
 * Hash: 0x47EFA040EBB8E2EA | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackStopAimingOrShooting() instead
 */
export declare function waypointPlaybackStopAimingOrShooting(): void;
/**
 * No comment provided
 *
 * Hash: 0x6599D834B12D0800 | Since: 1207
 *
 * @deprecated Use task.waypointPlaybackUseDefaultSpeed() instead
 */
export declare function waypointPlaybackUseDefaultSpeed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB629A298081F876F | Since: 1207
 *
 * @deprecated Use task.waypointRecordingGetClosestWaypoint() instead
 */
export declare function waypointRecordingGetClosestWaypoint(waypointRecording: string, pos: Vector3, point: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2FB897405C90B361 | Since: 1207
 *
 * @deprecated Use task.waypointRecordingGetCoord() instead
 */
export declare function waypointRecordingGetCoord(waypointRecording: string, point: number, coord: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5343532C01A07234 | Since: 1207
 *
 * @deprecated Use task.waypointRecordingGetNumPoints() instead
 */
export declare function waypointRecordingGetNumPoints(waypointRecording: string, points: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x005622AEBC33ACA9 | Since: 1207
 *
 * @deprecated Use task.waypointRecordingGetSpeedAtPoint() instead
 */
export declare function waypointRecordingGetSpeedAtPoint(waypointRecording: string, point: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0000A8ACDC2E1B6A | Since: 1207
 *
 * @deprecated Use task._0x0000A8ACDC2E1B6A() instead
 */
export declare function _0x0000A8ACDC2E1B6A(): void;
/**
 * No comment provided
 *
 * Hash: 0x00FFE0F85253C572 | Since: 1207
 *
 * @deprecated Use task._0x00FFE0F85253C572() instead
 */
export declare function _0x00FFE0F85253C572(): any;
/**
 * No comment provided
 *
 * Hash: 0x01AF8A3729231A43 | Since: 1207
 *
 * @deprecated Use task._0x01AF8A3729231A43() instead
 */
export declare function _0x01AF8A3729231A43(): any;
/**
 * No comment provided
 *
 * Hash: 0x0365000D8BF86531 | Since: 1207
 *
 * @deprecated Use task._0x0365000D8BF86531() instead
 */
export declare function _0x0365000D8BF86531(): any;
/**
 * No comment provided
 *
 * Hash: 0x03D741CB4052E26C | Since: 1232
 *
 * @deprecated Use task._0x03D741CB4052E26C() instead
 */
export declare function _0x03D741CB4052E26C(): any;
/**
 * No comment provided
 *
 * Hash: 0x06ECF3925BC2ABAE | Since: 1311
 *
 * @deprecated Use task.setPedPathMayUseSlidingSurfaces() instead
 */
export declare function setPedPathMayUseSlidingSurfaces(ped: number | Ped, useSlidingSurfaces: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x098036CAB8373D36 | Since: 1207
 *
 * @deprecated Use task._0x098036CAB8373D36() instead
 */
export declare function _0x098036CAB8373D36(): void;
/**
 * No comment provided
 *
 * Hash: 0x098CAA6DBE7D8D82 | Since: 1207
 *
 * @deprecated Use task._0x098CAA6DBE7D8D82() instead
 */
export declare function _0x098CAA6DBE7D8D82(): void;
/**
 * No comment provided
 *
 * Hash: 0x0A98A362C5A19A43 | Since: 1207
 *
 * @deprecated Use task._0x0A98A362C5A19A43() instead
 */
export declare function _0x0A98A362C5A19A43(): any;
/**
 * No comment provided
 *
 * Hash: 0x0D322AEF8878B8FE | Since: 1207
 *
 * @deprecated Use task._0x0D322AEF8878B8FE() instead
 */
export declare function _0x0D322AEF8878B8FE(): void;
/**
 * No comment provided
 *
 * Hash: 0x0E184495B27BB57D | Since: 1207
 *
 * @deprecated Use task._0x0E184495B27BB57D() instead
 */
export declare function _0x0E184495B27BB57D(): void;
/**
 * No comment provided
 *
 * Hash: 0x0F4F6C4CE471259D | Since: 1207
 *
 * @deprecated Use task._0x0F4F6C4CE471259D() instead
 */
export declare function _0x0F4F6C4CE471259D(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FE797DD9F70DFA6 | Since: 1207
 *
 * @deprecated Use task._0x0FE797DD9F70DFA6() instead
 */
export declare function _0x0FE797DD9F70DFA6(): void;
/**
 * No comment provided
 *
 * Hash: 0x10ADFDF07B7DFFBA | Since: 1207
 *
 * @deprecated Use task._0x10ADFDF07B7DFFBA() instead
 */
export declare function _0x10ADFDF07B7DFFBA(): any;
/**
 * No comment provided
 *
 * Hash: 0x10C44F633E2D6D9E | Since: 1207
 *
 * @deprecated Use task._0x10C44F633E2D6D9E() instead
 */
export declare function _0x10C44F633E2D6D9E(): void;
/**
 * No comment provided
 *
 * Hash: 0x11C7CE1AE38911B5 | Since: 1207
 *
 * @deprecated Use task._0x11C7CE1AE38911B5() instead
 */
export declare function _0x11C7CE1AE38911B5(): any;
/**
 * No comment provided
 *
 * Hash: 0x12990818C1D35886 | Since: 1207
 *
 * @deprecated Use task.setPedPathPreferToAvoidFoliage() instead
 */
export declare function setPedPathPreferToAvoidFoliage(ped: number | Ped, preferAvoidFoliage: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x141BC64C8D7C5529 | Since: 1207
 *
 * @deprecated Use task._0x141BC64C8D7C5529() instead
 */
export declare function _0x141BC64C8D7C5529(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x152664AA3188B193 | Since: 1207
 *
 * @deprecated Use task._0x152664AA3188B193() instead
 */
export declare function _0x152664AA3188B193(): any;
/**
 * No comment provided
 *
 * Hash: 0x1632EB9386CDBE64 | Since: 1207
 *
 * @deprecated Use task._0x1632EB9386CDBE64() instead
 */
export declare function _0x1632EB9386CDBE64(): void;
/**
 * No comment provided
 *
 * Hash: 0x19BC99C678FBA139 | Since: 1207
 *
 * @deprecated Use task._0x19BC99C678FBA139() instead
 */
export declare function _0x19BC99C678FBA139(): void;
/**
 * No comment provided
 *
 * Hash: 0x1A7D63CB1B0BB223 | Since: 1207
 *
 * @deprecated Use task._0x1A7D63CB1B0BB223() instead
 */
export declare function _0x1A7D63CB1B0BB223(): void;
/**
 * No comment provided
 *
 * Hash: 0x1AC5A8AB50CFAA33 | Since: 1207
 *
 * @deprecated Use task._0x1AC5A8AB50CFAA33() instead
 */
export declare function _0x1AC5A8AB50CFAA33(): any;
/**
 * Checks whether a specified scenario is currently being used (actively played) by any entity (player or ped). Returns true if the scenario is already occupied, otherwise false.
 *
 * Hash: 0x1ACBC313966C21F3 | Since: 1436
 *
 * @deprecated Use task.isScenarioInUse() instead
 */
export declare function isScenarioInUse(scenarioHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1D125814EBC517EB | Since: 1207
 *
 * @deprecated Use task._0x1D125814EBC517EB() instead
 */
export declare function _0x1D125814EBC517EB(): void;
/**
 * No comment provided
 *
 * Hash: 0x1ECF56C040FD839C | Since: 1207
 *
 * @deprecated Use task._0x1ECF56C040FD839C() instead
 */
export declare function _0x1ECF56C040FD839C(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F298C7BD30D1240 | Since: 1207
 *
 * @deprecated Use task._0x1F298C7BD30D1240() instead
 */
export declare function _0x1F298C7BD30D1240(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1F7A9A9C38C13A56 | Since: 1207
 *
 * @deprecated Use task._0x1F7A9A9C38C13A56() instead
 */
export declare function _0x1F7A9A9C38C13A56(): any;
/**
 * No comment provided
 *
 * Hash: 0x2064B33F6E6B92D4 | Since: 1207
 *
 * @deprecated Use task._0x2064B33F6E6B92D4() instead
 */
export declare function _0x2064B33F6E6B92D4(): void;
/**
 * No comment provided
 *
 * Hash: 0x216343750545A486 | Since: 1207
 *
 * @deprecated Use task.setPedPathPreferHorseWalkable() instead
 */
export declare function setPedPathPreferHorseWalkable(ped: number | Ped, preferHorseWalkable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x22CD2C33ED4467A1 | Since: 1207
 *
 * @deprecated Use task._0x22CD2C33ED4467A1() instead
 */
export declare function _0x22CD2C33ED4467A1(): any;
/**
 * No comment provided
 *
 * Hash: 0x22CDBF317C40A122 | Since: 1207
 *
 * @deprecated Use task._0x22CDBF317C40A122() instead
 */
export declare function _0x22CDBF317C40A122(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x23767D80C7EED7C6 | Since: 1311
 *
 * @deprecated Use task._0x23767D80C7EED7C6() instead
 */
export declare function _0x23767D80C7EED7C6(): void;
/**
 * No comment provided
 *
 * Hash: 0x2416EC2F31F75266 | Since: 1207
 *
 * @deprecated Use task._0x2416EC2F31F75266() instead
 */
export declare function _0x2416EC2F31F75266(entity: number | Entity, targetEntity: number | Entity, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x244430C13BA5258E | Since: 1207
 *
 * @deprecated Use task._0x244430C13BA5258E() instead
 */
export declare function _0x244430C13BA5258E(): any;
/**
 * No comment provided
 *
 * Hash: 0x28EF780BDEA8A639 | Since: 1207
 *
 * @deprecated Use task._0x28EF780BDEA8A639() instead
 */
export declare function _0x28EF780BDEA8A639(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2948235DB2058E99 | Since: 1207
 *
 * @deprecated Use task._0x2948235DB2058E99() instead
 */
export declare function _0x2948235DB2058E99(): void;
/**
 * No comment provided
 *
 * Hash: 0x2A10538D0A005E81 | Since: 1207
 *
 * @deprecated Use task._0x2A10538D0A005E81() instead
 */
export declare function _0x2A10538D0A005E81(): void;
/**
 * No comment provided
 *
 * Hash: 0x2B8AF29A78024BD3 | Since: 1207
 *
 * @deprecated Use task._0x2B8AF29A78024BD3() instead
 */
export declare function _0x2B8AF29A78024BD3(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C497BDEF897C6DF | Since: 1207
 *
 * @deprecated Use task._0x2C497BDEF897C6DF() instead
 */
export declare function _0x2C497BDEF897C6DF(): any;
/**
 * No comment provided
 *
 * Hash: 0x2D657B10F211C572 | Since: 1207
 *
 * @deprecated Use task._0x2D657B10F211C572() instead
 */
export declare function _0x2D657B10F211C572(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x2E1D6D87346BB7D2 | Since: 1207
 *
 * @deprecated Use task._0x2E1D6D87346BB7D2() instead
 */
export declare function _0x2E1D6D87346BB7D2(): void;
/**
 * No comment provided
 *
 * Hash: 0x2EB977293923C723 | Since: 1207
 *
 * @deprecated Use task._0x2EB977293923C723() instead
 */
export declare function _0x2EB977293923C723(): void;
/**
 * No comment provided
 *
 * Hash: 0x30146C25686B7836 | Since: 1207
 *
 * @deprecated Use task._0x30146C25686B7836() instead
 */
export declare function _0x30146C25686B7836(): any;
/**
 * No comment provided
 *
 * Hash: 0x30B391915538EBE2 | Since: 1207
 *
 * @deprecated Use task._0x30B391915538EBE2() instead
 */
export declare function _0x30B391915538EBE2(): void;
/**
 * No comment provided
 *
 * Hash: 0x31BB338F64D5C861 | Since: 1207
 *
 * @deprecated Use task._0x31BB338F64D5C861() instead
 */
export declare function _0x31BB338F64D5C861(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x351F74ED6177EBE7 | Since: 1207
 *
 * @deprecated Use task._0x351F74ED6177EBE7() instead
 */
export declare function _0x351F74ED6177EBE7(): any;
/**
 * No comment provided
 *
 * Hash: 0x358A1A751B335A11 | Since: 1207
 *
 * @deprecated Use task._0x358A1A751B335A11() instead
 */
export declare function _0x358A1A751B335A11(): void;
/**
 * No comment provided
 *
 * Hash: 0x370F57C47F68EBCA | Since: 1207
 *
 * @deprecated Use task._0x370F57C47F68EBCA() instead
 */
export declare function _0x370F57C47F68EBCA(): any;
/**
 * No comment provided
 *
 * Hash: 0x3ACC128510142B9D | Since: 1207
 *
 * @deprecated Use task._0x3ACC128510142B9D() instead
 */
export declare function _0x3ACC128510142B9D(waypointRecording: string, pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x3BBEECC5B8F35318 | Since: 1207
 *
 * @deprecated Use task._0x3BBEECC5B8F35318() instead
 */
export declare function _0x3BBEECC5B8F35318(): void;
/**
 * Used for HORSE_REVIVE
 *
 * Hash: 0x3F8387DB1B9F31B7 | Since: 1207
 *
 * @deprecated Use task._0x3F8387DB1B9F31B7() instead
 */
export declare function _0x3F8387DB1B9F31B7(scriptStruct: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FEB770D8ED9047A | Since: 1207
 *
 * @deprecated Use task._0x3FEB770D8ED9047A() instead
 */
export declare function _0x3FEB770D8ED9047A(): any;
/**
 * No comment provided
 *
 * Hash: 0x3FFCD7BBA074CC80 | Since: 1207
 *
 * @deprecated Use task._0x3FFCD7BBA074CC80() instead
 */
export declare function _0x3FFCD7BBA074CC80(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x41323F4E0C4AE94B | Since: 1207
 *
 * @deprecated Use task._0x41323F4E0C4AE94B() instead
 */
export declare function _0x41323F4E0C4AE94B(): void;
/**
 * No comment provided
 *
 * Hash: 0x4161648394262FDF | Since: 1207
 *
 * @deprecated Use task._0x4161648394262FDF() instead
 */
export declare function _0x4161648394262FDF(): void;
/**
 * _SET_PED_*
 *
 * Hash: 0x41D1331AFAD5A091 | Since: 1207
 *
 * @deprecated Use task._0x41D1331AFAD5A091() instead
 */
export declare function _0x41D1331AFAD5A091(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x42CFD8FD8CC8DC69 | Since: 1207
 *
 * @deprecated Use task.setPedPathNeverUseInteriors() instead
 */
export declare function setPedPathNeverUseInteriors(ped: number | Ped, neverUseInteriors: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x450080DDEDB91258 | Since: 1207
 *
 * @deprecated Use task._0x450080DDEDB91258() instead
 */
export declare function _0x450080DDEDB91258(): void;
/**
 * No comment provided
 *
 * Hash: 0x4A7D73989F52EB37 | Since: 1207
 *
 * @deprecated Use task._0x4A7D73989F52EB37() instead
 */
export declare function _0x4A7D73989F52EB37(): void;
/**
 * No comment provided
 *
 * Hash: 0x4BA972D0E5AD8122 | Since: 1207
 *
 * @deprecated Use task._0x4BA972D0E5AD8122() instead
 */
export declare function _0x4BA972D0E5AD8122(): void;
/**
 * No comment provided
 *
 * Hash: 0x4E806A395D43A458 | Since: 1207
 *
 * @deprecated Use task._0x4E806A395D43A458() instead
 */
export declare function _0x4E806A395D43A458(): void;
/**
 * No comment provided
 *
 * Hash: 0x4F57397388E1DFF8 | Since: 1207
 *
 * @deprecated Use task._0x4F57397388E1DFF8() instead
 */
export declare function _0x4F57397388E1DFF8(): void;
/**
 * Only used in R* SP Scripts
 * Params: p4 = 1.0f - 30.0f
 *
 * Hash: 0x508F5053E3F6F0C4 | Since: 1207
 *
 * @deprecated Use task._0x508F5053E3F6F0C4() instead
 */
export declare function _0x508F5053E3F6F0C4(ped: number | Ped, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x50AA09A0DA64E73C | Since: 1207
 *
 * @deprecated Use task._0x50AA09A0DA64E73C() instead
 */
export declare function _0x50AA09A0DA64E73C(): void;
/**
 * No comment provided
 *
 * Hash: 0x517D01BF27B682D1 | Since: 1207
 *
 * @deprecated Use task._0x517D01BF27B682D1() instead
 */
export declare function _0x517D01BF27B682D1(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x5217B7B6DB78E1F3 | Since: 1207
 *
 * @deprecated Use task._0x5217B7B6DB78E1F3() instead
 */
export declare function _0x5217B7B6DB78E1F3(): void;
/**
 * No comment provided
 *
 * Hash: 0x583AE9AF9CEE0958 | Since: 1207
 *
 * @deprecated Use task._0x583AE9AF9CEE0958() instead
 */
export declare function _0x583AE9AF9CEE0958(vehicle: number | Vehicle, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5952DFA38FA529FE | Since: 1232
 *
 * @deprecated Use task._0x5952DFA38FA529FE() instead
 */
export declare function _0x5952DFA38FA529FE(): any;
/**
 * Returns the entity coverpoint with offset.
 *
 * Hash: 0x59872EA4CBD11C56 | Since: 1207
 *
 * @deprecated Use task.getCoverpointFromEntityWithOffset() instead
 */
export declare function getCoverpointFromEntityWithOffset(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, heading: number): number;
/**
 * No comment provided
 *
 * Hash: 0x59AE5CA4FFB4E378 | Since: 1207
 *
 * @deprecated Use task._0x59AE5CA4FFB4E378() instead
 */
export declare function _0x59AE5CA4FFB4E378(): any;
/**
 * No comment provided
 *
 * Hash: 0x59AEA4DC640814B9 | Since: 1207
 *
 * @deprecated Use task._0x59AEA4DC640814B9() instead
 */
export declare function _0x59AEA4DC640814B9(): void;
/**
 * No comment provided
 *
 * Hash: 0x5B68D0007D9C92EB | Since: 1207
 *
 * @deprecated Use task._0x5B68D0007D9C92EB() instead
 */
export declare function _0x5B68D0007D9C92EB(): void;
/**
 * No comment provided
 *
 * Hash: 0x5D9B0BAAF04CF65B | Since: 1207
 *
 * @deprecated Use task._0x5D9B0BAAF04CF65B() instead
 */
export declare function _0x5D9B0BAAF04CF65B(): void;
/**
 * No comment provided
 *
 * Hash: 0x5EA655F01D93667A | Since: 1207
 *
 * @deprecated Use task._0x5EA655F01D93667A() instead
 */
export declare function _0x5EA655F01D93667A(): any;
/**
 * No comment provided
 *
 * Hash: 0x615DC4A82E90BB48 | Since: 1207
 *
 * @deprecated Use task._0x615DC4A82E90BB48() instead
 */
export declare function _0x615DC4A82E90BB48(): void;
/**
 * No comment provided
 *
 * Hash: 0x640A602946A8C972 | Since: 1207
 *
 * @deprecated Use task._0x640A602946A8C972() instead
 */
export declare function _0x640A602946A8C972(): any;
/**
 * No comment provided
 *
 * Hash: 0x643FD1556F621772 | Since: 1207
 *
 * @deprecated Use task._0x643FD1556F621772() instead
 */
export declare function _0x643FD1556F621772(): any;
/**
 * No comment provided
 *
 * Hash: 0x651F0530083C0E5A | Since: 1207
 *
 * @deprecated Use task._0x651F0530083C0E5A() instead
 */
export declare function _0x651F0530083C0E5A(): void;
/**
 * No comment provided
 *
 * Hash: 0x65D281985F2BDFC2 | Since: 1207
 *
 * @deprecated Use task._0x65D281985F2BDFC2() instead
 */
export declare function _0x65D281985F2BDFC2(): void;
/**
 * No comment provided
 *
 * Hash: 0x673A8779D229BA5A | Since: 1207
 *
 * @deprecated Use task._0x673A8779D229BA5A() instead
 */
export declare function _0x673A8779D229BA5A(): void;
/**
 * Only used in R* SP Script beat_washed_ashore
 * `Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2`
 *
 * Hash: 0x678D3226CF70B9C8 | Since: 1207
 *
 * @deprecated Use task._0x678D3226CF70B9C8() instead
 */
export declare function _0x678D3226CF70B9C8(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6A1AF481407BF6E9 | Since: 1207
 *
 * @deprecated Use task._0x6A1AF481407BF6E9() instead
 */
export declare function _0x6A1AF481407BF6E9(): void;
/**
 * No comment provided
 *
 * Hash: 0x6AFD84AEAA3EA538 | Since: 1207
 *
 * @deprecated Use task._0x6AFD84AEAA3EA538() instead
 */
export declare function _0x6AFD84AEAA3EA538(): any;
/**
 * No comment provided
 *
 * Hash: 0x6AFDA2264925BD11 | Since: 1207
 *
 * @deprecated Use task._0x6AFDA2264925BD11() instead
 */
export declare function _0x6AFDA2264925BD11(): void;
/**
 * No comment provided
 *
 * Hash: 0x6BA606AB3A83BC4D | Since: 1207
 *
 * @deprecated Use task._0x6BA606AB3A83BC4D() instead
 */
export declare function _0x6BA606AB3A83BC4D(): any;
/**
 * No comment provided
 *
 * Hash: 0x6C269F673C47031E | Since: 1207
 *
 * @deprecated Use task._0x6C269F673C47031E() instead
 */
export declare function _0x6C269F673C47031E(): any;
/**
 * No comment provided
 *
 * Hash: 0x6C50B9DCCCA70023 | Since: 1207
 *
 * @deprecated Use task.isEntityRevivable() instead
 */
export declare function isEntityRevivable(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6DAC799857EF3F11 | Since: 1311
 *
 * @deprecated Use task._0x6DAC799857EF3F11() instead
 */
export declare function _0x6DAC799857EF3F11(): any;
/**
 * No comment provided
 *
 * Hash: 0x722D6A49200174FE | Since: 1207
 *
 * @deprecated Use task._0x722D6A49200174FE() instead
 */
export declare function _0x722D6A49200174FE(): void;
/**
 * No comment provided
 *
 * Hash: 0x748D5E0D2A1A4C61 | Since: 1207
 *
 * @deprecated Use task._0x748D5E0D2A1A4C61() instead
 */
export declare function _0x748D5E0D2A1A4C61(): void;
/**
 * No comment provided
 *
 * Hash: 0x74F0209674864CBD | Since: 1207
 *
 * @deprecated Use task._0x74F0209674864CBD() instead
 */
export declare function _0x74F0209674864CBD(): any;
/**
 * No comment provided
 *
 * Hash: 0x756C7B4C43DF0422 | Since: 1207
 *
 * @deprecated Use task._0x756C7B4C43DF0422() instead
 */
export declare function _0x756C7B4C43DF0422(): any;
/**
 * No comment provided
 *
 * Hash: 0x764DB5A48390FBAD | Since: 1207
 *
 * @deprecated Use task._0x764DB5A48390FBAD() instead
 */
export declare function _0x764DB5A48390FBAD(): void;
/**
 * No comment provided
 *
 * Hash: 0x76610D12A838EBDE | Since: 1311
 *
 * @deprecated Use task._0x76610D12A838EBDE() instead
 */
export declare function _0x76610D12A838EBDE(): any;
/**
 * No comment provided
 *
 * Hash: 0x78D8C1D4EB80C588 | Since: 1207
 *
 * @deprecated Use task._0x78D8C1D4EB80C588() instead
 */
export declare function _0x78D8C1D4EB80C588(): any;
/**
 * No comment provided
 *
 * Hash: 0x79197F7D2BB5E73A | Since: 1207
 *
 * @deprecated Use task._0x79197F7D2BB5E73A() instead
 */
export declare function _0x79197F7D2BB5E73A(): any;
/**
 * No comment provided
 *
 * Hash: 0x7C015D8BCEC72CF4 | Since: 1207
 *
 * @deprecated Use task.setPedPathAvoidTraffic() instead
 */
export declare function setPedPathAvoidTraffic(ped: number | Ped, avoidTraffic: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7CB99FADDE73CD1B | Since: 1311
 *
 * @deprecated Use task._0x7CB99FADDE73CD1B() instead
 */
export declare function _0x7CB99FADDE73CD1B(): any;
/**
 * No comment provided
 *
 * Hash: 0x7FB78B2199C10E92 | Since: 1207
 *
 * @deprecated Use task._0x7FB78B2199C10E92() instead
 */
export declare function _0x7FB78B2199C10E92(): void;
/**
 * No comment provided
 *
 * Hash: 0x801BD27403F3CBA0 | Since: 1207
 *
 * @deprecated Use task._0x801BD27403F3CBA0() instead
 */
export declare function _0x801BD27403F3CBA0(): void;
/**
 * No comment provided
 *
 * Hash: 0x816A3ACD265E2297 | Since: 1207
 *
 * @deprecated Use task._0x816A3ACD265E2297() instead
 */
export declare function _0x816A3ACD265E2297(): void;
/**
 * No comment provided
 *
 * Hash: 0x827A58CED9D4D5B4 | Since: 1207
 *
 * @deprecated Use task._0x827A58CED9D4D5B4() instead
 */
export declare function _0x827A58CED9D4D5B4(): void;
/**
 * No comment provided
 *
 * Hash: 0x82ED59F095056550 | Since: 1207
 *
 * @deprecated Use task._0x82ED59F095056550() instead
 */
export declare function _0x82ED59F095056550(): void;
/**
 * No comment provided
 *
 * Hash: 0x849791EBBDBA0362 | Since: 1207
 *
 * @deprecated Use task._0x849791EBBDBA0362() instead
 */
export declare function _0x849791EBBDBA0362(): any;
/**
 * No comment provided
 *
 * Hash: 0x865732725536EE39 | Since: 1207
 *
 * @deprecated Use task._0x865732725536EE39() instead
 */
export declare function _0x865732725536EE39(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x8798CF6815B8FE0F | Since: 1207
 *
 * @deprecated Use task._0x8798CF6815B8FE0F() instead
 */
export declare function _0x8798CF6815B8FE0F(): void;
/**
 * No comment provided
 *
 * Hash: 0x885D19AC2B6FBFF4 | Since: 1207
 *
 * @deprecated Use task._0x885D19AC2B6FBFF4() instead
 */
export declare function _0x885D19AC2B6FBFF4(): void;
/**
 * No comment provided
 *
 * Hash: 0x88FD60D846D9CD63 | Since: 1207
 *
 * @deprecated Use task._0x88FD60D846D9CD63() instead
 */
export declare function _0x88FD60D846D9CD63(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8B1FDF63C3193EDA | Since: 1207
 *
 * @deprecated Use task._0x8B1FDF63C3193EDA() instead
 */
export declare function _0x8B1FDF63C3193EDA(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8BB283A7888AD1AD | Since: 1207
 *
 * @deprecated Use task.setPedPathPreferToAvoidMud() instead
 */
export declare function setPedPathPreferToAvoidMud(ped: number | Ped, preferAvoidMud: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8E1DDE26D270CC5E | Since: 1207
 *
 * @deprecated Use task._0x8E1DDE26D270CC5E() instead
 */
export declare function _0x8E1DDE26D270CC5E(): void;
/**
 * No comment provided
 *
 * Hash: 0x8F8C84363810691A | Since: 1207
 *
 * @deprecated Use task._0x8F8C84363810691A() instead
 */
export declare function _0x8F8C84363810691A(): void;
/**
 * No comment provided
 *
 * Hash: 0x9050DF2C53801208 | Since: 1207
 *
 * @deprecated Use task._0x9050DF2C53801208() instead
 */
export declare function _0x9050DF2C53801208(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x90703A8F75EE4ABD | Since: 1207
 *
 * @deprecated Use task._0x90703A8F75EE4ABD() instead
 */
export declare function _0x90703A8F75EE4ABD(): any;
/**
 * No comment provided
 *
 * Hash: 0x908BB14BCE85C80E | Since: 1207
 *
 * @deprecated Use task._0x908BB14BCE85C80E() instead
 */
export declare function _0x908BB14BCE85C80E(): any;
/**
 * No comment provided
 *
 * Hash: 0x91CB5E431F579BA1 | Since: 1207
 *
 * @deprecated Use task._0x91CB5E431F579BA1() instead
 */
export declare function _0x91CB5E431F579BA1(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x920684BE432875B1 | Since: 1311
 *
 * @deprecated Use task._0x920684BE432875B1() instead
 */
export declare function _0x920684BE432875B1(): any;
/**
 * No comment provided
 *
 * Hash: 0x9420FB11B8D77948 | Since: 1207
 *
 * @deprecated Use task._0x9420FB11B8D77948() instead
 */
export declare function _0x9420FB11B8D77948(): any;
/**
 * No comment provided
 *
 * Hash: 0x954451EA2D2120FB | Since: 1207
 *
 * @deprecated Use task._0x954451EA2D2120FB() instead
 */
export declare function _0x954451EA2D2120FB(): void;
/**
 * No comment provided
 *
 * Hash: 0x9585FF23C4B8EDE0 | Since: 1207
 *
 * @deprecated Use task._0x9585FF23C4B8EDE0() instead
 */
export declare function _0x9585FF23C4B8EDE0(): void;
/**
 * No comment provided
 *
 * Hash: 0x9667CCE29BFA0780 | Since: 1207
 *
 * @deprecated Use task._0x9667CCE29BFA0780() instead
 */
export declare function _0x9667CCE29BFA0780(): void;
/**
 * No comment provided
 *
 * Hash: 0x974DA3408DEC4E79 | Since: 1207
 *
 * @deprecated Use task._0x974DA3408DEC4E79() instead
 */
export declare function _0x974DA3408DEC4E79(): any;
/**
 * No comment provided
 *
 * Hash: 0x9ADDBB9242179D56 | Since: 1207
 *
 * @deprecated Use task._0x9ADDBB9242179D56() instead
 */
export declare function _0x9ADDBB9242179D56(object: number | Object, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9B6A58FDB0024F12 | Since: 1207
 *
 * @deprecated Use task._0x9B6A58FDB0024F12() instead
 */
export declare function _0x9B6A58FDB0024F12(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C8F42A5D1859DC1 | Since: 1207
 *
 * @deprecated Use task._0x9C8F42A5D1859DC1() instead
 */
export declare function _0x9C8F42A5D1859DC1(): void;
/**
 * No comment provided
 *
 * Hash: 0x9EBD34958AB6F824 | Since: 1207
 *
 * @deprecated Use task._0x9EBD34958AB6F824() instead
 */
export declare function _0x9EBD34958AB6F824(): void;
/**
 * No comment provided
 *
 * Hash: 0x9FF5F9B24E870748 | Since: 1207
 *
 * @deprecated Use task._0x9FF5F9B24E870748() instead
 */
export declare function _0x9FF5F9B24E870748(): any;
/**
 * No comment provided
 *
 * Hash: 0xA052608A12559BBB | Since: 1207
 *
 * @deprecated Use task._0xA052608A12559BBB() instead
 */
export declare function _0xA052608A12559BBB(): void;
/**
 * No comment provided
 *
 * Hash: 0xA21AA2F0C2180125 | Since: 1207
 *
 * @deprecated Use task._0xA21AA2F0C2180125() instead
 */
export declare function _0xA21AA2F0C2180125(): void;
/**
 * No comment provided
 *
 * Hash: 0xA263ADBBC8056214 | Since: 1207
 *
 * @deprecated Use task._0xA263ADBBC8056214() instead
 */
export declare function _0xA263ADBBC8056214(): void;
/**
 * No comment provided
 *
 * Hash: 0xA42DC7919159CCCF | Since: 1207
 *
 * @deprecated Use task._0xA42DC7919159CCCF() instead
 */
export declare function _0xA42DC7919159CCCF(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6A76D666A281F2D | Since: 1207
 *
 * @deprecated Use task._0xA6A76D666A281F2D() instead
 */
export declare function _0xA6A76D666A281F2D(item: number | string): void;
/**
 * _SET_SCENARIO_*
 *
 * Hash: 0xA7479FB665361EDB | Since: 1207
 *
 * @deprecated Use task._0xA7479FB665361EDB() instead
 */
export declare function _0xA7479FB665361EDB(): void;
/**
 * No comment provided
 *
 * Hash: 0xA9E7672F8C6C6F74 | Since: 1207
 *
 * @deprecated Use task._0xA9E7672F8C6C6F74() instead
 */
export declare function _0xA9E7672F8C6C6F74(): any;
/**
 * No comment provided
 *
 * Hash: 0xAC5045AB7F1A34FD | Since: 1207
 *
 * @deprecated Use task._0xAC5045AB7F1A34FD() instead
 */
export declare function _0xAC5045AB7F1A34FD(): any;
/**
 * _SET_SCENARIO_POINT_*
 *
 * Hash: 0xADC45010BC17AF0E | Since: 1207
 *
 * @deprecated Use task._0xADC45010BC17AF0E() instead
 */
export declare function _0xADC45010BC17AF0E(): void;
/**
 * No comment provided
 *
 * Hash: 0xAF2EF28CE3084505 | Since: 1207
 *
 * @deprecated Use task._0xAF2EF28CE3084505() instead
 */
export declare function _0xAF2EF28CE3084505(): void;
/**
 * No comment provided
 *
 * Hash: 0xB2D15D3551FE4FAE | Since: 1311
 *
 * @deprecated Use task._0xB2D15D3551FE4FAE() instead
 */
export declare function _0xB2D15D3551FE4FAE(): void;
/**
 * No comment provided
 *
 * Hash: 0xB2F47A1AFDFCC595 | Since: 1207
 *
 * @deprecated Use task._0xB2F47A1AFDFCC595() instead
 */
export declare function _0xB2F47A1AFDFCC595(): void;
/**
 * All Interaction states
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION#-4-item_interaction_state_name--item_interaction_propid--1
 *
 * Hash: 0xB35370D5353995CB | Since: 1207
 *
 * @deprecated Use task.setItemInteractionState() instead
 */
export declare function setItemInteractionState(ped: number | Ped, itemInteractionState: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xB520DBDA7FCF573F | Since: 1207
 *
 * @deprecated Use task._0xB520DBDA7FCF573F() instead
 */
export declare function _0xB520DBDA7FCF573F(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB79817DB31FF72B9 | Since: 1207
 *
 * @deprecated Use task._0xB79817DB31FF72B9() instead
 */
export declare function _0xB79817DB31FF72B9(): void;
/**
 * No comment provided
 *
 * Hash: 0xB8E213D02F37947D | Since: 1207
 *
 * @deprecated Use task._0xB8E213D02F37947D() instead
 */
export declare function _0xB8E213D02F37947D(): void;
/**
 * No comment provided
 *
 * Hash: 0xB8E3486D107F4194 | Since: 1207
 *
 * @deprecated Use task._0xB8E3486D107F4194() instead
 */
export declare function _0xB8E3486D107F4194(): void;
/**
 * list of carriable configs  https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70
 *
 * Hash: 0xB8F52A3F84A7CC59 | Since: 1207
 *
 * @deprecated Use task.hasCarriableConfigHashLoaded() instead
 */
export declare function hasCarriableConfigHashLoaded(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBAAB791AA72C2821 | Since: 1207
 *
 * @deprecated Use task._0xBAAB791AA72C2821() instead
 */
export declare function _0xBAAB791AA72C2821(): void;
/**
 * No comment provided
 *
 * Hash: 0xBC3F847AE2C3DC65 | Since: 1207
 *
 * @deprecated Use task._0xBC3F847AE2C3DC65() instead
 */
export declare function _0xBC3F847AE2C3DC65(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD1C3C0F271C39D3 | Since: 1207
 *
 * @deprecated Use task._0xBD1C3C0F271C39D3() instead
 */
export declare function _0xBD1C3C0F271C39D3(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD70108D01875299 | Since: 1207
 *
 * @deprecated Use task._0xBD70108D01875299() instead
 */
export declare function _0xBD70108D01875299(): any;
/**
 * No comment provided
 *
 * Hash: 0xBEDBE39B5FD98FD6 | Since: 1207
 *
 * @deprecated Use task._0xBEDBE39B5FD98FD6() instead
 */
export declare function _0xBEDBE39B5FD98FD6(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBEEFBB608D2AA68A | Since: 1207
 *
 * @deprecated Use task._0xBEEFBB608D2AA68A() instead
 */
export declare function _0xBEEFBB608D2AA68A(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6170856E54557B2 | Since: 1207
 *
 * @deprecated Use task.setPedPathPreferStayInWater() instead
 */
export declare function setPedPathPreferStayInWater(ped: number | Ped, preferStayInWater: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCE4E669400E5F8AA | Since: 1207
 *
 * @deprecated Use task._0xCE4E669400E5F8AA() instead
 */
export declare function _0xCE4E669400E5F8AA(): void;
/**
 * No comment provided
 *
 * Hash: 0xD0ABC4EA3B5E21A0 | Since: 1311
 *
 * @deprecated Use task._0xD0ABC4EA3B5E21A0() instead
 */
export declare function _0xD0ABC4EA3B5E21A0(): any;
/**
 * No comment provided
 *
 * Hash: 0xD508FA229F1C4900 | Since: 1207
 *
 * @deprecated Use task._0xD508FA229F1C4900() instead
 */
export declare function _0xD508FA229F1C4900(): any;
/**
 * No comment provided
 *
 * Hash: 0xD999E379265A4501 | Since: 1207
 *
 * @deprecated Use task._0xD999E379265A4501() instead
 */
export declare function _0xD999E379265A4501(): void;
/**
 * No comment provided
 *
 * Hash: 0xDE0C8B145EA466FF | Since: 1207
 *
 * @deprecated Use task._0xDE0C8B145EA466FF() instead
 */
export declare function _0xDE0C8B145EA466FF(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF56A2B50C04DEA4 | Since: 1207
 *
 * @deprecated Use task._0xDF56A2B50C04DEA4() instead
 */
export declare function _0xDF56A2B50C04DEA4(): any;
/**
 * No comment provided
 *
 * Hash: 0xDF94844D474F31E5 | Since: 1207
 *
 * @deprecated Use task._0xDF94844D474F31E5() instead
 */
export declare function _0xDF94844D474F31E5(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE01C8DC8EDD28D31 | Since: 1207
 *
 * @deprecated Use task._0xE01C8DC8EDD28D31() instead
 */
export declare function _0xE01C8DC8EDD28D31(): void;
/**
 * No comment provided
 *
 * Hash: 0xE01F55B2896F6B37 | Since: 1207
 *
 * @deprecated Use task._0xE01F55B2896F6B37() instead
 */
export declare function _0xE01F55B2896F6B37(): void;
/**
 * No comment provided
 *
 * Hash: 0xE05A5D39BE6E93AF | Since: 1207
 *
 * @deprecated Use task._0xE05A5D39BE6E93AF() instead
 */
export declare function _0xE05A5D39BE6E93AF(): void;
/**
 * No comment provided
 *
 * Hash: 0xE116F6F2DA2D777E | Since: 1207
 *
 * @deprecated Use task._0xE116F6F2DA2D777E() instead
 */
export declare function _0xE116F6F2DA2D777E(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xE1C105E6BBA48270 | Since: 1207
 *
 * @deprecated Use task._0xE1C105E6BBA48270() instead
 */
export declare function _0xE1C105E6BBA48270(): any;
/**
 * No comment provided
 *
 * Hash: 0xE2CF104ADD49D4BF | Since: 1207
 *
 * @deprecated Use task._0xE2CF104ADD49D4BF() instead
 */
export declare function _0xE2CF104ADD49D4BF(): void;
/**
 * No comment provided
 *
 * Hash: 0xE55478C5EDF70AC2 | Since: 1207
 *
 * @deprecated Use task._0xE55478C5EDF70AC2() instead
 */
export declare function _0xE55478C5EDF70AC2(): any;
/**
 * No comment provided
 *
 * Hash: 0xE5831AA1E2FD147C | Since: 1207
 *
 * @deprecated Use task._0xE5831AA1E2FD147C() instead
 */
export declare function _0xE5831AA1E2FD147C(): void;
/**
 * No comment provided
 *
 * Hash: 0xE62754D09354F6CF | Since: 1207
 *
 * @deprecated Use task._0xE62754D09354F6CF() instead
 */
export declare function _0xE62754D09354F6CF(): any;
/**
 * No comment provided
 *
 * Hash: 0xE69FDA40AAC3EFC0 | Since: 1207
 *
 * @deprecated Use task._0xE69FDA40AAC3EFC0() instead
 */
export declare function _0xE69FDA40AAC3EFC0(): void;
/**
 * No comment provided
 *
 * Hash: 0xE6A151364C600B24 | Since: 1207
 *
 * @deprecated Use task._0xE6A151364C600B24() instead
 */
export declare function _0xE6A151364C600B24(): any;
/**
 * No comment provided
 *
 * Hash: 0xE7BBC4E56B989449 | Since: 1207
 *
 * @deprecated Use task._0xE7BBC4E56B989449() instead
 */
export declare function _0xE7BBC4E56B989449(): any;
/**
 * No comment provided
 *
 * Hash: 0xE9225354FB7437A7 | Since: 1207
 *
 * @deprecated Use task._0xE9225354FB7437A7() instead
 */
export declare function _0xE9225354FB7437A7(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9A6400D1A0E7A55 | Since: 1207
 *
 * @deprecated Use task._0xE9A6400D1A0E7A55() instead
 */
export declare function _0xE9A6400D1A0E7A55(): any;
/**
 * No comment provided
 *
 * Hash: 0xEAF87DA2BE78A15B | Since: 1207
 *
 * @deprecated Use task._0xEAF87DA2BE78A15B() instead
 */
export declare function _0xEAF87DA2BE78A15B(): void;
/**
 * No comment provided
 *
 * Hash: 0xEB67D4E056C85A81 | Since: 1207
 *
 * @deprecated Use task._0xEB67D4E056C85A81() instead
 */
export declare function _0xEB67D4E056C85A81(): any;
/**
 * No comment provided
 *
 * Hash: 0xEBA2081E0A5F4D17 | Since: 1207
 *
 * @deprecated Use task._0xEBA2081E0A5F4D17() instead
 */
export declare function _0xEBA2081E0A5F4D17(): void;
/**
 * No comment provided
 *
 * Hash: 0xEC516FE805D2CB2D | Since: 1207
 *
 * @deprecated Use task._0xEC516FE805D2CB2D() instead
 */
export declare function _0xEC516FE805D2CB2D(): void;
/**
 * No comment provided
 *
 * Hash: 0xEFD875C2791EBEFD | Since: 1207
 *
 * @deprecated Use task._0xEFD875C2791EBEFD() instead
 */
export declare function _0xEFD875C2791EBEFD(): any;
/**
 * No comment provided
 *
 * Hash: 0xF3C3503276F4A034 | Since: 1436
 *
 * @deprecated Use task._0xF3C3503276F4A034() instead
 */
export declare function _0xF3C3503276F4A034(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xF40A109B4B79A848 | Since: 1207
 *
 * @deprecated Use task._0xF40A109B4B79A848() instead
 */
export declare function _0xF40A109B4B79A848(): void;
/**
 * No comment provided
 *
 * Hash: 0xF718931A82EEB898 | Since: 1207
 *
 * @deprecated Use task._0xF718931A82EEB898() instead
 */
export declare function _0xF718931A82EEB898(): void;
/**
 * No comment provided
 *
 * Hash: 0xF948F4356F010F11 | Since: 1207
 *
 * @deprecated Use task._0xF948F4356F010F11() instead
 */
export declare function _0xF948F4356F010F11(): void;
/**
 * No comment provided
 *
 * Hash: 0xF97F462779B31786 | Since: 1207
 *
 * @deprecated Use task._0xF97F462779B31786() instead
 */
export declare function _0xF97F462779B31786(): any;
/**
 * No comment provided
 *
 * Hash: 0xFA30E2254461ADEB | Since: 1207
 *
 * @deprecated Use task._0xFA30E2254461ADEB() instead
 */
export declare function _0xFA30E2254461ADEB(): void;
/**
 * No comment provided
 *
 * Hash: 0xFC7F71CF49F70B6B | Since: 1207
 *
 * @deprecated Use task._0xFC7F71CF49F70B6B() instead
 */
export declare function _0xFC7F71CF49F70B6B(): void;
/**
 * No comment provided
 *
 * Hash: 0xFDECCA06E8B81346 | Since: 1207
 *
 * @deprecated Use task._0xFDECCA06E8B81346() instead
 */
export declare function _0xFDECCA06E8B81346(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0xFE5D28B9B7837CC1 | Since: 1207
 *
 * @deprecated Use task._0xFE5D28B9B7837CC1() instead
 */
export declare function _0xFE5D28B9B7837CC1(): any;
/**
 * https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70 carriable config list
 *
 * Hash: 0xFF745B0346E19E2C | Since: 1207
 *
 * @deprecated Use task.loadCarriableConfigHash() instead
 */
export declare function loadCarriableConfigHash(hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xFF8AFCA532B500D4 | Since: 1207
 *
 * @deprecated Use task._0xFF8AFCA532B500D4() instead
 */
export declare function _0xFF8AFCA532B500D4(): void;
/**
 * No comment provided
 *
 * Hash: 0xFFB520A3E16F7B7B | Since: 1207
 *
 * @deprecated Use task._0xFFB520A3E16F7B7B() instead
 */
export declare function _0xFFB520A3E16F7B7B(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEB2ED1DC3AEC0654 | Since: 1207
 *
 * @deprecated Use task.addCoverBlockingVolume() instead
 */
export declare function addCoverBlockingVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE8F1A5B4CED3725A | Since: 1207
 *
 * @deprecated Use task.addFleeTargetCoords() instead
 */
export declare function addFleeTargetCoords(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x8360C47380B6F351 | Since: 1207
 *
 * @deprecated Use task.associatePropWithScenario() instead
 */
export declare function associatePropWithScenario(scenario: number, entity: number | Entity, propName: string): boolean;
/**
 * groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
 * p7: -1 in R* Scripts
 * Returns compositeId
 *
 * Hash: 0x5B4BBE80AD5972DC | Since: 1207
 *
 * @deprecated Use task.createHerbComposites() instead
 */
export declare function createHerbComposites(asset: number | string, pos: Vector3, heading: number, groundSetting: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5C885E0978B6AD60 | Since: 1207
 *
 * @deprecated Use task.createWaypointPath() instead
 */
export declare function createWaypointPath(pathName: string, nodes: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7981037A96E7D174 | Since: 1207
 *
 * @deprecated Use task.cuffPed() instead
 */
export declare function cuffPed(ped: number | Ped): void;
/**
 * Params: p1 is always false except in script nb_egg_protector
 *
 * Hash: 0x5758B1EE0C3FD4AC | Since: 1207
 *
 * @deprecated Use task.deletePatchObjectsFromHerbComposites() instead
 */
export declare function deletePatchObjectsFromHerbComposites(compositeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x81948DFE4F5A0283 | Since: 1207
 *
 * @deprecated Use task.deleteScenarioPoint() instead
 */
export declare function deleteScenarioPoint(scenario: number): void;
/**
 * No comment provided
 *
 * Hash: 0x36D188AECB26094B | Since: 1207
 *
 * @deprecated Use task.detachCarriablePed() instead
 */
export declare function detachCarriablePed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6EF4E31B4D5D2DA0 | Since: 1207
 *
 * @deprecated Use task.disassociatePropFromScenario() instead
 */
export declare function disassociatePropFromScenario(scenario: number, propName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76E98B52369A289C | Since: 1207
 *
 * @deprecated Use task.doesScenarioGroupExistHash() instead
 */
export declare function doesScenarioGroupExistHash(scenarioGroup: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA31F199A73801D3 | Since: 1207
 *
 * @deprecated Use task.doesScenarioPointHaveProps() instead
 */
export declare function doesScenarioPointHaveProps(scenario: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE47DD64B9F02677D | Since: 1207
 *
 * @deprecated Use task.findModelForItem() instead
 */
export declare function findModelForItem(item: number | string): number;
/**
 * Flowers, Stalks or whatever the composite has
 *
 * Hash: 0x96C6ED22FB742C3E | Since: 1207
 *
 * @deprecated Use task.getHerbCompositeNumEntities() instead
 */
export declare function getHerbCompositeNumEntities(compositeId: number, outEntities: any): number;
/**
 * No comment provided
 *
 * Hash: 0x4687E69D258BBE41 | Since: 1207
 *
 * @deprecated Use task.getHogtieEscapeTimer() instead
 */
export declare function getHogtieEscapeTimer(ped: number | Ped): number;
/**
 * item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
 * http://prntscr.com/1qtp3bz
 * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
 *
 * Hash: 0x05A0100EA714DB68 | Since: 1207
 *
 * @deprecated Use task.getItemInteractionEntityFromPed() instead
 */
export declare function getItemInteractionEntityFromPed(ped: number | Ped, item: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xED1F514AF4732258 | Since: 1207
 *
 * @deprecated Use task.getLedHorseFromPed() instead
 */
export declare function getLedHorseFromPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1948BBE561A2375A | Since: 1207
 *
 * @deprecated Use task.getPedIsIgnoringDeadBodies() instead
 */
export declare function getPedIsIgnoringDeadBodies(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5BA659955369B0E2 | Since: 1207
 *
 * @deprecated Use task.getPedUsingScenarioPoint() instead
 */
export declare function getPedUsingScenarioPoint(scenario: number): number;
/**
 * Returns m_eContainerState
 *
 * Hash: 0xB219612B5568E9EC | Since: 1207
 *
 * @deprecated Use task.getScenarioContainerOpeningState() instead
 */
export declare function getScenarioContainerOpeningState(entity: number | Entity): boolean;
/**
 * Params: p1 is always true in R* Scripts
 *
 * Hash: 0xA8452DD321607029 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointCoords() instead
 */
export declare function getScenarioPointCoords(scenario: number): Vector3;
/**
 * Note: The current name for this native is the old name of 0x295514F198EFD0CA
 * Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
 *
 * Hash: 0x7467165EE97D3C68 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointEntity() instead
 */
export declare function getScenarioPointEntity(scenario: number): number;
/**
 * Params: p1 is always true in R* Scripts
 *
 * Hash: 0xB93EA7184BAA85C3 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointHeading() instead
 */
export declare function getScenarioPointHeading(scenario: number): number;
/**
 * No comment provided
 *
 * Hash: 0xDF7993356F52359A | Since: 1207
 *
 * @deprecated Use task.getScenarioPointPedIsUsing() instead
 */
export declare function getScenarioPointPedIsUsing(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6718F40313A2B5A6 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointRadius() instead
 */
export declare function getScenarioPointRadius(scenario: number): number;
/**
 * No comment provided
 *
 * Hash: 0xA92450B5AE687AAF | Since: 1207
 *
 * @deprecated Use task.getScenarioPointType() instead
 */
export declare function getScenarioPointType(scenario: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2D0571BB55879DA2 | Since: 1207
 *
 * @deprecated Use task.getScenarioPointTypePedIsUsing() instead
 */
export declare function getScenarioPointTypePedIsUsing(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xA710DC5D25F8B942 | Since: 1207
 *
 * @deprecated Use task.getScriptTaskActionTime() instead
 */
export declare function getScriptTaskActionTime(ped: number | Ped, task: number | string): number;
/**
 * Fishing Research: https://pastebin.com/NmK5ZLVs
 * Only used in R* Scripts fishing_core and av_fishing_river
 *
 * Hash: 0xF3735ACD11ACD500 | Since: 1207
 *
 * @deprecated Use task.getTaskFishing() instead
 */
export declare function getTaskFishing(ped: number | Ped): boolean;
/**
 * Returns hash of the underlying move network def, see move_networks.xml
 * https://alloc8or.re/rdr3/doc/misc/move_networks.txt
 *
 * Hash: 0xCACC2F9D994504B7 | Since: 1207
 *
 * @deprecated Use task.getTaskMoveNetworkId() instead
 */
export declare function getTaskMoveNetworkId(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x844CEEE428EA35B0 | Since: 1207
 *
 * @deprecated Use task.getTaskMoveNetworkPhaseFloat() instead
 */
export declare function getTaskMoveNetworkPhaseFloat(ped: number | Ped, phaseName: string): number;
/**
 * Returns true while a hat is being picked up
 * _IS_A* - _IS_D*
 *
 * Hash: 0x11CD066F54DA0133 | Since: 1207
 *
 * @deprecated Use task.isHatBeingPickedUp() instead
 */
export declare function isHatBeingPickedUp(hatObject: number | Object): boolean;
/**
 * Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
 * _IS_A* - _IS_D*
 *
 * Hash: 0x4ECCC2815CA79AE2 | Since: 1207
 *
 * @deprecated Use task.isHatBeingPickedUp2() instead
 */
export declare function isHatBeingPickedUp2(hatObject: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9CC7856D52DBD25 | Since: 1207
 *
 * @deprecated Use task.isPedArrestingAnyPed() instead
 */
export declare function isPedArrestingAnyPed(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8B29D18022EA2B7 | Since: 1207
 *
 * @deprecated Use task.isPedDuelling() instead
 */
export declare function isPedDuelling(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFC4303DDC6E60D3 | Since: 1207
 *
 * @deprecated Use task.isPedLeadingHorse() instead
 */
export declare function isPedLeadingHorse(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDCC374913DE6AAA6 | Since: 1207
 *
 * @deprecated Use task.isScenarioGroupEnabledHash() instead
 */
export declare function isScenarioGroupEnabledHash(scenarioGroup: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CC36D4156006509 | Since: 1207
 *
 * @deprecated Use task.isScenarioPointActive() instead
 */
export declare function isScenarioPointActive(scenario: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8569C38D2FB80650 | Since: 1207
 *
 * @deprecated Use task.isScenarioPointFlagSet() instead
 */
export declare function isScenarioPointFlagSet(scenario: number, flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x78B4567E18B54480 | Since: 1207
 *
 * @deprecated Use task.makeObjectCarriable() instead
 */
export declare function makeObjectCarriable(object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x1A52076D26E09004 | Since: 1207
 *
 * @deprecated Use task.pedFishingrodHookEntity() instead
 */
export declare function pedFishingrodHookEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
 *
 * Hash: 0xCE71C2F9BAA3F975 | Since: 1207
 *
 * @deprecated Use task.pedFishingrodHookObject() instead
 */
export declare function pedFishingrodHookObject(ped: number | Ped, object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x02EBBB3989B7E695 | Since: 1207
 *
 * @deprecated Use task.pedIsInScenarioBase() instead
 */
export declare function pedIsInScenarioBase(ped: number | Ped): boolean;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
 *
 * Hash: 0x73F0D0327BFA0812 | Since: 1207
 *
 * @deprecated Use task.requestHerbCompositeAsset() instead
 */
export declare function requestHerbCompositeAsset(asset: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E20878FD208A68E | Since: 1207
 *
 * @deprecated Use task.resetScenarioForEntity() instead
 */
export declare function resetScenarioForEntity(scenario: number, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x5A40040BB5AE3EA2 | Since: 1207
 *
 * @deprecated Use task.resetScenarioScript() instead
 */
export declare function resetScenarioScript(scenario: number): void;
/**
 * Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
 *
 * Hash: 0x9B0C7FA063E67629 | Since: 1207
 *
 * @deprecated Use task.setFishingBait() instead
 */
export declare function setFishingBait(ped: number | Ped, bait: string, withoutBuoy: boolean, instantly: boolean): void;
/**
 * Sets the time it takes for a hogtied ped to escape
 * -1.0f for ped to never escape
 *
 * Hash: 0xAB591AE6B48B913E | Since: 1207
 *
 * @deprecated Use task.setHogtieEscapeTimer() instead
 */
export declare function setHogtieEscapeTimer(ped: number | Ped, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x34C0010188D7C54A | Since: 1207
 *
 * @deprecated Use task.setPedClearAimingInTheAir() instead
 */
export declare function setPedClearAimingInTheAir(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x013A7BA5015C1372 | Since: 1207
 *
 * @deprecated Use task.setPedIgnoreDeadBodies() instead
 */
export declare function setPedIgnoreDeadBodies(ped: number | Ped, toggle: boolean): void;
/**
 * _SET_PED_PATH_P*
 *
 * Hash: 0x70F7A1EAB1AE3AA8 | Since: 1232
 *
 * @deprecated Use task.setPedPathLadderCostModifier() instead
 */
export declare function setPedPathLadderCostModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9DE63896B176EA94 | Since: 1207
 *
 * @deprecated Use task.setPedPathMayEnterDeepWater() instead
 */
export declare function setPedPathMayEnterDeepWater(ped: number | Ped, mayEnterDeepWater: boolean): void;
/**
 * Opens/closes containers: ChestDugUp
 *
 * Hash: 0x188F8071F244B9B8 | Since: 1207
 *
 * @deprecated Use task.setScenarioContainerOpeningState() instead
 */
export declare function setScenarioContainerOpeningState(entity: number | Entity, open: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9925EDDB6EAB88CD | Since: 1207
 *
 * @deprecated Use task.setScenarioGroupEnabledHash() instead
 */
export declare function setScenarioGroupEnabledHash(scenarioGroup: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEEE4829304F93EEE | Since: 1207
 *
 * @deprecated Use task.setScenarioPointActive() instead
 */
export declare function setScenarioPointActive(scenario: number, active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2056AB38DF06825C | Since: 1207
 *
 * @deprecated Use task.setScenarioPointCoords() instead
 */
export declare function setScenarioPointCoords(scenario: number, pos: Vector3): void;
/**
 * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
 *
 * Hash: 0x5AF19B6CC2115D34 | Since: 1207
 *
 * @deprecated Use task.setScenarioPointFlag() instead
 */
export declare function setScenarioPointFlag(scenario: number, flag: number, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD3A0DA8F91612C6E | Since: 1207
 *
 * @deprecated Use task.setScenarioPointHeading() instead
 */
export declare function setScenarioPointHeading(scenario: number, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC47D9080A9A8856A | Since: 1207
 *
 * @deprecated Use task.setScenarioPointRadius() instead
 */
export declare function setScenarioPointRadius(scenario: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD00E50E673802D71 | Since: 1207
 *
 * @deprecated Use task.setScenarioTypeEnabledHash() instead
 */
export declare function setScenarioTypeEnabledHash(scenarioType: number | string, toggle: boolean): void;
/**
 * Only used in R* Scripts fishing_core and av_fishing_river
 *
 * Hash: 0xF3735ACD11ACD501 | Since: 1207
 *
 * @deprecated Use task.setTaskFishing() instead
 */
export declare function setTaskFishing(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x099D4A855D53B03B | Since: 1207
 *
 * @deprecated Use task.setTaskMoveNetworkSignalFloat2() instead
 */
export declare function setTaskMoveNetworkSignalFloat2(ped: number | Ped, signalName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4662BFE01938D98D | Since: 1207
 *
 * @deprecated Use task.setTaskMoveNetworkSignalVector() instead
 */
export declare function setTaskMoveNetworkSignalVector(ped: number | Ped, signalName: string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x30A768C30D385EC5 | Since: 1207
 *
 * @deprecated Use task.taskAnimalBleedOut() instead
 */
export declare function taskAnimalBleedOut(ped: number | Ped, killer: number | Ped, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE53D17AD837CBF7C | Since: 1207
 *
 * @deprecated Use task.taskBoardVehicle() instead
 */
export declare function taskBoardVehicle(ped: number | Ped, vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE41A09C8DDFF7AA4 | Since: 1207
 *
 * @deprecated Use task.taskBoardVehicle2() instead
 */
export declare function taskBoardVehicle2(ped: number | Ped, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF1D85BCAF60D537 | Since: 1207
 *
 * @deprecated Use task.taskClimb2() instead
 */
export declare function taskClimb2(ped: number | Ped, heading: number): void;
/**
 * Coords: volume coords used in R* Script smuggler2
 * p4/p5 = 0 in R* Scripts previous name TASK_COMBAT_PED_3
 *
 * Hash: 0xC624414FA748B9BA | Since: 1207
 *
 * @deprecated Use task.taskCombatPedAtCoords() instead
 */
export declare function taskCombatPedAtCoords(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x81D16C4FF3A77ADF | Since: 1207
 *
 * @deprecated Use task.taskCutFreeHogtiedTargetPed() instead
 */
export declare function taskCutFreeHogtiedTargetPed(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x525421A507216084 | Since: 1207
 *
 * @deprecated Use task.taskCutFreeHogtiedTargetPed2() instead
 */
export declare function taskCutFreeHogtiedTargetPed2(ped: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA7C6854BB5A4192A | Since: 1207
 *
 * @deprecated Use task.taskDisembarkVehicle() instead
 */
export declare function taskDisembarkVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xBDFEEB7600BCD938 | Since: 1207
 *
 * @deprecated Use task.taskEmoteOutro() instead
 */
export declare function taskEmoteOutro(ped: number | Ped): void;
/**
 * _A*
 *
 * Hash: 0xAA0AF6025160243A | Since: 1207
 *
 * @deprecated Use task.taskEquipHat() instead
 */
export declare function taskEquipHat(hatObject: number | Object, ped: number | Ped): void;
/**
 * fleeType: see TASK_FLEE_COORD
 *
 * Hash: 0x6879FF208ED87F2A | Since: 1207
 *
 * @deprecated Use task.taskFleeFromCoord() instead
 */
export declare function taskFleeFromCoord(): void;
/**
 * fleeType: see TASK_FLEE_COORD
 *
 * Hash: 0x7B74D8EEDE9B5727 | Since: 1207
 *
 * @deprecated Use task.taskFleeFromPed() instead
 */
export declare function taskFleeFromPed(ped: number | Ped, fleeFromTarget: number | Ped, pos: Vector3, distance: number, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1FC9B33976BACD6C | Since: 1207
 *
 * @deprecated Use task.taskGuardAssignedDefensiveArea2() instead
 */
export declare function taskGuardAssignedDefensiveArea2(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x648B75D44930D6BD | Since: 1207
 *
 * @deprecated Use task.taskIntimidated() instead
 */
export declare function taskIntimidated(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x933ACC1A1771A288 | Since: 1207
 *
 * @deprecated Use task.taskIntimidated2() instead
 */
export declare function taskIntimidated2(victim: number | Ped, attacker: number | Ped, everyFrame: boolean, flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x72F52AA2D2B172CC | Since: 1207
 *
 * @deprecated Use task.taskItemInteraction2() instead
 */
export declare function taskItemInteraction2(ped: number | Ped, propNameGxt: number | string, prop: number | Object, propId: number | string, itemInteractionState: number | string): void;
/**
 * Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
 *
 * Hash: 0xD61D5E1AD9876DEB | Since: 1207
 *
 * @deprecated Use task.taskItemInteraction3() instead
 */
export declare function taskItemInteraction3(ped: number | Ped, item: number | string, guid: any): void;
/**
 * No comment provided
 *
 * Hash: 0x91083103137D7254 | Since: 1207
 *
 * @deprecated Use task.taskJump2() instead
 */
export declare function taskJump2(ped: number | Ped, pos: Vector3, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x964B06C88E4C86DB | Since: 1207
 *
 * @deprecated Use task.taskPatrol2() instead
 */
export declare function taskPatrol2(): void;
/**
 * Old name: _TASK_PERFORM_SEQUENCE_2
 *
 * Hash: 0x4FC0AF869D6E309D | Since: 1207
 *
 * @deprecated Use task.taskPerformSequenceLocally() instead
 */
export declare function taskPerformSequenceLocally(): void;
/**
 * Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
 *
 * Hash: 0x884E3436CC1F41DD | Since: 1207
 *
 * @deprecated Use task.taskPlayEmote() instead
 */
export declare function taskPlayEmote(ped: number | Ped, emoteType: number, playbackMode: number, emote: number | string, isSecondaryTask: boolean, canBreakOut: boolean, disableEarlyOutAnimTag: boolean, ignoreInvalidMainTask: boolean, destroyProps: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDF8A5855B9F9A97B | Since: 1207
 *
 * @deprecated Use task.taskPutPedDirectlyIntoCoverFromCoords() instead
 */
export declare function taskPutPedDirectlyIntoCoverFromCoords(ped: number | Ped, pos: Vector3, fromX: number, fromY: number, fromZ: number, timeout: number): void;
/**
 * Takes scenario point handle instead of hash
 *
 * Hash: 0xA917E39F2CEFD215 | Since: 1207
 *
 * @deprecated Use task.taskStartScenarioInPlace2() instead
 */
export declare function taskStartScenarioInPlace2(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7282356DFF6B5A51 | Since: 1207
 *
 * @deprecated Use task.taskThrowProjectile2() instead
 */
export declare function taskThrowProjectile2(): void;
/**
 * No comment provided
 *
 * Hash: 0x322BFDEA666E2B0E | Since: 1207
 *
 * @deprecated Use task.taskUseNearestScenarioToCoord() instead
 */
export declare function taskUseNearestScenarioToCoord(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F6641449DD86FBE | Since: 1207
 *
 * @deprecated Use task.taskUseScenarioPoint2() instead
 */
export declare function taskUseScenarioPoint2(ped: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF0108F01FB105DA2 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveToCoord2() instead
 */
export declare function taskVehicleDriveToCoord2(ped: number | Ped): void;
/**
 * Tasks vehicle towards owner
 *
 * Hash: 0x391073B9D3CCE2BA | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveToDestination2() instead
 */
export declare function taskVehicleDriveToDestination2(vehicle: number | Vehicle, pos: Vector3, speed: number): void;
/**
 * Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
 *
 * Hash: 0x6524A8981E8BE7C9 | Since: 1207
 *
 * @deprecated Use task.taskVehicleDriveToPoint2() instead
 */
export declare function taskVehicleDriveToPoint2(vehicle: number | Vehicle, pos: Vector3): void;
/**
 * Vehicle Auto Drive (?)
 * p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
 * Speed: usually 8f
 * Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
 *
 * Hash: 0x55CD5FDDD4335C1E | Since: 1207
 *
 * @deprecated Use task.taskVehicleFleeOnCleanup() instead
 */
export declare function taskVehicleFleeOnCleanup(vehicle: number | Vehicle, speed: number, type: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x041D17A9E221AE30 | Since: 1207
 *
 * @deprecated Use task.taskVehicleFollowWaypointRecording2() instead
 */
export declare function taskVehicleFollowWaypointRecording2(): void;
/**
 * No comment provided
 *
 * Hash: 0x3180E991D4B8F248 | Since: 1207
 *
 * @deprecated Use telemetry.analyticsPlaytimeFreemodeEnd() instead
 */
export declare function analyticsPlaytimeFreemodeEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9F24081D84931B8 | Since: 1207
 *
 * @deprecated Use telemetry.analyticsPlaytimeFreemodeStart() instead
 */
export declare function analyticsPlaytimeFreemodeStart(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF516E598D966D06 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCampDonate() instead
 */
export declare function telemetryCampDonate(transactionId: any, slotId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xFF9052BC7A3B7D33 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPersonalVehicleMount() instead
 */
export declare function telemetryPersonalVehicleMount(): void;
/**
 * No comment provided
 *
 * Hash: 0x076C5843371EB889 | Since: 1311
 *
 * @deprecated Use telemetry.telemetryPlayerMenuPin() instead
 */
export declare function telemetryPlayerMenuPin(): void;
/**
 * Note: this native was added in build 1491.50
 *
 * Hash: 0x6F5BC5C4EAB42B15 | Since: 1491
 *
 * @deprecated Use telemetry._0x6F5BC5C4EAB42B15() instead
 */
export declare function _0x6F5BC5C4EAB42B15(linkID: number, type: number, contentId: string): void;
/**
 * No comment provided
 *
 * Hash: 0xEC0BD8736DCAF841 | Since: 1207
 *
 * @deprecated Use telemetry._0xEC0BD8736DCAF841() instead
 */
export declare function _0xEC0BD8736DCAF841(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x32D5898C4898CD95 | Since: 1207
 *
 * @deprecated Use telemetry.clearTelemetryShopUi() instead
 */
export declare function clearTelemetryShopUi(): void;
/**
 * No comment provided
 *
 * Hash: 0x3145044F3990D321 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryAmbientVignette() instead
 */
export declare function telemetryAmbientVignette(): void;
/**
 * No comment provided
 *
 * Hash: 0x7581972ADF5D699A | Since: 1207
 *
 * @deprecated Use telemetry.telemetryAnimalSkinned() instead
 */
export declare function telemetryAnimalSkinned(type: number | string, items: any): void;
/**
 * No comment provided
 *
 * Hash: 0x52FA31DB8F3AD25D | Since: 1207
 *
 * @deprecated Use telemetry.telemetryBountyTarget() instead
 */
export declare function telemetryBountyTarget(data: any): void;
/**
 * No comment provided
 *
 * Hash: 0x565EAA726B2CE3B7 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCampCreated() instead
 */
export declare function telemetryCampCreated(): void;
/**
 * No comment provided
 *
 * Hash: 0x217F47761376E16E | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCampSupplies() instead
 */
export declare function telemetryCampSupplies(): void;
/**
 * No comment provided
 *
 * Hash: 0x7207AD471BC9278C | Since: 1355
 *
 * @deprecated Use telemetry.telemetryCharCreator() instead
 */
export declare function telemetryCharCreator(): void;
/**
 * No comment provided
 *
 * Hash: 0xD6CB05DDAEE43AFD | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCollect() instead
 */
export declare function telemetryCollect(transactionId: any): void;
/**
 * No comment provided
 *
 * Hash: 0x621D719C4836292B | Since: 1232
 *
 * @deprecated Use telemetry.telemetryCoupon() instead
 */
export declare function telemetryCoupon(): void;
/**
 * No comment provided
 *
 * Hash: 0x78C2E029DB205A3A | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCraftItem() instead
 */
export declare function telemetryCraftItem(quantity: any): void;
/**
 * Works in MP only.
 *
 * Hash: 0xE692D336F8A2A97F | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCreateUuid() instead
 */
export declare function telemetryCreateUuid(uuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40914CCF2A1AB531 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryCustom() instead
 */
export declare function telemetryCustom(args: any): void;
/**
 * No comment provided
 *
 * Hash: 0xE57529D23541D2DD | Since: 1207
 *
 * @deprecated Use telemetry.telemetryDefensive() instead
 */
export declare function telemetryDefensive(): void;
/**
 * No comment provided
 *
 * Hash: 0xF5EAD898EF387E73 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryDiscoverable() instead
 */
export declare function telemetryDiscoverable(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C24AF8EEEEF8A55 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryEmoteAddCategoryToSave() instead
 */
export declare function telemetryEmoteAddCategoryToSave(emote: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x7CEF4AC79F7E7FAD | Since: 1207
 *
 * @deprecated Use telemetry.telemetryFastTravel() instead
 */
export declare function telemetryFastTravel(): void;
/**
 * No comment provided
 *
 * Hash: 0x16B23D4F7A1F50D9 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryFavorEmote() instead
 */
export declare function telemetryFavorEmote(): void;
/**
 * No comment provided
 *
 * Hash: 0x51EC204A6E5B5A1A | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGameProgress() instead
 */
export declare function telemetryGameProgress(): void;
/**
 * No comment provided
 *
 * Hash: 0xE6DC9B21AC7A8729 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGangShares() instead
 */
export declare function telemetryGangShares(): void;
/**
 * No comment provided
 *
 * Hash: 0x536B6025E94AC48F | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGoldStore() instead
 */
export declare function telemetryGoldStore(): void;
/**
 * No comment provided
 *
 * Hash: 0x415FE28ED44BFF14 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGunLocker() instead
 */
export declare function telemetryGunLocker(): void;
/**
 * No comment provided
 *
 * Hash: 0x317D9C9560529CC2 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGunLockerWeaponRemoved() instead
 */
export declare function telemetryGunLockerWeaponRemoved(): void;
/**
 * No comment provided
 *
 * Hash: 0xC3ADF4880784FA9C | Since: 1207
 *
 * @deprecated Use telemetry.telemetryGunLockerWeaponStored() instead
 */
export declare function telemetryGunLockerWeaponStored(): void;
/**
 * No comment provided
 *
 * Hash: 0xAE693EC3A178F6C2 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryHerbPicked() instead
 */
export declare function telemetryHerbPicked(herbType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE6B763C7F4902201 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryHonor() instead
 */
export declare function telemetryHonor(): void;
/**
 * No comment provided
 *
 * Hash: 0x25CC50EC1A6F3A96 | Since: 1232
 *
 * @deprecated Use telemetry.telemetryHubNavigation() instead
 */
export declare function telemetryHubNavigation(): void;
/**
 * No comment provided
 *
 * Hash: 0x37AA282163B0D2C4 | Since: 1232
 *
 * @deprecated Use telemetry.telemetryHubOffers() instead
 */
export declare function telemetryHubOffers(couponItem: any): void;
/**
 * No comment provided
 *
 * Hash: 0x1B554723799245F4 | Since: 1355
 *
 * @deprecated Use telemetry.telemetryIntroSkip() instead
 */
export declare function telemetryIntroSkip(): void;
/**
 * No comment provided
 *
 * Hash: 0xECD67E9FA677CCCF | Since: 1207
 *
 * @deprecated Use telemetry.telemetryLobbyProgression() instead
 */
export declare function telemetryLobbyProgression(): void;
/**
 * No comment provided
 *
 * Hash: 0xCF63EF77B0DF0397 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryLoot() instead
 */
export declare function telemetryLoot(): void;
/**
 * No comment provided
 *
 * Hash: 0x330029E121380CEB | Since: 1355
 *
 * @deprecated Use telemetry.telemetryMatchNomination() instead
 */
export declare function telemetryMatchNomination(args: any): void;
/**
 * No comment provided
 *
 * Hash: 0xA2058154357726BB | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMatchOver() instead
 */
export declare function telemetryMatchOver(): void;
/**
 * No comment provided
 *
 * Hash: 0x4C08D2B6D8BE17E4 | Since: 1311
 *
 * @deprecated Use telemetry.telemetryMatchQueue() instead
 */
export declare function telemetryMatchQueue(): void;
/**
 * No comment provided
 *
 * Hash: 0xF620F47B4F4A78C4 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMatchStarted() instead
 */
export declare function telemetryMatchStarted(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF3C68F56BAD7B69 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMatchVote() instead
 */
export declare function telemetryMatchVote(): void;
/**
 * No comment provided
 *
 * Hash: 0x3255D4D2082C6339 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMenuNavigation() instead
 */
export declare function telemetryMenuNavigation(): void;
/**
 * No comment provided
 *
 * Hash: 0x8EC7890D446BD9C1 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMissionCheckpoint() instead
 */
export declare function telemetryMissionCheckpoint(): void;
/**
 * _TELEMETRY_C* - _TELEMETRY_G*
 *
 * Hash: 0x6571E4327390EC0B | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMissionFailedToLaunch() instead
 */
export declare function telemetryMissionFailedToLaunch(pos: Vector3, reason: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEA323F5E1A4DA2F1 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMissionIloOption() instead
 */
export declare function telemetryMissionIloOption(): void;
/**
 * No comment provided
 *
 * Hash: 0xD894437E12C17AEC | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMissionOver() instead
 */
export declare function telemetryMissionOver(): void;
/**
 * No comment provided
 *
 * Hash: 0x15B0CC1B36F1DE29 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryMissionStarted() instead
 */
export declare function telemetryMissionStarted(): void;
/**
 * No comment provided
 *
 * Hash: 0xB5013EFBB5516867 | Since: 1232
 *
 * @deprecated Use telemetry.telemetryMoonshineBrew() instead
 */
export declare function telemetryMoonshineBrew(): void;
/**
 * No comment provided
 *
 * Hash: 0xA72773C3134F9A57 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryNetCamp() instead
 */
export declare function telemetryNetCamp(): void;
/**
 * No comment provided
 *
 * Hash: 0xE26970A7AE0F28E9 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryNotoriety() instead
 */
export declare function telemetryNotoriety(): void;
/**
 * No comment provided
 *
 * Hash: 0xF37A2149BC9A8A27 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryParleyFeud() instead
 */
export declare function telemetryParleyFeud(): void;
/**
 * No comment provided
 *
 * Hash: 0xE67AF24C5A3B6058 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPersonalVehicleWagon() instead
 */
export declare function telemetryPersonalVehicleWagon(): void;
/**
 * No comment provided
 *
 * Hash: 0xED22BE4C5A399E63 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPhoto() instead
 */
export declare function telemetryPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x0777D65EE8A17517 | Since: 1311
 *
 * @deprecated Use telemetry.telemetryPhotoCam() instead
 */
export declare function telemetryPhotoCam(): void;
/**
 * No comment provided
 *
 * Hash: 0x5DA4718DF897EB25 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPlayerSpawned() instead
 */
export declare function telemetryPlayerSpawned(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8127C5AA05C5A210 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPokerOver() instead
 */
export declare function telemetryPokerOver(): void;
/**
 * No comment provided
 *
 * Hash: 0xB204BF9F30298D77 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryPrison() instead
 */
export declare function telemetryPrison(transactionId: any, bountyAmount: any, ped: number | Ped, completionType: any, jailTimeServed: any, jailTimeLeft: any, posseRole: any): void;
/**
 * No comment provided
 *
 * Hash: 0xCD6F8A0335D821F9 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRegion() instead
 */
export declare function telemetryRegion(regionHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xAB43D1C80B5E9500 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRoleBounty() instead
 */
export declare function telemetryRoleBounty(): void;
/**
 * No comment provided
 *
 * Hash: 0x4AC38DFD286DAD14 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRoleCollector() instead
 */
export declare function telemetryRoleCollector(transactionId: any, collectible: any, category: any): void;
/**
 * No comment provided
 *
 * Hash: 0x99D40C5D74BC88E9 | Since: 1232
 *
 * @deprecated Use telemetry.telemetryRoleMoonshiner() instead
 */
export declare function telemetryRoleMoonshiner(transactionId: any): void;
/**
 * No comment provided
 *
 * Hash: 0x6FB9EA308F302922 | Since: 1311
 *
 * @deprecated Use telemetry.telemetryRoleNaturalist() instead
 */
export declare function telemetryRoleNaturalist(transactionId: any): void;
/**
 * No comment provided
 *
 * Hash: 0x32C2939564D74BFF | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRoleTokenTransaction() instead
 */
export declare function telemetryRoleTokenTransaction(): void;
/**
 * No comment provided
 *
 * Hash: 0x476038B5A0734C10 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRoleTrader() instead
 */
export declare function telemetryRoleTrader(transactionId: any): void;
/**
 * Creation of the metric is related to attribute filling, i. e. at camp fires, when the ped is resting.
 * _TELEMETRY_C* - _TELEMETRY_P*
 *
 * Hash: 0x7E002A36AEFCFB55 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryRpgGlobalCalculateAttributeCoreDelta() instead
 */
export declare function telemetryRpgGlobalCalculateAttributeCoreDelta(): void;
/**
 * No comment provided
 *
 * Hash: 0x61559675D23D8BD1 | Since: 1311
 *
 * @deprecated Use telemetry.telemetrySample() instead
 */
export declare function telemetrySample(transactionId: any, animal: any, bSampled: any, bTranq: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9BEE018A63FFFAD9 | Since: 1207
 *
 * @deprecated Use telemetry.telemetrySetIsFlow() instead
 */
export declare function telemetrySetIsFlow(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCA9E42F437625A85 | Since: 1232
 *
 * @deprecated Use telemetry.telemetrySetShopForTransaction() instead
 */
export declare function telemetrySetShopForTransaction(transactionId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB0B19B56697836F5 | Since: 1311
 *
 * @deprecated Use telemetry.telemetryShopCutscene() instead
 */
export declare function telemetryShopCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0x775B2ED944E44973 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryShopEntry() instead
 */
export declare function telemetryShopEntry(shopType: any, shopRegion: any, region: any): void;
/**
 * No comment provided
 *
 * Hash: 0xF78E669FDC202E73 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryShopExit() instead
 */
export declare function telemetryShopExit(): void;
/**
 * No comment provided
 *
 * Hash: 0x2A374E6F0075EE81 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryShopPurchase() instead
 */
export declare function telemetryShopPurchase(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BD8A9D0A774A6F8 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryShopSell() instead
 */
export declare function telemetryShopSell(centSalePrice: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF9F14080D80937BD | Since: 1207
 *
 * @deprecated Use telemetry.telemetrySleep() instead
 */
export declare function telemetrySleep(): void;
/**
 * No comment provided
 *
 * Hash: 0xF0D54E0651DD7E07 | Since: 1207
 *
 * @deprecated Use telemetry.telemetryStartGunLockerInteraction() instead
 */
export declare function telemetryStartGunLockerInteraction(): void;
/**
 * Returns false when transaction request is failing
 *
 * Hash: 0x80A02D9F948A8BCA | Since: 1207
 *
 * @deprecated Use telemetry.telemetryTriggerTransactionRequest() instead
 */
export declare function telemetryTriggerTransactionRequest(requestId: any, transactionId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF184B3ECE36219CF | Since: 1207
 *
 * @deprecated Use telemetry.tryGetTelemetryIdFromTransactionId() instead
 */
export declare function tryGetTelemetryIdFromTransactionId(transactionId: any, requestId: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7332461FC59EB7EC | Since: 1207
 *
 * @deprecated Use txd.doesStreamedTextureDictExist() instead
 */
export declare function doesStreamedTextureDictExist(textureDict: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBA0163B277C2D2D0 | Since: 1207
 *
 * @deprecated Use txd.doesStreamedTxdExist() instead
 */
export declare function doesStreamedTxdExist(txdHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x54D6900929CCF162 | Since: 1207
 *
 * @deprecated Use txd.hasStreamedTextureDictLoaded() instead
 */
export declare function hasStreamedTextureDictLoaded(textureDict: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE72591D1509FFE4 | Since: 1207
 *
 * @deprecated Use txd.hasStreamedTxdLoaded() instead
 */
export declare function hasStreamedTxdLoaded(txdHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC1BA29DF5631B0F8 | Since: 1207
 *
 * @deprecated Use txd.requestStreamedTextureDict() instead
 */
export declare function requestStreamedTextureDict(textureDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0xDB1BD07FB464584D | Since: 1207
 *
 * @deprecated Use txd.requestStreamedTxd() instead
 */
export declare function requestStreamedTxd(txdHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4ACA10A91F66F1E2 | Since: 1207
 *
 * @deprecated Use txd.setStreamedTextureDictAsNoLongerNeeded() instead
 */
export declare function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8232F37DF762ACB2 | Since: 1207
 *
 * @deprecated Use txd.setStreamedTxdAsNoLongerNeeded() instead
 */
export declare function setStreamedTxdAsNoLongerNeeded(txdHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xE555EC27D65EDE80 | Since: 1207
 *
 * @deprecated Use uiapps.canLaunchUiappByHash() instead
 */
export declare function canLaunchUiappByHash(appNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x16F47D434B6086BF | Since: 1207
 *
 * @deprecated Use uiapps.canLaunchUiappByHashWithEntry() instead
 */
export declare function canLaunchUiappByHashWithEntry(appNameHash: number | string, entryHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAC959AB99AAF3D9F | Since: 1207
 *
 * @deprecated Use uiapps.isAnyUiappActive() instead
 */
export declare function isAnyUiappActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB30BEC7A7A5CBD3 | Since: 1207
 *
 * @deprecated Use uiapps.isAnyUiappRunning() instead
 */
export declare function isAnyUiappRunning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25B7A0206BDFAC76 | Since: 1207
 *
 * @deprecated Use uiapps.isUiappActiveByHash() instead
 */
export declare function isUiappActiveByHash(appNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE4A9B35D028979F | Since: 1232
 *
 * @deprecated Use uiapps.isUiappRunning() instead
 */
export declare function isUiappRunning(appName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4E511D093A86AD49 | Since: 1207
 *
 * @deprecated Use uiapps.isUiappRunningByHash() instead
 */
export declare function isUiappRunningByHash(appNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42095B886D30DE66 | Since: 1232
 *
 * @deprecated Use uiapps.isUiappTransitioningByHash() instead
 */
export declare function isUiappTransitioningByHash(appNameHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8FC7F4E4CF4F581 | Since: 1207
 *
 * @deprecated Use uiapps.launchUiappByHash() instead
 */
export declare function launchUiappByHash(appNameHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC1BCF31E975B3195 | Since: 1207
 *
 * @deprecated Use uiapps.launchUiappByHashWithEntry() instead
 */
export declare function launchUiappByHashWithEntry(appNameHash: number | string, entryHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7B2027BAC5C8EC89 | Since: 1207
 *
 * @deprecated Use uiapps.launchUiappWithEntry() instead
 */
export declare function launchUiappWithEntry(appName: string, entry: string): number;
/**
 * No comment provided
 *
 * Hash: 0x7689CD255655BFD7 | Since: 1207
 *
 * @deprecated Use uiapps.requestUiappTransitionByHash() instead
 */
export declare function requestUiappTransitionByHash(appNameHash: number | string, transitionHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAD7B70F7230C5A12 | Since: 1207
 *
 * @deprecated Use uiapps.closeAllUiapps() instead
 */
export declare function closeAllUiapps(): void;
/**
 * No comment provided
 *
 * Hash: 0x12769EEB8DBD7A7B | Since: 1207
 *
 * @deprecated Use uiapps.closeAllUiappsImmediate() instead
 */
export declare function closeAllUiappsImmediate(): void;
/**
 * No comment provided
 *
 * Hash: 0x818C6CA9B659E8EC | Since: 1207
 *
 * @deprecated Use uiapps.closeUiapp() instead
 */
export declare function closeUiapp(appName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2FF10C9C3F92277E | Since: 1207
 *
 * @deprecated Use uiapps.closeUiappByHash() instead
 */
export declare function closeUiappByHash(appNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x04428420A248A354 | Since: 1207
 *
 * @deprecated Use uiapps.closeUiappByHashImmediate() instead
 */
export declare function closeUiappByHashImmediate(appNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3015635426D1B17C | Since: 1207
 *
 * @deprecated Use uiapps.closeUiappImmediate() instead
 */
export declare function closeUiappImmediate(appName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x96FD694FE5BE55DC | Since: 1207
 *
 * @deprecated Use uiapps.getUiappCurrentActivityByHash() instead
 */
export declare function getUiappCurrentActivityByHash(appNameHash: number | string): number;
/**
 * Note: you must use VAR_STRING
 *
 * Hash: 0x16794E044C9EFB58 | Since: 1355
 *
 * @deprecated Use uidebug.bgDisplayText() instead
 */
export declare function bgDisplayText(text: string, x: number, y: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
 *
 * Hash: 0x16FA5CE47F184F1E | Since: 1355
 *
 * @deprecated Use uidebug.bgSetTextColor() instead
 */
export declare function bgSetTextColor(red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA1253A3C870B6843 | Since: 1355
 *
 * @deprecated Use uidebug.bgSetTextScale() instead
 */
export declare function bgSetTextScale(scaleX: number, scaleY: number): void;
/**
 * eventData:
 * struct UI_SCRIPT_EVENT
 * {
 * alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
 * alignas(8) int intParam;
 * alignas(8) Hash hashParam;
 * alignas(8) Hash datastoreParam;
 * };
 *
 * Old name: _EVENT_MANAGER_GET_EVENT
 *
 * Hash: 0xE24E957294241444 | Since: 1207
 *
 * @deprecated Use uievents.eventsUiGetMessage() instead
 */
export declare function eventsUiGetMessage(hash: number | string, eventData: any): boolean;
/**
 * Old name: _EVENT_MANAGER_IS_EVENT_PENDING
 *
 * Hash: 0x67ED5A7963F2F722 | Since: 1207
 *
 * @deprecated Use uievents.eventsUiIsPending() instead
 */
export declare function eventsUiIsPending(hash: number | string): boolean;
/**
 * eventData: see EVENTS_UI_GET_MESSAGE
 *
 * Old name: _EVENT_MANAGER_PEEK_EVENT
 *
 * Hash: 0x90237103F27F7937 | Since: 1207
 *
 * @deprecated Use uievents.eventsUiPeekMessage() instead
 */
export declare function eventsUiPeekMessage(hash: number | string, eventData: any): boolean;
/**
 * Old name: _EVENT_MANAGER_POP_EVENT
 *
 * Hash: 0x8E8A2369F48EC839 | Since: 1207
 *
 * @deprecated Use uievents.eventsUiPopMessage() instead
 */
export declare function eventsUiPopMessage(hash: number | string): void;
/**
 * feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
 *
 * Hash: 0xDD1232B332CBB9E7 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedClearChannel() instead
 */
export declare function uiFeedClearChannel(feedChannel: number): void;
/**
 * feedChannel: see UI_FEED_CLEAR_CHANNEL
 * Returns feedMessage
 *
 * Hash: 0xC17F69E1418CD11F | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedGetCurrentMessage() instead
 */
export declare function uiFeedGetCurrentMessage(feedChannel: number): number;
/**
 * Only used in R* SP Script beat_animal_attack
 * Returns feedMessage
 *
 * Hash: 0x0FD07141AD048AAE | Since: 1207
 *
 * @deprecated Use uifeed._0x0FD07141AD048AAE() instead
 */
export declare function _0x0FD07141AD048AAE(): number;
/**
 * Only used in R* SP Scripts
 *
 * Hash: 0x18D6869FBFFEC0F8 | Since: 1207
 *
 * @deprecated Use uifeed._0x18D6869FBFFEC0F8() instead
 */
export declare function _0x18D6869FBFFEC0F8(): number;
/**
 * Returns feedMessage
 *
 * Hash: 0x4E88A65968A55C78 | Since: 1207
 *
 * @deprecated Use uifeed._0x4E88A65968A55C78() instead
 */
export declare function _0x4E88A65968A55C78(): number;
/**
 * No comment provided
 *
 * Hash: 0x6D85126F6CCF02C9 | Since: 1207
 *
 * @deprecated Use uifeed._0x6D85126F6CCF02C9() instead
 */
export declare function _0x6D85126F6CCF02C9(feedChannel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAFF5BE9BA496CE40 | Since: 1207
 *
 * @deprecated Use uifeed._0xAFF5BE9BA496CE40() instead
 */
export declare function _0xAFF5BE9BA496CE40(collectableCategory: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xB7223B91CD6B7E07 | Since: 1207
 *
 * @deprecated Use uifeed._0xB7223B91CD6B7E07() instead
 */
export declare function _0xB7223B91CD6B7E07(feedChannel: number): boolean;
/**
 * Hides Toast Notifications
 *
 * Hash: 0x6035E8FBCA32AC5E | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedClearAllChannels() instead
 */
export declare function uiFeedClearAllChannels(): void;
/**
 * Clears help text
 *
 * Hash: 0x2F901291EF177B02 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedClearHelpTextFeed() instead
 */
export declare function uiFeedClearHelpTextFeed(feedMessage: number): void;
/**
 * Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
 *
 * Hash: 0x59FA676177DBE4C9 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedGetMessageState() instead
 */
export declare function uiFeedGetMessageState(feedMessage: number): number;
/**
 * Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
 *
 * Hash: 0xB2920B9760F0F36B | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostFeedTicker() instead
 */
export declare function uiFeedPostFeedTicker(): number;
/**
 * No comment provided
 *
 * Hash: 0x8D1249BD28791878 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostGameUpdateShard() instead
 */
export declare function uiFeedPostGameUpdateShard(): number;
/**
 * Example : https://pastebin.com/GvdBp8Dh
 *
 * Hash: 0x049D5C615BD38BAD | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostHelpText() instead
 */
export declare function uiFeedPostHelpText(): number;
/**
 * Example : https://pastebin.com/h1YzycuR
 *
 * Hash: 0xD05590C1AB38F068 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostLocationShard() instead
 */
export declare function uiFeedPostLocationShard(duration: any, data: any): number;
/**
 * No comment provided
 *
 * Hash: 0x2024F4F333095FB1 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostMissionName() instead
 */
export declare function uiFeedPostMissionName(): number;
/**
 * Example : https://pastebin.com/13tuRa63
 *
 * Hash: 0xCEDBF17EFCC0E4A4 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostObjective() instead
 */
export declare function uiFeedPostObjective(): number;
/**
 * No comment provided
 *
 * Hash: 0x860DDFE97CC94DF0 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostOneTextShard() instead
 */
export declare function uiFeedPostOneTextShard(): number;
/**
 * No comment provided
 *
 * Hash: 0x3F9FDDBA79117C69 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostRankupToast() instead
 */
export declare function uiFeedPostRankupToast(): number;
/**
 * No comment provided
 *
 * Hash: 0x893128CDB4B81FBB | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostReticleMessage() instead
 */
export declare function uiFeedPostReticleMessage(): number;
/**
 * Example : https://pastebin.com/kAtEMQTD
 *
 * Hash: 0xC927890AA64E9661 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostSampleNotification() instead
 */
export declare function uiFeedPostSampleNotification(): number;
/**
 * Example : https://pastebin.com/YZMBkAmW
 *
 * Hash: 0x26E87218390E6729 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostSampleToast() instead
 */
export declare function uiFeedPostSampleToast(): number;
/**
 * No comment provided
 *
 * Hash: 0xB249EBCB30DD88E0 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostSampleToastRight() instead
 */
export declare function uiFeedPostSampleToastRight(): number;
/**
 * No comment provided
 *
 * Hash: 0x38838A646FB30AAE | Since: 1311
 *
 * @deprecated Use uifeed.uiFeedPostSampleToastWithAppLink() instead
 */
export declare function uiFeedPostSampleToastWithAppLink(): number;
/**
 * No comment provided
 *
 * Hash: 0x02BCC0FE9EBA3529 | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostThreeTextShard() instead
 */
export declare function uiFeedPostThreeTextShard(): number;
/**
 * No comment provided
 *
 * Hash: 0xA6F4216AB10EB08E | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostTwoTextShard() instead
 */
export declare function uiFeedPostTwoTextShard(): number;
/**
 * No comment provided
 *
 * Hash: 0xC48152BC6B3E821C | Since: 1207
 *
 * @deprecated Use uifeed.uiFeedPostVoiceChatFeed() instead
 */
export declare function uiFeedPostVoiceChatFeed(): number;
/**
 * No comment provided
 *
 * Hash: 0x2A4765812202E671 | Since: 1207
 *
 * @deprecated Use uilog._0x2A4765812202E671() instead
 */
export declare function _0x2A4765812202E671(): any;
/**
 * No comment provided
 *
 * Hash: 0x763637F9B838B0A7 | Since: 1207
 *
 * @deprecated Use uilog._0x763637F9B838B0A7() instead
 */
export declare function _0x763637F9B838B0A7(): void;
/**
 * No comment provided
 *
 * Hash: 0xA20398536B7F1134 | Since: 1207
 *
 * @deprecated Use uilog._0xA20398536B7F1134() instead
 */
export declare function _0xA20398536B7F1134(): void;
/**
 * No comment provided
 *
 * Hash: 0xA49D6D503E3EA847 | Since: 1207
 *
 * @deprecated Use uilog._0xA49D6D503E3EA847() instead
 */
export declare function _0xA49D6D503E3EA847(): void;
/**
 * No comment provided
 *
 * Hash: 0xDA0A30153FCC0FFD | Since: 1207
 *
 * @deprecated Use uilog._0xDA0A30153FCC0FFD() instead
 */
export declare function _0xDA0A30153FCC0FFD(): void;
/**
 * No comment provided
 *
 * Hash: 0x69D5479982355D8F | Since: 1207
 *
 * @deprecated Use uilog.uilogAddEntryHash() instead
 */
export declare function uilogAddEntryHash(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x49C63FDF69744A27 | Since: 1207
 *
 * @deprecated Use uilog.uilogAddItemToTaskList() instead
 */
export declare function uilogAddItemToTaskList(): void;
/**
 * No comment provided
 *
 * Hash: 0xB43163388484CC87 | Since: 1207
 *
 * @deprecated Use uilog.uilogAddOrUpdateObjective() instead
 */
export declare function uilogAddOrUpdateObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0x60C59968E8E87E6B | Since: 1207
 *
 * @deprecated Use uilog.uilogAddTotalTakeEntry() instead
 */
export declare function uilogAddTotalTakeEntry(): void;
/**
 * No comment provided
 *
 * Hash: 0xB95B4EA6B1EDF035 | Since: 1207
 *
 * @deprecated Use uilog.uilogClearAllEntries() instead
 */
export declare function uilogClearAllEntries(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFF0D417277B41F8 | Since: 1207
 *
 * @deprecated Use uilog.uilogClearCachedObjective() instead
 */
export declare function uilogClearCachedObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0xA3108D6981A5CADB | Since: 1207
 *
 * @deprecated Use uilog.uilogClearHasDisplayedCachedObjective() instead
 */
export declare function uilogClearHasDisplayedCachedObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0x15A4461BEB788096 | Since: 1207
 *
 * @deprecated Use uilog.uilogGetCachedObjective() instead
 */
export declare function uilogGetCachedObjective(): string;
/**
 * No comment provided
 *
 * Hash: 0xCC48FFBB45B54F71 | Since: 1207
 *
 * @deprecated Use uilog.uilogHasDisplayedCachedObjective() instead
 */
export declare function uilogHasDisplayedCachedObjective(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB8188CCF52202475 | Since: 1207
 *
 * @deprecated Use uilog.uilogIsEntryRegistered() instead
 */
export declare function uilogIsEntryRegistered(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3920574CF0A2B7B6 | Since: 1207
 *
 * @deprecated Use uilog.uilogMarkAllEntriesAvailability() instead
 */
export declare function uilogMarkAllEntriesAvailability(): void;
/**
 * No comment provided
 *
 * Hash: 0x13E8D7DD08543482 | Since: 1207
 *
 * @deprecated Use uilog.uilogMarkEntryAvailability() instead
 */
export declare function uilogMarkEntryAvailability(): void;
/**
 * No comment provided
 *
 * Hash: 0xDE31D66D1E54C471 | Since: 1207
 *
 * @deprecated Use uilog.uilogMarkMissionCompleted() instead
 */
export declare function uilogMarkMissionCompleted(): void;
/**
 * No comment provided
 *
 * Hash: 0x49E58FE6EF40B987 | Since: 1207
 *
 * @deprecated Use uilog.uilogPostNotification() instead
 */
export declare function uilogPostNotification(data: any): number;
/**
 * No comment provided
 *
 * Hash: 0xE9990552DEC71600 | Since: 1207
 *
 * @deprecated Use uilog.uilogPrintCachedObjective() instead
 */
export declare function uilogPrintCachedObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0xD594A19BE09A75C6 | Since: 1207
 *
 * @deprecated Use uilog.uilogRemoveEntry() instead
 */
export declare function uilogRemoveEntry(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA233F8FE190514C | Since: 1207
 *
 * @deprecated Use uilog.uilogSetCachedObjective() instead
 */
export declare function uilogSetCachedObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0xA31013798FADCADC | Since: 1207
 *
 * @deprecated Use uilog.uilogSetDisplayCompletionRating() instead
 */
export declare function uilogSetDisplayCompletionRating(logEntryType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x69684D9936958D8F | Since: 1207
 *
 * @deprecated Use uilog.uilogSetEntryBriefTexture() instead
 */
export declare function uilogSetEntryBriefTexture(texture: number | string, textureDictionary: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x6965469934958D8F | Since: 1207
 *
 * @deprecated Use uilog.uilogSetEntryIconTexture() instead
 */
export declare function uilogSetEntryIconTexture(icon: number | string, iconDictionary: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x72A5CD214B342568 | Since: 1207
 *
 * @deprecated Use uilog.uilogSetEntryPinned() instead
 */
export declare function uilogSetEntryPinned(): void;
/**
 * No comment provided
 *
 * Hash: 0xA3108D6981A5CADC | Since: 1207
 *
 * @deprecated Use uilog.uilogSetHasDisplayedCachedObjective() instead
 */
export declare function uilogSetHasDisplayedCachedObjective(): void;
/**
 * No comment provided
 *
 * Hash: 0x136A027CF37B0A4F | Since: 1207
 *
 * @deprecated Use uilog.uilogSetPendingDetailsId() instead
 */
export declare function uilogSetPendingDetailsId(): any;
/**
 * No comment provided
 *
 * Hash: 0xD106B211EF1B8F04 | Since: 1207
 *
 * @deprecated Use uilog.uilogSetTotalTakeSummary() instead
 */
export declare function uilogSetTotalTakeSummary(): void;
/**
 * No comment provided
 *
 * Hash: 0x80D6524190258C3E | Since: 1207
 *
 * @deprecated Use uilog.uilogUpdateEntrySubheader() instead
 */
export declare function uilogUpdateEntrySubheader(): void;
/**
 * No comment provided
 *
 * Hash: 0x3138582E0A13BFAB | Since: 1207
 *
 * @deprecated Use uipinning.uipinningGetTooltipText() instead
 */
export declare function uipinningGetTooltipText(hash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0xF7C180F57F85D0B8 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineCanRequestTransition() instead
 */
export declare function uiStateMachineCanRequestTransition(): any;
/**
 * No comment provided
 *
 * Hash: 0x4C6F2C4B7A03A266 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineCreate() instead
 */
export declare function uiStateMachineCreate(): any;
/**
 * No comment provided
 *
 * Hash: 0x4EB122210A90E2D8 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineDestroy() instead
 */
export declare function uiStateMachineDestroy(): void;
/**
 * No comment provided
 *
 * Hash: 0x2738D68D2B4E09E7 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineDestroyAndClear() instead
 */
export declare function uiStateMachineDestroyAndClear(): void;
/**
 * No comment provided
 *
 * Hash: 0x5D15569C0FEBF757 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineExists() instead
 */
export declare function uiStateMachineExists(): any;
/**
 * No comment provided
 *
 * Hash: 0x6B9FE4F0BA521A19 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineRequestExit() instead
 */
export declare function uiStateMachineRequestExit(): void;
/**
 * No comment provided
 *
 * Hash: 0x7EA9C3547E80350E | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineRequestTransition() instead
 */
export declare function uiStateMachineRequestTransition(): any;
/**
 * No comment provided
 *
 * Hash: 0x3B7519720C9DCB45 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiflowblockEnter() instead
 */
export declare function uiflowblockEnter(): any;
/**
 * No comment provided
 *
 * Hash: 0x10A93C057B6BD944 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiflowblockIsLoaded() instead
 */
export declare function uiflowblockIsLoaded(): any;
/**
 * No comment provided
 *
 * Hash: 0xF320A77DD5F781DF | Since: 1207
 *
 * @deprecated Use uistatemachine.uiflowblockRelease() instead
 */
export declare function uiflowblockRelease(): void;
/**
 * No comment provided
 *
 * Hash: 0xC0081B34E395CE48 | Since: 1207
 *
 * @deprecated Use uistatemachine.uiflowblockRequest() instead
 */
export declare function uiflowblockRequest(): any;
/**
 * No comment provided
 *
 * Hash: 0x11E73195E735B25B | Since: 1207
 *
 * @deprecated Use uistatemachine.uiStateMachineIsExited() instead
 */
export declare function uiStateMachineIsExited(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00A15B94CBA4F76F | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedClearMessage() instead
 */
export declare function uiStickyFeedClearMessage(msgId: number): void;
/**
 * Example: https://pastebin.com/JygJShNU
 *
 * Hash: 0x815C4065AE6E6071 | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedCreateDeathFailMessage() instead
 */
export declare function uiStickyFeedCreateDeathFailMessage(): number;
/**
 * Example: https://pastebin.com/EJD7ytnz
 *
 * Hash: 0x9F2CC2439A04E7BA | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedCreateErrorMessage() instead
 */
export declare function uiStickyFeedCreateErrorMessage(): number;
/**
 * Example: https://pastebin.com/6mLtee2S
 *
 * Hash: 0x339E16B41780FC35 | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedCreateWarningMessage() instead
 */
export declare function uiStickyFeedCreateWarningMessage(): number;
/**
 * Returns state of sticky feed message, see 0x59FA676177DBE4C9
 *
 * Hash: 0x07954320D77F6A3D | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedGetMessageState() instead
 */
export declare function uiStickyFeedGetMessageState(msgId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF8806EC3FF840FDC | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedIsAlertScreenActive() instead
 */
export declare function uiStickyFeedIsAlertScreenActive(): boolean;
/**
 * stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
 *
 * Hash: 0xC5C395C60B542A3C | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedIsChannelActive() instead
 */
export declare function uiStickyFeedIsChannelActive(stickyFeedChannel: number): boolean;
/**
 * Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
 * Example: https://pastebin.com/nDrJyWq2
 *
 * Hash: 0xBC6F454E310124DA | Since: 1207
 *
 * @deprecated Use uistickyfeed.uiStickyFeedUpdateMessage() instead
 */
export declare function uiStickyFeedUpdateMessage(msgId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2CC24A2A7A1489C4 | Since: 1207
 *
 * @deprecated Use uitutorial.uitutorialGetIsThreatIndicatorCapableRadarShown() instead
 */
export declare function uitutorialGetIsThreatIndicatorCapableRadarShown(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC2E0A5E9ED4E1B4 | Since: 1207
 *
 * @deprecated Use uitutorial.uitutorialGetIsThreatIndicatorOn() instead
 */
export declare function uitutorialGetIsThreatIndicatorOn(): boolean;
/**
 * enum eRpgIcons
 * {
 * ICON_STAMINA,
 * ICON_STAMINA_CORE,
 * ICON_DEADEYE,
 * ICON_DEADEYE_CORE,
 * ICON_HEALTH,
 * ICON_HEALTH_CORE,
 * ICON_HORSE_HEALTH,
 * ICON_HORSE_HEALTH_CORE,
 * ICON_HORSE_STAMINA,
 * ICON_HORSE_STAMINA_CORE,
 * ICON_HORSE_COURAGE,
 * ICON_HORSE_COURAGE_CORE
 * };
 *
 * enum eRpgIconVisibility
 * {
 * ICON_VISIBILITY_WAIT_TO_HIDE,
 * ICON_VISIBILITY_ALWAYS_SHOW,
 * ICON_VISIBILITY_ALWAYS_HIDE,
 * ICON_VISIBILITY_ALWAYS_BLINK
 * };
 *
 * Hash: 0xC116E6DF68DCE667 | Since: 1207
 *
 * @deprecated Use uitutorial.uitutorialSetRpgIconVisibility() instead
 */
export declare function uitutorialSetRpgIconVisibility(rpgIcon: number, visibility: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC4B660C7B6040E75 | Since: 1207
 *
 * @deprecated Use unlock.unlockIsUnlocked() instead
 */
export declare function unlockIsUnlocked(unlockHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8588A14B75AF096B | Since: 1207
 *
 * @deprecated Use unlock.unlockIsVisible() instead
 */
export declare function unlockIsVisible(unlockHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1B7C5ADA8A6910A0 | Since: 1207
 *
 * @deprecated Use unlock.unlockSetUnlocked() instead
 */
export declare function unlockSetUnlocked(unlockHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x46B901A8ECDB5A61 | Since: 1207
 *
 * @deprecated Use unlock.unlockSetVisible() instead
 */
export declare function unlockSetVisible(unlockHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7C1C2062CFAD06FE | Since: 1207
 *
 * @deprecated Use unlock.unlockGetItemRoleUnlockInfo() instead
 */
export declare function unlockGetItemRoleUnlockInfo(unlockHash: number | string, outData: any): void;
/**
 * No comment provided
 *
 * Hash: 0x66BF197E066050DE | Since: 1207
 *
 * @deprecated Use unlock.unlockIsLootable() instead
 */
export declare function unlockIsLootable(unlockHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x644166BA7AA49DEA | Since: 1207
 *
 * @deprecated Use unlock.unlockIsNew() instead
 */
export declare function unlockIsNew(unlockHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6B6369647F26F09F | Since: 1207
 *
 * @deprecated Use unlock.unlockIsUnlockFlagSet() instead
 */
export declare function unlockIsUnlockFlagSet(unlockHash: number | string, flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6D79C7AEF870A99 | Since: 1207
 *
 * @deprecated Use unlock.unlockSetNew() instead
 */
export declare function unlockSetNew(unlockHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4C221BAC54D735C3 | Since: 1207
 *
 * @deprecated Use vehicle.addRoadNodeSpeedZone() instead
 */
export declare function addRoadNodeSpeedZone(): number;
/**
 * Returns false if every seat is occupied.
 *
 * Hash: 0xA0A424505A1B6429 | Since: 1207
 *
 * @deprecated Use vehicle.areAnyVehicleSeatsFree() instead
 */
export declare function areAnyVehicleSeatsFree(vehicle: number | Vehicle): boolean;
/**
 * This native makes the vehicle stop immediately
 *
 * distance defines how far it will travel until stopping.
 *
 * Hash: 0x260BE8F09E326A20 | Since: 1207
 *
 * @deprecated Use vehicle.bringVehicleToHalt() instead
 */
export declare function bringVehicleToHalt(vehicle: number | Vehicle, distance: number, duration: number, unknown: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC075176CFB8B4128 | Since: 1207
 *
 * @deprecated Use vehicle.canAnchorBoatHere() instead
 */
export declare function canAnchorBoatHere(vehicle: number | Vehicle): boolean;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0xF8B2D32A2231FD24 | Since: 1207
 *
 * @deprecated Use vehicle.canShuffleSeat() instead
 */
export declare function canShuffleSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EFC5DC62E67609B | Since: 1207
 *
 * @deprecated Use vehicle.clearLastDrivenVehicle() instead
 */
export declare function clearLastDrivenVehicle(): void;
/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 *
 * Hash: 0xDBC28A8C683CD80B | Since: 1207
 *
 * @deprecated Use vehicle.copyVehicleDamages() instead
 */
export declare function copyVehicleDamages(sourceVehicle: number | Vehicle, targetVehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xAF35D0D2583051B0 | Since: 1207
 *
 * @deprecated Use vehicle.createVehicle() instead
 */
export declare function createVehicle(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean, bDontAutoCreateDraftAnimals: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xA3120A1385F17FF7 | Since: 1207
 *
 * @deprecated Use vehicle.deleteAllTrains() instead
 */
export declare function deleteAllTrains(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D3630FB07E8B570 | Since: 1207
 *
 * @deprecated Use vehicle.deleteMissionTrain() instead
 */
export declare function deleteMissionTrain(train: number | Vehicle): void;
/**
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 *
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 *
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0xE20A909D8C4A70F8 | Since: 1207
 *
 * @deprecated Use vehicle.deleteVehicle() instead
 */
export declare function deleteVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x94B1E71B144356A5 | Since: 1207
 *
 * @deprecated Use vehicle.disableVehicleWeapon() instead
 */
export declare function disableVehicleWeapon(disabled: boolean, weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAF5E7E9A7620FFB5 | Since: 1207
 *
 * @deprecated Use vehicle.doesExtraExist() instead
 */
export declare function doesExtraExist(vehicle: number | Vehicle, extraId: number): boolean;
/**
 * Explodes a selected vehicle.
 *
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 *
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 *
 * Hash: 0x75DCED9EEC5769D7 | Since: 1207
 *
 * @deprecated Use vehicle.explodeVehicle() instead
 */
export declare function explodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean): void;
/**
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 *
 * Hash: 0x59ECA796021B0539 | Since: 1207
 *
 * @deprecated Use vehicle.forcePlaybackRecordedVehicleUpdate() instead
 */
export declare function forcePlaybackRecordedVehicleUpdate(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x52F45D033645181B | Since: 1207
 *
 * @deprecated Use vehicle.getClosestVehicle() instead
 */
export declare function getClosestVehicle(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
/**
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 *
 * Hash: 0x86FA6D8B48667D75 | Since: 1207
 *
 * @deprecated Use vehicle.getCurrentStationForTrain() instead
 */
export declare function getCurrentStationForTrain(train: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA19447D83294E29F | Since: 1207
 *
 * @deprecated Use vehicle.getDraftAnimalCount() instead
 */
export declare function getDraftAnimalCount(vehicle: number | Vehicle, expected: number, actual: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2963B5C1637E8A27 | Since: 1207
 *
 * @deprecated Use vehicle.getDriverOfVehicle() instead
 */
export declare function getDriverOfVehicle(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA94F3E0AB9695E19 | Since: 1207
 *
 * @deprecated Use vehicle.getLastDrivenVehicle() instead
 */
export declare function getLastDrivenVehicle(): number;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0x74583B19FEEAFDA7 | Since: 1207
 *
 * @deprecated Use vehicle.getLastPedInVehicleSeat() instead
 */
export declare function getLastPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0xBB40DD2270B65366 | Since: 1207
 *
 * @deprecated Use vehicle.getPedInVehicleSeat() instead
 */
export declare function getPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
/**
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x1A00961A1BE94E5E | Since: 1207
 *
 * @deprecated Use vehicle.getPositionOfVehicleRecordingAtTime() instead
 */
export declare function getPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
/**
 * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x61787DD28B8CC0D5 | Since: 1207
 *
 * @deprecated Use vehicle.getRotationOfVehicleRecordingAtTime() instead
 */
export declare function getRotationOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x233B51C7913FA031 | Since: 1207
 *
 * @deprecated Use vehicle.getTimePositionInRecording() instead
 */
export declare function getTimePositionInRecording(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x865FEC2FA899F29C | Since: 1207
 *
 * @deprecated Use vehicle.getTrackIndexOfTrain() instead
 */
export declare function getTrackIndexOfTrain(train: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xD0FB093A4CDB932C | Since: 1207
 *
 * @deprecated Use vehicle.getTrainCarriage() instead
 */
export declare function getTrainCarriage(train: number | Vehicle, trailerNumber: number): number;
/**
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 *
 * Hash: 0x42113B857E33C16E | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleBodyHealth() instead
 */
export declare function getVehicleBodyHealth(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xFA2CDDFEB8BC898B | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleDoorsLockedForPlayer() instead
 */
export declare function getVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC867FD144F2469D3 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleDoorLockStatus() instead
 */
export declare function getVehicleDoorLockStatus(vehicle: number | Vehicle): number;
/**
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 *
 * Minimum: -4000
 * Maximum: 1000
 *
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * Hash: 0x90DBFFAC43B22081 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleEngineHealth() instead
 */
export declare function getVehicleEngineHealth(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xFE52F34491529F0B | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleEstimatedMaxSpeed() instead
 */
export declare function getVehicleEstimatedMaxSpeed(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA9C55F1C15E62E06 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleMaxNumberOfPassengers() instead
 */
export declare function getVehicleMaxNumberOfPassengers(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x9A578736FF3A17C3 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleModelNumberOfSeats() instead
 */
export declare function getVehicleModelNumberOfSeats(modelHash: number | string): number;
/**
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
 *
 * Hash: 0x59F3F16577CD79B2 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleNumberOfPassengers() instead
 */
export declare function getVehicleNumberOfPassengers(vehicle: number | Vehicle): number;
/**
 * 1000 is max health
 *
 * Hash: 0x1E5A9B356D5098BE | Since: 1207
 *
 * @deprecated Use vehicle.getVehiclePetrolTankHealth() instead
 */
export declare function getVehiclePetrolTankHealth(vehicle: number | Vehicle): number;
/**
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 *
 * Hash: 0xCF867A239EC30741 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleTrailerVehicle() instead
 */
export declare function getVehicleTrailerVehicle(vehicle: number | Vehicle, trailer: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2701D01D5E18FC31 | Since: 1207
 *
 * @deprecated Use vehicle.hasInstantFillVehiclePopulationFinished() instead
 */
export declare function hasInstantFillVehiclePopulationFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB935F3154BC913C8 | Since: 1207
 *
 * @deprecated Use vehicle.hasVehicleAssetLoaded() instead
 */
export declare function hasVehicleAssetLoaded(vehicleAsset: number | string): boolean;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0xBA9325BE372AB6EA | Since: 1207
 *
 * @deprecated Use vehicle.hasVehicleRecordingBeenLoaded() instead
 */
export declare function hasVehicleRecordingBeenLoaded(recording: number, script: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1FF00DB43026B12F | Since: 1207
 *
 * @deprecated Use vehicle.instantlyFillVehiclePopulation() instead
 */
export declare function instantlyFillVehiclePopulation(): void;
/**
 * No comment provided
 *
 * Hash: 0x5698BA4FD04D39C4 | Since: 1207
 *
 * @deprecated Use vehicle.isAnyVehicleNearPoint() instead
 */
export declare function isAnyVehicleNearPoint(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA44E97849E9F3DD | Since: 1207
 *
 * @deprecated Use vehicle.isDraftVehicle() instead
 */
export declare function isDraftVehicle(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x80DDCCB2F4A3EB57 | Since: 1207
 *
 * @deprecated Use vehicle.isEntryPointForSeatClear() instead
 */
export declare function isEntryPointForSeatClear(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, side: boolean, onEnter: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02774B3A9034278F | Since: 1207
 *
 * @deprecated Use vehicle.isPlaybackGoingOnForVehicle() instead
 */
export declare function isPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A7472606EC5B7C1 | Since: 1207
 *
 * @deprecated Use vehicle.isPlaybackUsingAiGoingOnForVehicle() instead
 */
export declare function isPlaybackUsingAiGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 *
 * Hash: 0x7892685BF6D9775E | Since: 1207
 *
 * @deprecated Use vehicle.isSeatWarpOnly() instead
 */
export declare function isSeatWarpOnly(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x799CFC7C5B743B15 | Since: 1207
 *
 * @deprecated Use vehicle.isThisModelABoat() instead
 */
export declare function isThisModelABoat(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC08C8F8C1EDF174 | Since: 1207
 *
 * @deprecated Use vehicle.isThisModelATrain() instead
 */
export declare function isThisModelATrain(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE887BD31D97793F6 | Since: 1207
 *
 * @deprecated Use vehicle.isTrainWaitingAtStation() instead
 */
export declare function isTrainWaitingAtStation(train: number | Vehicle): boolean;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x7AE191143C7A9107 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleDoorFullyOpen() instead
 */
export declare function isVehicleDoorFullyOpen(vehicle: number | Vehicle, doorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB86D29B10F627379 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleDriveable() instead
 */
export declare function isVehicleDriveable(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFA9A55D9C4351625 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleExtraTurnedOn() instead
 */
export declare function isVehicleExtraTurnedOn(vehicle: number | Vehicle, extraId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F5029A8FC060C48 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleInBurnout() instead
 */
export declare function isVehicleInBurnout(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0045A54EC7A22455 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleModel() instead
 */
export declare function isVehicleModel(vehicle: number | Vehicle, model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0D5D119529654EE0 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleOnAllWheels() instead
 */
export declare function isVehicleOnAllWheels(vehicle: number | Vehicle): boolean;
/**
 * seatIndex: see CREATE_PED_INSIDE_VEHICLE
 * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
 *
 * Hash: 0xE052C1B1CAA4ECE4 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleSeatFree() instead
 */
export declare function isVehicleSeatFree(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 *
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 *
 * Hash: 0x78C3311A73135241 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleStopped() instead
 */
export declare function isVehicleStopped(vehicle: number | Vehicle): boolean;
/**
 * VEH_STUCK_ON_ROOF = 0,
 * VEH_STUCK_ON_SIDE,
 * VEH_STUCK_HUNG_UP,
 * VEH_STUCK_JAMMED
 *
 * Hash: 0x1ABA9753939503C5 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleStuckTimerUp() instead
 */
export declare function isVehicleStuckTimerUp(vehicle: number | Vehicle, stuckType: number, ms: number): boolean;
/**
 * Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
 *
 * Hash: 0x424910CD5DE8C246 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleVisible() instead
 */
export declare function isVehicleVisible(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E7910A63E05B12C | Since: 1436
 *
 * @deprecated Use vehicle.isVehicleWindowIntact() instead
 */
export declare function isVehicleWindowIntact(vehicle: number | Vehicle, windowIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDBEA5506C848227 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleWrecked() instead
 */
export declare function isVehicleWrecked(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1EF36558FBDE2DAA | Since: 1207
 *
 * @deprecated Use vehicle.lockDoorsWhenNoLongerNeeded() instead
 */
export declare function lockDoorsWhenNoLongerNeeded(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x35AD938C74CACD6A | Since: 1207
 *
 * @deprecated Use vehicle.modifyVehicleTopSpeed() instead
 */
export declare function modifyVehicleTopSpeed(vehicle: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFE9AB3354ACE6C9C | Since: 1207
 *
 * @deprecated Use vehicle.removeRoadNodeSpeedZone() instead
 */
export declare function removeRoadNodeSpeedZone(speedzone: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC619A44639BC0CB4 | Since: 1207
 *
 * @deprecated Use vehicle.removeVehiclesFromGeneratorsInArea() instead
 */
export declare function removeVehiclesFromGeneratorsInArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x888A4E675B38F5AD | Since: 1207
 *
 * @deprecated Use vehicle.removeVehicleAsset() instead
 */
export declare function removeVehicleAsset(vehicleAsset: number | string): void;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x139E35755418F6AA | Since: 1207
 *
 * @deprecated Use vehicle.removeVehicleRecording() instead
 */
export declare function removeVehicleRecording(): void;
/**
 * windowIndex:
 * 0 = Front Right Window
 * 1 = Front Left Window
 * 2 = Back Right Window
 * 3 = Back Left Window
 *
 * Hash: 0x745F15A215F2DDF1 | Since: 1207
 *
 * @deprecated Use vehicle.removeVehicleWindow() instead
 */
export declare function removeVehicleWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x81A15811460FAB3A | Since: 1207
 *
 * @deprecated Use vehicle.requestVehicleAsset() instead
 */
export declare function requestVehicleAsset(vehicleHash: number | string, vehicleAsset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84B81EF78BD22357 | Since: 1207
 *
 * @deprecated Use vehicle.requestVehicleHighDetailModel() instead
 */
export declare function requestVehicleHighDetailModel(vehicle: number | Vehicle): void;
/**
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
 * (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 *
 * Hash: 0xC474CF16EDA45DC9 | Since: 1207
 *
 * @deprecated Use vehicle.requestVehicleRecording() instead
 */
export declare function requestVehicleRecording(recording: number, script: string): void;
/**
 * No comment provided
 *
 * Hash: 0x23298B468F7D88B6 | Since: 1207
 *
 * @deprecated Use vehicle.resetVehicleStuckTimer() instead
 */
export declare function resetVehicleStuckTimer(vehicle: number | Vehicle, nullAttributes: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8D3230A0ED7DE39F | Since: 1207
 *
 * @deprecated Use vehicle.setAllowVehicleExplodesOnContact() instead
 */
export declare function setAllowVehicleExplodesOnContact(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x3D596E6E88A02C24 | Since: 1207
 *
 * @deprecated Use vehicle.setAllVehicleGeneratorsActive() instead
 */
export declare function setAllVehicleGeneratorsActive(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBB134FB9D50C0CC | Since: 1207
 *
 * @deprecated Use vehicle.setAllVehicleGeneratorsActiveInArea() instead
 */
export declare function setAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAEAB044F05B92659 | Since: 1207
 *
 * @deprecated Use vehicle.setBoatAnchor() instead
 */
export declare function setBoatAnchor(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Value: mostly 99999.9f
 *
 * Old name: _SET_BOAT_MOVEMENT_RESISTANCE
 *
 * Hash: 0xE3261532550D6A9F | Since: 1207
 *
 * @deprecated Use vehicle.setBoatLowLodAnchorDistance() instead
 */
export declare function setBoatLowLodAnchorDistance(vehicle: number | Vehicle, value: number): void;
/**
 * Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
 *
 * Hash: 0x286771F3059A37A7 | Since: 1207
 *
 * @deprecated Use vehicle.setBoatRemainsAnchoredWhilePlayerIsDriver() instead
 */
export declare function setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x62A6D317A011EA1D | Since: 1207
 *
 * @deprecated Use vehicle.setBoatSinksWhenWrecked() instead
 */
export declare function setBoatSinksWhenWrecked(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC4735F48CD983EF | Since: 1207
 *
 * @deprecated Use vehicle.setBreakableVehicleLocksUnbreakable() instead
 */
export declare function setBreakableVehicleLocksUnbreakable(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xD4288603E8766FF7 | Since: 1207
 *
 * @deprecated Use vehicle.setDisableRandomTrainsThisFrame() instead
 */
export declare function setDisableRandomTrainsThisFrame(toggle: boolean): void;
/**
 * Old name: _SET_DISABLE_SUPERDUMMY_MODE
 *
 * Hash: 0x1716D787D9B94202 | Since: 1232
 *
 * @deprecated Use vehicle.setDisableSuperdummy() instead
 */
export declare function setDisableSuperdummy(vehicle: number | Vehicle, disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD146EE5F2B06B95E | Since: 1207
 *
 * @deprecated Use vehicle.setDisableVehicleEngineFires() instead
 */
export declare function setDisableVehicleEngineFires(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x5795FBE7A2001C14 | Since: 1207
 *
 * @deprecated Use vehicle.setDisableVehiclePetrolTankDamage() instead
 */
export declare function setDisableVehiclePetrolTankDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB70986AB19B04AFF | Since: 1207
 *
 * @deprecated Use vehicle.setDisableVehiclePetrolTankFires() instead
 */
export declare function setDisableVehiclePetrolTankFires(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x63DC1F22C903B709 | Since: 1207
 *
 * @deprecated Use vehicle.setDontAllowPlayerToEnterVehicleIfLockedForPlayer() instead
 */
export declare function setDontAllowPlayerToEnterVehicleIfLockedForPlayer(vehicle: number | Vehicle): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Old name: _SET_VEHICLE_DOOR_CAN_BREAK
 *
 * Hash: 0x081FB9D6422F804C | Since: 1207
 *
 * @deprecated Use vehicle.setDoorAllowedToBeBrokenOff() instead
 */
export declare function setDoorAllowedToBeBrokenOff(vehicle: number | Vehicle, doorId: number, isBreakable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x73F1E4F6DF26FE30 | Since: 1207
 *
 * @deprecated Use vehicle.setEnableVehicleSlipstreaming() instead
 */
export declare function setEnableVehicleSlipstreaming(): void;
/**
 * No comment provided
 *
 * Hash: 0x373CB1283308BD7B | Since: 1207
 *
 * @deprecated Use vehicle.setForceHdVehicle() instead
 */
export declare function setForceHdVehicle(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
 *
 * Hash: 0x75B49ACD73617437 | Since: 1207
 *
 * @deprecated Use vehicle.setForceLowLodAnchorMode() instead
 */
export declare function setForceLowLodAnchorMode(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x7F8E2B131E1DCA6C | Since: 1207
 *
 * @deprecated Use vehicle.setForceVehicleEngineDamageByBullet() instead
 */
export declare function setForceVehicleEngineDamageByBullet(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * flags = 0: DEFAULT; 1: KEEP_OLD_SPEED
 *
 * Hash: 0xBBE7648349B49BE8 | Since: 1207
 *
 * @deprecated Use vehicle.setMissionTrainAsNoLongerNeeded() instead
 */
export declare function setMissionTrainAsNoLongerNeeded(train: number | Vehicle, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7632755962AB9922 | Since: 1207
 *
 * @deprecated Use vehicle.setMissionTrainCoords() instead
 */
export declare function setMissionTrainCoords(train: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xFEDFA97638D61D4A | Since: 1207
 *
 * @deprecated Use vehicle.setParkedVehicleDensityMultiplierThisFrame() instead
 */
export declare function setParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x838C216C2B05A009 | Since: 1207
 *
 * @deprecated Use vehicle.setPedOwnsVehicle() instead
 */
export declare function setPedOwnsVehicle(ped: number | Ped, vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xD78084EED4CD94C6 | Since: 1207
 *
 * @deprecated Use vehicle.setPlaybackSpeed() instead
 */
export declare function setPlaybackSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF44D446D4E36DB87 | Since: 1207
 *
 * @deprecated Use vehicle.setRandomBoats() instead
 */
export declare function setRandomBoats(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1156C6EE7E82A98A | Since: 1207
 *
 * @deprecated Use vehicle.setRandomTrains() instead
 */
export declare function setRandomTrains(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1F91D44490E1EA0C | Since: 1207
 *
 * @deprecated Use vehicle.setRandomVehicleDensityMultiplierThisFrame() instead
 */
export declare function setRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x01021EB2E96B793C | Since: 1207
 *
 * @deprecated Use vehicle.setTrainCruiseSpeed() instead
 */
export declare function setTrainCruiseSpeed(train: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8EC47DD4300BF063 | Since: 1207
 *
 * @deprecated Use vehicle.setTrainOffsetFromStation() instead
 */
export declare function setTrainOffsetFromStation(train: number | Vehicle, offset: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDFBA6BBFF7CCAFBB | Since: 1207
 *
 * @deprecated Use vehicle.setTrainSpeed() instead
 */
export declare function setTrainSpeed(train: number | Vehicle, speed: number): void;
/**
 * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
 *
 * Hash: 0x0893DAFBFA67110E | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleAiCanUseExclusiveSeats() instead
 */
export declare function setVehicleAiCanUseExclusiveSeats(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1240E8596A8308B9 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleAllowHomingMissleLockon() instead
 */
export declare function setVehicleAllowHomingMissleLockon(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Makes the vehicle accept no passengers.
 *
 * Hash: 0xECB9E9BC887E8060 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleAllowNoPassengersLockon() instead
 */
export declare function setVehicleAllowNoPassengersLockon(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x501354951CD942DE | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleAutomaticallyAttaches() instead
 */
export declare function setVehicleAutomaticallyAttaches(vehicle: number | Vehicle): any;
/**
 * No comment provided
 *
 * Hash: 0x55CCAAE4F28C67A0 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleBodyHealth() instead
 */
export declare function setVehicleBodyHealth(vehicle: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCEC4CA2CAB8FA98C | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleBrokenPartsDontAffectAiHandling() instead
 */
export declare function setVehicleBrokenPartsDontAffectAiHandling(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x05254BA0B44ADC16 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleCanBeTargetted() instead
 */
export declare function setVehicleCanBeTargetted(vehicle: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE42952510F84AFDB | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleCanBeUsedByFleeingPeds() instead
 */
export declare function setVehicleCanBeUsedByFleeingPeds(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4BF8131AE811541C | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleCanBeVisiblyDamaged() instead
 */
export declare function setVehicleCanBeVisiblyDamaged(vehicle: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC5ED9D59B4646611 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleCanBreak() instead
 */
export declare function setVehicleCanBreak(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x065D03A9D6B2C6B5 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleCanEjectPassengersIfLocked() instead
 */
export declare function setVehicleCanEjectPassengersIfLocked(vehicle: number | Vehicle): void;
/**
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 *
 * Radius of effect damage applied in a sphere at impact location
 *
 * Hash: 0x1D7678F81452BB41 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDamage() instead
 */
export declare function setVehicleDamage(vehicle: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x606374EBFC27B133 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDensityMultiplierThisFrame() instead
 */
export declare function setVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x758C3460EE915D0A | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDirtLevel() instead
 */
export declare function setVehicleDirtLevel(vehicle: number | Vehicle, dirtLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x96F78A6A075D55D9 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorsLocked() instead
 */
export declare function setVehicleDoorsLocked(vehicle: number | Vehicle, doorLockStatus: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2381977DA948F8DC | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorsLockedForAllPlayers() instead
 */
export declare function setVehicleDoorsLockedForAllPlayers(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x359A8EA1FB8D6F0F | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorsLockedForPlayer() instead
 */
export declare function setVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE712BC978770F105 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorsLockedForTeam() instead
 */
export declare function setVehicleDoorsLockedForTeam(vehicle: number | Vehicle, team: number, toggle: boolean): void;
/**
 * Closes all doors of a vehicle:
 *
 * Hash: 0xA4FFCD645B11F25A | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorsShut() instead
 */
export declare function setVehicleDoorsShut(vehicle: number | Vehicle, closeInstantly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x362CEDD2A41E0747 | Since: 1232
 *
 * @deprecated Use vehicle.setVehicleDoorsToOpenAtAnyDistance() instead
 */
export declare function setVehicleDoorsToOpenAtAnyDistance(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x9666CF20A1C6D780 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorBroken() instead
 */
export declare function setVehicleDoorBroken(vehicle: number | Vehicle, doorId: number, deleteDoor: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xD57F10EBBA814ECF | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorControl() instead
 */
export declare function setVehicleDoorControl(vehicle: number | Vehicle, doorId: number, speed: number, angle: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x06F8A202EB312A3C | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorLatched() instead
 */
export declare function setVehicleDoorLatched(vehicle: number | Vehicle, doorId: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 * Can also be used on trains and its wagons
 *
 * Hash: 0x550CE392A4672412 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorOpen() instead
 */
export declare function setVehicleDoorOpen(vehicle: number | Vehicle, doorId: number, loose: boolean, openInstantly: boolean): void;
/**
 * doorId: enum eDoorId
 * {
 * VEH_EXT_DOOR_INVALID_ID = -1,
 * VEH_EXT_DOOR_DSIDE_F,
 * VEH_EXT_DOOR_DSIDE_M,
 * VEH_EXT_DOOR_DSIDE_M1,
 * VEH_EXT_DOOR_DSIDE_M2,
 * VEH_EXT_DOOR_DSIDE_R,
 * VEH_EXT_DOOR_PSIDE_F,
 * VEH_EXT_DOOR_PSIDE_M,
 * VEH_EXT_DOOR_PSIDE_M1,
 * VEH_EXT_DOOR_PSIDE_M2,
 * VEH_EXT_DOOR_PSIDE_R,
 * VEH_EXT_BONNET,
 * VEH_EXT_BOOT
 * };
 *
 * Hash: 0x6A3C24B91FD0EA09 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDoorShut() instead
 */
export declare function setVehicleDoorShut(vehicle: number | Vehicle, doorId: number, closeInstantly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x48E4C137A71C2688 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleEngineCanDegrade() instead
 */
export declare function setVehicleEngineCanDegrade(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 *
 * -------------------------
 * Minimum: -4000
 * Maximum: 1000
 *
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * Hash: 0x8BDC5B998B4654EF | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleEngineHealth() instead
 */
export declare function setVehicleEngineHealth(vehicle: number | Vehicle, health: number): void;
/**
 * Starts or stops the engine on the specified vehicle.
 *
 * vehicle: The vehicle to start or stop the engine on.
 * value: true to turn the vehicle on; false to turn it off.
 * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
 *
 * Hash: 0xB64CFA14CB9A2E78 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleEngineOn() instead
 */
export declare function setVehicleEngineOn(vehicle: number | Vehicle, value: boolean, instantly: boolean): void;
/**
 * index: 0 - 1
 *
 * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
 *
 * Hash: 0xC6B9BF123B9463B6 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleExclusiveDriver() instead
 */
export declare function setVehicleExclusiveDriver(vehicle: number | Vehicle, ped: number | Ped, index: number): void;
/**
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 *
 * Hash: 0xA402939C6761E1A3 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleExplodesOnHighExplosionDamage() instead
 */
export declare function setVehicleExplodesOnHighExplosionDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Note: only some vehicle have extras
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
 *
 * Hash: 0xBB6F89150BC9D16B | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleExtra() instead
 */
export declare function setVehicleExtra(vehicle: number | Vehicle, extraId: number, disable: boolean): void;
/**
 * This fixes a vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 *
 * Hash: 0x79811282A9D1AE56 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleFixed() instead
 */
export declare function setVehicleFixed(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF9F92AF49F12F6E7 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleForwardSpeed() instead
 */
export declare function setVehicleForwardSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x91BE51AEC4E99710 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleHandbrake() instead
 */
export declare function setVehicleHandbrake(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBB5A3FA8ED3979C5 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleHasBeenOwnedByPlayer() instead
 */
export declare function setVehicleHasBeenOwnedByPlayer(vehicle: number | Vehicle, owned: boolean): void;
/**
 * if true, axles won't bend.
 *
 * Hash: 0x252253C8A45AA1FC | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleHasStrongAxles() instead
 */
export declare function setVehicleHasStrongAxles(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC903855E028A05F2 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleHasUnbreakableLights() instead
 */
export declare function setVehicleHasUnbreakableLights(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x4EA71B4C9DB3C3F1 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleInactiveDuringPlayback() instead
 */
export declare function setVehicleInactiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xA9F1D75195CC40F6 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleIndividualDoorsLocked() instead
 */
export declare function setVehicleIndividualDoorsLocked(vehicle: number | Vehicle, doorId: number, doorLockStatus: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC1842F40FD501DA2 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleInfluencesWantedLevel() instead
 */
export declare function setVehicleInfluencesWantedLevel(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 *
 * Hash: 0x54800D386C5825E5 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleIsConsideredByPlayer() instead
 */
export declare function setVehicleIsConsideredByPlayer(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6C32FC81DFF25C9A | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleIsStolen() instead
 */
export declare function setVehicleIsStolen(vehicle: number | Vehicle, isStolen: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1549BA7FE83A2383 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleKeepEngineOnWhenAbandoned() instead
 */
export declare function setVehicleKeepEngineOnWhenAbandoned(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the vehicle's lights state.
 *
 * Hash: 0x629F0A0E952CAE7D | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleLights() instead
 */
export declare function setVehicleLights(vehicle: number | Vehicle, state: number): void;
/**
 * _SET_VEHICLE_LI*
 *
 * Hash: 0x8F75941C86EEBFCA | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleLimitSpeedWhenPlayerInactive() instead
 */
export declare function setVehicleLimitSpeedWhenPlayerInactive(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x5F5E2B1B9EAECC0F | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleLodMultiplier() instead
 */
export declare function setVehicleLodMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7549B9E841940695 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleMayBeUsedByGotoPointAnyMeans() instead
 */
export declare function setVehicleMayBeUsedByGotoPointAnyMeans(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x09C970AE59ABF6B2 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleNotStealableAmbiently() instead
 */
export declare function setVehicleNotStealableAmbiently(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x7263332501E07F52 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleOnGroundProperly() instead
 */
export declare function setVehicleOnGroundProperly(vehicle: number | Vehicle): boolean;
/**
 * 1000 is max health
 *
 * Hash: 0x6AB2918EE3BEC94C | Since: 1207
 *
 * @deprecated Use vehicle.setVehiclePetrolTankHealth() instead
 */
export declare function setVehiclePetrolTankHealth(vehicle: number | Vehicle, health: number): void;
/**
 * No comment provided
 *
 * Hash: 0x652712478F1721F4 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleProvidesCover() instead
 */
export declare function setVehicleProvidesCover(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x33992A808DF1C1BA | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleRespectsLocksWhenHasDriver() instead
 */
export declare function setVehicleRespectsLocksWhenHasDriver(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xB79BE78C665B3E6D | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleShootAtTarget() instead
 */
export declare function setVehicleShootAtTarget(): void;
/**
 * No comment provided
 *
 * Hash: 0x23A3AB86E0807721 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleStaysFrozenWhenCleanedUp() instead
 */
export declare function setVehicleStaysFrozenWhenCleanedUp(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Locks the vehicle's steering to the desired angle, explained below.
 *
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 *
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 *
 * Hash: 0x84DAAE11E9EE4FC3 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleSteerBias() instead
 */
export declare function setVehicleSteerBias(vehicle: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC84E138448507567 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleStopInstantlyWhenPlayerInactive() instead
 */
export declare function setVehicleStopInstantlyWhenPlayerInactive(vehicle: number | Vehicle): void;
/**
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 *
 * Hash: 0xAB315515C9F8803D | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleStrong() instead
 */
export declare function setVehicleStrong(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Allows you to toggle bulletproof tires.
 *
 * Hash: 0xEBD0A4E935106FE5 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleTyresCanBurst() instead
 */
export declare function setVehicleTyresCanBurst(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6E884BAB713A2A94 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleUndriveable() instead
 */
export declare function setVehicleUndriveable(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x839137C40275FB77 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleWheelsCanBreak() instead
 */
export declare function setVehicleWheelsCanBreak(vehicle: number | Vehicle, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC462C79379ABBCB1 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleWheelsCanBreakOffWhenBlowUp() instead
 */
export declare function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 *
 * Hash: 0x5F5E6379C59EFC56 | Since: 1207
 *
 * @deprecated Use vehicle.skipTimeInPlaybackRecordedVehicle() instead
 */
export declare function skipTimeInPlaybackRecordedVehicle(vehicle: number | Vehicle, time: number): void;
/**
 * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x4932B84E3276508E | Since: 1207
 *
 * @deprecated Use vehicle.startPlaybackRecordedVehicle() instead
 */
export declare function startPlaybackRecordedVehicle(vehicle: number | Vehicle, recording: number, script: string): void;
/**
 * Sounds the horn for the specified vehicle.
 *
 * vehicle: The vehicle to activate the horn for.
 * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
 * duration: The duration to sound the horn, in milliseconds.
 *
 * Note: If a player is in the vehicle, it will only sound briefly.
 *
 * Hash: 0xB4E3BFC39CA16057 | Since: 1207
 *
 * @deprecated Use vehicle.startVehicleHorn() instead
 */
export declare function startVehicleHorn(vehicle: number | Vehicle, duration: number, mode: number | string, forever: boolean): void;
/**
 * Old name: _STOP_BRING_VEHICLE_TO_HALT
 *
 * Hash: 0x7C06330BFDDA182E | Since: 1207
 *
 * @deprecated Use vehicle.stopBringingVehicleToHalt() instead
 */
export declare function stopBringingVehicleToHalt(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xBF9B4D6267E8C26D | Since: 1207
 *
 * @deprecated Use vehicle.stopPlaybackRecordedVehicle() instead
 */
export declare function stopPlaybackRecordedVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1F3969B140DEE157 | Since: 1207
 *
 * @deprecated Use vehicle.trackVehicleVisibility() instead
 */
export declare function trackVehicleVisibility(vehicle: number | Vehicle): void;
/**
 * Only used in SP Scripts.
 * Related to Vehicle Speed.
 *
 * Hash: 0x012701ED938B85DE | Since: 1207
 *
 * @deprecated Use vehicle._0x012701ED938B85DE() instead
 */
export declare function _0x012701ED938B85DE(): void;
/**
 * No comment provided
 *
 * Hash: 0x0355FE37240E2C77 | Since: 1207
 *
 * @deprecated Use vehicle._0x0355FE37240E2C77() instead
 */
export declare function _0x0355FE37240E2C77(): void;
/**
 * _SET_VEHICLE_*
 *
 * Hash: 0x04F0579DBDD32F34 | Since: 1207
 *
 * @deprecated Use vehicle._0x04F0579DBDD32F34() instead
 */
export declare function _0x04F0579DBDD32F34(vehicle: number | Vehicle): void;
/**
 * Takes value returned from 0x45853F4E17D847D5
 *
 * Hash: 0x0516FAE561276EFC | Since: 1207
 *
 * @deprecated Use vehicle._0x0516FAE561276EFC() instead
 */
export declare function _0x0516FAE561276EFC(trackIndex: number): boolean;
/**
 * _SET_TRAIN_*
 *
 * Hash: 0x06A09A6E0C6D2A84 | Since: 1207
 *
 * @deprecated Use vehicle._0x06A09A6E0C6D2A84() instead
 */
export declare function _0x06A09A6E0C6D2A84(train: number | Vehicle): void;
/**
 * _SET_VEHICLE_S*
 *
 * Hash: 0x0794199B25E499E1 | Since: 1207
 *
 * @deprecated Use vehicle._0x0794199B25E499E1() instead
 */
export declare function _0x0794199B25E499E1(wagon: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x07E2E21E799080A0 | Since: 1207
 *
 * @deprecated Use vehicle._0x07E2E21E799080A0() instead
 */
export declare function _0x07E2E21E799080A0(): void;
/**
 * Outputs track hash and junction index on given train vehicle handle.
 * _RESET_VEHICLE_* (?)
 *
 * Hash: 0x09034479E6E3E269 | Since: 1207
 *
 * @deprecated Use vehicle.returnTrainInfoFromHandle() instead
 */
export declare function returnTrainInfoFromHandle(train: number | Vehicle, trainTrack: number | string, junctionIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BA4250D20007C2E | Since: 1207
 *
 * @deprecated Use vehicle._0x0BA4250D20007C2E() instead
 */
export declare function _0x0BA4250D20007C2E(): any;
/**
 * No comment provided
 *
 * Hash: 0x0CD7914D17A970AB | Since: 1207
 *
 * @deprecated Use vehicle._0x0CD7914D17A970AB() instead
 */
export declare function _0x0CD7914D17A970AB(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D5FDF0D36FA10CD | Since: 1207
 *
 * @deprecated Use vehicle._0x0D5FDF0D36FA10CD() instead
 */
export declare function _0x0D5FDF0D36FA10CD(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0E558D3A49D759D6 | Since: 1207
 *
 * @deprecated Use vehicle._0x0E558D3A49D759D6() instead
 */
export declare function _0x0E558D3A49D759D6(): any;
/**
 * No comment provided
 *
 * Hash: 0x0F7F603BDE08C4D3 | Since: 1207
 *
 * @deprecated Use vehicle._0x0F7F603BDE08C4D3() instead
 */
export declare function _0x0F7F603BDE08C4D3(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FDDEE66E3465726 | Since: 1207
 *
 * @deprecated Use vehicle._0x0FDDEE66E3465726() instead
 */
export declare function _0x0FDDEE66E3465726(): any;
/**
 * No comment provided
 *
 * Hash: 0x104D9A7B1C0D0783 | Since: 1207
 *
 * @deprecated Use vehicle._0x104D9A7B1C0D0783() instead
 */
export declare function _0x104D9A7B1C0D0783(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1121B07088ED3013 | Since: 1207
 *
 * @deprecated Use vehicle._0x1121B07088ED3013() instead
 */
export declare function _0x1121B07088ED3013(): any;
/**
 * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
 * _GET_N* (NEAREST_STATION_FOR_TRAIN?)
 *
 * Hash: 0x1180A2974D251B7B | Since: 1207
 *
 * @deprecated Use vehicle._0x1180A2974D251B7B() instead
 */
export declare function _0x1180A2974D251B7B(train: number | Vehicle): number;
/**
 * Params: coords = GET_ENTITY_VELOCITY
 * _SET_VELOCITY*
 *
 * Hash: 0x12F6C6ED3EFF42DE | Since: 1207
 *
 * @deprecated Use vehicle._0x12F6C6ED3EFF42DE() instead
 */
export declare function _0x12F6C6ED3EFF42DE(vehicle: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x13C190302369308B | Since: 1207
 *
 * @deprecated Use vehicle._0x13C190302369308B() instead
 */
export declare function _0x13C190302369308B(): any;
/**
 * No comment provided
 *
 * Hash: 0x13EB275BF81636D1 | Since: 1207
 *
 * @deprecated Use vehicle._0x13EB275BF81636D1() instead
 */
export declare function _0x13EB275BF81636D1(): void;
/**
 * No comment provided
 *
 * Hash: 0x14DA8C4BC2CCD90A | Since: 1207
 *
 * @deprecated Use vehicle._0x14DA8C4BC2CCD90A() instead
 */
export declare function _0x14DA8C4BC2CCD90A(): any;
/**
 * No comment provided
 *
 * Hash: 0x15206E88FF7617DF | Since: 1207
 *
 * @deprecated Use vehicle._0x15206E88FF7617DF() instead
 */
export declare function _0x15206E88FF7617DF(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x15CC8C33D7FFCC4A | Since: 1436
 *
 * @deprecated Use vehicle._0x15CC8C33D7FFCC4A() instead
 */
export declare function _0x15CC8C33D7FFCC4A(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x160C1B5AB48AB87C | Since: 1207
 *
 * @deprecated Use vehicle._0x160C1B5AB48AB87C() instead
 */
export declare function _0x160C1B5AB48AB87C(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x165BE2001E5E4B75 | Since: 1207
 *
 * @deprecated Use vehicle._0x165BE2001E5E4B75() instead
 */
export declare function _0x165BE2001E5E4B75(): void;
/**
 * No comment provided
 *
 * Hash: 0x16B86A49E072AA85 | Since: 1207
 *
 * @deprecated Use vehicle._0x16B86A49E072AA85() instead
 */
export declare function _0x16B86A49E072AA85(): void;
/**
 * No comment provided
 *
 * Hash: 0x172E9DD35858DCD7 | Since: 1207
 *
 * @deprecated Use vehicle._0x172E9DD35858DCD7() instead
 */
export declare function _0x172E9DD35858DCD7(): void;
/**
 * returns true if any wheel is destroyed/detached
 *
 * Hash: 0x18714953CCED17D3 | Since: 1207
 *
 * @deprecated Use vehicle.areAnyVehicleWheelsDestroyed() instead
 */
export declare function areAnyVehicleWheelsDestroyed(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1A861F899EBBE17C | Since: 1207
 *
 * @deprecated Use vehicle._0x1A861F899EBBE17C() instead
 */
export declare function _0x1A861F899EBBE17C(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1BFBAFCC6760FF02 | Since: 1207
 *
 * @deprecated Use vehicle._0x1BFBAFCC6760FF02() instead
 */
export declare function _0x1BFBAFCC6760FF02(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x2045429505158D1A | Since: 1207
 *
 * @deprecated Use vehicle._0x2045429505158D1A() instead
 */
export declare function _0x2045429505158D1A(): any;
/**
 * No comment provided
 *
 * Hash: 0x2200AB13CBD10F4E | Since: 1207
 *
 * @deprecated Use vehicle._0x2200AB13CBD10F4E() instead
 */
export declare function _0x2200AB13CBD10F4E(vehicle: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x23F66C36F8E5EAAB | Since: 1207
 *
 * @deprecated Use vehicle._0x23F66C36F8E5EAAB() instead
 */
export declare function _0x23F66C36F8E5EAAB(): void;
/**
 * No comment provided
 *
 * Hash: 0x27E3F2B57209FA54 | Since: 1207
 *
 * @deprecated Use vehicle._0x27E3F2B57209FA54() instead
 */
export declare function _0x27E3F2B57209FA54(): void;
/**
 * No comment provided
 *
 * Hash: 0x288CBB414C3C2FBB | Since: 1207
 *
 * @deprecated Use vehicle._0x288CBB414C3C2FBB() instead
 */
export declare function _0x288CBB414C3C2FBB(): any;
/**
 * No comment provided
 *
 * Hash: 0x2A7413168F6CD5A8 | Since: 1207
 *
 * @deprecated Use vehicle._0x2A7413168F6CD5A8() instead
 */
export declare function _0x2A7413168F6CD5A8(): void;
/**
 * No comment provided
 *
 * Hash: 0x2BB2B5BCF0DF8008 | Since: 1207
 *
 * @deprecated Use vehicle._0x2BB2B5BCF0DF8008() instead
 */
export declare function _0x2BB2B5BCF0DF8008(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C46D2A591D8C322 | Since: 1207
 *
 * @deprecated Use vehicle._0x2C46D2A591D8C322() instead
 */
export declare function _0x2C46D2A591D8C322(): any;
/**
 * No comment provided
 *
 * Hash: 0x3053064F909B5F42 | Since: 1207
 *
 * @deprecated Use vehicle._0x3053064F909B5F42() instead
 */
export declare function _0x3053064F909B5F42(): void;
/**
 * No comment provided
 *
 * Hash: 0x3137EDC899E6DAE4 | Since: 1355
 *
 * @deprecated Use vehicle._0x3137EDC899E6DAE4() instead
 */
export declare function _0x3137EDC899E6DAE4(): void;
/**
 * Returns trackIndex
 *
 * Hash: 0x331CBD247FC5DAA8 | Since: 1207
 *
 * @deprecated Use vehicle._0x331CBD247FC5DAA8() instead
 */
export declare function _0x331CBD247FC5DAA8(configHash: number | string, pos: Vector3, direction: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x34BCF6209B9668A7 | Since: 1207
 *
 * @deprecated Use vehicle._0x34BCF6209B9668A7() instead
 */
export declare function _0x34BCF6209B9668A7(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x37D238BE69F7378A | Since: 1207
 *
 * @deprecated Use vehicle._0x37D238BE69F7378A() instead
 */
export declare function _0x37D238BE69F7378A(trackIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x38E7DD70A242D5CB | Since: 1207
 *
 * @deprecated Use vehicle._0x38E7DD70A242D5CB() instead
 */
export declare function _0x38E7DD70A242D5CB(trackIndex: number): void;
/**
 * Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
 *
 * Hash: 0x3ABFA128F5BF5A70 | Since: 1207
 *
 * @deprecated Use vehicle._0x3ABFA128F5BF5A70() instead
 */
export declare function _0x3ABFA128F5BF5A70(trainTrack: number | string, junctionIndex: number, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3D86997A86FEEF0D | Since: 1207
 *
 * @deprecated Use vehicle._0x3D86997A86FEEF0D() instead
 */
export declare function _0x3D86997A86FEEF0D(): void;
/**
 * No comment provided
 *
 * Hash: 0x41365DB586CD9E8E | Since: 1207
 *
 * @deprecated Use vehicle._0x41365DB586CD9E8E() instead
 */
export declare function _0x41365DB586CD9E8E(trackIndex: number): void;
/**
 * _H*
 *
 * Hash: 0x41F0B254DDF71473 | Since: 1207
 *
 * @deprecated Use vehicle._0x41F0B254DDF71473() instead
 */
export declare function _0x41F0B254DDF71473(wagon: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x42404D57D621601A | Since: 1207
 *
 * @deprecated Use vehicle._0x42404D57D621601A() instead
 */
export declare function _0x42404D57D621601A(): any;
/**
 * No comment provided
 *
 * Hash: 0x427C919E9809E370 | Since: 1207
 *
 * @deprecated Use vehicle._0x427C919E9809E370() instead
 */
export declare function _0x427C919E9809E370(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x485B05EF05B9AEE9 | Since: 1207
 *
 * @deprecated Use vehicle._0x485B05EF05B9AEE9() instead
 */
export declare function _0x485B05EF05B9AEE9(): void;
/**
 * No comment provided
 *
 * Hash: 0x4C05B42A8D937796 | Since: 1207
 *
 * @deprecated Use vehicle._0x4C05B42A8D937796() instead
 */
export declare function _0x4C05B42A8D937796(): void;
/**
 * Params: p1 usually true in R* Scripts
 * _SET_DRAFT_VEHICLE_*
 *
 * Hash: 0x4C60C333F9CCA2B6 | Since: 1207
 *
 * @deprecated Use vehicle._0x4C60C333F9CCA2B6() instead
 */
export declare function _0x4C60C333F9CCA2B6(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x51C7694E140FAE43 | Since: 1207
 *
 * @deprecated Use vehicle._0x51C7694E140FAE43() instead
 */
export declare function _0x51C7694E140FAE43(): any;
/**
 * No comment provided
 *
 * Hash: 0x5AADC7BBBB1BCEEB | Since: 1207
 *
 * @deprecated Use vehicle._0x5AADC7BBBB1BCEEB() instead
 */
export declare function _0x5AADC7BBBB1BCEEB(): void;
/**
 * No comment provided
 *
 * Hash: 0x615B3B8E73634509 | Since: 1207
 *
 * @deprecated Use vehicle._0x615B3B8E73634509() instead
 */
export declare function _0x615B3B8E73634509(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x63509DDF102E08E8 | Since: 1207
 *
 * @deprecated Use vehicle._0x63509DDF102E08E8() instead
 */
export declare function _0x63509DDF102E08E8(trackIndex: number): void;
/**
 * Only used in R* Script beat_train_holdup: p1 = 1
 *
 * Hash: 0x6355602C02EDC6DF | Since: 1207
 *
 * @deprecated Use vehicle._0x6355602C02EDC6DF() instead
 */
export declare function _0x6355602C02EDC6DF(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6703872EC09BC158 | Since: 1207
 *
 * @deprecated Use vehicle._0x6703872EC09BC158() instead
 */
export declare function _0x6703872EC09BC158(): void;
/**
 * No comment provided
 *
 * Hash: 0x6835AFEA10E186F4 | Since: 1207
 *
 * @deprecated Use vehicle._0x6835AFEA10E186F4() instead
 */
export declare function _0x6835AFEA10E186F4(): void;
/**
 * No comment provided
 *
 * Hash: 0x68830738A6BFB370 | Since: 1207
 *
 * @deprecated Use vehicle._0x68830738A6BFB370() instead
 */
export declare function _0x68830738A6BFB370(): void;
/**
 * No comment provided
 *
 * Hash: 0x697DF68F3A761A50 | Since: 1207
 *
 * @deprecated Use vehicle._0x697DF68F3A761A50() instead
 */
export declare function _0x697DF68F3A761A50(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B34BE961F639E21 | Since: 1207
 *
 * @deprecated Use vehicle._0x6B34BE961F639E21() instead
 */
export declare function _0x6B34BE961F639E21(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6B53F4B811E583D2 | Since: 1207
 *
 * @deprecated Use vehicle._0x6B53F4B811E583D2() instead
 */
export declare function _0x6B53F4B811E583D2(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Returns trackIndex
 *
 * Hash: 0x6C87F49BFA181DB5 | Since: 1207
 *
 * @deprecated Use vehicle._0x6C87F49BFA181DB5() instead
 */
export declare function _0x6C87F49BFA181DB5(pos: Vector3): number;
/**
 * _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
 *
 * Hash: 0x6DE072AC8A95FFC1 | Since: 1207
 *
 * @deprecated Use vehicle._0x6DE072AC8A95FFC1() instead
 */
export declare function _0x6DE072AC8A95FFC1(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x6EA1273D525427F4 | Since: 1207
 *
 * @deprecated Use vehicle._0x6EA1273D525427F4() instead
 */
export declare function _0x6EA1273D525427F4(): void;
/**
 * No comment provided
 *
 * Hash: 0x6FD7BDF10304363A | Since: 1207
 *
 * @deprecated Use vehicle._0x6FD7BDF10304363A() instead
 */
export declare function _0x6FD7BDF10304363A(): void;
/**
 * No comment provided
 *
 * Hash: 0x703D4FB366DA4452 | Since: 1207
 *
 * @deprecated Use vehicle._0x703D4FB366DA4452() instead
 */
export declare function _0x703D4FB366DA4452(): void;
/**
 * No comment provided
 *
 * Hash: 0x718EB706B6E998A0 | Since: 1207
 *
 * @deprecated Use vehicle._0x718EB706B6E998A0() instead
 */
export declare function _0x718EB706B6E998A0(trackIndex: number): void;
/**
 * _SET_VEHICLE_WHEELS_*
 *
 * Hash: 0x73118A3EE9C9B6DB | Since: 1207
 *
 * @deprecated Use vehicle._0x73118A3EE9C9B6DB() instead
 */
export declare function _0x73118A3EE9C9B6DB(wagon: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x7408B5C66BA31ADB | Since: 1207
 *
 * @deprecated Use vehicle._0x7408B5C66BA31ADB() instead
 */
export declare function _0x7408B5C66BA31ADB(): void;
/**
 * No comment provided
 *
 * Hash: 0x750D42C013F64AE7 | Since: 1207
 *
 * @deprecated Use vehicle._0x750D42C013F64AE7() instead
 */
export declare function _0x750D42C013F64AE7(): void;
/**
 * Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
 *
 * Hash: 0x762FDC4C19E5A981 | Since: 1207
 *
 * @deprecated Use vehicle._0x762FDC4C19E5A981() instead
 */
export declare function _0x762FDC4C19E5A981(trainCarriage: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7840576C50A13DBA | Since: 1207
 *
 * @deprecated Use vehicle._0x7840576C50A13DBA() instead
 */
export declare function _0x7840576C50A13DBA(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x785639D89F8451AB | Since: 1207
 *
 * @deprecated Use vehicle._0x785639D89F8451AB() instead
 */
export declare function _0x785639D89F8451AB(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x7BE0746539DEF0C8 | Since: 1207
 *
 * @deprecated Use vehicle._0x7BE0746539DEF0C8() instead
 */
export declare function _0x7BE0746539DEF0C8(): any;
/**
 * No comment provided
 *
 * Hash: 0x8379E05871AD24E0 | Since: 1207
 *
 * @deprecated Use vehicle._0x8379E05871AD24E0() instead
 */
export declare function _0x8379E05871AD24E0(): void;
/**
 * No comment provided
 *
 * Hash: 0x850CE59DEC2028F3 | Since: 1207
 *
 * @deprecated Use vehicle._0x850CE59DEC2028F3() instead
 */
export declare function _0x850CE59DEC2028F3(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x873AAF600CC36DAC | Since: 1207
 *
 * @deprecated Use vehicle._0x873AAF600CC36DAC() instead
 */
export declare function _0x873AAF600CC36DAC(): void;
/**
 * No comment provided
 *
 * Hash: 0x877EA24EB1614495 | Since: 1207
 *
 * @deprecated Use vehicle._0x877EA24EB1614495() instead
 */
export declare function _0x877EA24EB1614495(): any;
/**
 * No comment provided
 *
 * Hash: 0x87B974E54C71BA7B | Since: 1207
 *
 * @deprecated Use vehicle._0x87B974E54C71BA7B() instead
 */
export declare function _0x87B974E54C71BA7B(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x8878FF3EEE2868A9 | Since: 1207
 *
 * @deprecated Use vehicle._0x8878FF3EEE2868A9() instead
 */
export declare function _0x8878FF3EEE2868A9(): void;
/**
 * No comment provided
 *
 * Hash: 0x8DECD262602548B9 | Since: 1207
 *
 * @deprecated Use vehicle._0x8DECD262602548B9() instead
 */
export declare function _0x8DECD262602548B9(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x9868C0D0134855F7 | Since: 1207
 *
 * @deprecated Use vehicle._0x9868C0D0134855F7() instead
 */
export declare function _0x9868C0D0134855F7(): void;
/**
 * No comment provided
 *
 * Hash: 0x98A7598C579EE871 | Since: 1207
 *
 * @deprecated Use vehicle._0x98A7598C579EE871() instead
 */
export declare function _0x98A7598C579EE871(): void;
/**
 * _GET_P - _GET_T*
 *
 * Hash: 0x9CC94A948EAF5372 | Since: 1207
 *
 * @deprecated Use vehicle._0x9CC94A948EAF5372() instead
 */
export declare function _0x9CC94A948EAF5372(trackIndex: number, stationIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x9D12796EF4BF9EA9 | Since: 1207
 *
 * @deprecated Use vehicle._0x9D12796EF4BF9EA9() instead
 */
export declare function _0x9D12796EF4BF9EA9(): void;
/**
 * Forcing high LOD buoyancy for vehicle: p1 = false
 * _SET_A*
 *
 * Hash: 0x9E8711C81AA17876 | Since: 1207
 *
 * @deprecated Use vehicle._0x9E8711C81AA17876() instead
 */
export declare function _0x9E8711C81AA17876(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xA13028E22564A1BD | Since: 1207
 *
 * @deprecated Use vehicle._0xA13028E22564A1BD() instead
 */
export declare function _0xA13028E22564A1BD(): void;
/**
 * No comment provided
 *
 * Hash: 0xA230A5DDE12ED374 | Since: 1207
 *
 * @deprecated Use vehicle._0xA230A5DDE12ED374() instead
 */
export declare function _0xA230A5DDE12ED374(): void;
/**
 * No comment provided
 *
 * Hash: 0xA72B1BF3857B94D7 | Since: 1207
 *
 * @deprecated Use vehicle._0xA72B1BF3857B94D7() instead
 */
export declare function _0xA72B1BF3857B94D7(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xA7966807953A18EE | Since: 1207
 *
 * @deprecated Use vehicle._0xA7966807953A18EE() instead
 */
export declare function _0xA7966807953A18EE(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA9E185D498B9AC67 | Since: 1207
 *
 * @deprecated Use vehicle._0xA9E185D498B9AC67() instead
 */
export declare function _0xA9E185D498B9AC67(): any;
/**
 * _SET_TRAIN_*
 *
 * Hash: 0xAE7E66A61E7C17A5 | Since: 1207
 *
 * @deprecated Use vehicle._0xAE7E66A61E7C17A5() instead
 */
export declare function _0xAE7E66A61E7C17A5(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xB4241AD8F5AEE9ED | Since: 1207
 *
 * @deprecated Use vehicle._0xB4241AD8F5AEE9ED() instead
 */
export declare function _0xB4241AD8F5AEE9ED(trackIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB42C87521D1BDD2F | Since: 1207
 *
 * @deprecated Use vehicle._0xB42C87521D1BDD2F() instead
 */
export declare function _0xB42C87521D1BDD2F(vehicle: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xB961DD799A837BD7 | Since: 1207
 *
 * @deprecated Use vehicle._0xB961DD799A837BD7() instead
 */
export declare function _0xB961DD799A837BD7(): void;
/**
 * No comment provided
 *
 * Hash: 0xC2E62678D602853C | Since: 1207
 *
 * @deprecated Use vehicle._0xC2E62678D602853C() instead
 */
export declare function _0xC2E62678D602853C(): void;
/**
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 *
 * Hash: 0xC325A6BAA62CF8A2 | Since: 1207
 *
 * @deprecated Use vehicle._0xC325A6BAA62CF8A2() instead
 */
export declare function _0xC325A6BAA62CF8A2(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xC351394B932A6A50 | Since: 1207
 *
 * @deprecated Use vehicle._0xC351394B932A6A50() instead
 */
export declare function _0xC351394B932A6A50(): void;
/**
 * No comment provided
 *
 * Hash: 0xC399CC89FBA05DA0 | Since: 1207
 *
 * @deprecated Use vehicle._0xC399CC89FBA05DA0() instead
 */
export declare function _0xC399CC89FBA05DA0(vehicle: number | Vehicle): void;
/**
 * _SET_DRAFT_VEHICLE_(STOP?)*
 *
 * Hash: 0xC4A2C11FC0D41916 | Since: 1207
 *
 * @deprecated Use vehicle._0xC4A2C11FC0D41916() instead
 */
export declare function _0xC4A2C11FC0D41916(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCACAB2B123BBDBD6 | Since: 1207
 *
 * @deprecated Use vehicle._0xCACAB2B123BBDBD6() instead
 */
export declare function _0xCACAB2B123BBDBD6(): any;
/**
 * No comment provided
 *
 * Hash: 0xCAFF2C9747103C02 | Since: 1207
 *
 * @deprecated Use vehicle._0xCAFF2C9747103C02() instead
 */
export declare function _0xCAFF2C9747103C02(): any;
/**
 * No comment provided
 *
 * Hash: 0xCBC7B6F9A56B79F6 | Since: 1207
 *
 * @deprecated Use vehicle._0xCBC7B6F9A56B79F6() instead
 */
export declare function _0xCBC7B6F9A56B79F6(): void;
/**
 * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
 *
 * Hash: 0xCBF88256E44D5D39 | Since: 1207
 *
 * @deprecated Use vehicle._0xCBF88256E44D5D39() instead
 */
export declare function _0xCBF88256E44D5D39(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCEB1F1EED484A5B4 | Since: 1207
 *
 * @deprecated Use vehicle._0xCEB1F1EED484A5B4() instead
 */
export declare function _0xCEB1F1EED484A5B4(): void;
/**
 * No comment provided
 *
 * Hash: 0xCF342503CA4C8DF1 | Since: 1207
 *
 * @deprecated Use vehicle._0xCF342503CA4C8DF1() instead
 */
export declare function _0xCF342503CA4C8DF1(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCF9DA72002FC16BF | Since: 1207
 *
 * @deprecated Use vehicle.requestVehicleAssetAnims() instead
 */
export declare function requestVehicleAssetAnims(ped: number | Ped, entity: number | Entity, vehicleAsset: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD0116DF21E6C7B36 | Since: 1207
 *
 * @deprecated Use vehicle._0xD0116DF21E6C7B36() instead
 */
export declare function _0xD0116DF21E6C7B36(): any;
/**
 * No comment provided
 *
 * Hash: 0xD0AABE5B9F8FA589 | Since: 1207
 *
 * @deprecated Use vehicle._0xD0AABE5B9F8FA589() instead
 */
export declare function _0xD0AABE5B9F8FA589(trackIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD0BA1853D76683C8 | Since: 1207
 *
 * @deprecated Use vehicle._0xD0BA1853D76683C8() instead
 */
export declare function _0xD0BA1853D76683C8(trackIndex: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xD1DF5E54F4ACBE1A | Since: 1207
 *
 * @deprecated Use vehicle._0xD1DF5E54F4ACBE1A() instead
 */
export declare function _0xD1DF5E54F4ACBE1A(): any;
/**
 * No comment provided
 *
 * Hash: 0xD1EFA8D68BF5D63D | Since: 1207
 *
 * @deprecated Use vehicle._0xD1EFA8D68BF5D63D() instead
 */
export declare function _0xD1EFA8D68BF5D63D(): void;
/**
 * No comment provided
 *
 * Hash: 0xD21A3D421E7F09F7 | Since: 1207
 *
 * @deprecated Use vehicle._0xD21A3D421E7F09F7() instead
 */
export declare function _0xD21A3D421E7F09F7(): void;
/**
 * No comment provided
 *
 * Hash: 0xD4907EF4334C7602 | Since: 1207
 *
 * @deprecated Use vehicle._0xD4907EF4334C7602() instead
 */
export declare function _0xD4907EF4334C7602(): void;
/**
 * No comment provided
 *
 * Hash: 0xD826690B5CF3BEFF | Since: 1207
 *
 * @deprecated Use vehicle._0xD826690B5CF3BEFF() instead
 */
export declare function _0xD826690B5CF3BEFF(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xD9BF3ED8EFB67EA3 | Since: 1207
 *
 * @deprecated Use vehicle._0xD9BF3ED8EFB67EA3() instead
 */
export declare function _0xD9BF3ED8EFB67EA3(): any;
/**
 * No comment provided
 *
 * Hash: 0xDC0556D0F484ECAA | Since: 1207
 *
 * @deprecated Use vehicle._0xDC0556D0F484ECAA() instead
 */
export declare function _0xDC0556D0F484ECAA(): void;
/**
 * No comment provided
 *
 * Hash: 0xDC69F6913CCA0B99 | Since: 1207
 *
 * @deprecated Use vehicle._0xDC69F6913CCA0B99() instead
 */
export declare function _0xDC69F6913CCA0B99(): void;
/**
 * No comment provided
 *
 * Hash: 0xDD100CE1EBBF37E3 | Since: 1207
 *
 * @deprecated Use vehicle._0xDD100CE1EBBF37E3() instead
 */
export declare function _0xDD100CE1EBBF37E3(): void;
/**
 * No comment provided
 *
 * Hash: 0xDE8C5B9F65017FA1 | Since: 1207
 *
 * @deprecated Use vehicle._0xDE8C5B9F65017FA1() instead
 */
export declare function _0xDE8C5B9F65017FA1(train: number | Vehicle): any;
/**
 * No comment provided
 *
 * Hash: 0xE12F5ED49F44D40D | Since: 1207
 *
 * @deprecated Use vehicle._0xE12F5ED49F44D40D() instead
 */
export declare function _0xE12F5ED49F44D40D(): void;
/**
 * Only used in R* SP Script rcm_abigail31: p1 = 5
 * _GET_VEHICLE_T* - _GET_VO*
 *
 * Hash: 0xE1C0F8781BF130C2 | Since: 1207
 *
 * @deprecated Use vehicle._0xE1C0F8781BF130C2() instead
 */
export declare function _0xE1C0F8781BF130C2(wagon: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE682002DB1F30669 | Since: 1207
 *
 * @deprecated Use vehicle._0xE682002DB1F30669() instead
 */
export declare function _0xE682002DB1F30669(): void;
/**
 * No comment provided
 *
 * Hash: 0xE6BD7DD3FD474415 | Since: 1207
 *
 * @deprecated Use vehicle._0xE6BD7DD3FD474415() instead
 */
export declare function _0xE6BD7DD3FD474415(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE777DDF3E78397E8 | Since: 1207
 *
 * @deprecated Use vehicle._0xE777DDF3E78397E8() instead
 */
export declare function _0xE777DDF3E78397E8(): any;
/**
 * No comment provided
 *
 * Hash: 0xE78993FF9022C064 | Since: 1207
 *
 * @deprecated Use vehicle._0xE78993FF9022C064() instead
 */
export declare function _0xE78993FF9022C064(): void;
/**
 * _SET_TRAIN_*
 *
 * Hash: 0xEF28A614B4B264B8 | Since: 1207
 *
 * @deprecated Use vehicle._0xEF28A614B4B264B8() instead
 */
export declare function _0xEF28A614B4B264B8(train: number | Vehicle): void;
/**
 * _IS_* (related to CREATE_MISSION_TRAIN)
 *
 * Hash: 0xF05DFAF1ADFEF2CD | Since: 1207
 *
 * @deprecated Use vehicle._0xF05DFAF1ADFEF2CD() instead
 */
export declare function _0xF05DFAF1ADFEF2CD(trainConfig: number | string, pos: Vector3, direction: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF57DB8E83DCD8349 | Since: 1207
 *
 * @deprecated Use vehicle._0xF57DB8E83DCD8349() instead
 */
export declare function _0xF57DB8E83DCD8349(): any;
/**
 * No comment provided
 *
 * Hash: 0xF5EA41C1408695FB | Since: 1207
 *
 * @deprecated Use vehicle._0xF5EA41C1408695FB() instead
 */
export declare function _0xF5EA41C1408695FB(): any;
/**
 * No comment provided
 *
 * Hash: 0xF6E3D38869D0F7AD | Since: 1207
 *
 * @deprecated Use vehicle._0xF6E3D38869D0F7AD() instead
 */
export declare function _0xF6E3D38869D0F7AD(): void;
/**
 * No comment provided
 *
 * Hash: 0xF8F7DA13CFBD4532 | Since: 1207
 *
 * @deprecated Use vehicle._0xF8F7DA13CFBD4532() instead
 */
export declare function _0xF8F7DA13CFBD4532(trackIndex: number): void;
/**
 * _SET_DRAFT_VEHICLE_*
 *
 * Hash: 0xFC4F15A7DDDC47B1 | Since: 1207
 *
 * @deprecated Use vehicle._0xFC4F15A7DDDC47B1() instead
 */
export declare function _0xFC4F15A7DDDC47B1(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xFF2B1F59FB892F14 | Since: 1207
 *
 * @deprecated Use vehicle._0xFF2B1F59FB892F14() instead
 */
export declare function _0xFF2B1F59FB892F14(): void;
/**
 * No comment provided
 *
 * Hash: 0xFFFE15B433300B8C | Since: 1207
 *
 * @deprecated Use vehicle._0xFFFE15B433300B8C() instead
 */
export declare function _0xFFFE15B433300B8C(): void;
/**
 * No comment provided
 *
 * Hash: 0x41503629D1139ABC | Since: 1207
 *
 * @deprecated Use vehicle.addTrainTemporaryStop() instead
 */
export declare function addTrainTemporaryStop(train: number | Vehicle, trackIndex: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x316CDB5B6E8F4110 | Since: 1207
 *
 * @deprecated Use vehicle.attachDraftVehicleHarnessPed() instead
 */
export declare function attachDraftVehicleHarnessPed(mount: number | Ped, draft: number | Vehicle, harnessId: number): boolean;
/**
 * Params: destroyingForce is usually 100f in R* Scripts
 * Similar to 0xD4F5EFB55769D272, _A*
 *
 * Hash: 0xC372B6A88F6E4AD8 | Since: 1207
 *
 * @deprecated Use vehicle.breakOffDraftWheel() instead
 */
export declare function breakOffDraftWheel(vehicle: number | Vehicle, wheelIndex: number, destroyingForce: number): void;
/**
 * wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
 *
 * Hash: 0xD4F5EFB55769D272 | Since: 1207
 *
 * @deprecated Use vehicle.breakOffVehicleWheel() instead
 */
export declare function breakOffVehicleWheel(vehicle: number | Vehicle, wheelIndex: number): number;
/**
 * Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
 *
 * Hash: 0x214651FB1DFEBA89 | Since: 1207
 *
 * @deprecated Use vehicle.createDraftVehicle() instead
 */
export declare function createDraftVehicle(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean, bDontAutoCreateDraftAnimals: boolean, draftAnimalPopGroup: number | string): number;
/**
 * configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
 * For more information, see trainconfigs.ymt
 * To make the train AI controlled, set conductor to true and set the speed once.
 *
 * Hash: 0xC239DBD9A57D2A71 | Since: 1207
 *
 * @deprecated Use vehicle.createMissionTrain() instead
 */
export declare function createMissionTrain(configHash: number | string, pos: Vector3, direction: boolean, passengers: boolean, conductor: boolean): number;
/**
 * Spawn without lanterns set
 *
 * Hash: 0xE1A83D4A3B5D7938 | Since: 1207
 *
 * @deprecated Use vehicle.deleteVehicleLanterns() instead
 */
export declare function deleteVehicleLanterns(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4402960666000E62 | Since: 1207
 *
 * @deprecated Use vehicle.detachDraftVehicleHarnessFromIndex() instead
 */
export declare function detachDraftVehicleHarnessFromIndex(draft: number | Vehicle, harnessId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB36D3EC70963BE60 | Since: 1207
 *
 * @deprecated Use vehicle.detachDraftVehicleHarnessPed() instead
 */
export declare function detachDraftVehicleHarnessPed(draft: number | Vehicle, ped: number | Ped): boolean;
/**
 * Only used in train_robbery4 R* Script
 * _C* - _DEL*
 *
 * Hash: 0x54CBDD6E1B4CB4DF | Since: 1207
 *
 * @deprecated Use vehicle.detachWagonEntityFromTrain() instead
 */
export declare function detachWagonEntityFromTrain(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xC29996A337BDD099 | Since: 1207
 *
 * @deprecated Use vehicle.doesTrainExistOnTrack() instead
 */
export declare function doesTrainExistOnTrack(trackIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x35DC1877312FBA0F | Since: 1207
 *
 * @deprecated Use vehicle.fadeAndDestroyVehicle() instead
 */
export declare function fadeAndDestroyVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE015CF1F2C0959D8 | Since: 1207
 *
 * @deprecated Use vehicle.getBreakableVehicleLocksState() instead
 */
export declare function getBreakableVehicleLocksState(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x58F2244C1286D09A | Since: 1207
 *
 * @deprecated Use vehicle.getBreakableVehicleLockObject() instead
 */
export declare function getBreakableVehicleLockObject(vehicle: number | Vehicle, index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x35D302397E524939 | Since: 1207
 *
 * @deprecated Use vehicle.getCheckpointTrainSpawnLocation() instead
 */
export declare function getCheckpointTrainSpawnLocation(trackIndex: number, pos: Vector3, distance: number, direction: boolean): Vector3;
/**
 * Returns p0 for 0xBA958F68031DDBFC (trackIndex)
 *
 * Hash: 0xAF787E081AC4A8EE | Since: 1207
 *
 * @deprecated Use vehicle.getCurrentTrackForTrain() instead
 */
export declare function getCurrentTrackForTrain(train: number | Vehicle): number;
/**
 * `Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.`
 *
 * Hash: 0xC6D7DDC843176701 | Since: 1207
 *
 * @deprecated Use vehicle.getDraftVehicleDesiredSpeed() instead
 */
export declare function getDraftVehicleDesiredSpeed(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x6DE03BCC15E81710 | Since: 1207
 *
 * @deprecated Use vehicle.getNearestTrainTrackPosition() instead
 */
export declare function getNearestTrainTrackPosition(pos: Vector3): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x2FA86833E3617E2D | Since: 1207
 *
 * @deprecated Use vehicle.getNumBreakableVehicleLockObjects() instead
 */
export declare function getNumBreakableVehicleLockObjects(vehicle: number | Vehicle): number;
/**
 * Returns amount for CAN_REGISTER_MISSION_VEHICLES
 *
 * Hash: 0x635423D55CA84FC8 | Since: 1207
 *
 * @deprecated Use vehicle.getNumCarsFromTrainConfig() instead
 */
export declare function getNumCarsFromTrainConfig(trainConfig: number | string): number;
/**
 * Returns number of horses a wagon can have
 *
 * Hash: 0x5B1A26BB18E7D451 | Since: 1207
 *
 * @deprecated Use vehicle.getNumDraftVehicleHarnessPed() instead
 */
export declare function getNumDraftVehicleHarnessPed(modelHash: number | string): number;
/**
 * enum eDraftHarness
 * {
 * DRAFT_HARNESS_LR,
 * DRAFT_HARNESS_RR,
 * DRAFT_HARNESS_LM,
 * DRAFT_HARNESS_RM,
 * DRAFT_HARNESS_LF,
 * DRAFT_HARNESS_RF,
 * DRAFT_HARNESS_COUNT
 * };
 *
 * Hash: 0xA8BA0BAE0173457B | Since: 1207
 *
 * @deprecated Use vehicle.getPedInDraftHarness() instead
 */
export declare function getPedInDraftHarness(vehicle: number | Vehicle, harnessId: number): number;
/**
 * Returns handles of boat paddles entities.
 *
 * Hash: 0xA6E210FB4283B767 | Since: 1207
 *
 * @deprecated Use vehicle.getRowingOars() instead
 */
export declare function getRowingOars(vehicle: number | Vehicle, left: number | Entity, right: number | Entity): void;
/**
 * Returns Coords of vStation
 * p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
 * _GET_P* - _GET_T*
 *
 * Hash: 0xBA958F68031DDBFC | Since: 1207
 *
 * @deprecated Use vehicle.getStationCoordsFromTrainStationData() instead
 */
export declare function getStationCoordsFromTrainStationData(trackIndex: number, stationIndex: number): Vector3;
/**
 * Returns trackIndex
 * _E* - _F*
 *
 * Hash: 0x85D39F5E3B6D7EB0 | Since: 1207
 *
 * @deprecated Use vehicle.getTrackIndexFromCoords() instead
 */
export declare function getTrackIndexFromCoords(pos: Vector3): number;
/**
 * Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
 *
 * Hash: 0x671A07C9A1CD50A5 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainCar() instead
 */
export declare function getTrainCar(train: number | Vehicle): number;
/**
 * Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
 * _C* (O, P, Q, R)
 *
 * Hash: 0x60B7D1DCC312697D | Since: 1207
 *
 * @deprecated Use vehicle.getTrainCarriageTrailerNumber() instead
 */
export declare function getTrainCarriageTrailerNumber(train: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x3C9628A811CBD724 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainDirection() instead
 */
export declare function getTrainDirection(train: number | Vehicle): boolean;
/**
 * https://i.imgur.com/1rHibjW.jpg
 *
 * Hash: 0x67995318F5FAA496 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainDirectionFromIndex() instead
 */
export declare function getTrainDirectionFromIndex(trackIndex: number): boolean;
/**
 * Returns modelHash
 *
 * Hash: 0x8DF5F6A19F99F0D5 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainModelFromTrainConfigByCarIndex() instead
 */
export declare function getTrainModelFromTrainConfigByCarIndex(trainConfig: number | string, trainCarIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1E8A921112891651 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainPositionOnTrack() instead
 */
export declare function getTrainPositionOnTrack(trackIndex: number): Vector3;
/**
 * Returns trackIndex
 *
 * Hash: 0x45853F4E17D847D5 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainTrackFromTrainVehicle() instead
 */
export declare function getTrainTrackFromTrainVehicle(train: number | Vehicle): number;
/**
 * Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
 *
 * Hash: 0x86AFC343CF7F0B34 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainTrackJunctionAtCoords() instead
 */
export declare function getTrainTrackJunctionAtCoords(trainTrack: number | string, pos: Vector3, junctionIndex: number): boolean;
/**
 * Returns train
 *
 * Hash: 0x6E585A616ABB8401 | Since: 1207
 *
 * @deprecated Use vehicle.getTrainVehicleFromTrackIndex() instead
 */
export declare function getTrainVehicleFromTrackIndex(trackIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xDD1E1393D966D39A | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleDoorsLockedForTeam() instead
 */
export declare function getVehicleDoorsLockedForTeam(vehicle: number | Vehicle, team: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD798DF5DB67B1659 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleIsPropSetApplied() instead
 */
export declare function getVehicleIsPropSetApplied(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB765B8FD49A796C | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleLivery() instead
 */
export declare function getVehicleLivery(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xB729679356A889AE | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleOwner() instead
 */
export declare function getVehicleOwner(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA44D65E6C624526F | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleTint() instead
 */
export declare function getVehicleTint(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xFF5791B7639C2A46 | Since: 1207
 *
 * @deprecated Use vehicle.getVehicleTurretSeat() instead
 */
export declare function getVehicleTurretSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBD3C4A2ED509205E | Since: 1207
 *
 * @deprecated Use vehicle.hasTrainLoaded() instead
 */
export declare function hasTrainLoaded(train: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x201B8ED4FF7FE9F5 | Since: 1207
 *
 * @deprecated Use vehicle.hideHorseReins() instead
 */
export declare function hideHorseReins(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x30D86B2B7622D0EB | Since: 1207
 *
 * @deprecated Use vehicle.isBoatGrounded() instead
 */
export declare function isBoatGrounded(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB213D2A560B2E48B | Since: 1207
 *
 * @deprecated Use vehicle.isPedExclusiveDriverOfVehicle() instead
 */
export declare function isPedExclusiveDriverOfVehicle(ped: number | Ped, vehicle: number | Vehicle, outIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB9D5BDDA88E1BB66 | Since: 1207
 *
 * @deprecated Use vehicle.isThisModelADraftVehicle() instead
 */
export declare function isThisModelADraftVehicle(model: number | string): boolean;
/**
 * Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
 *
 * Hash: 0x404527BC03DA0E6C | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleBroughtToHalt() instead
 */
export declare function isVehicleBroughtToHalt(vehicle: number | Vehicle): boolean;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xE979BB5602AD3402 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleDoorBroken() instead
 */
export declare function isVehicleDoorBroken(vehicle: number | Vehicle, doorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5136B284B67B35C7 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleFadingOut() instead
 */
export declare function isVehicleFadingOut(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E3BF7ED4169EC43 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleOnFire() instead
 */
export declare function isVehicleOnFire(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCB2CA620C48BC875 | Since: 1207
 *
 * @deprecated Use vehicle.isVehicleWheelDestroyed() instead
 */
export declare function isVehicleWheelDestroyed(vehicle: number | Vehicle, wheel: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x138398153824E332 | Since: 1207
 *
 * @deprecated Use vehicle.setAllJunctionsCleared() instead
 */
export declare function setAllJunctionsCleared(): void;
/**
 * No comment provided
 *
 * Hash: 0x424FFCB9F0D2D4B5 | Since: 1207
 *
 * @deprecated Use vehicle.setAllVehicleGeneratorsDisabledForVolume() instead
 */
export declare function setAllVehicleGeneratorsDisabledForVolume(volume: number, toggle: boolean): void;
/**
 * Params: 1.0f will make balloon hover
 *
 * Hash: 0x7C9E45A4CED2E8DA | Since: 1207
 *
 * @deprecated Use vehicle.setBalloonHoverState() instead
 */
export declare function setBalloonHoverState(balloon: number | Vehicle): void;
/**
 * Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
 * Screenshot: https://imgur.com/a/nsomtiv
 *
 * Hash: 0x31F343383F19C987 | Since: 1207
 *
 * @deprecated Use vehicle.setBatchTarpHeight() instead
 */
export declare function setBatchTarpHeight(vehicle: number | Vehicle, height: number, immediately: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8C6D9A399126C194 | Since: 1207
 *
 * @deprecated Use vehicle.setDraftAnimalRandomSeed() instead
 */
export declare function setDraftAnimalRandomSeed(vehicle: number | Vehicle, seed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x87344305778E5415 | Since: 1207
 *
 * @deprecated Use vehicle.setDraftVehicleAllowDraftAnimalAutoCreation() instead
 */
export declare function setDraftVehicleAllowDraftAnimalAutoCreation(vehicle: number | Vehicle, allow: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6090A031C69F384E | Since: 1207
 *
 * @deprecated Use vehicle.setDraftVehicleAnimalsCanDetach() instead
 */
export declare function setDraftVehicleAnimalsCanDetach(draft: number | Vehicle, canDetach: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0C3F0F7F92CA847C | Since: 1207
 *
 * @deprecated Use vehicle.setDraftVehicleDesiredSpeed() instead
 */
export declare function setDraftVehicleDesiredSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x226C6A4E3346D288 | Since: 1207
 *
 * @deprecated Use vehicle.setDraftVehicleYokeCanBreak() instead
 */
export declare function setDraftVehicleYokeCanBreak(draft: number | Vehicle, canBreak: boolean): void;
/**
 * Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
 *
 * Hash: 0xF489F94BFEE12BB0 | Since: 1207
 *
 * @deprecated Use vehicle.setForceCoachRobberyLoot() instead
 */
export declare function setForceCoachRobberyLoot(vehicle: number | Vehicle, coachrobberyLoot: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x1098CDA477890165 | Since: 1207
 *
 * @deprecated Use vehicle.setForceHighLodVehicle() instead
 */
export declare function setForceHighLodVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF5FFB08976911B50 | Since: 1207
 *
 * @deprecated Use vehicle.setHorseTrafficGroupingDistribution() instead
 */
export declare function setHorseTrafficGroupingDistribution(): void;
/**
 * Notice: BOOL p4 was wrongly named takePassengers (?)
 * Can be used to rotate the train by setting the BOOL direction
 *
 * Hash: 0xC9EA26893C9E4024 | Since: 1207
 *
 * @deprecated Use vehicle.setMissionTrainWarpToCoords() instead
 */
export declare function setMissionTrainWarpToCoords(train: number | Vehicle, pos: Vector3, direction: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3660BCAB3A6BB734 | Since: 1207
 *
 * @deprecated Use vehicle.setTrainHalt() instead
 */
export declare function setTrainHalt(train: number | Vehicle): void;
/**
 * Restarts the train
 *
 * Hash: 0x787E43477746876F | Since: 1207
 *
 * @deprecated Use vehicle.setTrainLeaveStation() instead
 */
export declare function setTrainLeaveStation(train: number | Vehicle): void;
/**
 * Maximum possible speed is 30.0 (108 km/h)
 *
 * Hash: 0x9F29999DFDF2AEB8 | Since: 1207
 *
 * @deprecated Use vehicle.setTrainMaxSpeed() instead
 */
export declare function setTrainMaxSpeed(train: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4182C037AA1F0091 | Since: 1207
 *
 * @deprecated Use vehicle.setTrainStopsForStations() instead
 */
export declare function setTrainStopsForStations(train: number | Vehicle, toggle: boolean): void;
/**
 * trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
 *
 * Hash: 0xE6C5E2125EB210C1 | Since: 1207
 *
 * @deprecated Use vehicle.setTrainTrackJunctionSwitch() instead
 */
export declare function setTrainTrackJunctionSwitch(trainTrack: number | string, junctionIndex: number, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8E5DA070BAD3279E | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDeterioration() instead
 */
export declare function setVehicleDeterioration(vehicle: number | Vehicle, amount: number): void;
/**
 * dirtLevel: 0.0 - 1.0
 *
 * Hash: 0xBAE0EEDF93F05EAA | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleDirtLevel2() instead
 */
export declare function setVehicleDirtLevel2(vehicle: number | Vehicle, dirtLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCE1531927AD6C9F8 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleIsInHurry() instead
 */
export declare function setVehicleIsInHurry(vehicle: number | Vehicle, enabled: boolean): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
 *
 * Hash: 0xF89D82A0582E46ED | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleLivery() instead
 */
export declare function setVehicleLivery(vehicle: number | Vehicle, liveryIndex: number): void;
/**
 * Ranges from -1 to 2? (internal type is int8)
 * https://imgur.com/a/bPzHcft
 *
 * Hash: 0x3FA7D7D1E0EA809E | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleLodLevel() instead
 */
export declare function setVehicleLodLevel(vehicle: number | Vehicle, lodLevel: number): void;
/**
 * mudLevel: 0.0 - 1.0
 *
 * Hash: 0x4D15E49764CB328A | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleMudLevel() instead
 */
export declare function setVehicleMudLevel(vehicle: number | Vehicle, mudLevel: number): void;
/**
 * snowLevel: 0.0 - 1.0
 *
 * Hash: 0x6F73EFAB11651D7F | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleSnowLevel() instead
 */
export declare function setVehicleSnowLevel(vehicle: number | Vehicle, snowLevel: number): void;
/**
 * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
 *
 * Hash: 0x8268B098F6FCA4E2 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleTint() instead
 */
export declare function setVehicleTint(vehicle: number | Vehicle, tintId: number): void;
/**
 * wetLevel: 0.0 - 1.0
 *
 * Hash: 0x5AABB09F6FBD1F87 | Since: 1207
 *
 * @deprecated Use vehicle.setVehicleWetLevel() instead
 */
export declare function setVehicleWetLevel(vehicle: number | Vehicle, wetLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x41CDA90EE3450921 | Since: 1207
 *
 * @deprecated Use vehicle.showHorseReins() instead
 */
export declare function showHorseReins(vehicle: number | Vehicle): void;
/**
 * whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
 * p2 = true seems to mute the sound
 *
 * Hash: 0xCFE122EC635CC2B2 | Since: 1207
 *
 * @deprecated Use vehicle.triggerTrainWhistle() instead
 */
export declare function triggerTrainWhistle(train: number | Vehicle, whistleSequence: string): void;
/**
 * No comment provided
 *
 * Hash: 0x08797A8C03868CB8 | Since: 1207
 *
 * @deprecated Use voice._0x08797A8C03868CB8() instead
 */
export declare function _0x08797A8C03868CB8(threshold: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0DED260A1958A82E | Since: 1207
 *
 * @deprecated Use voice._0x0DED260A1958A82E() instead
 */
export declare function _0x0DED260A1958A82E(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1C38C3577901AF1F | Since: 1207
 *
 * @deprecated Use voice._0x1C38C3577901AF1F() instead
 */
export declare function _0x1C38C3577901AF1F(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FBF7F5BA7E4BE3A | Since: 1207
 *
 * @deprecated Use voice._0x1FBF7F5BA7E4BE3A() instead
 */
export declare function _0x1FBF7F5BA7E4BE3A(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F82CAB262C8AE26 | Since: 1207
 *
 * @deprecated Use voice._0x2F82CAB262C8AE26() instead
 */
export declare function _0x2F82CAB262C8AE26(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x356135B9B10A2A82 | Since: 1207
 *
 * @deprecated Use voice._0x356135B9B10A2A82() instead
 */
export declare function _0x356135B9B10A2A82(gamerHandle: any): boolean;
/**
 * Params: p1 = 2; p2 = 3 in R* Script net_main_offline
 *
 * Hash: 0x4791899615D70FA2 | Since: 1207
 *
 * @deprecated Use voice._0x4791899615D70FA2() instead
 */
export declare function _0x4791899615D70FA2(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x49623BCFC3A3D829 | Since: 1207
 *
 * @deprecated Use voice._0x49623BCFC3A3D829() instead
 */
export declare function _0x49623BCFC3A3D829(player: number | string | Player, muted: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x58125B691F6827D5 | Since: 1207
 *
 * @deprecated Use voice._0x58125B691F6827D5() instead
 */
export declare function _0x58125B691F6827D5(proximity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5CA7FB7D6DE49DCC | Since: 1207
 *
 * @deprecated Use voice._0x5CA7FB7D6DE49DCC() instead
 */
export declare function _0x5CA7FB7D6DE49DCC(player: number | string | Player): number;
/**
 * Returns p2 value of 0x4791899615D70FA2
 *
 * Hash: 0x767931C727DF2ED7 | Since: 1207
 *
 * @deprecated Use voice._0x767931C727DF2ED7() instead
 */
export declare function _0x767931C727DF2ED7(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x79F478FF5F9F4F05 | Since: 1207
 *
 * @deprecated Use voice._0x79F478FF5F9F4F05() instead
 */
export declare function _0x79F478FF5F9F4F05(enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8E462DB1EAA9C47C | Since: 1207
 *
 * @deprecated Use voice._0x8E462DB1EAA9C47C() instead
 */
export declare function _0x8E462DB1EAA9C47C(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x919AF2D93E9AA89D | Since: 1207
 *
 * @deprecated Use voice._0x919AF2D93E9AA89D() instead
 */
export declare function _0x919AF2D93E9AA89D(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA35FD9ABAB490A3 | Since: 1207
 *
 * @deprecated Use voice._0xAA35FD9ABAB490A3() instead
 */
export declare function _0xAA35FD9ABAB490A3(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB3E8841F6BDAF83E | Since: 1207
 *
 * @deprecated Use voice._0xB3E8841F6BDAF83E() instead
 */
export declare function _0xB3E8841F6BDAF83E(): void;
/**
 * No comment provided
 *
 * Hash: 0xB6E79850B759A30E | Since: 1207
 *
 * @deprecated Use voice._0xB6E79850B759A30E() instead
 */
export declare function _0xB6E79850B759A30E(teamId: number, allow: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB779F4FA19269AEC | Since: 1207
 *
 * @deprecated Use voice._0xB779F4FA19269AEC() instead
 */
export declare function _0xB779F4FA19269AEC(flag: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCCF71FCFA0070B1A | Since: 1207
 *
 * @deprecated Use voice._0xCCF71FCFA0070B1A() instead
 */
export declare function _0xCCF71FCFA0070B1A(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB622ECD3DCBE078 | Since: 1207
 *
 * @deprecated Use voice._0xDB622ECD3DCBE078() instead
 */
export declare function _0xDB622ECD3DCBE078(player: number | string | Player): any;
/**
 * No comment provided
 *
 * Hash: 0xDC9B361CB7776673 | Since: 1207
 *
 * @deprecated Use voice._0xDC9B361CB7776673() instead
 */
export declare function _0xDC9B361CB7776673(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xEC8703E4536A9952 | Since: 1207
 *
 * @deprecated Use voice._0xEC8703E4536A9952() instead
 */
export declare function _0xEC8703E4536A9952(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF6F2A35FAAF2ED7 | Since: 1207
 *
 * @deprecated Use voice._0xEF6F2A35FAAF2ED7() instead
 */
export declare function _0xEF6F2A35FAAF2ED7(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF8938CF3984092A5 | Since: 1207
 *
 * @deprecated Use voice._0xF8938CF3984092A5() instead
 */
export declare function _0xF8938CF3984092A5(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x59F6F5C1D129F106 | Since: 1207
 *
 * @deprecated Use volume.createVolumeAggregate() instead
 */
export declare function createVolumeAggregate(): number;
/**
 * No comment provided
 *
 * Hash: 0xDF85637F22706891 | Since: 1207
 *
 * @deprecated Use volume.createVolumeBox() instead
 */
export declare function createVolumeBox(pos: Vector3, rot: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x0522D4774B82E3E6 | Since: 1207
 *
 * @deprecated Use volume.createVolumeCylinder() instead
 */
export declare function createVolumeCylinder(pos: Vector3, rot: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xB3FB80A32BAE3065 | Since: 1207
 *
 * @deprecated Use volume.createVolumeSphere() instead
 */
export declare function createVolumeSphere(pos: Vector3, rot: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x43F867EF5C463A53 | Since: 1207
 *
 * @deprecated Use volume.deleteVolume() instead
 */
export declare function deleteVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x397769175A7DBB30 | Since: 1207
 *
 * @deprecated Use volume.doesVolumeCollideWithAnyVolumeLock() instead
 */
export declare function doesVolumeCollideWithAnyVolumeLock(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x92A78D0BEDB332A3 | Since: 1207
 *
 * @deprecated Use volume.doesVolumeExist() instead
 */
export declare function doesVolumeExist(volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF70F00013A62F866 | Since: 1207
 *
 * @deprecated Use volume.getVolumeCoords() instead
 */
export declare function getVolumeCoords(volume: number): Vector3;
/**
 * enum eVolumeLockRequestStatus
 * {
 * VOLUME_LOCK_REQUEST_STATUS_INVALID,
 * VOLUME_LOCK_REQUEST_STATUS_READY,
 * VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
 * VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
 * VOLUME_LOCK_REQUEST_STATUS_FAILED
 * };
 *
 * Hash: 0xB33A604345F58202 | Since: 1207
 *
 * @deprecated Use volume.getVolumeLockRequestStatus() instead
 */
export declare function getVolumeLockRequestStatus(volLockRequestId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x18675BC914891122 | Since: 1207
 *
 * @deprecated Use volume.getVolumeRotation() instead
 */
export declare function getVolumeRotation(volume: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x3E2A25B2416DD67E | Since: 1207
 *
 * @deprecated Use volume.getVolumeScale() instead
 */
export declare function getVolumeScale(volume: number): Vector3;
/**
 * Old name: _IS_POSITION_INSIDE_VOLUME
 *
 * Hash: 0xF256A75210C5C0EB | Since: 1207
 *
 * @deprecated Use volume.isPointInVolume() instead
 */
export declare function isPointInVolume(volume: number, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA4A4359320345B34 | Since: 1207
 *
 * @deprecated Use volume.isVolumeLockRequestValid() instead
 */
export declare function isVolumeLockRequestValid(volLockRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF14BCEF290F869E1 | Since: 1207
 *
 * @deprecated Use volume.requestVolumeLock() instead
 */
export declare function requestVolumeLock(pos: Vector3, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0x183C0B6CFEFFCAE4 | Since: 1207
 *
 * @deprecated Use volume.requestVolumeLockWithArgs() instead
 */
export declare function requestVolumeLockWithArgs(args: any): number;
/**
 * No comment provided
 *
 * Hash: 0x541B8576615C33DE | Since: 1207
 *
 * @deprecated Use volume.setVolumeCoords() instead
 */
export declare function setVolumeCoords(volume: number, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE2BE6FFA4A13CBB0 | Since: 1207
 *
 * @deprecated Use volume.setVolumeOwnerPersistentCharacter() instead
 */
export declare function setVolumeOwnerPersistentCharacter(volume: number, persChar: any): void;
/**
 * No comment provided
 *
 * Hash: 0xA07CF1B21B56F041 | Since: 1207
 *
 * @deprecated Use volume.setVolumeRotation() instead
 */
export declare function setVolumeRotation(volume: number, rot: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA46E98BDC407E23D | Since: 1207
 *
 * @deprecated Use volume.setVolumeScale() instead
 */
export declare function setVolumeScale(volume: number, scale: Vector3): boolean;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x128FC3A893BF853A | Since: 1207
 *
 * @deprecated Use volume._0x128FC3A893BF853A() instead
 */
export declare function _0x128FC3A893BF853A(): void;
/**
 * Indexes items (including entyties and peds) in a set volume
 * Counts up as its the return value of how many items it writes to given itemSet
 *
 * Hash: 0x2B32B11520626229 | Since: 1207
 *
 * @deprecated Use volume.getVolumeAmountOfIndexedItems() instead
 */
export declare function getVolumeAmountOfIndexedItems(pos: Vector3, radius: number, itemSet: any): number;
/**
 * No comment provided
 *
 * Hash: 0x351D71B8B72B858B | Since: 1207
 *
 * @deprecated Use volume._0x351D71B8B72B858B() instead
 */
export declare function _0x351D71B8B72B858B(): any;
/**
 * No comment provided
 *
 * Hash: 0x3EFABB21E14A6BD1 | Since: 1207
 *
 * @deprecated Use volume._0x3EFABB21E14A6BD1() instead
 */
export declare function _0x3EFABB21E14A6BD1(): void;
/**
 * No comment provided
 *
 * Hash: 0x40F769D31A00D5A0 | Since: 1207
 *
 * @deprecated Use volume._0x40F769D31A00D5A0() instead
 */
export declare function _0x40F769D31A00D5A0(): any;
/**
 * No comment provided
 *
 * Hash: 0x4A8FEFC43FD8AC9B | Since: 1207
 *
 * @deprecated Use volume._0x4A8FEFC43FD8AC9B() instead
 */
export declare function _0x4A8FEFC43FD8AC9B(): void;
/**
 * No comment provided
 *
 * Hash: 0x51E52C9687FCDEEC | Since: 1207
 *
 * @deprecated Use volume._0x51E52C9687FCDEEC() instead
 */
export declare function _0x51E52C9687FCDEEC(): any;
/**
 * No comment provided
 *
 * Hash: 0x52572B331E693AED | Since: 1207
 *
 * @deprecated Use volume._0x52572B331E693AED() instead
 */
export declare function _0x52572B331E693AED(): void;
/**
 * No comment provided
 *
 * Hash: 0x53D05D60E5F5B40C | Since: 1207
 *
 * @deprecated Use volume._0x53D05D60E5F5B40C() instead
 */
export declare function _0x53D05D60E5F5B40C(): void;
/**
 * No comment provided
 *
 * Hash: 0x695DAC2DB928F308 | Since: 1207
 *
 * @deprecated Use volume._0x695DAC2DB928F308() instead
 */
export declare function _0x695DAC2DB928F308(): void;
/**
 * No comment provided
 *
 * Hash: 0x6D5F9E69BA1BE783 | Since: 1207
 *
 * @deprecated Use volume._0x6D5F9E69BA1BE783() instead
 */
export declare function _0x6D5F9E69BA1BE783(): void;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0x748C5F51A18CB8F0 | Since: 1207
 *
 * @deprecated Use volume._0x748C5F51A18CB8F0() instead
 */
export declare function _0x748C5F51A18CB8F0(): void;
/**
 * No comment provided
 *
 * Hash: 0x7FD78DFD0C5D7B9B | Since: 1207
 *
 * @deprecated Use volume._0x7FD78DFD0C5D7B9B() instead
 */
export declare function _0x7FD78DFD0C5D7B9B(): any;
/**
 * No comment provided
 *
 * Hash: 0x870E9981ED27C815 | Since: 1207
 *
 * @deprecated Use volume._0x870E9981ED27C815() instead
 */
export declare function _0x870E9981ED27C815(): any;
/**
 * No comment provided
 *
 * Hash: 0x998202B206872672 | Since: 1207
 *
 * @deprecated Use volume._0x998202B206872672() instead
 */
export declare function _0x998202B206872672(): void;
/**
 * No comment provided
 *
 * Hash: 0xAA9EE2AAFC717623 | Since: 1207
 *
 * @deprecated Use volume._0xAA9EE2AAFC717623() instead
 */
export declare function _0xAA9EE2AAFC717623(): any;
/**
 * No comment provided
 *
 * Hash: 0xAC355980681A7F89 | Since: 1207
 *
 * @deprecated Use volume._0xAC355980681A7F89() instead
 */
export declare function _0xAC355980681A7F89(): void;
/**
 * No comment provided
 *
 * Hash: 0xB440F4E35393FC39 | Since: 1207
 *
 * @deprecated Use volume._0xB440F4E35393FC39() instead
 */
export declare function _0xB440F4E35393FC39(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB469CFD9E065EB99 | Since: 1207
 *
 * @deprecated Use volume._0xB469CFD9E065EB99() instead
 */
export declare function _0xB469CFD9E065EB99(): void;
/**
 * No comment provided
 *
 * Hash: 0xC4019CF9AE8E931A | Since: 1207
 *
 * @deprecated Use volume._0xC4019CF9AE8E931A() instead
 */
export declare function _0xC4019CF9AE8E931A(volLockRequestId: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xC61E2FD926DBB406 | Since: 1311
 *
 * @deprecated Use volume._0xC61E2FD926DBB406() instead
 */
export declare function _0xC61E2FD926DBB406(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA5C90D40665D5CE | Since: 1207
 *
 * @deprecated Use volume._0xCA5C90D40665D5CE() instead
 */
export declare function _0xCA5C90D40665D5CE(): any;
/**
 * No comment provided
 *
 * Hash: 0xD460135C98940274 | Since: 1207
 *
 * @deprecated Use volume._0xD460135C98940274() instead
 */
export declare function _0xD460135C98940274(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD4FA73FE628FEC63 | Since: 1207
 *
 * @deprecated Use volume._0xD4FA73FE628FEC63() instead
 */
export declare function _0xD4FA73FE628FEC63(): void;
/**
 * No comment provided
 *
 * Hash: 0xD52DF30355EA7C8E | Since: 1207
 *
 * @deprecated Use volume._0xD52DF30355EA7C8E() instead
 */
export declare function _0xD52DF30355EA7C8E(): void;
/**
 * No comment provided
 *
 * Hash: 0xD882C5B3991575B7 | Since: 1207
 *
 * @deprecated Use volume._0xD882C5B3991575B7() instead
 */
export declare function _0xD882C5B3991575B7(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xEBA87B9273835CF3 | Since: 1207
 *
 * @deprecated Use volume._0xEBA87B9273835CF3() instead
 */
export declare function _0xEBA87B9273835CF3(): void;
/**
 * No comment provided
 *
 * Hash: 0xEE1D6FF54CAF7714 | Since: 1207
 *
 * @deprecated Use volume._0xEE1D6FF54CAF7714() instead
 */
export declare function _0xEE1D6FF54CAF7714(): any;
/**
 * No comment provided
 *
 * Hash: 0xF3A2FBA5985C8CD5 | Since: 1207
 *
 * @deprecated Use volume._0xF3A2FBA5985C8CD5() instead
 */
export declare function _0xF3A2FBA5985C8CD5(): void;
/**
 * No comment provided
 *
 * Hash: 0xF6CE6F9C3897804E | Since: 1207
 *
 * @deprecated Use volume._0xF6CE6F9C3897804E() instead
 */
export declare function _0xF6CE6F9C3897804E(): any;
/**
 * No comment provided
 *
 * Hash: 0xF6F5447D418DAA82 | Since: 1207
 *
 * @deprecated Use volume._0xF6F5447D418DAA82() instead
 */
export declare function _0xF6F5447D418DAA82(): any;
/**
 * nullsub, doesn't do anything
 *
 * Hash: 0xFA15C9A320E707B0 | Since: 1207
 *
 * @deprecated Use volume._0xFA15C9A320E707B0() instead
 */
export declare function _0xFA15C9A320E707B0(): void;
/**
 * _ADD_R* - _ADD_V(OLUME?)*
 *
 * Hash: 0x6E0D3C3F828DA773 | Since: 1207
 *
 * @deprecated Use volume.addBoundsToAggregateVolume() instead
 */
export declare function addBoundsToAggregateVolume(volume: number, aggregate: number): void;
/**
 * No comment provided
 *
 * Hash: 0x39816F6F94F385AD | Since: 1207
 *
 * @deprecated Use volume.addBoxVolumeToVolumeAggregate() instead
 */
export declare function addBoxVolumeToVolumeAggregate(aggregate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBCE668AAF83608BE | Since: 1207
 *
 * @deprecated Use volume.addCylinderVolumeToVolumeAggregate() instead
 */
export declare function addCylinderVolumeToVolumeAggregate(aggregate: number): void;
/**
 * No comment provided
 *
 * Hash: 0x58D3803FA639A3BB | Since: 1311
 *
 * @deprecated Use volume.addEntryVolumeLock() instead
 */
export declare function addEntryVolumeLock(args: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B7D7BF36D2DE18B | Since: 1207
 *
 * @deprecated Use volume.addSphereVolumeToVolumeAggregate() instead
 */
export declare function addSphereVolumeToVolumeAggregate(aggregate: number): void;
/**
 * No comment provided
 *
 * Hash: 0x12FCAA23F2320422 | Since: 1207
 *
 * @deprecated Use volume.addVolumeToVolumeAggregate() instead
 */
export declare function addVolumeToVolumeAggregate(aggregate: number, typeHash: number | string, pos: Vector3, rot: Vector3, scale: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x0EB78C2B156635B1 | Since: 1207
 *
 * @deprecated Use volume.createAntiGriefVolume() instead
 */
export declare function createAntiGriefVolume(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0xBBE768E3AE76E07C | Since: 1207
 *
 * @deprecated Use volume.createSpeedVolume() instead
 */
export declare function createSpeedVolume(): number;
/**
 * No comment provided
 *
 * Hash: 0x5D580DE6398BB162 | Since: 1207
 *
 * @deprecated Use volume.createVolumeAggregateWithCustomName() instead
 */
export declare function createVolumeAggregateWithCustomName(name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xF68485C7495D848E | Since: 1207
 *
 * @deprecated Use volume.createVolumeBoxWithCustomName() instead
 */
export declare function createVolumeBoxWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x502022FA1AF9DC86 | Since: 1207
 *
 * @deprecated Use volume.createVolumeByHash() instead
 */
export declare function createVolumeByHash(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x1F85E4AC774A201E | Since: 1207
 *
 * @deprecated Use volume.createVolumeByHashWithCustomName() instead
 */
export declare function createVolumeByHashWithCustomName(volumeType: number | string, pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xDF1E350EDDF06E59 | Since: 1207
 *
 * @deprecated Use volume.createVolumeCylinderWithCustomName() instead
 */
export declare function createVolumeCylinderWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
/**
 * Params: p5 is always 0
 *
 * Hash: 0x00BBF7CEAE8C666A | Since: 1207
 *
 * @deprecated Use volume.createVolumeLock() instead
 */
export declare function createVolumeLock(pos: Vector3, radius: number, flag: number): number;
/**
 * Params: p3 is always 0
 *
 * Hash: 0xF383E96C4904DF0C | Since: 1207
 *
 * @deprecated Use volume.createVolumeLockAttachedToEntity() instead
 */
export declare function createVolumeLockAttachedToEntity(entity: number | Entity, radius: number, flag: number): number;
/**
 * No comment provided
 *
 * Hash: 0x10157BC3247FF3BA | Since: 1207
 *
 * @deprecated Use volume.createVolumeSphereWithCustomName() instead
 */
export declare function createVolumeSphereWithCustomName(pos: Vector3, rot: Vector3, scale: Vector3, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xFD0E389CD44434B6 | Since: 1207
 *
 * @deprecated Use volume.createWalkAndTalkVolume() instead
 */
export declare function createWalkAndTalkVolume(): number;
/**
 * No comment provided
 *
 * Hash: 0x77A6E4AD0C496F81 | Since: 1207
 *
 * @deprecated Use volume.findVolumeLockRequestIdWithArgs() instead
 */
export declare function findVolumeLockRequestIdWithArgs(args: any): number;
/**
 * No comment provided
 *
 * Hash: 0x5737199AF2DC609F | Since: 1207
 *
 * @deprecated Use volume.getVolumeBounds() instead
 */
export declare function getVolumeBounds(volume: number, min: Vector3, max: Vector3): void;
/**
 * Returns relationshipGroup Hash
 *
 * Hash: 0x666C2F53ABEFC952 | Since: 1207
 *
 * @deprecated Use volume.getVolumeRelationship() instead
 */
export declare function getVolumeRelationship(volume: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFEFF01B5725BCD22 | Since: 1207
 *
 * @deprecated Use volume.isAggregateVolume() instead
 */
export declare function isAggregateVolume(volume: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x769BB7626B8CDB06 | Since: 1207
 *
 * @deprecated Use volume.isPointNearVolumeLockCenter() instead
 */
export declare function isPointNearVolumeLockCenter(pos: Vector3, radius: number, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF6A8A652A6B186CD | Since: 1207
 *
 * @deprecated Use volume.isVolumeLockRequestValid2() instead
 */
export declare function isVolumeLockRequestValid2(volLockRequestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC43C2FFB70E3F30 | Since: 1207
 *
 * @deprecated Use volume.modifyVolumeLockLocation() instead
 */
export declare function modifyVolumeLockLocation(volLock: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xFDFECC6EE4491E11 | Since: 1207
 *
 * @deprecated Use volume.releaseLockVolume() instead
 */
export declare function releaseLockVolume(volLockRequestId: number): void;
/**
 * _REMOVE_E* - _REMOVE_R*
 *
 * Hash: 0xF92FA8890DECECF6 | Since: 1207
 *
 * @deprecated Use volume.removeBoundsFromAggregateVolume() instead
 */
export declare function removeBoundsFromAggregateVolume(volume: number, aggregate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBE551C2CC421185D | Since: 1207
 *
 * @deprecated Use volume.setAntiGriefVolumeBlocksHorse() instead
 */
export declare function setAntiGriefVolumeBlocksHorse(volume: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5B23DFF8E0948BB2 | Since: 1207
 *
 * @deprecated Use volume.setAntiGriefVolumeBlocksPlayer() instead
 */
export declare function setAntiGriefVolumeBlocksPlayer(volume: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFD010A2154B40676 | Since: 1207
 *
 * @deprecated Use volume.setVolumeRelationship() instead
 */
export declare function setVolumeRelationship(volume: number, relationshipGroup: number | string): void;
/**
 * Must be called every frame to take full effect.
 *
 * Hash: 0x754616EC6965D1FB | Since: 1207
 *
 * @deprecated Use water.disableWaterLookup() instead
 */
export declare function disableWaterLookup(): void;
/**
 * No comment provided
 *
 * Hash: 0x754616EC6965D1BF | Since: 1207
 *
 * @deprecated Use water.enableWaterLookup() instead
 */
export declare function enableWaterLookup(): void;
/**
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
 *
 * Hash: 0xFCA8B23F28813F69 | Since: 1207
 *
 * @deprecated Use water.getWaterHeight() instead
 */
export declare function getWaterHeight(pos: Vector3, height: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDCF3690AA262C03F | Since: 1207
 *
 * @deprecated Use water.getWaterHeightNoWaves() instead
 */
export declare function getWaterHeightNoWaves(pos: Vector3, height: number): boolean;
/**
 * Only used in rcm_crackpot1 R* Script: p0 = 0
 *
 * Hash: 0x4BEF8DD75AF6C71C | Since: 1207
 *
 * @deprecated Use water.removeExtraCalmingQuad() instead
 */
export declare function removeExtraCalmingQuad(index: number): void;
/**
 * enum eScriptWaterTestResult
 * {
 * SCRIPT_WATER_TEST_RESULT_NONE,
 * SCRIPT_WATER_TEST_RESULT_WATER,
 * SCRIPT_WATER_TEST_RESULT_BLOCKED,
 * };
 *
 * Hash: 0x8974647ED222EA5F | Since: 1207
 *
 * @deprecated Use water.testProbeAgainstAllWater() instead
 */
export declare function testProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, intersectionPos: Vector3): number;
/**
 * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
 *
 * See TEST_PROBE_AGAINST_ALL_WATER.
 *
 * Hash: 0x2B3451FA1E3142E2 | Since: 1207
 *
 * @deprecated Use water.testVerticalProbeAgainstAllWater() instead
 */
export declare function testVerticalProbeAgainstAllWater(pos: Vector3, flags: number, waterHeight: number): number;
/**
 * Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
 * _REMOVE_*
 *
 * Hash: 0x09A1C7DFDCE54FBC | Since: 1207
 *
 * @deprecated Use water._0x09A1C7DFDCE54FBC() instead
 */
export declare function _0x09A1C7DFDCE54FBC(): void;
/**
 * Only used in native_son1 R* Script: p1 = 1
 *
 * Hash: 0x0DCEC6A92E497E17 | Since: 1207
 *
 * @deprecated Use water._0x0DCEC6A92E497E17() instead
 */
export declare function _0x0DCEC6A92E497E17(entity: number | Entity): void;
/**
 * Only used in fishing_core R* Script
 *
 * Hash: 0xA33F5069B0CB89B8 | Since: 1207
 *
 * @deprecated Use water._0xA33F5069B0CB89B8() instead
 */
export declare function _0xA33F5069B0CB89B8(): void;
/**
 * Used in bounty1, fanale3, sean1 R* Scripts
 *
 * Hash: 0xB34A6009A0DB80B8 | Since: 1207
 *
 * @deprecated Use water._0xB34A6009A0DB80B8() instead
 */
export declare function _0xB34A6009A0DB80B8(entity: number | Entity): void;
/**
 * Only used in fussar1 / train_robbery2 R* Script
 *
 * Hash: 0xE8126623008372AA | Since: 1207
 *
 * @deprecated Use water._0xE8126623008372AA() instead
 */
export declare function _0xE8126623008372AA(): void;
/**
 * Only used in fishing_core R* Script
 *
 * Hash: 0xF0FBF193F1F5C0EA | Since: 1207
 *
 * @deprecated Use water._0xF0FBF193F1F5C0EA() instead
 */
export declare function _0xF0FBF193F1F5C0EA(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x189739A7631C1867 | Since: 1207
 *
 * @deprecated Use water.getWorldWaterType() instead
 */
export declare function getWorldWaterType(): number;
/**
 * Only used in guama1 / guama3 R* Script
 * _REQUEST_* or _RESET_*
 *
 * Hash: 0xC63540AEF8384769 | Since: 1207
 *
 * @deprecated Use water.resetGuarmaWaterState() instead
 */
export declare function resetGuarmaWaterState(): void;
/**
 * Only used in R* Script guama1 this native allows to modify the ocean water in the guarma island. wave direction accepts 0, 1 and 2 values.
 *
 * Hash: 0xC63540AEF8384732 | Since: 1207
 *
 * @deprecated Use water.setOceanGuarmaWaterQuadrant() instead
 */
export declare function setOceanGuarmaWaterQuadrant(wavesHeight: number, waveDirection: number, waveAmmount: number, waveSpeed: number, wavesStrength: number): void;
/**
 * 0 = World
 * 1 = Guarma
 *
 * Hash: 0xE8770EE02AEE45C2 | Since: 1207
 *
 * @deprecated Use water.setWorldWaterType() instead
 */
export declare function setWorldWaterType(waterType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x918990BD9CE08582 | Since: 1207
 *
 * @deprecated Use weapon.getAllowDualWield() instead
 */
export declare function getAllowDualWield(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E1202248937775C | Since: 1207
 *
 * @deprecated Use weapon.getAmmoInClip() instead
 */
export declare function getAmmoInClip(ped: number | Ped, ammo: number, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x015A522136D7F951 | Since: 1207
 *
 * @deprecated Use weapon.getAmmoInPedWeapon() instead
 */
export declare function getAmmoInPedWeapon(ped: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF52BD94B47CCF736 | Since: 1207
 *
 * @deprecated Use weapon.getBestPedShortarmGuid() instead
 */
export declare function getBestPedShortarmGuid(ped: number | Ped, outGUID: any): void;
/**
 * No comment provided
 *
 * Hash: 0x8483E98E8B888AE2 | Since: 1207
 *
 * @deprecated Use weapon.getBestPedWeapon() instead
 */
export declare function getBestPedWeapon(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1017582BCD3832DC | Since: 1207
 *
 * @deprecated Use weapon.getCurrentPedVehicleWeapon() instead
 */
export declare function getCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * Hash: 0x3A87E44BB9A01D54 | Since: 1207
 *
 * @deprecated Use weapon.getCurrentPedWeapon() instead
 */
export declare function getCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, attachPoint: number): boolean;
/**
 * Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * Hash: 0x3B390A939AF0B5FC | Since: 1207
 *
 * @deprecated Use weapon.getCurrentPedWeaponEntityIndex() instead
 */
export declare function getCurrentPedWeaponEntityIndex(ped: number | Ped, attachPoint: number): number;
/**
 * No comment provided
 *
 * Hash: 0xDC16122C7A20C933 | Since: 1207
 *
 * @deprecated Use weapon.getMaxAmmo() instead
 */
export declare function getMaxAmmo(ped: number | Ped, ammo: number, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA38DCFFCEA8962FA | Since: 1207
 *
 * @deprecated Use weapon.getMaxAmmoInClip() instead
 */
export declare function getMaxAmmoInClip(ped: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x39D22031557946C1 | Since: 1207
 *
 * @deprecated Use weapon.getPedAmmoByType() instead
 */
export declare function getPedAmmoByType(ped: number | Ped, ammoType: number | string): number;
/**
 * Returns the current ammo type of the specified ped's specified weapon.
 *
 * Hash: 0x7FEAD38B326B9F74 | Since: 1207
 *
 * @deprecated Use weapon.getPedAmmoTypeFromWeapon() instead
 */
export declare function getPedAmmoTypeFromWeapon(ped: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC71FE230A513C30F | Since: 1207
 *
 * @deprecated Use weapon.getPedBackupWeapon() instead
 */
export declare function getPedBackupWeapon(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x6C4D0409BA1A2BC2 | Since: 1207
 *
 * @deprecated Use weapon.getPedLastWeaponImpactCoord() instead
 */
export declare function getPedLastWeaponImpactCoord(ped: number | Ped, coords: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6929E22158E52265 | Since: 1207
 *
 * @deprecated Use weapon.getPedWeaponGuidAtAttachPoint() instead
 */
export declare function getPedWeaponGuidAtAttachPoint(ped: number | Ped, attachPoint: number, weaponGuid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEDCA14CA5199FF25 | Since: 1207
 *
 * @deprecated Use weapon.getWeapontypeGroup() instead
 */
export declare function getWeapontypeGroup(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD3750CCC00635FC2 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponClipSize() instead
 */
export declare function getWeaponClipSize(weaponHash: number | string): number;
/**
 * 0.0: good condition, 1.0: poor condition
 *
 * Hash: 0x0D78E1097F89E637 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponDegradation() instead
 */
export declare function getWeaponDegradation(weaponObject: number | Object): number;
/**
 * Related to rust of weapons
 *
 * Hash: 0xD56E5F336C675EFA | Since: 1207
 *
 * @deprecated Use weapon.getWeaponPermanentDegradation() instead
 */
export declare function getWeaponPermanentDegradation(weaponObject: number | Object): number;
/**
 * addReason: see _ADD_AMMO_TO_PED
 *
 * Hash: 0xB282DC6EBD803C75 | Since: 1207
 *
 * @deprecated Use weapon.giveDelayedWeaponToPed() instead
 */
export declare function giveDelayedWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, addReason: number | string): void;
/**
 * Gives the ped the weapon.
 * List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
 *
 * Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
 * attachPoint: see SET_CURRENT_PED_WEAPON
 * addReason: see _ADD_AMMO_TO_PED
 * permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
 *
 * Hash: 0x5E3BDDBCB83F3D84 | Since: 1207
 *
 * @deprecated Use weapon.giveWeaponToPed() instead
 */
export declare function giveWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, bForceInHand: boolean, bForceInHolster: boolean, attachPoint: number, bAllowMultipleCopies: boolean, addReason: number | string, bIgnoreUnlocks: boolean, permanentDegradation: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBE7E42B07FD317AC | Since: 1207
 *
 * @deprecated Use weapon.giveWeaponToPedWithOptions() instead
 */
export declare function giveWeaponToPedWithOptions(ped: number | Ped, data: any, outData: any): boolean;
/**
 * onlyCheckPlayerInventory: If true, it will only check the players current inventory. If false, it also checks your horse inventory
 *
 * Hash: 0x8DECB02F88F428BC | Since: 1207
 *
 * @deprecated Use weapon.hasPedGotWeapon() instead
 */
export declare function hasPedGotWeapon(ped: number | Ped, weaponHash: number | string, onlyCheckPlayerInventory: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76A18844E743BF91 | Since: 1207
 *
 * @deprecated Use weapon.hasWeaponGotWeaponComponent() instead
 */
export declare function hasWeaponGotWeaponComponent(weapon: number | Object, addonHash: number | string): boolean;
/**
 * Hides the ped's weapon during a cutscene.
 *
 * Hash: 0x6F6981D2253C208F | Since: 1207
 *
 * @deprecated Use weapon.hidePedWeaponForScriptedCutscene() instead
 */
export declare function hidePedWeaponForScriptedCutscene(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCB690F680A3EA971 | Since: 1207
 *
 * @deprecated Use weapon.isPedArmed() instead
 */
export declare function isPedArmed(ped: number | Ped, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF29A186ED428B552 | Since: 1207
 *
 * @deprecated Use weapon.isPedCarryingWeapon() instead
 */
export declare function isPedCarryingWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB80CA294F2F26749 | Since: 1207
 *
 * @deprecated Use weapon.isPedWeaponReadyToShoot() instead
 */
export declare function isPedWeaponReadyToShoot(ped: number | Ped): boolean;
/**
 * `Returns true if CWeaponInfoFlags::Flags::Gun is set.`
 *
 * Hash: 0x705BE297EEBDB95D | Since: 1207
 *
 * @deprecated Use weapon.isWeaponAGun() instead
 */
export declare function isWeaponAGun(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC4DEC3CA8C365A5D | Since: 1207
 *
 * @deprecated Use weapon.isWeaponBow() instead
 */
export declare function isWeaponBow(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x959383DCD42040DA | Since: 1207
 *
 * @deprecated Use weapon.isWeaponMeleeWeapon() instead
 */
export declare function isWeaponMeleeWeapon(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDC64F5E31EEDAB6 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponPistol() instead
 */
export declare function isWeaponPistol(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDB2578E95EF7138 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponRepeater() instead
 */
export declare function isWeaponRepeater(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC212F1D05A8232BB | Since: 1207
 *
 * @deprecated Use weapon.isWeaponRevolver() instead
 */
export declare function isWeaponRevolver(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A82317B7EBFC420 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponRifle() instead
 */
export declare function isWeaponRifle(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC75386174ECE95D5 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponShotgun() instead
 */
export declare function isWeaponShotgun(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x937C71165CF334B3 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponValid() instead
 */
export declare function isWeaponValid(weaponHash: number | string): boolean;
/**
 * Old name: _DROP_CURRENT_PED_WEAPON
 *
 * Hash: 0xCEF4C65DE502D367 | Since: 1207
 *
 * @deprecated Use weapon.makePedDropWeapon() instead
 */
export declare function makePedDropWeapon(ped: number | Ped, attachPoint: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF25DF915FA38C5F3 | Since: 1207
 *
 * @deprecated Use weapon.removeAllPedWeapons() instead
 */
export declare function removeAllPedWeapons(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF7D82B0D66777611 | Since: 1207
 *
 * @deprecated Use weapon.removeWeaponComponentFromWeaponObject() instead
 */
export declare function removeWeaponComponentFromWeaponObject(weaponObject: number | Object, component: number | string): void;
/**
 * removeReason:
 * enum eRemoveItemReason : Hash
 * {
 * REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
 * REMOVE_REASON_COALESCE = 0x2ABE393E,
 * REMOVE_REASON_DEBUG = 0xA07362E6,
 * REMOVE_REASON_DEFAULT = 0xF77DE93D,
 * REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
 * REMOVE_REASON_DROPPED = 0xEC7FB5D5,
 * REMOVE_REASON_DUPLICATE = 0x19047132,
 * REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
 * REMOVE_REASON_GIVEN = 0xAD5377D4,
 * REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
 * REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
 * REMOVE_REASON_LOADOUT = 0x1B94E3BA,
 * REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
 * REMOVE_REASON_SOLD = 0x76C4B482,
 * REMOVE_REASON_USED = 0x2188E0A3,
 * REMOVE_REASON_USE_FAILED = 0x671F9EAD
 * };
 *
 * Hash: 0x4899CB088EDF59B8 | Since: 1207
 *
 * @deprecated Use weapon.removeWeaponFromPed() instead
 */
export declare function removeWeaponFromPed(ped: number | Ped, weaponHash: number | string, removeReason: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x78030C7867D8B9B6 | Since: 1207
 *
 * @deprecated Use weapon.setAllowAnyWeaponDrop() instead
 */
export declare function setAllowAnyWeaponDrop(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDCD2A934D65CB497 | Since: 1207
 *
 * @deprecated Use weapon.setAmmoInClip() instead
 */
export declare function setAmmoInClip(ped: number | Ped, weaponHash: number | string, ammo: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x75C55983C2C39DAA | Since: 1207
 *
 * @deprecated Use weapon.setCurrentPedVehicleWeapon() instead
 */
export declare function setCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * attachPoint:
 * enum eWeaponAttachPoint
 * {
 * WEAPON_ATTACH_POINT_INVALID = -1,
 * WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
 * WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
 * WEAPON_ATTACH_POINT_PISTOL_R = 2,
 * MAX_HAND_WEAPON_ATTACH_POINTS = 2,
 * WEAPON_ATTACH_POINT_PISTOL_L = 3,
 * WEAPON_ATTACH_POINT_KNIFE = 4,
 * WEAPON_ATTACH_POINT_LASSO = 5,
 * WEAPON_ATTACH_POINT_THROWER = 6,
 * WEAPON_ATTACH_POINT_BOW = 7,
 * WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
 * WEAPON_ATTACH_POINT_RIFLE = 9,
 * WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
 * WEAPON_ATTACH_POINT_LANTERN = 11,
 * WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
 * WEAPON_ATTACH_POINT_MELEE = 13,
 * MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
 * WEAPON_ATTACH_POINT_HIP = 14,
 * WEAPON_ATTACH_POINT_BOOT = 15,
 * WEAPON_ATTACH_POINT_BACK = 16,
 * WEAPON_ATTACH_POINT_FRONT = 17,
 * WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
 * WEAPON_ATTACH_POINT_LEFTBREAST = 19,
 * WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
 * WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
 * WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
 * WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
 * WEAPON_ATTACH_POINT_SATCHEL = 24,
 * WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
 * WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
 * WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
 * WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
 * MAX_WEAPON_ATTACH_POINTS = 29
 * };
 *
 * Hash: 0xADF692B254977C0C | Since: 1207
 *
 * @deprecated Use weapon.setCurrentPedWeapon() instead
 */
export declare function setCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, equipNow: boolean, attachPoint: number): void;
/**
 * Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
 *
 * Hash: 0x12FB95FE3D579238 | Since: 1207
 *
 * @deprecated Use weapon.setCurrentPedWeaponByGuid() instead
 */
export declare function setCurrentPedWeaponByGuid(ped: number | Ped, weaponUid: any): void;
/**
 * No comment provided
 *
 * Hash: 0x739B9C6D0E7F7F93 | Since: 1207
 *
 * @deprecated Use weapon.setInstantlyEquipWeaponPickups() instead
 */
export declare function setInstantlyEquipWeaponPickups(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x14E56BC5B5DB6A19 | Since: 1207
 *
 * @deprecated Use weapon.setPedAmmo() instead
 */
export declare function setPedAmmo(ped: number | Ped, weaponHash: number | string, ammo: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5FD1E1F011E76D7E | Since: 1207
 *
 * @deprecated Use weapon.setPedAmmoByType() instead
 */
export declare function setPedAmmoByType(ped: number | Ped, ammoType: number | string, ammo: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA4EFEF9440A5B0EF | Since: 1207
 *
 * @deprecated Use weapon.setPedAmmoToDrop() instead
 */
export declare function setPedAmmoToDrop(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x0725A4CCFDED9A70 | Since: 1207
 *
 * @deprecated Use weapon.setPedCurrentWeaponVisible() instead
 */
export declare function setPedCurrentWeaponVisible(ped: number | Ped, visible: boolean, deselectWeapon: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x208A1888007FC0E6 | Since: 1207
 *
 * @deprecated Use weapon.setPedDropsInventoryWeapon() instead
 */
export declare function setPedDropsInventoryWeapon(ped: number | Ped, weaponHash: number | string, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x476AE72C1D19D1A8 | Since: 1207
 *
 * @deprecated Use weapon.setPedDropsWeaponsWhenDead() instead
 */
export declare function setPedDropsWeaponsWhenDead(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3EDCB0505123623B | Since: 1207
 *
 * @deprecated Use weapon.setPedInfiniteAmmo() instead
 */
export declare function setPedInfiniteAmmo(ped: number | Ped, toggle: boolean, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xEC1F85DA51D3D6C4 | Since: 1232
 *
 * @deprecated Use weapon.setPlayerPedQuickSwapWeaponByGuid() instead
 */
export declare function setPlayerPedQuickSwapWeaponByGuid(ped: number | Ped, guidPrimary: any, guidSecondary: any): void;
/**
 * No comment provided
 *
 * Hash: 0x194D877FC5597B7D | Since: 1207
 *
 * @deprecated Use weapon.setVehicleWeaponHeading() instead
 */
export declare function setVehicleWeaponHeading(vehicle: number | Vehicle, seatIndex: number, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2C83212A7AA51D3D | Since: 1207
 *
 * @deprecated Use weapon.shouldWeaponBeDiscardedWhenSwapped() instead
 */
export declare function shouldWeaponBeDiscardedWhenSwapped(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x000FA7A4A8443AF7 | Since: 1207
 *
 * @deprecated Use weapon._0x000FA7A4A8443AF7() instead
 */
export declare function _0x000FA7A4A8443AF7(): void;
/**
 * Returns whether the specified ped is holding a weapon with the given hash.
 * only these weapons below return true
 * WEAPON_BOW, WEAPON_KIT_METAL_DETECTOR, WEAPON_MELEE_CLEAVER, WEAPON_MELEE_DAVY_LANTERN, WEAPON_MELEE_HATCHET, WEAPON_MELEE_HATCHET_HUNTER, WEAPON_MELEE_KNIFE_JAWBONE, WEAPON_MELEE_LANTERN WEAPON_MELEE_TORCH, WEAPON_MOONSHINEJUG_MP, WEAPON_RIFLE_BOLTACTION, WEAPON_SHOTGUN_PUMP, WEAPON_THROWN_BOLAS, WEAPON_THROWN_MOLOTOV
 *
 * Hash: 0x07E1C35F0078C3F9 | Since: 1207
 *
 * @deprecated Use weapon.isPedHoldingWeapon() instead
 */
export declare function isPedHoldingWeapon(ped: number | Ped, weapon: number | string): boolean;
/**
 * _GET_D* - _GET_L*
 *
 * Hash: 0x0DE0944ECCB3DF5D | Since: 1232
 *
 * @deprecated Use weapon._0x0DE0944ECCB3DF5D() instead
 */
export declare function _0x0DE0944ECCB3DF5D(ped: number | Ped): boolean;
/**
 * Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
 * _A* or _B*
 *
 * Hash: 0x14FF0C2545527F9B | Since: 1207
 *
 * @deprecated Use weapon._0x14FF0C2545527F9B() instead
 */
export declare function _0x14FF0C2545527F9B(horse: number | Ped, weaponHash: number | string, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x16D9841A85FA627E | Since: 1207
 *
 * @deprecated Use weapon._0x16D9841A85FA627E() instead
 */
export declare function _0x16D9841A85FA627E(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x183CE355115B6E75 | Since: 1207
 *
 * @deprecated Use weapon._0x183CE355115B6E75() instead
 */
export declare function _0x183CE355115B6E75(): void;
/**
 * No comment provided
 *
 * Hash: 0x23BF601A42F329A0 | Since: 1207
 *
 * @deprecated Use weapon._0x23BF601A42F329A0() instead
 */
export declare function _0x23BF601A42F329A0(): any;
/**
 * _SET_A* - _SET_B*
 *
 * Hash: 0x2EBF70E1D8C06683 | Since: 1207
 *
 * @deprecated Use weapon._0x2EBF70E1D8C06683() instead
 */
export declare function _0x2EBF70E1D8C06683(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3799EFCC3C8CD5E1 | Since: 1207
 *
 * @deprecated Use weapon._0x3799EFCC3C8CD5E1() instead
 */
export declare function _0x3799EFCC3C8CD5E1(): any;
/**
 * No comment provided
 *
 * Hash: 0x404514D231DB27A0 | Since: 1207
 *
 * @deprecated Use weapon._0x404514D231DB27A0() instead
 */
export declare function _0x404514D231DB27A0(): void;
/**
 * No comment provided
 *
 * Hash: 0x431240A58484D5D0 | Since: 1207
 *
 * @deprecated Use weapon._0x431240A58484D5D0() instead
 */
export declare function _0x431240A58484D5D0(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x44C8F4908F1B2622 | Since: 1207
 *
 * @deprecated Use weapon._0x44C8F4908F1B2622() instead
 */
export declare function _0x44C8F4908F1B2622(ped: number | Ped, ammoHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x457B16951AD77C1B | Since: 1436
 *
 * @deprecated Use weapon._0x457B16951AD77C1B() instead
 */
export declare function _0x457B16951AD77C1B(): void;
/**
 * No comment provided
 *
 * Hash: 0x45E57FDD531C9477 | Since: 1207
 *
 * @deprecated Use weapon._0x45E57FDD531C9477() instead
 */
export declare function _0x45E57FDD531C9477(ped: number | Ped, toggle: boolean): void;
/**
 * returns the amount of peds that were restrained with the weapon thrown bolas
 *
 * Hash: 0x46D42883E873C1D7 | Since: 1232
 *
 * @deprecated Use weapon.getNumPedsRestrainedFromWeaponBolas() instead
 */
export declare function getNumPedsRestrainedFromWeaponBolas(ped: number | Ped): number;
/**
 * Holster the holded shoulder weapon. Precisions: 0 means with anim while 1 means direct holster
 *
 * Hash: 0x4820A6939D7CEF28 | Since: 1207
 *
 * @deprecated Use weapon.setPedWeaponOnBack() instead
 */
export declare function setPedWeaponOnBack(ped: number | Ped, disableAnim: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4823F13A21F51964 | Since: 1207
 *
 * @deprecated Use weapon._0x4823F13A21F51964() instead
 */
export declare function _0x4823F13A21F51964(): any;
/**
 * No comment provided
 *
 * Hash: 0x486C96A0DCD2BC92 | Since: 1232
 *
 * @deprecated Use weapon._0x486C96A0DCD2BC92() instead
 */
export declare function _0x486C96A0DCD2BC92(): any;
/**
 * Returns whether the ped has a repeater p1: 0 or 1
 *
 * Hash: 0x495A04CAEC263AF8 | Since: 1207
 *
 * @deprecated Use weapon.doesPedHaveRepeater() instead
 */
export declare function doesPedHaveRepeater(ped: number | Ped): boolean;
/**
 * Returns whether the weapon has multiple ammo types or not.
 *
 * Hash: 0x58425FCA3D3A2D15 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponHasMultipleAmmoTypes() instead
 */
export declare function getWeaponHasMultipleAmmoTypes(weaponHash: number | string): boolean;
/**
 * Returns true if ped is on a horse while inside of a town
 * Params: p1 = 0
 * GET_L* - GET_MA*
 *
 * Hash: 0x5A695BD328586B44 | Since: 1207
 *
 * @deprecated Use weapon._0x5A695BD328586B44() instead
 */
export declare function _0x5A695BD328586B44(ped: number | Ped): boolean;
/**
 * Returns whether the ped has a revolver p1: 0 or 1
 *
 * Hash: 0x5B235F24472F2C3B | Since: 1207
 *
 * @deprecated Use weapon.doesPedHaveRevolver() instead
 */
export declare function doesPedHaveRevolver(ped: number | Ped): boolean;
/**
 * Only used in R* Script fme_escaped_convicts, p0 = 0
 *
 * Hash: 0x63B83A526329AFBC | Since: 1207
 *
 * @deprecated Use weapon._0x63B83A526329AFBC() instead
 */
export declare function _0x63B83A526329AFBC(): void;
/**
 * No comment provided
 *
 * Hash: 0x641351E9AD103890 | Since: 1207
 *
 * @deprecated Use weapon._0x641351E9AD103890() instead
 */
export declare function _0x641351E9AD103890(): void;
/**
 * Returns the attachpoint for a weapon hash. (returns -1 for melee as they can't be attached)
 *
 * Hash: 0x65DC4AC5B96614CB | Since: 1311
 *
 * @deprecated Use weapon.getDefaultWeaponAttachPoint() instead
 */
export declare function getDefaultWeaponAttachPoint(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x74C2365FDD1BB48F | Since: 1207
 *
 * @deprecated Use weapon._0x74C2365FDD1BB48F() instead
 */
export declare function _0x74C2365FDD1BB48F(): void;
/**
 * No comment provided
 *
 * Hash: 0x74C8000FDD1BB111 | Since: 1207
 *
 * @deprecated Use weapon._0x74C8000FDD1BB111() instead
 */
export declare function _0x74C8000FDD1BB111(): any;
/**
 * No comment provided
 *
 * Hash: 0x74C8000FDD1BB222 | Since: 1207
 *
 * @deprecated Use weapon._0x74C8000FDD1BB222() instead
 */
export declare function _0x74C8000FDD1BB222(): any;
/**
 * No comment provided
 *
 * Hash: 0x74C9080FDD1BB48E | Since: 1207
 *
 * @deprecated Use weapon._0x74C9080FDD1BB48E() instead
 */
export declare function _0x74C9080FDD1BB48E(): void;
/**
 * No comment provided
 *
 * Hash: 0x74C9080FDD1BB48F | Since: 1207
 *
 * @deprecated Use weapon._0x74C9080FDD1BB48F() instead
 */
export declare function _0x74C9080FDD1BB48F(): void;
/**
 * No comment provided
 *
 * Hash: 0x74C90AAACC1DD48F | Since: 1207
 *
 * @deprecated Use weapon._0x74C90AAACC1DD48F() instead
 */
export declare function _0x74C90AAACC1DD48F(): void;
/**
 * Returns whether the ped has a sniper p1: 0 or 1
 *
 * Hash: 0x80BB243789008A82 | Since: 1207
 *
 * @deprecated Use weapon.doesPedHaveSniper() instead
 */
export declare function doesPedHaveSniper(ped: number | Ped): boolean;
/**
 * Only used in R* SP Scripts native_son2, native_son3 and smuggler2
 * Params: p2 = -1
 *
 * Hash: 0x8A779706DA5CA3DD | Since: 1207
 *
 * @deprecated Use weapon._0x8A779706DA5CA3DD() instead
 */
export declare function _0x8A779706DA5CA3DD(ped: number | Ped): void;
/**
 * Only used in R* SP Script guama3
 *
 * Hash: 0x9409C62504A8F9E9 | Since: 1207
 *
 * @deprecated Use weapon._0x9409C62504A8F9E9() instead
 */
export declare function _0x9409C62504A8F9E9(vehicle: number | Vehicle): void;
/**
 * Returns whether the ped has a rifle p1: 0 or 1
 *
 * Hash: 0x95CA12E2C68043E5 | Since: 1207
 *
 * @deprecated Use weapon.doesPedHaveRifle() instead
 */
export declare function doesPedHaveRifle(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9CCA3131E6B53C68 | Since: 1207
 *
 * @deprecated Use weapon._0x9CCA3131E6B53C68() instead
 */
export declare function _0x9CCA3131E6B53C68(): any;
/**
 * this native gets the weapon hash from the default ped weapon collection (see GetDefaultPedWeaponCollection for more info) will randomly return one of it's weapons
 *
 * Hash: 0x9EEFD670F10656D7 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponFromDefaultPedWeaponCollection() instead
 */
export declare function getWeaponFromDefaultPedWeaponCollection(weaponCollection: number, weaponGroup: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x9F0E1892C7F228A8 | Since: 1207
 *
 * @deprecated Use weapon._0x9F0E1892C7F228A8() instead
 */
export declare function _0x9F0E1892C7F228A8(): any;
/**
 * No comment provided
 *
 * Hash: 0xA2091482ED42EF85 | Since: 1207
 *
 * @deprecated Use weapon._0xA2091482ED42EF85() instead
 */
export declare function _0xA2091482ED42EF85(): any;
/**
 * No comment provided
 *
 * Hash: 0xA3716A77DCF17424 | Since: 1207
 *
 * @deprecated Use weapon._0xA3716A77DCF17424() instead
 */
export declare function _0xA3716A77DCF17424(): void;
/**
 * No comment provided
 *
 * Hash: 0xA769D753922B031B | Since: 1207
 *
 * @deprecated Use weapon._0xA769D753922B031B() instead
 */
export declare function _0xA769D753922B031B(): void;
/**
 * Returns whether the ped has a shotgun p1: 0 or 1
 *
 * Hash: 0xABC18A28BAD4B46F | Since: 1207
 *
 * @deprecated Use weapon.doesPedHaveShotgun() instead
 */
export declare function doesPedHaveShotgun(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAFFD0CCF31F469B8 | Since: 1207
 *
 * @deprecated Use weapon._0xAFFD0CCF31F469B8() instead
 */
export declare function _0xAFFD0CCF31F469B8(): any;
/**
 * No comment provided
 *
 * Hash: 0xB0FB9B196A3D13F0 | Since: 1207
 *
 * @deprecated Use weapon._0xB0FB9B196A3D13F0() instead
 */
export declare function _0xB0FB9B196A3D13F0(): void;
/**
 * Stores longarms to your horse on dismount
 * Params: p2 = 0
 * SET_[I - M]*
 *
 * Hash: 0xB832F1A686B9B810 | Since: 1207
 *
 * @deprecated Use weapon.setInstantlyStoreLongarmsOnDismount() instead
 */
export declare function setInstantlyStoreLongarmsOnDismount(ped: number | Ped, storeLongarms: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC9444F2FF94A9C0 | Since: 1355
 *
 * @deprecated Use weapon._0xBC9444F2FF94A9C0() instead
 */
export declare function _0xBC9444F2FF94A9C0(): any;
/**
 * Returns whether the ped has a pistol p1: 0 or 1
 *
 * Hash: 0xBFCA7AFABF9D7967 | Since: 1207
 *
 * @deprecated Use weapon.doesPedHavePistol() instead
 */
export declare function doesPedHavePistol(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC5899C4CD2E2495D | Since: 1207
 *
 * @deprecated Use weapon._0xC5899C4CD2E2495D() instead
 */
export declare function _0xC5899C4CD2E2495D(): void;
/**
 * No comment provided
 *
 * Hash: 0xD2209866B0CB72EA | Since: 1207
 *
 * @deprecated Use weapon._0xD2209866B0CB72EA() instead
 */
export declare function _0xD2209866B0CB72EA(): any;
/**
 * No comment provided
 *
 * Hash: 0xD4C6E24D955FF061 | Since: 1311
 *
 * @deprecated Use weapon._0xD4C6E24D955FF061() instead
 */
export declare function _0xD4C6E24D955FF061(): void;
/**
 * No comment provided
 *
 * Hash: 0xD53846B9C931C181 | Since: 1207
 *
 * @deprecated Use weapon._0xD53846B9C931C181() instead
 */
export declare function _0xD53846B9C931C181(): void;
/**
 * No comment provided
 *
 * Hash: 0xD63B4BA3A02A99E0 | Since: 1207
 *
 * @deprecated Use weapon._0xD63B4BA3A02A99E0() instead
 */
export declare function _0xD63B4BA3A02A99E0(): void;
/**
 * No comment provided
 *
 * Hash: 0xE9B3FEC825668291 | Since: 1207
 *
 * @deprecated Use weapon._0xE9B3FEC825668291() instead
 */
export declare function _0xE9B3FEC825668291(): void;
/**
 * _IS_WEAPON_CLOSE_RANGE?
 * returns true when it's lassos , melee, thrown weapons (matchetes and unarmed return false)
 * all guns ,bows and animal weapons return false
 *
 * Hash: 0xEA522F991E120D45 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponCloseRange() instead
 */
export declare function isWeaponCloseRange(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC97101A8F311282 | Since: 1207
 *
 * @deprecated Use weapon._0xEC97101A8F311282() instead
 */
export declare function _0xEC97101A8F311282(): any;
/**
 * No comment provided
 *
 * Hash: 0xECBB26529A737EF6 | Since: 1207
 *
 * @deprecated Use weapon._0xECBB26529A737EF6() instead
 */
export declare function _0xECBB26529A737EF6(): void;
/**
 * No comment provided
 *
 * Hash: 0xF08D8FEB455F2C8C | Since: 1207
 *
 * @deprecated Use weapon._0xF08D8FEB455F2C8C() instead
 */
export declare function _0xF08D8FEB455F2C8C(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF252A85B8F3F8C58 | Since: 1207
 *
 * @deprecated Use weapon._0xF252A85B8F3F8C58() instead
 */
export declare function _0xF252A85B8F3F8C58(weaponCollection: number | string, dualwieldVariant: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF2F585411E748B9C | Since: 1207
 *
 * @deprecated Use weapon._0xF2F585411E748B9C() instead
 */
export declare function _0xF2F585411E748B9C(): any;
/**
 * Returns weaponHash
 *
 * Hash: 0xF8204EF17410BF43 | Since: 1207
 *
 * @deprecated Use weapon._0xF8204EF17410BF43() instead
 */
export declare function _0xF8204EF17410BF43(weaponGroupHash: number | string): number;
/**
 * addReason:
 * enum eAddItemReason : Hash
 * {
 * ADD_REASON_AWARDS = 0xB784AD1E,
 * ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
 * ADD_REASON_DEBUG = 0x5C05C64D,
 * ADD_REASON_DEFAULT = 0x2CD419DC,
 * ADD_REASON_GET_INVENTORY = 0xD8188685,
 * ADD_REASON_INCENTIVE = 0x8ADC2E95,
 * ADD_REASON_LOADOUT = 0xCA3454E6,
 * ADD_REASON_LOAD_SAVEGAME = 0x56212906,
 * ADD_REASON_LOOTED = 0xCA806A55,
 * ADD_REASON_MELEE = 0x7B9BDCE7,
 * ADD_REASON_MP_MISSION = 0xEC0E0194,
 * ADD_REASON_NOTIFICATION = 0xC56292D2,
 * ADD_REASON_PICKUP = 0x1A770E22,
 * ADD_REASON_PURCHASED = 0x4A6726C9,
 * ADD_REASON_SET_AMOUNT = 0x4504731E,
 * ADD_REASON_SYNCING = 0x8D4B4FF4,
 * ADD_REASON_USE_FAILED = 0xD385B670
 * };
 *
 * Hash: 0xB190BCA3F4042F95 | Since: 1207
 *
 * @deprecated Use weapon.addAmmoToPed() instead
 */
export declare function addAmmoToPed(ped: number | Ped, weaponHash: number | string, amount: number, addReason: number | string): void;
/**
 * addReason: see _ADD_AMMO_TO_PED
 *
 * Hash: 0x106A811C6D3035F3 | Since: 1207
 *
 * @deprecated Use weapon.addAmmoToPedByType() instead
 */
export declare function addAmmoToPedByType(ped: number | Ped, ammoType: number | string, amount: number, addReason: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x087D8F4BC65F68E4 | Since: 1207
 *
 * @deprecated Use weapon.clearPedLastWeaponDamage() instead
 */
export declare function clearPedLastWeaponDamage(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9888652B8BA77F73 | Since: 1207
 *
 * @deprecated Use weapon.createWeaponObject() instead
 */
export declare function createWeaponObject(weaponHash: number | string, ammoCount: number, pos: Vector3, showWorldModel: boolean, scale: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAA5A52204E077883 | Since: 1207
 *
 * @deprecated Use weapon.disableAmmoTypeForPed() instead
 */
export declare function disableAmmoTypeForPed(ped: number | Ped, ammoHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF0D728EEA3C99775 | Since: 1207
 *
 * @deprecated Use weapon.disableAmmoTypeForPedWeapon() instead
 */
export declare function disableAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3B7B7908B7ADFB4B | Since: 1207
 *
 * @deprecated Use weapon.enableAmmoTypeForPed() instead
 */
export declare function enableAmmoTypeForPed(ped: number | Ped, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x23FB9FACA28779C1 | Since: 1207
 *
 * @deprecated Use weapon.enableAmmoTypeForPedWeapon() instead
 */
export declare function enableAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC395355843BE134B | Since: 1207
 *
 * @deprecated Use weapon.enableWeaponRestore() instead
 */
export declare function enableWeaponRestore(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x678F00858980F516 | Since: 1207
 *
 * @deprecated Use weapon.getAmmoInClipByInventoryUid() instead
 */
export declare function getAmmoInClipByInventoryUid(ped: number | Ped, ammo: number, inventoryUid: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C2EA6C44F515F34 | Since: 1207
 *
 * @deprecated Use weapon.getAmmoTypeForWeapon() instead
 */
export declare function getAmmoTypeForWeapon(weaponHash: number | string): number;
/**
 * If near your horse when called, weapons stored on your horse will be considered
 * Returns weaponHash
 *
 * Hash: 0x9F67929D98E7C6E8 | Since: 1207
 *
 * @deprecated Use weapon.getBestPedWeaponInGroup() instead
 */
export declare function getBestPedWeaponInGroup(ped: number | Ped, weaponGroup: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7B98500614C8E8B8 | Since: 1232
 *
 * @deprecated Use weapon.getBestPedWeaponInInventory() instead
 */
export declare function getBestPedWeaponInInventory(ped: number | Ped, guidPrimary: any): any;
/**
 * No comment provided
 *
 * Hash: 0x6554ECCE226F2A2A | Since: 1207
 *
 * @deprecated Use weapon.getCanTwirlWeapon() instead
 */
export declare function getCanTwirlWeapon(weaponHash: number | string): boolean;
/**
 * _GET_BEST_* - _GET_CLOSEST_*
 *
 * Hash: 0xCD356B42C57BFE01 | Since: 1355
 *
 * @deprecated Use weapon.getCorrectKitEmoteTwirlGun() instead
 */
export declare function getCorrectKitEmoteTwirlGun(ped: number | Ped, weaponGuid: any): boolean;
/**
 * Returns ammoHash
 *
 * Hash: 0xAF9D167A5656D6A6 | Since: 1207
 *
 * @deprecated Use weapon.getCurrentAmmoTypeFromGuid() instead
 */
export declare function getCurrentAmmoTypeFromGuid(ped: number | Ped, weaponGuid: any): number;
/**
 * Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
 *
 * Hash: 0x7E7B19A4355FEE13 | Since: 1207
 *
 * @deprecated Use weapon.getCurrentPedWeaponAmmoType() instead
 */
export declare function getCurrentPedWeaponAmmoType(ped: number | Ped, weaponObject: number | Object): number;
/**
 * Returns weaponCollection Hash
 * Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
 *
 * Hash: 0xD42514C182121C23 | Since: 1207
 *
 * @deprecated Use weapon.getDefaultPedWeaponCollection() instead
 */
export declare function getDefaultPedWeaponCollection(pedModel: number | string): number;
/**
 * Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
 * Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
 *
 * Hash: 0x08FF1099ED2E6E21 | Since: 1207
 *
 * @deprecated Use weapon.getDefaultUnarmedWeaponHash() instead
 */
export declare function getDefaultUnarmedWeaponHash(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x79B1A6E780266DB0 | Since: 1207
 *
 * @deprecated Use weapon.getMaxLockonDistanceOfCurrentPedWeapon() instead
 */
export declare function getMaxLockonDistanceOfCurrentPedWeapon(ped: number | Ped): number;
/**
 * Returns eCurrentHeldWeapon
 * _GET_R* - _GET_T*
 *
 * Hash: 0x8425C5F057012DAB | Since: 1207
 *
 * @deprecated Use weapon.getPedCurrentHeldWeapon() instead
 */
export declare function getPedCurrentHeldWeapon(ped: number | Ped): number;
/**
 * Returns emote Hash
 *
 * Hash: 0x2C4FEC3D0EFA9FC0 | Since: 1355
 *
 * @deprecated Use weapon.getPedGunSpinningEquippedKitEmoteTwirl() instead
 */
export declare function getPedGunSpinningEquippedKitEmoteTwirl(ped: number | Ped): number;
/**
 * Returns iSpinHash / iVariationSpin
 *
 * Hash: 0xF3B1620B920D1708 | Since: 1355
 *
 * @deprecated Use weapon.getPedGunSpinningHashFromWeaponEmoteVariation() instead
 */
export declare function getPedGunSpinningHashFromWeaponEmoteVariation(ped: number | Ped, weaponEmoteVariation: number): number;
/**
 * No comment provided
 *
 * Hash: 0x90EB1CB189923587 | Since: 1207
 *
 * @deprecated Use weapon.getPedHogtieWeapon() instead
 */
export declare function getPedHogtieWeapon(ped: number | Ped): number;
/**
 * slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
 *
 * Hash: 0xDBC4B552B2AE9A83 | Since: 1207
 *
 * @deprecated Use weapon.getPedWeaponInSlot() instead
 */
export declare function getPedWeaponInSlot(ped: number | Ped, slotHash: number | string): number;
/**
 * _GET_M* - _GET_PED_A*
 *
 * Hash: 0x6CA484C9A7377E4F | Since: 1207
 *
 * @deprecated Use weapon.getPedWeaponObject() instead
 */
export declare function getPedWeaponObject(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xDA37A053C1522F5D | Since: 1207
 *
 * @deprecated Use weapon.getPedWorstWeapon() instead
 */
export declare function getPedWorstWeapon(ped: number | Ped): number;
/**
 * Outputs cached guids
 *
 * Hash: 0xB7E52A058B07C7E2 | Since: 1232
 *
 * @deprecated Use weapon.getPlayerPedQuickSwapWeaponByGuid() instead
 */
export declare function getPlayerPedQuickSwapWeaponByGuid(ped: number | Ped, guidPrimary: any, guidSecondary: any): void;
/**
 * Gets the model hash from the weapon hash.
 *
 * Hash: 0xF70825EB340E7D15 | Since: 1207
 *
 * @deprecated Use weapon.getWeapontypeModel() instead
 */
export declare function getWeapontypeModel(weaponHash: number | string): number;
/**
 * Returns hash where WEAPON_ is replaced with SLOT_
 *
 * Hash: 0x46F032B8DDF46CDE | Since: 1207
 *
 * @deprecated Use weapon.getWeapontypeSlot() instead
 */
export declare function getWeapontypeSlot(weaponHash: number | string): number;
/**
 * Returns WeaponAttachPoint
 *
 * Hash: 0xCAD4FE9398820D24 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponAttachPoint() instead
 */
export declare function getWeaponAttachPoint(ped: number | Ped, attachPoint: number): number;
/**
 * No comment provided
 *
 * Hash: 0x59DE03442B6C9598 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponComponentTypeModel() instead
 */
export declare function getWeaponComponentTypeModel(componentHash: number | string): number;
/**
 * Related to weapon visual damage, not actual damage.
 *
 * Hash: 0x904103D5D2333977 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponDamage() instead
 */
export declare function getWeaponDamage(weaponObject: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x810E8AE9AFEA7E54 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponDirt() instead
 */
export declare function getWeaponDirt(weaponObject: number | Object): number;
/**
 * Returns weaponEmoteVariation
 *
 * WEAPON_EMOTE_VARIATION_INVALID = -2,
 * WEAPON_EMOTE_VARIATION_BASE,
 * WEAPON_EMOTE_VARIATION_A,
 * WEAPON_EMOTE_VARIATION_B,
 * WEAPON_EMOTE_VARIATION_C,
 * WEAPON_EMOTE_VARIATION_D,
 * WEAPON_EMOTE_VARIATION_PREVIEW,
 * WEAPON_EMOTE_NUM_VARIATIONS
 *
 * Hash: 0x86147D05FA831D3A | Since: 1355
 *
 * @deprecated Use weapon.getWeaponEmoteVariation() instead
 */
export declare function getWeaponEmoteVariation(ped: number | Ped, variation: number): number;
/**
 * Returns iSpinHash
 *
 * Hash: 0xF4601C1203B1A78D | Since: 1207
 *
 * @deprecated Use weapon.getWeaponGunSpinningWeaponEmoteTrickTypeHash() instead
 */
export declare function getWeaponGunSpinningWeaponEmoteTrickTypeHash(emote: number | string, weaponEmoteTrickType: number): number;
/**
 * Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
 *
 * Hash: 0x89CF5FF3D363311E | Since: 1207
 *
 * @deprecated Use weapon.getWeaponName() instead
 */
export declare function getWeaponName(weaponHash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x6D3AC61694A791C5 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponName2() instead
 */
export declare function getWeaponName2(weaponHash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x7A56D66C78D8EF8E | Since: 1207
 *
 * @deprecated Use weapon.getWeaponNameWithPermanentDegradation() instead
 */
export declare function getWeaponNameWithPermanentDegradation(weaponHash: number | string, permanentDegradationLevel: number): string;
/**
 * Detaches the weapon from the ped and actually removes the ped's weapon
 *
 * Hash: 0xC6A6789BB405D11C | Since: 1207
 *
 * @deprecated Use weapon.getWeaponObjectFromPed() instead
 */
export declare function getWeaponObjectFromPed(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x22084CA699219624 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponScale() instead
 */
export declare function getWeaponScale(weaponObject: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x4BF66F8878F67663 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponSoot() instead
 */
export declare function getWeaponSoot(weaponObject: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x8EC44AE8DECFF841 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponStatId() instead
 */
export declare function getWeaponStatId(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7AA043F6C41D151E | Since: 1207
 *
 * @deprecated Use weapon.getWeaponTypeFromAmmoType() instead
 */
export declare function getWeaponTypeFromAmmoType(ammoType: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x865F36299079FB75 | Since: 1207
 *
 * @deprecated Use weapon.getWeaponUnlock() instead
 */
export declare function getWeaponUnlock(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x899A04AFCC725D04 | Since: 1207
 *
 * @deprecated Use weapon.giveWeaponCollectionToPed() instead
 */
export declare function giveWeaponCollectionToPed(ped: number | Ped, weaponCollection: number | string): void;
/**
 * entity can be a ped or weapon object.
 *
 * Hash: 0x74C9090FDD1BB48E | Since: 1207
 *
 * @deprecated Use weapon.giveWeaponComponentToEntity() instead
 */
export declare function giveWeaponComponentToEntity(entity: number | Entity, componentHash: number | string, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x1A47699E8D533E8F | Since: 1207
 *
 * @deprecated Use weapon.giveWeaponComponentToWeaponObject() instead
 */
export declare function giveWeaponComponentToWeaponObject(weaponObject: number | Object, ped: number | Ped, componentHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xDCF06D0CDFF68424 | Since: 1207
 *
 * @deprecated Use weapon.hasEntityBeenDamagedByWeapon() instead
 */
export declare function hasEntityBeenDamagedByWeapon(entity: number | Entity, weaponName: number | string, weaponType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9E2D5D6BC97A5F1E | Since: 1207
 *
 * @deprecated Use weapon.hasEntityBeenDamagedByWeaponRecently() instead
 */
export declare function hasEntityBeenDamagedByWeaponRecently(entity: number | Entity, weaponHash: number | string, ms: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBBC67A6F965C688A | Since: 1207
 *
 * @deprecated Use weapon.hasPedGotWeaponComponent() instead
 */
export declare function hasPedGotWeaponComponent(ped: number | Ped, componentHash: number | string, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF07CF465F48B830 | Since: 1207
 *
 * @deprecated Use weapon.hasWeaponAssetLoaded() instead
 */
export declare function hasWeaponAssetLoaded(weaponHash: number | string): boolean;
/**
 * Unequip current weapon and set current weapon to WEAPON_UNARMED.
 * p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
 * immediately: if true it will instantly switch to unarmed
 *
 * Hash: 0xFCCC886EDE3C63EC | Since: 1207
 *
 * @deprecated Use weapon.hidePedWeapons() instead
 */
export declare function hidePedWeapons(ped: number | Ped, immediately: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x94A3C1B804D291EC | Since: 1207
 *
 * @deprecated Use weapon.holsterPedWeapons() instead
 */
export declare function holsterPedWeapons(ped: number | Ped, immediately: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD2866CBA797E872E | Since: 1232
 *
 * @deprecated Use weapon.isAmmoSilent() instead
 */
export declare function isAmmoSilent(ammoHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7EFACC589B98C488 | Since: 1207
 *
 * @deprecated Use weapon.isAmmoSilent2() instead
 */
export declare function isAmmoSilent2(ammoHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC570B881754DF609 | Since: 1207
 *
 * @deprecated Use weapon.isAmmoTypeValidForWeapon() instead
 */
export declare function isAmmoTypeValidForWeapon(weaponHash: number | string, ammoHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F7977C9101F807F | Since: 1207
 *
 * @deprecated Use weapon.isAmmoValid() instead
 */
export declare function isAmmoValid(ammoHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBDD9C235D8D1052E | Since: 1207
 *
 * @deprecated Use weapon.isPedCurrentWeaponHolstered() instead
 */
export declare function isPedCurrentWeaponHolstered(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D50F43298AB9545 | Since: 1232
 *
 * @deprecated Use weapon.isTargetPedConstrainedByPedUsingBolas() instead
 */
export declare function isTargetPedConstrainedByPedUsingBolas(ped: number | Ped, targetPed: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC853230E76A152DF | Since: 1207
 *
 * @deprecated Use weapon.isWeaponBinoculars() instead
 */
export declare function isWeaponBinoculars(weaponHash: number | string): boolean;
/**
 * Returns true if the ped is currently holstering or unholstering a weapon
 *
 * Hash: 0x2387D6E9C6B478AA | Since: 1207
 *
 * @deprecated Use weapon.isWeaponHolsterStateChanging() instead
 */
export declare function isWeaponHolsterStateChanging(ped: number | Ped): boolean;
/**
 * Returns true when the weapon passed is either a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 *
 * Hash: 0x6ABAD7B0A854F8FB | Since: 1207
 *
 * @deprecated Use weapon.isWeaponKit() instead
 */
export declare function isWeaponKit(weaponHash: number | string): boolean;
/**
 * Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
 * _IS_WEAPON_M* - _IS_WEAPON_P*
 *
 * Hash: 0x49E40483948AF062 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponKit2() instead
 */
export declare function isWeaponKit2(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x792E3EF76C911959 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponKnife() instead
 */
export declare function isWeaponKnife(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x79407D33328286C6 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponLantern() instead
 */
export declare function isWeaponLantern(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E4E1A82081EABED | Since: 1207
 *
 * @deprecated Use weapon.isWeaponLasso() instead
 */
export declare function isWeaponLasso(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD955FEE4B87AFA07 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponOneHanded() instead
 */
export declare function isWeaponOneHanded(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5809DBCA0A37C82B | Since: 1207
 *
 * @deprecated Use weapon.isWeaponSilent() instead
 */
export declare function isWeaponSilent(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6AD66548840472E5 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponSniper() instead
 */
export declare function isWeaponSniper(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30E7C16B12DA8211 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponThrowable() instead
 */
export declare function isWeaponThrowable(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x506F1DE1BFC75304 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponTorch() instead
 */
export declare function isWeaponTorch(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0556E9D2ECF39D01 | Since: 1207
 *
 * @deprecated Use weapon.isWeaponTwoHanded() instead
 */
export declare function isWeaponTwoHanded(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA5D3F2C6DD5B5D4 | Since: 1207
 *
 * @deprecated Use weapon.listenProjectileHitEvents() instead
 */
export declare function listenProjectileHitEvents(listen: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x79E1E511FF7EFB13 | Since: 1207
 *
 * @deprecated Use weapon.makePedReload() instead
 */
export declare function makePedReload(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0xDF4A3404D022ADDE | Since: 1207
 *
 * @deprecated Use weapon.refillAmmoInClip() instead
 */
export declare function refillAmmoInClip(ped: number | Ped, clipInventoryUid: any): any;
/**
 * No comment provided
 *
 * Hash: 0x0A2AB7B7ABC055F4 | Since: 1207
 *
 * @deprecated Use weapon.refillAmmoInCurrentPedWeapon() instead
 */
export declare function refillAmmoInCurrentPedWeapon(ped: number | Ped): any;
/**
 * No comment provided
 *
 * Hash: 0x1B83C0DEEBCBB214 | Since: 1207
 *
 * @deprecated Use weapon.removeAllPedAmmo() instead
 */
export declare function removeAllPedAmmo(ped: number | Ped): void;
/**
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 *
 * removeReason: see REMOVE_WEAPON_FROM_PED
 *
 * Hash: 0xF4823C813CB8277D | Since: 1207
 *
 * @deprecated Use weapon.removeAmmoFromPed() instead
 */
export declare function removeAmmoFromPed(ped: number | Ped, weaponHash: number | string, amount: number, removeReason: number | string): void;
/**
 * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
 *
 * removeReason: see REMOVE_WEAPON_FROM_PED
 *
 * Hash: 0xB6CFEC32E3742779 | Since: 1207
 *
 * @deprecated Use weapon.removeAmmoFromPedByType() instead
 */
export declare function removeAmmoFromPedByType(ped: number | Ped, ammoHash: number | string, amount: number, removeReason: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC3896D03E2852236 | Since: 1207
 *
 * @deprecated Use weapon.removeWeaponAsset() instead
 */
export declare function removeWeaponAsset(weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x19F70C4D80494FF8 | Since: 1207
 *
 * @deprecated Use weapon.removeWeaponComponentFromPed() instead
 */
export declare function removeWeaponComponentFromPed(ped: number | Ped, componentHash: number | string, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x51C3B71591811485 | Since: 1311
 *
 * @deprecated Use weapon.removeWeaponFromPedByGuid() instead
 */
export declare function removeWeaponFromPedByGuid(ped: number | Ped, weaponGuid: any, removeReason: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x72D4CB5DB927009C | Since: 1207
 *
 * @deprecated Use weapon.requestWeaponAsset() instead
 */
export declare function requestWeaponAsset(weaponHash: number | string): void;
/**
 * Appears to just send specified weapon to your horse holster without having to be close
 * However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
 *
 * Hash: 0xE9BD19F8121ADE3E | Since: 1207
 *
 * @deprecated Use weapon.sendWeaponToInventory() instead
 */
export declare function sendWeaponToInventory(ped: number | Ped, weaponHash: number | string): void;
/**
 * emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
 *
 * Hash: 0xCBCFFF805F1B4596 | Since: 1311
 *
 * @deprecated Use weapon.setActiveGunSpinningEquipKitEmoteTwirl() instead
 */
export declare function setActiveGunSpinningEquipKitEmoteTwirl(ped: number | Ped, emote: number | string): void;
/**
 * spinHash can be -1, 0 to disable
 *
 * Hash: 0x01F661BB9C71B465 | Since: 1207
 *
 * @deprecated Use weapon.setActiveGunSpinningKitEmoteTwirl() instead
 */
export declare function setActiveGunSpinningKitEmoteTwirl(ped: number | Ped, weaponEmoteTrickType: number, spin: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x83B8D50EB9446BBA | Since: 1207
 *
 * @deprecated Use weapon.setAllowDualWield() instead
 */
export declare function setAllowDualWield(ped: number | Ped, allow: boolean): void;
/**
 * turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
 *
 * Hash: 0xBDDA0C290C228159 | Since: 1207
 *
 * @deprecated Use weapon.setAmmoInTurret() instead
 */
export declare function setAmmoInTurret(vehicle: number | Vehicle, turretHash: number | string, ammo: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCC9C4393523833E2 | Since: 1207
 *
 * @deprecated Use weapon.setAmmoTypeForPedWeapon() instead
 */
export declare function setAmmoTypeForPedWeapon(ped: number | Ped, weaponHash: number | string, ammoHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xEBE46B501BC3FBCF | Since: 1207
 *
 * @deprecated Use weapon.setAmmoTypeForPedWeaponInventory() instead
 */
export declare function setAmmoTypeForPedWeaponInventory(ped: number | Ped, weaponInventoryUid: any, ammoHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xBE711B14A159E84F | Since: 1207
 *
 * @deprecated Use weapon.setForceAutoEquip() instead
 */
export declare function setForceAutoEquip(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5230D3F6EE56CFE6 | Since: 1207
 *
 * @deprecated Use weapon.setForceCurrentWeaponIntoCockedState() instead
 */
export declare function setForceCurrentWeaponIntoCockedState(ped: number | Ped, attachPoint: number): void;
/**
 * _STOP_* - _TEST_*
 *
 * Hash: 0x408CF580C5E96D49 | Since: 1355
 *
 * @deprecated Use weapon.setGunSpinningInventorySlotIdActivate() instead
 */
export declare function setGunSpinningInventorySlotIdActivate(ped: number | Ped, emoteType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4F806A6CFED89468 | Since: 1207
 *
 * @deprecated Use weapon.setPedAllWeaponsVisibility() instead
 */
export declare function setPedAllWeaponsVisibility(ped: number | Ped, visible: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFBAA1E06B6BCA741 | Since: 1207
 *
 * @deprecated Use weapon.setPedInfiniteAmmoClip() instead
 */
export declare function setPedInfiniteAmmoClip(ped: number | Ped, toggle: boolean): void;
/**
 * attachPoint: see SET_CURRENT_PED_WEAPON
 *
 * Hash: 0x67E21ACC5C0C970C | Since: 1207
 *
 * @deprecated Use weapon.setPedWeaponAttachPointVisibility() instead
 */
export declare function setPedWeaponAttachPointVisibility(ped: number | Ped, attachPoint: number, visible: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x56CB3B4305A4F7CE | Since: 1207
 *
 * @deprecated Use weapon.setVehicleWeaponHeadingLimits() instead
 */
export declare function setVehicleWeaponHeadingLimits(vehicle: number | Vehicle, minHeading: number, maxHeading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBF5987E1CDE63501 | Since: 1207
 *
 * @deprecated Use weapon.setVehicleWeaponHeadingLimits2() instead
 */
export declare function setVehicleWeaponHeadingLimits2(vehicle: number | Vehicle, minHeading: number, maxHeading: number): any;
/**
 * Related to weapon visual damage, not actual damage.
 *
 * Hash: 0xE22060121602493B | Since: 1207
 *
 * @deprecated Use weapon.setWeaponDamage() instead
 */
export declare function setWeaponDamage(weaponObject: number | Object, level: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA7A57E89E965D839 | Since: 1207
 *
 * @deprecated Use weapon.setWeaponDegradation() instead
 */
export declare function setWeaponDegradation(weaponObject: number | Object, level: number): void;
/**
 * No comment provided
 *
 * Hash: 0x812CE61DEBCAB948 | Since: 1207
 *
 * @deprecated Use weapon.setWeaponDirt() instead
 */
export declare function setWeaponDirt(weaponObject: number | Object, level: number): void;
/**
 * every other level will have the max value of (brokeLevel - threshold)
 *
 * Hash: 0xD4071EFC83794B2F | Since: 1207
 *
 * @deprecated Use weapon.setWeaponLevelThreshold() instead
 */
export declare function setWeaponLevelThreshold(weaponObject: number | Object, threshold: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC3544AD0522E69B4 | Since: 1207
 *
 * @deprecated Use weapon.setWeaponScale() instead
 */
export declare function setWeaponScale(weaponObject: number | Object, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA9EF4AD10BDDDB57 | Since: 1207
 *
 * @deprecated Use weapon.setWeaponSoot() instead
 */
export declare function setWeaponSoot(weaponObject: number | Object, level: number): void;
/**
 * Returns name hash, see common:/data/levels/rdr3/mapzones.meta
 *
 * type (-1 matches any type):
 * class CMapZone
 * {
 * public:
 * enum class Type
 * {
 * STATE,
 * TOWN,
 * LAKE,
 * RIVER,
 * OIL_SPILL,
 * SWAMP,
 * OCEAN,
 * CREEK,
 * POND,
 * GLACIER,
 * DISTRICT,
 * TEXT_PRINTED,
 * TEXT_WRITTEN
 * };
 * };
 *
 * https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
 *
 * Hash: 0x43AD8FC02B429D33 | Since: 1207
 *
 * @deprecated Use zone.getMapZoneAtCoords() instead
 */
export declare function getMapZoneAtCoords(pos: Vector3, type: number): number;
/**
 * Returns the zone's name hash if its type matches one of the following:
 * - LAKE
 * - RIVER
 * - OIL_SPILL
 * - SWAMP
 * - OCEAN
 * - CREEK
 * - POND
 * - GLACIER
 *
 * Hash: 0x5BA7A68A346A5A91 | Since: 1207
 *
 * @deprecated Use zone.getWaterMapZoneAtCoords() instead
 */
export declare function getWaterMapZoneAtCoords(pos: Vector3): number;
/**
 * nullsub, doesn't do anything
 * however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
 * badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
 *
 * Hash: 0xC31C44C43B48FDE3 | Since: 1207
 *
 * @deprecated Use _namespace4.reportPlayerBadSportBehavior() instead
 */
export declare function reportPlayerBadSportBehavior(gamerHandle: any, badSportBehaviorType: number): void;
